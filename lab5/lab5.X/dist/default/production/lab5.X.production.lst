

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 20 21:43:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	strings
   291  01CA                     __pstrings:
   292  01CA                     stringtab:
   293  01CA                     __stringtab:
   294  01CA                     stringcode:	
   295                           ;	String table - string pointers are 1 byte each
   296                           
   297  01CA                     stringdir:
   298  01CA  3001               	movlw	high stringdir
   299  01CB  008A               	movwf	10
   300  01CC  0804               	movf	4,w
   301  01CD  0A84               	incf	4,f
   302  01CE  0782               	addwf	2,f
   303  01CF                     __stringbase:
   304  01CF  3400               	retlw	0
   305  01D0                     __end_of__stringtab:
   306  01D0                     _dpowers:
   307  01D0  3401               	retlw	1
   308  01D1  3400               	retlw	0
   309  01D2  340A               	retlw	10
   310  01D3  3400               	retlw	0
   311  01D4  3464               	retlw	100
   312  01D5  3400               	retlw	0
   313  01D6  34E8               	retlw	232
   314  01D7  3403               	retlw	3
   315  01D8  3410               	retlw	16
   316  01D9  3427               	retlw	39
   317  01DA                     __end_of_dpowers:
   318  0019                     _TXREG	set	25
   319  000D                     _PIR2bits	set	13
   320  0018                     _RCSTAbits	set	24
   321  0006                     _PORTB	set	6
   322  001A                     _RCREG	set	26
   323  0008                     _PORTD	set	8
   324  000C                     _PIR1bits	set	12
   325  000B                     _INTCONbits	set	11
   326  0005                     _PORTA	set	5
   327  0006                     _PORTBbits	set	6
   328  0058                     _RBIF	set	88
   329  009A                     _SPBRGH	set	154
   330  0099                     _SPBRG	set	153
   331  0098                     _TXSTAbits	set	152
   332  0096                     _IOCBbits	set	150
   333  0095                     _WPUBbits	set	149
   334  0081                     _OPTION_REGbits	set	129
   335  0088                     _TRISD	set	136
   336  0086                     _TRISB	set	134
   337  0085                     _TRISA	set	133
   338  008F                     _OSCCONbits	set	143
   339  010C                     _EEDAT	set	268
   340  010D                     _EEADR	set	269
   341  018D                     _EECON2	set	397
   342  018C                     _EECON1bits	set	396
   343  0187                     _BAUDCTLbits	set	391
   344  0188                     _ANSEL	set	392
   345  0189                     _ANSELH	set	393
   346  01DA                     STR_2:
   347  01DA  3463               	retlw	99	;'c'
   348  01DB  346F               	retlw	111	;'o'
   349  01DC  346E               	retlw	110	;'n'
   350  01DD  3474               	retlw	116	;'t'
   351  01DE  3461               	retlw	97	;'a'
   352  01DF  3464               	retlw	100	;'d'
   353  01E0  346F               	retlw	111	;'o'
   354  01E1  3472               	retlw	114	;'r'
   355  01E2  3420               	retlw	32	;' '
   356  01E3  3462               	retlw	98	;'b'
   357  01E4  346F               	retlw	111	;'o'
   358  01E5  3474               	retlw	116	;'t'
   359  01E6  346F               	retlw	111	;'o'
   360  01E7  346E               	retlw	110	;'n'
   361  01E8  3465               	retlw	101	;'e'
   362  01E9  3473               	retlw	115	;'s'
   363  01EA  343A               	retlw	58	;':'
   364  01EB  3420               	retlw	32	;' '
   365  01EC  3425               	retlw	37	;'%'
   366  01ED  3464               	retlw	100	;'d'
   367  01EE  3420               	retlw	32	;' '
   368  01EF  340A               	retlw	10
   369  01F0  3400               	retlw	0
   370  01F1                     STR_1:
   371  01F1  3425               	retlw	37	;'%'
   372  01F2  3464               	retlw	100	;'d'
   373  01F3  340A               	retlw	10
   374  01F4  3400               	retlw	0
   375                           
   376                           	psect	cinit
   377  000F                     start_initialization:	
   378                           ; #config settings
   379                           
   380  000F                     __initialization:
   381                           
   382                           ; Clear objects allocated to BANK0
   383  000F  1283               	bcf	3,5	;RP0=0, select bank0
   384  0010  1303               	bcf	3,6	;RP1=0, select bank0
   385  0011  01B9               	clrf	__pbssBANK0& (0+127)
   386  0012                     end_of_initialization:	
   387                           ;End of C runtime variable initialization code
   388                           
   389  0012                     __end_of__initialization:
   390  0012  0183               	clrf	3
   391  0013  120A  118A  29F5   	ljmp	_main	;jump to C main() function
   392                           
   393                           	psect	bssBANK0
   394  0039                     __pbssBANK0:
   395  0039                     _cont:
   396  0039                     	ds	1
   397                           
   398                           	psect	cstackCOMMON
   399  0070                     __pcstackCOMMON:
   400  0070                     ?_setup:
   401  0070                     ?_enviocadena:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_isr:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ??_isr:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_main:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_enviocaracter:	
   414                           ; 1 bytes @ 0x0
   415                           
   416                           
   417                           ; 1 bytes @ 0x0
   418  0070                     	ds	3
   419  0073                     ??_enviocaracter:
   420  0073                     ?___lwdiv:	
   421                           ; 1 bytes @ 0x3
   422                           
   423  0073                     enviocaracter@a:	
   424                           ; 2 bytes @ 0x3
   425                           
   426  0073                     ___lwdiv@divisor:	
   427                           ; 1 bytes @ 0x3
   428                           
   429                           
   430                           ; 2 bytes @ 0x3
   431  0073                     	ds	1
   432  0074                     ??_enviocadena:
   433                           
   434                           ; 1 bytes @ 0x4
   435  0074                     	ds	1
   436  0075                     enviocadena@cadena:
   437  0075                     ___lwdiv@dividend:	
   438                           ; 1 bytes @ 0x5
   439                           
   440                           
   441                           ; 2 bytes @ 0x5
   442  0075                     	ds	2
   443  0077                     ??___lwdiv:
   444                           
   445                           ; 1 bytes @ 0x7
   446  0077                     	ds	1
   447  0078                     ___lwdiv@quotient:
   448                           
   449                           ; 2 bytes @ 0x8
   450  0078                     	ds	2
   451  007A                     ___lwdiv@counter:
   452                           
   453                           ; 1 bytes @ 0xA
   454  007A                     	ds	1
   455                           
   456                           	psect	cstackBANK0
   457  0020                     __pcstackBANK0:
   458  0020                     ?___lwmod:
   459  0020                     ___lwmod@divisor:	
   460                           ; 2 bytes @ 0x0
   461                           
   462                           
   463                           ; 2 bytes @ 0x0
   464  0020                     	ds	2
   465  0022                     ___lwmod@dividend:
   466                           
   467                           ; 2 bytes @ 0x2
   468  0022                     	ds	2
   469  0024                     ??___lwmod:
   470                           
   471                           ; 1 bytes @ 0x4
   472  0024                     	ds	1
   473  0025                     ___lwmod@counter:
   474                           
   475                           ; 1 bytes @ 0x5
   476  0025                     	ds	1
   477  0026                     ?_sprintf:
   478  0026                     sprintf@f:	
   479                           ; 2 bytes @ 0x6
   480                           
   481                           
   482                           ; 1 bytes @ 0x6
   483  0026                     	ds	3
   484  0029                     ??_sprintf:
   485                           
   486                           ; 1 bytes @ 0x9
   487  0029                     	ds	3
   488  002C                     sprintf@ap:
   489                           
   490                           ; 1 bytes @ 0xC
   491  002C                     	ds	1
   492  002D                     sprintf@flag:
   493                           
   494                           ; 1 bytes @ 0xD
   495  002D                     	ds	1
   496  002E                     sprintf@prec:
   497                           
   498                           ; 1 bytes @ 0xE
   499  002E                     	ds	1
   500  002F                     sprintf@val:
   501                           
   502                           ; 2 bytes @ 0xF
   503  002F                     	ds	2
   504  0031                     sprintf@sp:
   505                           
   506                           ; 1 bytes @ 0x11
   507  0031                     	ds	1
   508  0032                     sprintf@c:
   509                           
   510                           ; 1 bytes @ 0x12
   511  0032                     	ds	1
   512  0033                     ??_setup:
   513                           
   514                           ; 1 bytes @ 0x13
   515  0033                     	ds	3
   516  0036                     ??_main:
   517                           
   518                           ; 1 bytes @ 0x16
   519  0036                     	ds	3
   520                           
   521                           	psect	maintext
   522  01F5                     __pmaintext:	
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 61 in file "lab5.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : B00/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       3       0       0       0
   545 ;;      Totals:         0       3       0       0       0
   546 ;;Total ram usage:        3 bytes
   547 ;; Hardware stack levels required when called:    4
   548 ;; This function calls:
   549 ;;		_enviocadena
   550 ;;		_setup
   551 ;;		_sprintf
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _main
   559  01F5                     _main:
   560  01F5                     l1157:	
   561                           ;incstack = 0
   562                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   563                           
   564                           
   565                           ;lab5.c: 62:     setup();
   566  01F5  120A  118A  2100  120A  118A  	fcall	_setup
   567  01FA                     l1159:
   568  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   569  01FB  1303               	bcf	3,6	;RP1=0, select bank0
   570  01FC  1E8C               	btfss	12,5	;volatile
   571  01FD  29FF               	goto	u541
   572  01FE  2A00               	goto	u540
   573  01FF                     u541:
   574  01FF  29FA               	goto	l1159
   575  0200                     u540:
   576  0200                     l1161:
   577                           
   578                           ;lab5.c: 67:                  PORTD = RCREG;
   579  0200  081A               	movf	26,w	;volatile
   580  0201  0088               	movwf	8	;volatile
   581  0202                     l1163:
   582                           
   583                           ;lab5.c: 68:                  sprintf(cont, "%d\n", PORTA);
   584  0202  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   585  0203  00B6               	movwf	??_main
   586  0204  0836               	movf	??_main,w
   587  0205  00A6               	movwf	sprintf@f
   588  0206  0805               	movf	5,w	;volatile
   589  0207  00B7               	movwf	??_main+1
   590  0208  01B8               	clrf	??_main+2
   591  0209  0837               	movf	??_main+1,w
   592  020A  00A7               	movwf	?_sprintf+1
   593  020B  0838               	movf	??_main+2,w
   594  020C  00A8               	movwf	?_sprintf+2
   595  020D  3039               	movlw	(low (_cont| 0))& (0+255)
   596  020E  120A  118A  2016  120A  118A  	fcall	_sprintf
   597  0213                     l1165:
   598                           
   599                           ;lab5.c: 69:                  enviocadena(cont);}}
   600  0213  3039               	movlw	(low (_cont| 0))& (0+255)
   601  0214  120A  118A  221D  120A  118A  	fcall	_enviocadena
   602  0219  29FA               	goto	l1159
   603  021A  120A  118A  280C   	ljmp	start
   604  021D                     __end_of_main:
   605                           
   606                           	psect	text1
   607  0100                     __ptext1:	
   608 ;; *************** function _setup *****************
   609 ;; Defined at:
   610 ;;		line 74 in file "lab5.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          0       3       0       0       0
   627 ;;      Totals:         0       3       0       0       0
   628 ;;Total ram usage:        3 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    3
   631 ;; This function calls:
   632 ;;		_enviocadena
   633 ;;		_sprintf
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _setup
   641  0100                     _setup:
   642  0100                     l1099:	
   643                           ;incstack = 0
   644                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   645                           
   646                           
   647                           ;lab5.c: 78:     OSCCONbits.IRCF = 7;
   648  0100  3070               	movlw	112
   649  0101  1683               	bsf	3,5	;RP0=1, select bank1
   650  0102  1303               	bcf	3,6	;RP1=0, select bank1
   651  0103  048F               	iorwf	15,f	;volatile
   652  0104                     l1101:
   653                           
   654                           ;lab5.c: 79:     OSCCONbits.SCS = 1;
   655  0104  140F               	bsf	15,0	;volatile
   656  0105                     l1103:
   657                           
   658                           ;lab5.c: 81:     ANSELH = 0;
   659  0105  1683               	bsf	3,5	;RP0=1, select bank3
   660  0106  1703               	bsf	3,6	;RP1=1, select bank3
   661  0107  0189               	clrf	9	;volatile
   662  0108                     l1105:
   663                           
   664                           ;lab5.c: 82:     ANSEL = 0;
   665  0108  0188               	clrf	8	;volatile
   666  0109                     l1107:
   667                           
   668                           ;lab5.c: 83:     TRISA = 0;
   669  0109  1683               	bsf	3,5	;RP0=1, select bank1
   670  010A  1303               	bcf	3,6	;RP1=0, select bank1
   671  010B  0185               	clrf	5	;volatile
   672  010C                     l1109:
   673                           
   674                           ;lab5.c: 84:     TRISB = 3;
   675  010C  3003               	movlw	3
   676  010D  0086               	movwf	6	;volatile
   677  010E                     l1111:
   678                           
   679                           ;lab5.c: 85:     TRISD = 0;
   680  010E  0188               	clrf	8	;volatile
   681  010F                     l1113:
   682                           
   683                           ;lab5.c: 86:     OPTION_REGbits.nRBPU = 0;
   684  010F  1381               	bcf	1,7	;volatile
   685  0110                     l1115:
   686                           
   687                           ;lab5.c: 87:     WPUBbits.WPUB0 = 1;
   688  0110  1415               	bsf	21,0	;volatile
   689  0111                     l1117:
   690                           
   691                           ;lab5.c: 88:     WPUBbits.WPUB1 = 1;
   692  0111  1495               	bsf	21,1	;volatile
   693  0112                     l1119:
   694                           
   695                           ;lab5.c: 89:     PORTA = 0;
   696  0112  1283               	bcf	3,5	;RP0=0, select bank0
   697  0113  1303               	bcf	3,6	;RP1=0, select bank0
   698  0114  0185               	clrf	5	;volatile
   699  0115                     l1121:
   700                           
   701                           ;lab5.c: 90:     PORTB = 0;
   702  0115  0186               	clrf	6	;volatile
   703  0116                     l1123:
   704                           
   705                           ;lab5.c: 91:     PORTD = 0;
   706  0116  0188               	clrf	8	;volatile
   707  0117                     l1125:
   708                           
   709                           ;lab5.c: 93:     IOCBbits.IOCB0 = 1;
   710  0117  1683               	bsf	3,5	;RP0=1, select bank1
   711  0118  1303               	bcf	3,6	;RP1=0, select bank1
   712  0119  1416               	bsf	22,0	;volatile
   713  011A                     l1127:
   714                           
   715                           ;lab5.c: 94:     IOCBbits.IOCB1 = 1;
   716  011A  1496               	bsf	22,1	;volatile
   717  011B                     l1129:
   718                           
   719                           ;lab5.c: 96:     TXSTAbits.SYNC = 0;
   720  011B  1218               	bcf	24,4	;volatile
   721  011C                     l1131:
   722                           
   723                           ;lab5.c: 97:     TXSTAbits.BRGH = 1;
   724  011C  1518               	bsf	24,2	;volatile
   725  011D                     l1133:
   726                           
   727                           ;lab5.c: 99:     BAUDCTLbits.BRG16 = 1;
   728  011D  1683               	bsf	3,5	;RP0=1, select bank3
   729  011E  1703               	bsf	3,6	;RP1=1, select bank3
   730  011F  1587               	bsf	7,3	;volatile
   731  0120                     l1135:
   732                           
   733                           ;lab5.c: 101:     SPBRG = 207;
   734  0120  30CF               	movlw	207
   735  0121  1683               	bsf	3,5	;RP0=1, select bank1
   736  0122  1303               	bcf	3,6	;RP1=0, select bank1
   737  0123  0099               	movwf	25	;volatile
   738  0124                     l1137:
   739                           
   740                           ;lab5.c: 102:     SPBRGH = 0;
   741  0124  019A               	clrf	26	;volatile
   742  0125                     l1139:
   743                           
   744                           ;lab5.c: 104:     RCSTAbits.SPEN = 1;
   745  0125  1283               	bcf	3,5	;RP0=0, select bank0
   746  0126  1303               	bcf	3,6	;RP1=0, select bank0
   747  0127  1798               	bsf	24,7	;volatile
   748  0128                     l1141:
   749                           
   750                           ;lab5.c: 105:     RCSTAbits.RX9 = 0;
   751  0128  1318               	bcf	24,6	;volatile
   752  0129                     l1143:
   753                           
   754                           ;lab5.c: 106:     RCSTAbits.CREN = 1;
   755  0129  1618               	bsf	24,4	;volatile
   756  012A                     l1145:
   757                           
   758                           ;lab5.c: 108:     TXSTAbits.TXEN = 1;
   759  012A  1683               	bsf	3,5	;RP0=1, select bank1
   760  012B  1303               	bcf	3,6	;RP1=0, select bank1
   761  012C  1698               	bsf	24,5	;volatile
   762  012D                     l1147:
   763                           
   764                           ;lab5.c: 110:     INTCONbits.GIE = 1;
   765  012D  178B               	bsf	11,7	;volatile
   766  012E                     l1149:
   767                           
   768                           ;lab5.c: 111:     INTCONbits.RBIE = 1;
   769  012E  158B               	bsf	11,3	;volatile
   770  012F                     l1151:
   771                           
   772                           ;lab5.c: 112:     INTCONbits.PEIE = 1;
   773  012F  170B               	bsf	11,6	;volatile
   774  0130                     l1153:
   775                           
   776                           ;lab5.c: 113:     sprintf(cont, "contador botones: %d \n", PORTA);
   777  0130  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   778  0131  1283               	bcf	3,5	;RP0=0, select bank0
   779  0132  1303               	bcf	3,6	;RP1=0, select bank0
   780  0133  00B3               	movwf	??_setup
   781  0134  0833               	movf	??_setup,w
   782  0135  00A6               	movwf	sprintf@f
   783  0136  0805               	movf	5,w	;volatile
   784  0137  00B4               	movwf	??_setup+1
   785  0138  01B5               	clrf	??_setup+2
   786  0139  0834               	movf	??_setup+1,w
   787  013A  00A7               	movwf	?_sprintf+1
   788  013B  0835               	movf	??_setup+2,w
   789  013C  00A8               	movwf	?_sprintf+2
   790  013D  3039               	movlw	(low (_cont| 0))& (0+255)
   791  013E  120A  118A  2016  120A  118A  	fcall	_sprintf
   792  0143                     l1155:
   793                           
   794                           ;lab5.c: 114:     enviocadena(cont);
   795  0143  3039               	movlw	(low (_cont| 0))& (0+255)
   796  0144  120A  118A  221D  120A  118A  	fcall	_enviocadena
   797  0149                     l72:
   798  0149  0008               	return
   799  014A                     __end_of_setup:
   800                           
   801                           	psect	text2
   802  0016                     __ptext2:	
   803 ;; *************** function _sprintf *****************
   804 ;; Defined at:
   805 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  sp              1    wreg     PTR unsigned char 
   808 ;;		 -> cont(1), 
   809 ;;  f               1    6[BANK0 ] PTR const unsigned char 
   810 ;;		 -> STR_2(23), STR_1(4), 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  sp              1   17[BANK0 ] PTR unsigned char 
   813 ;;		 -> cont(1), 
   814 ;;  tmpval          4    0        struct .
   815 ;;  val             2   15[BANK0 ] unsigned int 
   816 ;;  cp              2    0        PTR const unsigned char 
   817 ;;  len             2    0        unsigned int 
   818 ;;  c               1   18[BANK0 ] unsigned char 
   819 ;;  prec            1   14[BANK0 ] char 
   820 ;;  flag            1   13[BANK0 ] unsigned char 
   821 ;;  ap              1   12[BANK0 ] PTR void [1]
   822 ;;		 -> ?_sprintf(2), 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2    6[BANK0 ] int 
   825 ;; Registers used:
   826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       3       0       0       0
   833 ;;      Locals:         0       7       0       0       0
   834 ;;      Temps:          0       3       0       0       0
   835 ;;      Totals:         0      13       0       0       0
   836 ;;Total ram usage:       13 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    2
   839 ;; This function calls:
   840 ;;		___lwdiv
   841 ;;		___lwmod
   842 ;; This function is called by:
   843 ;;		_main
   844 ;;		_setup
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _sprintf
   850  0016                     _sprintf:
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   854                           ;sprintf@sp stored from wreg
   855  0016  1283               	bcf	3,5	;RP0=0, select bank0
   856  0017  1303               	bcf	3,6	;RP1=0, select bank0
   857  0018  00B1               	movwf	sprintf@sp
   858  0019                     l1027:
   859                           
   860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   861  0019  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   862  001A  00A9               	movwf	??_sprintf
   863  001B  0829               	movf	??_sprintf,w
   864  001C  00AC               	movwf	sprintf@ap
   865                           
   866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   867  001D  28E9               	goto	l1079
   868  001E                     l1029:
   869                           
   870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   871  001E  3025               	movlw	37
   872  001F  0632               	xorwf	sprintf@c,w
   873  0020  1903               	btfsc	3,2
   874  0021  2823               	goto	u451
   875  0022  2824               	goto	u450
   876  0023                     u451:
   877  0023  2830               	goto	l1035
   878  0024                     u450:
   879  0024                     l1031:
   880                           
   881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   882  0024  0832               	movf	sprintf@c,w
   883  0025  00A9               	movwf	??_sprintf
   884  0026  0831               	movf	sprintf@sp,w
   885  0027  0084               	movwf	4
   886  0028  0829               	movf	??_sprintf,w
   887  0029  1383               	bcf	3,7	;select IRP bank0
   888  002A  0080               	movwf	0
   889  002B                     l1033:
   890  002B  3001               	movlw	1
   891  002C  00A9               	movwf	??_sprintf
   892  002D  0829               	movf	??_sprintf,w
   893  002E  07B1               	addwf	sprintf@sp,f
   894                           
   895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   896  002F  28E9               	goto	l1079
   897  0030                     l1035:
   898                           
   899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   900  0030  01AD               	clrf	sprintf@flag
   901  0031                     l1039:	
   902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   903                           
   904  0031  3001               	movlw	1
   905  0032  07A6               	addwf	sprintf@f,f
   906  0033  30FF               	movlw	-1
   907  0034  0726               	addwf	sprintf@f,w
   908  0035  0084               	movwf	4
   909  0036  120A  118A  21CA  120A  118A  	fcall	stringdir
   910  003B  00B2               	movwf	sprintf@c
   911  003C  00A9               	movwf	??_sprintf
   912  003D  01AA               	clrf	??_sprintf+1
   913                           
   914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   915                           ; Switch size 1, requested type "simple"
   916                           ; Number of cases is 1, Range of values is 0 to 0
   917                           ; switch strategies available:
   918                           ; Name         Instructions Cycles
   919                           ; simple_byte            4     3 (average)
   920                           ; direct_byte           11     8 (fixed)
   921                           ; jumptable            260     6 (fixed)
   922                           ;	Chosen strategy is simple_byte
   923  003E  082A               	movf	??_sprintf+1,w
   924  003F  3A00               	xorlw	0	; case 0
   925  0040  1903               	skipnz
   926  0041  2843               	goto	l1187
   927  0042  28E9               	goto	l1079
   928  0043                     l1187:
   929                           
   930                           ; Switch size 1, requested type "simple"
   931                           ; Number of cases is 3, Range of values is 0 to 105
   932                           ; switch strategies available:
   933                           ; Name         Instructions Cycles
   934                           ; simple_byte           10     6 (average)
   935                           ; jumptable            260     6 (fixed)
   936                           ;	Chosen strategy is simple_byte
   937  0043  0829               	movf	??_sprintf,w
   938  0044  3A00               	xorlw	0	; case 0
   939  0045  1903               	skipnz
   940  0046  28FB               	goto	l1081
   941  0047  3A64               	xorlw	100	; case 100
   942  0048  1903               	skipnz
   943  0049  284E               	goto	l1041
   944  004A  3A0D               	xorlw	13	; case 105
   945  004B  1903               	skipnz
   946  004C  284E               	goto	l1041
   947  004D  28E9               	goto	l1079
   948  004E                     l1041:
   949                           
   950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   951  004E  082C               	movf	sprintf@ap,w
   952  004F  0084               	movwf	4
   953  0050  1383               	bcf	3,7	;select IRP bank0
   954  0051  0800               	movf	0,w
   955  0052  00AF               	movwf	sprintf@val
   956  0053  0A84               	incf	4,f
   957  0054  0800               	movf	0,w
   958  0055  00B0               	movwf	sprintf@val+1
   959  0056                     l1043:
   960  0056  3002               	movlw	2
   961  0057  00A9               	movwf	??_sprintf
   962  0058  0829               	movf	??_sprintf,w
   963  0059  07AC               	addwf	sprintf@ap,f
   964  005A                     l1045:
   965                           
   966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   967  005A  1FB0               	btfss	sprintf@val+1,7
   968  005B  285D               	goto	u461
   969  005C  285E               	goto	u460
   970  005D                     u461:
   971  005D  2867               	goto	l1051
   972  005E                     u460:
   973  005E                     l1047:
   974                           
   975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   976  005E  3003               	movlw	3
   977  005F  00A9               	movwf	??_sprintf
   978  0060  0829               	movf	??_sprintf,w
   979  0061  04AD               	iorwf	sprintf@flag,f
   980  0062                     l1049:
   981                           
   982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   983  0062  09AF               	comf	sprintf@val,f
   984  0063  09B0               	comf	sprintf@val+1,f
   985  0064  0AAF               	incf	sprintf@val,f
   986  0065  1903               	skipnz
   987  0066  0AB0               	incf	sprintf@val+1,f
   988  0067                     l1051:
   989                           
   990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   991  0067  01B2               	clrf	sprintf@c
   992  0068  0AB2               	incf	sprintf@c,f
   993  0069                     l1057:
   994                           
   995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   996  0069  0832               	movf	sprintf@c,w
   997  006A  00A9               	movwf	??_sprintf
   998  006B  0729               	addwf	??_sprintf,w
   999  006C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1000  006D  0084               	movwf	4
  1001  006E  120A  118A  21CA  120A  118A  	fcall	stringdir
  1002  0073  00AA               	movwf	??_sprintf+1
  1003  0074  120A  118A  21CA  120A  118A  	fcall	stringdir
  1004  0079  00AB               	movwf	??_sprintf+2
  1005  007A  082B               	movf	??_sprintf+2,w
  1006  007B  0230               	subwf	sprintf@val+1,w
  1007  007C  1D03               	skipz
  1008  007D  2880               	goto	u475
  1009  007E  082A               	movf	??_sprintf+1,w
  1010  007F  022F               	subwf	sprintf@val,w
  1011  0080                     u475:
  1012  0080  1803               	skipnc
  1013  0081  2883               	goto	u471
  1014  0082  2884               	goto	u470
  1015  0083                     u471:
  1016  0083  2885               	goto	l1061
  1017  0084                     u470:
  1018  0084  288F               	goto	l1063
  1019  0085                     l1061:
  1020  0085  3001               	movlw	1
  1021  0086  00A9               	movwf	??_sprintf
  1022  0087  0829               	movf	??_sprintf,w
  1023  0088  07B2               	addwf	sprintf@c,f
  1024  0089  3005               	movlw	5
  1025  008A  0632               	xorwf	sprintf@c,w
  1026  008B  1D03               	btfss	3,2
  1027  008C  288E               	goto	u481
  1028  008D  288F               	goto	u480
  1029  008E                     u481:
  1030  008E  2869               	goto	l1057
  1031  008F                     u480:
  1032  008F                     l1063:
  1033                           
  1034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1035  008F  082D               	movf	sprintf@flag,w
  1036  0090  3903               	andlw	3
  1037  0091  1903               	btfsc	3,2
  1038  0092  2894               	goto	u491
  1039  0093  2895               	goto	u490
  1040  0094                     u491:
  1041  0094  28A0               	goto	l1069
  1042  0095                     u490:
  1043  0095                     l1065:
  1044                           
  1045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1046  0095  302D               	movlw	45
  1047  0096  00A9               	movwf	??_sprintf
  1048  0097  0831               	movf	sprintf@sp,w
  1049  0098  0084               	movwf	4
  1050  0099  0829               	movf	??_sprintf,w
  1051  009A  1383               	bcf	3,7	;select IRP bank0
  1052  009B  0080               	movwf	0
  1053  009C                     l1067:
  1054  009C  3001               	movlw	1
  1055  009D  00A9               	movwf	??_sprintf
  1056  009E  0829               	movf	??_sprintf,w
  1057  009F  07B1               	addwf	sprintf@sp,f
  1058  00A0                     l1069:
  1059                           
  1060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1061  00A0  0832               	movf	sprintf@c,w
  1062  00A1  00A9               	movwf	??_sprintf
  1063  00A2  0829               	movf	??_sprintf,w
  1064  00A3  00AE               	movwf	sprintf@prec
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1067  00A4  28E0               	goto	l1077
  1068  00A5                     l1071:
  1069                           
  1070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1071  00A5  300A               	movlw	10
  1072  00A6  00A0               	movwf	___lwmod@divisor
  1073  00A7  3000               	movlw	0
  1074  00A8  00A1               	movwf	___lwmod@divisor+1
  1075  00A9  082E               	movf	sprintf@prec,w
  1076  00AA  00A9               	movwf	??_sprintf
  1077  00AB  0729               	addwf	??_sprintf,w
  1078  00AC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1079  00AD  0084               	movwf	4
  1080  00AE  120A  118A  21CA  120A  118A  	fcall	stringdir
  1081  00B3  00F3               	movwf	___lwdiv@divisor
  1082  00B4  120A  118A  21CA  120A  118A  	fcall	stringdir
  1083  00B9  00F4               	movwf	___lwdiv@divisor+1
  1084  00BA  0830               	movf	sprintf@val+1,w
  1085  00BB  00F6               	movwf	___lwdiv@dividend+1
  1086  00BC  082F               	movf	sprintf@val,w
  1087  00BD  00F5               	movwf	___lwdiv@dividend
  1088  00BE  120A  118A  214A  120A  118A  	fcall	___lwdiv
  1089  00C3  0874               	movf	?___lwdiv+1,w
  1090  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1091  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1092  00C6  00A3               	movwf	___lwmod@dividend+1
  1093  00C7  0873               	movf	?___lwdiv,w
  1094  00C8  00A2               	movwf	___lwmod@dividend
  1095  00C9  120A  118A  218E  120A  118A  	fcall	___lwmod
  1096  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1097  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1098  00D0  0820               	movf	?___lwmod,w
  1099  00D1  3E30               	addlw	48
  1100  00D2  00AA               	movwf	??_sprintf+1
  1101  00D3  082A               	movf	??_sprintf+1,w
  1102  00D4  00B2               	movwf	sprintf@c
  1103  00D5                     l1073:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1106  00D5  0832               	movf	sprintf@c,w
  1107  00D6  00A9               	movwf	??_sprintf
  1108  00D7  0831               	movf	sprintf@sp,w
  1109  00D8  0084               	movwf	4
  1110  00D9  0829               	movf	??_sprintf,w
  1111  00DA  1383               	bcf	3,7	;select IRP bank0
  1112  00DB  0080               	movwf	0
  1113  00DC                     l1075:
  1114  00DC  3001               	movlw	1
  1115  00DD  00A9               	movwf	??_sprintf
  1116  00DE  0829               	movf	??_sprintf,w
  1117  00DF  07B1               	addwf	sprintf@sp,f
  1118  00E0                     l1077:
  1119                           
  1120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1121  00E0  30FF               	movlw	255
  1122  00E1  00A9               	movwf	??_sprintf
  1123  00E2  0829               	movf	??_sprintf,w
  1124  00E3  07AE               	addwf	sprintf@prec,f
  1125  00E4  0A2E               	incf	sprintf@prec,w
  1126  00E5  1D03               	btfss	3,2
  1127  00E6  28E8               	goto	u501
  1128  00E7  28E9               	goto	u500
  1129  00E8                     u501:
  1130  00E8  28A5               	goto	l1071
  1131  00E9                     u500:
  1132  00E9                     l1079:
  1133                           
  1134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1135  00E9  3001               	movlw	1
  1136  00EA  07A6               	addwf	sprintf@f,f
  1137  00EB  30FF               	movlw	-1
  1138  00EC  0726               	addwf	sprintf@f,w
  1139  00ED  0084               	movwf	4
  1140  00EE  120A  118A  21CA  120A  118A  	fcall	stringdir
  1141  00F3  00A9               	movwf	??_sprintf
  1142  00F4  0829               	movf	??_sprintf,w
  1143  00F5  00B2               	movwf	sprintf@c
  1144  00F6  0832               	movf	sprintf@c,w
  1145  00F7  1D03               	btfss	3,2
  1146  00F8  28FA               	goto	u511
  1147  00F9  28FB               	goto	u510
  1148  00FA                     u511:
  1149  00FA  281E               	goto	l1029
  1150  00FB                     u510:
  1151  00FB                     l1081:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1154  00FB  0831               	movf	sprintf@sp,w
  1155  00FC  0084               	movwf	4
  1156  00FD  1383               	bcf	3,7	;select IRP bank0
  1157  00FE  0180               	clrf	0
  1158  00FF                     l223:
  1159  00FF  0008               	return
  1160  0100                     __end_of_sprintf:
  1161                           
  1162                           	psect	text3
  1163  018E                     __ptext3:	
  1164 ;; *************** function ___lwmod *****************
  1165 ;; Defined at:
  1166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  divisor         2    0[BANK0 ] unsigned int 
  1169 ;;  dividend        2    2[BANK0 ] unsigned int 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  counter         1    5[BANK0 ] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  2    0[BANK0 ] unsigned int 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       4       0       0       0
  1182 ;;      Locals:         0       1       0       0       0
  1183 ;;      Temps:          0       1       0       0       0
  1184 ;;      Totals:         0       6       0       0       0
  1185 ;;Total ram usage:        6 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_sprintf
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function ___lwmod
  1197  018E                     ___lwmod:
  1198  018E                     l1005:	
  1199                           ;incstack = 0
  1200                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1201                           
  1202  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1203  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0190  0820               	movf	___lwmod@divisor,w
  1205  0191  0421               	iorwf	___lwmod@divisor+1,w
  1206  0192  1903               	btfsc	3,2
  1207  0193  2995               	goto	u391
  1208  0194  2996               	goto	u390
  1209  0195                     u391:
  1210  0195  29C5               	goto	l1023
  1211  0196                     u390:
  1212  0196                     l1007:
  1213  0196  01A5               	clrf	___lwmod@counter
  1214  0197  0AA5               	incf	___lwmod@counter,f
  1215  0198  29A4               	goto	l1013
  1216  0199                     l1009:
  1217  0199  3001               	movlw	1
  1218  019A                     u405:
  1219  019A  1003               	clrc
  1220  019B  0DA0               	rlf	___lwmod@divisor,f
  1221  019C  0DA1               	rlf	___lwmod@divisor+1,f
  1222  019D  3EFF               	addlw	-1
  1223  019E  1D03               	skipz
  1224  019F  299A               	goto	u405
  1225  01A0                     l1011:
  1226  01A0  3001               	movlw	1
  1227  01A1  00A4               	movwf	??___lwmod
  1228  01A2  0824               	movf	??___lwmod,w
  1229  01A3  07A5               	addwf	___lwmod@counter,f
  1230  01A4                     l1013:
  1231  01A4  1FA1               	btfss	___lwmod@divisor+1,7
  1232  01A5  29A7               	goto	u411
  1233  01A6  29A8               	goto	u410
  1234  01A7                     u411:
  1235  01A7  2999               	goto	l1009
  1236  01A8                     u410:
  1237  01A8                     l1015:
  1238  01A8  0821               	movf	___lwmod@divisor+1,w
  1239  01A9  0223               	subwf	___lwmod@dividend+1,w
  1240  01AA  1D03               	skipz
  1241  01AB  29AE               	goto	u425
  1242  01AC  0820               	movf	___lwmod@divisor,w
  1243  01AD  0222               	subwf	___lwmod@dividend,w
  1244  01AE                     u425:
  1245  01AE  1C03               	skipc
  1246  01AF  29B1               	goto	u421
  1247  01B0  29B2               	goto	u420
  1248  01B1                     u421:
  1249  01B1  29B8               	goto	l1019
  1250  01B2                     u420:
  1251  01B2                     l1017:
  1252  01B2  0820               	movf	___lwmod@divisor,w
  1253  01B3  02A2               	subwf	___lwmod@dividend,f
  1254  01B4  0821               	movf	___lwmod@divisor+1,w
  1255  01B5  1C03               	skipc
  1256  01B6  03A3               	decf	___lwmod@dividend+1,f
  1257  01B7  02A3               	subwf	___lwmod@dividend+1,f
  1258  01B8                     l1019:
  1259  01B8  3001               	movlw	1
  1260  01B9                     u435:
  1261  01B9  1003               	clrc
  1262  01BA  0CA1               	rrf	___lwmod@divisor+1,f
  1263  01BB  0CA0               	rrf	___lwmod@divisor,f
  1264  01BC  3EFF               	addlw	-1
  1265  01BD  1D03               	skipz
  1266  01BE  29B9               	goto	u435
  1267  01BF                     l1021:
  1268  01BF  3001               	movlw	1
  1269  01C0  02A5               	subwf	___lwmod@counter,f
  1270  01C1  1D03               	btfss	3,2
  1271  01C2  29C4               	goto	u441
  1272  01C3  29C5               	goto	u440
  1273  01C4                     u441:
  1274  01C4  29A8               	goto	l1015
  1275  01C5                     u440:
  1276  01C5                     l1023:
  1277  01C5  0823               	movf	___lwmod@dividend+1,w
  1278  01C6  00A1               	movwf	?___lwmod+1
  1279  01C7  0822               	movf	___lwmod@dividend,w
  1280  01C8  00A0               	movwf	?___lwmod
  1281  01C9                     l509:
  1282  01C9  0008               	return
  1283  01CA                     __end_of___lwmod:
  1284                           
  1285                           	psect	text4
  1286  014A                     __ptext4:	
  1287 ;; *************** function ___lwdiv *****************
  1288 ;; Defined at:
  1289 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  divisor         2    3[COMMON] unsigned int 
  1292 ;;  dividend        2    5[COMMON] unsigned int 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  quotient        2    8[COMMON] unsigned int 
  1295 ;;  counter         1   10[COMMON] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  2    3[COMMON] unsigned int 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         4       0       0       0       0
  1306 ;;      Locals:         3       0       0       0       0
  1307 ;;      Temps:          1       0       0       0       0
  1308 ;;      Totals:         8       0       0       0       0
  1309 ;;Total ram usage:        8 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_sprintf
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function ___lwdiv
  1321  014A                     ___lwdiv:
  1322  014A                     l979:	
  1323                           ;incstack = 0
  1324                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1325                           
  1326  014A  01F8               	clrf	___lwdiv@quotient
  1327  014B  01F9               	clrf	___lwdiv@quotient+1
  1328  014C                     l981:
  1329  014C  0873               	movf	___lwdiv@divisor,w
  1330  014D  0474               	iorwf	___lwdiv@divisor+1,w
  1331  014E  1903               	btfsc	3,2
  1332  014F  2951               	goto	u321
  1333  0150  2952               	goto	u320
  1334  0151                     u321:
  1335  0151  2989               	goto	l1001
  1336  0152                     u320:
  1337  0152                     l983:
  1338  0152  01FA               	clrf	___lwdiv@counter
  1339  0153  0AFA               	incf	___lwdiv@counter,f
  1340  0154  2960               	goto	l989
  1341  0155                     l985:
  1342  0155  3001               	movlw	1
  1343  0156                     u335:
  1344  0156  1003               	clrc
  1345  0157  0DF3               	rlf	___lwdiv@divisor,f
  1346  0158  0DF4               	rlf	___lwdiv@divisor+1,f
  1347  0159  3EFF               	addlw	-1
  1348  015A  1D03               	skipz
  1349  015B  2956               	goto	u335
  1350  015C                     l987:
  1351  015C  3001               	movlw	1
  1352  015D  00F7               	movwf	??___lwdiv
  1353  015E  0877               	movf	??___lwdiv,w
  1354  015F  07FA               	addwf	___lwdiv@counter,f
  1355  0160                     l989:
  1356  0160  1FF4               	btfss	___lwdiv@divisor+1,7
  1357  0161  2963               	goto	u341
  1358  0162  2964               	goto	u340
  1359  0163                     u341:
  1360  0163  2955               	goto	l985
  1361  0164                     u340:
  1362  0164                     l991:
  1363  0164  3001               	movlw	1
  1364  0165                     u355:
  1365  0165  1003               	clrc
  1366  0166  0DF8               	rlf	___lwdiv@quotient,f
  1367  0167  0DF9               	rlf	___lwdiv@quotient+1,f
  1368  0168  3EFF               	addlw	-1
  1369  0169  1D03               	skipz
  1370  016A  2965               	goto	u355
  1371  016B  0874               	movf	___lwdiv@divisor+1,w
  1372  016C  0276               	subwf	___lwdiv@dividend+1,w
  1373  016D  1D03               	skipz
  1374  016E  2971               	goto	u365
  1375  016F  0873               	movf	___lwdiv@divisor,w
  1376  0170  0275               	subwf	___lwdiv@dividend,w
  1377  0171                     u365:
  1378  0171  1C03               	skipc
  1379  0172  2974               	goto	u361
  1380  0173  2975               	goto	u360
  1381  0174                     u361:
  1382  0174  297C               	goto	l997
  1383  0175                     u360:
  1384  0175                     l993:
  1385  0175  0873               	movf	___lwdiv@divisor,w
  1386  0176  02F5               	subwf	___lwdiv@dividend,f
  1387  0177  0874               	movf	___lwdiv@divisor+1,w
  1388  0178  1C03               	skipc
  1389  0179  03F6               	decf	___lwdiv@dividend+1,f
  1390  017A  02F6               	subwf	___lwdiv@dividend+1,f
  1391  017B                     l995:
  1392  017B  1478               	bsf	___lwdiv@quotient,0
  1393  017C                     l997:
  1394  017C  3001               	movlw	1
  1395  017D                     u375:
  1396  017D  1003               	clrc
  1397  017E  0CF4               	rrf	___lwdiv@divisor+1,f
  1398  017F  0CF3               	rrf	___lwdiv@divisor,f
  1399  0180  3EFF               	addlw	-1
  1400  0181  1D03               	skipz
  1401  0182  297D               	goto	u375
  1402  0183                     l999:
  1403  0183  3001               	movlw	1
  1404  0184  02FA               	subwf	___lwdiv@counter,f
  1405  0185  1D03               	btfss	3,2
  1406  0186  2988               	goto	u381
  1407  0187  2989               	goto	u380
  1408  0188                     u381:
  1409  0188  2964               	goto	l991
  1410  0189                     u380:
  1411  0189                     l1001:
  1412  0189  0879               	movf	___lwdiv@quotient+1,w
  1413  018A  00F4               	movwf	?___lwdiv+1
  1414  018B  0878               	movf	___lwdiv@quotient,w
  1415  018C  00F3               	movwf	?___lwdiv
  1416  018D                     l499:
  1417  018D  0008               	return
  1418  018E                     __end_of___lwdiv:
  1419                           
  1420                           	psect	text5
  1421  021D                     __ptext5:	
  1422 ;; *************** function _enviocadena *****************
  1423 ;; Defined at:
  1424 ;;		line 44 in file "usart.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  cadena          1    wreg     PTR unsigned char 
  1427 ;;		 -> cont(1), 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  cadena          1    5[COMMON] PTR unsigned char 
  1430 ;;		 -> cont(1), 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0
  1442 ;;      Temps:          1       0       0       0       0
  1443 ;;      Totals:         2       0       0       0       0
  1444 ;;Total ram usage:        2 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		_enviocaracter
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;;		_setup
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _enviocadena
  1457  021D                     _enviocadena:
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1461                           ;enviocadena@cadena stored from wreg
  1462  021D  00F5               	movwf	enviocadena@cadena
  1463  021E                     l1089:
  1464                           
  1465                           ;usart.c: 45:     while (*cadena != 0){
  1466  021E  2A2B               	goto	l1095
  1467  021F                     l1091:
  1468                           
  1469                           ;usart.c: 46:       enviocaracter(*cadena);
  1470  021F  0875               	movf	enviocadena@cadena,w
  1471  0220  0084               	movwf	4
  1472  0221  0800               	movf	0,w
  1473  0222  120A  118A  2258  120A  118A  	fcall	_enviocaracter
  1474  0227                     l1093:
  1475                           
  1476                           ;usart.c: 47:       cadena++;
  1477  0227  3001               	movlw	1
  1478  0228  00F4               	movwf	??_enviocadena
  1479  0229  0874               	movf	??_enviocadena,w
  1480  022A  07F5               	addwf	enviocadena@cadena,f
  1481  022B                     l1095:
  1482                           
  1483                           ;usart.c: 45:     while (*cadena != 0){
  1484  022B  0875               	movf	enviocadena@cadena,w
  1485  022C  0084               	movwf	4
  1486  022D  1383               	bcf	3,7	;select IRP bank0
  1487  022E  0800               	movf	0,w
  1488  022F  1D03               	btfss	3,2
  1489  0230  2A32               	goto	u521
  1490  0231  2A33               	goto	u520
  1491  0232                     u521:
  1492  0232  2A1F               	goto	l1091
  1493  0233                     u520:
  1494  0233                     l111:
  1495                           
  1496                           ;usart.c: 49:     if (PIR1bits.TXIF){
  1497  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0235  1E0C               	btfss	12,4	;volatile
  1500  0236  2A38               	goto	u531
  1501  0237  2A39               	goto	u530
  1502  0238                     u531:
  1503  0238  2A3B               	goto	l113
  1504  0239                     u530:
  1505  0239                     l1097:
  1506                           
  1507                           ;usart.c: 50:             TXREG = 13;
  1508  0239  300D               	movlw	13
  1509  023A  0099               	movwf	25	;volatile
  1510  023B                     l113:
  1511  023B  0008               	return
  1512  023C                     __end_of_enviocadena:
  1513                           
  1514                           	psect	text6
  1515  0258                     __ptext6:	
  1516 ;; *************** function _enviocaracter *****************
  1517 ;; Defined at:
  1518 ;;		line 35 in file "usart.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  a               1    wreg     unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  a               1    3[COMMON] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       0       0       0       0
  1533 ;;      Locals:         1       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0
  1535 ;;      Totals:         1       0       0       0       0
  1536 ;;Total ram usage:        1 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_enviocadena
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _enviocaracter
  1548  0258                     _enviocaracter:
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _enviocaracter: [wreg]
  1552                           ;enviocaracter@a stored from wreg
  1553  0258  00F3               	movwf	enviocaracter@a
  1554  0259                     l975:
  1555  0259                     l102:	
  1556                           ;usart.c: 38:     }
  1557                           
  1558                           
  1559                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  1560  0259  1683               	bsf	3,5	;RP0=1, select bank1
  1561  025A  1303               	bcf	3,6	;RP1=0, select bank1
  1562  025B  1C98               	btfss	24,1	;volatile
  1563  025C  2A5E               	goto	u301
  1564  025D  2A5F               	goto	u300
  1565  025E                     u301:
  1566  025E  2A59               	goto	l102
  1567  025F                     u300:
  1568  025F                     l104:
  1569                           
  1570                           ;usart.c: 39:     if (PIR1bits.TXIF){
  1571  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0261  1E0C               	btfss	12,4	;volatile
  1574  0262  2A64               	goto	u311
  1575  0263  2A65               	goto	u310
  1576  0264                     u311:
  1577  0264  2A67               	goto	l106
  1578  0265                     u310:
  1579  0265                     l977:
  1580                           
  1581                           ;usart.c: 40:             TXREG = a;
  1582  0265  0873               	movf	enviocaracter@a,w
  1583  0266  0099               	movwf	25	;volatile
  1584  0267                     l106:
  1585  0267  0008               	return
  1586  0268                     __end_of_enviocaracter:
  1587                           
  1588                           	psect	text7
  1589  023C                     __ptext7:	
  1590 ;; *************** function _isr *****************
  1591 ;; Defined at:
  1592 ;;		line 48 in file "lab5.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0
  1608 ;;      Temps:          3       0       0       0       0
  1609 ;;      Totals:         3       0       0       0       0
  1610 ;;Total ram usage:        3 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		Interrupt level 1
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _isr
  1621  023C                     _isr:
  1622  023C                     i1l915:
  1623                           
  1624                           ;lab5.c: 49:     if(RBIF == 1) {
  1625  023C  1C0B               	btfss	11,0	;volatile
  1626  023D  2A3F               	goto	u25_21
  1627  023E  2A40               	goto	u25_20
  1628  023F                     u25_21:
  1629  023F  2A51               	goto	i1l60
  1630  0240                     u25_20:
  1631  0240                     i1l917:
  1632                           
  1633                           ;lab5.c: 51:         if (PORTBbits.RB0 == 0) {PORTA++;}
  1634  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1636  0242  1806               	btfsc	6,0	;volatile
  1637  0243  2A45               	goto	u26_21
  1638  0244  2A46               	goto	u26_20
  1639  0245                     u26_21:
  1640  0245  2A4A               	goto	i1l921
  1641  0246                     u26_20:
  1642  0246                     i1l919:
  1643  0246  3001               	movlw	1
  1644  0247  00F0               	movwf	??_isr
  1645  0248  0870               	movf	??_isr,w
  1646  0249  0785               	addwf	5,f	;volatile
  1647  024A                     i1l921:
  1648                           
  1649                           ;lab5.c: 53:         if (PORTBbits.RB1 == 0) {PORTA--;}
  1650  024A  1886               	btfsc	6,1	;volatile
  1651  024B  2A4D               	goto	u27_21
  1652  024C  2A4E               	goto	u27_20
  1653  024D                     u27_21:
  1654  024D  2A50               	goto	i1l925
  1655  024E                     u27_20:
  1656  024E                     i1l923:
  1657  024E  3001               	movlw	1
  1658  024F  0285               	subwf	5,f	;volatile
  1659  0250                     i1l925:
  1660                           
  1661                           ;lab5.c: 55:         INTCONbits.RBIF = 0;
  1662  0250  100B               	bcf	11,0	;volatile
  1663  0251                     i1l60:
  1664  0251  0872               	movf	??_isr+2,w
  1665  0252  008A               	movwf	10
  1666  0253  0E71               	swapf	??_isr+1,w
  1667  0254  0083               	movwf	3
  1668  0255  0EFE               	swapf	btemp,f
  1669  0256  0E7E               	swapf	btemp,w
  1670  0257  0009               	retfie
  1671  0258                     __end_of_isr:
  1672  007E                     btemp	set	126	;btemp
  1673  007E                     wtemp0	set	126
  1674                           
  1675                           	psect	intentry
  1676  0004                     __pintentry:	
  1677                           ;incstack = 0
  1678                           ; Regs used in _isr: [wreg+status,2+status,0]
  1679                           
  1680  0004                     interrupt_function:
  1681  007E                     saved_w	set	btemp
  1682  0004  00FE               	movwf	btemp
  1683  0005  0E03               	swapf	3,w
  1684  0006  00F1               	movwf	??_isr+1
  1685  0007  080A               	movf	10,w
  1686  0008  00F2               	movwf	??_isr+2
  1687  0009  120A  118A  2A3C   	ljmp	_isr
  1688                           
  1689                           	psect	config
  1690                           
  1691                           ;Config register CONFIG1 @ 0x2007
  1692                           ;	Oscillator Selection bits
  1693                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1694                           ;	Watchdog Timer Enable bit
  1695                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1696                           ;	Power-up Timer Enable bit
  1697                           ;	PWRTE = OFF, PWRT disabled
  1698                           ;	RE3/MCLR pin function select bit
  1699                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1700                           ;	Code Protection bit
  1701                           ;	CP = OFF, Program memory code protection is disabled
  1702                           ;	Data Code Protection bit
  1703                           ;	CPD = OFF, Data memory code protection is disabled
  1704                           ;	Brown Out Reset Selection bits
  1705                           ;	BOREN = OFF, BOR disabled
  1706                           ;	Internal External Switchover bit
  1707                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1708                           ;	Fail-Safe Clock Monitor Enabled bit
  1709                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1710                           ;	Low Voltage Programming Enable bit
  1711                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1712                           ;	In-Circuit Debugger Mode bit
  1713                           ;	DEBUG = 0x1, unprogrammed default
  1714  2007                     	org	8199
  1715  2007  20D4               	dw	8404
  1716                           
  1717                           ;Config register CONFIG2 @ 0x2008
  1718                           ;	Brown-out Reset Selection bit
  1719                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1720                           ;	Flash Program Memory Self Write Enable bits
  1721                           ;	WRT = OFF, Write protection off
  1722  2008                     	org	8200
  1723  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     25      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> cont(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 1
		 -> cont(BANK0[1]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _enviocadena->_enviocaracter

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2906
                                             22 BANK0      3     3      0
                        _enviocadena
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    1453
                                             19 BANK0      3     3      0
                        _enviocadena
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              3 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _enviocadena                                          2     2      0     133
                                              4 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (3) _enviocaracter                                        1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enviocadena
     _enviocaracter
   _setup
     _enviocadena
       _enviocaracter
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 20 21:43:30 2021

                      pc 0002                       l72 0149                       fsr 0004  
                    l102 0259                      l111 0233                      l104 025F  
                    l113 023B                      l106 0267                      l223 00FF  
                    l509 01C9                      l499 018D                      l981 014C  
                    l975 0259                      l991 0164                      l983 0152  
                    l977 0265                      l993 0175                      l985 0155  
                    l995 017B                      l987 015C                      l979 014A  
                    l997 017C                      l989 0160                      l999 0183  
                    u300 025F                      u301 025E                      u310 0265  
                    u311 0264                      u320 0152                      u321 0151  
                    u410 01A8                      u411 01A7                      u340 0164  
                    u420 01B2                      u500 00E9                      u341 0163  
                    u421 01B1                      u405 019A                      u501 00E8  
                    u510 00FB                      u335 0156                      u511 00FA  
                    u520 0233                      u360 0175                      u440 01C5  
                    u521 0232                      u361 0174                      u441 01C4  
                    u425 01AE                      u530 0239                      u450 0024  
                    u531 0238                      u355 0165                      u435 01B9  
                    u451 0023                      u380 0189                      u460 005E  
                    u540 0200                      u381 0188                      u365 0171  
                    u461 005D                      u541 01FF                      u390 0196  
                    u470 0084                      u375 017D                      u391 0195  
                    u471 0083                      u480 008F                      u481 008E  
                    u490 0095                      u491 0094                      u475 0080  
                    _isr 023C                      fsr0 0004                      indf 0000  
                   l1001 0189                     l1011 01A0                     l1021 01BF  
                   l1013 01A4                     l1005 018E                     l1101 0104  
                   l1015 01A8                     l1007 0196                     l1023 01C5  
                   l1031 0024                     l1111 010E                     l1103 0105  
                   l1017 01B2                     l1009 0199                     l1041 004E  
                   l1033 002B                     l1121 0115                     l1113 010F  
                   l1105 0108                     l1019 01B8                     l1051 0067  
                   l1043 0056                     l1035 0030                     l1027 0019  
                   l1131 011C                     l1123 0116                     l1115 0110  
                   l1107 0109                     l1061 0085                     l1045 005A  
                   l1029 001E                     l1141 0128                     l1133 011D  
                   l1125 0117                     l1117 0111                     l1109 010C  
                   l1071 00A5                     l1063 008F                     l1047 005E  
                   l1039 0031                     l1151 012F                     l1143 0129  
                   l1135 0120                     l1127 011A                     l1119 0112  
                   l1073 00D5                     l1065 0095                     l1057 0069  
                   l1049 0062                     l1081 00FB                     l1153 0130  
                   l1145 012A                     l1137 0124                     l1129 011B  
                   l1161 0200                     l1091 021F                     l1075 00DC  
                   l1067 009C                     l1155 0143                     l1147 012D  
                   l1139 0125                     l1163 0202                     l1093 0227  
                   l1077 00E0                     l1069 00A0                     l1149 012E  
                   l1165 0213                     l1157 01F5                     l1095 022B  
                   l1079 00E9                     l1159 01FA                     l1097 0239  
                   l1089 021E                     l1187 0043                     l1099 0100  
                   ?_isr 0070                     STR_1 01F1                     STR_2 01DA  
                   _RBIF 0058                     i1l60 0251                     _cont 0039  
                   _main 01F5                     btemp 007E                     start 000C  
           ?_enviocadena 0070                    ??_isr 0070                    ?_main 0070  
                  _EEADR 010D                    _EEDAT 010C                    _ANSEL 0188  
        __end_of___lwdiv 018E          __end_of___lwmod 01CA                    i1l921 024A  
                  i1l923 024E                    i1l915 023C                    i1l925 0250  
                  i1l917 0240                    i1l919 0246                    _RCREG 001A  
                  u25_20 0240                    u25_21 023F                    u26_20 0246  
                  u26_21 0245                    _SPBRG 0099                    u27_20 024E  
                  u27_21 024D                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 01DA  
                  _setup 0100   __size_of_enviocaracter 0010                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0100  
        __initialization 000F             __end_of_main 021D                   ??_main 0036  
                 _EECON2 018D                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A            _enviocaracter 0258                ??___lwdiv 0077  
              ??___lwmod 0024                   saved_w 007E                ??_sprintf 0029  
__end_of__initialization 0012           __pcstackCOMMON 0070           ?_enviocaracter 0070  
   __size_of_enviocadena 001F            __end_of_setup 014A           _OPTION_REGbits 0081  
                ??_setup 0033               __pbssBANK0 0039               __pmaintext 01F5  
             __pintentry 0004           enviocaracter@a 0073               __stringtab 01CA  
        ??_enviocaracter 0073                  ___lwdiv 014A                  ___lwmod 018E  
                __ptext1 0100                  __ptext2 0016                  __ptext3 018E  
                __ptext4 014A                  __ptext5 021D                  __ptext6 0258  
                __ptext7 023C                  _dpowers 01D0             __size_of_isr 001C  
                _sprintf 0016     end_of_initialization 0012                _RCSTAbits 0018  
              _PORTBbits 0006                _TXSTAbits 0098              _BAUDCTLbits 0187  
    start_initialization 000F              __end_of_isr 0258            ??_enviocadena 0074  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 002D  
            sprintf@prec 002E         ___lwdiv@dividend 0075                 ?___lwdiv 0073  
               ?___lwmod 0020      __end_of_enviocadena 023C                __pstrings 01CA  
       ___lwdiv@quotient 0078                 ?_sprintf 0026           __size_of_setup 004A  
      interrupt_function 0004                 _IOCBbits 0096                 _PIR1bits 000C  
               _PIR2bits 000D    __end_of_enviocaracter 0268              __stringbase 01CF  
               _WPUBbits 0095        enviocadena@cadena 0075               _EECON1bits 018C  
            _enviocadena 021D         __size_of___lwdiv 0044         __size_of___lwmod 003C  
     __end_of__stringtab 01D0               sprintf@val 002F          ___lwdiv@divisor 0073  
        ___lwdiv@counter 007A         __size_of_sprintf 00EA            __size_of_main 0028  
             _INTCONbits 000B                 intlevel1 0000                sprintf@ap 002C  
              sprintf@sp 0031         ___lwmod@dividend 0022                stringcode 01CA  
             _OSCCONbits 008F                 sprintf@c 0032                 sprintf@f 0026  
        ___lwmod@divisor 0020          ___lwmod@counter 0025                 stringdir 01CA  
               stringtab 01CA  
