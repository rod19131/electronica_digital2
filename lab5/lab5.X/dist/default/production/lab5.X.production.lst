

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 02 21:32:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	strings
   296  0387                     __pstrings:
   297  0387                     stringtab:
   298  0387                     __stringtab:
   299  0387                     stringcode:	
   300                           ;	String table - string pointers are 1 byte each
   301                           
   302  0387                     stringdir:
   303  0387  3003               	movlw	high stringdir
   304  0388  008A               	movwf	10
   305  0389  0804               	movf	4,w
   306  038A  0A84               	incf	4,f
   307  038B  0782               	addwf	2,f
   308  038C                     __stringbase:
   309  038C  3400               	retlw	0
   310  038D                     __end_of__stringtab:
   311  038D                     _dpowers:
   312  038D  3401               	retlw	1
   313  038E  3400               	retlw	0
   314  038F  340A               	retlw	10
   315  0390  3400               	retlw	0
   316  0391  3464               	retlw	100
   317  0392  3400               	retlw	0
   318  0393  34E8               	retlw	232
   319  0394  3403               	retlw	3
   320  0395  3410               	retlw	16
   321  0396  3427               	retlw	39
   322  0397                     __end_of_dpowers:
   323  0019                     _TXREG	set	25
   324  000D                     _PIR2bits	set	13
   325  0018                     _RCSTAbits	set	24
   326  0006                     _PORTB	set	6
   327  001A                     _RCREG	set	26
   328  0008                     _PORTD	set	8
   329  000C                     _PIR1bits	set	12
   330  000B                     _INTCONbits	set	11
   331  0005                     _PORTA	set	5
   332  0006                     _PORTBbits	set	6
   333  0058                     _RBIF	set	88
   334  009A                     _SPBRGH	set	154
   335  0099                     _SPBRG	set	153
   336  0098                     _TXSTAbits	set	152
   337  0096                     _IOCBbits	set	150
   338  0095                     _WPUBbits	set	149
   339  0081                     _OPTION_REGbits	set	129
   340  0088                     _TRISD	set	136
   341  0086                     _TRISB	set	134
   342  0085                     _TRISA	set	133
   343  008F                     _OSCCONbits	set	143
   344  010C                     _EEDAT	set	268
   345  010D                     _EEADR	set	269
   346  018D                     _EECON2	set	397
   347  018C                     _EECON1bits	set	396
   348  0187                     _BAUDCTLbits	set	391
   349  0188                     _ANSEL	set	392
   350  0189                     _ANSELH	set	393
   351  0397                     STR_3:
   352  0397  3463               	retlw	99	;'c'
   353  0398  346F               	retlw	111	;'o'
   354  0399  346E               	retlw	110	;'n'
   355  039A  3474               	retlw	116	;'t'
   356  039B  3461               	retlw	97	;'a'
   357  039C  3464               	retlw	100	;'d'
   358  039D  346F               	retlw	111	;'o'
   359  039E  3472               	retlw	114	;'r'
   360  039F  3420               	retlw	32	;' '
   361  03A0  3462               	retlw	98	;'b'
   362  03A1  346F               	retlw	111	;'o'
   363  03A2  3474               	retlw	116	;'t'
   364  03A3  346F               	retlw	111	;'o'
   365  03A4  346E               	retlw	110	;'n'
   366  03A5  3465               	retlw	101	;'e'
   367  03A6  3473               	retlw	115	;'s'
   368  03A7  343A               	retlw	58	;':'
   369  03A8  3420               	retlw	32	;' '
   370  03A9  3425               	retlw	37	;'%'
   371  03AA  3464               	retlw	100	;'d'
   372  03AB  3420               	retlw	32	;' '
   373  03AC  340A               	retlw	10
   374  03AD  3400               	retlw	0
   375  03AE                     STR_1:
   376  03AE  3425               	retlw	37	;'%'
   377  03AF  3464               	retlw	100	;'d'
   378  03B0  340A               	retlw	10
   379  03B1  3400               	retlw	0
   380  03AE                     
   381                           	psect	cinit
   382  0015                     start_initialization:	
   383                           ; #config settings
   384                           
   385  0015                     __initialization:
   386                           
   387                           ; Clear objects allocated to BANK0
   388  0015  1283               	bcf	3,5	;RP0=0, select bank0
   389  0016  1303               	bcf	3,6	;RP1=0, select bank0
   390  0017  01D2               	clrf	__pbssBANK0& (0+127)
   391  0018                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  0018                     __end_of__initialization:
   395  0018  0183               	clrf	3
   396  0019  120A  118A  2C04   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssBANK0
   399  0052                     __pbssBANK0:
   400  0052                     _cont:
   401  0052                     	ds	1
   402                           
   403                           	psect	cstackCOMMON
   404  0070                     __pcstackCOMMON:
   405  0070                     ?_enviocadena:
   406  0070                     ?_setup:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_isr:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_enviocaracter:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?i1_enviocaracter:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??i1_enviocaracter:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?i1_enviocadena:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?i1___lwdiv:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     i1enviocaracter@a:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0070                     i1___lwdiv@divisor:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 2 bytes @ 0x0
   438  0070                     	ds	1
   439  0071                     ??i1_enviocadena:
   440                           
   441                           ; 1 bytes @ 0x1
   442  0071                     	ds	1
   443  0072                     i1enviocadena@cadena:
   444  0072                     i1___lwdiv@dividend:	
   445                           ; 1 bytes @ 0x2
   446                           
   447                           
   448                           ; 2 bytes @ 0x2
   449  0072                     	ds	2
   450  0074                     ??i1___lwdiv:
   451                           
   452                           ; 1 bytes @ 0x4
   453  0074                     	ds	1
   454  0075                     i1___lwdiv@quotient:
   455                           
   456                           ; 2 bytes @ 0x5
   457  0075                     	ds	2
   458  0077                     i1___lwdiv@counter:
   459                           
   460                           ; 1 bytes @ 0x7
   461  0077                     	ds	1
   462  0078                     ?i1___lwmod:
   463  0078                     i1___lwmod@divisor:	
   464                           ; 2 bytes @ 0x8
   465                           
   466                           
   467                           ; 2 bytes @ 0x8
   468  0078                     	ds	2
   469  007A                     i1___lwmod@dividend:
   470                           
   471                           ; 2 bytes @ 0xA
   472  007A                     	ds	2
   473  007C                     ??i1___lwmod:
   474                           
   475                           ; 1 bytes @ 0xC
   476  007C                     	ds	1
   477  007D                     i1___lwmod@counter:
   478                           
   479                           ; 1 bytes @ 0xD
   480  007D                     	ds	1
   481                           
   482                           	psect	cstackBANK0
   483  0020                     __pcstackBANK0:
   484  0020                     ?i1_sprintf:
   485  0020                     i1sprintf@f:	
   486                           ; 2 bytes @ 0x0
   487                           
   488                           
   489                           ; 1 bytes @ 0x0
   490  0020                     	ds	3
   491  0023                     ??i1_sprintf:
   492                           
   493                           ; 1 bytes @ 0x3
   494  0023                     	ds	3
   495  0026                     i1sprintf@ap:
   496                           
   497                           ; 1 bytes @ 0x6
   498  0026                     	ds	1
   499  0027                     i1sprintf@flag:
   500                           
   501                           ; 1 bytes @ 0x7
   502  0027                     	ds	1
   503  0028                     i1sprintf@prec:
   504                           
   505                           ; 1 bytes @ 0x8
   506  0028                     	ds	1
   507  0029                     i1sprintf@val:
   508                           
   509                           ; 2 bytes @ 0x9
   510  0029                     	ds	2
   511  002B                     i1sprintf@sp:
   512                           
   513                           ; 1 bytes @ 0xB
   514  002B                     	ds	1
   515  002C                     i1sprintf@c:
   516                           
   517                           ; 1 bytes @ 0xC
   518  002C                     	ds	1
   519  002D                     ??_isr:
   520                           
   521                           ; 1 bytes @ 0xD
   522  002D                     	ds	7
   523  0034                     ??_enviocaracter:
   524  0034                     ?___lwdiv:	
   525                           ; 1 bytes @ 0x14
   526                           
   527  0034                     enviocaracter@a:	
   528                           ; 2 bytes @ 0x14
   529                           
   530  0034                     ___lwdiv@divisor:	
   531                           ; 1 bytes @ 0x14
   532                           
   533                           
   534                           ; 2 bytes @ 0x14
   535  0034                     	ds	1
   536  0035                     ??_enviocadena:
   537                           
   538                           ; 1 bytes @ 0x15
   539  0035                     	ds	1
   540  0036                     enviocadena@cadena:
   541  0036                     ___lwdiv@dividend:	
   542                           ; 1 bytes @ 0x16
   543                           
   544                           
   545                           ; 2 bytes @ 0x16
   546  0036                     	ds	2
   547  0038                     ??___lwdiv:
   548                           
   549                           ; 1 bytes @ 0x18
   550  0038                     	ds	1
   551  0039                     ___lwdiv@quotient:
   552                           
   553                           ; 2 bytes @ 0x19
   554  0039                     	ds	2
   555  003B                     ___lwdiv@counter:
   556                           
   557                           ; 1 bytes @ 0x1B
   558  003B                     	ds	1
   559  003C                     ?___lwmod:
   560  003C                     ___lwmod@divisor:	
   561                           ; 2 bytes @ 0x1C
   562                           
   563                           
   564                           ; 2 bytes @ 0x1C
   565  003C                     	ds	2
   566  003E                     ___lwmod@dividend:
   567                           
   568                           ; 2 bytes @ 0x1E
   569  003E                     	ds	2
   570  0040                     ??___lwmod:
   571                           
   572                           ; 1 bytes @ 0x20
   573  0040                     	ds	1
   574  0041                     ___lwmod@counter:
   575                           
   576                           ; 1 bytes @ 0x21
   577  0041                     	ds	1
   578  0042                     ?_sprintf:
   579  0042                     sprintf@f:	
   580                           ; 2 bytes @ 0x22
   581                           
   582                           
   583                           ; 1 bytes @ 0x22
   584  0042                     	ds	3
   585  0045                     ??_sprintf:
   586                           
   587                           ; 1 bytes @ 0x25
   588  0045                     	ds	3
   589  0048                     sprintf@ap:
   590                           
   591                           ; 1 bytes @ 0x28
   592  0048                     	ds	1
   593  0049                     sprintf@flag:
   594                           
   595                           ; 1 bytes @ 0x29
   596  0049                     	ds	1
   597  004A                     sprintf@prec:
   598                           
   599                           ; 1 bytes @ 0x2A
   600  004A                     	ds	1
   601  004B                     sprintf@val:
   602                           
   603                           ; 2 bytes @ 0x2B
   604  004B                     	ds	2
   605  004D                     sprintf@sp:
   606                           
   607                           ; 1 bytes @ 0x2D
   608  004D                     	ds	1
   609  004E                     sprintf@c:
   610                           
   611                           ; 1 bytes @ 0x2E
   612  004E                     	ds	1
   613  004F                     ??_setup:
   614                           
   615                           ; 1 bytes @ 0x2F
   616  004F                     	ds	3
   617  0052                     ??_main:
   618                           
   619                           	psect	maintext
   620  0404                     __pmaintext:	
   621                           ; 1 bytes @ 0x32
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 65 in file "lab5.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : B00/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels required when called:    6
   647 ;; This function calls:
   648 ;;		_setup
   649 ;; This function is called by:
   650 ;;		Startup code after reset
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _main
   656  0404                     _main:
   657  0404                     l1445:	
   658                           ;incstack = 0
   659                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   660                           
   661                           
   662                           ;lab5.c: 66:     setup();
   663  0404  120A  118A  223E  120A  118A  	fcall	_setup
   664  0409                     l1447:
   665                           
   666                           ;lab5.c: 72:         if (PIR1bits.RCIF == 1) {
   667  0409  1283               	bcf	3,5	;RP0=0, select bank0
   668  040A  1303               	bcf	3,6	;RP1=0, select bank0
   669  040B  1E8C               	btfss	12,5	;volatile
   670  040C  2C0E               	goto	u1051
   671  040D  2C0F               	goto	u1050
   672  040E                     u1051:
   673  040E  2C09               	goto	l1447
   674  040F                     u1050:
   675  040F                     l1449:
   676                           
   677                           ;lab5.c: 73:                  PORTD = RCREG;}
   678  040F  081A               	movf	26,w	;volatile
   679  0410  0088               	movwf	8	;volatile
   680  0411  2C09               	goto	l1447
   681  0412  120A  118A  2812   	ljmp	start
   682  0415                     __end_of_main:
   683                           
   684                           	psect	text1
   685  023E                     __ptext1:	
   686 ;; *************** function _setup *****************
   687 ;; Defined at:
   688 ;;		line 79 in file "lab5.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0
   704 ;;      Temps:          0       3       0       0       0
   705 ;;      Totals:         0       3       0       0       0
   706 ;;Total ram usage:        3 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    5
   709 ;; This function calls:
   710 ;;		_enviocadena
   711 ;;		_sprintf
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _setup
   719  023E                     _setup:
   720  023E                     l1297:	
   721                           ;incstack = 0
   722                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   723                           
   724                           
   725                           ;lab5.c: 83:     OSCCONbits.IRCF = 7;
   726  023E  3070               	movlw	112
   727  023F  1683               	bsf	3,5	;RP0=1, select bank1
   728  0240  1303               	bcf	3,6	;RP1=0, select bank1
   729  0241  048F               	iorwf	15,f	;volatile
   730  0242                     l1299:
   731                           
   732                           ;lab5.c: 84:     OSCCONbits.SCS = 1;
   733  0242  140F               	bsf	15,0	;volatile
   734  0243                     l1301:
   735                           
   736                           ;lab5.c: 86:     ANSELH = 0;
   737  0243  1683               	bsf	3,5	;RP0=1, select bank3
   738  0244  1703               	bsf	3,6	;RP1=1, select bank3
   739  0245  0189               	clrf	9	;volatile
   740  0246                     l1303:
   741                           
   742                           ;lab5.c: 87:     ANSEL = 0;
   743  0246  0188               	clrf	8	;volatile
   744  0247                     l1305:
   745                           
   746                           ;lab5.c: 88:     TRISA = 0;
   747  0247  1683               	bsf	3,5	;RP0=1, select bank1
   748  0248  1303               	bcf	3,6	;RP1=0, select bank1
   749  0249  0185               	clrf	5	;volatile
   750  024A                     l1307:
   751                           
   752                           ;lab5.c: 89:     TRISB = 3;
   753  024A  3003               	movlw	3
   754  024B  0086               	movwf	6	;volatile
   755  024C                     l1309:
   756                           
   757                           ;lab5.c: 90:     TRISD = 0;
   758  024C  0188               	clrf	8	;volatile
   759  024D                     l1311:
   760                           
   761                           ;lab5.c: 91:     OPTION_REGbits.nRBPU = 0;
   762  024D  1381               	bcf	1,7	;volatile
   763  024E                     l1313:
   764                           
   765                           ;lab5.c: 92:     WPUBbits.WPUB0 = 1;
   766  024E  1415               	bsf	21,0	;volatile
   767  024F                     l1315:
   768                           
   769                           ;lab5.c: 93:     WPUBbits.WPUB1 = 1;
   770  024F  1495               	bsf	21,1	;volatile
   771  0250                     l1317:
   772                           
   773                           ;lab5.c: 95:     PORTB = 0;
   774  0250  1283               	bcf	3,5	;RP0=0, select bank0
   775  0251  1303               	bcf	3,6	;RP1=0, select bank0
   776  0252  0186               	clrf	6	;volatile
   777  0253                     l1319:
   778                           
   779                           ;lab5.c: 96:     PORTD = 0;
   780  0253  0188               	clrf	8	;volatile
   781  0254                     l1321:
   782                           
   783                           ;lab5.c: 98:     IOCBbits.IOCB0 = 1;
   784  0254  1683               	bsf	3,5	;RP0=1, select bank1
   785  0255  1303               	bcf	3,6	;RP1=0, select bank1
   786  0256  1416               	bsf	22,0	;volatile
   787  0257                     l1323:
   788                           
   789                           ;lab5.c: 99:     IOCBbits.IOCB1 = 1;
   790  0257  1496               	bsf	22,1	;volatile
   791  0258                     l1325:
   792                           
   793                           ;lab5.c: 101:     TXSTAbits.SYNC = 0;
   794  0258  1218               	bcf	24,4	;volatile
   795  0259                     l1327:
   796                           
   797                           ;lab5.c: 102:     TXSTAbits.BRGH = 1;
   798  0259  1518               	bsf	24,2	;volatile
   799  025A                     l1329:
   800                           
   801                           ;lab5.c: 104:     BAUDCTLbits.BRG16 = 1;
   802  025A  1683               	bsf	3,5	;RP0=1, select bank3
   803  025B  1703               	bsf	3,6	;RP1=1, select bank3
   804  025C  1587               	bsf	7,3	;volatile
   805  025D                     l1331:
   806                           
   807                           ;lab5.c: 106:     SPBRG = 207;
   808  025D  30CF               	movlw	207
   809  025E  1683               	bsf	3,5	;RP0=1, select bank1
   810  025F  1303               	bcf	3,6	;RP1=0, select bank1
   811  0260  0099               	movwf	25	;volatile
   812  0261                     l1333:
   813                           
   814                           ;lab5.c: 107:     SPBRGH = 0;
   815  0261  019A               	clrf	26	;volatile
   816  0262                     l1335:
   817                           
   818                           ;lab5.c: 109:     RCSTAbits.SPEN = 1;
   819  0262  1283               	bcf	3,5	;RP0=0, select bank0
   820  0263  1303               	bcf	3,6	;RP1=0, select bank0
   821  0264  1798               	bsf	24,7	;volatile
   822  0265                     l1337:
   823                           
   824                           ;lab5.c: 110:     RCSTAbits.RX9 = 0;
   825  0265  1318               	bcf	24,6	;volatile
   826  0266                     l1339:
   827                           
   828                           ;lab5.c: 111:     RCSTAbits.CREN = 1;
   829  0266  1618               	bsf	24,4	;volatile
   830  0267                     l1341:
   831                           
   832                           ;lab5.c: 113:     TXSTAbits.TXEN = 1;
   833  0267  1683               	bsf	3,5	;RP0=1, select bank1
   834  0268  1303               	bcf	3,6	;RP1=0, select bank1
   835  0269  1698               	bsf	24,5	;volatile
   836  026A                     l1343:
   837                           
   838                           ;lab5.c: 115:     INTCONbits.GIE = 1;
   839  026A  178B               	bsf	11,7	;volatile
   840  026B                     l1345:
   841                           
   842                           ;lab5.c: 116:     INTCONbits.RBIE = 1;
   843  026B  158B               	bsf	11,3	;volatile
   844  026C                     l1347:
   845                           
   846                           ;lab5.c: 117:     INTCONbits.PEIE = 1;
   847  026C  170B               	bsf	11,6	;volatile
   848  026D                     l1349:
   849                           
   850                           ;lab5.c: 118:     sprintf(cont, "contador botones: %d \n", PORTA);
   851  026D  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   852  026E  1283               	bcf	3,5	;RP0=0, select bank0
   853  026F  1303               	bcf	3,6	;RP1=0, select bank0
   854  0270  00CF               	movwf	??_setup
   855  0271  084F               	movf	??_setup,w
   856  0272  00C2               	movwf	sprintf@f
   857  0273  0805               	movf	5,w	;volatile
   858  0274  00D0               	movwf	??_setup+1
   859  0275  01D1               	clrf	??_setup+2
   860  0276  0850               	movf	??_setup+1,w
   861  0277  00C3               	movwf	?_sprintf+1
   862  0278  0851               	movf	??_setup+2,w
   863  0279  00C4               	movwf	?_sprintf+2
   864  027A  3052               	movlw	(low (_cont| 0))& (0+255)
   865  027B  120A  118A  201C  120A  118A  	fcall	_sprintf
   866  0280                     l1351:
   867                           
   868                           ;lab5.c: 119:     enviocadena(cont);
   869  0280  3052               	movlw	(low (_cont| 0))& (0+255)
   870  0281  120A  118A  23B2  120A  118A  	fcall	_enviocadena
   871  0286                     l72:
   872  0286  0008               	return
   873  0287                     __end_of_setup:
   874                           
   875                           	psect	text2
   876  001C                     __ptext2:	
   877 ;; *************** function _sprintf *****************
   878 ;; Defined at:
   879 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  sp              1    wreg     PTR unsigned char 
   882 ;;		 -> cont(1), 
   883 ;;  f               1   34[BANK0 ] PTR const unsigned char 
   884 ;;		 -> STR_3(23), STR_2(4), STR_1(4), 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  sp              1   45[BANK0 ] PTR unsigned char 
   887 ;;		 -> cont(1), 
   888 ;;  tmpval          4    0        struct .
   889 ;;  val             2   43[BANK0 ] unsigned int 
   890 ;;  cp              2    0        PTR const unsigned char 
   891 ;;  len             2    0        unsigned int 
   892 ;;  c               1   46[BANK0 ] unsigned char 
   893 ;;  prec            1   42[BANK0 ] char 
   894 ;;  flag            1   41[BANK0 ] unsigned char 
   895 ;;  ap              1   40[BANK0 ] PTR void [1]
   896 ;;		 -> ?_sprintf(2), 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  2   34[BANK0 ] int 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       3       0       0       0
   907 ;;      Locals:         0       7       0       0       0
   908 ;;      Temps:          0       3       0       0       0
   909 ;;      Totals:         0      13       0       0       0
   910 ;;Total ram usage:       13 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    4
   913 ;; This function calls:
   914 ;;		___lwdiv
   915 ;;		___lwmod
   916 ;; This function is called by:
   917 ;;		_setup
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _sprintf
   923  001C                     _sprintf:
   924                           
   925                           ;incstack = 0
   926                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   927                           ;sprintf@sp stored from wreg
   928  001C  1283               	bcf	3,5	;RP0=0, select bank0
   929  001D  1303               	bcf	3,6	;RP1=0, select bank0
   930  001E  00CD               	movwf	sprintf@sp
   931  001F                     l1173:
   932                           
   933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   934  001F  3043               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   935  0020  00C5               	movwf	??_sprintf
   936  0021  0845               	movf	??_sprintf,w
   937  0022  00C8               	movwf	sprintf@ap
   938                           
   939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   940  0023  28EF               	goto	l1225
   941  0024                     l1175:
   942                           
   943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   944  0024  3025               	movlw	37
   945  0025  064E               	xorwf	sprintf@c,w
   946  0026  1903               	btfsc	3,2
   947  0027  2829               	goto	u691
   948  0028  282A               	goto	u690
   949  0029                     u691:
   950  0029  2836               	goto	l1181
   951  002A                     u690:
   952  002A                     l1177:
   953                           
   954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   955  002A  084E               	movf	sprintf@c,w
   956  002B  00C5               	movwf	??_sprintf
   957  002C  084D               	movf	sprintf@sp,w
   958  002D  0084               	movwf	4
   959  002E  0845               	movf	??_sprintf,w
   960  002F  1383               	bcf	3,7	;select IRP bank0
   961  0030  0080               	movwf	0
   962  0031                     l1179:
   963  0031  3001               	movlw	1
   964  0032  00C5               	movwf	??_sprintf
   965  0033  0845               	movf	??_sprintf,w
   966  0034  07CD               	addwf	sprintf@sp,f
   967                           
   968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   969  0035  28EF               	goto	l1225
   970  0036                     l1181:
   971                           
   972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   973  0036  01C9               	clrf	sprintf@flag
   974  0037                     l1185:	
   975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   976                           
   977  0037  3001               	movlw	1
   978  0038  07C2               	addwf	sprintf@f,f
   979  0039  30FF               	movlw	-1
   980  003A  0742               	addwf	sprintf@f,w
   981  003B  0084               	movwf	4
   982  003C  120A  118A  2387  120A  118A  	fcall	stringdir
   983  0041  00CE               	movwf	sprintf@c
   984  0042  00C5               	movwf	??_sprintf
   985  0043  01C6               	clrf	??_sprintf+1
   986                           
   987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 1, Range of values is 0 to 0
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte            4     3 (average)
   993                           ; direct_byte           11     8 (fixed)
   994                           ; jumptable            260     6 (fixed)
   995                           ;	Chosen strategy is simple_byte
   996  0044  0846               	movf	??_sprintf+1,w
   997  0045  3A00               	xorlw	0	; case 0
   998  0046  1903               	skipnz
   999  0047  2849               	goto	l1491
  1000  0048  28EF               	goto	l1225
  1001  0049                     l1491:
  1002                           
  1003                           ; Switch size 1, requested type "simple"
  1004                           ; Number of cases is 3, Range of values is 0 to 105
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte           10     6 (average)
  1008                           ; jumptable            260     6 (fixed)
  1009                           ;	Chosen strategy is simple_byte
  1010  0049  0845               	movf	??_sprintf,w
  1011  004A  3A00               	xorlw	0	; case 0
  1012  004B  1903               	skipnz
  1013  004C  2901               	goto	l1227
  1014  004D  3A64               	xorlw	100	; case 100
  1015  004E  1903               	skipnz
  1016  004F  2854               	goto	l1187
  1017  0050  3A0D               	xorlw	13	; case 105
  1018  0051  1903               	skipnz
  1019  0052  2854               	goto	l1187
  1020  0053  28EF               	goto	l1225
  1021  0054                     l1187:
  1022                           
  1023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1024  0054  0848               	movf	sprintf@ap,w
  1025  0055  0084               	movwf	4
  1026  0056  1383               	bcf	3,7	;select IRP bank0
  1027  0057  0800               	movf	0,w
  1028  0058  00CB               	movwf	sprintf@val
  1029  0059  0A84               	incf	4,f
  1030  005A  0800               	movf	0,w
  1031  005B  00CC               	movwf	sprintf@val+1
  1032  005C                     l1189:
  1033  005C  3002               	movlw	2
  1034  005D  00C5               	movwf	??_sprintf
  1035  005E  0845               	movf	??_sprintf,w
  1036  005F  07C8               	addwf	sprintf@ap,f
  1037  0060                     l1191:
  1038                           
  1039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1040  0060  1FCC               	btfss	sprintf@val+1,7
  1041  0061  2863               	goto	u701
  1042  0062  2864               	goto	u700
  1043  0063                     u701:
  1044  0063  286D               	goto	l1197
  1045  0064                     u700:
  1046  0064                     l1193:
  1047                           
  1048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1049  0064  3003               	movlw	3
  1050  0065  00C5               	movwf	??_sprintf
  1051  0066  0845               	movf	??_sprintf,w
  1052  0067  04C9               	iorwf	sprintf@flag,f
  1053  0068                     l1195:
  1054                           
  1055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1056  0068  09CB               	comf	sprintf@val,f
  1057  0069  09CC               	comf	sprintf@val+1,f
  1058  006A  0ACB               	incf	sprintf@val,f
  1059  006B  1903               	skipnz
  1060  006C  0ACC               	incf	sprintf@val+1,f
  1061  006D                     l1197:
  1062                           
  1063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1064  006D  01CE               	clrf	sprintf@c
  1065  006E  0ACE               	incf	sprintf@c,f
  1066  006F                     l1203:
  1067                           
  1068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1069  006F  084E               	movf	sprintf@c,w
  1070  0070  00C5               	movwf	??_sprintf
  1071  0071  0745               	addwf	??_sprintf,w
  1072  0072  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1073  0073  0084               	movwf	4
  1074  0074  120A  118A  2387  120A  118A  	fcall	stringdir
  1075  0079  00C6               	movwf	??_sprintf+1
  1076  007A  120A  118A  2387  120A  118A  	fcall	stringdir
  1077  007F  00C7               	movwf	??_sprintf+2
  1078  0080  0847               	movf	??_sprintf+2,w
  1079  0081  024C               	subwf	sprintf@val+1,w
  1080  0082  1D03               	skipz
  1081  0083  2886               	goto	u715
  1082  0084  0846               	movf	??_sprintf+1,w
  1083  0085  024B               	subwf	sprintf@val,w
  1084  0086                     u715:
  1085  0086  1803               	skipnc
  1086  0087  2889               	goto	u711
  1087  0088  288A               	goto	u710
  1088  0089                     u711:
  1089  0089  288B               	goto	l1207
  1090  008A                     u710:
  1091  008A  2895               	goto	l1209
  1092  008B                     l1207:
  1093  008B  3001               	movlw	1
  1094  008C  00C5               	movwf	??_sprintf
  1095  008D  0845               	movf	??_sprintf,w
  1096  008E  07CE               	addwf	sprintf@c,f
  1097  008F  3005               	movlw	5
  1098  0090  064E               	xorwf	sprintf@c,w
  1099  0091  1D03               	btfss	3,2
  1100  0092  2894               	goto	u721
  1101  0093  2895               	goto	u720
  1102  0094                     u721:
  1103  0094  286F               	goto	l1203
  1104  0095                     u720:
  1105  0095                     l1209:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1108  0095  0849               	movf	sprintf@flag,w
  1109  0096  3903               	andlw	3
  1110  0097  1903               	btfsc	3,2
  1111  0098  289A               	goto	u731
  1112  0099  289B               	goto	u730
  1113  009A                     u731:
  1114  009A  28A6               	goto	l1215
  1115  009B                     u730:
  1116  009B                     l1211:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1119  009B  302D               	movlw	45
  1120  009C  00C5               	movwf	??_sprintf
  1121  009D  084D               	movf	sprintf@sp,w
  1122  009E  0084               	movwf	4
  1123  009F  0845               	movf	??_sprintf,w
  1124  00A0  1383               	bcf	3,7	;select IRP bank0
  1125  00A1  0080               	movwf	0
  1126  00A2                     l1213:
  1127  00A2  3001               	movlw	1
  1128  00A3  00C5               	movwf	??_sprintf
  1129  00A4  0845               	movf	??_sprintf,w
  1130  00A5  07CD               	addwf	sprintf@sp,f
  1131  00A6                     l1215:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1134  00A6  084E               	movf	sprintf@c,w
  1135  00A7  00C5               	movwf	??_sprintf
  1136  00A8  0845               	movf	??_sprintf,w
  1137  00A9  00CA               	movwf	sprintf@prec
  1138                           
  1139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1140  00AA  28E6               	goto	l1223
  1141  00AB                     l1217:
  1142                           
  1143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1144  00AB  300A               	movlw	10
  1145  00AC  00BC               	movwf	___lwmod@divisor
  1146  00AD  3000               	movlw	0
  1147  00AE  00BD               	movwf	___lwmod@divisor+1
  1148  00AF  084A               	movf	sprintf@prec,w
  1149  00B0  00C5               	movwf	??_sprintf
  1150  00B1  0745               	addwf	??_sprintf,w
  1151  00B2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1152  00B3  0084               	movwf	4
  1153  00B4  120A  118A  2387  120A  118A  	fcall	stringdir
  1154  00B9  00B4               	movwf	___lwdiv@divisor
  1155  00BA  120A  118A  2387  120A  118A  	fcall	stringdir
  1156  00BF  00B5               	movwf	___lwdiv@divisor+1
  1157  00C0  084C               	movf	sprintf@val+1,w
  1158  00C1  00B7               	movwf	___lwdiv@dividend+1
  1159  00C2  084B               	movf	sprintf@val,w
  1160  00C3  00B6               	movwf	___lwdiv@dividend
  1161  00C4  120A  118A  2287  120A  118A  	fcall	___lwdiv
  1162  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1163  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1164  00CB  0835               	movf	?___lwdiv+1,w
  1165  00CC  00BF               	movwf	___lwmod@dividend+1
  1166  00CD  0834               	movf	?___lwdiv,w
  1167  00CE  00BE               	movwf	___lwmod@dividend
  1168  00CF  120A  118A  2311  120A  118A  	fcall	___lwmod
  1169  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00D6  083C               	movf	?___lwmod,w
  1172  00D7  3E30               	addlw	48
  1173  00D8  00C6               	movwf	??_sprintf+1
  1174  00D9  0846               	movf	??_sprintf+1,w
  1175  00DA  00CE               	movwf	sprintf@c
  1176  00DB                     l1219:
  1177                           
  1178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1179  00DB  084E               	movf	sprintf@c,w
  1180  00DC  00C5               	movwf	??_sprintf
  1181  00DD  084D               	movf	sprintf@sp,w
  1182  00DE  0084               	movwf	4
  1183  00DF  0845               	movf	??_sprintf,w
  1184  00E0  1383               	bcf	3,7	;select IRP bank0
  1185  00E1  0080               	movwf	0
  1186  00E2                     l1221:
  1187  00E2  3001               	movlw	1
  1188  00E3  00C5               	movwf	??_sprintf
  1189  00E4  0845               	movf	??_sprintf,w
  1190  00E5  07CD               	addwf	sprintf@sp,f
  1191  00E6                     l1223:
  1192                           
  1193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1194  00E6  30FF               	movlw	255
  1195  00E7  00C5               	movwf	??_sprintf
  1196  00E8  0845               	movf	??_sprintf,w
  1197  00E9  07CA               	addwf	sprintf@prec,f
  1198  00EA  0A4A               	incf	sprintf@prec,w
  1199  00EB  1D03               	btfss	3,2
  1200  00EC  28EE               	goto	u741
  1201  00ED  28EF               	goto	u740
  1202  00EE                     u741:
  1203  00EE  28AB               	goto	l1217
  1204  00EF                     u740:
  1205  00EF                     l1225:
  1206                           
  1207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1208  00EF  3001               	movlw	1
  1209  00F0  07C2               	addwf	sprintf@f,f
  1210  00F1  30FF               	movlw	-1
  1211  00F2  0742               	addwf	sprintf@f,w
  1212  00F3  0084               	movwf	4
  1213  00F4  120A  118A  2387  120A  118A  	fcall	stringdir
  1214  00F9  00C5               	movwf	??_sprintf
  1215  00FA  0845               	movf	??_sprintf,w
  1216  00FB  00CE               	movwf	sprintf@c
  1217  00FC  084E               	movf	sprintf@c,w
  1218  00FD  1D03               	btfss	3,2
  1219  00FE  2900               	goto	u751
  1220  00FF  2901               	goto	u750
  1221  0100                     u751:
  1222  0100  2824               	goto	l1175
  1223  0101                     u750:
  1224  0101                     l1227:
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1227  0101  084D               	movf	sprintf@sp,w
  1228  0102  0084               	movwf	4
  1229  0103  1383               	bcf	3,7	;select IRP bank0
  1230  0104  0180               	clrf	0
  1231  0105                     l223:
  1232  0105  0008               	return
  1233  0106                     __end_of_sprintf:
  1234                           
  1235                           	psect	text3
  1236  0311                     __ptext3:	
  1237 ;; *************** function ___lwmod *****************
  1238 ;; Defined at:
  1239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  divisor         2   28[BANK0 ] unsigned int 
  1242 ;;  dividend        2   30[BANK0 ] unsigned int 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  counter         1   33[BANK0 ] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  2   28[BANK0 ] unsigned int 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         0       4       0       0       0
  1255 ;;      Locals:         0       1       0       0       0
  1256 ;;      Temps:          0       1       0       0       0
  1257 ;;      Totals:         0       6       0       0       0
  1258 ;;Total ram usage:        6 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    3
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_sprintf
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           
  1269                           ;psect for function ___lwmod
  1270  0311                     ___lwmod:
  1271  0311                     l1151:	
  1272                           ;incstack = 0
  1273                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1274                           
  1275  0311  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0312  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0313  083C               	movf	___lwmod@divisor,w
  1278  0314  043D               	iorwf	___lwmod@divisor+1,w
  1279  0315  1903               	btfsc	3,2
  1280  0316  2B18               	goto	u631
  1281  0317  2B19               	goto	u630
  1282  0318                     u631:
  1283  0318  2B48               	goto	l1169
  1284  0319                     u630:
  1285  0319                     l1153:
  1286  0319  01C1               	clrf	___lwmod@counter
  1287  031A  0AC1               	incf	___lwmod@counter,f
  1288  031B  2B27               	goto	l1159
  1289  031C                     l1155:
  1290  031C  3001               	movlw	1
  1291  031D                     u645:
  1292  031D  1003               	clrc
  1293  031E  0DBC               	rlf	___lwmod@divisor,f
  1294  031F  0DBD               	rlf	___lwmod@divisor+1,f
  1295  0320  3EFF               	addlw	-1
  1296  0321  1D03               	skipz
  1297  0322  2B1D               	goto	u645
  1298  0323                     l1157:
  1299  0323  3001               	movlw	1
  1300  0324  00C0               	movwf	??___lwmod
  1301  0325  0840               	movf	??___lwmod,w
  1302  0326  07C1               	addwf	___lwmod@counter,f
  1303  0327                     l1159:
  1304  0327  1FBD               	btfss	___lwmod@divisor+1,7
  1305  0328  2B2A               	goto	u651
  1306  0329  2B2B               	goto	u650
  1307  032A                     u651:
  1308  032A  2B1C               	goto	l1155
  1309  032B                     u650:
  1310  032B                     l1161:
  1311  032B  083D               	movf	___lwmod@divisor+1,w
  1312  032C  023F               	subwf	___lwmod@dividend+1,w
  1313  032D  1D03               	skipz
  1314  032E  2B31               	goto	u665
  1315  032F  083C               	movf	___lwmod@divisor,w
  1316  0330  023E               	subwf	___lwmod@dividend,w
  1317  0331                     u665:
  1318  0331  1C03               	skipc
  1319  0332  2B34               	goto	u661
  1320  0333  2B35               	goto	u660
  1321  0334                     u661:
  1322  0334  2B3B               	goto	l1165
  1323  0335                     u660:
  1324  0335                     l1163:
  1325  0335  083C               	movf	___lwmod@divisor,w
  1326  0336  02BE               	subwf	___lwmod@dividend,f
  1327  0337  083D               	movf	___lwmod@divisor+1,w
  1328  0338  1C03               	skipc
  1329  0339  03BF               	decf	___lwmod@dividend+1,f
  1330  033A  02BF               	subwf	___lwmod@dividend+1,f
  1331  033B                     l1165:
  1332  033B  3001               	movlw	1
  1333  033C                     u675:
  1334  033C  1003               	clrc
  1335  033D  0CBD               	rrf	___lwmod@divisor+1,f
  1336  033E  0CBC               	rrf	___lwmod@divisor,f
  1337  033F  3EFF               	addlw	-1
  1338  0340  1D03               	skipz
  1339  0341  2B3C               	goto	u675
  1340  0342                     l1167:
  1341  0342  3001               	movlw	1
  1342  0343  02C1               	subwf	___lwmod@counter,f
  1343  0344  1D03               	btfss	3,2
  1344  0345  2B47               	goto	u681
  1345  0346  2B48               	goto	u680
  1346  0347                     u681:
  1347  0347  2B2B               	goto	l1161
  1348  0348                     u680:
  1349  0348                     l1169:
  1350  0348  083F               	movf	___lwmod@dividend+1,w
  1351  0349  00BD               	movwf	?___lwmod+1
  1352  034A  083E               	movf	___lwmod@dividend,w
  1353  034B  00BC               	movwf	?___lwmod
  1354  034C                     l509:
  1355  034C  0008               	return
  1356  034D                     __end_of___lwmod:
  1357                           
  1358                           	psect	text4
  1359  0287                     __ptext4:	
  1360 ;; *************** function ___lwdiv *****************
  1361 ;; Defined at:
  1362 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  divisor         2   20[BANK0 ] unsigned int 
  1365 ;;  dividend        2   22[BANK0 ] unsigned int 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  quotient        2   25[BANK0 ] unsigned int 
  1368 ;;  counter         1   27[BANK0 ] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  2   20[BANK0 ] unsigned int 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         0       4       0       0       0
  1379 ;;      Locals:         0       3       0       0       0
  1380 ;;      Temps:          0       1       0       0       0
  1381 ;;      Totals:         0       8       0       0       0
  1382 ;;Total ram usage:        8 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    3
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_sprintf
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function ___lwdiv
  1394  0287                     ___lwdiv:
  1395  0287                     l1125:	
  1396                           ;incstack = 0
  1397                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1398                           
  1399  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0289  01B9               	clrf	___lwdiv@quotient
  1402  028A  01BA               	clrf	___lwdiv@quotient+1
  1403  028B                     l1127:
  1404  028B  0834               	movf	___lwdiv@divisor,w
  1405  028C  0435               	iorwf	___lwdiv@divisor+1,w
  1406  028D  1903               	btfsc	3,2
  1407  028E  2A90               	goto	u561
  1408  028F  2A91               	goto	u560
  1409  0290                     u561:
  1410  0290  2AC8               	goto	l1147
  1411  0291                     u560:
  1412  0291                     l1129:
  1413  0291  01BB               	clrf	___lwdiv@counter
  1414  0292  0ABB               	incf	___lwdiv@counter,f
  1415  0293  2A9F               	goto	l1135
  1416  0294                     l1131:
  1417  0294  3001               	movlw	1
  1418  0295                     u575:
  1419  0295  1003               	clrc
  1420  0296  0DB4               	rlf	___lwdiv@divisor,f
  1421  0297  0DB5               	rlf	___lwdiv@divisor+1,f
  1422  0298  3EFF               	addlw	-1
  1423  0299  1D03               	skipz
  1424  029A  2A95               	goto	u575
  1425  029B                     l1133:
  1426  029B  3001               	movlw	1
  1427  029C  00B8               	movwf	??___lwdiv
  1428  029D  0838               	movf	??___lwdiv,w
  1429  029E  07BB               	addwf	___lwdiv@counter,f
  1430  029F                     l1135:
  1431  029F  1FB5               	btfss	___lwdiv@divisor+1,7
  1432  02A0  2AA2               	goto	u581
  1433  02A1  2AA3               	goto	u580
  1434  02A2                     u581:
  1435  02A2  2A94               	goto	l1131
  1436  02A3                     u580:
  1437  02A3                     l1137:
  1438  02A3  3001               	movlw	1
  1439  02A4                     u595:
  1440  02A4  1003               	clrc
  1441  02A5  0DB9               	rlf	___lwdiv@quotient,f
  1442  02A6  0DBA               	rlf	___lwdiv@quotient+1,f
  1443  02A7  3EFF               	addlw	-1
  1444  02A8  1D03               	skipz
  1445  02A9  2AA4               	goto	u595
  1446  02AA  0835               	movf	___lwdiv@divisor+1,w
  1447  02AB  0237               	subwf	___lwdiv@dividend+1,w
  1448  02AC  1D03               	skipz
  1449  02AD  2AB0               	goto	u605
  1450  02AE  0834               	movf	___lwdiv@divisor,w
  1451  02AF  0236               	subwf	___lwdiv@dividend,w
  1452  02B0                     u605:
  1453  02B0  1C03               	skipc
  1454  02B1  2AB3               	goto	u601
  1455  02B2  2AB4               	goto	u600
  1456  02B3                     u601:
  1457  02B3  2ABB               	goto	l1143
  1458  02B4                     u600:
  1459  02B4                     l1139:
  1460  02B4  0834               	movf	___lwdiv@divisor,w
  1461  02B5  02B6               	subwf	___lwdiv@dividend,f
  1462  02B6  0835               	movf	___lwdiv@divisor+1,w
  1463  02B7  1C03               	skipc
  1464  02B8  03B7               	decf	___lwdiv@dividend+1,f
  1465  02B9  02B7               	subwf	___lwdiv@dividend+1,f
  1466  02BA                     l1141:
  1467  02BA  1439               	bsf	___lwdiv@quotient,0
  1468  02BB                     l1143:
  1469  02BB  3001               	movlw	1
  1470  02BC                     u615:
  1471  02BC  1003               	clrc
  1472  02BD  0CB5               	rrf	___lwdiv@divisor+1,f
  1473  02BE  0CB4               	rrf	___lwdiv@divisor,f
  1474  02BF  3EFF               	addlw	-1
  1475  02C0  1D03               	skipz
  1476  02C1  2ABC               	goto	u615
  1477  02C2                     l1145:
  1478  02C2  3001               	movlw	1
  1479  02C3  02BB               	subwf	___lwdiv@counter,f
  1480  02C4  1D03               	btfss	3,2
  1481  02C5  2AC7               	goto	u621
  1482  02C6  2AC8               	goto	u620
  1483  02C7                     u621:
  1484  02C7  2AA3               	goto	l1137
  1485  02C8                     u620:
  1486  02C8                     l1147:
  1487  02C8  083A               	movf	___lwdiv@quotient+1,w
  1488  02C9  00B5               	movwf	?___lwdiv+1
  1489  02CA  0839               	movf	___lwdiv@quotient,w
  1490  02CB  00B4               	movwf	?___lwdiv
  1491  02CC                     l499:
  1492  02CC  0008               	return
  1493  02CD                     __end_of___lwdiv:
  1494                           
  1495                           	psect	text5
  1496  03B2                     __ptext5:	
  1497 ;; *************** function _enviocadena *****************
  1498 ;; Defined at:
  1499 ;;		line 44 in file "usart.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  cadena          1    wreg     PTR unsigned char 
  1502 ;;		 -> cont(1), 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  cadena          1   22[BANK0 ] PTR unsigned char 
  1505 ;;		 -> cont(1), 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       0       0       0       0
  1516 ;;      Locals:         0       1       0       0       0
  1517 ;;      Temps:          0       1       0       0       0
  1518 ;;      Totals:         0       2       0       0       0
  1519 ;;Total ram usage:        2 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    4
  1522 ;; This function calls:
  1523 ;;		_enviocaracter
  1524 ;; This function is called by:
  1525 ;;		_setup
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _enviocadena
  1531  03B2                     _enviocadena:
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1535                           ;enviocadena@cadena stored from wreg
  1536  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1537  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1538  03B4  00B6               	movwf	enviocadena@cadena
  1539  03B5                     l1235:
  1540                           
  1541                           ;usart.c: 45:     while (*cadena != 0){
  1542  03B5  2BC4               	goto	l1241
  1543  03B6                     l1237:
  1544                           
  1545                           ;usart.c: 46:       enviocaracter(*cadena);
  1546  03B6  0836               	movf	enviocadena@cadena,w
  1547  03B7  0084               	movwf	4
  1548  03B8  0800               	movf	0,w
  1549  03B9  120A  118A  23F2  120A  118A  	fcall	_enviocaracter
  1550  03BE                     l1239:
  1551                           
  1552                           ;usart.c: 47:       cadena++;
  1553  03BE  3001               	movlw	1
  1554  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1555  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1556  03C1  00B5               	movwf	??_enviocadena
  1557  03C2  0835               	movf	??_enviocadena,w
  1558  03C3  07B6               	addwf	enviocadena@cadena,f
  1559  03C4                     l1241:
  1560                           
  1561                           ;usart.c: 45:     while (*cadena != 0){
  1562  03C4  0836               	movf	enviocadena@cadena,w
  1563  03C5  0084               	movwf	4
  1564  03C6  1383               	bcf	3,7	;select IRP bank0
  1565  03C7  0800               	movf	0,w
  1566  03C8  1D03               	btfss	3,2
  1567  03C9  2BCB               	goto	u761
  1568  03CA  2BCC               	goto	u760
  1569  03CB                     u761:
  1570  03CB  2BB6               	goto	l1237
  1571  03CC                     u760:
  1572  03CC                     l111:
  1573                           
  1574                           ;usart.c: 49:     if (PIR1bits.TXIF){
  1575  03CC  1E0C               	btfss	12,4	;volatile
  1576  03CD  2BCF               	goto	u771
  1577  03CE  2BD0               	goto	u770
  1578  03CF                     u771:
  1579  03CF  2BD2               	goto	l113
  1580  03D0                     u770:
  1581  03D0                     l1243:
  1582                           
  1583                           ;usart.c: 50:             TXREG = 13;
  1584  03D0  300D               	movlw	13
  1585  03D1  0099               	movwf	25	;volatile
  1586  03D2                     l113:
  1587  03D2  0008               	return
  1588  03D3                     __end_of_enviocadena:
  1589                           
  1590                           	psect	text6
  1591  03F2                     __ptext6:	
  1592 ;; *************** function _enviocaracter *****************
  1593 ;; Defined at:
  1594 ;;		line 35 in file "usart.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  a               1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  a               1   20[BANK0 ] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       1       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       1       0       0       0
  1612 ;;Total ram usage:        1 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    3
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_enviocadena
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _enviocaracter
  1624  03F2                     _enviocaracter:
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in _enviocaracter: [wreg]
  1628                           ;enviocaracter@a stored from wreg
  1629  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1630  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1631  03F4  00B4               	movwf	enviocaracter@a
  1632  03F5                     l1121:
  1633  03F5                     l102:	
  1634                           ;usart.c: 38:     }
  1635                           
  1636                           
  1637                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  1638  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1639  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1640  03F7  1C98               	btfss	24,1	;volatile
  1641  03F8  2BFA               	goto	u541
  1642  03F9  2BFB               	goto	u540
  1643  03FA                     u541:
  1644  03FA  2BF5               	goto	l102
  1645  03FB                     u540:
  1646  03FB                     l104:
  1647                           
  1648                           ;usart.c: 39:     if (PIR1bits.TXIF){
  1649  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1650  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1651  03FD  1E0C               	btfss	12,4	;volatile
  1652  03FE  2C00               	goto	u551
  1653  03FF  2C01               	goto	u550
  1654  0400                     u551:
  1655  0400  2C03               	goto	l106
  1656  0401                     u550:
  1657  0401                     l1123:
  1658                           
  1659                           ;usart.c: 40:             TXREG = a;
  1660  0401  0834               	movf	enviocaracter@a,w
  1661  0402  0099               	movwf	25	;volatile
  1662  0403                     l106:
  1663  0403  0008               	return
  1664  0404                     __end_of_enviocaracter:
  1665                           
  1666                           	psect	text7
  1667  01EE                     __ptext7:	
  1668 ;; *************** function _isr *****************
  1669 ;; Defined at:
  1670 ;;		line 48 in file "lab5.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0
  1686 ;;      Temps:          0       7       0       0       0
  1687 ;;      Totals:         0       7       0       0       0
  1688 ;;Total ram usage:        7 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    2
  1691 ;; This function calls:
  1692 ;;		i1_enviocadena
  1693 ;;		i1_sprintf
  1694 ;; This function is called by:
  1695 ;;		Interrupt level 1
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _isr
  1701  01EE                     _isr:
  1702  01EE                     i1l1425:
  1703                           
  1704                           ;lab5.c: 49:     if(RBIF == 1) {
  1705  01EE  1C0B               	btfss	11,0	;volatile
  1706  01EF  29F1               	goto	u102_21
  1707  01F0  29F2               	goto	u102_20
  1708  01F1                     u102_21:
  1709  01F1  2A31               	goto	i1l60
  1710  01F2                     u102_20:
  1711  01F2                     i1l1427:
  1712                           
  1713                           ;lab5.c: 51:         if (PORTBbits.RB0 == 0) {PORTA++;
  1714  01F2  1806               	btfsc	6,0	;volatile
  1715  01F3  29F5               	goto	u103_21
  1716  01F4  29F6               	goto	u103_20
  1717  01F5                     u103_21:
  1718  01F5  2A11               	goto	i1l1435
  1719  01F6                     u103_20:
  1720  01F6                     i1l1429:
  1721  01F6  3001               	movlw	1
  1722  01F7  00AD               	movwf	??_isr
  1723  01F8  082D               	movf	??_isr,w
  1724  01F9  0785               	addwf	5,f	;volatile
  1725  01FA                     i1l1431:
  1726                           
  1727                           ;lab5.c: 52:         sprintf(cont, "%d\n", PORTA);
  1728  01FA  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1729  01FB  00AD               	movwf	??_isr
  1730  01FC  082D               	movf	??_isr,w
  1731  01FD  00A0               	movwf	i1sprintf@f
  1732  01FE  0805               	movf	5,w	;volatile
  1733  01FF  00AE               	movwf	??_isr+1
  1734  0200  01AF               	clrf	??_isr+2
  1735  0201  082E               	movf	??_isr+1,w
  1736  0202  00A1               	movwf	?i1_sprintf+1
  1737  0203  082F               	movf	??_isr+2,w
  1738  0204  00A2               	movwf	?i1_sprintf+2
  1739  0205  3052               	movlw	(low (_cont| 0))& (0+255)
  1740  0206  120A  118A  2106  120A  118A  	fcall	i1_sprintf
  1741  020B                     i1l1433:
  1742                           
  1743                           ;lab5.c: 53:                  enviocadena(cont);}
  1744  020B  3052               	movlw	(low (_cont| 0))& (0+255)
  1745  020C  120A  118A  23D3  120A  118A  	fcall	i1_enviocadena
  1746  0211                     i1l1435:
  1747                           
  1748                           ;lab5.c: 55:         if (PORTBbits.RB1 == 0) {PORTA--;
  1749  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1751  0213  1886               	btfsc	6,1	;volatile
  1752  0214  2A16               	goto	u104_21
  1753  0215  2A17               	goto	u104_20
  1754  0216                     u104_21:
  1755  0216  2A30               	goto	i1l1443
  1756  0217                     u104_20:
  1757  0217                     i1l1437:
  1758  0217  3001               	movlw	1
  1759  0218  0285               	subwf	5,f	;volatile
  1760  0219                     i1l1439:
  1761                           
  1762                           ;lab5.c: 56:         sprintf(cont, "%d\n", PORTA);
  1763  0219  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1764  021A  00AD               	movwf	??_isr
  1765  021B  082D               	movf	??_isr,w
  1766  021C  00A0               	movwf	i1sprintf@f
  1767  021D  0805               	movf	5,w	;volatile
  1768  021E  00AE               	movwf	??_isr+1
  1769  021F  01AF               	clrf	??_isr+2
  1770  0220  082E               	movf	??_isr+1,w
  1771  0221  00A1               	movwf	?i1_sprintf+1
  1772  0222  082F               	movf	??_isr+2,w
  1773  0223  00A2               	movwf	?i1_sprintf+2
  1774  0224  3052               	movlw	(low (_cont| 0))& (0+255)
  1775  0225  120A  118A  2106  120A  118A  	fcall	i1_sprintf
  1776  022A                     i1l1441:
  1777                           
  1778                           ;lab5.c: 57:                  enviocadena(cont);}
  1779  022A  3052               	movlw	(low (_cont| 0))& (0+255)
  1780  022B  120A  118A  23D3  120A  118A  	fcall	i1_enviocadena
  1781  0230                     i1l1443:
  1782                           
  1783                           ;lab5.c: 59:         INTCONbits.RBIF = 0;
  1784  0230  100B               	bcf	11,0	;volatile
  1785  0231                     i1l60:
  1786  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0233  0833               	movf	??_isr+6,w
  1789  0234  00FF               	movwf	btemp+1
  1790  0235  0832               	movf	??_isr+5,w
  1791  0236  008A               	movwf	10
  1792  0237  0831               	movf	??_isr+4,w
  1793  0238  0084               	movwf	4
  1794  0239  0E30               	swapf	??_isr+3,w
  1795  023A  0083               	movwf	3
  1796  023B  0EFE               	swapf	btemp,f
  1797  023C  0E7E               	swapf	btemp,w
  1798  023D  0009               	retfie
  1799  023E                     __end_of_isr:
  1800                           
  1801                           	psect	intentry
  1802  0004                     __pintentry:	
  1803                           ;incstack = 0
  1804                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1805                           
  1806  0004                     interrupt_function:
  1807  007E                     saved_w	set	btemp
  1808  0004  00FE               	movwf	btemp
  1809  0005  0E03               	swapf	3,w
  1810  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0008  00B0               	movwf	??_isr+3
  1813  0009  0804               	movf	4,w
  1814  000A  00B1               	movwf	??_isr+4
  1815  000B  080A               	movf	10,w
  1816  000C  00B2               	movwf	??_isr+5
  1817  000D  087F               	movf	btemp+1,w
  1818  000E  00B3               	movwf	??_isr+6
  1819  000F  120A  118A  29EE   	ljmp	_isr
  1820                           
  1821                           	psect	text8
  1822  0106                     __ptext8:	
  1823 ;; *************** function i1_sprintf *****************
  1824 ;; Defined at:
  1825 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  sp              1    wreg     PTR unsigned char 
  1828 ;;		 -> cont(1), 
  1829 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1830 ;;		 -> STR_3(23), STR_2(4), STR_1(4), 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1833 ;;		 -> cont(1), 
  1834 ;;  tmpval          4    0        struct .
  1835 ;;  val             2    9[BANK0 ] unsigned int 
  1836 ;;  cp              2    0        PTR const unsigned char 
  1837 ;;  len             2    0        unsigned int 
  1838 ;;  c               1   12[BANK0 ] unsigned char 
  1839 ;;  prec            1    8[BANK0 ] char 
  1840 ;;  flag            1    7[BANK0 ] unsigned char 
  1841 ;;  ap              1    6[BANK0 ] PTR void [1]
  1842 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    0[BANK0 ] int 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       3       0       0       0
  1853 ;;      Locals:         0       7       0       0       0
  1854 ;;      Temps:          0       3       0       0       0
  1855 ;;      Totals:         0      13       0       0       0
  1856 ;;Total ram usage:       13 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    1
  1859 ;; This function calls:
  1860 ;;		i1___lwdiv
  1861 ;;		i1___lwmod
  1862 ;; This function is called by:
  1863 ;;		_isr
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function i1_sprintf
  1869  0106                     i1_sprintf:
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1873                           ;i1sprintf@sp stored from wreg
  1874  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0108  00AB               	movwf	i1sprintf@sp
  1877  0109                     i1l1363:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1880  0109  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  1881  010A  00A3               	movwf	??i1_sprintf
  1882  010B  0823               	movf	??i1_sprintf,w
  1883  010C  00A6               	movwf	i1sprintf@ap
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1886  010D  29D7               	goto	i1l1415
  1887  010E                     i1l1365:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1890  010E  3025               	movlw	37
  1891  010F  062C               	xorwf	i1sprintf@c,w
  1892  0110  1903               	btfsc	3,2
  1893  0111  2913               	goto	u95_21
  1894  0112  2914               	goto	u95_20
  1895  0113                     u95_21:
  1896  0113  2920               	goto	i1l1371
  1897  0114                     u95_20:
  1898  0114                     i1l1367:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1901  0114  082C               	movf	i1sprintf@c,w
  1902  0115  00A3               	movwf	??i1_sprintf
  1903  0116  082B               	movf	i1sprintf@sp,w
  1904  0117  0084               	movwf	4
  1905  0118  0823               	movf	??i1_sprintf,w
  1906  0119  1383               	bcf	3,7	;select IRP bank0
  1907  011A  0080               	movwf	0
  1908  011B                     i1l1369:
  1909  011B  3001               	movlw	1
  1910  011C  00A3               	movwf	??i1_sprintf
  1911  011D  0823               	movf	??i1_sprintf,w
  1912  011E  07AB               	addwf	i1sprintf@sp,f
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1915  011F  29D7               	goto	i1l1415
  1916  0120                     i1l1371:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1919  0120  01A7               	clrf	i1sprintf@flag
  1920  0121                     i1l1375:	
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1922                           
  1923  0121  3001               	movlw	1
  1924  0122  07A0               	addwf	i1sprintf@f,f
  1925  0123  30FF               	movlw	-1
  1926  0124  0720               	addwf	i1sprintf@f,w
  1927  0125  0084               	movwf	4
  1928  0126  120A  118A  2387  120A  118A  	fcall	stringdir
  1929  012B  00AC               	movwf	i1sprintf@c
  1930  012C  00A3               	movwf	??i1_sprintf
  1931  012D  01A4               	clrf	??i1_sprintf+1
  1932                           
  1933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1934                           ; Switch size 1, requested type "simple"
  1935                           ; Number of cases is 1, Range of values is 0 to 0
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte            4     3 (average)
  1939                           ; direct_byte           11     8 (fixed)
  1940                           ; jumptable            260     6 (fixed)
  1941                           ;	Chosen strategy is simple_byte
  1942  012E  0824               	movf	??i1_sprintf+1,w
  1943  012F  3A00               	xorlw	0	; case 0
  1944  0130  1903               	skipnz
  1945  0131  2933               	goto	i1l1493
  1946  0132  29D7               	goto	i1l1415
  1947  0133                     i1l1493:
  1948                           
  1949                           ; Switch size 1, requested type "simple"
  1950                           ; Number of cases is 3, Range of values is 0 to 105
  1951                           ; switch strategies available:
  1952                           ; Name         Instructions Cycles
  1953                           ; simple_byte           10     6 (average)
  1954                           ; jumptable            260     6 (fixed)
  1955                           ;	Chosen strategy is simple_byte
  1956  0133  0823               	movf	??i1_sprintf,w
  1957  0134  3A00               	xorlw	0	; case 0
  1958  0135  1903               	skipnz
  1959  0136  29E9               	goto	i1l1417
  1960  0137  3A64               	xorlw	100	; case 100
  1961  0138  1903               	skipnz
  1962  0139  293E               	goto	i1l1377
  1963  013A  3A0D               	xorlw	13	; case 105
  1964  013B  1903               	skipnz
  1965  013C  293E               	goto	i1l1377
  1966  013D  29D7               	goto	i1l1415
  1967  013E                     i1l1377:
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1970  013E  0826               	movf	i1sprintf@ap,w
  1971  013F  0084               	movwf	4
  1972  0140  1383               	bcf	3,7	;select IRP bank0
  1973  0141  0800               	movf	0,w
  1974  0142  00A9               	movwf	i1sprintf@val
  1975  0143  0A84               	incf	4,f
  1976  0144  0800               	movf	0,w
  1977  0145  00AA               	movwf	i1sprintf@val+1
  1978  0146                     i1l1379:
  1979  0146  3002               	movlw	2
  1980  0147  00A3               	movwf	??i1_sprintf
  1981  0148  0823               	movf	??i1_sprintf,w
  1982  0149  07A6               	addwf	i1sprintf@ap,f
  1983  014A                     i1l1381:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1986  014A  1FAA               	btfss	i1sprintf@val+1,7
  1987  014B  294D               	goto	u96_21
  1988  014C  294E               	goto	u96_20
  1989  014D                     u96_21:
  1990  014D  2957               	goto	i1l1387
  1991  014E                     u96_20:
  1992  014E                     i1l1383:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1995  014E  3003               	movlw	3
  1996  014F  00A3               	movwf	??i1_sprintf
  1997  0150  0823               	movf	??i1_sprintf,w
  1998  0151  04A7               	iorwf	i1sprintf@flag,f
  1999  0152                     i1l1385:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2002  0152  09A9               	comf	i1sprintf@val,f
  2003  0153  09AA               	comf	i1sprintf@val+1,f
  2004  0154  0AA9               	incf	i1sprintf@val,f
  2005  0155  1903               	skipnz
  2006  0156  0AAA               	incf	i1sprintf@val+1,f
  2007  0157                     i1l1387:
  2008                           
  2009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2010  0157  01AC               	clrf	i1sprintf@c
  2011  0158  0AAC               	incf	i1sprintf@c,f
  2012  0159                     i1l1393:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2015  0159  082C               	movf	i1sprintf@c,w
  2016  015A  00A3               	movwf	??i1_sprintf
  2017  015B  0723               	addwf	??i1_sprintf,w
  2018  015C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2019  015D  0084               	movwf	4
  2020  015E  120A  118A  2387  120A  118A  	fcall	stringdir
  2021  0163  00A4               	movwf	??i1_sprintf+1
  2022  0164  120A  118A  2387  120A  118A  	fcall	stringdir
  2023  0169  00A5               	movwf	??i1_sprintf+2
  2024  016A  0825               	movf	??i1_sprintf+2,w
  2025  016B  022A               	subwf	i1sprintf@val+1,w
  2026  016C  1D03               	skipz
  2027  016D  2970               	goto	u97_25
  2028  016E  0824               	movf	??i1_sprintf+1,w
  2029  016F  0229               	subwf	i1sprintf@val,w
  2030  0170                     u97_25:
  2031  0170  1803               	skipnc
  2032  0171  2973               	goto	u97_21
  2033  0172  2974               	goto	u97_20
  2034  0173                     u97_21:
  2035  0173  2975               	goto	i1l1397
  2036  0174                     u97_20:
  2037  0174  297F               	goto	i1l1399
  2038  0175                     i1l1397:
  2039  0175  3001               	movlw	1
  2040  0176  00A3               	movwf	??i1_sprintf
  2041  0177  0823               	movf	??i1_sprintf,w
  2042  0178  07AC               	addwf	i1sprintf@c,f
  2043  0179  3005               	movlw	5
  2044  017A  062C               	xorwf	i1sprintf@c,w
  2045  017B  1D03               	btfss	3,2
  2046  017C  297E               	goto	u98_21
  2047  017D  297F               	goto	u98_20
  2048  017E                     u98_21:
  2049  017E  2959               	goto	i1l1393
  2050  017F                     u98_20:
  2051  017F                     i1l1399:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2054  017F  0827               	movf	i1sprintf@flag,w
  2055  0180  3903               	andlw	3
  2056  0181  1903               	btfsc	3,2
  2057  0182  2984               	goto	u99_21
  2058  0183  2985               	goto	u99_20
  2059  0184                     u99_21:
  2060  0184  2990               	goto	i1l1405
  2061  0185                     u99_20:
  2062  0185                     i1l1401:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2065  0185  302D               	movlw	45
  2066  0186  00A3               	movwf	??i1_sprintf
  2067  0187  082B               	movf	i1sprintf@sp,w
  2068  0188  0084               	movwf	4
  2069  0189  0823               	movf	??i1_sprintf,w
  2070  018A  1383               	bcf	3,7	;select IRP bank0
  2071  018B  0080               	movwf	0
  2072  018C                     i1l1403:
  2073  018C  3001               	movlw	1
  2074  018D  00A3               	movwf	??i1_sprintf
  2075  018E  0823               	movf	??i1_sprintf,w
  2076  018F  07AB               	addwf	i1sprintf@sp,f
  2077  0190                     i1l1405:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2080  0190  082C               	movf	i1sprintf@c,w
  2081  0191  00A3               	movwf	??i1_sprintf
  2082  0192  0823               	movf	??i1_sprintf,w
  2083  0193  00A8               	movwf	i1sprintf@prec
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2086  0194  29CE               	goto	i1l1413
  2087  0195                     i1l1407:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2090  0195  300A               	movlw	10
  2091  0196  00F8               	movwf	i1___lwmod@divisor
  2092  0197  3000               	movlw	0
  2093  0198  00F9               	movwf	i1___lwmod@divisor+1
  2094  0199  0828               	movf	i1sprintf@prec,w
  2095  019A  00A3               	movwf	??i1_sprintf
  2096  019B  0723               	addwf	??i1_sprintf,w
  2097  019C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2098  019D  0084               	movwf	4
  2099  019E  120A  118A  2387  120A  118A  	fcall	stringdir
  2100  01A3  00F0               	movwf	i1___lwdiv@divisor
  2101  01A4  120A  118A  2387  120A  118A  	fcall	stringdir
  2102  01A9  00F1               	movwf	i1___lwdiv@divisor+1
  2103  01AA  082A               	movf	i1sprintf@val+1,w
  2104  01AB  00F3               	movwf	i1___lwdiv@dividend+1
  2105  01AC  0829               	movf	i1sprintf@val,w
  2106  01AD  00F2               	movwf	i1___lwdiv@dividend
  2107  01AE  120A  118A  22CD  120A  118A  	fcall	i1___lwdiv
  2108  01B3  0871               	movf	?i1___lwdiv+1,w
  2109  01B4  00FB               	movwf	i1___lwmod@dividend+1
  2110  01B5  0870               	movf	?i1___lwdiv,w
  2111  01B6  00FA               	movwf	i1___lwmod@dividend
  2112  01B7  120A  118A  234D  120A  118A  	fcall	i1___lwmod
  2113  01BC  0878               	movf	?i1___lwmod,w
  2114  01BD  3E30               	addlw	48
  2115  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2116  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2117  01C0  00A4               	movwf	??i1_sprintf+1
  2118  01C1  0824               	movf	??i1_sprintf+1,w
  2119  01C2  00AC               	movwf	i1sprintf@c
  2120  01C3                     i1l1409:
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2123  01C3  082C               	movf	i1sprintf@c,w
  2124  01C4  00A3               	movwf	??i1_sprintf
  2125  01C5  082B               	movf	i1sprintf@sp,w
  2126  01C6  0084               	movwf	4
  2127  01C7  0823               	movf	??i1_sprintf,w
  2128  01C8  1383               	bcf	3,7	;select IRP bank0
  2129  01C9  0080               	movwf	0
  2130  01CA                     i1l1411:
  2131  01CA  3001               	movlw	1
  2132  01CB  00A3               	movwf	??i1_sprintf
  2133  01CC  0823               	movf	??i1_sprintf,w
  2134  01CD  07AB               	addwf	i1sprintf@sp,f
  2135  01CE                     i1l1413:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2138  01CE  30FF               	movlw	255
  2139  01CF  00A3               	movwf	??i1_sprintf
  2140  01D0  0823               	movf	??i1_sprintf,w
  2141  01D1  07A8               	addwf	i1sprintf@prec,f
  2142  01D2  0A28               	incf	i1sprintf@prec,w
  2143  01D3  1D03               	btfss	3,2
  2144  01D4  29D6               	goto	u100_21
  2145  01D5  29D7               	goto	u100_20
  2146  01D6                     u100_21:
  2147  01D6  2995               	goto	i1l1407
  2148  01D7                     u100_20:
  2149  01D7                     i1l1415:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2152  01D7  3001               	movlw	1
  2153  01D8  07A0               	addwf	i1sprintf@f,f
  2154  01D9  30FF               	movlw	-1
  2155  01DA  0720               	addwf	i1sprintf@f,w
  2156  01DB  0084               	movwf	4
  2157  01DC  120A  118A  2387  120A  118A  	fcall	stringdir
  2158  01E1  00A3               	movwf	??i1_sprintf
  2159  01E2  0823               	movf	??i1_sprintf,w
  2160  01E3  00AC               	movwf	i1sprintf@c
  2161  01E4  082C               	movf	i1sprintf@c,w
  2162  01E5  1D03               	btfss	3,2
  2163  01E6  29E8               	goto	u101_21
  2164  01E7  29E9               	goto	u101_20
  2165  01E8                     u101_21:
  2166  01E8  290E               	goto	i1l1365
  2167  01E9                     u101_20:
  2168  01E9                     i1l1417:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2171  01E9  082B               	movf	i1sprintf@sp,w
  2172  01EA  0084               	movwf	4
  2173  01EB  1383               	bcf	3,7	;select IRP bank0
  2174  01EC  0180               	clrf	0
  2175  01ED                     i1l223:
  2176  01ED  0008               	return
  2177  01EE                     __end_ofi1_sprintf:
  2178                           
  2179                           	psect	text9
  2180  034D                     __ptext9:	
  2181 ;; *************** function i1___lwmod *****************
  2182 ;; Defined at:
  2183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  divisor         2    8[COMMON] unsigned int 
  2186 ;;  dividend        2   10[COMMON] unsigned int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  counter         1   13[COMMON] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2    8[COMMON] unsigned int 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         4       0       0       0       0
  2199 ;;      Locals:         1       0       0       0       0
  2200 ;;      Temps:          1       0       0       0       0
  2201 ;;      Totals:         6       0       0       0       0
  2202 ;;Total ram usage:        6 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		i1_sprintf
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function i1___lwmod
  2213  034D                     i1___lwmod:
  2214  034D                     i1l1275:	
  2215                           ;incstack = 0
  2216                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  2217                           
  2218  034D  0878               	movf	i1___lwmod@divisor,w
  2219  034E  0479               	iorwf	i1___lwmod@divisor+1,w
  2220  034F  1903               	btfsc	3,2
  2221  0350  2B52               	goto	u87_21
  2222  0351  2B53               	goto	u87_20
  2223  0352                     u87_21:
  2224  0352  2B82               	goto	i1l1293
  2225  0353                     u87_20:
  2226  0353                     i1l1277:
  2227  0353  01FD               	clrf	i1___lwmod@counter
  2228  0354  0AFD               	incf	i1___lwmod@counter,f
  2229  0355  2B61               	goto	i1l1283
  2230  0356                     i1l1279:
  2231  0356  3001               	movlw	1
  2232  0357                     u88_25:
  2233  0357  1003               	clrc
  2234  0358  0DF8               	rlf	i1___lwmod@divisor,f
  2235  0359  0DF9               	rlf	i1___lwmod@divisor+1,f
  2236  035A  3EFF               	addlw	-1
  2237  035B  1D03               	skipz
  2238  035C  2B57               	goto	u88_25
  2239  035D                     i1l1281:
  2240  035D  3001               	movlw	1
  2241  035E  00FC               	movwf	??i1___lwmod
  2242  035F  087C               	movf	??i1___lwmod,w
  2243  0360  07FD               	addwf	i1___lwmod@counter,f
  2244  0361                     i1l1283:
  2245  0361  1FF9               	btfss	i1___lwmod@divisor+1,7
  2246  0362  2B64               	goto	u89_21
  2247  0363  2B65               	goto	u89_20
  2248  0364                     u89_21:
  2249  0364  2B56               	goto	i1l1279
  2250  0365                     u89_20:
  2251  0365                     i1l1285:
  2252  0365  0879               	movf	i1___lwmod@divisor+1,w
  2253  0366  027B               	subwf	i1___lwmod@dividend+1,w
  2254  0367  1D03               	skipz
  2255  0368  2B6B               	goto	u90_25
  2256  0369  0878               	movf	i1___lwmod@divisor,w
  2257  036A  027A               	subwf	i1___lwmod@dividend,w
  2258  036B                     u90_25:
  2259  036B  1C03               	skipc
  2260  036C  2B6E               	goto	u90_21
  2261  036D  2B6F               	goto	u90_20
  2262  036E                     u90_21:
  2263  036E  2B75               	goto	i1l1289
  2264  036F                     u90_20:
  2265  036F                     i1l1287:
  2266  036F  0878               	movf	i1___lwmod@divisor,w
  2267  0370  02FA               	subwf	i1___lwmod@dividend,f
  2268  0371  0879               	movf	i1___lwmod@divisor+1,w
  2269  0372  1C03               	skipc
  2270  0373  03FB               	decf	i1___lwmod@dividend+1,f
  2271  0374  02FB               	subwf	i1___lwmod@dividend+1,f
  2272  0375                     i1l1289:
  2273  0375  3001               	movlw	1
  2274  0376                     u91_25:
  2275  0376  1003               	clrc
  2276  0377  0CF9               	rrf	i1___lwmod@divisor+1,f
  2277  0378  0CF8               	rrf	i1___lwmod@divisor,f
  2278  0379  3EFF               	addlw	-1
  2279  037A  1D03               	skipz
  2280  037B  2B76               	goto	u91_25
  2281  037C                     i1l1291:
  2282  037C  3001               	movlw	1
  2283  037D  02FD               	subwf	i1___lwmod@counter,f
  2284  037E  1D03               	btfss	3,2
  2285  037F  2B81               	goto	u92_21
  2286  0380  2B82               	goto	u92_20
  2287  0381                     u92_21:
  2288  0381  2B65               	goto	i1l1285
  2289  0382                     u92_20:
  2290  0382                     i1l1293:
  2291  0382  087B               	movf	i1___lwmod@dividend+1,w
  2292  0383  00F9               	movwf	?i1___lwmod+1
  2293  0384  087A               	movf	i1___lwmod@dividend,w
  2294  0385  00F8               	movwf	?i1___lwmod
  2295  0386                     i1l509:
  2296  0386  0008               	return
  2297  0387                     __end_ofi1___lwmod:
  2298                           
  2299                           	psect	text10
  2300  02CD                     __ptext10:	
  2301 ;; *************** function i1___lwdiv *****************
  2302 ;; Defined at:
  2303 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  divisor         2    0[COMMON] unsigned int 
  2306 ;;  dividend        2    2[COMMON] unsigned int 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  quotient        2    5[COMMON] unsigned int 
  2309 ;;  counter         1    7[COMMON] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2    0[COMMON] unsigned int 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         4       0       0       0       0
  2320 ;;      Locals:         3       0       0       0       0
  2321 ;;      Temps:          1       0       0       0       0
  2322 ;;      Totals:         8       0       0       0       0
  2323 ;;Total ram usage:        8 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		i1_sprintf
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function i1___lwdiv
  2334  02CD                     i1___lwdiv:
  2335  02CD                     i1l1249:	
  2336                           ;incstack = 0
  2337                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  2338                           
  2339  02CD  01F5               	clrf	i1___lwdiv@quotient
  2340  02CE  01F6               	clrf	i1___lwdiv@quotient+1
  2341  02CF                     i1l1251:
  2342  02CF  0870               	movf	i1___lwdiv@divisor,w
  2343  02D0  0471               	iorwf	i1___lwdiv@divisor+1,w
  2344  02D1  1903               	btfsc	3,2
  2345  02D2  2AD4               	goto	u80_21
  2346  02D3  2AD5               	goto	u80_20
  2347  02D4                     u80_21:
  2348  02D4  2B0C               	goto	i1l1271
  2349  02D5                     u80_20:
  2350  02D5                     i1l1253:
  2351  02D5  01F7               	clrf	i1___lwdiv@counter
  2352  02D6  0AF7               	incf	i1___lwdiv@counter,f
  2353  02D7  2AE3               	goto	i1l1259
  2354  02D8                     i1l1255:
  2355  02D8  3001               	movlw	1
  2356  02D9                     u81_25:
  2357  02D9  1003               	clrc
  2358  02DA  0DF0               	rlf	i1___lwdiv@divisor,f
  2359  02DB  0DF1               	rlf	i1___lwdiv@divisor+1,f
  2360  02DC  3EFF               	addlw	-1
  2361  02DD  1D03               	skipz
  2362  02DE  2AD9               	goto	u81_25
  2363  02DF                     i1l1257:
  2364  02DF  3001               	movlw	1
  2365  02E0  00F4               	movwf	??i1___lwdiv
  2366  02E1  0874               	movf	??i1___lwdiv,w
  2367  02E2  07F7               	addwf	i1___lwdiv@counter,f
  2368  02E3                     i1l1259:
  2369  02E3  1FF1               	btfss	i1___lwdiv@divisor+1,7
  2370  02E4  2AE6               	goto	u82_21
  2371  02E5  2AE7               	goto	u82_20
  2372  02E6                     u82_21:
  2373  02E6  2AD8               	goto	i1l1255
  2374  02E7                     u82_20:
  2375  02E7                     i1l1261:
  2376  02E7  3001               	movlw	1
  2377  02E8                     u83_25:
  2378  02E8  1003               	clrc
  2379  02E9  0DF5               	rlf	i1___lwdiv@quotient,f
  2380  02EA  0DF6               	rlf	i1___lwdiv@quotient+1,f
  2381  02EB  3EFF               	addlw	-1
  2382  02EC  1D03               	skipz
  2383  02ED  2AE8               	goto	u83_25
  2384  02EE  0871               	movf	i1___lwdiv@divisor+1,w
  2385  02EF  0273               	subwf	i1___lwdiv@dividend+1,w
  2386  02F0  1D03               	skipz
  2387  02F1  2AF4               	goto	u84_25
  2388  02F2  0870               	movf	i1___lwdiv@divisor,w
  2389  02F3  0272               	subwf	i1___lwdiv@dividend,w
  2390  02F4                     u84_25:
  2391  02F4  1C03               	skipc
  2392  02F5  2AF7               	goto	u84_21
  2393  02F6  2AF8               	goto	u84_20
  2394  02F7                     u84_21:
  2395  02F7  2AFF               	goto	i1l1267
  2396  02F8                     u84_20:
  2397  02F8                     i1l1263:
  2398  02F8  0870               	movf	i1___lwdiv@divisor,w
  2399  02F9  02F2               	subwf	i1___lwdiv@dividend,f
  2400  02FA  0871               	movf	i1___lwdiv@divisor+1,w
  2401  02FB  1C03               	skipc
  2402  02FC  03F3               	decf	i1___lwdiv@dividend+1,f
  2403  02FD  02F3               	subwf	i1___lwdiv@dividend+1,f
  2404  02FE                     i1l1265:
  2405  02FE  1475               	bsf	i1___lwdiv@quotient,0
  2406  02FF                     i1l1267:
  2407  02FF  3001               	movlw	1
  2408  0300                     u85_25:
  2409  0300  1003               	clrc
  2410  0301  0CF1               	rrf	i1___lwdiv@divisor+1,f
  2411  0302  0CF0               	rrf	i1___lwdiv@divisor,f
  2412  0303  3EFF               	addlw	-1
  2413  0304  1D03               	skipz
  2414  0305  2B00               	goto	u85_25
  2415  0306                     i1l1269:
  2416  0306  3001               	movlw	1
  2417  0307  02F7               	subwf	i1___lwdiv@counter,f
  2418  0308  1D03               	btfss	3,2
  2419  0309  2B0B               	goto	u86_21
  2420  030A  2B0C               	goto	u86_20
  2421  030B                     u86_21:
  2422  030B  2AE7               	goto	i1l1261
  2423  030C                     u86_20:
  2424  030C                     i1l1271:
  2425  030C  0876               	movf	i1___lwdiv@quotient+1,w
  2426  030D  00F1               	movwf	?i1___lwdiv+1
  2427  030E  0875               	movf	i1___lwdiv@quotient,w
  2428  030F  00F0               	movwf	?i1___lwdiv
  2429  0310                     i1l499:
  2430  0310  0008               	return
  2431  0311                     __end_ofi1___lwdiv:
  2432                           
  2433                           	psect	text11
  2434  03D3                     __ptext11:	
  2435 ;; *************** function i1_enviocadena *****************
  2436 ;; Defined at:
  2437 ;;		line 44 in file "usart.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  cadena          1    wreg     PTR unsigned char 
  2440 ;;		 -> cont(1), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  cadena          1    2[COMMON] PTR unsigned char 
  2443 ;;		 -> cont(1), 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         1       0       0       0       0
  2455 ;;      Temps:          1       0       0       0       0
  2456 ;;      Totals:         2       0       0       0       0
  2457 ;;Total ram usage:        2 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		i1_enviocaracter
  2462 ;; This function is called by:
  2463 ;;		_isr
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function i1_enviocadena
  2469  03D3                     i1_enviocadena:
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in i1_enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2473                           ;i1enviocadena@cadena stored from wreg
  2474  03D3  00F2               	movwf	i1enviocadena@cadena
  2475  03D4                     i1l1353:
  2476                           
  2477                           ;usart.c: 45:     while (*cadena != 0){
  2478  03D4  2BE1               	goto	i1l1359
  2479  03D5                     i1l1355:
  2480                           
  2481                           ;usart.c: 46:       enviocaracter(*cadena);
  2482  03D5  0872               	movf	i1enviocadena@cadena,w
  2483  03D6  0084               	movwf	4
  2484  03D7  0800               	movf	0,w
  2485  03D8  120A  118A  2415  120A  118A  	fcall	i1_enviocaracter
  2486  03DD                     i1l1357:
  2487                           
  2488                           ;usart.c: 47:       cadena++;
  2489  03DD  3001               	movlw	1
  2490  03DE  00F1               	movwf	??i1_enviocadena
  2491  03DF  0871               	movf	??i1_enviocadena,w
  2492  03E0  07F2               	addwf	i1enviocadena@cadena,f
  2493  03E1                     i1l1359:
  2494                           
  2495                           ;usart.c: 45:     while (*cadena != 0){
  2496  03E1  0872               	movf	i1enviocadena@cadena,w
  2497  03E2  0084               	movwf	4
  2498  03E3  1383               	bcf	3,7	;select IRP bank0
  2499  03E4  0800               	movf	0,w
  2500  03E5  1D03               	btfss	3,2
  2501  03E6  2BE8               	goto	u93_21
  2502  03E7  2BE9               	goto	u93_20
  2503  03E8                     u93_21:
  2504  03E8  2BD5               	goto	i1l1355
  2505  03E9                     u93_20:
  2506  03E9                     i1l111:
  2507                           
  2508                           ;usart.c: 49:     if (PIR1bits.TXIF){
  2509  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2510  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2511  03EB  1E0C               	btfss	12,4	;volatile
  2512  03EC  2BEE               	goto	u94_21
  2513  03ED  2BEF               	goto	u94_20
  2514  03EE                     u94_21:
  2515  03EE  2BF1               	goto	i1l113
  2516  03EF                     u94_20:
  2517  03EF                     i1l1361:
  2518                           
  2519                           ;usart.c: 50:             TXREG = 13;
  2520  03EF  300D               	movlw	13
  2521  03F0  0099               	movwf	25	;volatile
  2522  03F1                     i1l113:
  2523  03F1  0008               	return
  2524  03F2                     __end_ofi1_enviocadena:
  2525                           
  2526                           	psect	text12
  2527  0415                     __ptext12:	
  2528 ;; *************** function i1_enviocaracter *****************
  2529 ;; Defined at:
  2530 ;;		line 35 in file "usart.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  a               1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  a               1    0[COMMON] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       0       0       0       0
  2545 ;;      Locals:         1       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0
  2547 ;;      Totals:         1       0       0       0       0
  2548 ;;Total ram usage:        1 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		i1_enviocadena
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function i1_enviocaracter
  2559  0415                     i1_enviocaracter:
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in i1_enviocaracter: [wreg]
  2563                           ;i1enviocaracter@a stored from wreg
  2564  0415  00F0               	movwf	i1enviocaracter@a
  2565  0416                     i1l1245:
  2566  0416                     i1l102:	
  2567                           ;usart.c: 38:     }
  2568                           
  2569                           
  2570                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  2571  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0418  1C98               	btfss	24,1	;volatile
  2574  0419  2C1B               	goto	u78_21
  2575  041A  2C1C               	goto	u78_20
  2576  041B                     u78_21:
  2577  041B  2C16               	goto	i1l102
  2578  041C                     u78_20:
  2579  041C                     i1l104:
  2580                           
  2581                           ;usart.c: 39:     if (PIR1bits.TXIF){
  2582  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2583  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2584  041E  1E0C               	btfss	12,4	;volatile
  2585  041F  2C21               	goto	u79_21
  2586  0420  2C22               	goto	u79_20
  2587  0421                     u79_21:
  2588  0421  2C24               	goto	i1l106
  2589  0422                     u79_20:
  2590  0422                     i1l1247:
  2591                           
  2592                           ;usart.c: 40:             TXREG = a;
  2593  0422  0870               	movf	i1enviocaracter@a,w
  2594  0423  0099               	movwf	25	;volatile
  2595  0424                     i1l106:
  2596  0424  0008               	return
  2597  0425                     __end_ofi1_enviocaracter:
  2598  007E                     btemp	set	126	;btemp
  2599  007E                     wtemp0	set	126
  2600                           
  2601                           	psect	config
  2602                           
  2603                           ;Config register CONFIG1 @ 0x2007
  2604                           ;	Oscillator Selection bits
  2605                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2606                           ;	Watchdog Timer Enable bit
  2607                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2608                           ;	Power-up Timer Enable bit
  2609                           ;	PWRTE = OFF, PWRT disabled
  2610                           ;	RE3/MCLR pin function select bit
  2611                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2612                           ;	Code Protection bit
  2613                           ;	CP = OFF, Program memory code protection is disabled
  2614                           ;	Data Code Protection bit
  2615                           ;	CPD = OFF, Data memory code protection is disabled
  2616                           ;	Brown Out Reset Selection bits
  2617                           ;	BOREN = OFF, BOR disabled
  2618                           ;	Internal External Switchover bit
  2619                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2620                           ;	Fail-Safe Clock Monitor Enabled bit
  2621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2622                           ;	Low Voltage Programming Enable bit
  2623                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2624                           ;	In-Circuit Debugger Mode bit
  2625                           ;	DEBUG = 0x1, unprogrammed default
  2626  2007                     	org	8199
  2627  2007  20D4               	dw	8404
  2628                           
  2629                           ;Config register CONFIG2 @ 0x2008
  2630                           ;	Brown-out Reset Selection bit
  2631                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2632                           ;	Flash Program Memory Self Write Enable bits
  2633                           ;	WRT = OFF, Write protection off
  2634  2008                     	org	8200
  2635  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[4]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> cont(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 1
		 -> cont(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_enviocadena->i1_enviocaracter

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _enviocadena->_enviocaracter

Critical Paths under _isr in BANK0

    _isr->i1_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1543
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    1543
                                             47 BANK0      3     3      0
                        _enviocadena
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1377
                                             34 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                             28 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                             20 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _enviocadena                                          2     2      0     166
                                             21 BANK0      2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (3) _enviocaracter                                        1     1      0      22
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1021
                                             13 BANK0      7     7      0
                      i1_enviocadena
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (5) i1_sprintf                                           21    18      3     954
                                              0 BANK0     13    10      3
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (6) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) i1_enviocadena                                        2     2      0      67
                                              1 COMMON     2     2      0
                    i1_enviocaracter
 ---------------------------------------------------------------------------------
 (6) i1_enviocaracter                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _enviocadena
       _enviocaracter
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 _isr (ROOT)
   i1_enviocadena
     i1_enviocaracter
   i1_sprintf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 02 21:32:48 2021

                       pc 0002                        l72 0286                        fsr 0004  
                     l102 03F5                       l111 03CC                       l104 03FB  
                     l113 03D2                       l106 0403                       l223 0105  
                     l509 034C                       l499 02CC                       u600 02B4  
                     u601 02B3                       u540 03FB                       u620 02C8  
                     u700 0064                       u541 03FA                       u621 02C7  
                     u605 02B0                       u701 0063                       u550 0401  
                     u630 0319                       u710 008A                       u551 0400  
                     u615 02BC                       u631 0318                       u711 0089  
                     u560 0291                       u720 0095                       u561 0290  
                     u721 0094                       u650 032B                       u730 009B  
                     u651 032A                       u731 009A                       u715 0086  
                     u580 02A3                       u660 0335                       u740 00EF  
                     u581 02A2                       u661 0334                       u645 031D  
                     u741 00EE                       u750 0101                       u575 0295  
                     u751 0100                       u760 03CC                       u680 0348  
                     u761 03CB                       u681 0347                       u665 0331  
                     u770 03D0                       u690 002A                       u771 03CF  
                     u595 02A4                       u675 033C                       u691 0029  
                     _isr 01EE                       fsr0 0004                       indf 0000  
                    l1121 03F5                      l1123 0401                      l1131 0294  
                    l1211 009B                      l1203 006F                      l1141 02BA  
                    l1133 029B                      l1125 0287                      l1221 00E2  
                    l1213 00A2                      l1301 0243                      l1143 02BB  
                    l1135 029F                      l1127 028B                      l1151 0311  
                    l1223 00E6                      l1215 00A6                      l1207 008B  
                    l1311 024D                      l1303 0246                      l1241 03C4  
                    l1145 02C2                      l1137 02A3                      l1129 0291  
                    l1161 032B                      l1153 0319                      l1217 00AB  
                    l1209 0095                      l1225 00EF                      l1321 0254  
                    l1313 024E                      l1305 0247                      l1243 03D0  
                    l1235 03B5                      l1139 02B4                      l1147 02C8  
                    l1163 0335                      l1155 031C                      l1219 00DB  
                    l1227 0101                      l1331 025D                      l1323 0257  
                    l1315 024F                      l1307 024A                      l1237 03B6  
                    l1165 033B                      l1157 0323                      l1181 0036  
                    l1173 001F                      l1341 0267                      l1333 0261  
                    l1325 0258                      l1317 0250                      l1309 024C  
                    l1239 03BE                      l1167 0342                      l1159 0327  
                    l1191 0060                      l1175 0024                      l1351 0280  
                    l1343 026A                      l1335 0262                      l1327 0259  
                    l1319 0253                      l1169 0348                      l1193 0064  
                    l1185 0037                      l1177 002A                      l1345 026B  
                    l1337 0265                      l1329 025A                      l1195 0068  
                    l1187 0054                      l1179 0031                      l1347 026C  
                    l1339 0266                      l1197 006D                      l1189 005C  
                    l1349 026D                      l1445 0404                      l1447 0409  
                    l1297 023E                      l1449 040F                      l1491 0049  
                    l1299 0242                      ?_isr 0070                      STR_1 03AE  
                    STR_2 03AE                      STR_3 0397                      u1050 040F  
                    u1051 040E                      _RBIF 0058                      i1l60 0231  
                    _cont 0052                      _main 0404                      btemp 007E  
                    start 0012              ?_enviocadena 0070                     ??_isr 002D  
                   ?_main 0070                     _EEADR 010D                     _EEDAT 010C  
                   _ANSEL 0188           __end_of___lwdiv 02CD                     i1l102 0416  
                   i1l111 03E9                     i1l104 041C                     i1l113 03F1  
                   i1l106 0424                     i1l223 01ED           __end_of___lwmod 034D  
                   i1l509 0386                     i1l499 0310                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     u80_20 02D5                     u80_21 02D4  
                   _TRISA 0085                     _TRISB 0086                     u81_25 02D9  
                   _TRISD 0088                     u82_20 02E7                     u90_20 036F  
                   u82_21 02E6                     u90_21 036E                     u90_25 036B  
                   u83_25 02E8                     u91_25 0376                     u84_20 02F8  
                   u92_20 0382                     u84_21 02F7                     u92_21 0381  
                   u84_25 02F4                     u93_20 03E9                     u93_21 03E8  
                   u85_25 0300                     u78_20 041C                     u94_20 03EF  
                   u86_20 030C                     u78_21 041B                     u94_21 03EE  
                   u86_21 030B                     u79_20 0422                     u87_20 0353  
                   u95_20 0114                     u79_21 0421                     u87_21 0352  
                   u95_21 0113                     u96_20 014E                     u96_21 014D  
                   u88_25 0357                     u89_20 0365                     u97_20 0174  
                   u89_21 0364                     u97_21 0173                     _TXREG 0019  
                   u97_25 0170                     u98_20 017F                     u98_21 017E  
                   u99_20 0185                     u99_21 0184        i1___lwmod@dividend 007A  
         __end_of_dpowers 0397                     _setup 023E    __size_of_enviocaracter 0012  
       ??i1_enviocaracter 0070                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0106        __size_ofi1___lwdiv 0044  
      __size_ofi1___lwmod 003A           __initialization 0015              __end_of_main 0415  
     i1enviocadena@cadena 0072                i1sprintf@c 002C                i1sprintf@f 0020  
                  ??_main 0052        __size_ofi1_sprintf 00E8                    _EECON2 018D  
                  ?_setup 0070                    _ANSELH 0189                    u100_20 01D7  
                  u100_21 01D6                    u101_20 01E9                    u101_21 01E8  
                  u102_20 01F2                    u102_21 01F1                    u103_20 01F6  
                  i1l1401 0185                    u103_21 01F5                    i1l1251 02CF  
                  i1l1411 01CA                    i1l1403 018C                    i1l1245 0416  
                  i1l1261 02E7                    i1l1253 02D5                    i1l1413 01CE  
                  i1l1405 0190                    i1l1247 0422                    i1l1263 02F8  
                  i1l1255 02D8                    i1l1271 030C                    i1l1407 0195  
                  i1l1415 01D7                    i1l1431 01FA                    u104_20 0217  
                  i1l1361 03EF                    i1l1353 03D4                    i1l1265 02FE  
                  i1l1257 02DF                    i1l1249 02CD                    i1l1281 035D  
                  i1l1409 01C3                    i1l1417 01E9                    i1l1441 022A  
                  u104_21 0216                    i1l1433 020B                    i1l1425 01EE  
                  i1l1355 03D5                    i1l1267 02FF                    i1l1259 02E3  
                  i1l1291 037C                    i1l1283 0361                    i1l1275 034D  
                  i1l1371 0120                    i1l1363 0109                    i1l1443 0230  
                  i1l1435 0211                    i1l1427 01F2                    i1l1357 03DD  
                  i1l1269 0306                    i1l1285 0365                    i1l1277 0353  
                  i1l1293 0382                    i1l1381 014A                    i1l1365 010E  
                  i1l1437 0217                    i1l1429 01F6                    i1l1359 03E1  
                  i1l1287 036F                    i1l1279 0356                    i1l1383 014E  
                  i1l1375 0121                    i1l1367 0114                    i1l1439 0219  
                  i1l1289 0375                    i1l1393 0159                    i1l1385 0152  
                  i1l1377 013E                    i1l1369 011B                    i1l1387 0157  
                  i1l1379 0146                    i1l1397 0175                    i1l1493 0133  
                  i1l1399 017F                    _SPBRGH 009A             i1sprintf@flag 0027  
           i1sprintf@prec 0028             _enviocaracter 03F2                 ??___lwdiv 0038  
               ??___lwmod 0040         __end_ofi1___lwdiv 0311         __end_ofi1___lwmod 0387  
                  saved_w 007E    __size_ofi1_enviocadena 001F                 ??_sprintf 0045  
 __end_of__initialization 0018         __end_ofi1_sprintf 01EE            __pcstackCOMMON 0070  
          ?_enviocaracter 0070      __size_of_enviocadena 0021             __end_of_setup 0287  
          _OPTION_REGbits 0081               i1sprintf@ap 0026               i1sprintf@sp 002B  
                 ??_setup 004F                __pbssBANK0 0052                __pmaintext 0404  
           i1_enviocadena 03D3                __pintentry 0004           i1_enviocaracter 0415  
          enviocaracter@a 0034                __stringtab 0387           ??_enviocaracter 0034  
          ?i1_enviocadena 0070                   ___lwdiv 0287                   ___lwmod 0311  
                 __ptext1 023E                   __ptext2 001C                   __ptext3 0311  
                 __ptext4 0287                   __ptext5 03B2                   __ptext6 03F2  
                 __ptext7 01EE                   __ptext8 0106                   __ptext9 034D  
                 _dpowers 038D         i1___lwdiv@divisor 0070              __size_of_isr 0050  
       i1___lwdiv@counter 0077                   _sprintf 001C      end_of_initialization 0018  
               _RCSTAbits 0018   __end_ofi1_enviocaracter 0425                 _PORTBbits 0006  
               i1___lwdiv 02CD                 i1___lwmod 034D                 _TXSTAbits 0098  
         ??i1_enviocadena 0071                 i1_sprintf 0106               _BAUDCTLbits 0187  
       i1___lwmod@divisor 0078         i1___lwmod@counter 007D       start_initialization 0015  
             __end_of_isr 023E                ?i1___lwdiv 0070                ?i1___lwmod 0078  
            i1sprintf@val 0029             ??_enviocadena 0035                ?i1_sprintf 0020  
        ?i1_enviocaracter 0070                 ___latbits 0002             __pcstackBANK0 0020  
             sprintf@flag 0049               sprintf@prec 004A          ___lwdiv@dividend 0036  
        i1enviocaracter@a 0070                  ?___lwdiv 0034                  ?___lwmod 003C  
     __end_of_enviocadena 03D3                 __pstrings 0387          ___lwdiv@quotient 0039  
             ??i1___lwdiv 0074               ??i1___lwmod 007C                  ?_sprintf 0042  
          __size_of_setup 0049         interrupt_function 0004                  _IOCBbits 0096  
                _PIR1bits 000C                  _PIR2bits 000D               ??i1_sprintf 0023  
   __end_of_enviocaracter 0404               __stringbase 038C                  _WPUBbits 0095  
       enviocadena@cadena 0036                _EECON1bits 018C               _enviocadena 03B2  
        __size_of___lwdiv 0046          __size_of___lwmod 003C        __end_of__stringtab 038D  
              sprintf@val 004B           ___lwdiv@divisor 0034           ___lwdiv@counter 003B  
                __ptext10 02CD                  __ptext11 03D3                  __ptext12 0415  
        __size_of_sprintf 00EA        i1___lwdiv@dividend 0072             __size_of_main 0011  
   __end_ofi1_enviocadena 03F2        i1___lwdiv@quotient 0075                _INTCONbits 000B  
                intlevel1 0000                 sprintf@ap 0048                 sprintf@sp 004D  
        ___lwmod@dividend 003E                 stringcode 0387                _OSCCONbits 008F  
                sprintf@c 004E                  sprintf@f 0042           ___lwmod@divisor 003C  
__size_ofi1_enviocaracter 0010           ___lwmod@counter 0041                  stringdir 0387  
                stringtab 0387  
