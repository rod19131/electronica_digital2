

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Aug 14 21:49:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	strings
   296  03C8                     __pstrings:
   297  03C8                     stringtab:
   298  03C8                     __stringtab:
   299  03C8                     stringcode:	
   300                           ;	String table - string pointers are 1 byte each
   301                           
   302  03C8                     stringdir:
   303  03C8  3003               	movlw	high stringdir
   304  03C9  008A               	movwf	10
   305  03CA  0804               	movf	4,w
   306  03CB  0A84               	incf	4,f
   307  03CC  0782               	addwf	2,f
   308  03CD                     __stringbase:
   309  03CD  3400               	retlw	0
   310  03CE                     __end_of__stringtab:
   311  03CE                     _dpowers:
   312  03CE  3401               	retlw	1
   313  03CF  3400               	retlw	0
   314  03D0  340A               	retlw	10
   315  03D1  3400               	retlw	0
   316  03D2  3464               	retlw	100
   317  03D3  3400               	retlw	0
   318  03D4  34E8               	retlw	232
   319  03D5  3403               	retlw	3
   320  03D6  3410               	retlw	16
   321  03D7  3427               	retlw	39
   322  03D8                     __end_of_dpowers:
   323  0019                     _TXREG	set	25
   324  000D                     _PIR2bits	set	13
   325  0018                     _RCSTAbits	set	24
   326  0006                     _PORTB	set	6
   327  001A                     _RCREG	set	26
   328  0008                     _PORTD	set	8
   329  000C                     _PIR1bits	set	12
   330  000B                     _INTCONbits	set	11
   331  0005                     _PORTA	set	5
   332  0006                     _PORTBbits	set	6
   333  0058                     _RBIF	set	88
   334  009A                     _SPBRGH	set	154
   335  0099                     _SPBRG	set	153
   336  0098                     _TXSTAbits	set	152
   337  0096                     _IOCBbits	set	150
   338  0095                     _WPUBbits	set	149
   339  0081                     _OPTION_REGbits	set	129
   340  0088                     _TRISD	set	136
   341  0086                     _TRISB	set	134
   342  0085                     _TRISA	set	133
   343  008F                     _OSCCONbits	set	143
   344  010C                     _EEDAT	set	268
   345  010D                     _EEADR	set	269
   346  018D                     _EECON2	set	397
   347  018C                     _EECON1bits	set	396
   348  0187                     _BAUDCTLbits	set	391
   349  0188                     _ANSEL	set	392
   350  0189                     _ANSELH	set	393
   351  03D8                     STR_1:
   352  03D8  3425               	retlw	37	;'%'
   353  03D9  3464               	retlw	100	;'d'
   354  03DA  3400               	retlw	0
   355  03D8                     
   356                           	psect	cinit
   357  0015                     start_initialization:	
   358                           ; #config settings
   359                           
   360  0015                     __initialization:
   361                           
   362                           ; Clear objects allocated to BANK0
   363  0015  1283               	bcf	3,5	;RP0=0, select bank0
   364  0016  1303               	bcf	3,6	;RP1=0, select bank0
   365  0017  01D2               	clrf	__pbssBANK0& (0+127)
   366  0018                     end_of_initialization:	
   367                           ;End of C runtime variable initialization code
   368                           
   369  0018                     __end_of__initialization:
   370  0018  0183               	clrf	3
   371  0019  120A  118A  2BED   	ljmp	_main	;jump to C main() function
   372                           
   373                           	psect	bssBANK0
   374  0052                     __pbssBANK0:
   375  0052                     _cont:
   376  0052                     	ds	1
   377                           
   378                           	psect	cstackCOMMON
   379  0070                     __pcstackCOMMON:
   380  0070                     ?_enviocadena:
   381  0070                     ?_setup:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_isr:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_main:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_enviocaracter:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?i1_enviocaracter:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ??i1_enviocaracter:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?i1_enviocadena:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?i1___lwdiv:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     i1enviocaracter@a:	
   406                           ; 2 bytes @ 0x0
   407                           
   408  0070                     i1___lwdiv@divisor:	
   409                           ; 1 bytes @ 0x0
   410                           
   411                           
   412                           ; 2 bytes @ 0x0
   413  0070                     	ds	1
   414  0071                     ??i1_enviocadena:
   415                           
   416                           ; 1 bytes @ 0x1
   417  0071                     	ds	1
   418  0072                     i1enviocadena@cadena:
   419  0072                     i1___lwdiv@dividend:	
   420                           ; 1 bytes @ 0x2
   421                           
   422                           
   423                           ; 2 bytes @ 0x2
   424  0072                     	ds	2
   425  0074                     ??i1___lwdiv:
   426                           
   427                           ; 1 bytes @ 0x4
   428  0074                     	ds	1
   429  0075                     i1___lwdiv@quotient:
   430                           
   431                           ; 2 bytes @ 0x5
   432  0075                     	ds	2
   433  0077                     i1___lwdiv@counter:
   434                           
   435                           ; 1 bytes @ 0x7
   436  0077                     	ds	1
   437  0078                     ?i1___lwmod:
   438  0078                     i1___lwmod@divisor:	
   439                           ; 2 bytes @ 0x8
   440                           
   441                           
   442                           ; 2 bytes @ 0x8
   443  0078                     	ds	2
   444  007A                     i1___lwmod@dividend:
   445                           
   446                           ; 2 bytes @ 0xA
   447  007A                     	ds	2
   448  007C                     ??i1___lwmod:
   449                           
   450                           ; 1 bytes @ 0xC
   451  007C                     	ds	1
   452  007D                     i1___lwmod@counter:
   453                           
   454                           ; 1 bytes @ 0xD
   455  007D                     	ds	1
   456                           
   457                           	psect	cstackBANK0
   458  0020                     __pcstackBANK0:
   459  0020                     ?i1_sprintf:
   460  0020                     i1sprintf@f:	
   461                           ; 2 bytes @ 0x0
   462                           
   463                           
   464                           ; 1 bytes @ 0x0
   465  0020                     	ds	3
   466  0023                     ??i1_sprintf:
   467                           
   468                           ; 1 bytes @ 0x3
   469  0023                     	ds	3
   470  0026                     i1sprintf@ap:
   471                           
   472                           ; 1 bytes @ 0x6
   473  0026                     	ds	1
   474  0027                     i1sprintf@flag:
   475                           
   476                           ; 1 bytes @ 0x7
   477  0027                     	ds	1
   478  0028                     i1sprintf@prec:
   479                           
   480                           ; 1 bytes @ 0x8
   481  0028                     	ds	1
   482  0029                     i1sprintf@val:
   483                           
   484                           ; 2 bytes @ 0x9
   485  0029                     	ds	2
   486  002B                     i1sprintf@sp:
   487                           
   488                           ; 1 bytes @ 0xB
   489  002B                     	ds	1
   490  002C                     i1sprintf@c:
   491                           
   492                           ; 1 bytes @ 0xC
   493  002C                     	ds	1
   494  002D                     ??_isr:
   495                           
   496                           ; 1 bytes @ 0xD
   497  002D                     	ds	7
   498  0034                     ??_enviocaracter:
   499  0034                     ?___lwdiv:	
   500                           ; 1 bytes @ 0x14
   501                           
   502  0034                     enviocaracter@a:	
   503                           ; 2 bytes @ 0x14
   504                           
   505  0034                     ___lwdiv@divisor:	
   506                           ; 1 bytes @ 0x14
   507                           
   508                           
   509                           ; 2 bytes @ 0x14
   510  0034                     	ds	1
   511  0035                     ??_enviocadena:
   512                           
   513                           ; 1 bytes @ 0x15
   514  0035                     	ds	1
   515  0036                     enviocadena@cadena:
   516  0036                     ___lwdiv@dividend:	
   517                           ; 1 bytes @ 0x16
   518                           
   519                           
   520                           ; 2 bytes @ 0x16
   521  0036                     	ds	2
   522  0038                     ??___lwdiv:
   523                           
   524                           ; 1 bytes @ 0x18
   525  0038                     	ds	1
   526  0039                     ___lwdiv@quotient:
   527                           
   528                           ; 2 bytes @ 0x19
   529  0039                     	ds	2
   530  003B                     ___lwdiv@counter:
   531                           
   532                           ; 1 bytes @ 0x1B
   533  003B                     	ds	1
   534  003C                     ?___lwmod:
   535  003C                     ___lwmod@divisor:	
   536                           ; 2 bytes @ 0x1C
   537                           
   538                           
   539                           ; 2 bytes @ 0x1C
   540  003C                     	ds	2
   541  003E                     ___lwmod@dividend:
   542                           
   543                           ; 2 bytes @ 0x1E
   544  003E                     	ds	2
   545  0040                     ??___lwmod:
   546                           
   547                           ; 1 bytes @ 0x20
   548  0040                     	ds	1
   549  0041                     ___lwmod@counter:
   550                           
   551                           ; 1 bytes @ 0x21
   552  0041                     	ds	1
   553  0042                     ?_sprintf:
   554  0042                     sprintf@f:	
   555                           ; 2 bytes @ 0x22
   556                           
   557                           
   558                           ; 1 bytes @ 0x22
   559  0042                     	ds	3
   560  0045                     ??_sprintf:
   561                           
   562                           ; 1 bytes @ 0x25
   563  0045                     	ds	3
   564  0048                     sprintf@ap:
   565                           
   566                           ; 1 bytes @ 0x28
   567  0048                     	ds	1
   568  0049                     sprintf@flag:
   569                           
   570                           ; 1 bytes @ 0x29
   571  0049                     	ds	1
   572  004A                     sprintf@prec:
   573                           
   574                           ; 1 bytes @ 0x2A
   575  004A                     	ds	1
   576  004B                     sprintf@val:
   577                           
   578                           ; 2 bytes @ 0x2B
   579  004B                     	ds	2
   580  004D                     sprintf@sp:
   581                           
   582                           ; 1 bytes @ 0x2D
   583  004D                     	ds	1
   584  004E                     sprintf@c:
   585                           
   586                           ; 1 bytes @ 0x2E
   587  004E                     	ds	1
   588  004F                     ??_setup:
   589                           
   590                           ; 1 bytes @ 0x2F
   591  004F                     	ds	3
   592  0052                     ??_main:
   593                           
   594                           	psect	maintext
   595  03ED                     __pmaintext:	
   596                           ; 1 bytes @ 0x32
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 69 in file "lab5.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : B00/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels required when called:    6
   622 ;; This function calls:
   623 ;;		_setup
   624 ;; This function is called by:
   625 ;;		Startup code after reset
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           
   630                           ;psect for function _main
   631  03ED                     _main:
   632  03ED                     l1449:	
   633                           ;incstack = 0
   634                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   635                           
   636                           
   637                           ;lab5.c: 70:     setup();
   638  03ED  120A  118A  223E  120A  118A  	fcall	_setup
   639  03F2                     l1451:
   640  03F2  1283               	bcf	3,5	;RP0=0, select bank0
   641  03F3  1303               	bcf	3,6	;RP1=0, select bank0
   642  03F4  1E8C               	btfss	12,5	;volatile
   643  03F5  2BF7               	goto	u1051
   644  03F6  2BF8               	goto	u1050
   645  03F7                     u1051:
   646  03F7  2BF2               	goto	l1451
   647  03F8                     u1050:
   648  03F8                     l1453:
   649  03F8  081A               	movf	26,w	;volatile
   650  03F9  0088               	movwf	8	;volatile
   651  03FA  2BF2               	goto	l1451
   652  03FB  120A  118A  2812   	ljmp	start
   653  03FE                     __end_of_main:
   654                           
   655                           	psect	text1
   656  023E                     __ptext1:	
   657 ;; *************** function _setup *****************
   658 ;; Defined at:
   659 ;;		line 79 in file "lab5.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          0       3       0       0       0
   676 ;;      Totals:         0       3       0       0       0
   677 ;;Total ram usage:        3 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; Hardware stack levels required when called:    5
   680 ;; This function calls:
   681 ;;		_enviocadena
   682 ;;		_sprintf
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _setup
   690  023E                     _setup:
   691  023E                     l1299:	
   692                           ;incstack = 0
   693                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   694                           
   695                           
   696                           ;lab5.c: 83:     OSCCONbits.IRCF = 7;
   697  023E  3070               	movlw	112
   698  023F  1683               	bsf	3,5	;RP0=1, select bank1
   699  0240  1303               	bcf	3,6	;RP1=0, select bank1
   700  0241  048F               	iorwf	15,f	;volatile
   701  0242                     l1301:
   702                           
   703                           ;lab5.c: 84:     OSCCONbits.SCS = 1;
   704  0242  140F               	bsf	15,0	;volatile
   705  0243                     l1303:
   706                           
   707                           ;lab5.c: 86:     ANSELH = 0;
   708  0243  1683               	bsf	3,5	;RP0=1, select bank3
   709  0244  1703               	bsf	3,6	;RP1=1, select bank3
   710  0245  0189               	clrf	9	;volatile
   711  0246                     l1305:
   712                           
   713                           ;lab5.c: 87:     ANSEL = 0;
   714  0246  0188               	clrf	8	;volatile
   715  0247                     l1307:
   716                           
   717                           ;lab5.c: 88:     TRISA = 0;
   718  0247  1683               	bsf	3,5	;RP0=1, select bank1
   719  0248  1303               	bcf	3,6	;RP1=0, select bank1
   720  0249  0185               	clrf	5	;volatile
   721  024A                     l1309:
   722                           
   723                           ;lab5.c: 89:     TRISB = 3;
   724  024A  3003               	movlw	3
   725  024B  0086               	movwf	6	;volatile
   726  024C                     l1311:
   727                           
   728                           ;lab5.c: 90:     TRISD = 0;
   729  024C  0188               	clrf	8	;volatile
   730  024D                     l1313:
   731                           
   732                           ;lab5.c: 91:     OPTION_REGbits.nRBPU = 0;
   733  024D  1381               	bcf	1,7	;volatile
   734  024E                     l1315:
   735                           
   736                           ;lab5.c: 92:     WPUBbits.WPUB0 = 1;
   737  024E  1415               	bsf	21,0	;volatile
   738  024F                     l1317:
   739                           
   740                           ;lab5.c: 93:     WPUBbits.WPUB1 = 1;
   741  024F  1495               	bsf	21,1	;volatile
   742  0250                     l1319:
   743                           
   744                           ;lab5.c: 94:     PORTA = 0;
   745  0250  1283               	bcf	3,5	;RP0=0, select bank0
   746  0251  1303               	bcf	3,6	;RP1=0, select bank0
   747  0252  0185               	clrf	5	;volatile
   748  0253                     l1321:
   749                           
   750                           ;lab5.c: 95:     PORTB = 0;
   751  0253  0186               	clrf	6	;volatile
   752  0254                     l1323:
   753                           
   754                           ;lab5.c: 96:     PORTD = 0;
   755  0254  0188               	clrf	8	;volatile
   756  0255                     l1325:
   757                           
   758                           ;lab5.c: 98:     IOCBbits.IOCB0 = 1;
   759  0255  1683               	bsf	3,5	;RP0=1, select bank1
   760  0256  1303               	bcf	3,6	;RP1=0, select bank1
   761  0257  1416               	bsf	22,0	;volatile
   762  0258                     l1327:
   763                           
   764                           ;lab5.c: 99:     IOCBbits.IOCB1 = 1;
   765  0258  1496               	bsf	22,1	;volatile
   766  0259                     l1329:
   767                           
   768                           ;lab5.c: 101:     TXSTAbits.SYNC = 0;
   769  0259  1218               	bcf	24,4	;volatile
   770  025A                     l1331:
   771                           
   772                           ;lab5.c: 102:     TXSTAbits.BRGH = 1;
   773  025A  1518               	bsf	24,2	;volatile
   774  025B                     l1333:
   775                           
   776                           ;lab5.c: 104:     BAUDCTLbits.BRG16 = 1;
   777  025B  1683               	bsf	3,5	;RP0=1, select bank3
   778  025C  1703               	bsf	3,6	;RP1=1, select bank3
   779  025D  1587               	bsf	7,3	;volatile
   780  025E                     l1335:
   781                           
   782                           ;lab5.c: 106:     SPBRG = 207;
   783  025E  30CF               	movlw	207
   784  025F  1683               	bsf	3,5	;RP0=1, select bank1
   785  0260  1303               	bcf	3,6	;RP1=0, select bank1
   786  0261  0099               	movwf	25	;volatile
   787  0262                     l1337:
   788                           
   789                           ;lab5.c: 107:     SPBRGH = 0;
   790  0262  019A               	clrf	26	;volatile
   791  0263                     l1339:
   792                           
   793                           ;lab5.c: 109:     RCSTAbits.SPEN = 1;
   794  0263  1283               	bcf	3,5	;RP0=0, select bank0
   795  0264  1303               	bcf	3,6	;RP1=0, select bank0
   796  0265  1798               	bsf	24,7	;volatile
   797  0266                     l1341:
   798                           
   799                           ;lab5.c: 110:     RCSTAbits.RX9 = 0;
   800  0266  1318               	bcf	24,6	;volatile
   801  0267                     l1343:
   802                           
   803                           ;lab5.c: 111:     RCSTAbits.CREN = 1;
   804  0267  1618               	bsf	24,4	;volatile
   805  0268                     l1345:
   806                           
   807                           ;lab5.c: 113:     TXSTAbits.TXEN = 1;
   808  0268  1683               	bsf	3,5	;RP0=1, select bank1
   809  0269  1303               	bcf	3,6	;RP1=0, select bank1
   810  026A  1698               	bsf	24,5	;volatile
   811  026B                     l1347:
   812                           
   813                           ;lab5.c: 115:     INTCONbits.GIE = 1;
   814  026B  178B               	bsf	11,7	;volatile
   815  026C                     l1349:
   816                           
   817                           ;lab5.c: 116:     INTCONbits.RBIE = 1;
   818  026C  158B               	bsf	11,3	;volatile
   819  026D                     l1351:
   820                           
   821                           ;lab5.c: 117:     INTCONbits.PEIE = 1;
   822  026D  170B               	bsf	11,6	;volatile
   823  026E                     l1353:
   824                           
   825                           ;lab5.c: 118:     sprintf(cont, "%d", PORTA);
   826  026E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   827  026F  1283               	bcf	3,5	;RP0=0, select bank0
   828  0270  1303               	bcf	3,6	;RP1=0, select bank0
   829  0271  00CF               	movwf	??_setup
   830  0272  084F               	movf	??_setup,w
   831  0273  00C2               	movwf	sprintf@f
   832  0274  0805               	movf	5,w	;volatile
   833  0275  00D0               	movwf	??_setup+1
   834  0276  01D1               	clrf	??_setup+2
   835  0277  0850               	movf	??_setup+1,w
   836  0278  00C3               	movwf	?_sprintf+1
   837  0279  0851               	movf	??_setup+2,w
   838  027A  00C4               	movwf	?_sprintf+2
   839  027B  3052               	movlw	(low (_cont| 0))& (0+255)
   840  027C  120A  118A  201C  120A  118A  	fcall	_sprintf
   841  0281                     l1355:
   842                           
   843                           ;lab5.c: 119:     enviocadena(cont);
   844  0281  3052               	movlw	(low (_cont| 0))& (0+255)
   845  0282  120A  118A  2388  120A  118A  	fcall	_enviocadena
   846  0287                     l72:
   847  0287  0008               	return
   848  0288                     __end_of_setup:
   849                           
   850                           	psect	text2
   851  001C                     __ptext2:	
   852 ;; *************** function _sprintf *****************
   853 ;; Defined at:
   854 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  sp              1    wreg     PTR unsigned char 
   857 ;;		 -> cont(1), 
   858 ;;  f               1   34[BANK0 ] PTR const unsigned char 
   859 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  sp              1   45[BANK0 ] PTR unsigned char 
   862 ;;		 -> cont(1), 
   863 ;;  tmpval          4    0        struct .
   864 ;;  val             2   43[BANK0 ] unsigned int 
   865 ;;  cp              2    0        PTR const unsigned char 
   866 ;;  len             2    0        unsigned int 
   867 ;;  c               1   46[BANK0 ] unsigned char 
   868 ;;  prec            1   42[BANK0 ] char 
   869 ;;  flag            1   41[BANK0 ] unsigned char 
   870 ;;  ap              1   40[BANK0 ] PTR void [1]
   871 ;;		 -> ?_sprintf(2), 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2   34[BANK0 ] int 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       3       0       0       0
   882 ;;      Locals:         0       7       0       0       0
   883 ;;      Temps:          0       3       0       0       0
   884 ;;      Totals:         0      13       0       0       0
   885 ;;Total ram usage:       13 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    4
   888 ;; This function calls:
   889 ;;		___lwdiv
   890 ;;		___lwmod
   891 ;; This function is called by:
   892 ;;		_setup
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           
   897                           ;psect for function _sprintf
   898  001C                     _sprintf:
   899                           
   900                           ;incstack = 0
   901                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   902                           ;sprintf@sp stored from wreg
   903  001C  1283               	bcf	3,5	;RP0=0, select bank0
   904  001D  1303               	bcf	3,6	;RP1=0, select bank0
   905  001E  00CD               	movwf	sprintf@sp
   906  001F                     l1175:
   907                           
   908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   909  001F  3043               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   910  0020  00C5               	movwf	??_sprintf
   911  0021  0845               	movf	??_sprintf,w
   912  0022  00C8               	movwf	sprintf@ap
   913                           
   914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   915  0023  28EF               	goto	l1227
   916  0024                     l1177:
   917                           
   918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   919  0024  3025               	movlw	37
   920  0025  064E               	xorwf	sprintf@c,w
   921  0026  1903               	btfsc	3,2
   922  0027  2829               	goto	u691
   923  0028  282A               	goto	u690
   924  0029                     u691:
   925  0029  2836               	goto	l1183
   926  002A                     u690:
   927  002A                     l1179:
   928                           
   929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   930  002A  084E               	movf	sprintf@c,w
   931  002B  00C5               	movwf	??_sprintf
   932  002C  084D               	movf	sprintf@sp,w
   933  002D  0084               	movwf	4
   934  002E  0845               	movf	??_sprintf,w
   935  002F  1383               	bcf	3,7	;select IRP bank0
   936  0030  0080               	movwf	0
   937  0031                     l1181:
   938  0031  3001               	movlw	1
   939  0032  00C5               	movwf	??_sprintf
   940  0033  0845               	movf	??_sprintf,w
   941  0034  07CD               	addwf	sprintf@sp,f
   942                           
   943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   944  0035  28EF               	goto	l1227
   945  0036                     l1183:
   946                           
   947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   948  0036  01C9               	clrf	sprintf@flag
   949  0037                     l1187:	
   950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   951                           
   952  0037  3001               	movlw	1
   953  0038  07C2               	addwf	sprintf@f,f
   954  0039  30FF               	movlw	-1
   955  003A  0742               	addwf	sprintf@f,w
   956  003B  0084               	movwf	4
   957  003C  120A  118A  23C8  120A  118A  	fcall	stringdir
   958  0041  00CE               	movwf	sprintf@c
   959  0042  00C5               	movwf	??_sprintf
   960  0043  01C6               	clrf	??_sprintf+1
   961                           
   962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 1, Range of values is 0 to 0
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte            4     3 (average)
   968                           ; direct_byte           11     8 (fixed)
   969                           ; jumptable            260     6 (fixed)
   970                           ;	Chosen strategy is simple_byte
   971  0044  0846               	movf	??_sprintf+1,w
   972  0045  3A00               	xorlw	0	; case 0
   973  0046  1903               	skipnz
   974  0047  2849               	goto	l1495
   975  0048  28EF               	goto	l1227
   976  0049                     l1495:
   977                           
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 3, Range of values is 0 to 105
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte           10     6 (average)
   983                           ; jumptable            260     6 (fixed)
   984                           ;	Chosen strategy is simple_byte
   985  0049  0845               	movf	??_sprintf,w
   986  004A  3A00               	xorlw	0	; case 0
   987  004B  1903               	skipnz
   988  004C  2901               	goto	l1229
   989  004D  3A64               	xorlw	100	; case 100
   990  004E  1903               	skipnz
   991  004F  2854               	goto	l1189
   992  0050  3A0D               	xorlw	13	; case 105
   993  0051  1903               	skipnz
   994  0052  2854               	goto	l1189
   995  0053  28EF               	goto	l1227
   996  0054                     l1189:
   997                           
   998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   999  0054  0848               	movf	sprintf@ap,w
  1000  0055  0084               	movwf	4
  1001  0056  1383               	bcf	3,7	;select IRP bank0
  1002  0057  0800               	movf	0,w
  1003  0058  00CB               	movwf	sprintf@val
  1004  0059  0A84               	incf	4,f
  1005  005A  0800               	movf	0,w
  1006  005B  00CC               	movwf	sprintf@val+1
  1007  005C                     l1191:
  1008  005C  3002               	movlw	2
  1009  005D  00C5               	movwf	??_sprintf
  1010  005E  0845               	movf	??_sprintf,w
  1011  005F  07C8               	addwf	sprintf@ap,f
  1012  0060                     l1193:
  1013                           
  1014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1015  0060  1FCC               	btfss	sprintf@val+1,7
  1016  0061  2863               	goto	u701
  1017  0062  2864               	goto	u700
  1018  0063                     u701:
  1019  0063  286D               	goto	l1199
  1020  0064                     u700:
  1021  0064                     l1195:
  1022                           
  1023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1024  0064  3003               	movlw	3
  1025  0065  00C5               	movwf	??_sprintf
  1026  0066  0845               	movf	??_sprintf,w
  1027  0067  04C9               	iorwf	sprintf@flag,f
  1028  0068                     l1197:
  1029                           
  1030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1031  0068  09CB               	comf	sprintf@val,f
  1032  0069  09CC               	comf	sprintf@val+1,f
  1033  006A  0ACB               	incf	sprintf@val,f
  1034  006B  1903               	skipnz
  1035  006C  0ACC               	incf	sprintf@val+1,f
  1036  006D                     l1199:
  1037                           
  1038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1039  006D  01CE               	clrf	sprintf@c
  1040  006E  0ACE               	incf	sprintf@c,f
  1041  006F                     l1205:
  1042                           
  1043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1044  006F  084E               	movf	sprintf@c,w
  1045  0070  00C5               	movwf	??_sprintf
  1046  0071  0745               	addwf	??_sprintf,w
  1047  0072  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1048  0073  0084               	movwf	4
  1049  0074  120A  118A  23C8  120A  118A  	fcall	stringdir
  1050  0079  00C6               	movwf	??_sprintf+1
  1051  007A  120A  118A  23C8  120A  118A  	fcall	stringdir
  1052  007F  00C7               	movwf	??_sprintf+2
  1053  0080  0847               	movf	??_sprintf+2,w
  1054  0081  024C               	subwf	sprintf@val+1,w
  1055  0082  1D03               	skipz
  1056  0083  2886               	goto	u715
  1057  0084  0846               	movf	??_sprintf+1,w
  1058  0085  024B               	subwf	sprintf@val,w
  1059  0086                     u715:
  1060  0086  1803               	skipnc
  1061  0087  2889               	goto	u711
  1062  0088  288A               	goto	u710
  1063  0089                     u711:
  1064  0089  288B               	goto	l1209
  1065  008A                     u710:
  1066  008A  2895               	goto	l1211
  1067  008B                     l1209:
  1068  008B  3001               	movlw	1
  1069  008C  00C5               	movwf	??_sprintf
  1070  008D  0845               	movf	??_sprintf,w
  1071  008E  07CE               	addwf	sprintf@c,f
  1072  008F  3005               	movlw	5
  1073  0090  064E               	xorwf	sprintf@c,w
  1074  0091  1D03               	btfss	3,2
  1075  0092  2894               	goto	u721
  1076  0093  2895               	goto	u720
  1077  0094                     u721:
  1078  0094  286F               	goto	l1205
  1079  0095                     u720:
  1080  0095                     l1211:
  1081                           
  1082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1083  0095  0849               	movf	sprintf@flag,w
  1084  0096  3903               	andlw	3
  1085  0097  1903               	btfsc	3,2
  1086  0098  289A               	goto	u731
  1087  0099  289B               	goto	u730
  1088  009A                     u731:
  1089  009A  28A6               	goto	l1217
  1090  009B                     u730:
  1091  009B                     l1213:
  1092                           
  1093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1094  009B  302D               	movlw	45
  1095  009C  00C5               	movwf	??_sprintf
  1096  009D  084D               	movf	sprintf@sp,w
  1097  009E  0084               	movwf	4
  1098  009F  0845               	movf	??_sprintf,w
  1099  00A0  1383               	bcf	3,7	;select IRP bank0
  1100  00A1  0080               	movwf	0
  1101  00A2                     l1215:
  1102  00A2  3001               	movlw	1
  1103  00A3  00C5               	movwf	??_sprintf
  1104  00A4  0845               	movf	??_sprintf,w
  1105  00A5  07CD               	addwf	sprintf@sp,f
  1106  00A6                     l1217:
  1107                           
  1108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1109  00A6  084E               	movf	sprintf@c,w
  1110  00A7  00C5               	movwf	??_sprintf
  1111  00A8  0845               	movf	??_sprintf,w
  1112  00A9  00CA               	movwf	sprintf@prec
  1113                           
  1114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1115  00AA  28E6               	goto	l1225
  1116  00AB                     l1219:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1119  00AB  300A               	movlw	10
  1120  00AC  00BC               	movwf	___lwmod@divisor
  1121  00AD  3000               	movlw	0
  1122  00AE  00BD               	movwf	___lwmod@divisor+1
  1123  00AF  084A               	movf	sprintf@prec,w
  1124  00B0  00C5               	movwf	??_sprintf
  1125  00B1  0745               	addwf	??_sprintf,w
  1126  00B2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1127  00B3  0084               	movwf	4
  1128  00B4  120A  118A  23C8  120A  118A  	fcall	stringdir
  1129  00B9  00B4               	movwf	___lwdiv@divisor
  1130  00BA  120A  118A  23C8  120A  118A  	fcall	stringdir
  1131  00BF  00B5               	movwf	___lwdiv@divisor+1
  1132  00C0  084C               	movf	sprintf@val+1,w
  1133  00C1  00B7               	movwf	___lwdiv@dividend+1
  1134  00C2  084B               	movf	sprintf@val,w
  1135  00C3  00B6               	movwf	___lwdiv@dividend
  1136  00C4  120A  118A  2288  120A  118A  	fcall	___lwdiv
  1137  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1138  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1139  00CB  0835               	movf	?___lwdiv+1,w
  1140  00CC  00BF               	movwf	___lwmod@dividend+1
  1141  00CD  0834               	movf	?___lwdiv,w
  1142  00CE  00BE               	movwf	___lwmod@dividend
  1143  00CF  120A  118A  2312  120A  118A  	fcall	___lwmod
  1144  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00D6  083C               	movf	?___lwmod,w
  1147  00D7  3E30               	addlw	48
  1148  00D8  00C6               	movwf	??_sprintf+1
  1149  00D9  0846               	movf	??_sprintf+1,w
  1150  00DA  00CE               	movwf	sprintf@c
  1151  00DB                     l1221:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1154  00DB  084E               	movf	sprintf@c,w
  1155  00DC  00C5               	movwf	??_sprintf
  1156  00DD  084D               	movf	sprintf@sp,w
  1157  00DE  0084               	movwf	4
  1158  00DF  0845               	movf	??_sprintf,w
  1159  00E0  1383               	bcf	3,7	;select IRP bank0
  1160  00E1  0080               	movwf	0
  1161  00E2                     l1223:
  1162  00E2  3001               	movlw	1
  1163  00E3  00C5               	movwf	??_sprintf
  1164  00E4  0845               	movf	??_sprintf,w
  1165  00E5  07CD               	addwf	sprintf@sp,f
  1166  00E6                     l1225:
  1167                           
  1168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1169  00E6  30FF               	movlw	255
  1170  00E7  00C5               	movwf	??_sprintf
  1171  00E8  0845               	movf	??_sprintf,w
  1172  00E9  07CA               	addwf	sprintf@prec,f
  1173  00EA  0A4A               	incf	sprintf@prec,w
  1174  00EB  1D03               	btfss	3,2
  1175  00EC  28EE               	goto	u741
  1176  00ED  28EF               	goto	u740
  1177  00EE                     u741:
  1178  00EE  28AB               	goto	l1219
  1179  00EF                     u740:
  1180  00EF                     l1227:
  1181                           
  1182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1183  00EF  3001               	movlw	1
  1184  00F0  07C2               	addwf	sprintf@f,f
  1185  00F1  30FF               	movlw	-1
  1186  00F2  0742               	addwf	sprintf@f,w
  1187  00F3  0084               	movwf	4
  1188  00F4  120A  118A  23C8  120A  118A  	fcall	stringdir
  1189  00F9  00C5               	movwf	??_sprintf
  1190  00FA  0845               	movf	??_sprintf,w
  1191  00FB  00CE               	movwf	sprintf@c
  1192  00FC  084E               	movf	sprintf@c,w
  1193  00FD  1D03               	btfss	3,2
  1194  00FE  2900               	goto	u751
  1195  00FF  2901               	goto	u750
  1196  0100                     u751:
  1197  0100  2824               	goto	l1177
  1198  0101                     u750:
  1199  0101                     l1229:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1202  0101  084D               	movf	sprintf@sp,w
  1203  0102  0084               	movwf	4
  1204  0103  1383               	bcf	3,7	;select IRP bank0
  1205  0104  0180               	clrf	0
  1206  0105                     l223:
  1207  0105  0008               	return
  1208  0106                     __end_of_sprintf:
  1209                           
  1210                           	psect	text3
  1211  0312                     __ptext3:	
  1212 ;; *************** function ___lwmod *****************
  1213 ;; Defined at:
  1214 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  divisor         2   28[BANK0 ] unsigned int 
  1217 ;;  dividend        2   30[BANK0 ] unsigned int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  counter         1   33[BANK0 ] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2   28[BANK0 ] unsigned int 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       4       0       0       0
  1230 ;;      Locals:         0       1       0       0       0
  1231 ;;      Temps:          0       1       0       0       0
  1232 ;;      Totals:         0       6       0       0       0
  1233 ;;Total ram usage:        6 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    3
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_sprintf
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function ___lwmod
  1245  0312                     ___lwmod:
  1246  0312                     l1153:	
  1247                           ;incstack = 0
  1248                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1249                           
  1250  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0314  083C               	movf	___lwmod@divisor,w
  1253  0315  043D               	iorwf	___lwmod@divisor+1,w
  1254  0316  1903               	btfsc	3,2
  1255  0317  2B19               	goto	u631
  1256  0318  2B1A               	goto	u630
  1257  0319                     u631:
  1258  0319  2B49               	goto	l1171
  1259  031A                     u630:
  1260  031A                     l1155:
  1261  031A  01C1               	clrf	___lwmod@counter
  1262  031B  0AC1               	incf	___lwmod@counter,f
  1263  031C  2B28               	goto	l1161
  1264  031D                     l1157:
  1265  031D  3001               	movlw	1
  1266  031E                     u645:
  1267  031E  1003               	clrc
  1268  031F  0DBC               	rlf	___lwmod@divisor,f
  1269  0320  0DBD               	rlf	___lwmod@divisor+1,f
  1270  0321  3EFF               	addlw	-1
  1271  0322  1D03               	skipz
  1272  0323  2B1E               	goto	u645
  1273  0324                     l1159:
  1274  0324  3001               	movlw	1
  1275  0325  00C0               	movwf	??___lwmod
  1276  0326  0840               	movf	??___lwmod,w
  1277  0327  07C1               	addwf	___lwmod@counter,f
  1278  0328                     l1161:
  1279  0328  1FBD               	btfss	___lwmod@divisor+1,7
  1280  0329  2B2B               	goto	u651
  1281  032A  2B2C               	goto	u650
  1282  032B                     u651:
  1283  032B  2B1D               	goto	l1157
  1284  032C                     u650:
  1285  032C                     l1163:
  1286  032C  083D               	movf	___lwmod@divisor+1,w
  1287  032D  023F               	subwf	___lwmod@dividend+1,w
  1288  032E  1D03               	skipz
  1289  032F  2B32               	goto	u665
  1290  0330  083C               	movf	___lwmod@divisor,w
  1291  0331  023E               	subwf	___lwmod@dividend,w
  1292  0332                     u665:
  1293  0332  1C03               	skipc
  1294  0333  2B35               	goto	u661
  1295  0334  2B36               	goto	u660
  1296  0335                     u661:
  1297  0335  2B3C               	goto	l1167
  1298  0336                     u660:
  1299  0336                     l1165:
  1300  0336  083C               	movf	___lwmod@divisor,w
  1301  0337  02BE               	subwf	___lwmod@dividend,f
  1302  0338  083D               	movf	___lwmod@divisor+1,w
  1303  0339  1C03               	skipc
  1304  033A  03BF               	decf	___lwmod@dividend+1,f
  1305  033B  02BF               	subwf	___lwmod@dividend+1,f
  1306  033C                     l1167:
  1307  033C  3001               	movlw	1
  1308  033D                     u675:
  1309  033D  1003               	clrc
  1310  033E  0CBD               	rrf	___lwmod@divisor+1,f
  1311  033F  0CBC               	rrf	___lwmod@divisor,f
  1312  0340  3EFF               	addlw	-1
  1313  0341  1D03               	skipz
  1314  0342  2B3D               	goto	u675
  1315  0343                     l1169:
  1316  0343  3001               	movlw	1
  1317  0344  02C1               	subwf	___lwmod@counter,f
  1318  0345  1D03               	btfss	3,2
  1319  0346  2B48               	goto	u681
  1320  0347  2B49               	goto	u680
  1321  0348                     u681:
  1322  0348  2B2C               	goto	l1163
  1323  0349                     u680:
  1324  0349                     l1171:
  1325  0349  083F               	movf	___lwmod@dividend+1,w
  1326  034A  00BD               	movwf	?___lwmod+1
  1327  034B  083E               	movf	___lwmod@dividend,w
  1328  034C  00BC               	movwf	?___lwmod
  1329  034D                     l509:
  1330  034D  0008               	return
  1331  034E                     __end_of___lwmod:
  1332                           
  1333                           	psect	text4
  1334  0288                     __ptext4:	
  1335 ;; *************** function ___lwdiv *****************
  1336 ;; Defined at:
  1337 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  divisor         2   20[BANK0 ] unsigned int 
  1340 ;;  dividend        2   22[BANK0 ] unsigned int 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  quotient        2   25[BANK0 ] unsigned int 
  1343 ;;  counter         1   27[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2   20[BANK0 ] unsigned int 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       4       0       0       0
  1354 ;;      Locals:         0       3       0       0       0
  1355 ;;      Temps:          0       1       0       0       0
  1356 ;;      Totals:         0       8       0       0       0
  1357 ;;Total ram usage:        8 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    3
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_sprintf
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function ___lwdiv
  1369  0288                     ___lwdiv:
  1370  0288                     l1127:	
  1371                           ;incstack = 0
  1372                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1373                           
  1374  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1376  028A  01B9               	clrf	___lwdiv@quotient
  1377  028B  01BA               	clrf	___lwdiv@quotient+1
  1378  028C                     l1129:
  1379  028C  0834               	movf	___lwdiv@divisor,w
  1380  028D  0435               	iorwf	___lwdiv@divisor+1,w
  1381  028E  1903               	btfsc	3,2
  1382  028F  2A91               	goto	u561
  1383  0290  2A92               	goto	u560
  1384  0291                     u561:
  1385  0291  2AC9               	goto	l1149
  1386  0292                     u560:
  1387  0292                     l1131:
  1388  0292  01BB               	clrf	___lwdiv@counter
  1389  0293  0ABB               	incf	___lwdiv@counter,f
  1390  0294  2AA0               	goto	l1137
  1391  0295                     l1133:
  1392  0295  3001               	movlw	1
  1393  0296                     u575:
  1394  0296  1003               	clrc
  1395  0297  0DB4               	rlf	___lwdiv@divisor,f
  1396  0298  0DB5               	rlf	___lwdiv@divisor+1,f
  1397  0299  3EFF               	addlw	-1
  1398  029A  1D03               	skipz
  1399  029B  2A96               	goto	u575
  1400  029C                     l1135:
  1401  029C  3001               	movlw	1
  1402  029D  00B8               	movwf	??___lwdiv
  1403  029E  0838               	movf	??___lwdiv,w
  1404  029F  07BB               	addwf	___lwdiv@counter,f
  1405  02A0                     l1137:
  1406  02A0  1FB5               	btfss	___lwdiv@divisor+1,7
  1407  02A1  2AA3               	goto	u581
  1408  02A2  2AA4               	goto	u580
  1409  02A3                     u581:
  1410  02A3  2A95               	goto	l1133
  1411  02A4                     u580:
  1412  02A4                     l1139:
  1413  02A4  3001               	movlw	1
  1414  02A5                     u595:
  1415  02A5  1003               	clrc
  1416  02A6  0DB9               	rlf	___lwdiv@quotient,f
  1417  02A7  0DBA               	rlf	___lwdiv@quotient+1,f
  1418  02A8  3EFF               	addlw	-1
  1419  02A9  1D03               	skipz
  1420  02AA  2AA5               	goto	u595
  1421  02AB  0835               	movf	___lwdiv@divisor+1,w
  1422  02AC  0237               	subwf	___lwdiv@dividend+1,w
  1423  02AD  1D03               	skipz
  1424  02AE  2AB1               	goto	u605
  1425  02AF  0834               	movf	___lwdiv@divisor,w
  1426  02B0  0236               	subwf	___lwdiv@dividend,w
  1427  02B1                     u605:
  1428  02B1  1C03               	skipc
  1429  02B2  2AB4               	goto	u601
  1430  02B3  2AB5               	goto	u600
  1431  02B4                     u601:
  1432  02B4  2ABC               	goto	l1145
  1433  02B5                     u600:
  1434  02B5                     l1141:
  1435  02B5  0834               	movf	___lwdiv@divisor,w
  1436  02B6  02B6               	subwf	___lwdiv@dividend,f
  1437  02B7  0835               	movf	___lwdiv@divisor+1,w
  1438  02B8  1C03               	skipc
  1439  02B9  03B7               	decf	___lwdiv@dividend+1,f
  1440  02BA  02B7               	subwf	___lwdiv@dividend+1,f
  1441  02BB                     l1143:
  1442  02BB  1439               	bsf	___lwdiv@quotient,0
  1443  02BC                     l1145:
  1444  02BC  3001               	movlw	1
  1445  02BD                     u615:
  1446  02BD  1003               	clrc
  1447  02BE  0CB5               	rrf	___lwdiv@divisor+1,f
  1448  02BF  0CB4               	rrf	___lwdiv@divisor,f
  1449  02C0  3EFF               	addlw	-1
  1450  02C1  1D03               	skipz
  1451  02C2  2ABD               	goto	u615
  1452  02C3                     l1147:
  1453  02C3  3001               	movlw	1
  1454  02C4  02BB               	subwf	___lwdiv@counter,f
  1455  02C5  1D03               	btfss	3,2
  1456  02C6  2AC8               	goto	u621
  1457  02C7  2AC9               	goto	u620
  1458  02C8                     u621:
  1459  02C8  2AA4               	goto	l1139
  1460  02C9                     u620:
  1461  02C9                     l1149:
  1462  02C9  083A               	movf	___lwdiv@quotient+1,w
  1463  02CA  00B5               	movwf	?___lwdiv+1
  1464  02CB  0839               	movf	___lwdiv@quotient,w
  1465  02CC  00B4               	movwf	?___lwdiv
  1466  02CD                     l499:
  1467  02CD  0008               	return
  1468  02CE                     __end_of___lwdiv:
  1469                           
  1470                           	psect	text5
  1471  0388                     __ptext5:	
  1472 ;; *************** function _enviocadena *****************
  1473 ;; Defined at:
  1474 ;;		line 44 in file "usart.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  cadena          1    wreg     PTR unsigned char 
  1477 ;;		 -> cont(1), 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  cadena          1   22[BANK0 ] PTR unsigned char 
  1480 ;;		 -> cont(1), 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         0       1       0       0       0
  1492 ;;      Temps:          0       1       0       0       0
  1493 ;;      Totals:         0       2       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    4
  1497 ;; This function calls:
  1498 ;;		_enviocaracter
  1499 ;; This function is called by:
  1500 ;;		_setup
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _enviocadena
  1506  0388                     _enviocadena:
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1510                           ;enviocadena@cadena stored from wreg
  1511  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1513  038A  00B6               	movwf	enviocadena@cadena
  1514  038B                     l1237:
  1515                           
  1516                           ;usart.c: 45:     while (*cadena != 0){
  1517  038B  2B9A               	goto	l1243
  1518  038C                     l1239:
  1519                           
  1520                           ;usart.c: 46:       enviocaracter(*cadena);
  1521  038C  0836               	movf	enviocadena@cadena,w
  1522  038D  0084               	movwf	4
  1523  038E  0800               	movf	0,w
  1524  038F  120A  118A  23DB  120A  118A  	fcall	_enviocaracter
  1525  0394                     l1241:
  1526                           
  1527                           ;usart.c: 47:       cadena++;
  1528  0394  3001               	movlw	1
  1529  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0397  00B5               	movwf	??_enviocadena
  1532  0398  0835               	movf	??_enviocadena,w
  1533  0399  07B6               	addwf	enviocadena@cadena,f
  1534  039A                     l1243:
  1535                           
  1536                           ;usart.c: 45:     while (*cadena != 0){
  1537  039A  0836               	movf	enviocadena@cadena,w
  1538  039B  0084               	movwf	4
  1539  039C  1383               	bcf	3,7	;select IRP bank0
  1540  039D  0800               	movf	0,w
  1541  039E  1D03               	btfss	3,2
  1542  039F  2BA1               	goto	u761
  1543  03A0  2BA2               	goto	u760
  1544  03A1                     u761:
  1545  03A1  2B8C               	goto	l1239
  1546  03A2                     u760:
  1547  03A2                     l111:
  1548                           
  1549                           ;usart.c: 49:     if (PIR1bits.TXIF){
  1550  03A2  1E0C               	btfss	12,4	;volatile
  1551  03A3  2BA5               	goto	u771
  1552  03A4  2BA6               	goto	u770
  1553  03A5                     u771:
  1554  03A5  2BA8               	goto	l113
  1555  03A6                     u770:
  1556  03A6                     l1245:
  1557                           
  1558                           ;usart.c: 50:             TXREG = 13;
  1559  03A6  300D               	movlw	13
  1560  03A7  0099               	movwf	25	;volatile
  1561  03A8                     l113:
  1562  03A8  0008               	return
  1563  03A9                     __end_of_enviocadena:
  1564                           
  1565                           	psect	text6
  1566  03DB                     __ptext6:	
  1567 ;; *************** function _enviocaracter *****************
  1568 ;; Defined at:
  1569 ;;		line 35 in file "usart.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  a               1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  a               1   20[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       1       0       0       0
  1585 ;;      Temps:          0       0       0       0       0
  1586 ;;      Totals:         0       1       0       0       0
  1587 ;;Total ram usage:        1 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    3
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_enviocadena
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _enviocaracter
  1599  03DB                     _enviocaracter:
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _enviocaracter: [wreg]
  1603                           ;enviocaracter@a stored from wreg
  1604  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1605  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1606  03DD  00B4               	movwf	enviocaracter@a
  1607  03DE                     l1123:
  1608  03DE                     l102:	
  1609                           ;usart.c: 38:     }
  1610                           
  1611                           
  1612                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  1613  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  1614  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  1615  03E0  1C98               	btfss	24,1	;volatile
  1616  03E1  2BE3               	goto	u541
  1617  03E2  2BE4               	goto	u540
  1618  03E3                     u541:
  1619  03E3  2BDE               	goto	l102
  1620  03E4                     u540:
  1621  03E4                     l104:
  1622                           
  1623                           ;usart.c: 39:     if (PIR1bits.TXIF){
  1624  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1625  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1626  03E6  1E0C               	btfss	12,4	;volatile
  1627  03E7  2BE9               	goto	u551
  1628  03E8  2BEA               	goto	u550
  1629  03E9                     u551:
  1630  03E9  2BEC               	goto	l106
  1631  03EA                     u550:
  1632  03EA                     l1125:
  1633                           
  1634                           ;usart.c: 40:             TXREG = a;
  1635  03EA  0834               	movf	enviocaracter@a,w
  1636  03EB  0099               	movwf	25	;volatile
  1637  03EC                     l106:
  1638  03EC  0008               	return
  1639  03ED                     __end_of_enviocaracter:
  1640                           
  1641                           	psect	text7
  1642  01EE                     __ptext7:	
  1643 ;; *************** function _isr *****************
  1644 ;; Defined at:
  1645 ;;		line 48 in file "lab5.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0
  1661 ;;      Temps:          0       7       0       0       0
  1662 ;;      Totals:         0       7       0       0       0
  1663 ;;Total ram usage:        7 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    2
  1666 ;; This function calls:
  1667 ;;		i1_enviocadena
  1668 ;;		i1_sprintf
  1669 ;; This function is called by:
  1670 ;;		Interrupt level 1
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _isr
  1676  01EE                     _isr:
  1677  01EE                     i1l1429:
  1678                           
  1679                           ;lab5.c: 49:     if(RBIF == 1) {
  1680  01EE  1C0B               	btfss	11,0	;volatile
  1681  01EF  29F1               	goto	u102_21
  1682  01F0  29F2               	goto	u102_20
  1683  01F1                     u102_21:
  1684  01F1  2A31               	goto	i1l60
  1685  01F2                     u102_20:
  1686  01F2                     i1l1431:
  1687                           
  1688                           ;lab5.c: 51:         if (PORTBbits.RB0 == 0) {
  1689  01F2  1806               	btfsc	6,0	;volatile
  1690  01F3  29F5               	goto	u103_21
  1691  01F4  29F6               	goto	u103_20
  1692  01F5                     u103_21:
  1693  01F5  2A11               	goto	i1l1439
  1694  01F6                     u103_20:
  1695  01F6                     i1l1433:
  1696                           
  1697                           ;lab5.c: 52:             PORTA++;
  1698  01F6  3001               	movlw	1
  1699  01F7  00AD               	movwf	??_isr
  1700  01F8  082D               	movf	??_isr,w
  1701  01F9  0785               	addwf	5,f	;volatile
  1702  01FA                     i1l1435:
  1703                           
  1704                           ;lab5.c: 53:             sprintf(cont, "%d", PORTA);
  1705  01FA  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1706  01FB  00AD               	movwf	??_isr
  1707  01FC  082D               	movf	??_isr,w
  1708  01FD  00A0               	movwf	i1sprintf@f
  1709  01FE  0805               	movf	5,w	;volatile
  1710  01FF  00AE               	movwf	??_isr+1
  1711  0200  01AF               	clrf	??_isr+2
  1712  0201  082E               	movf	??_isr+1,w
  1713  0202  00A1               	movwf	?i1_sprintf+1
  1714  0203  082F               	movf	??_isr+2,w
  1715  0204  00A2               	movwf	?i1_sprintf+2
  1716  0205  3052               	movlw	(low (_cont| 0))& (0+255)
  1717  0206  120A  118A  2106  120A  118A  	fcall	i1_sprintf
  1718  020B                     i1l1437:
  1719                           
  1720                           ;lab5.c: 54:             enviocadena(cont);
  1721  020B  3052               	movlw	(low (_cont| 0))& (0+255)
  1722  020C  120A  118A  23A9  120A  118A  	fcall	i1_enviocadena
  1723  0211                     i1l1439:
  1724                           
  1725                           ;lab5.c: 57:         if (PORTBbits.RB1 == 0) {
  1726  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0213  1886               	btfsc	6,1	;volatile
  1729  0214  2A16               	goto	u104_21
  1730  0215  2A17               	goto	u104_20
  1731  0216                     u104_21:
  1732  0216  2A30               	goto	i1l1447
  1733  0217                     u104_20:
  1734  0217                     i1l1441:
  1735                           
  1736                           ;lab5.c: 58:             PORTA--;
  1737  0217  3001               	movlw	1
  1738  0218  0285               	subwf	5,f	;volatile
  1739  0219                     i1l1443:
  1740                           
  1741                           ;lab5.c: 59:             sprintf(cont, "%d", PORTA);
  1742  0219  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1743  021A  00AD               	movwf	??_isr
  1744  021B  082D               	movf	??_isr,w
  1745  021C  00A0               	movwf	i1sprintf@f
  1746  021D  0805               	movf	5,w	;volatile
  1747  021E  00AE               	movwf	??_isr+1
  1748  021F  01AF               	clrf	??_isr+2
  1749  0220  082E               	movf	??_isr+1,w
  1750  0221  00A1               	movwf	?i1_sprintf+1
  1751  0222  082F               	movf	??_isr+2,w
  1752  0223  00A2               	movwf	?i1_sprintf+2
  1753  0224  3052               	movlw	(low (_cont| 0))& (0+255)
  1754  0225  120A  118A  2106  120A  118A  	fcall	i1_sprintf
  1755  022A                     i1l1445:
  1756                           
  1757                           ;lab5.c: 60:             enviocadena(cont);
  1758  022A  3052               	movlw	(low (_cont| 0))& (0+255)
  1759  022B  120A  118A  23A9  120A  118A  	fcall	i1_enviocadena
  1760  0230                     i1l1447:
  1761                           
  1762                           ;lab5.c: 63:         INTCONbits.RBIF = 0;
  1763  0230  100B               	bcf	11,0	;volatile
  1764  0231                     i1l60:
  1765  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0233  0833               	movf	??_isr+6,w
  1768  0234  00FF               	movwf	btemp+1
  1769  0235  0832               	movf	??_isr+5,w
  1770  0236  008A               	movwf	10
  1771  0237  0831               	movf	??_isr+4,w
  1772  0238  0084               	movwf	4
  1773  0239  0E30               	swapf	??_isr+3,w
  1774  023A  0083               	movwf	3
  1775  023B  0EFE               	swapf	btemp,f
  1776  023C  0E7E               	swapf	btemp,w
  1777  023D  0009               	retfie
  1778  023E                     __end_of_isr:
  1779                           
  1780                           	psect	intentry
  1781  0004                     __pintentry:	
  1782                           ;incstack = 0
  1783                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1784                           
  1785  0004                     interrupt_function:
  1786  007E                     saved_w	set	btemp
  1787  0004  00FE               	movwf	btemp
  1788  0005  0E03               	swapf	3,w
  1789  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0008  00B0               	movwf	??_isr+3
  1792  0009  0804               	movf	4,w
  1793  000A  00B1               	movwf	??_isr+4
  1794  000B  080A               	movf	10,w
  1795  000C  00B2               	movwf	??_isr+5
  1796  000D  087F               	movf	btemp+1,w
  1797  000E  00B3               	movwf	??_isr+6
  1798  000F  120A  118A  29EE   	ljmp	_isr
  1799                           
  1800                           	psect	text8
  1801  0106                     __ptext8:	
  1802 ;; *************** function i1_sprintf *****************
  1803 ;; Defined at:
  1804 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  sp              1    wreg     PTR unsigned char 
  1807 ;;		 -> cont(1), 
  1808 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1809 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1812 ;;		 -> cont(1), 
  1813 ;;  tmpval          4    0        struct .
  1814 ;;  val             2    9[BANK0 ] unsigned int 
  1815 ;;  cp              2    0        PTR const unsigned char 
  1816 ;;  len             2    0        unsigned int 
  1817 ;;  c               1   12[BANK0 ] unsigned char 
  1818 ;;  prec            1    8[BANK0 ] char 
  1819 ;;  flag            1    7[BANK0 ] unsigned char 
  1820 ;;  ap              1    6[BANK0 ] PTR void [1]
  1821 ;;		 -> ?i1_sprintf(2), ?_sprintf(2), 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  2    0[BANK0 ] int 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       3       0       0       0
  1832 ;;      Locals:         0       7       0       0       0
  1833 ;;      Temps:          0       3       0       0       0
  1834 ;;      Totals:         0      13       0       0       0
  1835 ;;Total ram usage:       13 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    1
  1838 ;; This function calls:
  1839 ;;		i1___lwdiv
  1840 ;;		i1___lwmod
  1841 ;; This function is called by:
  1842 ;;		_isr
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function i1_sprintf
  1848  0106                     i1_sprintf:
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in i1_sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1852                           ;i1sprintf@sp stored from wreg
  1853  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0108  00AB               	movwf	i1sprintf@sp
  1856  0109                     i1l1367:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1859  0109  3021               	movlw	(low ((?i1_sprintf| 0+1)))& (0+255)
  1860  010A  00A3               	movwf	??i1_sprintf
  1861  010B  0823               	movf	??i1_sprintf,w
  1862  010C  00A6               	movwf	i1sprintf@ap
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1865  010D  29D7               	goto	i1l1419
  1866  010E                     i1l1369:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1869  010E  3025               	movlw	37
  1870  010F  062C               	xorwf	i1sprintf@c,w
  1871  0110  1903               	btfsc	3,2
  1872  0111  2913               	goto	u95_21
  1873  0112  2914               	goto	u95_20
  1874  0113                     u95_21:
  1875  0113  2920               	goto	i1l1375
  1876  0114                     u95_20:
  1877  0114                     i1l1371:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1880  0114  082C               	movf	i1sprintf@c,w
  1881  0115  00A3               	movwf	??i1_sprintf
  1882  0116  082B               	movf	i1sprintf@sp,w
  1883  0117  0084               	movwf	4
  1884  0118  0823               	movf	??i1_sprintf,w
  1885  0119  1383               	bcf	3,7	;select IRP bank0
  1886  011A  0080               	movwf	0
  1887  011B                     i1l1373:
  1888  011B  3001               	movlw	1
  1889  011C  00A3               	movwf	??i1_sprintf
  1890  011D  0823               	movf	??i1_sprintf,w
  1891  011E  07AB               	addwf	i1sprintf@sp,f
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1894  011F  29D7               	goto	i1l1419
  1895  0120                     i1l1375:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1898  0120  01A7               	clrf	i1sprintf@flag
  1899  0121                     i1l1379:	
  1900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1901                           
  1902  0121  3001               	movlw	1
  1903  0122  07A0               	addwf	i1sprintf@f,f
  1904  0123  30FF               	movlw	-1
  1905  0124  0720               	addwf	i1sprintf@f,w
  1906  0125  0084               	movwf	4
  1907  0126  120A  118A  23C8  120A  118A  	fcall	stringdir
  1908  012B  00AC               	movwf	i1sprintf@c
  1909  012C  00A3               	movwf	??i1_sprintf
  1910  012D  01A4               	clrf	??i1_sprintf+1
  1911                           
  1912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1913                           ; Switch size 1, requested type "simple"
  1914                           ; Number of cases is 1, Range of values is 0 to 0
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte            4     3 (average)
  1918                           ; direct_byte           11     8 (fixed)
  1919                           ; jumptable            260     6 (fixed)
  1920                           ;	Chosen strategy is simple_byte
  1921  012E  0824               	movf	??i1_sprintf+1,w
  1922  012F  3A00               	xorlw	0	; case 0
  1923  0130  1903               	skipnz
  1924  0131  2933               	goto	i1l1497
  1925  0132  29D7               	goto	i1l1419
  1926  0133                     i1l1497:
  1927                           
  1928                           ; Switch size 1, requested type "simple"
  1929                           ; Number of cases is 3, Range of values is 0 to 105
  1930                           ; switch strategies available:
  1931                           ; Name         Instructions Cycles
  1932                           ; simple_byte           10     6 (average)
  1933                           ; jumptable            260     6 (fixed)
  1934                           ;	Chosen strategy is simple_byte
  1935  0133  0823               	movf	??i1_sprintf,w
  1936  0134  3A00               	xorlw	0	; case 0
  1937  0135  1903               	skipnz
  1938  0136  29E9               	goto	i1l1421
  1939  0137  3A64               	xorlw	100	; case 100
  1940  0138  1903               	skipnz
  1941  0139  293E               	goto	i1l1381
  1942  013A  3A0D               	xorlw	13	; case 105
  1943  013B  1903               	skipnz
  1944  013C  293E               	goto	i1l1381
  1945  013D  29D7               	goto	i1l1419
  1946  013E                     i1l1381:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1949  013E  0826               	movf	i1sprintf@ap,w
  1950  013F  0084               	movwf	4
  1951  0140  1383               	bcf	3,7	;select IRP bank0
  1952  0141  0800               	movf	0,w
  1953  0142  00A9               	movwf	i1sprintf@val
  1954  0143  0A84               	incf	4,f
  1955  0144  0800               	movf	0,w
  1956  0145  00AA               	movwf	i1sprintf@val+1
  1957  0146                     i1l1383:
  1958  0146  3002               	movlw	2
  1959  0147  00A3               	movwf	??i1_sprintf
  1960  0148  0823               	movf	??i1_sprintf,w
  1961  0149  07A6               	addwf	i1sprintf@ap,f
  1962  014A                     i1l1385:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1965  014A  1FAA               	btfss	i1sprintf@val+1,7
  1966  014B  294D               	goto	u96_21
  1967  014C  294E               	goto	u96_20
  1968  014D                     u96_21:
  1969  014D  2957               	goto	i1l1391
  1970  014E                     u96_20:
  1971  014E                     i1l1387:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1974  014E  3003               	movlw	3
  1975  014F  00A3               	movwf	??i1_sprintf
  1976  0150  0823               	movf	??i1_sprintf,w
  1977  0151  04A7               	iorwf	i1sprintf@flag,f
  1978  0152                     i1l1389:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1981  0152  09A9               	comf	i1sprintf@val,f
  1982  0153  09AA               	comf	i1sprintf@val+1,f
  1983  0154  0AA9               	incf	i1sprintf@val,f
  1984  0155  1903               	skipnz
  1985  0156  0AAA               	incf	i1sprintf@val+1,f
  1986  0157                     i1l1391:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1989  0157  01AC               	clrf	i1sprintf@c
  1990  0158  0AAC               	incf	i1sprintf@c,f
  1991  0159                     i1l1397:
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1994  0159  082C               	movf	i1sprintf@c,w
  1995  015A  00A3               	movwf	??i1_sprintf
  1996  015B  0723               	addwf	??i1_sprintf,w
  1997  015C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1998  015D  0084               	movwf	4
  1999  015E  120A  118A  23C8  120A  118A  	fcall	stringdir
  2000  0163  00A4               	movwf	??i1_sprintf+1
  2001  0164  120A  118A  23C8  120A  118A  	fcall	stringdir
  2002  0169  00A5               	movwf	??i1_sprintf+2
  2003  016A  0825               	movf	??i1_sprintf+2,w
  2004  016B  022A               	subwf	i1sprintf@val+1,w
  2005  016C  1D03               	skipz
  2006  016D  2970               	goto	u97_25
  2007  016E  0824               	movf	??i1_sprintf+1,w
  2008  016F  0229               	subwf	i1sprintf@val,w
  2009  0170                     u97_25:
  2010  0170  1803               	skipnc
  2011  0171  2973               	goto	u97_21
  2012  0172  2974               	goto	u97_20
  2013  0173                     u97_21:
  2014  0173  2975               	goto	i1l1401
  2015  0174                     u97_20:
  2016  0174  297F               	goto	i1l1403
  2017  0175                     i1l1401:
  2018  0175  3001               	movlw	1
  2019  0176  00A3               	movwf	??i1_sprintf
  2020  0177  0823               	movf	??i1_sprintf,w
  2021  0178  07AC               	addwf	i1sprintf@c,f
  2022  0179  3005               	movlw	5
  2023  017A  062C               	xorwf	i1sprintf@c,w
  2024  017B  1D03               	btfss	3,2
  2025  017C  297E               	goto	u98_21
  2026  017D  297F               	goto	u98_20
  2027  017E                     u98_21:
  2028  017E  2959               	goto	i1l1397
  2029  017F                     u98_20:
  2030  017F                     i1l1403:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2033  017F  0827               	movf	i1sprintf@flag,w
  2034  0180  3903               	andlw	3
  2035  0181  1903               	btfsc	3,2
  2036  0182  2984               	goto	u99_21
  2037  0183  2985               	goto	u99_20
  2038  0184                     u99_21:
  2039  0184  2990               	goto	i1l1409
  2040  0185                     u99_20:
  2041  0185                     i1l1405:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2044  0185  302D               	movlw	45
  2045  0186  00A3               	movwf	??i1_sprintf
  2046  0187  082B               	movf	i1sprintf@sp,w
  2047  0188  0084               	movwf	4
  2048  0189  0823               	movf	??i1_sprintf,w
  2049  018A  1383               	bcf	3,7	;select IRP bank0
  2050  018B  0080               	movwf	0
  2051  018C                     i1l1407:
  2052  018C  3001               	movlw	1
  2053  018D  00A3               	movwf	??i1_sprintf
  2054  018E  0823               	movf	??i1_sprintf,w
  2055  018F  07AB               	addwf	i1sprintf@sp,f
  2056  0190                     i1l1409:
  2057                           
  2058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2059  0190  082C               	movf	i1sprintf@c,w
  2060  0191  00A3               	movwf	??i1_sprintf
  2061  0192  0823               	movf	??i1_sprintf,w
  2062  0193  00A8               	movwf	i1sprintf@prec
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2065  0194  29CE               	goto	i1l1417
  2066  0195                     i1l1411:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2069  0195  300A               	movlw	10
  2070  0196  00F8               	movwf	i1___lwmod@divisor
  2071  0197  3000               	movlw	0
  2072  0198  00F9               	movwf	i1___lwmod@divisor+1
  2073  0199  0828               	movf	i1sprintf@prec,w
  2074  019A  00A3               	movwf	??i1_sprintf
  2075  019B  0723               	addwf	??i1_sprintf,w
  2076  019C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2077  019D  0084               	movwf	4
  2078  019E  120A  118A  23C8  120A  118A  	fcall	stringdir
  2079  01A3  00F0               	movwf	i1___lwdiv@divisor
  2080  01A4  120A  118A  23C8  120A  118A  	fcall	stringdir
  2081  01A9  00F1               	movwf	i1___lwdiv@divisor+1
  2082  01AA  082A               	movf	i1sprintf@val+1,w
  2083  01AB  00F3               	movwf	i1___lwdiv@dividend+1
  2084  01AC  0829               	movf	i1sprintf@val,w
  2085  01AD  00F2               	movwf	i1___lwdiv@dividend
  2086  01AE  120A  118A  22CE  120A  118A  	fcall	i1___lwdiv
  2087  01B3  0871               	movf	?i1___lwdiv+1,w
  2088  01B4  00FB               	movwf	i1___lwmod@dividend+1
  2089  01B5  0870               	movf	?i1___lwdiv,w
  2090  01B6  00FA               	movwf	i1___lwmod@dividend
  2091  01B7  120A  118A  234E  120A  118A  	fcall	i1___lwmod
  2092  01BC  0878               	movf	?i1___lwmod,w
  2093  01BD  3E30               	addlw	48
  2094  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2095  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2096  01C0  00A4               	movwf	??i1_sprintf+1
  2097  01C1  0824               	movf	??i1_sprintf+1,w
  2098  01C2  00AC               	movwf	i1sprintf@c
  2099  01C3                     i1l1413:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2102  01C3  082C               	movf	i1sprintf@c,w
  2103  01C4  00A3               	movwf	??i1_sprintf
  2104  01C5  082B               	movf	i1sprintf@sp,w
  2105  01C6  0084               	movwf	4
  2106  01C7  0823               	movf	??i1_sprintf,w
  2107  01C8  1383               	bcf	3,7	;select IRP bank0
  2108  01C9  0080               	movwf	0
  2109  01CA                     i1l1415:
  2110  01CA  3001               	movlw	1
  2111  01CB  00A3               	movwf	??i1_sprintf
  2112  01CC  0823               	movf	??i1_sprintf,w
  2113  01CD  07AB               	addwf	i1sprintf@sp,f
  2114  01CE                     i1l1417:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2117  01CE  30FF               	movlw	255
  2118  01CF  00A3               	movwf	??i1_sprintf
  2119  01D0  0823               	movf	??i1_sprintf,w
  2120  01D1  07A8               	addwf	i1sprintf@prec,f
  2121  01D2  0A28               	incf	i1sprintf@prec,w
  2122  01D3  1D03               	btfss	3,2
  2123  01D4  29D6               	goto	u100_21
  2124  01D5  29D7               	goto	u100_20
  2125  01D6                     u100_21:
  2126  01D6  2995               	goto	i1l1411
  2127  01D7                     u100_20:
  2128  01D7                     i1l1419:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2131  01D7  3001               	movlw	1
  2132  01D8  07A0               	addwf	i1sprintf@f,f
  2133  01D9  30FF               	movlw	-1
  2134  01DA  0720               	addwf	i1sprintf@f,w
  2135  01DB  0084               	movwf	4
  2136  01DC  120A  118A  23C8  120A  118A  	fcall	stringdir
  2137  01E1  00A3               	movwf	??i1_sprintf
  2138  01E2  0823               	movf	??i1_sprintf,w
  2139  01E3  00AC               	movwf	i1sprintf@c
  2140  01E4  082C               	movf	i1sprintf@c,w
  2141  01E5  1D03               	btfss	3,2
  2142  01E6  29E8               	goto	u101_21
  2143  01E7  29E9               	goto	u101_20
  2144  01E8                     u101_21:
  2145  01E8  290E               	goto	i1l1369
  2146  01E9                     u101_20:
  2147  01E9                     i1l1421:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2150  01E9  082B               	movf	i1sprintf@sp,w
  2151  01EA  0084               	movwf	4
  2152  01EB  1383               	bcf	3,7	;select IRP bank0
  2153  01EC  0180               	clrf	0
  2154  01ED                     i1l223:
  2155  01ED  0008               	return
  2156  01EE                     __end_ofi1_sprintf:
  2157                           
  2158                           	psect	text9
  2159  034E                     __ptext9:	
  2160 ;; *************** function i1___lwmod *****************
  2161 ;; Defined at:
  2162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  divisor         2    8[COMMON] unsigned int 
  2165 ;;  dividend        2   10[COMMON] unsigned int 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  counter         1   13[COMMON] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  2    8[COMMON] unsigned int 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         4       0       0       0       0
  2178 ;;      Locals:         1       0       0       0       0
  2179 ;;      Temps:          1       0       0       0       0
  2180 ;;      Totals:         6       0       0       0       0
  2181 ;;Total ram usage:        6 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		i1_sprintf
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function i1___lwmod
  2192  034E                     i1___lwmod:
  2193  034E                     i1l1277:	
  2194                           ;incstack = 0
  2195                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  2196                           
  2197  034E  0878               	movf	i1___lwmod@divisor,w
  2198  034F  0479               	iorwf	i1___lwmod@divisor+1,w
  2199  0350  1903               	btfsc	3,2
  2200  0351  2B53               	goto	u87_21
  2201  0352  2B54               	goto	u87_20
  2202  0353                     u87_21:
  2203  0353  2B83               	goto	i1l1295
  2204  0354                     u87_20:
  2205  0354                     i1l1279:
  2206  0354  01FD               	clrf	i1___lwmod@counter
  2207  0355  0AFD               	incf	i1___lwmod@counter,f
  2208  0356  2B62               	goto	i1l1285
  2209  0357                     i1l1281:
  2210  0357  3001               	movlw	1
  2211  0358                     u88_25:
  2212  0358  1003               	clrc
  2213  0359  0DF8               	rlf	i1___lwmod@divisor,f
  2214  035A  0DF9               	rlf	i1___lwmod@divisor+1,f
  2215  035B  3EFF               	addlw	-1
  2216  035C  1D03               	skipz
  2217  035D  2B58               	goto	u88_25
  2218  035E                     i1l1283:
  2219  035E  3001               	movlw	1
  2220  035F  00FC               	movwf	??i1___lwmod
  2221  0360  087C               	movf	??i1___lwmod,w
  2222  0361  07FD               	addwf	i1___lwmod@counter,f
  2223  0362                     i1l1285:
  2224  0362  1FF9               	btfss	i1___lwmod@divisor+1,7
  2225  0363  2B65               	goto	u89_21
  2226  0364  2B66               	goto	u89_20
  2227  0365                     u89_21:
  2228  0365  2B57               	goto	i1l1281
  2229  0366                     u89_20:
  2230  0366                     i1l1287:
  2231  0366  0879               	movf	i1___lwmod@divisor+1,w
  2232  0367  027B               	subwf	i1___lwmod@dividend+1,w
  2233  0368  1D03               	skipz
  2234  0369  2B6C               	goto	u90_25
  2235  036A  0878               	movf	i1___lwmod@divisor,w
  2236  036B  027A               	subwf	i1___lwmod@dividend,w
  2237  036C                     u90_25:
  2238  036C  1C03               	skipc
  2239  036D  2B6F               	goto	u90_21
  2240  036E  2B70               	goto	u90_20
  2241  036F                     u90_21:
  2242  036F  2B76               	goto	i1l1291
  2243  0370                     u90_20:
  2244  0370                     i1l1289:
  2245  0370  0878               	movf	i1___lwmod@divisor,w
  2246  0371  02FA               	subwf	i1___lwmod@dividend,f
  2247  0372  0879               	movf	i1___lwmod@divisor+1,w
  2248  0373  1C03               	skipc
  2249  0374  03FB               	decf	i1___lwmod@dividend+1,f
  2250  0375  02FB               	subwf	i1___lwmod@dividend+1,f
  2251  0376                     i1l1291:
  2252  0376  3001               	movlw	1
  2253  0377                     u91_25:
  2254  0377  1003               	clrc
  2255  0378  0CF9               	rrf	i1___lwmod@divisor+1,f
  2256  0379  0CF8               	rrf	i1___lwmod@divisor,f
  2257  037A  3EFF               	addlw	-1
  2258  037B  1D03               	skipz
  2259  037C  2B77               	goto	u91_25
  2260  037D                     i1l1293:
  2261  037D  3001               	movlw	1
  2262  037E  02FD               	subwf	i1___lwmod@counter,f
  2263  037F  1D03               	btfss	3,2
  2264  0380  2B82               	goto	u92_21
  2265  0381  2B83               	goto	u92_20
  2266  0382                     u92_21:
  2267  0382  2B66               	goto	i1l1287
  2268  0383                     u92_20:
  2269  0383                     i1l1295:
  2270  0383  087B               	movf	i1___lwmod@dividend+1,w
  2271  0384  00F9               	movwf	?i1___lwmod+1
  2272  0385  087A               	movf	i1___lwmod@dividend,w
  2273  0386  00F8               	movwf	?i1___lwmod
  2274  0387                     i1l509:
  2275  0387  0008               	return
  2276  0388                     __end_ofi1___lwmod:
  2277                           
  2278                           	psect	text10
  2279  02CE                     __ptext10:	
  2280 ;; *************** function i1___lwdiv *****************
  2281 ;; Defined at:
  2282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  divisor         2    0[COMMON] unsigned int 
  2285 ;;  dividend        2    2[COMMON] unsigned int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  quotient        2    5[COMMON] unsigned int 
  2288 ;;  counter         1    7[COMMON] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2    0[COMMON] unsigned int 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         4       0       0       0       0
  2299 ;;      Locals:         3       0       0       0       0
  2300 ;;      Temps:          1       0       0       0       0
  2301 ;;      Totals:         8       0       0       0       0
  2302 ;;Total ram usage:        8 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		i1_sprintf
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function i1___lwdiv
  2313  02CE                     i1___lwdiv:
  2314  02CE                     i1l1251:	
  2315                           ;incstack = 0
  2316                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  2317                           
  2318  02CE  01F5               	clrf	i1___lwdiv@quotient
  2319  02CF  01F6               	clrf	i1___lwdiv@quotient+1
  2320  02D0                     i1l1253:
  2321  02D0  0870               	movf	i1___lwdiv@divisor,w
  2322  02D1  0471               	iorwf	i1___lwdiv@divisor+1,w
  2323  02D2  1903               	btfsc	3,2
  2324  02D3  2AD5               	goto	u80_21
  2325  02D4  2AD6               	goto	u80_20
  2326  02D5                     u80_21:
  2327  02D5  2B0D               	goto	i1l1273
  2328  02D6                     u80_20:
  2329  02D6                     i1l1255:
  2330  02D6  01F7               	clrf	i1___lwdiv@counter
  2331  02D7  0AF7               	incf	i1___lwdiv@counter,f
  2332  02D8  2AE4               	goto	i1l1261
  2333  02D9                     i1l1257:
  2334  02D9  3001               	movlw	1
  2335  02DA                     u81_25:
  2336  02DA  1003               	clrc
  2337  02DB  0DF0               	rlf	i1___lwdiv@divisor,f
  2338  02DC  0DF1               	rlf	i1___lwdiv@divisor+1,f
  2339  02DD  3EFF               	addlw	-1
  2340  02DE  1D03               	skipz
  2341  02DF  2ADA               	goto	u81_25
  2342  02E0                     i1l1259:
  2343  02E0  3001               	movlw	1
  2344  02E1  00F4               	movwf	??i1___lwdiv
  2345  02E2  0874               	movf	??i1___lwdiv,w
  2346  02E3  07F7               	addwf	i1___lwdiv@counter,f
  2347  02E4                     i1l1261:
  2348  02E4  1FF1               	btfss	i1___lwdiv@divisor+1,7
  2349  02E5  2AE7               	goto	u82_21
  2350  02E6  2AE8               	goto	u82_20
  2351  02E7                     u82_21:
  2352  02E7  2AD9               	goto	i1l1257
  2353  02E8                     u82_20:
  2354  02E8                     i1l1263:
  2355  02E8  3001               	movlw	1
  2356  02E9                     u83_25:
  2357  02E9  1003               	clrc
  2358  02EA  0DF5               	rlf	i1___lwdiv@quotient,f
  2359  02EB  0DF6               	rlf	i1___lwdiv@quotient+1,f
  2360  02EC  3EFF               	addlw	-1
  2361  02ED  1D03               	skipz
  2362  02EE  2AE9               	goto	u83_25
  2363  02EF  0871               	movf	i1___lwdiv@divisor+1,w
  2364  02F0  0273               	subwf	i1___lwdiv@dividend+1,w
  2365  02F1  1D03               	skipz
  2366  02F2  2AF5               	goto	u84_25
  2367  02F3  0870               	movf	i1___lwdiv@divisor,w
  2368  02F4  0272               	subwf	i1___lwdiv@dividend,w
  2369  02F5                     u84_25:
  2370  02F5  1C03               	skipc
  2371  02F6  2AF8               	goto	u84_21
  2372  02F7  2AF9               	goto	u84_20
  2373  02F8                     u84_21:
  2374  02F8  2B00               	goto	i1l1269
  2375  02F9                     u84_20:
  2376  02F9                     i1l1265:
  2377  02F9  0870               	movf	i1___lwdiv@divisor,w
  2378  02FA  02F2               	subwf	i1___lwdiv@dividend,f
  2379  02FB  0871               	movf	i1___lwdiv@divisor+1,w
  2380  02FC  1C03               	skipc
  2381  02FD  03F3               	decf	i1___lwdiv@dividend+1,f
  2382  02FE  02F3               	subwf	i1___lwdiv@dividend+1,f
  2383  02FF                     i1l1267:
  2384  02FF  1475               	bsf	i1___lwdiv@quotient,0
  2385  0300                     i1l1269:
  2386  0300  3001               	movlw	1
  2387  0301                     u85_25:
  2388  0301  1003               	clrc
  2389  0302  0CF1               	rrf	i1___lwdiv@divisor+1,f
  2390  0303  0CF0               	rrf	i1___lwdiv@divisor,f
  2391  0304  3EFF               	addlw	-1
  2392  0305  1D03               	skipz
  2393  0306  2B01               	goto	u85_25
  2394  0307                     i1l1271:
  2395  0307  3001               	movlw	1
  2396  0308  02F7               	subwf	i1___lwdiv@counter,f
  2397  0309  1D03               	btfss	3,2
  2398  030A  2B0C               	goto	u86_21
  2399  030B  2B0D               	goto	u86_20
  2400  030C                     u86_21:
  2401  030C  2AE8               	goto	i1l1263
  2402  030D                     u86_20:
  2403  030D                     i1l1273:
  2404  030D  0876               	movf	i1___lwdiv@quotient+1,w
  2405  030E  00F1               	movwf	?i1___lwdiv+1
  2406  030F  0875               	movf	i1___lwdiv@quotient,w
  2407  0310  00F0               	movwf	?i1___lwdiv
  2408  0311                     i1l499:
  2409  0311  0008               	return
  2410  0312                     __end_ofi1___lwdiv:
  2411                           
  2412                           	psect	text11
  2413  03A9                     __ptext11:	
  2414 ;; *************** function i1_enviocadena *****************
  2415 ;; Defined at:
  2416 ;;		line 44 in file "usart.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  cadena          1    wreg     PTR unsigned char 
  2419 ;;		 -> cont(1), 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  cadena          1    2[COMMON] PTR unsigned char 
  2422 ;;		 -> cont(1), 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         1       0       0       0       0
  2434 ;;      Temps:          1       0       0       0       0
  2435 ;;      Totals:         2       0       0       0       0
  2436 ;;Total ram usage:        2 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    1
  2439 ;; This function calls:
  2440 ;;		i1_enviocaracter
  2441 ;; This function is called by:
  2442 ;;		_isr
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function i1_enviocadena
  2448  03A9                     i1_enviocadena:
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in i1_enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2452                           ;i1enviocadena@cadena stored from wreg
  2453  03A9  00F2               	movwf	i1enviocadena@cadena
  2454  03AA                     i1l1357:
  2455                           
  2456                           ;usart.c: 45:     while (*cadena != 0){
  2457  03AA  2BB7               	goto	i1l1363
  2458  03AB                     i1l1359:
  2459                           
  2460                           ;usart.c: 46:       enviocaracter(*cadena);
  2461  03AB  0872               	movf	i1enviocadena@cadena,w
  2462  03AC  0084               	movwf	4
  2463  03AD  0800               	movf	0,w
  2464  03AE  120A  118A  23FE  120A  118A  	fcall	i1_enviocaracter
  2465  03B3                     i1l1361:
  2466                           
  2467                           ;usart.c: 47:       cadena++;
  2468  03B3  3001               	movlw	1
  2469  03B4  00F1               	movwf	??i1_enviocadena
  2470  03B5  0871               	movf	??i1_enviocadena,w
  2471  03B6  07F2               	addwf	i1enviocadena@cadena,f
  2472  03B7                     i1l1363:
  2473                           
  2474                           ;usart.c: 45:     while (*cadena != 0){
  2475  03B7  0872               	movf	i1enviocadena@cadena,w
  2476  03B8  0084               	movwf	4
  2477  03B9  1383               	bcf	3,7	;select IRP bank0
  2478  03BA  0800               	movf	0,w
  2479  03BB  1D03               	btfss	3,2
  2480  03BC  2BBE               	goto	u93_21
  2481  03BD  2BBF               	goto	u93_20
  2482  03BE                     u93_21:
  2483  03BE  2BAB               	goto	i1l1359
  2484  03BF                     u93_20:
  2485  03BF                     i1l111:
  2486                           
  2487                           ;usart.c: 49:     if (PIR1bits.TXIF){
  2488  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2489  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2490  03C1  1E0C               	btfss	12,4	;volatile
  2491  03C2  2BC4               	goto	u94_21
  2492  03C3  2BC5               	goto	u94_20
  2493  03C4                     u94_21:
  2494  03C4  2BC7               	goto	i1l113
  2495  03C5                     u94_20:
  2496  03C5                     i1l1365:
  2497                           
  2498                           ;usart.c: 50:             TXREG = 13;
  2499  03C5  300D               	movlw	13
  2500  03C6  0099               	movwf	25	;volatile
  2501  03C7                     i1l113:
  2502  03C7  0008               	return
  2503  03C8                     __end_ofi1_enviocadena:
  2504                           
  2505                           	psect	text12
  2506  03FE                     __ptext12:	
  2507 ;; *************** function i1_enviocaracter *****************
  2508 ;; Defined at:
  2509 ;;		line 35 in file "usart.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  a               1    wreg     unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  a               1    0[COMMON] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         1       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         1       0       0       0       0
  2527 ;;Total ram usage:        1 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		i1_enviocadena
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           
  2537                           ;psect for function i1_enviocaracter
  2538  03FE                     i1_enviocaracter:
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in i1_enviocaracter: [wreg]
  2542                           ;i1enviocaracter@a stored from wreg
  2543  03FE  00F0               	movwf	i1enviocaracter@a
  2544  03FF                     i1l1247:
  2545  03FF                     i1l102:	
  2546                           ;usart.c: 38:     }
  2547                           
  2548                           
  2549                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  2550  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2551  0400  1303               	bcf	3,6	;RP1=0, select bank1
  2552  0401  1C98               	btfss	24,1	;volatile
  2553  0402  2C04               	goto	u78_21
  2554  0403  2C05               	goto	u78_20
  2555  0404                     u78_21:
  2556  0404  2BFF               	goto	i1l102
  2557  0405                     u78_20:
  2558  0405                     i1l104:
  2559                           
  2560                           ;usart.c: 39:     if (PIR1bits.TXIF){
  2561  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0407  1E0C               	btfss	12,4	;volatile
  2564  0408  2C0A               	goto	u79_21
  2565  0409  2C0B               	goto	u79_20
  2566  040A                     u79_21:
  2567  040A  2C0D               	goto	i1l106
  2568  040B                     u79_20:
  2569  040B                     i1l1249:
  2570                           
  2571                           ;usart.c: 40:             TXREG = a;
  2572  040B  0870               	movf	i1enviocaracter@a,w
  2573  040C  0099               	movwf	25	;volatile
  2574  040D                     i1l106:
  2575  040D  0008               	return
  2576  040E                     __end_ofi1_enviocaracter:
  2577  007E                     btemp	set	126	;btemp
  2578  007E                     wtemp0	set	126
  2579                           
  2580                           	psect	config
  2581                           
  2582                           ;Config register CONFIG1 @ 0x2007
  2583                           ;	Oscillator Selection bits
  2584                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2585                           ;	Watchdog Timer Enable bit
  2586                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2587                           ;	Power-up Timer Enable bit
  2588                           ;	PWRTE = OFF, PWRT disabled
  2589                           ;	RE3/MCLR pin function select bit
  2590                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2591                           ;	Code Protection bit
  2592                           ;	CP = OFF, Program memory code protection is disabled
  2593                           ;	Data Code Protection bit
  2594                           ;	CPD = OFF, Data memory code protection is disabled
  2595                           ;	Brown Out Reset Selection bits
  2596                           ;	BOREN = OFF, BOR disabled
  2597                           ;	Internal External Switchover bit
  2598                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2599                           ;	Fail-Safe Clock Monitor Enabled bit
  2600                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2601                           ;	Low Voltage Programming Enable bit
  2602                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2603                           ;	In-Circuit Debugger Mode bit
  2604                           ;	DEBUG = 0x1, unprogrammed default
  2605  2007                     	org	8199
  2606  2007  20D4               	dw	8404
  2607                           
  2608                           ;Config register CONFIG2 @ 0x2008
  2609                           ;	Brown-out Reset Selection bit
  2610                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2611                           ;	Flash Program Memory Self Write Enable bits
  2612                           ;	WRT = OFF, Write protection off
  2613  2008                     	org	8200
  2614  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> cont(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 1
		 -> cont(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_sprintf->i1___lwmod
    i1___lwmod->i1___lwdiv
    i1_enviocadena->i1_enviocaracter

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _enviocadena->_enviocaracter

Critical Paths under _isr in BANK0

    _isr->i1_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1543
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    1543
                                             47 BANK0      3     3      0
                        _enviocadena
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1377
                                             34 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                             28 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                             20 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _enviocadena                                          2     2      0     166
                                             21 BANK0      2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (3) _enviocaracter                                        1     1      0      22
                                             20 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1021
                                             13 BANK0      7     7      0
                      i1_enviocadena
                          i1_sprintf
 ---------------------------------------------------------------------------------
 (5) i1_sprintf                                           21    18      3     954
                                              0 BANK0     13    10      3
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (6) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) i1_enviocadena                                        2     2      0      67
                                              1 COMMON     2     2      0
                    i1_enviocaracter
 ---------------------------------------------------------------------------------
 (6) i1_enviocaracter                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _enviocadena
       _enviocaracter
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 _isr (ROOT)
   i1_enviocadena
     i1_enviocaracter
   i1_sprintf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Aug 14 21:49:59 2021

                       pc 0002                        l72 0287                        fsr 0004  
                     l102 03DE                       l111 03A2                       l104 03E4  
                     l113 03A8                       l106 03EC                       l223 0105  
                     l509 034D                       l499 02CD                       u600 02B5  
                     u601 02B4                       u540 03E4                       u620 02C9  
                     u700 0064                       u541 03E3                       u621 02C8  
                     u605 02B1                       u701 0063                       u550 03EA  
                     u630 031A                       u710 008A                       u551 03E9  
                     u615 02BD                       u631 0319                       u711 0089  
                     u560 0292                       u720 0095                       u561 0291  
                     u721 0094                       u650 032C                       u730 009B  
                     u651 032B                       u731 009A                       u715 0086  
                     u580 02A4                       u660 0336                       u740 00EF  
                     u581 02A3                       u661 0335                       u645 031E  
                     u741 00EE                       u750 0101                       u575 0296  
                     u751 0100                       u760 03A2                       u680 0349  
                     u761 03A1                       u681 0348                       u665 0332  
                     u770 03A6                       u690 002A                       u771 03A5  
                     u595 02A5                       u675 033D                       u691 0029  
                     _isr 01EE                       fsr0 0004                       indf 0000  
                    l1123 03DE                      l1131 0292                      l1211 0095  
                    l1125 03EA                      l1141 02B5                      l1133 0295  
                    l1221 00DB                      l1213 009B                      l1205 006F  
                    l1301 0242                      l1143 02BB                      l1135 029C  
                    l1127 0288                      l1223 00E2                      l1215 00A2  
                    l1311 024C                      l1303 0243                      l1241 0394  
                    l1145 02BC                      l1137 02A0                      l1129 028C  
                    l1161 0328                      l1153 0312                      l1225 00E6  
                    l1217 00A6                      l1209 008B                      l1321 0253  
                    l1313 024D                      l1305 0246                      l1243 039A  
                    l1147 02C3                      l1139 02A4                      l1163 032C  
                    l1155 031A                      l1171 0349                      l1219 00AB  
                    l1227 00EF                      l1331 025A                      l1323 0254  
                    l1315 024E                      l1307 0247                      l1245 03A6  
                    l1237 038B                      l1149 02C9                      l1165 0336  
                    l1157 031D                      l1229 0101                      l1181 0031  
                    l1341 0266                      l1333 025B                      l1325 0255  
                    l1317 024F                      l1309 024A                      l1239 038C  
                    l1167 033C                      l1159 0324                      l1191 005C  
                    l1183 0036                      l1175 001F                      l1351 026D  
                    l1343 0267                      l1335 025E                      l1327 0258  
                    l1319 0250                      l1169 0343                      l1193 0060  
                    l1177 0024                      l1353 026E                      l1345 0268  
                    l1337 0262                      l1329 0259                      l1195 0064  
                    l1187 0037                      l1179 002A                      l1355 0281  
                    l1347 026B                      l1339 0263                      l1451 03F2  
                    l1197 0068                      l1189 0054                      l1349 026C  
                    l1453 03F8                      l1199 006D                      l1449 03ED  
                    l1299 023E                      l1495 0049                      ?_isr 0070  
                    STR_1 03D8                      STR_2 03D8                      STR_3 03D8  
                    u1050 03F8                      u1051 03F7                      _RBIF 0058  
                    i1l60 0231                      _cont 0052                      _main 03ED  
                    btemp 007E                      start 0012              ?_enviocadena 0070  
                   ??_isr 002D                     ?_main 0070                     _EEADR 010D  
                   _EEDAT 010C                     _ANSEL 0188           __end_of___lwdiv 02CE  
                   i1l102 03FF                     i1l111 03BF                     i1l104 0405  
                   i1l113 03C7                     i1l106 040D                     i1l223 01ED  
         __end_of___lwmod 034E                     i1l509 0387                     i1l499 0311  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     u80_20 02D6  
                   u80_21 02D5                     _TRISA 0085                     _TRISB 0086  
                   u81_25 02DA                     _TRISD 0088                     u82_20 02E8  
                   u90_20 0370                     u82_21 02E7                     u90_21 036F  
                   u90_25 036C                     u83_25 02E9                     u91_25 0377  
                   u84_20 02F9                     u92_20 0383                     u84_21 02F8  
                   u92_21 0382                     u84_25 02F5                     u93_20 03BF  
                   u93_21 03BE                     u85_25 0301                     u78_20 0405  
                   u94_20 03C5                     u86_20 030D                     u78_21 0404  
                   u94_21 03C4                     u86_21 030C                     u79_20 040B  
                   u87_20 0354                     u95_20 0114                     u79_21 040A  
                   u87_21 0353                     u95_21 0113                     u96_20 014E  
                   u96_21 014D                     u88_25 0358                     u89_20 0366  
                   u97_20 0174                     u89_21 0365                     u97_21 0173  
                   _TXREG 0019                     u97_25 0170                     u98_20 017F  
                   u98_21 017E                     u99_20 0185                     u99_21 0184  
      i1___lwmod@dividend 007A           __end_of_dpowers 03D8                     _setup 023E  
  __size_of_enviocaracter 0012         ??i1_enviocaracter 0070                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0106  
      __size_ofi1___lwdiv 0044        __size_ofi1___lwmod 003A           __initialization 0015  
            __end_of_main 03FE       i1enviocadena@cadena 0072                i1sprintf@c 002C  
              i1sprintf@f 0020                    ??_main 0052        __size_ofi1_sprintf 00E8  
                  _EECON2 018D                    ?_setup 0070                    _ANSELH 0189  
                  u100_20 01D7                    u100_21 01D6                    u101_20 01E9  
                  u101_21 01E8                    u102_20 01F2                    u102_21 01F1  
                  u103_20 01F6                    i1l1401 0175                    u103_21 01F5  
                  i1l1251 02CE                    i1l1411 0195                    i1l1403 017F  
                  i1l1261 02E4                    i1l1253 02D0                    i1l1413 01C3  
                  i1l1405 0185                    i1l1421 01E9                    i1l1247 03FF  
                  i1l1271 0307                    i1l1263 02E8                    i1l1255 02D6  
                  i1l1415 01CA                    i1l1407 018C                    i1l1431 01F2  
                  u104_20 0217                    i1l1249 040B                    i1l1361 03B3  
                  i1l1265 02F9                    i1l1257 02D9                    i1l1273 030D  
                  i1l1281 0357                    i1l1417 01CE                    i1l1409 0190  
                  i1l1441 0217                    u104_21 0216                    i1l1433 01F6  
                  i1l1363 03B7                    i1l1267 02FF                    i1l1259 02E0  
                  i1l1291 0376                    i1l1283 035E                    i1l1371 0114  
                  i1l1419 01D7                    i1l1443 0219                    i1l1435 01FA  
                  i1l1365 03C5                    i1l1357 03AA                    i1l1269 0300  
                  i1l1293 037D                    i1l1285 0362                    i1l1277 034E  
                  i1l1381 013E                    i1l1373 011B                    i1l1445 022A  
                  i1l1437 020B                    i1l1429 01EE                    i1l1359 03AB  
                  i1l1287 0366                    i1l1279 0354                    i1l1295 0383  
                  i1l1391 0157                    i1l1383 0146                    i1l1375 0120  
                  i1l1367 0109                    i1l1447 0230                    i1l1439 0211  
                  i1l1289 0370                    i1l1385 014A                    i1l1369 010E  
                  i1l1387 014E                    i1l1379 0121                    i1l1397 0159  
                  i1l1389 0152                    i1l1497 0133                    _SPBRGH 009A  
           i1sprintf@flag 0027             i1sprintf@prec 0028             _enviocaracter 03DB  
               ??___lwdiv 0038                 ??___lwmod 0040         __end_ofi1___lwdiv 0312  
       __end_ofi1___lwmod 0388                    saved_w 007E    __size_ofi1_enviocadena 001F  
               ??_sprintf 0045   __end_of__initialization 0018         __end_ofi1_sprintf 01EE  
          __pcstackCOMMON 0070            ?_enviocaracter 0070      __size_of_enviocadena 0021  
           __end_of_setup 0288            _OPTION_REGbits 0081               i1sprintf@ap 0026  
             i1sprintf@sp 002B                   ??_setup 004F                __pbssBANK0 0052  
              __pmaintext 03ED             i1_enviocadena 03A9                __pintentry 0004  
         i1_enviocaracter 03FE            enviocaracter@a 0034                __stringtab 03C8  
         ??_enviocaracter 0034            ?i1_enviocadena 0070                   ___lwdiv 0288  
                 ___lwmod 0312                   __ptext1 023E                   __ptext2 001C  
                 __ptext3 0312                   __ptext4 0288                   __ptext5 0388  
                 __ptext6 03DB                   __ptext7 01EE                   __ptext8 0106  
                 __ptext9 034E                   _dpowers 03CE         i1___lwdiv@divisor 0070  
            __size_of_isr 0050         i1___lwdiv@counter 0077                   _sprintf 001C  
    end_of_initialization 0018                 _RCSTAbits 0018   __end_ofi1_enviocaracter 040E  
               _PORTBbits 0006                 i1___lwdiv 02CE                 i1___lwmod 034E  
               _TXSTAbits 0098           ??i1_enviocadena 0071                 i1_sprintf 0106  
             _BAUDCTLbits 0187         i1___lwmod@divisor 0078         i1___lwmod@counter 007D  
     start_initialization 0015               __end_of_isr 023E                ?i1___lwdiv 0070  
              ?i1___lwmod 0078              i1sprintf@val 0029             ??_enviocadena 0035  
              ?i1_sprintf 0020          ?i1_enviocaracter 0070                 ___latbits 0002  
           __pcstackBANK0 0020               sprintf@flag 0049               sprintf@prec 004A  
        ___lwdiv@dividend 0036          i1enviocaracter@a 0070                  ?___lwdiv 0034  
                ?___lwmod 003C       __end_of_enviocadena 03A9                 __pstrings 03C8  
        ___lwdiv@quotient 0039               ??i1___lwdiv 0074               ??i1___lwmod 007C  
                ?_sprintf 0042            __size_of_setup 004A         interrupt_function 0004  
                _IOCBbits 0096                  _PIR1bits 000C                  _PIR2bits 000D  
             ??i1_sprintf 0023     __end_of_enviocaracter 03ED               __stringbase 03CD  
                _WPUBbits 0095         enviocadena@cadena 0036                _EECON1bits 018C  
             _enviocadena 0388          __size_of___lwdiv 0046          __size_of___lwmod 003C  
      __end_of__stringtab 03CE                sprintf@val 004B           ___lwdiv@divisor 0034  
         ___lwdiv@counter 003B                  __ptext10 02CE                  __ptext11 03A9  
                __ptext12 03FE          __size_of_sprintf 00EA        i1___lwdiv@dividend 0072  
           __size_of_main 0011     __end_ofi1_enviocadena 03C8        i1___lwdiv@quotient 0075  
              _INTCONbits 000B                  intlevel1 0000                 sprintf@ap 0048  
               sprintf@sp 004D          ___lwmod@dividend 003E                 stringcode 03C8  
              _OSCCONbits 008F                  sprintf@c 004E                  sprintf@f 0042  
         ___lwmod@divisor 003C  __size_ofi1_enviocaracter 0010           ___lwmod@counter 0041  
                stringdir 03C8                  stringtab 03C8  
