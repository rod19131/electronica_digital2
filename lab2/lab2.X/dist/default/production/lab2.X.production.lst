

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 29 11:21:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0039                     _RC1	set	57
   287  0038                     _RC0	set	56
   288  0047                     _RD7	set	71
   289  0046                     _RD6	set	70
   290  0045                     _RD5	set	69
   291  0044                     _RD4	set	68
   292  0043                     _RD3	set	67
   293  0042                     _RD2	set	66
   294  0041                     _RD1	set	65
   295  0040                     _RD0	set	64
   296  0087                     _TRISC	set	135
   297  0088                     _TRISD	set	136
   298                           
   299                           	psect	strings
   300  0003                     __pstrings:
   301  0003                     stringtab:
   302  0003                     __stringtab:
   303  0003                     stringcode:	
   304                           ;	String table - string pointers are 1 byte each
   305                           
   306  0003                     stringdir:
   307  0003  3000               	movlw	high stringdir
   308  0004  008A               	movwf	10
   309  0005  0804               	movf	4,w
   310  0006  0A84               	incf	4,f
   311  0007  0782               	addwf	2,f
   312  0008                     __stringbase:
   313  0008  3400               	retlw	0
   314  0009                     __end_of__stringtab:
   315  0009                     STR_5:
   316  0009  3477               	retlw	119	;'w'
   317  000A  3477               	retlw	119	;'w'
   318  000B  3477               	retlw	119	;'w'
   319  000C  342E               	retlw	46	;'.'
   320  000D  3465               	retlw	101	;'e'
   321  000E  346C               	retlw	108	;'l'
   322  000F  3465               	retlw	101	;'e'
   323  0010  3463               	retlw	99	;'c'
   324  0011  3474               	retlw	116	;'t'
   325  0012  3472               	retlw	114	;'r'
   326  0013  346F               	retlw	111	;'o'
   327  0014  3453               	retlw	83	;'S'
   328  0015  346F               	retlw	111	;'o'
   329  0016  346D               	retlw	109	;'m'
   330  0017  3465               	retlw	101	;'e'
   331  0018  342E               	retlw	46	;'.'
   332  0019  3463               	retlw	99	;'c'
   333  001A  346F               	retlw	111	;'o'
   334  001B  346D               	retlw	109	;'m'
   335  001C  3400               	retlw	0
   336  001D                     STR_1:
   337  001D  344C               	retlw	76	;'L'
   338  001E  3443               	retlw	67	;'C'
   339  001F  3444               	retlw	68	;'D'
   340  0020  3420               	retlw	32	;' '
   341  0021  344C               	retlw	76	;'L'
   342  0022  3469               	retlw	105	;'i'
   343  0023  3462               	retlw	98	;'b'
   344  0024  3472               	retlw	114	;'r'
   345  0025  3461               	retlw	97	;'a'
   346  0026  3472               	retlw	114	;'r'
   347  0027  3479               	retlw	121	;'y'
   348  0028  3420               	retlw	32	;' '
   349  0029  3466               	retlw	102	;'f'
   350  002A  346F               	retlw	111	;'o'
   351  002B  3472               	retlw	114	;'r'
   352  002C  3400               	retlw	0
   353  002D                     STR_3:
   354  002D  3444               	retlw	68	;'D'
   355  002E  3465               	retlw	101	;'e'
   356  002F  3476               	retlw	118	;'v'
   357  0030  3465               	retlw	101	;'e'
   358  0031  346C               	retlw	108	;'l'
   359  0032  346F               	retlw	111	;'o'
   360  0033  3470               	retlw	112	;'p'
   361  0034  3465               	retlw	101	;'e'
   362  0035  3464               	retlw	100	;'d'
   363  0036  3420               	retlw	32	;' '
   364  0037  3442               	retlw	66	;'B'
   365  0038  3479               	retlw	121	;'y'
   366  0039  3400               	retlw	0
   367  003A                     STR_4:
   368  003A  3465               	retlw	101	;'e'
   369  003B  346C               	retlw	108	;'l'
   370  003C  3465               	retlw	101	;'e'
   371  003D  3463               	retlw	99	;'c'
   372  003E  3474               	retlw	116	;'t'
   373  003F  3472               	retlw	114	;'r'
   374  0040  346F               	retlw	111	;'o'
   375  0041  3453               	retlw	83	;'S'
   376  0042  346F               	retlw	111	;'o'
   377  0043  346D               	retlw	109	;'m'
   378  0044  3465               	retlw	101	;'e'
   379  0045  3400               	retlw	0
   380  0046                     STR_6:
   381  0046  3448               	retlw	72	;'H'
   382  0047  346F               	retlw	111	;'o'
   383  0048  346C               	retlw	108	;'l'
   384  0049  3461               	retlw	97	;'a'
   385  004A  3420               	retlw	32	;' '
   386  004B  344D               	retlw	77	;'M'
   387  004C  3475               	retlw	117	;'u'
   388  004D  346E               	retlw	110	;'n'
   389  004E  3464               	retlw	100	;'d'
   390  004F  346F               	retlw	111	;'o'
   391  0050  3400               	retlw	0
   392  0051                     STR_2:
   393  0051  344D               	retlw	77	;'M'
   394  0052  3450               	retlw	80	;'P'
   395  0053  344C               	retlw	76	;'L'
   396  0054  3441               	retlw	65	;'A'
   397  0055  3442               	retlw	66	;'B'
   398  0056  3420               	retlw	32	;' '
   399  0057  3458               	retlw	88	;'X'
   400  0058  3443               	retlw	67	;'C'
   401  0059  3438               	retlw	56	;'8'
   402  005A  3400               	retlw	0
   403                           
   404                           	psect	cinit
   405  07FC                     start_initialization:	
   406                           ; #config settings
   407                           
   408  07FC                     __initialization:
   409  07FC                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  07FC                     __end_of__initialization:
   413  07FC  0183               	clrf	3
   414  07FD  120A  118A  2F33   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:
   418  0070                     ?_Lcd_Port:
   419  0070                     ??_Lcd_Port:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_Lcd_Cmd:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_Lcd_Clear:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_Lcd_Init:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_Lcd_Write_Char:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_Lcd_Write_String:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     Lcd_Port@a:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0070                     	ds	1
   446  0071                     ??_Lcd_Cmd:
   447  0071                     ??_Lcd_Write_Char:	
   448                           ; 1 bytes @ 0x1
   449                           
   450                           
   451                           ; 1 bytes @ 0x1
   452  0071                     	ds	1
   453  0072                     Lcd_Write_Char@a:
   454                           
   455                           ; 1 bytes @ 0x2
   456  0072                     	ds	1
   457  0073                     ??_Lcd_Write_String:
   458  0073                     Lcd_Cmd@a:	
   459                           ; 1 bytes @ 0x3
   460                           
   461  0073                     Lcd_Write_String@i:	
   462                           ; 1 bytes @ 0x3
   463                           
   464                           
   465                           ; 2 bytes @ 0x3
   466  0073                     	ds	1
   467  0074                     ??_Lcd_Clear:
   468  0074                     ?_Lcd_Set_Cursor:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     ??_Lcd_Init:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     Lcd_Set_Cursor@b:	
   475                           ; 1 bytes @ 0x4
   476                           
   477                           
   478                           ; 1 bytes @ 0x4
   479  0074                     	ds	1
   480  0075                     ??_Lcd_Set_Cursor:
   481  0075                     Lcd_Write_String@a:	
   482                           ; 1 bytes @ 0x5
   483                           
   484                           
   485                           ; 1 bytes @ 0x5
   486  0075                     	ds	1
   487  0076                     Lcd_Set_Cursor@a:
   488                           
   489                           ; 1 bytes @ 0x6
   490  0076                     	ds	1
   491  0077                     Lcd_Set_Cursor@temp:
   492                           
   493                           ; 1 bytes @ 0x7
   494  0077                     	ds	1
   495  0078                     ??_main:
   496                           
   497                           ; 1 bytes @ 0x8
   498  0078                     	ds	3
   499                           
   500                           	psect	maintext
   501  0733                     __pmaintext:	
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 39 in file "lab2.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  a               2    0        unsigned int 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B00/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0
   523 ;;      Temps:          3       0       0       0       0
   524 ;;      Totals:         3       0       0       0       0
   525 ;;Total ram usage:        3 bytes
   526 ;; Hardware stack levels required when called:    3
   527 ;; This function calls:
   528 ;;		_Lcd_Clear
   529 ;;		_Lcd_Init
   530 ;;		_Lcd_Set_Cursor
   531 ;;		_Lcd_Write_Char
   532 ;;		_Lcd_Write_String
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  0733                     _main:
   541  0733                     l835:	
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   544                           
   545                           
   546                           ;lab2.c: 40:   unsigned int a;;lab2.c: 41:   TRISD = 0x00;
   547  0733  1683               	bsf	3,5	;RP0=1, select bank1
   548  0734  1303               	bcf	3,6	;RP1=0, select bank1
   549  0735  0188               	clrf	8	;volatile
   550                           
   551                           ;lab2.c: 42:   TRISC = 0x00;
   552  0736  0187               	clrf	7	;volatile
   553  0737                     l837:
   554                           
   555                           ;lab2.c: 43:   Lcd_Init();
   556  0737  120A  118A  26E2  120A  118A  	fcall	_Lcd_Init
   557  073C                     l839:
   558                           
   559                           ;lab2.c: 45:   {;lab2.c: 46:     Lcd_Clear();
   560  073C  120A  118A  261E  120A  118A  	fcall	_Lcd_Clear
   561  0741                     l841:
   562                           
   563                           ;lab2.c: 47:     Lcd_Set_Cursor(1,1);
   564  0741  01F4               	clrf	Lcd_Set_Cursor@b
   565  0742  0AF4               	incf	Lcd_Set_Cursor@b,f
   566  0743  3001               	movlw	1
   567  0744  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   568  0749                     l843:
   569                           
   570                           ;lab2.c: 48:     Lcd_Write_String("LCD Library for");
   571  0749  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   572  074A  120A  118A  267F  120A  118A  	fcall	_Lcd_Write_String
   573  074F                     l845:
   574                           
   575                           ;lab2.c: 49:     Lcd_Set_Cursor(2,1);
   576  074F  01F4               	clrf	Lcd_Set_Cursor@b
   577  0750  0AF4               	incf	Lcd_Set_Cursor@b,f
   578  0751  3002               	movlw	2
   579  0752  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   580  0757                     l847:
   581                           
   582                           ;lab2.c: 50:     Lcd_Write_String("MPLAB XC8");
   583  0757  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   584  0758  120A  118A  267F  120A  118A  	fcall	_Lcd_Write_String
   585  075D                     l849:
   586                           
   587                           ;lab2.c: 51:     _delay((unsigned long)((500)*(8000000/4000.0)));
   588  075D  3006               	movlw	6
   589  075E  00FA               	movwf	??_main+2
   590  075F  3013               	movlw	19
   591  0760  00F9               	movwf	??_main+1
   592  0761  30AD               	movlw	173
   593  0762  00F8               	movwf	??_main
   594  0763                     u157:
   595  0763  0BF8               	decfsz	??_main,f
   596  0764  2F63               	goto	u157
   597  0765  0BF9               	decfsz	??_main+1,f
   598  0766  2F63               	goto	u157
   599  0767  0BFA               	decfsz	??_main+2,f
   600  0768  2F63               	goto	u157
   601  0769  2F6A               	nop2
   602  076A                     l851:
   603                           
   604                           ;lab2.c: 52:     Lcd_Clear();
   605  076A  120A  118A  261E  120A  118A  	fcall	_Lcd_Clear
   606  076F                     l853:
   607                           
   608                           ;lab2.c: 53:     Lcd_Set_Cursor(1,1);
   609  076F  01F4               	clrf	Lcd_Set_Cursor@b
   610  0770  0AF4               	incf	Lcd_Set_Cursor@b,f
   611  0771  3001               	movlw	1
   612  0772  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   613  0777                     l855:
   614                           
   615                           ;lab2.c: 54:     Lcd_Write_String("Developed By");
   616  0777  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   617  0778  120A  118A  267F  120A  118A  	fcall	_Lcd_Write_String
   618  077D                     l857:
   619                           
   620                           ;lab2.c: 55:     Lcd_Set_Cursor(2,1);
   621  077D  01F4               	clrf	Lcd_Set_Cursor@b
   622  077E  0AF4               	incf	Lcd_Set_Cursor@b,f
   623  077F  3002               	movlw	2
   624  0780  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   625  0785                     l859:
   626                           
   627                           ;lab2.c: 56:     Lcd_Write_String("electroSome");
   628  0785  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   629  0786  120A  118A  267F  120A  118A  	fcall	_Lcd_Write_String
   630  078B                     l861:
   631                           
   632                           ;lab2.c: 57:     _delay((unsigned long)((500)*(8000000/4000.0)));
   633  078B  3006               	movlw	6
   634  078C  00FA               	movwf	??_main+2
   635  078D  3013               	movlw	19
   636  078E  00F9               	movwf	??_main+1
   637  078F  30AD               	movlw	173
   638  0790  00F8               	movwf	??_main
   639  0791                     u167:
   640  0791  0BF8               	decfsz	??_main,f
   641  0792  2F91               	goto	u167
   642  0793  0BF9               	decfsz	??_main+1,f
   643  0794  2F91               	goto	u167
   644  0795  0BFA               	decfsz	??_main+2,f
   645  0796  2F91               	goto	u167
   646  0797  2F98               	nop2
   647  0798                     l863:
   648                           
   649                           ;lab2.c: 58:     Lcd_Clear();
   650  0798  120A  118A  261E  120A  118A  	fcall	_Lcd_Clear
   651  079D                     l865:
   652                           
   653                           ;lab2.c: 59:     Lcd_Set_Cursor(1,1);
   654  079D  01F4               	clrf	Lcd_Set_Cursor@b
   655  079E  0AF4               	incf	Lcd_Set_Cursor@b,f
   656  079F  3001               	movlw	1
   657  07A0  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   658  07A5                     l867:
   659                           
   660                           ;lab2.c: 60:     Lcd_Write_String("www.electroSome.com");
   661  07A5  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   662  07A6  120A  118A  267F  120A  118A  	fcall	_Lcd_Write_String
   663  07AB                     l869:
   664                           
   665                           ;lab2.c: 61:     _delay((unsigned long)((500)*(8000000/4000.0)));
   666  07AB  3006               	movlw	6
   667  07AC  00FA               	movwf	??_main+2
   668  07AD  3013               	movlw	19
   669  07AE  00F9               	movwf	??_main+1
   670  07AF  30AD               	movlw	173
   671  07B0  00F8               	movwf	??_main
   672  07B1                     u177:
   673  07B1  0BF8               	decfsz	??_main,f
   674  07B2  2FB1               	goto	u177
   675  07B3  0BF9               	decfsz	??_main+1,f
   676  07B4  2FB1               	goto	u177
   677  07B5  0BFA               	decfsz	??_main+2,f
   678  07B6  2FB1               	goto	u177
   679  07B7  2FB8               	nop2
   680  07B8                     l871:
   681                           
   682                           ;lab2.c: 62:     Lcd_Clear();
   683  07B8  120A  118A  261E  120A  118A  	fcall	_Lcd_Clear
   684  07BD                     l873:
   685                           
   686                           ;lab2.c: 63:     Lcd_Set_Cursor(2,1);
   687  07BD  01F4               	clrf	Lcd_Set_Cursor@b
   688  07BE  0AF4               	incf	Lcd_Set_Cursor@b,f
   689  07BF  3002               	movlw	2
   690  07C0  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   691  07C5                     l875:
   692                           
   693                           ;lab2.c: 64:     Lcd_Write_Char('H');
   694  07C5  3048               	movlw	72
   695  07C6  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_Char
   696  07CB                     l877:
   697                           
   698                           ;lab2.c: 65:     Lcd_Write_Char('o');
   699  07CB  306F               	movlw	111
   700  07CC  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_Char
   701  07D1                     l879:
   702                           
   703                           ;lab2.c: 66:     Lcd_Write_Char('l');
   704  07D1  306C               	movlw	108
   705  07D2  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_Char
   706  07D7                     l881:
   707                           
   708                           ;lab2.c: 67:     Lcd_Write_Char('a');
   709  07D7  3061               	movlw	97
   710  07D8  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_Char
   711  07DD                     l883:
   712                           
   713                           ;lab2.c: 68:     Lcd_Set_Cursor(1,1);
   714  07DD  01F4               	clrf	Lcd_Set_Cursor@b
   715  07DE  0AF4               	incf	Lcd_Set_Cursor@b,f
   716  07DF  3001               	movlw	1
   717  07E0  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   718  07E5                     l885:
   719                           
   720                           ;lab2.c: 69:     Lcd_Write_String("Hola Mundo");
   721  07E5  303E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   722  07E6  120A  118A  267F  120A  118A  	fcall	_Lcd_Write_String
   723  07EB                     l887:
   724                           
   725                           ;lab2.c: 70:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   726  07EB  300B               	movlw	11
   727  07EC  00FA               	movwf	??_main+2
   728  07ED  3026               	movlw	38
   729  07EE  00F9               	movwf	??_main+1
   730  07EF  305D               	movlw	93
   731  07F0  00F8               	movwf	??_main
   732  07F1                     u187:
   733  07F1  0BF8               	decfsz	??_main,f
   734  07F2  2FF1               	goto	u187
   735  07F3  0BF9               	decfsz	??_main+1,f
   736  07F4  2FF1               	goto	u187
   737  07F5  0BFA               	decfsz	??_main+2,f
   738  07F6  2FF1               	goto	u187
   739  07F7  2FF8               	nop2
   740  07F8  2F3C               	goto	l839
   741  07F9  120A  118A  2800   	ljmp	start
   742  07FC                     __end_of_main:
   743                           
   744                           	psect	text1
   745  067F                     __ptext1:	
   746 ;; *************** function _Lcd_Write_String *****************
   747 ;; Defined at:
   748 ;;		line 104 in file "LCD8bits.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  a               1    wreg     PTR unsigned char 
   751 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   752 ;;		 -> STR_2(10), STR_1(16), 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  a               1    5[COMMON] PTR unsigned char 
   755 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   756 ;;		 -> STR_2(10), STR_1(16), 
   757 ;;  i               2    3[COMMON] int 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         3       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0
   770 ;;      Totals:         3       0       0       0       0
   771 ;;Total ram usage:        3 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    2
   774 ;; This function calls:
   775 ;;		_Lcd_Write_Char
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _Lcd_Write_String
   783  067F                     _Lcd_Write_String:
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   787                           ;Lcd_Write_String@a stored from wreg
   788  067F  00F5               	movwf	Lcd_Write_String@a
   789  0680                     l827:
   790                           
   791                           ;LCD8bits.c: 105:     int i;;LCD8bits.c: 106:     for (i = 0; a[i] != '\0'; i++)
   792  0680  01F3               	clrf	Lcd_Write_String@i
   793  0681  01F4               	clrf	Lcd_Write_String@i+1
   794  0682  2E96               	goto	l833
   795  0683                     l829:
   796                           
   797                           ;LCD8bits.c: 107:         Lcd_Write_Char(a[i]);
   798  0683  0873               	movf	Lcd_Write_String@i,w
   799  0684  0775               	addwf	Lcd_Write_String@a,w
   800  0685  0084               	movwf	4
   801  0686  120A  118A  2003  120A  118A  	fcall	stringdir
   802  068B  120A  118A  262B  120A  118A  	fcall	_Lcd_Write_Char
   803  0690                     l831:
   804  0690  3001               	movlw	1
   805  0691  07F3               	addwf	Lcd_Write_String@i,f
   806  0692  1803               	skipnc
   807  0693  0AF4               	incf	Lcd_Write_String@i+1,f
   808  0694  3000               	movlw	0
   809  0695  07F4               	addwf	Lcd_Write_String@i+1,f
   810  0696                     l833:
   811  0696  0873               	movf	Lcd_Write_String@i,w
   812  0697  0775               	addwf	Lcd_Write_String@a,w
   813  0698  0084               	movwf	4
   814  0699  120A  118A  2003  120A  118A  	fcall	stringdir
   815  069E  3A00               	xorlw	0
   816  069F  1D03               	skipz
   817  06A0  2EA2               	goto	u141
   818  06A1  2EA3               	goto	u140
   819  06A2                     u141:
   820  06A2  2E83               	goto	l829
   821  06A3                     u140:
   822  06A3                     l65:
   823  06A3  0008               	return
   824  06A4                     __end_of_Lcd_Write_String:
   825                           
   826                           	psect	text2
   827  062B                     __ptext2:	
   828 ;; *************** function _Lcd_Write_Char *****************
   829 ;; Defined at:
   830 ;;		line 96 in file "LCD8bits.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  a               1    wreg     unsigned char 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  a               1    2[COMMON] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         1       0       0       0       0
   846 ;;      Temps:          1       0       0       0       0
   847 ;;      Totals:         2       0       0       0       0
   848 ;;Total ram usage:        2 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    1
   851 ;; This function calls:
   852 ;;		_Lcd_Port
   853 ;; This function is called by:
   854 ;;		_Lcd_Write_String
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _Lcd_Write_Char
   861  062B                     _Lcd_Write_Char:
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   865                           ;Lcd_Write_Char@a stored from wreg
   866  062B  00F2               	movwf	Lcd_Write_Char@a
   867  062C                     l715:
   868                           
   869                           ;LCD8bits.c: 97:     RC0 = 1;
   870  062C  1283               	bcf	3,5	;RP0=0, select bank0
   871  062D  1303               	bcf	3,6	;RP1=0, select bank0
   872  062E  1407               	bsf	7,0	;volatile
   873  062F                     l717:
   874                           
   875                           ;LCD8bits.c: 98:     Lcd_Port(a);
   876  062F  0872               	movf	Lcd_Write_Char@a,w
   877  0630  120A  118A  26A4  120A  118A  	fcall	_Lcd_Port
   878  0635                     l719:
   879                           
   880                           ;LCD8bits.c: 99:     RC1 = 1;
   881  0635  1283               	bcf	3,5	;RP0=0, select bank0
   882  0636  1303               	bcf	3,6	;RP1=0, select bank0
   883  0637  1487               	bsf	7,1	;volatile
   884  0638                     l721:
   885                           
   886                           ;LCD8bits.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   887  0638  301A               	movlw	26
   888  0639  00F1               	movwf	??_Lcd_Write_Char
   889  063A                     u197:
   890  063A  0BF1               	decfsz	??_Lcd_Write_Char,f
   891  063B  2E3A               	goto	u197
   892  063C  0000               	nop
   893  063D                     l723:
   894                           
   895                           ;LCD8bits.c: 101:     RC1 = 0;
   896  063D  1283               	bcf	3,5	;RP0=0, select bank0
   897  063E  1303               	bcf	3,6	;RP1=0, select bank0
   898  063F  1087               	bcf	7,1	;volatile
   899  0640                     l59:
   900  0640  0008               	return
   901  0641                     __end_of_Lcd_Write_Char:
   902                           
   903                           	psect	text3
   904  065B                     __ptext3:	
   905 ;; *************** function _Lcd_Set_Cursor *****************
   906 ;; Defined at:
   907 ;;		line 68 in file "LCD8bits.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  a               1    wreg     unsigned char 
   910 ;;  b               1    4[COMMON] unsigned char 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  a               1    6[COMMON] unsigned char 
   913 ;;  temp            1    7[COMMON] unsigned char 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         1       0       0       0       0
   924 ;;      Locals:         2       0       0       0       0
   925 ;;      Temps:          1       0       0       0       0
   926 ;;      Totals:         4       0       0       0       0
   927 ;;Total ram usage:        4 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    2
   930 ;; This function calls:
   931 ;;		_Lcd_Cmd
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _Lcd_Set_Cursor
   939  065B                     _Lcd_Set_Cursor:
   940                           
   941                           ;incstack = 0
   942                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   943                           ;Lcd_Set_Cursor@a stored from wreg
   944  065B  00F6               	movwf	Lcd_Set_Cursor@a
   945  065C                     l815:
   946                           
   947                           ;LCD8bits.c: 69:     unsigned char temp;;LCD8bits.c: 70:     if (a == 1) {
   948  065C  0376               	decf	Lcd_Set_Cursor@a,w
   949  065D  1D03               	btfss	3,2
   950  065E  2E60               	goto	u121
   951  065F  2E61               	goto	u120
   952  0660                     u121:
   953  0660  2E6D               	goto	l821
   954  0661                     u120:
   955  0661                     l817:
   956                           
   957                           ;LCD8bits.c: 71:         temp = 0x80 + b - 1;
   958  0661  0874               	movf	Lcd_Set_Cursor@b,w
   959  0662  3E7F               	addlw	127
   960  0663  00F5               	movwf	??_Lcd_Set_Cursor
   961  0664  0875               	movf	??_Lcd_Set_Cursor,w
   962  0665  00F7               	movwf	Lcd_Set_Cursor@temp
   963  0666                     l819:
   964                           
   965                           ;LCD8bits.c: 72:         Lcd_Cmd(temp);
   966  0666  0877               	movf	Lcd_Set_Cursor@temp,w
   967  0667  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
   968                           
   969                           ;LCD8bits.c: 74:     } else if (a == 2) {
   970  066C  2E7E               	goto	l53
   971  066D                     l821:
   972  066D  3002               	movlw	2
   973  066E  0676               	xorwf	Lcd_Set_Cursor@a,w
   974  066F  1D03               	btfss	3,2
   975  0670  2E72               	goto	u131
   976  0671  2E73               	goto	u130
   977  0672                     u131:
   978  0672  2E7E               	goto	l53
   979  0673                     u130:
   980  0673                     l823:
   981                           
   982                           ;LCD8bits.c: 75:         temp = 0xC0 + b - 1;
   983  0673  0874               	movf	Lcd_Set_Cursor@b,w
   984  0674  3EBF               	addlw	191
   985  0675  00F5               	movwf	??_Lcd_Set_Cursor
   986  0676  0875               	movf	??_Lcd_Set_Cursor,w
   987  0677  00F7               	movwf	Lcd_Set_Cursor@temp
   988  0678                     l825:
   989                           
   990                           ;LCD8bits.c: 76:         Lcd_Cmd(temp);
   991  0678  0877               	movf	Lcd_Set_Cursor@temp,w
   992  0679  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
   993  067E                     l53:
   994  067E  0008               	return
   995  067F                     __end_of_Lcd_Set_Cursor:
   996                           
   997                           	psect	text4
   998  06E2                     __ptext4:	
   999 ;; *************** function _Lcd_Init *****************
  1000 ;; Defined at:
  1001 ;;		line 80 in file "LCD8bits.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          2       0       0       0       0
  1018 ;;      Totals:         2       0       0       0       0
  1019 ;;Total ram usage:        2 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    2
  1022 ;; This function calls:
  1023 ;;		_Lcd_Cmd
  1024 ;;		_Lcd_Port
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _Lcd_Init
  1032  06E2                     _Lcd_Init:
  1033  06E2                     l739:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1036                           
  1037                           
  1038                           ;LCD8bits.c: 81:     Lcd_Port(0);
  1039  06E2  3000               	movlw	0
  1040  06E3  120A  118A  26A4  120A  118A  	fcall	_Lcd_Port
  1041  06E8                     l741:
  1042                           
  1043                           ;LCD8bits.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1044  06E8  3034               	movlw	52
  1045  06E9  00F5               	movwf	??_Lcd_Init+1
  1046  06EA  30F1               	movlw	241
  1047  06EB  00F4               	movwf	??_Lcd_Init
  1048  06EC                     u207:
  1049  06EC  0BF4               	decfsz	??_Lcd_Init,f
  1050  06ED  2EEC               	goto	u207
  1051  06EE  0BF5               	decfsz	??_Lcd_Init+1,f
  1052  06EF  2EEC               	goto	u207
  1053  06F0  2EF1               	nop2
  1054  06F1                     l743:
  1055                           
  1056                           ;LCD8bits.c: 83:     Lcd_Cmd(48);
  1057  06F1  3030               	movlw	48
  1058  06F2  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1059                           
  1060                           ;LCD8bits.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1061  06F7  300D               	movlw	13
  1062  06F8  00F5               	movwf	??_Lcd_Init+1
  1063  06F9  30FB               	movlw	251
  1064  06FA  00F4               	movwf	??_Lcd_Init
  1065  06FB                     u217:
  1066  06FB  0BF4               	decfsz	??_Lcd_Init,f
  1067  06FC  2EFB               	goto	u217
  1068  06FD  0BF5               	decfsz	??_Lcd_Init+1,f
  1069  06FE  2EFB               	goto	u217
  1070  06FF  2F00               	nop2
  1071  0700                     l745:
  1072                           
  1073                           ;LCD8bits.c: 85:     Lcd_Cmd(48);
  1074  0700  3030               	movlw	48
  1075  0701  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1076  0706                     l747:
  1077                           
  1078                           ;LCD8bits.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1079  0706  301D               	movlw	29
  1080  0707  00F5               	movwf	??_Lcd_Init+1
  1081  0708  3091               	movlw	145
  1082  0709  00F4               	movwf	??_Lcd_Init
  1083  070A                     u227:
  1084  070A  0BF4               	decfsz	??_Lcd_Init,f
  1085  070B  2F0A               	goto	u227
  1086  070C  0BF5               	decfsz	??_Lcd_Init+1,f
  1087  070D  2F0A               	goto	u227
  1088                           
  1089                           ;LCD8bits.c: 87:     Lcd_Cmd(48);
  1090  070E  3030               	movlw	48
  1091  070F  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1092                           
  1093                           ;LCD8bits.c: 89:     Lcd_Cmd(56);
  1094  0714  3038               	movlw	56
  1095  0715  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1096                           
  1097                           ;LCD8bits.c: 90:     Lcd_Cmd(8);
  1098  071A  3008               	movlw	8
  1099  071B  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1100                           
  1101                           ;LCD8bits.c: 91:     Lcd_Cmd(1);
  1102  0720  3001               	movlw	1
  1103  0721  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1104                           
  1105                           ;LCD8bits.c: 92:     Lcd_Cmd(6);
  1106  0726  3006               	movlw	6
  1107  0727  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1108                           
  1109                           ;LCD8bits.c: 93:     Lcd_Cmd(12);
  1110  072C  300C               	movlw	12
  1111  072D  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1112  0732                     l56:
  1113  0732  0008               	return
  1114  0733                     __end_of_Lcd_Init:
  1115                           
  1116                           	psect	text5
  1117  061E                     __ptext5:	
  1118 ;; *************** function _Lcd_Clear *****************
  1119 ;; Defined at:
  1120 ;;		line 63 in file "LCD8bits.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    2
  1141 ;; This function calls:
  1142 ;;		_Lcd_Cmd
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _Lcd_Clear
  1150  061E                     _Lcd_Clear:
  1151  061E                     l725:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1154                           
  1155                           
  1156                           ;LCD8bits.c: 64:     Lcd_Cmd(0);
  1157  061E  3000               	movlw	0
  1158  061F  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1159                           
  1160                           ;LCD8bits.c: 65:     Lcd_Cmd(1);
  1161  0624  3001               	movlw	1
  1162  0625  120A  118A  2641  120A  118A  	fcall	_Lcd_Cmd
  1163  062A                     l47:
  1164  062A  0008               	return
  1165  062B                     __end_of_Lcd_Clear:
  1166                           
  1167                           	psect	text6
  1168  0641                     __ptext6:	
  1169 ;; *************** function _Lcd_Cmd *****************
  1170 ;; Defined at:
  1171 ;;		line 55 in file "LCD8bits.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  a               1    wreg     unsigned char 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  a               1    3[COMMON] unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0, pclath, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       0       0       0       0
  1186 ;;      Locals:         1       0       0       0       0
  1187 ;;      Temps:          2       0       0       0       0
  1188 ;;      Totals:         3       0       0       0       0
  1189 ;;Total ram usage:        3 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    1
  1192 ;; This function calls:
  1193 ;;		_Lcd_Port
  1194 ;; This function is called by:
  1195 ;;		_Lcd_Clear
  1196 ;;		_Lcd_Set_Cursor
  1197 ;;		_Lcd_Init
  1198 ;;		_Lcd_Shift_Right
  1199 ;;		_Lcd_Shift_Left
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function _Lcd_Cmd
  1205  0641                     _Lcd_Cmd:
  1206                           
  1207                           ;incstack = 0
  1208                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1209                           ;Lcd_Cmd@a stored from wreg
  1210  0641  00F3               	movwf	Lcd_Cmd@a
  1211  0642                     l705:
  1212                           
  1213                           ;LCD8bits.c: 56:     RC0 = 0;
  1214  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0644  1007               	bcf	7,0	;volatile
  1217  0645                     l707:
  1218                           
  1219                           ;LCD8bits.c: 57:     Lcd_Port(a);
  1220  0645  0873               	movf	Lcd_Cmd@a,w
  1221  0646  120A  118A  26A4  120A  118A  	fcall	_Lcd_Port
  1222  064B                     l709:
  1223                           
  1224                           ;LCD8bits.c: 58:     RC1 = 1;
  1225  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1226  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1227  064D  1487               	bsf	7,1	;volatile
  1228  064E                     l711:
  1229                           
  1230                           ;LCD8bits.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1231  064E  300B               	movlw	11
  1232  064F  00F2               	movwf	??_Lcd_Cmd+1
  1233  0650  3062               	movlw	98
  1234  0651  00F1               	movwf	??_Lcd_Cmd
  1235  0652                     u237:
  1236  0652  0BF1               	decfsz	??_Lcd_Cmd,f
  1237  0653  2E52               	goto	u237
  1238  0654  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1239  0655  2E52               	goto	u237
  1240  0656  0000               	nop
  1241  0657                     l713:
  1242                           
  1243                           ;LCD8bits.c: 60:     RC1 = 0;
  1244  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0659  1087               	bcf	7,1	;volatile
  1247  065A                     l44:
  1248  065A  0008               	return
  1249  065B                     __end_of_Lcd_Cmd:
  1250                           
  1251                           	psect	text7
  1252  06A4                     __ptext7:	
  1253 ;; *************** function _Lcd_Port *****************
  1254 ;; Defined at:
  1255 ;;		line 13 in file "LCD8bits.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  a               1    wreg     unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  a               1    0[COMMON] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         1       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         1       0       0       0       0
  1273 ;;Total ram usage:        1 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_Lcd_Cmd
  1279 ;;		_Lcd_Init
  1280 ;;		_Lcd_Write_Char
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _Lcd_Port
  1286  06A4                     _Lcd_Port:
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _Lcd_Port: [wreg]
  1290                           ;Lcd_Port@a stored from wreg
  1291  06A4  00F0               	movwf	Lcd_Port@a
  1292  06A5                     l687:
  1293                           
  1294                           ;LCD8bits.c: 14:     if (a & 1)
  1295  06A5  1C70               	btfss	Lcd_Port@a,0
  1296  06A6  2EA8               	goto	u11
  1297  06A7  2EA9               	goto	u10
  1298  06A8                     u11:
  1299  06A8  2EAD               	goto	l25
  1300  06A9                     u10:
  1301  06A9                     l689:
  1302                           
  1303                           ;LCD8bits.c: 15:         RD0 = 1;
  1304  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1305  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1306  06AB  1408               	bsf	8,0	;volatile
  1307  06AC  2EB0               	goto	l26
  1308  06AD                     l25:	
  1309                           ;LCD8bits.c: 16:     else
  1310                           
  1311                           
  1312                           ;LCD8bits.c: 17:         RD0 = 0;
  1313  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1314  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1315  06AF  1008               	bcf	8,0	;volatile
  1316  06B0                     l26:
  1317                           
  1318                           ;LCD8bits.c: 19:     if (a & 2)
  1319  06B0  1CF0               	btfss	Lcd_Port@a,1
  1320  06B1  2EB3               	goto	u21
  1321  06B2  2EB4               	goto	u20
  1322  06B3                     u21:
  1323  06B3  2EB6               	goto	l27
  1324  06B4                     u20:
  1325  06B4                     l691:
  1326                           
  1327                           ;LCD8bits.c: 20:         RD1 = 1;
  1328  06B4  1488               	bsf	8,1	;volatile
  1329  06B5  2EB7               	goto	l28
  1330  06B6                     l27:	
  1331                           ;LCD8bits.c: 21:     else
  1332                           
  1333                           
  1334                           ;LCD8bits.c: 22:         RD1 = 0;
  1335  06B6  1088               	bcf	8,1	;volatile
  1336  06B7                     l28:
  1337                           
  1338                           ;LCD8bits.c: 24:     if (a & 4)
  1339  06B7  1D70               	btfss	Lcd_Port@a,2
  1340  06B8  2EBA               	goto	u31
  1341  06B9  2EBB               	goto	u30
  1342  06BA                     u31:
  1343  06BA  2EBD               	goto	l29
  1344  06BB                     u30:
  1345  06BB                     l693:
  1346                           
  1347                           ;LCD8bits.c: 25:         RD2 = 1;
  1348  06BB  1508               	bsf	8,2	;volatile
  1349  06BC  2EBE               	goto	l30
  1350  06BD                     l29:	
  1351                           ;LCD8bits.c: 26:     else
  1352                           
  1353                           
  1354                           ;LCD8bits.c: 27:         RD2 = 0;
  1355  06BD  1108               	bcf	8,2	;volatile
  1356  06BE                     l30:
  1357                           
  1358                           ;LCD8bits.c: 29:     if (a & 8)
  1359  06BE  1DF0               	btfss	Lcd_Port@a,3
  1360  06BF  2EC1               	goto	u41
  1361  06C0  2EC2               	goto	u40
  1362  06C1                     u41:
  1363  06C1  2EC4               	goto	l31
  1364  06C2                     u40:
  1365  06C2                     l695:
  1366                           
  1367                           ;LCD8bits.c: 30:         RD3 = 1;
  1368  06C2  1588               	bsf	8,3	;volatile
  1369  06C3  2EC5               	goto	l32
  1370  06C4                     l31:	
  1371                           ;LCD8bits.c: 31:     else
  1372                           
  1373                           
  1374                           ;LCD8bits.c: 32:         RD3 = 0;
  1375  06C4  1188               	bcf	8,3	;volatile
  1376  06C5                     l32:
  1377                           
  1378                           ;LCD8bits.c: 34:     if (a & 16)
  1379  06C5  1E70               	btfss	Lcd_Port@a,4
  1380  06C6  2EC8               	goto	u51
  1381  06C7  2EC9               	goto	u50
  1382  06C8                     u51:
  1383  06C8  2ECB               	goto	l33
  1384  06C9                     u50:
  1385  06C9                     l697:
  1386                           
  1387                           ;LCD8bits.c: 35:         RD4 = 1;
  1388  06C9  1608               	bsf	8,4	;volatile
  1389  06CA  2ECC               	goto	l34
  1390  06CB                     l33:	
  1391                           ;LCD8bits.c: 36:     else
  1392                           
  1393                           
  1394                           ;LCD8bits.c: 37:         RD4 = 0;
  1395  06CB  1208               	bcf	8,4	;volatile
  1396  06CC                     l34:
  1397                           
  1398                           ;LCD8bits.c: 39:     if (a & 32)
  1399  06CC  1EF0               	btfss	Lcd_Port@a,5
  1400  06CD  2ECF               	goto	u61
  1401  06CE  2ED0               	goto	u60
  1402  06CF                     u61:
  1403  06CF  2ED2               	goto	l35
  1404  06D0                     u60:
  1405  06D0                     l699:
  1406                           
  1407                           ;LCD8bits.c: 40:         RD5 = 1;
  1408  06D0  1688               	bsf	8,5	;volatile
  1409  06D1  2ED3               	goto	l36
  1410  06D2                     l35:	
  1411                           ;LCD8bits.c: 41:     else
  1412                           
  1413                           
  1414                           ;LCD8bits.c: 42:         RD5 = 0;
  1415  06D2  1288               	bcf	8,5	;volatile
  1416  06D3                     l36:
  1417                           
  1418                           ;LCD8bits.c: 44:     if (a & 64)
  1419  06D3  1F70               	btfss	Lcd_Port@a,6
  1420  06D4  2ED6               	goto	u71
  1421  06D5  2ED7               	goto	u70
  1422  06D6                     u71:
  1423  06D6  2ED9               	goto	l37
  1424  06D7                     u70:
  1425  06D7                     l701:
  1426                           
  1427                           ;LCD8bits.c: 45:         RD6 = 1;
  1428  06D7  1708               	bsf	8,6	;volatile
  1429  06D8  2EDA               	goto	l38
  1430  06D9                     l37:	
  1431                           ;LCD8bits.c: 46:     else
  1432                           
  1433                           
  1434                           ;LCD8bits.c: 47:         RD6 = 0;
  1435  06D9  1308               	bcf	8,6	;volatile
  1436  06DA                     l38:
  1437                           
  1438                           ;LCD8bits.c: 49:     if (a & 128)
  1439  06DA  1FF0               	btfss	Lcd_Port@a,7
  1440  06DB  2EDD               	goto	u81
  1441  06DC  2EDE               	goto	u80
  1442  06DD                     u81:
  1443  06DD  2EE0               	goto	l39
  1444  06DE                     u80:
  1445  06DE                     l703:
  1446                           
  1447                           ;LCD8bits.c: 50:         RD7 = 1;
  1448  06DE  1788               	bsf	8,7	;volatile
  1449  06DF  2EE1               	goto	l41
  1450  06E0                     l39:	
  1451                           ;LCD8bits.c: 51:     else
  1452                           
  1453                           
  1454                           ;LCD8bits.c: 52:         RD7 = 0;
  1455  06E0  1388               	bcf	8,7	;volatile
  1456  06E1                     l41:
  1457  06E1  0008               	return
  1458  06E2                     __end_of_Lcd_Port:
  1459  007E                     btemp	set	126	;btemp
  1460  007E                     wtemp0	set	126
  1461                           
  1462                           	psect	config
  1463                           
  1464                           ;Config register CONFIG1 @ 0x2007
  1465                           ;	Oscillator Selection bits
  1466                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1467                           ;	Watchdog Timer Enable bit
  1468                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1469                           ;	Power-up Timer Enable bit
  1470                           ;	PWRTE = OFF, PWRT disabled
  1471                           ;	RE3/MCLR pin function select bit
  1472                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1473                           ;	Code Protection bit
  1474                           ;	CP = OFF, Program memory code protection is disabled
  1475                           ;	Data Code Protection bit
  1476                           ;	CPD = OFF, Data memory code protection is disabled
  1477                           ;	Brown Out Reset Selection bits
  1478                           ;	BOREN = OFF, BOR disabled
  1479                           ;	Internal External Switchover bit
  1480                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1481                           ;	Fail-Safe Clock Monitor Enabled bit
  1482                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1483                           ;	Low Voltage Programming Enable bit
  1484                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1485                           ;	In-Circuit Debugger Mode bit
  1486                           ;	DEBUG = 0x1, unprogrammed default
  1487  2007                     	org	8199
  1488  2007  20D4               	dw	8404
  1489                           
  1490                           ;Config register CONFIG2 @ 0x2008
  1491                           ;	Brown-out Reset Selection bit
  1492                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1493                           ;	Flash Program Memory Self Write Enable bits
  1494                           ;	WRT = OFF, Write protection off
  1495  2008                     	org	8200
  1496  2008  3FFF               	dw	16383

Data Sizes:
    Strings     82
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_6(CODE[11]), STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1749
                                              8 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     423
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     135
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     801
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     255
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 29 11:21:01 2021

                        pc 0002                         l30 06BE                         l31 06C4  
                       l32 06C5                         l41 06E1                         l33 06CB  
                       l25 06AD                         l34 06CC                         l26 06B0  
                       l35 06D2                         l27 06B6                         l36 06D3  
                       l28 06B7                         l44 065A                         l37 06D9  
                       l29 06BD                         l53 067E                         l38 06DA  
                       l39 06E0                         l47 062A                         l56 0732  
                       l65 06A3                         l59 0640                         u10 06A9  
                       u11 06A8                         u20 06B4                         u21 06B3  
                       u30 06BB                         u31 06BA                         u40 06C2  
                       u41 06C1                         u50 06C9                         u51 06C8  
                       u60 06D0                         u61 06CF                         u70 06D7  
                       u71 06D6                         u80 06DE                         u81 06DD  
                       fsr 0004                        l701 06D7                        l703 06DE  
                      l711 064E                        l713 0657                        l705 0642  
                      l721 0638                        l707 0645                        l723 063D  
                      l715 062C                        l709 064B                        l725 061E  
                      l741 06E8                        l821 066D                        l717 062F  
                      l743 06F1                        l823 0673                        l815 065C  
                      l719 0635                        l831 0690                        l745 0700  
                      l825 0678                        l817 0661                        l833 0696  
                      l841 0741                        l691 06B4                        l747 0706  
                      l739 06E2                        l819 0666                        l827 0680  
                      l851 076A                        l843 0749                        l835 0733  
                      l693 06BB                        l829 0683                        l861 078B  
                      l853 076F                        l845 074F                        l837 0737  
                      l695 06C2                        l687 06A5                        l871 07B8  
                      l863 0798                        l855 0777                        l847 0757  
                      l839 073C                        l697 06C9                        l689 06A9  
                      l881 07D7                        l873 07BD                        l865 079D  
                      l857 077D                        l849 075D                        l699 06D0  
                      l883 07DD                        l875 07C5                        l867 07A5  
                      l859 0785                        l885 07E5                        l877 07CB  
                      l869 07AB                        l887 07EB                        l879 07D1  
                      _RC0 0038                        _RC1 0039                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u120 0661                        u121 0660  
                      u130 0673                        u131 0672                        u140 06A3  
                      u141 06A2                        u207 06EC                        u217 06FB  
                      u227 070A                        u237 0652                        u157 0763  
                      u167 0791                        u177 07B1                        u187 07F1  
                      u197 063A                        fsr0 0004                       STR_1 001D  
                     STR_2 0051                       STR_3 002D                       STR_4 003A  
                     STR_5 0009                       STR_6 0046          ?_Lcd_Write_String 0070  
                     _main 0733                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 065B                      ?_main 0070  
  __size_of_Lcd_Set_Cursor 0024                      _TRISC 0087                      _TRISD 0088  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0733           __end_of_Lcd_Port 06E2            __initialization 07FC  
             __end_of_main 07FC                     ??_main 0078         __size_of_Lcd_Clear 000D  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0016            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC          __end_of_Lcd_Clear 062B  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 065B                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 0733  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 067F                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 062B                    _Lcd_Cmd 0641  
          ?_Lcd_Set_Cursor 0074                    __ptext1 067F                    __ptext2 062B  
                  __ptext3 065B                    __ptext4 06E2                    __ptext5 061E  
                  __ptext6 0641                    __ptext7 06A4     __end_of_Lcd_Write_Char 0641  
     end_of_initialization 07FC                  Lcd_Port@a 0070            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0073                  _Lcd_Clear 061E  
         _Lcd_Write_String 067F        start_initialization 07FC          __size_of_Lcd_Init 0051  
        __size_of_Lcd_Port 003E                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0072  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
                __pstrings 0003                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 06E2  
                 _Lcd_Port 06A4   __end_of_Lcd_Write_String 06A4           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 0009              __size_of_main 00C9                  stringcode 0003  
       Lcd_Set_Cursor@temp 0077                   stringdir 0003                   stringtab 0003  
