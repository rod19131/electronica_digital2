

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Sep 01 22:19:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001D                     	;# 
   351  001E                     	;# 
   352  001F                     	;# 
   353  0081                     	;# 
   354  0085                     	;# 
   355  0086                     	;# 
   356  0087                     	;# 
   357  0088                     	;# 
   358  0089                     	;# 
   359  008C                     	;# 
   360  008D                     	;# 
   361  008E                     	;# 
   362  008F                     	;# 
   363  0090                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009C                     	;# 
   378  009D                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  0105                     	;# 
   382  0107                     	;# 
   383  0108                     	;# 
   384  0109                     	;# 
   385  010C                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  010F                     	;# 
   390  0185                     	;# 
   391  0187                     	;# 
   392  0188                     	;# 
   393  0189                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  000E                     	;# 
   412  000F                     	;# 
   413  0010                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0013                     	;# 
   417  0014                     	;# 
   418  0015                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0017                     	;# 
   422  0018                     	;# 
   423  0019                     	;# 
   424  001A                     	;# 
   425  001B                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001D                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  0081                     	;# 
   432  0085                     	;# 
   433  0086                     	;# 
   434  0087                     	;# 
   435  0088                     	;# 
   436  0089                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  008E                     	;# 
   440  008F                     	;# 
   441  0090                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0094                     	;# 
   448  0095                     	;# 
   449  0096                     	;# 
   450  0097                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009A                     	;# 
   454  009B                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  009F                     	;# 
   459  0105                     	;# 
   460  0107                     	;# 
   461  0108                     	;# 
   462  0109                     	;# 
   463  010C                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  010F                     	;# 
   468  0185                     	;# 
   469  0187                     	;# 
   470  0188                     	;# 
   471  0189                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  000E                     	;# 
   490  000F                     	;# 
   491  0010                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0013                     	;# 
   495  0014                     	;# 
   496  0015                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0017                     	;# 
   500  0018                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  001D                     	;# 
   507  001E                     	;# 
   508  001F                     	;# 
   509  0081                     	;# 
   510  0085                     	;# 
   511  0086                     	;# 
   512  0087                     	;# 
   513  0088                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  008F                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0095                     	;# 
   527  0096                     	;# 
   528  0097                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009A                     	;# 
   532  009B                     	;# 
   533  009C                     	;# 
   534  009D                     	;# 
   535  009E                     	;# 
   536  009F                     	;# 
   537  0105                     	;# 
   538  0107                     	;# 
   539  0108                     	;# 
   540  0109                     	;# 
   541  010C                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  010F                     	;# 
   546  0185                     	;# 
   547  0187                     	;# 
   548  0188                     	;# 
   549  0189                     	;# 
   550  018C                     	;# 
   551  018D                     	;# 
   552                           
   553                           	psect	strings
   554  1800                     __pstrings:
   555  1800                     stringtab:
   556  1800                     __stringtab:
   557                           
   558                           ;	String table - string pointers are 1 byte each
   559  1800  1BFF               	btfsc	btemp+1,7
   560  1801  280A               	ljmp	stringcode
   561  1802  1383               	bcf	3,7
   562  1803  187F               	btfsc	btemp+1,0
   563  1804  1783               	bsf	3,7
   564  1805  0800               	movf	0,w
   565  1806  0A84               	incf	4,f
   566  1807  1903               	skipnz
   567  1808  0AFF               	incf	btemp+1,f
   568  1809  0008               	return
   569  180A                     stringcode:
   570  180A                     stringdir:
   571  180A  3018               	movlw	high stringdir
   572  180B  008A               	movwf	10
   573  180C  0804               	movf	4,w
   574  180D  0A84               	incf	4,f
   575  180E  0782               	addwf	2,f
   576  180F                     __stringbase:
   577  180F  3400               	retlw	0
   578  1810                     __end_of__stringtab:
   579  1810                     __powers_:
   580  1810  3400               	retlw	0
   581  1811  3400               	retlw	0
   582  1812  3480               	retlw	128
   583  1813  343F               	retlw	63
   584  1814  3400               	retlw	0
   585  1815  3400               	retlw	0
   586  1816  3420               	retlw	32
   587  1817  3441               	retlw	65
   588  1818  3400               	retlw	0
   589  1819  3400               	retlw	0
   590  181A  34C8               	retlw	200
   591  181B  3442               	retlw	66
   592  181C  3400               	retlw	0
   593  181D  3400               	retlw	0
   594  181E  347A               	retlw	122
   595  181F  3444               	retlw	68
   596  1820  3400               	retlw	0
   597  1821  3440               	retlw	64
   598  1822  341C               	retlw	28
   599  1823  3446               	retlw	70
   600  1824  3400               	retlw	0
   601  1825  3450               	retlw	80
   602  1826  34C3               	retlw	195
   603  1827  3447               	retlw	71
   604  1828  3400               	retlw	0
   605  1829  3424               	retlw	36
   606  182A  3474               	retlw	116
   607  182B  3449               	retlw	73
   608  182C  3480               	retlw	128
   609  182D  3496               	retlw	150
   610  182E  3418               	retlw	24
   611  182F  344B               	retlw	75
   612  1830  3420               	retlw	32
   613  1831  34BC               	retlw	188
   614  1832  34BE               	retlw	190
   615  1833  344C               	retlw	76
   616  1834  3428               	retlw	40
   617  1835  346B               	retlw	107
   618  1836  346E               	retlw	110
   619  1837  344E               	retlw	78
   620  1838  34F9               	retlw	249
   621  1839  3402               	retlw	2
   622  183A  3415               	retlw	21
   623  183B  3450               	retlw	80
   624  183C  34EC               	retlw	236
   625  183D  3478               	retlw	120
   626  183E  34AD               	retlw	173
   627  183F  3460               	retlw	96
   628  1840  34CA               	retlw	202
   629  1841  34F2               	retlw	242
   630  1842  3449               	retlw	73
   631  1843  3471               	retlw	113
   632  1844                     __end_of__powers_:
   633  1844                     __npowers_:
   634  1844  3400               	retlw	0
   635  1845  3400               	retlw	0
   636  1846  3480               	retlw	128
   637  1847  343F               	retlw	63
   638  1848  34CD               	retlw	205
   639  1849  34CC               	retlw	204
   640  184A  34CC               	retlw	204
   641  184B  343D               	retlw	61
   642  184C  340A               	retlw	10
   643  184D  34D7               	retlw	215
   644  184E  3423               	retlw	35
   645  184F  343C               	retlw	60
   646  1850  346F               	retlw	111
   647  1851  3412               	retlw	18
   648  1852  3483               	retlw	131
   649  1853  343A               	retlw	58
   650  1854  3417               	retlw	23
   651  1855  34B7               	retlw	183
   652  1856  34D1               	retlw	209
   653  1857  3438               	retlw	56
   654  1858  34AC               	retlw	172
   655  1859  34C5               	retlw	197
   656  185A  3427               	retlw	39
   657  185B  3437               	retlw	55
   658  185C  34BD               	retlw	189
   659  185D  3437               	retlw	55
   660  185E  3486               	retlw	134
   661  185F  3435               	retlw	53
   662  1860  3495               	retlw	149
   663  1861  34BF               	retlw	191
   664  1862  34D6               	retlw	214
   665  1863  3433               	retlw	51
   666  1864  3477               	retlw	119
   667  1865  34CC               	retlw	204
   668  1866  342B               	retlw	43
   669  1867  3432               	retlw	50
   670  1868  345F               	retlw	95
   671  1869  3470               	retlw	112
   672  186A  3489               	retlw	137
   673  186B  3430               	retlw	48
   674  186C  34FF               	retlw	255
   675  186D  34E6               	retlw	230
   676  186E  34DB               	retlw	219
   677  186F  342E               	retlw	46
   678  1870  3408               	retlw	8
   679  1871  34E5               	retlw	229
   680  1872  343C               	retlw	60
   681  1873  341E               	retlw	30
   682  1874  3460               	retlw	96
   683  1875  3442               	retlw	66
   684  1876  34A2               	retlw	162
   685  1877  340D               	retlw	13
   686  1878                     __end_of__npowers_:
   687  1878                     _dpowers:
   688  1878  3401               	retlw	1
   689  1879  3400               	retlw	0
   690  187A  3400               	retlw	0
   691  187B  3400               	retlw	0
   692  187C  340A               	retlw	10
   693  187D  3400               	retlw	0
   694  187E  3400               	retlw	0
   695  187F  3400               	retlw	0
   696  1880  3464               	retlw	100
   697  1881  3400               	retlw	0
   698  1882  3400               	retlw	0
   699  1883  3400               	retlw	0
   700  1884  34E8               	retlw	232
   701  1885  3403               	retlw	3
   702  1886  3400               	retlw	0
   703  1887  3400               	retlw	0
   704  1888  3410               	retlw	16
   705  1889  3427               	retlw	39
   706  188A  3400               	retlw	0
   707  188B  3400               	retlw	0
   708  188C  34A0               	retlw	160
   709  188D  3486               	retlw	134
   710  188E  3401               	retlw	1
   711  188F  3400               	retlw	0
   712  1890  3440               	retlw	64
   713  1891  3442               	retlw	66
   714  1892  340F               	retlw	15
   715  1893  3400               	retlw	0
   716  1894  3480               	retlw	128
   717  1895  3496               	retlw	150
   718  1896  3498               	retlw	152
   719  1897  3400               	retlw	0
   720  1898  3400               	retlw	0
   721  1899  34E1               	retlw	225
   722  189A  34F5               	retlw	245
   723  189B  3405               	retlw	5
   724  189C  3400               	retlw	0
   725  189D  34CA               	retlw	202
   726  189E  349A               	retlw	154
   727  189F  343B               	retlw	59
   728  18A0                     __end_of_dpowers:
   729  0019                     _TXREG	set	25
   730  000D                     _PIR2bits	set	13
   731  001E                     _ADRESH	set	30
   732  001A                     _RCREG	set	26
   733  000C                     _PIR1bits	set	12
   734  001F                     _ADCON0bits	set	31
   735  000B                     _INTCONbits	set	11
   736  0018                     _RCSTAbits	set	24
   737  0008                     _PORTD	set	8
   738  0007                     _PORTC	set	7
   739  0005                     _PORTA	set	5
   740  0039                     _RC1	set	57
   741  0038                     _RC0	set	56
   742  0047                     _RD7	set	71
   743  0046                     _RD6	set	70
   744  0045                     _RD5	set	69
   745  0044                     _RD4	set	68
   746  0043                     _RD3	set	67
   747  0042                     _RD2	set	66
   748  0041                     _RD1	set	65
   749  0040                     _RD0	set	64
   750  009F                     _ADCON1bits	set	159
   751  008C                     _PIE1bits	set	140
   752  009A                     _SPBRGH	set	154
   753  0099                     _SPBRG	set	153
   754  0098                     _TXSTAbits	set	152
   755  0088                     _TRISD	set	136
   756  0087                     _TRISC	set	135
   757  0085                     _TRISA	set	133
   758  008F                     _OSCCONbits	set	143
   759  010C                     _EEDAT	set	268
   760  010D                     _EEADR	set	269
   761  018D                     _EECON2	set	397
   762  018C                     _EECON1bits	set	396
   763  0187                     _BAUDCTLbits	set	391
   764  0188                     _ANSELbits	set	392
   765  0189                     _ANSELH	set	393
   766  18A0                     STR_2:
   767  18A0  3425               	retlw	37	;'%'
   768  18A1  342E               	retlw	46	;'.'
   769  18A2  3432               	retlw	50	;'2'
   770  18A3  3466               	retlw	102	;'f'
   771  18A4  3420               	retlw	32	;' '
   772  18A5  3420               	retlw	32	;' '
   773  18A6  3425               	retlw	37	;'%'
   774  18A7  342E               	retlw	46	;'.'
   775  18A8  3432               	retlw	50	;'2'
   776  18A9  3466               	retlw	102	;'f'
   777  18AA  3420               	retlw	32	;' '
   778  18AB  3420               	retlw	32	;' '
   779  18AC  3425               	retlw	37	;'%'
   780  18AD  3464               	retlw	100	;'d'
   781  18AE  340A               	retlw	10
   782  18AF  3400               	retlw	0
   783  18B0                     STR_1:
   784  18B0  3453               	retlw	83	;'S'
   785  18B1  3431               	retlw	49	;'1'
   786  18B2  3420               	retlw	32	;' '
   787  18B3  3420               	retlw	32	;' '
   788  18B4  3453               	retlw	83	;'S'
   789  18B5  3431               	retlw	49	;'1'
   790  18B6  3420               	retlw	32	;' '
   791  18B7  3420               	retlw	32	;' '
   792  18B8  3453               	retlw	83	;'S'
   793  18B9  3433               	retlw	51	;'3'
   794  18BA  3400               	retlw	0
   795                           
   796                           	psect	cinit
   797  07EF                     start_initialization:	
   798                           ; #config settings
   799                           
   800  07EF                     __initialization:
   801                           
   802                           ; Clear objects allocated to BANK0
   803  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   804  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   805  07F1  01EE               	clrf	__pbssBANK0& (0+127)
   806  07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   807                           
   808                           ; Clear objects allocated to BANK1
   809  07F3  1383               	bcf	3,7	;select IRP bank0
   810  07F4  30CC               	movlw	low __pbssBANK1
   811  07F5  0084               	movwf	4
   812  07F6  30E7               	movlw	low (__pbssBANK1+27)
   813  07F7  160A  158A  21F2  120A  118A  	fcall	clear_ram0
   814  07FC                     end_of_initialization:	
   815                           ;End of C runtime variable initialization code
   816                           
   817  07FC                     __end_of__initialization:
   818  07FC  0183               	clrf	3
   819  07FD  120A  158A  2814   	ljmp	_main	;jump to C main() function
   820                           
   821                           	psect	bssBANK0
   822  006E                     __pbssBANK0:
   823  006E                     _pcchar:
   824  006E                     	ds	1
   825  006F                     _a:
   826  006F                     	ds	1
   827                           
   828                           	psect	bssBANK1
   829  00CC                     __pbssBANK1:
   830  00CC                     _S2:
   831  00CC                     	ds	4
   832  00D0                     _S1:
   833  00D0                     	ds	4
   834  00D4                     _pc:
   835  00D4                     	ds	1
   836  00D5                     _s2:
   837  00D5                     	ds	1
   838  00D6                     _s1:
   839  00D6                     	ds	1
   840  00D7                     _volt:
   841  00D7                     	ds	16
   842                           
   843                           	psect	clrtext
   844  19F2                     clear_ram0:	
   845                           ;	Called with FSR containing the base address, and
   846                           ;	W with the last address+1
   847                           
   848  19F2  0064               	clrwdt	;clear the watchdog before getting into this loop
   849  19F3                     clrloop0:
   850  19F3  0180               	clrf	0	;clear RAM location pointed to by FSR
   851  19F4  0A84               	incf	4,f	;increment pointer
   852  19F5  0604               	xorwf	4,w	;XOR with final address
   853  19F6  1903               	btfsc	3,2	;have we reached the end yet?
   854  19F7  3400               	retlw	0	;all done for this memory range, return
   855  19F8  0604               	xorwf	4,w	;XOR again to restore value
   856  19F9  29F3               	goto	clrloop0	;do the next byte
   857                           
   858                           	psect	cstackBANK1
   859  00A0                     __pcstackBANK1:
   860  00A0                     ?_sprintf:
   861  00A0                     sprintf@f:	
   862                           ; 2 bytes @ 0x0
   863                           
   864                           
   865                           ; 1 bytes @ 0x0
   866  00A0                     	ds	11
   867  00AB                     ??_sprintf:
   868                           
   869                           ; 1 bytes @ 0xB
   870  00AB                     	ds	5
   871  00B0                     _sprintf$1319:
   872                           
   873                           ; 4 bytes @ 0x10
   874  00B0                     	ds	4
   875  00B4                     sprintf@ap:
   876                           
   877                           ; 1 bytes @ 0x14
   878  00B4                     	ds	1
   879  00B5                     sprintf@flag:
   880                           
   881                           ; 2 bytes @ 0x15
   882  00B5                     	ds	2
   883  00B7                     sprintf@eexp:
   884                           
   885                           ; 2 bytes @ 0x17
   886  00B7                     	ds	2
   887  00B9                     sprintf@tmpval:
   888                           
   889                           ; 4 bytes @ 0x19
   890  00B9                     	ds	4
   891  00BD                     sprintf@val:
   892                           
   893                           ; 4 bytes @ 0x1D
   894  00BD                     	ds	4
   895  00C1                     sprintf@sp:
   896                           
   897                           ; 1 bytes @ 0x21
   898  00C1                     	ds	1
   899  00C2                     sprintf@fval:
   900                           
   901                           ; 4 bytes @ 0x22
   902  00C2                     	ds	4
   903  00C6                     sprintf@prec:
   904                           
   905                           ; 2 bytes @ 0x26
   906  00C6                     	ds	2
   907  00C8                     sprintf@c:
   908                           
   909                           ; 1 bytes @ 0x28
   910  00C8                     	ds	1
   911  00C9                     ??_main:
   912                           
   913                           ; 1 bytes @ 0x29
   914  00C9                     	ds	3
   915                           
   916                           	psect	cstackCOMMON
   917  0070                     __pcstackCOMMON:
   918  0070                     ?_isdigit:
   919  0070                     ?___fleq:	
   920                           ; 1 bit 
   921                           
   922  0070                     ?___flge:	
   923                           ; 1 bit 
   924                           
   925  0070                     ?_adc_c:	
   926                           ; 1 bit 
   927                           
   928  0070                     ??_adc_c:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_adc_canal:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ??_adc_canal:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_enviocadena:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ??_isdigit:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_Lcd_Port:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ??_Lcd_Port:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_Lcd_Cmd:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_Lcd_Init:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_Lcd_Write_Char:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_main:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_enviocaracter:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ??_enviocaracter:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ?__Umul8_16:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ?___wmul:	
   971                           ; 2 bytes @ 0x0
   972                           
   973  0070                     ?___awmod:	
   974                           ; 2 bytes @ 0x0
   975                           
   976  0070                     ?___lwmod:	
   977                           ; 2 bytes @ 0x0
   978                           
   979  0070                     ?__tdiv_to_l_:	
   980                           ; 2 bytes @ 0x0
   981                           
   982  0070                     ?__div_to_l_:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0070                     ?___lldiv:	
   986                           ; 4 bytes @ 0x0
   987                           
   988  0070                     ?___flneg:	
   989                           ; 4 bytes @ 0x0
   990                           
   991  0070                     ?___xxtofl:	
   992                           ; 4 bytes @ 0x0
   993                           
   994  0070                     Lcd_Port@a:	
   995                           ; 4 bytes @ 0x0
   996                           
   997  0070                     enviocaracter@a:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     __Umul8_16@multiplicand:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     _isdigit$1119:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ___wmul@multiplier:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ___awmod@divisor:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012  0070                     ___lwmod@divisor:	
  1013                           ; 2 bytes @ 0x0
  1014                           
  1015  0070                     ___lldiv@divisor:	
  1016                           ; 2 bytes @ 0x0
  1017                           
  1018  0070                     __div_to_l_@f1:	
  1019                           ; 4 bytes @ 0x0
  1020                           
  1021  0070                     ___fleq@ff1:	
  1022                           ; 4 bytes @ 0x0
  1023                           
  1024  0070                     ___flge@ff1:	
  1025                           ; 4 bytes @ 0x0
  1026                           
  1027  0070                     ___flneg@f1:	
  1028                           ; 4 bytes @ 0x0
  1029                           
  1030  0070                     __tdiv_to_l_@f1:	
  1031                           ; 4 bytes @ 0x0
  1032                           
  1033  0070                     ___xxtofl@val:	
  1034                           ; 4 bytes @ 0x0
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x0
  1038  0070                     	ds	1
  1039  0071                     ??_enviocadena:
  1040  0071                     ??_Lcd_Cmd:	
  1041                           ; 1 bytes @ 0x1
  1042                           
  1043  0071                     ??_Lcd_Write_Char:	
  1044                           ; 1 bytes @ 0x1
  1045                           
  1046  0071                     adc_canal@canal:	
  1047                           ; 1 bytes @ 0x1
  1048                           
  1049  0071                     isdigit@c:	
  1050                           ; 1 bytes @ 0x1
  1051                           
  1052                           
  1053                           ; 1 bytes @ 0x1
  1054  0071                     	ds	1
  1055  0072                     ??__Umul8_16:
  1056  0072                     Lcd_Write_Char@a:	
  1057                           ; 1 bytes @ 0x2
  1058                           
  1059  0072                     enviocadena@cadena:	
  1060                           ; 1 bytes @ 0x2
  1061                           
  1062  0072                     ___wmul@multiplicand:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065  0072                     ___awmod@dividend:	
  1066                           ; 2 bytes @ 0x2
  1067                           
  1068  0072                     ___lwmod@dividend:	
  1069                           ; 2 bytes @ 0x2
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x2
  1073  0072                     	ds	1
  1074  0073                     ?_Lcd_Write_String:
  1075  0073                     Lcd_Cmd@a:	
  1076                           ; 1 bytes @ 0x3
  1077                           
  1078  0073                     Lcd_Write_String@a:	
  1079                           ; 1 bytes @ 0x3
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x3
  1083  0073                     	ds	1
  1084  0074                     ?_Lcd_Set_Cursor:
  1085  0074                     ??_Lcd_Init:	
  1086                           ; 1 bytes @ 0x4
  1087                           
  1088  0074                     ??___wmul:	
  1089                           ; 1 bytes @ 0x4
  1090                           
  1091  0074                     ??___awmod:	
  1092                           ; 1 bytes @ 0x4
  1093                           
  1094  0074                     ??___flneg:	
  1095                           ; 1 bytes @ 0x4
  1096                           
  1097  0074                     ??___lwmod:	
  1098                           ; 1 bytes @ 0x4
  1099                           
  1100  0074                     ??___xxtofl:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103  0074                     Lcd_Set_Cursor@b:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106  0074                     ___wmul@product:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109  0074                     __Umul8_16@product:	
  1110                           ; 2 bytes @ 0x4
  1111                           
  1112  0074                     ___lldiv@dividend:	
  1113                           ; 2 bytes @ 0x4
  1114                           
  1115  0074                     __div_to_l_@f2:	
  1116                           ; 4 bytes @ 0x4
  1117                           
  1118  0074                     ___fleq@ff2:	
  1119                           ; 4 bytes @ 0x4
  1120                           
  1121  0074                     ___flge@ff2:	
  1122                           ; 4 bytes @ 0x4
  1123                           
  1124  0074                     __tdiv_to_l_@f2:	
  1125                           ; 4 bytes @ 0x4
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x4
  1129  0074                     	ds	1
  1130  0075                     ??_Lcd_Set_Cursor:
  1131  0075                     ??_Lcd_Write_String:	
  1132                           ; 1 bytes @ 0x5
  1133                           
  1134  0075                     ___awmod@counter:	
  1135                           ; 1 bytes @ 0x5
  1136                           
  1137  0075                     ___lwmod@counter:	
  1138                           ; 1 bytes @ 0x5
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x5
  1142  0075                     	ds	1
  1143  0076                     ?___lwdiv:
  1144  0076                     Lcd_Set_Cursor@a:	
  1145                           ; 2 bytes @ 0x6
  1146                           
  1147  0076                     ___awmod@sign:	
  1148                           ; 1 bytes @ 0x6
  1149                           
  1150  0076                     ___lwdiv@divisor:	
  1151                           ; 1 bytes @ 0x6
  1152                           
  1153  0076                     __Umul8_16@word_mpld:	
  1154                           ; 2 bytes @ 0x6
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0x6
  1158  0076                     	ds	1
  1159  0077                     ?___awdiv:
  1160  0077                     Lcd_Set_Cursor@temp:	
  1161                           ; 2 bytes @ 0x7
  1162                           
  1163  0077                     ___awdiv@divisor:	
  1164                           ; 1 bytes @ 0x7
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x7
  1168  0077                     	ds	1
  1169  0078                     ??__tdiv_to_l_:
  1170  0078                     ??__div_to_l_:	
  1171                           ; 1 bytes @ 0x8
  1172                           
  1173  0078                     ??___lldiv:	
  1174                           ; 1 bytes @ 0x8
  1175                           
  1176  0078                     ??___fleq:	
  1177                           ; 1 bytes @ 0x8
  1178                           
  1179  0078                     ??___flge:	
  1180                           ; 1 bytes @ 0x8
  1181                           
  1182  0078                     __Umul8_16@multiplier:	
  1183                           ; 1 bytes @ 0x8
  1184                           
  1185  0078                     ___xxtofl@sign:	
  1186                           ; 1 bytes @ 0x8
  1187                           
  1188  0078                     Lcd_Write_String@i:	
  1189                           ; 1 bytes @ 0x8
  1190                           
  1191  0078                     ___lwdiv@dividend:	
  1192                           ; 2 bytes @ 0x8
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0x8
  1196  0078                     	ds	1
  1197  0079                     ___xxtofl@exp:
  1198  0079                     ___awdiv@dividend:	
  1199                           ; 1 bytes @ 0x9
  1200                           
  1201  0079                     ___lldiv@quotient:	
  1202                           ; 2 bytes @ 0x9
  1203                           
  1204                           
  1205                           ; 4 bytes @ 0x9
  1206  0079                     	ds	1
  1207  007A                     ??___lwdiv:
  1208  007A                     ___xxtofl@arg:	
  1209                           ; 1 bytes @ 0xA
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0xA
  1213  007A                     	ds	1
  1214  007B                     ??___awdiv:
  1215  007B                     ___lwdiv@quotient:	
  1216                           ; 1 bytes @ 0xB
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0xB
  1220  007B                     	ds	2
  1221  007D                     ___lldiv@counter:
  1222  007D                     ___lwdiv@counter:	
  1223                           ; 1 bytes @ 0xD
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0xD
  1227  007D                     	ds	1
  1228  007E                     ??___flsub:
  1229                           
  1230                           	psect	cstackBANK0
  1231  0020                     __pcstackBANK0:	
  1232                           ; 1 bytes @ 0xE
  1233                           
  1234  0020                     ?___llmod:
  1235  0020                     ___awdiv@counter:	
  1236                           ; 4 bytes @ 0x0
  1237                           
  1238  0020                     __div_to_l_@quot:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0020                     __tdiv_to_l_@quot:	
  1242                           ; 4 bytes @ 0x0
  1243                           
  1244  0020                     ___llmod@divisor:	
  1245                           ; 4 bytes @ 0x0
  1246                           
  1247                           
  1248                           ; 4 bytes @ 0x0
  1249  0020                     	ds	1
  1250  0021                     ___awdiv@sign:
  1251                           
  1252                           ; 1 bytes @ 0x1
  1253  0021                     	ds	1
  1254  0022                     ___awdiv@quotient:
  1255                           
  1256                           ; 2 bytes @ 0x2
  1257  0022                     	ds	2
  1258  0024                     ?___flmul:
  1259  0024                     __div_to_l_@cntr:	
  1260                           ; 4 bytes @ 0x4
  1261                           
  1262  0024                     __tdiv_to_l_@cntr:	
  1263                           ; 1 bytes @ 0x4
  1264                           
  1265  0024                     ___llmod@dividend:	
  1266                           ; 1 bytes @ 0x4
  1267                           
  1268  0024                     ___flmul@b:	
  1269                           ; 4 bytes @ 0x4
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0x4
  1273  0024                     	ds	1
  1274  0025                     __div_to_l_@exp1:
  1275  0025                     __tdiv_to_l_@exp1:	
  1276                           ; 1 bytes @ 0x5
  1277                           
  1278                           
  1279                           ; 1 bytes @ 0x5
  1280  0025                     	ds	3
  1281  0028                     ??___llmod:
  1282  0028                     ___flmul@a:	
  1283                           ; 1 bytes @ 0x8
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x8
  1287  0028                     	ds	1
  1288  0029                     ___llmod@counter:
  1289                           
  1290                           ; 1 bytes @ 0x9
  1291  0029                     	ds	3
  1292  002C                     ??___flmul:
  1293                           
  1294                           ; 1 bytes @ 0xC
  1295  002C                     	ds	5
  1296  0031                     ___flmul@sign:
  1297                           
  1298                           ; 1 bytes @ 0x11
  1299  0031                     	ds	1
  1300  0032                     ___flmul@grs:
  1301                           
  1302                           ; 4 bytes @ 0x12
  1303  0032                     	ds	4
  1304  0036                     ___flmul@aexp:
  1305                           
  1306                           ; 1 bytes @ 0x16
  1307  0036                     	ds	1
  1308  0037                     ___flmul@bexp:
  1309                           
  1310                           ; 1 bytes @ 0x17
  1311  0037                     	ds	1
  1312  0038                     ___flmul@prod:
  1313                           
  1314                           ; 4 bytes @ 0x18
  1315  0038                     	ds	4
  1316  003C                     ___flmul@temp:
  1317                           
  1318                           ; 2 bytes @ 0x1C
  1319  003C                     	ds	2
  1320  003E                     ?_fround:
  1321  003E                     ?_scale:	
  1322                           ; 4 bytes @ 0x1E
  1323                           
  1324  003E                     ?___fldiv:	
  1325                           ; 4 bytes @ 0x1E
  1326                           
  1327  003E                     ___fldiv@a:	
  1328                           ; 4 bytes @ 0x1E
  1329                           
  1330                           
  1331                           ; 4 bytes @ 0x1E
  1332  003E                     	ds	4
  1333  0042                     ??_fround:
  1334  0042                     ??_scale:	
  1335                           ; 1 bytes @ 0x22
  1336                           
  1337  0042                     ___fldiv@b:	
  1338                           ; 1 bytes @ 0x22
  1339                           
  1340                           
  1341                           ; 4 bytes @ 0x22
  1342  0042                     	ds	4
  1343  0046                     ??___fldiv:
  1344                           
  1345                           ; 1 bytes @ 0x26
  1346  0046                     	ds	3
  1347  0049                     _fround$1317:
  1348                           
  1349                           ; 4 bytes @ 0x29
  1350  0049                     	ds	2
  1351  004B                     ___fldiv@rem:
  1352                           
  1353                           ; 4 bytes @ 0x2B
  1354  004B                     	ds	1
  1355  004C                     _scale$1318:
  1356                           
  1357                           ; 4 bytes @ 0x2C
  1358  004C                     	ds	1
  1359  004D                     _fround$1316:
  1360                           
  1361                           ; 4 bytes @ 0x2D
  1362  004D                     	ds	2
  1363  004F                     ___fldiv@sign:
  1364                           
  1365                           ; 1 bytes @ 0x2F
  1366  004F                     	ds	1
  1367  0050                     scale@scl:
  1368  0050                     ___fldiv@new_exp:	
  1369                           ; 1 bytes @ 0x30
  1370                           
  1371                           
  1372                           ; 2 bytes @ 0x30
  1373  0050                     	ds	1
  1374  0051                     ?___fltol:
  1375  0051                     fround@prec:	
  1376                           ; 4 bytes @ 0x31
  1377                           
  1378  0051                     ___fltol@f1:	
  1379                           ; 1 bytes @ 0x31
  1380                           
  1381                           
  1382                           ; 4 bytes @ 0x31
  1383  0051                     	ds	1
  1384  0052                     ?___fladd:
  1385  0052                     ___fladd@b:	
  1386                           ; 4 bytes @ 0x32
  1387                           
  1388  0052                     ___fldiv@grs:	
  1389                           ; 4 bytes @ 0x32
  1390                           
  1391                           
  1392                           ; 4 bytes @ 0x32
  1393  0052                     	ds	3
  1394  0055                     ??___fltol:
  1395                           
  1396                           ; 1 bytes @ 0x35
  1397  0055                     	ds	1
  1398  0056                     ___fldiv@bexp:
  1399  0056                     ___fladd@a:	
  1400                           ; 1 bytes @ 0x36
  1401                           
  1402                           
  1403                           ; 4 bytes @ 0x36
  1404  0056                     	ds	1
  1405  0057                     ___fldiv@aexp:
  1406                           
  1407                           ; 1 bytes @ 0x37
  1408  0057                     	ds	1
  1409  0058                     ?_mapear:
  1410                           
  1411                           ; 4 bytes @ 0x38
  1412  0058                     	ds	2
  1413  005A                     ??___fladd:
  1414  005A                     ___fltol@sign1:	
  1415                           ; 1 bytes @ 0x3A
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x3A
  1419  005A                     	ds	1
  1420  005B                     ___fltol@exp1:
  1421                           
  1422                           ; 1 bytes @ 0x3B
  1423  005B                     	ds	1
  1424  005C                     ??_mapear:
  1425                           
  1426                           ; 1 bytes @ 0x3C
  1427  005C                     	ds	4
  1428  0060                     mapear@adresval:
  1429                           
  1430                           ; 1 bytes @ 0x40
  1431  0060                     	ds	2
  1432  0062                     ___fladd@signs:
  1433                           
  1434                           ; 1 bytes @ 0x42
  1435  0062                     	ds	1
  1436  0063                     ___fladd@aexp:
  1437                           
  1438                           ; 1 bytes @ 0x43
  1439  0063                     	ds	1
  1440  0064                     ___fladd@bexp:
  1441                           
  1442                           ; 1 bytes @ 0x44
  1443  0064                     	ds	1
  1444  0065                     ___fladd@grs:
  1445                           
  1446                           ; 1 bytes @ 0x45
  1447  0065                     	ds	1
  1448  0066                     ?___flsub:
  1449  0066                     ___flsub@a:	
  1450                           ; 4 bytes @ 0x46
  1451                           
  1452                           
  1453                           ; 4 bytes @ 0x46
  1454  0066                     	ds	4
  1455  006A                     ___flsub@b:
  1456                           
  1457                           ; 4 bytes @ 0x4A
  1458  006A                     	ds	4
  1459                           
  1460                           	psect	maintext
  1461  0814                     __pmaintext:	
  1462 ;;
  1463 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1464 ;;
  1465 ;; *************** function _main *****************
  1466 ;; Defined at:
  1467 ;;		line 53 in file "lab2.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : B00/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0
  1483 ;;      Temps:          0       0       3       0       0
  1484 ;;      Totals:         0       0       3       0       0
  1485 ;;Total ram usage:        3 bytes
  1486 ;; Hardware stack levels required when called:    4
  1487 ;; This function calls:
  1488 ;;		_Lcd_Init
  1489 ;;		_Lcd_Set_Cursor
  1490 ;;		_Lcd_Write_String
  1491 ;;		_adc_c
  1492 ;;		_adc_canal
  1493 ;;		_enviocadena
  1494 ;;		_mapear
  1495 ;;		_sprintf
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _main
  1503  0814                     _main:
  1504  0814                     l3825:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1507                           
  1508                           
  1509                           ;lab2.c: 56:     OSCCONbits.IRCF = 7;
  1510  0814  3070               	movlw	112
  1511  0815  1683               	bsf	3,5	;RP0=1, select bank1
  1512  0816  1303               	bcf	3,6	;RP1=0, select bank1
  1513  0817  048F               	iorwf	15,f	;volatile
  1514  0818                     l3827:
  1515                           
  1516                           ;lab2.c: 57:     OSCCONbits.SCS = 1;
  1517  0818  140F               	bsf	15,0	;volatile
  1518  0819                     l3829:
  1519                           
  1520                           ;lab2.c: 59:     ANSELH = 0;
  1521  0819  1683               	bsf	3,5	;RP0=1, select bank3
  1522  081A  1703               	bsf	3,6	;RP1=1, select bank3
  1523  081B  0189               	clrf	9	;volatile
  1524  081C                     l3831:
  1525                           
  1526                           ;lab2.c: 60:     ANSELbits.ANS0 = 1;
  1527  081C  1408               	bsf	8,0	;volatile
  1528  081D                     l3833:
  1529                           
  1530                           ;lab2.c: 61:     ANSELbits.ANS1 = 1;
  1531  081D  1488               	bsf	8,1	;volatile
  1532  081E                     l3835:
  1533                           
  1534                           ;lab2.c: 62:     TRISA = 3;
  1535  081E  3003               	movlw	3
  1536  081F  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0820  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0821  0085               	movwf	5	;volatile
  1539  0822                     l3837:
  1540                           
  1541                           ;lab2.c: 63:     TRISC = 128;
  1542  0822  3080               	movlw	128
  1543  0823  0087               	movwf	7	;volatile
  1544  0824                     l3839:
  1545                           
  1546                           ;lab2.c: 64:     TRISD = 0;
  1547  0824  0188               	clrf	8	;volatile
  1548  0825                     l3841:
  1549                           
  1550                           ;lab2.c: 65:     PORTA = 0;
  1551  0825  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0826  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0827  0185               	clrf	5	;volatile
  1554  0828                     l3843:
  1555                           
  1556                           ;lab2.c: 66:     PORTC = 0;
  1557  0828  0187               	clrf	7	;volatile
  1558  0829                     l3845:
  1559                           
  1560                           ;lab2.c: 67:     PORTD = 0;
  1561  0829  0188               	clrf	8	;volatile
  1562  082A                     l3847:
  1563                           
  1564                           ;lab2.c: 69:     adc_c();
  1565  082A  160A  158A  2205  120A  158A  	fcall	_adc_c
  1566  082F                     l3849:
  1567                           
  1568                           ;lab2.c: 70:     Lcd_Init();
  1569  082F  160A  158A  2459  120A  158A  	fcall	_Lcd_Init
  1570  0834                     l3851:
  1571                           
  1572                           ;lab2.c: 72:     TXSTAbits.SYNC = 0;
  1573  0834  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0835  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0836  1218               	bcf	24,4	;volatile
  1576  0837                     l3853:
  1577                           
  1578                           ;lab2.c: 73:     TXSTAbits.BRGH = 1;
  1579  0837  1518               	bsf	24,2	;volatile
  1580  0838                     l3855:
  1581                           
  1582                           ;lab2.c: 75:     BAUDCTLbits.BRG16 = 1;
  1583  0838  1683               	bsf	3,5	;RP0=1, select bank3
  1584  0839  1703               	bsf	3,6	;RP1=1, select bank3
  1585  083A  1587               	bsf	7,3	;volatile
  1586  083B                     l3857:
  1587                           
  1588                           ;lab2.c: 77:     SPBRG = 207;
  1589  083B  30CF               	movlw	207
  1590  083C  1683               	bsf	3,5	;RP0=1, select bank1
  1591  083D  1303               	bcf	3,6	;RP1=0, select bank1
  1592  083E  0099               	movwf	25	;volatile
  1593  083F                     l3859:
  1594                           
  1595                           ;lab2.c: 78:     SPBRGH = 0;
  1596  083F  019A               	clrf	26	;volatile
  1597  0840                     l3861:
  1598                           
  1599                           ;lab2.c: 80:     RCSTAbits.SPEN = 1;
  1600  0840  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0841  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0842  1798               	bsf	24,7	;volatile
  1603  0843                     l3863:
  1604                           
  1605                           ;lab2.c: 81:     RCSTAbits.RX9 = 0;
  1606  0843  1318               	bcf	24,6	;volatile
  1607  0844                     l3865:
  1608                           
  1609                           ;lab2.c: 82:     RCSTAbits.CREN = 1;
  1610  0844  1618               	bsf	24,4	;volatile
  1611  0845                     l3867:
  1612                           
  1613                           ;lab2.c: 83:     TXSTAbits.TXEN = 1;
  1614  0845  1683               	bsf	3,5	;RP0=1, select bank1
  1615  0846  1303               	bcf	3,6	;RP1=0, select bank1
  1616  0847  1698               	bsf	24,5	;volatile
  1617  0848                     l3869:
  1618                           
  1619                           ;lab2.c: 86:     INTCONbits.GIE = 1;
  1620  0848  178B               	bsf	11,7	;volatile
  1621  0849                     l3871:
  1622                           
  1623                           ;lab2.c: 87:     INTCONbits.RBIE = 1;
  1624  0849  158B               	bsf	11,3	;volatile
  1625  084A                     l3873:
  1626                           
  1627                           ;lab2.c: 88:     INTCONbits.PEIE = 1;
  1628  084A  170B               	bsf	11,6	;volatile
  1629  084B                     l3875:
  1630                           
  1631                           ;lab2.c: 92:     PIE1bits.ADIE = 1;
  1632  084B  170C               	bsf	12,6	;volatile
  1633  084C                     l3877:
  1634                           
  1635                           ;lab2.c: 93:     ADCON0bits.GO = 1;
  1636  084C  1283               	bcf	3,5	;RP0=0, select bank0
  1637  084D  1303               	bcf	3,6	;RP1=0, select bank0
  1638  084E  149F               	bsf	31,1	;volatile
  1639  084F                     l3879:
  1640                           
  1641                           ;lab2.c: 95:   {if (ADCON0bits.GO == 0) {
  1642  084F  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0850  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0851  189F               	btfsc	31,1	;volatile
  1645  0852  2854               	goto	u6251
  1646  0853  2855               	goto	u6250
  1647  0854                     u6251:
  1648  0854  286B               	goto	l3889
  1649  0855                     u6250:
  1650  0855                     l3881:
  1651                           
  1652                           ;lab2.c: 96:         s2 = adc_canal(0);
  1653  0855  3000               	movlw	0
  1654  0856  160A  158A  2211  120A  158A  	fcall	_adc_canal
  1655  085B  1683               	bsf	3,5	;RP0=1, select bank1
  1656  085C  1303               	bcf	3,6	;RP1=0, select bank1
  1657  085D  00C9               	movwf	??_main^(0+128)
  1658  085E  0849               	movf	??_main^(0+128),w
  1659  085F  00D5               	movwf	_s2^(0+128)
  1660  0860                     l3883:
  1661                           
  1662                           ;lab2.c: 97:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  1663  0860  300C               	movlw	12
  1664  0861  1683               	bsf	3,5	;RP0=1, select bank1
  1665  0862  1303               	bcf	3,6	;RP1=0, select bank1
  1666  0863  00C9               	movwf	??_main^(0+128)
  1667  0864                     u6287:
  1668  0864  0BC9               	decfsz	??_main^(0+128),f
  1669  0865  2864               	goto	u6287
  1670  0866  0000               	nop
  1671  0867                     l3885:
  1672                           
  1673                           ;lab2.c: 98:         PIR1bits.ADIF = 0;
  1674  0867  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0868  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0869  130C               	bcf	12,6	;volatile
  1677  086A                     l3887:
  1678                           
  1679                           ;lab2.c: 99:         ADCON0bits.GO = 1;
  1680  086A  149F               	bsf	31,1	;volatile
  1681  086B                     l3889:
  1682                           
  1683                           ;lab2.c: 101:     Lcd_Set_Cursor(1,1);
  1684  086B  01F4               	clrf	Lcd_Set_Cursor@b
  1685  086C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1686  086D  3001               	movlw	1
  1687  086E  160A  158A  226E  120A  158A  	fcall	_Lcd_Set_Cursor
  1688  0873                     l3891:
  1689                           
  1690                           ;lab2.c: 102:     Lcd_Write_String("S1  S1  S3");
  1691  0873  30A1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1692  0874  00F3               	movwf	Lcd_Write_String@a
  1693  0875  3080               	movlw	128
  1694  0876  00F4               	movwf	Lcd_Write_String@a+1
  1695  0877  160A  158A  237A  120A  158A  	fcall	_Lcd_Write_String
  1696  087C                     l3893:
  1697                           
  1698                           ;lab2.c: 103:     S1 = mapear(s1);
  1699  087C  1683               	bsf	3,5	;RP0=1, select bank1
  1700  087D  1303               	bcf	3,6	;RP1=0, select bank1
  1701  087E  0856               	movf	_s1^(0+128),w
  1702  087F  160A  158A  240A  120A  158A  	fcall	_mapear
  1703  0884  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0885  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0886  085B               	movf	?_mapear+3,w
  1706  0887  1683               	bsf	3,5	;RP0=1, select bank1
  1707  0888  1303               	bcf	3,6	;RP1=0, select bank1
  1708  0889  00D3               	movwf	(_S1+3)^(0+128)
  1709  088A  1283               	bcf	3,5	;RP0=0, select bank0
  1710  088B  1303               	bcf	3,6	;RP1=0, select bank0
  1711  088C  085A               	movf	?_mapear+2,w
  1712  088D  1683               	bsf	3,5	;RP0=1, select bank1
  1713  088E  1303               	bcf	3,6	;RP1=0, select bank1
  1714  088F  00D2               	movwf	(_S1+2)^(0+128)
  1715  0890  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0891  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0892  0859               	movf	?_mapear+1,w
  1718  0893  1683               	bsf	3,5	;RP0=1, select bank1
  1719  0894  1303               	bcf	3,6	;RP1=0, select bank1
  1720  0895  00D1               	movwf	(_S1+1)^(0+128)
  1721  0896  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0897  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0898  0858               	movf	?_mapear,w
  1724  0899  1683               	bsf	3,5	;RP0=1, select bank1
  1725  089A  1303               	bcf	3,6	;RP1=0, select bank1
  1726  089B  00D0               	movwf	_S1^(0+128)
  1727  089C                     l3895:
  1728                           
  1729                           ;lab2.c: 104:     S2 = mapear(s2);
  1730  089C  0855               	movf	_s2^(0+128),w
  1731  089D  160A  158A  240A  120A  158A  	fcall	_mapear
  1732  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  1733  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  1734  08A4  085B               	movf	?_mapear+3,w
  1735  08A5  1683               	bsf	3,5	;RP0=1, select bank1
  1736  08A6  1303               	bcf	3,6	;RP1=0, select bank1
  1737  08A7  00CF               	movwf	(_S2+3)^(0+128)
  1738  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  1739  08A9  1303               	bcf	3,6	;RP1=0, select bank0
  1740  08AA  085A               	movf	?_mapear+2,w
  1741  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  1742  08AC  1303               	bcf	3,6	;RP1=0, select bank1
  1743  08AD  00CE               	movwf	(_S2+2)^(0+128)
  1744  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  1745  08AF  1303               	bcf	3,6	;RP1=0, select bank0
  1746  08B0  0859               	movf	?_mapear+1,w
  1747  08B1  1683               	bsf	3,5	;RP0=1, select bank1
  1748  08B2  1303               	bcf	3,6	;RP1=0, select bank1
  1749  08B3  00CD               	movwf	(_S2+1)^(0+128)
  1750  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  1751  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  1752  08B6  0858               	movf	?_mapear,w
  1753  08B7  1683               	bsf	3,5	;RP0=1, select bank1
  1754  08B8  1303               	bcf	3,6	;RP1=0, select bank1
  1755  08B9  00CC               	movwf	_S2^(0+128)
  1756  08BA                     l3897:
  1757                           
  1758                           ;lab2.c: 105:     sprintf(volt, "%.2f  %.2f  %d\n", S1, S2, pc);
  1759  08BA  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1760  08BB  00C9               	movwf	??_main^(0+128)
  1761  08BC  0849               	movf	??_main^(0+128),w
  1762  08BD  00A0               	movwf	sprintf@f^(0+128)
  1763  08BE  0853               	movf	(_S1+3)^(0+128),w
  1764  08BF  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1765  08C0  0852               	movf	(_S1+2)^(0+128),w
  1766  08C1  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1767  08C2  0851               	movf	(_S1+1)^(0+128),w
  1768  08C3  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1769  08C4  0850               	movf	_S1^(0+128),w
  1770  08C5  00A1               	movwf	(?_sprintf^(0+128)+1)
  1771  08C6  084F               	movf	(_S2+3)^(0+128),w
  1772  08C7  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1773  08C8  084E               	movf	(_S2+2)^(0+128),w
  1774  08C9  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1775  08CA  084D               	movf	(_S2+1)^(0+128),w
  1776  08CB  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1777  08CC  084C               	movf	_S2^(0+128),w
  1778  08CD  00A5               	movwf	(?_sprintf^(0+128)+5)
  1779  08CE  0854               	movf	_pc^(0+128),w
  1780  08CF  00CA               	movwf	(??_main+1)^(0+128)
  1781  08D0  01CB               	clrf	((??_main+1)^(0+128)+1)
  1782  08D1  084A               	movf	(??_main+1)^(0+128),w
  1783  08D2  00A9               	movwf	(?_sprintf^(0+128)+9)
  1784  08D3  084B               	movf	(??_main+2)^(0+128),w
  1785  08D4  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1786  08D5  30D7               	movlw	(low (_volt| 0))& (0+255)
  1787  08D6  120A  118A  204E  120A  158A  	fcall	_sprintf
  1788  08DB                     l3899:
  1789                           
  1790                           ;lab2.c: 106:     enviocadena(volt);
  1791  08DB  30D7               	movlw	(low (_volt| 0))& (0+255)
  1792  08DC  160A  158A  224F  120A  158A  	fcall	_enviocadena
  1793  08E1                     l3901:
  1794                           
  1795                           ;lab2.c: 107:     Lcd_Set_Cursor(2,1);
  1796  08E1  01F4               	clrf	Lcd_Set_Cursor@b
  1797  08E2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1798  08E3  3002               	movlw	2
  1799  08E4  160A  158A  226E  120A  158A  	fcall	_Lcd_Set_Cursor
  1800  08E9                     l3903:
  1801                           
  1802                           ;lab2.c: 108:     Lcd_Write_String(volt);
  1803  08E9  30D7               	movlw	(low (_volt| 0))& (0+255)
  1804  08EA  00F3               	movwf	Lcd_Write_String@a
  1805  08EB  3000               	movlw	0
  1806  08EC  00F4               	movwf	Lcd_Write_String@a+1
  1807  08ED  160A  158A  237A  120A  158A  	fcall	_Lcd_Write_String
  1808  08F2                     l3905:
  1809                           
  1810                           ;lab2.c: 109:     if (ADCON0bits.GO == 0) {
  1811  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1812  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1813  08F4  189F               	btfsc	31,1	;volatile
  1814  08F5  28F7               	goto	u6261
  1815  08F6  28F8               	goto	u6260
  1816  08F7                     u6261:
  1817  08F7  290E               	goto	l3915
  1818  08F8                     u6260:
  1819  08F8                     l3907:
  1820                           
  1821                           ;lab2.c: 110:         s1 = adc_canal(1);
  1822  08F8  3001               	movlw	1
  1823  08F9  160A  158A  2211  120A  158A  	fcall	_adc_canal
  1824  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1825  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  1826  0900  00C9               	movwf	??_main^(0+128)
  1827  0901  0849               	movf	??_main^(0+128),w
  1828  0902  00D6               	movwf	_s1^(0+128)
  1829  0903                     l3909:
  1830                           
  1831                           ;lab2.c: 111:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  1832  0903  300C               	movlw	12
  1833  0904  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0905  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0906  00C9               	movwf	??_main^(0+128)
  1836  0907                     u6297:
  1837  0907  0BC9               	decfsz	??_main^(0+128),f
  1838  0908  2907               	goto	u6297
  1839  0909  0000               	nop
  1840  090A                     l3911:
  1841                           
  1842                           ;lab2.c: 112:         PIR1bits.ADIF = 0;
  1843  090A  1283               	bcf	3,5	;RP0=0, select bank0
  1844  090B  1303               	bcf	3,6	;RP1=0, select bank0
  1845  090C  130C               	bcf	12,6	;volatile
  1846  090D                     l3913:
  1847                           
  1848                           ;lab2.c: 113:         ADCON0bits.GO = 1;
  1849  090D  149F               	bsf	31,1	;volatile
  1850  090E                     l3915:
  1851                           
  1852                           ;lab2.c: 115:     if (PIR1bits.RCIF == 1) {
  1853  090E  1E8C               	btfss	12,5	;volatile
  1854  090F  2911               	goto	u6271
  1855  0910  2912               	goto	u6270
  1856  0911                     u6271:
  1857  0911  292D               	goto	l3927
  1858  0912                     u6270:
  1859  0912  291B               	goto	l3925
  1860  0913                     l3919:
  1861                           
  1862                           ;lab2.c: 125:                         pc++;
  1863  0913  3001               	movlw	1
  1864  0914  00C9               	movwf	??_main^(0+128)
  1865  0915  0849               	movf	??_main^(0+128),w
  1866  0916  07D4               	addwf	_pc^(0+128),f
  1867                           
  1868                           ;lab2.c: 126:                     break;
  1869  0917  292D               	goto	l3927
  1870  0918                     l3921:
  1871                           
  1872                           ;lab2.c: 129:                         pc--;
  1873  0918  3001               	movlw	1
  1874  0919  02D4               	subwf	_pc^(0+128),f
  1875                           
  1876                           ;lab2.c: 130:                     break;
  1877  091A  292D               	goto	l3927
  1878  091B                     l3925:
  1879  091B  081A               	movf	26,w	;volatile
  1880  091C  1683               	bsf	3,5	;RP0=1, select bank1
  1881  091D  1303               	bcf	3,6	;RP1=0, select bank1
  1882  091E  00C9               	movwf	??_main^(0+128)
  1883  091F  01CA               	clrf	(??_main^(0+128)+1)
  1884                           
  1885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 1, Range of values is 0 to 0
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte            4     3 (average)
  1891                           ; direct_byte           11     8 (fixed)
  1892                           ; jumptable            260     6 (fixed)
  1893                           ;	Chosen strategy is simple_byte
  1894  0920  084A               	movf	(??_main+1)^(0+128),w
  1895  0921  3A00               	xorlw	0	; case 0
  1896  0922  1903               	skipnz
  1897  0923  2925               	goto	l3995
  1898  0924  292D               	goto	l3927
  1899  0925                     l3995:
  1900                           
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 2, Range of values is 43 to 45
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte            7     4 (average)
  1906                           ; direct_byte           20    11 (fixed)
  1907                           ; jumptable            263     9 (fixed)
  1908                           ;	Chosen strategy is simple_byte
  1909  0925  0849               	movf	??_main^(0+128),w
  1910  0926  3A2B               	xorlw	43	; case 43
  1911  0927  1903               	skipnz
  1912  0928  2913               	goto	l3919
  1913  0929  3A06               	xorlw	6	; case 45
  1914  092A  1903               	skipnz
  1915  092B  2918               	goto	l3921
  1916  092C  292D               	goto	l3927
  1917  092D                     l3927:
  1918                           
  1919                           ;lab2.c: 133:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1920  092D  3002               	movlw	2
  1921  092E  1683               	bsf	3,5	;RP0=1, select bank1
  1922  092F  1303               	bcf	3,6	;RP1=0, select bank1
  1923  0930  00CB               	movwf	(??_main^(0+128)+2)
  1924  0931  3004               	movlw	4
  1925  0932  00CA               	movwf	(??_main^(0+128)+1)
  1926  0933  30B9               	movlw	185
  1927  0934  00C9               	movwf	??_main^(0+128)
  1928  0935                     u6307:
  1929  0935  0BC9               	decfsz	??_main^(0+128),f
  1930  0936  2935               	goto	u6307
  1931  0937  0BCA               	decfsz	(??_main^(0+128)+1),f
  1932  0938  2935               	goto	u6307
  1933  0939  0BCB               	decfsz	(??_main^(0+128)+2),f
  1934  093A  2935               	goto	u6307
  1935  093B  293C               	nop2
  1936  093C  284F               	goto	l3879
  1937  093D  120A  118A  2800   	ljmp	start
  1938  0940                     __end_of_main:
  1939                           
  1940                           	psect	text1
  1941  004E                     __ptext1:	
  1942 ;; *************** function _sprintf *****************
  1943 ;; Defined at:
  1944 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  sp              1    wreg     PTR unsigned char 
  1947 ;;		 -> volt(16), 
  1948 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1949 ;;		 -> STR_2(16), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1952 ;;		 -> volt(16), 
  1953 ;;  fval            4   34[BANK1 ] PTR unsigned char 
  1954 ;;  val             4   29[BANK1 ] unsigned long 
  1955 ;;  tmpval          4   25[BANK1 ] struct .
  1956 ;;  prec            2   38[BANK1 ] int 
  1957 ;;  eexp            2   23[BANK1 ] int 
  1958 ;;  flag            2   21[BANK1 ] unsigned short 
  1959 ;;  cp              2    0        PTR const unsigned char 
  1960 ;;  len             2    0        unsigned int 
  1961 ;;  width           2    0        int 
  1962 ;;  c               1   40[BANK1 ] unsigned char 
  1963 ;;  ap              1   20[BANK1 ] PTR void [1]
  1964 ;;		 -> ?_sprintf(2), 
  1965 ;;  d               1    0        unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2    0[BANK1 ] int 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         0       0      11       0       0
  1976 ;;      Locals:         0       0      25       0       0
  1977 ;;      Temps:          0       0       5       0       0
  1978 ;;      Totals:         0       0      41       0       0
  1979 ;;Total ram usage:       41 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    3
  1982 ;; This function calls:
  1983 ;;		___awdiv
  1984 ;;		___fladd
  1985 ;;		___fleq
  1986 ;;		___flge
  1987 ;;		___flmul
  1988 ;;		___flneg
  1989 ;;		___flsub
  1990 ;;		___fltol
  1991 ;;		___lldiv
  1992 ;;		___llmod
  1993 ;;		___wmul
  1994 ;;		___xxtofl
  1995 ;;		__div_to_l_
  1996 ;;		__tdiv_to_l_
  1997 ;;		_fround
  1998 ;;		_isdigit
  1999 ;;		_scale
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _sprintf
  2007  004E                     _sprintf:
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2011                           ;sprintf@sp stored from wreg
  2012  004E  1683               	bsf	3,5	;RP0=1, select bank1
  2013  004F  1303               	bcf	3,6	;RP1=0, select bank1
  2014  0050  00C1               	movwf	sprintf@sp^(0+128)
  2015  0051                     l3571:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2018  0051  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2019  0052  00AB               	movwf	??_sprintf^(0+128)
  2020  0053  082B               	movf	??_sprintf^(0+128),w
  2021  0054  00B4               	movwf	sprintf@ap^(0+128)
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2024  0055  2FD8               	goto	l3797
  2025  0056                     l3573:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2028  0056  3025               	movlw	37
  2029  0057  0648               	xorwf	sprintf@c^(0+128),w
  2030  0058  1903               	btfsc	3,2
  2031  0059  285B               	goto	u5821
  2032  005A  285C               	goto	u5820
  2033  005B                     u5821:
  2034  005B  2868               	goto	l3579
  2035  005C                     u5820:
  2036  005C                     l3575:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2039  005C  0848               	movf	sprintf@c^(0+128),w
  2040  005D  00AB               	movwf	??_sprintf^(0+128)
  2041  005E  0841               	movf	sprintf@sp^(0+128),w
  2042  005F  0084               	movwf	4
  2043  0060  082B               	movf	??_sprintf^(0+128),w
  2044  0061  1383               	bcf	3,7	;select IRP bank0
  2045  0062  0080               	movwf	0
  2046  0063                     l3577:
  2047  0063  3001               	movlw	1
  2048  0064  00AB               	movwf	??_sprintf^(0+128)
  2049  0065  082B               	movf	??_sprintf^(0+128),w
  2050  0066  07C1               	addwf	sprintf@sp^(0+128),f
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2053  0067  2FD8               	goto	l3797
  2054  0068                     l3579:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2057  0068  01B5               	clrf	sprintf@flag^(0+128)
  2058  0069  01B6               	clrf	(sprintf@flag+1)^(0+128)
  2059  006A                     l3581:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2062  006A  0820               	movf	sprintf@f^(0+128),w
  2063  006B  0084               	movwf	4
  2064  006C  160A  158A  200A  120A  118A  	fcall	stringdir
  2065  0071  3A2E               	xorlw	46
  2066  0072  1D03               	skipz
  2067  0073  2875               	goto	u5831
  2068  0074  2876               	goto	u5830
  2069  0075                     u5831:
  2070  0075  28BB               	goto	l3597
  2071  0076                     u5830:
  2072  0076                     l3583:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2075  0076  1736               	bsf	(sprintf@flag^(0+128)+1),6
  2076  0077                     l3585:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2079  0077  3001               	movlw	1
  2080  0078  00AB               	movwf	??_sprintf^(0+128)
  2081  0079  082B               	movf	??_sprintf^(0+128),w
  2082  007A  07A0               	addwf	sprintf@f^(0+128),f
  2083  007B                     l3587:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2086  007B  01C6               	clrf	sprintf@prec^(0+128)
  2087  007C  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2090  007D  28AA               	goto	l3595
  2091  007E                     l3589:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2094  007E  300A               	movlw	10
  2095  007F  00F0               	movwf	___wmul@multiplier
  2096  0080  3000               	movlw	0
  2097  0081  00F1               	movwf	___wmul@multiplier+1
  2098  0082  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0083  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0084  0847               	movf	(sprintf@prec+1)^(0+128),w
  2101  0085  00F3               	movwf	___wmul@multiplicand+1
  2102  0086  0846               	movf	sprintf@prec^(0+128),w
  2103  0087  00F2               	movwf	___wmul@multiplicand
  2104  0088  160A  158A  22B6  120A  118A  	fcall	___wmul
  2105  008D  0871               	movf	?___wmul+1,w
  2106  008E  1683               	bsf	3,5	;RP0=1, select bank1
  2107  008F  1303               	bcf	3,6	;RP1=0, select bank1
  2108  0090  00C7               	movwf	(sprintf@prec+1)^(0+128)
  2109  0091  0870               	movf	?___wmul,w
  2110  0092  00C6               	movwf	sprintf@prec^(0+128)
  2111  0093                     l3591:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2114  0093  0820               	movf	sprintf@f^(0+128),w
  2115  0094  0084               	movwf	4
  2116  0095  160A  158A  200A  120A  118A  	fcall	stringdir
  2117  009A  3ED0               	addlw	208
  2118  009B  00AB               	movwf	??_sprintf^(0+128)
  2119  009C  30FF               	movlw	255
  2120  009D  1803               	skipnc
  2121  009E  3000               	movlw	0
  2122  009F  00AC               	movwf	(??_sprintf^(0+128)+1)
  2123  00A0  082B               	movf	??_sprintf^(0+128),w
  2124  00A1  07C6               	addwf	sprintf@prec^(0+128),f
  2125  00A2  1803               	skipnc
  2126  00A3  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  2127  00A4  082C               	movf	(??_sprintf+1)^(0+128),w
  2128  00A5  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  2129  00A6                     l3593:
  2130  00A6  3001               	movlw	1
  2131  00A7  00AB               	movwf	??_sprintf^(0+128)
  2132  00A8  082B               	movf	??_sprintf^(0+128),w
  2133  00A9  07A0               	addwf	sprintf@f^(0+128),f
  2134  00AA                     l3595:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2137  00AA  0820               	movf	sprintf@f^(0+128),w
  2138  00AB  0084               	movwf	4
  2139  00AC  160A  158A  200A  120A  118A  	fcall	stringdir
  2140  00B1  120A  158A  2002  120A  118A  	fcall	_isdigit
  2141  00B6  1803               	btfsc	3,0
  2142  00B7  28B9               	goto	u5841
  2143  00B8  28BA               	goto	u5840
  2144  00B9                     u5841:
  2145  00B9  287E               	goto	l3589
  2146  00BA                     u5840:
  2147  00BA  28C1               	goto	l3603
  2148  00BB                     l3597:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2151  00BB  01C6               	clrf	sprintf@prec^(0+128)
  2152  00BC  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2153  00BD                     l3599:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2156  00BD  1636               	bsf	(sprintf@flag^(0+128)+1),4
  2157  00BE  28C1               	goto	l3603
  2158  00BF                     l344:	
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2160                           
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2163  00BF  1536               	bsf	(sprintf@flag^(0+128)+1),2
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2166  00C0  28E3               	goto	l3605
  2167  00C1                     l3603:
  2168  00C1  3001               	movlw	1
  2169  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  2170  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  2171  00C4  07A0               	addwf	sprintf@f^(0+128),f
  2172  00C5  30FF               	movlw	-1
  2173  00C6  0720               	addwf	sprintf@f^(0+128),w
  2174  00C7  0084               	movwf	4
  2175  00C8  160A  158A  200A  120A  118A  	fcall	stringdir
  2176  00CD  00C8               	movwf	sprintf@c^(0+128)
  2177  00CE  00AB               	movwf	??_sprintf^(0+128)
  2178  00CF  01AC               	clrf	(??_sprintf^(0+128)+1)
  2179                           
  2180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2181                           ; Switch size 1, requested type "simple"
  2182                           ; Number of cases is 1, Range of values is 0 to 0
  2183                           ; switch strategies available:
  2184                           ; Name         Instructions Cycles
  2185                           ; simple_byte            4     3 (average)
  2186                           ; direct_byte           11     8 (fixed)
  2187                           ; jumptable            260     6 (fixed)
  2188                           ;	Chosen strategy is simple_byte
  2189  00D0  082C               	movf	(??_sprintf+1)^(0+128),w
  2190  00D1  3A00               	xorlw	0	; case 0
  2191  00D2  1903               	skipnz
  2192  00D3  28D5               	goto	l3997
  2193  00D4  2FD8               	goto	l3797
  2194  00D5                     l3997:
  2195                           
  2196                           ; Switch size 1, requested type "simple"
  2197                           ; Number of cases is 4, Range of values is 0 to 105
  2198                           ; switch strategies available:
  2199                           ; Name         Instructions Cycles
  2200                           ; simple_byte           13     7 (average)
  2201                           ; jumptable            260     6 (fixed)
  2202                           ;	Chosen strategy is simple_byte
  2203  00D5  082B               	movf	??_sprintf^(0+128),w
  2204  00D6  3A00               	xorlw	0	; case 0
  2205  00D7  1903               	skipnz
  2206  00D8  2FEA               	goto	l3799
  2207  00D9  3A64               	xorlw	100	; case 100
  2208  00DA  1903               	skipnz
  2209  00DB  28E3               	goto	l3605
  2210  00DC  3A02               	xorlw	2	; case 102
  2211  00DD  1903               	skipnz
  2212  00DE  28BF               	goto	l344
  2213  00DF  3A0F               	xorlw	15	; case 105
  2214  00E0  1903               	skipnz
  2215  00E1  28E3               	goto	l3605
  2216  00E2  2FD8               	goto	l3797
  2217  00E3                     l3605:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2220  00E3  3000               	movlw	0
  2221  00E4  0535               	andwf	sprintf@flag^(0+128),w
  2222  00E5  00AB               	movwf	??_sprintf^(0+128)
  2223  00E6  3007               	movlw	7
  2224  00E7  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2225  00E8  00AC               	movwf	(??_sprintf+1)^(0+128)
  2226  00E9  082B               	movf	??_sprintf^(0+128),w
  2227  00EA  042C               	iorwf	(??_sprintf^(0+128)+1),w
  2228  00EB  1903               	btfsc	3,2
  2229  00EC  28EE               	goto	u5851
  2230  00ED  28EF               	goto	u5850
  2231  00EE                     u5851:
  2232  00EE  2EB0               	goto	l3747
  2233  00EF                     u5850:
  2234  00EF                     l3607:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2237  00EF  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  2238  00F0  28F2               	goto	u5861
  2239  00F1  28F3               	goto	u5860
  2240  00F2                     u5861:
  2241  00F2  28F7               	goto	l3611
  2242  00F3                     u5860:
  2243  00F3                     l3609:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2246  00F3  3006               	movlw	6
  2247  00F4  00C6               	movwf	sprintf@prec^(0+128)
  2248  00F5  3000               	movlw	0
  2249  00F6  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2250  00F7                     l3611:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2253  00F7  0834               	movf	sprintf@ap^(0+128),w
  2254  00F8  0084               	movwf	4
  2255  00F9  1383               	bcf	3,7	;select IRP bank0
  2256  00FA  0800               	movf	0,w
  2257  00FB  00C2               	movwf	sprintf@fval^(0+128)
  2258  00FC  0A84               	incf	4,f
  2259  00FD  0800               	movf	0,w
  2260  00FE  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2261  00FF  0A84               	incf	4,f
  2262  0100  0800               	movf	0,w
  2263  0101  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2264  0102  0A84               	incf	4,f
  2265  0103  0800               	movf	0,w
  2266  0104  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2267  0105                     l3613:
  2268  0105  3004               	movlw	4
  2269  0106  00AB               	movwf	??_sprintf^(0+128)
  2270  0107  082B               	movf	??_sprintf^(0+128),w
  2271  0108  07B4               	addwf	sprintf@ap^(0+128),f
  2272  0109                     l3615:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2275  0109  0845               	movf	(sprintf@fval+3)^(0+128),w
  2276  010A  00F3               	movwf	___flge@ff1+3
  2277  010B  0844               	movf	(sprintf@fval+2)^(0+128),w
  2278  010C  00F2               	movwf	___flge@ff1+2
  2279  010D  0843               	movf	(sprintf@fval+1)^(0+128),w
  2280  010E  00F1               	movwf	___flge@ff1+1
  2281  010F  0842               	movf	sprintf@fval^(0+128),w
  2282  0110  00F0               	movwf	___flge@ff1
  2283  0111  3000               	movlw	0
  2284  0112  00F7               	movwf	___flge@ff2+3
  2285  0113  3000               	movlw	0
  2286  0114  00F6               	movwf	___flge@ff2+2
  2287  0115  3000               	movlw	0
  2288  0116  00F5               	movwf	___flge@ff2+1
  2289  0117  3000               	movlw	0
  2290  0118  00F4               	movwf	___flge@ff2
  2291  0119  160A  158A  26A4  120A  118A  	fcall	___flge
  2292  011E  1803               	btfsc	3,0
  2293  011F  2921               	goto	u5871
  2294  0120  2922               	goto	u5870
  2295  0121                     u5871:
  2296  0121  293F               	goto	l3621
  2297  0122                     u5870:
  2298  0122                     l3617:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2301  0122  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0123  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0124  0845               	movf	(sprintf@fval+3)^(0+128),w
  2304  0125  00F3               	movwf	___flneg@f1+3
  2305  0126  0844               	movf	(sprintf@fval+2)^(0+128),w
  2306  0127  00F2               	movwf	___flneg@f1+2
  2307  0128  0843               	movf	(sprintf@fval+1)^(0+128),w
  2308  0129  00F1               	movwf	___flneg@f1+1
  2309  012A  0842               	movf	sprintf@fval^(0+128),w
  2310  012B  00F0               	movwf	___flneg@f1
  2311  012C  160A  158A  21FA  120A  118A  	fcall	___flneg
  2312  0131  0873               	movf	?___flneg+3,w
  2313  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2315  0134  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2316  0135  0872               	movf	?___flneg+2,w
  2317  0136  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2318  0137  0871               	movf	?___flneg+1,w
  2319  0138  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2320  0139  0870               	movf	?___flneg,w
  2321  013A  00C2               	movwf	sprintf@fval^(0+128)
  2322  013B                     l3619:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2325  013B  3003               	movlw	3
  2326  013C  04B5               	iorwf	sprintf@flag^(0+128),f
  2327  013D  3000               	movlw	0
  2328  013E  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  2329  013F                     l3621:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2332  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0141  01B7               	clrf	sprintf@eexp^(0+128)
  2335  0142  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2336  0143                     l3623:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2339  0143  0845               	movf	(sprintf@fval+3)^(0+128),w
  2340  0144  00F3               	movwf	___fleq@ff1+3
  2341  0145  0844               	movf	(sprintf@fval+2)^(0+128),w
  2342  0146  00F2               	movwf	___fleq@ff1+2
  2343  0147  0843               	movf	(sprintf@fval+1)^(0+128),w
  2344  0148  00F1               	movwf	___fleq@ff1+1
  2345  0149  0842               	movf	sprintf@fval^(0+128),w
  2346  014A  00F0               	movwf	___fleq@ff1
  2347  014B  3000               	movlw	0
  2348  014C  00F7               	movwf	___fleq@ff2+3
  2349  014D  3000               	movlw	0
  2350  014E  00F6               	movwf	___fleq@ff2+2
  2351  014F  3000               	movlw	0
  2352  0150  00F5               	movwf	___fleq@ff2+1
  2353  0151  3000               	movlw	0
  2354  0152  00F4               	movwf	___fleq@ff2
  2355  0153  160A  158A  23BC  120A  118A  	fcall	___fleq
  2356  0158  1803               	btfsc	3,0
  2357  0159  295B               	goto	u5881
  2358  015A  295C               	goto	u5880
  2359  015B                     u5881:
  2360  015B  2A4C               	goto	l3649
  2361  015C                     u5880:
  2362  015C                     l3625:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2365  015C  1003               	clrc
  2366  015D  1683               	bsf	3,5	;RP0=1, select bank1
  2367  015E  1303               	bcf	3,6	;RP1=0, select bank1
  2368  015F  0D44               	rlf	(sprintf@fval+2)^(0+128),w
  2369  0160  0D45               	rlf	(sprintf@fval+3)^(0+128),w
  2370  0161  3E82               	addlw	130
  2371  0162  00B7               	movwf	sprintf@eexp^(0+128)
  2372  0163  30FF               	movlw	255
  2373  0164  1803               	skipnc
  2374  0165  3000               	movlw	0
  2375  0166  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2376  0167                     l3627:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2379  0167  30FF               	movlw	255
  2380  0168  07B7               	addwf	sprintf@eexp^(0+128),f
  2381  0169  1803               	skipnc
  2382  016A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2383  016B  30FF               	movlw	255
  2384  016C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2385  016D                     l3629:
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2388  016D  3003               	movlw	3
  2389  016E  00F0               	movwf	___wmul@multiplier
  2390  016F  3000               	movlw	0
  2391  0170  00F1               	movwf	___wmul@multiplier+1
  2392  0171  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2393  0172  00F3               	movwf	___wmul@multiplicand+1
  2394  0173  0837               	movf	sprintf@eexp^(0+128),w
  2395  0174  00F2               	movwf	___wmul@multiplicand
  2396  0175  160A  158A  22B6  120A  118A  	fcall	___wmul
  2397  017A  0871               	movf	?___wmul+1,w
  2398  017B  1683               	bsf	3,5	;RP0=1, select bank1
  2399  017C  1303               	bcf	3,6	;RP1=0, select bank1
  2400  017D  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2401  017E  0870               	movf	?___wmul,w
  2402  017F  00B7               	movwf	sprintf@eexp^(0+128)
  2403  0180                     l3631:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2406  0180  300A               	movlw	10
  2407  0181  00F7               	movwf	___awdiv@divisor
  2408  0182  3000               	movlw	0
  2409  0183  00F8               	movwf	___awdiv@divisor+1
  2410  0184  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2411  0185  00FA               	movwf	___awdiv@dividend+1
  2412  0186  0837               	movf	sprintf@eexp^(0+128),w
  2413  0187  00F9               	movwf	___awdiv@dividend
  2414  0188  160A  158A  25BF  120A  118A  	fcall	___awdiv
  2415  018D  0878               	movf	?___awdiv+1,w
  2416  018E  1683               	bsf	3,5	;RP0=1, select bank1
  2417  018F  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0190  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2419  0191  0877               	movf	?___awdiv,w
  2420  0192  00B7               	movwf	sprintf@eexp^(0+128)
  2421  0193                     l3633:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2424  0193  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2425  0194  2996               	goto	u5891
  2426  0195  2997               	goto	u5890
  2427  0196                     u5891:
  2428  0196  299D               	goto	l3637
  2429  0197                     u5890:
  2430  0197                     l3635:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2433  0197  30FF               	movlw	255
  2434  0198  07B7               	addwf	sprintf@eexp^(0+128),f
  2435  0199  1803               	skipnc
  2436  019A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2437  019B  30FF               	movlw	255
  2438  019C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2439  019D                     l3637:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2442  019D  0337               	decf	sprintf@eexp^(0+128),w
  2443  019E  3AFF               	xorlw	255
  2444  019F  120A  158A  2140  120A  118A  	fcall	_scale
  2445  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2446  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2447  01A6  0841               	movf	?_scale+3,w
  2448  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2449  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2450  01A9  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2451  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2452  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2453  01AC  0840               	movf	?_scale+2,w
  2454  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2455  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2456  01AF  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2457  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2458  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2459  01B2  083F               	movf	?_scale+1,w
  2460  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2461  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2462  01B5  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2463  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2464  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2465  01B8  083E               	movf	?_scale,w
  2466  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  2467  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  2468  01BB  00B9               	movwf	sprintf@tmpval^(0+128)
  2469  01BC                     l3639:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2472  01BC  0845               	movf	(sprintf@fval+3)^(0+128),w
  2473  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2474  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2475  01BF  00A7               	movwf	___flmul@b+3
  2476  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2477  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2478  01C2  0844               	movf	(sprintf@fval+2)^(0+128),w
  2479  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2480  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2481  01C5  00A6               	movwf	___flmul@b+2
  2482  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2483  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2484  01C8  0843               	movf	(sprintf@fval+1)^(0+128),w
  2485  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2486  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2487  01CB  00A5               	movwf	___flmul@b+1
  2488  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2489  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2490  01CE  0842               	movf	sprintf@fval^(0+128),w
  2491  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2492  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2493  01D1  00A4               	movwf	___flmul@b
  2494  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2495  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2496  01D4  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2497  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2498  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2499  01D7  00AB               	movwf	___flmul@a+3
  2500  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2501  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2502  01DA  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2503  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2504  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2505  01DD  00AA               	movwf	___flmul@a+2
  2506  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2507  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2508  01E0  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2509  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2510  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2511  01E3  00A9               	movwf	___flmul@a+1
  2512  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  2513  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  2514  01E6  0839               	movf	sprintf@tmpval^(0+128),w
  2515  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2516  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2517  01E9  00A8               	movwf	___flmul@a
  2518  01EA  120A  158A  249F  120A  118A  	fcall	___flmul
  2519  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2520  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2521  01F1  0827               	movf	?___flmul+3,w
  2522  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2523  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2524  01F4  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2525  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2526  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2527  01F7  0826               	movf	?___flmul+2,w
  2528  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2529  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2530  01FA  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2531  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2532  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2533  01FD  0825               	movf	?___flmul+1,w
  2534  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2535  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2536  0200  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2537  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0203  0824               	movf	?___flmul,w
  2540  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2541  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2542  0206  00B9               	movwf	sprintf@tmpval^(0+128)
  2543  0207                     l3641:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2546  0207  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2547  0208  00F3               	movwf	___flge@ff1+3
  2548  0209  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2549  020A  00F2               	movwf	___flge@ff1+2
  2550  020B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2551  020C  00F1               	movwf	___flge@ff1+1
  2552  020D  0839               	movf	sprintf@tmpval^(0+128),w
  2553  020E  00F0               	movwf	___flge@ff1
  2554  020F  303F               	movlw	63
  2555  0210  00F7               	movwf	___flge@ff2+3
  2556  0211  3080               	movlw	128
  2557  0212  00F6               	movwf	___flge@ff2+2
  2558  0213  3000               	movlw	0
  2559  0214  00F5               	movwf	___flge@ff2+1
  2560  0215  3000               	movlw	0
  2561  0216  00F4               	movwf	___flge@ff2
  2562  0217  160A  158A  26A4  120A  118A  	fcall	___flge
  2563  021C  1803               	btfsc	3,0
  2564  021D  2A1F               	goto	u5901
  2565  021E  2A20               	goto	u5900
  2566  021F                     u5901:
  2567  021F  2A29               	goto	l3645
  2568  0220                     u5900:
  2569  0220                     l3643:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2572  0220  30FF               	movlw	255
  2573  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0222  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0223  07B7               	addwf	sprintf@eexp^(0+128),f
  2576  0224  1803               	skipnc
  2577  0225  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2578  0226  30FF               	movlw	255
  2579  0227  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2580  0228  2A4C               	goto	l3649
  2581  0229                     l3645:
  2582  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2583  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2584  022B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2585  022C  00F3               	movwf	___flge@ff1+3
  2586  022D  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2587  022E  00F2               	movwf	___flge@ff1+2
  2588  022F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2589  0230  00F1               	movwf	___flge@ff1+1
  2590  0231  0839               	movf	sprintf@tmpval^(0+128),w
  2591  0232  00F0               	movwf	___flge@ff1
  2592  0233  3041               	movlw	65
  2593  0234  00F7               	movwf	___flge@ff2+3
  2594  0235  3020               	movlw	32
  2595  0236  00F6               	movwf	___flge@ff2+2
  2596  0237  3000               	movlw	0
  2597  0238  00F5               	movwf	___flge@ff2+1
  2598  0239  3000               	movlw	0
  2599  023A  00F4               	movwf	___flge@ff2
  2600  023B  160A  158A  26A4  120A  118A  	fcall	___flge
  2601  0240  1C03               	btfss	3,0
  2602  0241  2A43               	goto	u5911
  2603  0242  2A44               	goto	u5910
  2604  0243                     u5911:
  2605  0243  2A4C               	goto	l3649
  2606  0244                     u5910:
  2607  0244                     l3647:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2610  0244  3001               	movlw	1
  2611  0245  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0246  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0247  07B7               	addwf	sprintf@eexp^(0+128),f
  2614  0248  1803               	skipnc
  2615  0249  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2616  024A  3000               	movlw	0
  2617  024B  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2618  024C                     l3649:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2621  024C  1683               	bsf	3,5	;RP0=1, select bank1
  2622  024D  1303               	bcf	3,6	;RP1=0, select bank1
  2623  024E  0847               	movf	(sprintf@prec+1)^(0+128),w
  2624  024F  3A80               	xorlw	128
  2625  0250  00FF               	movwf	btemp+1
  2626  0251  3080               	movlw	128
  2627  0252  027F               	subwf	btemp+1,w
  2628  0253  1D03               	skipz
  2629  0254  2A57               	goto	u5925
  2630  0255  300D               	movlw	13
  2631  0256  0246               	subwf	sprintf@prec^(0+128),w
  2632  0257                     u5925:
  2633  0257  1803               	skipnc
  2634  0258  2A5A               	goto	u5921
  2635  0259  2A5B               	goto	u5920
  2636  025A                     u5921:
  2637  025A  2AA2               	goto	l3653
  2638  025B                     u5920:
  2639  025B                     l3651:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2642  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2643  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2644  025D  0846               	movf	sprintf@prec^(0+128),w
  2645  025E  160A  118A  236D  120A  118A  	fcall	_fround
  2646  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0265  0841               	movf	?_fround+3,w
  2649  0266  00D5               	movwf	___fladd@b+3
  2650  0267  0840               	movf	?_fround+2,w
  2651  0268  00D4               	movwf	___fladd@b+2
  2652  0269  083F               	movf	?_fround+1,w
  2653  026A  00D3               	movwf	___fladd@b+1
  2654  026B  083E               	movf	?_fround,w
  2655  026C  00D2               	movwf	___fladd@b
  2656  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2657  026E  1303               	bcf	3,6	;RP1=0, select bank1
  2658  026F  0845               	movf	(sprintf@fval+3)^(0+128),w
  2659  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2661  0272  00D9               	movwf	___fladd@a+3
  2662  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0275  0844               	movf	(sprintf@fval+2)^(0+128),w
  2665  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2667  0278  00D8               	movwf	___fladd@a+2
  2668  0279  1683               	bsf	3,5	;RP0=1, select bank1
  2669  027A  1303               	bcf	3,6	;RP1=0, select bank1
  2670  027B  0843               	movf	(sprintf@fval+1)^(0+128),w
  2671  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2672  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2673  027E  00D7               	movwf	___fladd@a+1
  2674  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2675  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2676  0281  0842               	movf	sprintf@fval^(0+128),w
  2677  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0284  00D6               	movwf	___fladd@a
  2680  0285  160A  118A  2578  120A  118A  	fcall	___fladd
  2681  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2682  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2683  028C  0855               	movf	?___fladd+3,w
  2684  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2685  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2686  028F  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2687  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0292  0854               	movf	?___fladd+2,w
  2690  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0294  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0295  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2693  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0298  0853               	movf	?___fladd+1,w
  2696  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2697  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2698  029B  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2699  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2700  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2701  029E  0852               	movf	?___fladd,w
  2702  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2703  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2704  02A1  00C2               	movwf	sprintf@fval^(0+128)
  2705  02A2                     l3653:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2708  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2709  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  2710  02A4  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2711  02A5  3A80               	xorlw	128
  2712  02A6  00FF               	movwf	btemp+1
  2713  02A7  3080               	movlw	128
  2714  02A8  027F               	subwf	btemp+1,w
  2715  02A9  1D03               	skipz
  2716  02AA  2AAD               	goto	u5935
  2717  02AB  300A               	movlw	10
  2718  02AC  0237               	subwf	sprintf@eexp^(0+128),w
  2719  02AD                     u5935:
  2720  02AD  1803               	skipnc
  2721  02AE  2AB0               	goto	u5931
  2722  02AF  2AB1               	goto	u5930
  2723  02B0                     u5931:
  2724  02B0  2B02               	goto	l3661
  2725  02B1                     u5930:
  2726  02B1                     l3655:
  2727  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2728  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2729  02B3  0845               	movf	(sprintf@fval+3)^(0+128),w
  2730  02B4  00F3               	movwf	___fleq@ff1+3
  2731  02B5  0844               	movf	(sprintf@fval+2)^(0+128),w
  2732  02B6  00F2               	movwf	___fleq@ff1+2
  2733  02B7  0843               	movf	(sprintf@fval+1)^(0+128),w
  2734  02B8  00F1               	movwf	___fleq@ff1+1
  2735  02B9  0842               	movf	sprintf@fval^(0+128),w
  2736  02BA  00F0               	movwf	___fleq@ff1
  2737  02BB  3000               	movlw	0
  2738  02BC  00F7               	movwf	___fleq@ff2+3
  2739  02BD  3000               	movlw	0
  2740  02BE  00F6               	movwf	___fleq@ff2+2
  2741  02BF  3000               	movlw	0
  2742  02C0  00F5               	movwf	___fleq@ff2+1
  2743  02C1  3000               	movlw	0
  2744  02C2  00F4               	movwf	___fleq@ff2
  2745  02C3  160A  158A  23BC  120A  118A  	fcall	___fleq
  2746  02C8  1803               	btfsc	3,0
  2747  02C9  2ACB               	goto	u5941
  2748  02CA  2ACC               	goto	u5940
  2749  02CB                     u5941:
  2750  02CB  2B74               	goto	l3675
  2751  02CC                     u5940:
  2752  02CC                     l3657:
  2753  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2754  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2755  02CE  0845               	movf	(sprintf@fval+3)^(0+128),w
  2756  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2757  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2758  02D1  00D4               	movwf	___fltol@f1+3
  2759  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2760  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2761  02D4  0844               	movf	(sprintf@fval+2)^(0+128),w
  2762  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2763  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2764  02D7  00D3               	movwf	___fltol@f1+2
  2765  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2766  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2767  02DA  0843               	movf	(sprintf@fval+1)^(0+128),w
  2768  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2769  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2770  02DD  00D2               	movwf	___fltol@f1+1
  2771  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2772  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2773  02E0  0842               	movf	sprintf@fval^(0+128),w
  2774  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2775  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2776  02E3  00D1               	movwf	___fltol@f1
  2777  02E4  160A  158A  2628  120A  118A  	fcall	___fltol
  2778  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2779  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2780  02EB  0854               	movf	?___fltol+3,w
  2781  02EC  0453               	iorwf	?___fltol+2,w
  2782  02ED  0452               	iorwf	?___fltol+1,w
  2783  02EE  0451               	iorwf	?___fltol,w
  2784  02EF  1D03               	skipz
  2785  02F0  2AF2               	goto	u5951
  2786  02F1  2AF3               	goto	u5950
  2787  02F2                     u5951:
  2788  02F2  2B74               	goto	l3675
  2789  02F3                     u5950:
  2790  02F3                     l3659:
  2791  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2792  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2793  02F5  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2794  02F6  3A80               	xorlw	128
  2795  02F7  00FF               	movwf	btemp+1
  2796  02F8  3080               	movlw	128
  2797  02F9  027F               	subwf	btemp+1,w
  2798  02FA  1D03               	skipz
  2799  02FB  2AFE               	goto	u5965
  2800  02FC  3002               	movlw	2
  2801  02FD  0237               	subwf	sprintf@eexp^(0+128),w
  2802  02FE                     u5965:
  2803  02FE  1C03               	skipc
  2804  02FF  2B01               	goto	u5961
  2805  0300  2B02               	goto	u5960
  2806  0301                     u5961:
  2807  0301  2B74               	goto	l3675
  2808  0302                     u5960:
  2809  0302                     l3661:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2812  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2813  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2814  0304  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2815  0305  00F3               	movwf	___flge@ff1+3
  2816  0306  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2817  0307  00F2               	movwf	___flge@ff1+2
  2818  0308  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2819  0309  00F1               	movwf	___flge@ff1+1
  2820  030A  0839               	movf	sprintf@tmpval^(0+128),w
  2821  030B  00F0               	movwf	___flge@ff1
  2822  030C  3040               	movlw	64
  2823  030D  00F7               	movwf	___flge@ff2+3
  2824  030E  3089               	movlw	137
  2825  030F  00F6               	movwf	___flge@ff2+2
  2826  0310  3070               	movlw	112
  2827  0311  00F5               	movwf	___flge@ff2+1
  2828  0312  305F               	movlw	95
  2829  0313  00F4               	movwf	___flge@ff2
  2830  0314  160A  158A  26A4  120A  118A  	fcall	___flge
  2831  0319  1803               	btfsc	3,0
  2832  031A  2B1C               	goto	u5971
  2833  031B  2B1D               	goto	u5970
  2834  031C                     u5971:
  2835  031C  2B26               	goto	l3665
  2836  031D                     u5970:
  2837  031D                     l3663:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2840  031D  30F7               	movlw	247
  2841  031E  1683               	bsf	3,5	;RP0=1, select bank1
  2842  031F  1303               	bcf	3,6	;RP1=0, select bank1
  2843  0320  07B7               	addwf	sprintf@eexp^(0+128),f
  2844  0321  1803               	skipnc
  2845  0322  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2846  0323  30FF               	movlw	255
  2847  0324  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2850  0325  2B2E               	goto	l3667
  2851  0326                     l3665:
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2854  0326  30F8               	movlw	248
  2855  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2856  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2857  0329  07B7               	addwf	sprintf@eexp^(0+128),f
  2858  032A  1803               	skipnc
  2859  032B  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2860  032C  30FF               	movlw	255
  2861  032D  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2862  032E                     l3667:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2865  032E  0837               	movf	sprintf@eexp^(0+128),w
  2866  032F  120A  158A  2140  120A  118A  	fcall	_scale
  2867  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0336  0841               	movf	?_scale+3,w
  2870  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2871  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2872  0339  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2873  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2874  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2875  033C  0840               	movf	?_scale+2,w
  2876  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2877  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2878  033F  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2879  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0342  083F               	movf	?_scale+1,w
  2882  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2883  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2884  0345  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2885  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0348  083E               	movf	?_scale,w
  2888  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2889  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2890  034B  00B9               	movwf	sprintf@tmpval^(0+128)
  2891  034C                     l3669:
  2892  034C  0845               	movf	(sprintf@fval+3)^(0+128),w
  2893  034D  00F3               	movwf	__div_to_l_@f1+3
  2894  034E  0844               	movf	(sprintf@fval+2)^(0+128),w
  2895  034F  00F2               	movwf	__div_to_l_@f1+2
  2896  0350  0843               	movf	(sprintf@fval+1)^(0+128),w
  2897  0351  00F1               	movwf	__div_to_l_@f1+1
  2898  0352  0842               	movf	sprintf@fval^(0+128),w
  2899  0353  00F0               	movwf	__div_to_l_@f1
  2900  0354  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2901  0355  00F7               	movwf	__div_to_l_@f2+3
  2902  0356  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2903  0357  00F6               	movwf	__div_to_l_@f2+2
  2904  0358  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2905  0359  00F5               	movwf	__div_to_l_@f2+1
  2906  035A  0839               	movf	sprintf@tmpval^(0+128),w
  2907  035B  00F4               	movwf	__div_to_l_@f2
  2908  035C  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  2909  0361  0873               	movf	?__div_to_l_+3,w
  2910  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2911  0363  1303               	bcf	3,6	;RP1=0, select bank1
  2912  0364  00C0               	movwf	(sprintf@val+3)^(0+128)
  2913  0365  0872               	movf	?__div_to_l_+2,w
  2914  0366  00BF               	movwf	(sprintf@val+2)^(0+128)
  2915  0367  0871               	movf	?__div_to_l_+1,w
  2916  0368  00BE               	movwf	(sprintf@val+1)^(0+128)
  2917  0369  0870               	movf	?__div_to_l_,w
  2918  036A  00BD               	movwf	sprintf@val^(0+128)
  2919  036B                     l3673:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2922  036B  3000               	movlw	0
  2923  036C  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2924  036D  3000               	movlw	0
  2925  036E  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2926  036F  3000               	movlw	0
  2927  0370  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2928  0371  3000               	movlw	0
  2929  0372  00C2               	movwf	sprintf@fval^(0+128)
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2932  0373  2BF8               	goto	l3681
  2933  0374                     l3675:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2936  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0375  1303               	bcf	3,6	;RP1=0, select bank1
  2938  0376  0845               	movf	(sprintf@fval+3)^(0+128),w
  2939  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0379  00D4               	movwf	___fltol@f1+3
  2942  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2943  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2944  037C  0844               	movf	(sprintf@fval+2)^(0+128),w
  2945  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2946  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2947  037F  00D3               	movwf	___fltol@f1+2
  2948  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2950  0382  0843               	movf	(sprintf@fval+1)^(0+128),w
  2951  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0385  00D2               	movwf	___fltol@f1+1
  2954  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2956  0388  0842               	movf	sprintf@fval^(0+128),w
  2957  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2958  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2959  038B  00D1               	movwf	___fltol@f1
  2960  038C  160A  158A  2628  120A  118A  	fcall	___fltol
  2961  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0393  0854               	movf	?___fltol+3,w
  2964  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2965  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2966  0396  00C0               	movwf	(sprintf@val+3)^(0+128)
  2967  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0399  0853               	movf	?___fltol+2,w
  2970  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2971  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2972  039C  00BF               	movwf	(sprintf@val+2)^(0+128)
  2973  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2974  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2975  039F  0852               	movf	?___fltol+1,w
  2976  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2977  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2978  03A2  00BE               	movwf	(sprintf@val+1)^(0+128)
  2979  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2980  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2981  03A5  0851               	movf	?___fltol,w
  2982  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2983  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2984  03A8  00BD               	movwf	sprintf@val^(0+128)
  2985  03A9                     l3677:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2988  03A9  0840               	movf	(sprintf@val+3)^(0+128),w
  2989  03AA  00F3               	movwf	___xxtofl@val+3
  2990  03AB  083F               	movf	(sprintf@val+2)^(0+128),w
  2991  03AC  00F2               	movwf	___xxtofl@val+2
  2992  03AD  083E               	movf	(sprintf@val+1)^(0+128),w
  2993  03AE  00F1               	movwf	___xxtofl@val+1
  2994  03AF  083D               	movf	sprintf@val^(0+128),w
  2995  03B0  00F0               	movwf	___xxtofl@val
  2996  03B1  3000               	movlw	0
  2997  03B2  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2998  03B7  0873               	movf	?___xxtofl+3,w
  2999  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3000  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3001  03BA  00E9               	movwf	___flsub@a+3
  3002  03BB  0872               	movf	?___xxtofl+2,w
  3003  03BC  00E8               	movwf	___flsub@a+2
  3004  03BD  0871               	movf	?___xxtofl+1,w
  3005  03BE  00E7               	movwf	___flsub@a+1
  3006  03BF  0870               	movf	?___xxtofl,w
  3007  03C0  00E6               	movwf	___flsub@a
  3008  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  3009  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  3010  03C3  0845               	movf	(sprintf@fval+3)^(0+128),w
  3011  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3012  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3013  03C6  00ED               	movwf	___flsub@b+3
  3014  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  3015  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  3016  03C9  0844               	movf	(sprintf@fval+2)^(0+128),w
  3017  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3018  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3019  03CC  00EC               	movwf	___flsub@b+2
  3020  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  3021  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  3022  03CF  0843               	movf	(sprintf@fval+1)^(0+128),w
  3023  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3024  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3025  03D2  00EB               	movwf	___flsub@b+1
  3026  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  3027  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  3028  03D5  0842               	movf	sprintf@fval^(0+128),w
  3029  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  3030  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  3031  03D8  00EA               	movwf	___flsub@b
  3032  03D9  160A  158A  2292  120A  118A  	fcall	___flsub
  3033  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3034  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3035  03E0  0869               	movf	?___flsub+3,w
  3036  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  3037  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  3038  03E3  00C5               	movwf	(sprintf@fval+3)^(0+128)
  3039  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3040  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  3041  03E6  0868               	movf	?___flsub+2,w
  3042  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  3043  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  3044  03E9  00C4               	movwf	(sprintf@fval+2)^(0+128)
  3045  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3046  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3047  03EC  0867               	movf	?___flsub+1,w
  3048  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  3049  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  3050  03EF  00C3               	movwf	(sprintf@fval+1)^(0+128)
  3051  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  3052  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  3053  03F2  0866               	movf	?___flsub,w
  3054  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  3055  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  3056  03F5  00C2               	movwf	sprintf@fval^(0+128)
  3057  03F6                     l3679:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3060  03F6  01B7               	clrf	sprintf@eexp^(0+128)
  3061  03F7  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  3062  03F8                     l3681:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3065  03F8  01C8               	clrf	sprintf@c^(0+128)
  3066  03F9  0AC8               	incf	sprintf@c^(0+128),f
  3067  03FA                     l3687:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3070  03FA  0848               	movf	sprintf@c^(0+128),w
  3071  03FB  00AB               	movwf	??_sprintf^(0+128)
  3072  03FC  3001               	movlw	1
  3073  03FD                     u5985:
  3074  03FD  1003               	clrc
  3075  03FE  0DAB               	rlf	??_sprintf^(0+128),f
  3076  03FF  3EFF               	addlw	-1
  3077  0400  1D03               	skipz
  3078  0401  2BFD               	goto	u5985
  3079  0402  1003               	clrc
  3080  0403  0D2B               	rlf	??_sprintf^(0+128),w
  3081  0404  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3082  0405  0084               	movwf	4
  3083  0406  160A  158A  200A  120A  118A  	fcall	stringdir
  3084  040B  00AC               	movwf	(??_sprintf+1)^(0+128)
  3085  040C  160A  158A  200A  120A  118A  	fcall	stringdir
  3086  0411  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  3087  0412  160A  158A  200A  120A  118A  	fcall	stringdir
  3088  0417  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  3089  0418  160A  158A  200A  120A  118A  	fcall	stringdir
  3090  041D  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  3091  041E  082F               	movf	(??_sprintf+4)^(0+128),w
  3092  041F  0240               	subwf	(sprintf@val+3)^(0+128),w
  3093  0420  1D03               	skipz
  3094  0421  2C2C               	goto	u5995
  3095  0422  082E               	movf	(??_sprintf+3)^(0+128),w
  3096  0423  023F               	subwf	(sprintf@val+2)^(0+128),w
  3097  0424  1D03               	skipz
  3098  0425  2C2C               	goto	u5995
  3099  0426  082D               	movf	(??_sprintf+2)^(0+128),w
  3100  0427  023E               	subwf	(sprintf@val+1)^(0+128),w
  3101  0428  1D03               	skipz
  3102  0429  2C2C               	goto	u5995
  3103  042A  082C               	movf	(??_sprintf+1)^(0+128),w
  3104  042B  023D               	subwf	sprintf@val^(0+128),w
  3105  042C                     u5995:
  3106  042C  1803               	skipnc
  3107  042D  2C2F               	goto	u5991
  3108  042E  2C30               	goto	u5990
  3109  042F                     u5991:
  3110  042F  2C31               	goto	l3691
  3111  0430                     u5990:
  3112  0430  2C3B               	goto	l3693
  3113  0431                     l3691:
  3114  0431  3001               	movlw	1
  3115  0432  00AB               	movwf	??_sprintf^(0+128)
  3116  0433  082B               	movf	??_sprintf^(0+128),w
  3117  0434  07C8               	addwf	sprintf@c^(0+128),f
  3118  0435  300A               	movlw	10
  3119  0436  0648               	xorwf	sprintf@c^(0+128),w
  3120  0437  1D03               	btfss	3,2
  3121  0438  2C3A               	goto	u6001
  3122  0439  2C3B               	goto	u6000
  3123  043A                     u6001:
  3124  043A  2BFA               	goto	l3687
  3125  043B                     u6000:
  3126  043B                     l3693:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3129  043B  3003               	movlw	3
  3130  043C  0535               	andwf	sprintf@flag^(0+128),w
  3131  043D  00AB               	movwf	??_sprintf^(0+128)
  3132  043E  3000               	movlw	0
  3133  043F  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3134  0440  00AC               	movwf	(??_sprintf+1)^(0+128)
  3135  0441  082B               	movf	??_sprintf^(0+128),w
  3136  0442  042C               	iorwf	(??_sprintf^(0+128)+1),w
  3137  0443  1903               	btfsc	3,2
  3138  0444  2C46               	goto	u6011
  3139  0445  2C47               	goto	u6010
  3140  0446                     u6011:
  3141  0446  2CD9               	goto	l372
  3142  0447                     u6010:
  3143  0447                     l3695:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3146  0447  302D               	movlw	45
  3147  0448  00AB               	movwf	??_sprintf^(0+128)
  3148  0449  0841               	movf	sprintf@sp^(0+128),w
  3149  044A  0084               	movwf	4
  3150  044B  082B               	movf	??_sprintf^(0+128),w
  3151  044C  1383               	bcf	3,7	;select IRP bank0
  3152  044D  0080               	movwf	0
  3153  044E                     l3697:
  3154  044E  3001               	movlw	1
  3155  044F  00AB               	movwf	??_sprintf^(0+128)
  3156  0450  082B               	movf	??_sprintf^(0+128),w
  3157  0451  07C1               	addwf	sprintf@sp^(0+128),f
  3158  0452  2CD9               	goto	l372
  3159  0453                     l3699:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3162  0453  0848               	movf	sprintf@c^(0+128),w
  3163  0454  00AB               	movwf	??_sprintf^(0+128)
  3164  0455  3001               	movlw	1
  3165  0456                     u6025:
  3166  0456  1003               	clrc
  3167  0457  0DAB               	rlf	??_sprintf^(0+128),f
  3168  0458  3EFF               	addlw	-1
  3169  0459  1D03               	skipz
  3170  045A  2C56               	goto	u6025
  3171  045B  1003               	clrc
  3172  045C  0D2B               	rlf	??_sprintf^(0+128),w
  3173  045D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3174  045E  0084               	movwf	4
  3175  045F  160A  158A  200A  120A  118A  	fcall	stringdir
  3176  0464  00F0               	movwf	___lldiv@divisor
  3177  0465  160A  158A  200A  120A  118A  	fcall	stringdir
  3178  046A  00F1               	movwf	___lldiv@divisor+1
  3179  046B  160A  158A  200A  120A  118A  	fcall	stringdir
  3180  0470  00F2               	movwf	___lldiv@divisor+2
  3181  0471  160A  158A  200A  120A  118A  	fcall	stringdir
  3182  0476  00F3               	movwf	___lldiv@divisor+3
  3183  0477  0840               	movf	(sprintf@val+3)^(0+128),w
  3184  0478  00F7               	movwf	___lldiv@dividend+3
  3185  0479  083F               	movf	(sprintf@val+2)^(0+128),w
  3186  047A  00F6               	movwf	___lldiv@dividend+2
  3187  047B  083E               	movf	(sprintf@val+1)^(0+128),w
  3188  047C  00F5               	movwf	___lldiv@dividend+1
  3189  047D  083D               	movf	sprintf@val^(0+128),w
  3190  047E  00F4               	movwf	___lldiv@dividend
  3191  047F  160A  158A  2559  120A  118A  	fcall	___lldiv
  3192  0484  0873               	movf	?___lldiv+3,w
  3193  0485  1683               	bsf	3,5	;RP0=1, select bank1
  3194  0486  1303               	bcf	3,6	;RP1=0, select bank1
  3195  0487  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3196  0488  0872               	movf	?___lldiv+2,w
  3197  0489  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3198  048A  0871               	movf	?___lldiv+1,w
  3199  048B  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3200  048C  0870               	movf	?___lldiv,w
  3201  048D  00B9               	movwf	sprintf@tmpval^(0+128)
  3202  048E                     l3701:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3205  048E  3000               	movlw	0
  3206  048F  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0490  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0491  00A3               	movwf	___llmod@divisor+3
  3209  0492  3000               	movlw	0
  3210  0493  00A2               	movwf	___llmod@divisor+2
  3211  0494  3000               	movlw	0
  3212  0495  00A1               	movwf	___llmod@divisor+1
  3213  0496  300A               	movlw	10
  3214  0497  00A0               	movwf	___llmod@divisor
  3215  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3216  0499  1303               	bcf	3,6	;RP1=0, select bank1
  3217  049A  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3218  049B  1283               	bcf	3,5	;RP0=0, select bank0
  3219  049C  1303               	bcf	3,6	;RP1=0, select bank0
  3220  049D  00A7               	movwf	___llmod@dividend+3
  3221  049E  1683               	bsf	3,5	;RP0=1, select bank1
  3222  049F  1303               	bcf	3,6	;RP1=0, select bank1
  3223  04A0  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3224  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3225  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3226  04A3  00A6               	movwf	___llmod@dividend+2
  3227  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3228  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  3229  04A6  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3230  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3231  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  3232  04A9  00A5               	movwf	___llmod@dividend+1
  3233  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  3234  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  3235  04AC  0839               	movf	sprintf@tmpval^(0+128),w
  3236  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3237  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3238  04AF  00A4               	movwf	___llmod@dividend
  3239  04B0  160A  158A  24AA  120A  118A  	fcall	___llmod
  3240  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  3241  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  3242  04B7  0823               	movf	?___llmod+3,w
  3243  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  3244  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  3245  04BA  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3246  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  3247  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  3248  04BD  0822               	movf	?___llmod+2,w
  3249  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  3250  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  3251  04C0  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3252  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  3253  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  3254  04C3  0821               	movf	?___llmod+1,w
  3255  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  3256  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  3257  04C6  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3258  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3259  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3260  04C9  0820               	movf	?___llmod,w
  3261  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  3262  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  3263  04CC  00B9               	movwf	sprintf@tmpval^(0+128)
  3264  04CD                     l3703:
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3267  04CD  0839               	movf	sprintf@tmpval^(0+128),w
  3268  04CE  3E30               	addlw	48
  3269  04CF  00AB               	movwf	??_sprintf^(0+128)
  3270  04D0  0841               	movf	sprintf@sp^(0+128),w
  3271  04D1  0084               	movwf	4
  3272  04D2  082B               	movf	??_sprintf^(0+128),w
  3273  04D3  1383               	bcf	3,7	;select IRP bank0
  3274  04D4  0080               	movwf	0
  3275  04D5  3001               	movlw	1
  3276  04D6  00AB               	movwf	??_sprintf^(0+128)
  3277  04D7  082B               	movf	??_sprintf^(0+128),w
  3278  04D8  07C1               	addwf	sprintf@sp^(0+128),f
  3279  04D9                     l372:	
  3280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3281                           
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3284  04D9  3001               	movlw	1
  3285  04DA  02C8               	subwf	sprintf@c^(0+128),f
  3286  04DB  0A48               	incf	sprintf@c^(0+128),w
  3287  04DC  1D03               	btfss	3,2
  3288  04DD  2CDF               	goto	u6031
  3289  04DE  2CE0               	goto	u6030
  3290  04DF                     u6031:
  3291  04DF  2C53               	goto	l3699
  3292  04E0                     u6030:
  3293  04E0  2CF4               	goto	l3711
  3294  04E1                     l3705:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3297  04E1  3030               	movlw	48
  3298  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3299  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  3300  04E4  00AB               	movwf	??_sprintf^(0+128)
  3301  04E5  0841               	movf	sprintf@sp^(0+128),w
  3302  04E6  0084               	movwf	4
  3303  04E7  082B               	movf	??_sprintf^(0+128),w
  3304  04E8  1383               	bcf	3,7	;select IRP bank0
  3305  04E9  0080               	movwf	0
  3306  04EA                     l3707:
  3307  04EA  3001               	movlw	1
  3308  04EB  00AB               	movwf	??_sprintf^(0+128)
  3309  04EC  082B               	movf	??_sprintf^(0+128),w
  3310  04ED  07C1               	addwf	sprintf@sp^(0+128),f
  3311  04EE                     l3709:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3314  04EE  30FF               	movlw	255
  3315  04EF  07B7               	addwf	sprintf@eexp^(0+128),f
  3316  04F0  1803               	skipnc
  3317  04F1  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3318  04F2  30FF               	movlw	255
  3319  04F3  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3320  04F4                     l3711:
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3323  04F4  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3324  04F5  3A80               	xorlw	128
  3325  04F6  00FF               	movwf	btemp+1
  3326  04F7  3080               	movlw	128
  3327  04F8  027F               	subwf	btemp+1,w
  3328  04F9  1D03               	skipz
  3329  04FA  2CFD               	goto	u6045
  3330  04FB  3001               	movlw	1
  3331  04FC  0237               	subwf	sprintf@eexp^(0+128),w
  3332  04FD                     u6045:
  3333  04FD  1803               	skipnc
  3334  04FE  2D00               	goto	u6041
  3335  04FF  2D01               	goto	u6040
  3336  0500                     u6041:
  3337  0500  2CE1               	goto	l3705
  3338  0501                     u6040:
  3339  0501                     l3713:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3342  0501  1683               	bsf	3,5	;RP0=1, select bank1
  3343  0502  1303               	bcf	3,6	;RP1=0, select bank1
  3344  0503  0847               	movf	(sprintf@prec+1)^(0+128),w
  3345  0504  3A80               	xorlw	128
  3346  0505  00FF               	movwf	btemp+1
  3347  0506  3080               	movlw	128
  3348  0507  027F               	subwf	btemp+1,w
  3349  0508  1D03               	skipz
  3350  0509  2D0C               	goto	u6055
  3351  050A  3009               	movlw	9
  3352  050B  0246               	subwf	sprintf@prec^(0+128),w
  3353  050C                     u6055:
  3354  050C  1C03               	skipc
  3355  050D  2D0F               	goto	u6051
  3356  050E  2D10               	goto	u6050
  3357  050F                     u6051:
  3358  050F  2D17               	goto	l3717
  3359  0510                     u6050:
  3360  0510                     l3715:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3363  0510  3008               	movlw	8
  3364  0511  1683               	bsf	3,5	;RP0=1, select bank1
  3365  0512  1303               	bcf	3,6	;RP1=0, select bank1
  3366  0513  00AB               	movwf	??_sprintf^(0+128)
  3367  0514  082B               	movf	??_sprintf^(0+128),w
  3368  0515  00C8               	movwf	sprintf@c^(0+128)
  3369  0516  2D1D               	goto	l379
  3370  0517                     l3717:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3373  0517  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0518  1303               	bcf	3,6	;RP1=0, select bank1
  3375  0519  0846               	movf	sprintf@prec^(0+128),w
  3376  051A  00AB               	movwf	??_sprintf^(0+128)
  3377  051B  082B               	movf	??_sprintf^(0+128),w
  3378  051C  00C8               	movwf	sprintf@c^(0+128)
  3379  051D                     l379:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3382  051D  0848               	movf	sprintf@c^(0+128),w
  3383  051E  00AB               	movwf	??_sprintf^(0+128)
  3384  051F  01AC               	clrf	(??_sprintf^(0+128)+1)
  3385  0520  082B               	movf	??_sprintf^(0+128),w
  3386  0521  02C6               	subwf	sprintf@prec^(0+128),f
  3387  0522  082C               	movf	(??_sprintf+1)^(0+128),w
  3388  0523  1C03               	skipc
  3389  0524  03C7               	decf	(sprintf@prec+1)^(0+128),f
  3390  0525  02C7               	subwf	(sprintf@prec+1)^(0+128),f
  3391  0526                     l3719:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3394  0526  0848               	movf	sprintf@c^(0+128),w
  3395  0527  1903               	btfsc	3,2
  3396  0528  2D2A               	goto	u6061
  3397  0529  2D2B               	goto	u6060
  3398  052A                     u6061:
  3399  052A  2D36               	goto	l3725
  3400  052B                     u6060:
  3401  052B                     l3721:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3404  052B  302E               	movlw	46
  3405  052C  00AB               	movwf	??_sprintf^(0+128)
  3406  052D  0841               	movf	sprintf@sp^(0+128),w
  3407  052E  0084               	movwf	4
  3408  052F  082B               	movf	??_sprintf^(0+128),w
  3409  0530  1383               	bcf	3,7	;select IRP bank0
  3410  0531  0080               	movwf	0
  3411  0532                     l3723:
  3412  0532  3001               	movlw	1
  3413  0533  00AB               	movwf	??_sprintf^(0+128)
  3414  0534  082B               	movf	??_sprintf^(0+128),w
  3415  0535  07C1               	addwf	sprintf@sp^(0+128),f
  3416  0536                     l3725:
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3419  0536  0848               	movf	sprintf@c^(0+128),w
  3420  0537  120A  158A  2140  120A  118A  	fcall	_scale
  3421  053C  1283               	bcf	3,5	;RP0=0, select bank0
  3422  053D  1303               	bcf	3,6	;RP1=0, select bank0
  3423  053E  0841               	movf	?_scale+3,w
  3424  053F  1683               	bsf	3,5	;RP0=1, select bank1
  3425  0540  1303               	bcf	3,6	;RP1=0, select bank1
  3426  0541  00B3               	movwf	(_sprintf$1319+3)^(0+128)
  3427  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0544  0840               	movf	?_scale+2,w
  3430  0545  1683               	bsf	3,5	;RP0=1, select bank1
  3431  0546  1303               	bcf	3,6	;RP1=0, select bank1
  3432  0547  00B2               	movwf	(_sprintf$1319+2)^(0+128)
  3433  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3435  054A  083F               	movf	?_scale+1,w
  3436  054B  1683               	bsf	3,5	;RP0=1, select bank1
  3437  054C  1303               	bcf	3,6	;RP1=0, select bank1
  3438  054D  00B1               	movwf	(_sprintf$1319+1)^(0+128)
  3439  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3440  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0550  083E               	movf	?_scale,w
  3442  0551  1683               	bsf	3,5	;RP0=1, select bank1
  3443  0552  1303               	bcf	3,6	;RP1=0, select bank1
  3444  0553  00B0               	movwf	_sprintf$1319^(0+128)
  3445  0554                     l3727:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3448  0554  0833               	movf	(_sprintf$1319+3)^(0+128),w
  3449  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0556  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0557  00AB               	movwf	___flmul@a+3
  3452  0558  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0559  1303               	bcf	3,6	;RP1=0, select bank1
  3454  055A  0832               	movf	(_sprintf$1319+2)^(0+128),w
  3455  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3456  055C  1303               	bcf	3,6	;RP1=0, select bank0
  3457  055D  00AA               	movwf	___flmul@a+2
  3458  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3459  055F  1303               	bcf	3,6	;RP1=0, select bank1
  3460  0560  0831               	movf	(_sprintf$1319+1)^(0+128),w
  3461  0561  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0562  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0563  00A9               	movwf	___flmul@a+1
  3464  0564  1683               	bsf	3,5	;RP0=1, select bank1
  3465  0565  1303               	bcf	3,6	;RP1=0, select bank1
  3466  0566  0830               	movf	_sprintf$1319^(0+128),w
  3467  0567  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0568  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0569  00A8               	movwf	___flmul@a
  3470  056A  1683               	bsf	3,5	;RP0=1, select bank1
  3471  056B  1303               	bcf	3,6	;RP1=0, select bank1
  3472  056C  0845               	movf	(sprintf@fval+3)^(0+128),w
  3473  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3474  056E  1303               	bcf	3,6	;RP1=0, select bank0
  3475  056F  00A7               	movwf	___flmul@b+3
  3476  0570  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0571  1303               	bcf	3,6	;RP1=0, select bank1
  3478  0572  0844               	movf	(sprintf@fval+2)^(0+128),w
  3479  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0575  00A6               	movwf	___flmul@b+2
  3482  0576  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0577  1303               	bcf	3,6	;RP1=0, select bank1
  3484  0578  0843               	movf	(sprintf@fval+1)^(0+128),w
  3485  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3486  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3487  057B  00A5               	movwf	___flmul@b+1
  3488  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3489  057D  1303               	bcf	3,6	;RP1=0, select bank1
  3490  057E  0842               	movf	sprintf@fval^(0+128),w
  3491  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0581  00A4               	movwf	___flmul@b
  3494  0582  120A  158A  249F  120A  118A  	fcall	___flmul
  3495  0587  1283               	bcf	3,5	;RP0=0, select bank0
  3496  0588  1303               	bcf	3,6	;RP1=0, select bank0
  3497  0589  0827               	movf	?___flmul+3,w
  3498  058A  00D4               	movwf	___fltol@f1+3
  3499  058B  0826               	movf	?___flmul+2,w
  3500  058C  00D3               	movwf	___fltol@f1+2
  3501  058D  0825               	movf	?___flmul+1,w
  3502  058E  00D2               	movwf	___fltol@f1+1
  3503  058F  0824               	movf	?___flmul,w
  3504  0590  00D1               	movwf	___fltol@f1
  3505  0591  160A  158A  2628  120A  118A  	fcall	___fltol
  3506  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0597  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0598  0854               	movf	?___fltol+3,w
  3509  0599  1683               	bsf	3,5	;RP0=1, select bank1
  3510  059A  1303               	bcf	3,6	;RP1=0, select bank1
  3511  059B  00C0               	movwf	(sprintf@val+3)^(0+128)
  3512  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3513  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3514  059E  0853               	movf	?___fltol+2,w
  3515  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3516  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  3517  05A1  00BF               	movwf	(sprintf@val+2)^(0+128)
  3518  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3519  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3520  05A4  0852               	movf	?___fltol+1,w
  3521  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  3522  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  3523  05A7  00BE               	movwf	(sprintf@val+1)^(0+128)
  3524  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3525  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3526  05AA  0851               	movf	?___fltol,w
  3527  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3528  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3529  05AD  00BD               	movwf	sprintf@val^(0+128)
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3532  05AE  2E90               	goto	l3737
  3533  05AF                     l3729:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3536  05AF  0848               	movf	sprintf@c^(0+128),w
  3537  05B0  00AB               	movwf	??_sprintf^(0+128)
  3538  05B1  3001               	movlw	1
  3539  05B2                     u6075:
  3540  05B2  1003               	clrc
  3541  05B3  0DAB               	rlf	??_sprintf^(0+128),f
  3542  05B4  3EFF               	addlw	-1
  3543  05B5  1D03               	skipz
  3544  05B6  2DB2               	goto	u6075
  3545  05B7  1003               	clrc
  3546  05B8  0D2B               	rlf	??_sprintf^(0+128),w
  3547  05B9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3548  05BA  0084               	movwf	4
  3549  05BB  160A  158A  200A  120A  118A  	fcall	stringdir
  3550  05C0  00F0               	movwf	___lldiv@divisor
  3551  05C1  160A  158A  200A  120A  118A  	fcall	stringdir
  3552  05C6  00F1               	movwf	___lldiv@divisor+1
  3553  05C7  160A  158A  200A  120A  118A  	fcall	stringdir
  3554  05CC  00F2               	movwf	___lldiv@divisor+2
  3555  05CD  160A  158A  200A  120A  118A  	fcall	stringdir
  3556  05D2  00F3               	movwf	___lldiv@divisor+3
  3557  05D3  0840               	movf	(sprintf@val+3)^(0+128),w
  3558  05D4  00F7               	movwf	___lldiv@dividend+3
  3559  05D5  083F               	movf	(sprintf@val+2)^(0+128),w
  3560  05D6  00F6               	movwf	___lldiv@dividend+2
  3561  05D7  083E               	movf	(sprintf@val+1)^(0+128),w
  3562  05D8  00F5               	movwf	___lldiv@dividend+1
  3563  05D9  083D               	movf	sprintf@val^(0+128),w
  3564  05DA  00F4               	movwf	___lldiv@dividend
  3565  05DB  160A  158A  2559  120A  118A  	fcall	___lldiv
  3566  05E0  0873               	movf	?___lldiv+3,w
  3567  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3568  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  3569  05E3  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3570  05E4  0872               	movf	?___lldiv+2,w
  3571  05E5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3572  05E6  0871               	movf	?___lldiv+1,w
  3573  05E7  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3574  05E8  0870               	movf	?___lldiv,w
  3575  05E9  00B9               	movwf	sprintf@tmpval^(0+128)
  3576  05EA                     l3731:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3579  05EA  3000               	movlw	0
  3580  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3581  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3582  05ED  00A3               	movwf	___llmod@divisor+3
  3583  05EE  3000               	movlw	0
  3584  05EF  00A2               	movwf	___llmod@divisor+2
  3585  05F0  3000               	movlw	0
  3586  05F1  00A1               	movwf	___llmod@divisor+1
  3587  05F2  300A               	movlw	10
  3588  05F3  00A0               	movwf	___llmod@divisor
  3589  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3590  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3591  05F6  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3592  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3593  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3594  05F9  00A7               	movwf	___llmod@dividend+3
  3595  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3596  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3597  05FC  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3598  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3599  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3600  05FF  00A6               	movwf	___llmod@dividend+2
  3601  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3602  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3603  0602  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3604  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0605  00A5               	movwf	___llmod@dividend+1
  3607  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3609  0608  0839               	movf	sprintf@tmpval^(0+128),w
  3610  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3611  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3612  060B  00A4               	movwf	___llmod@dividend
  3613  060C  160A  158A  24AA  120A  118A  	fcall	___llmod
  3614  0611  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0612  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0613  0823               	movf	?___llmod+3,w
  3617  0614  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0615  1303               	bcf	3,6	;RP1=0, select bank1
  3619  0616  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3620  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0618  1303               	bcf	3,6	;RP1=0, select bank0
  3622  0619  0822               	movf	?___llmod+2,w
  3623  061A  1683               	bsf	3,5	;RP0=1, select bank1
  3624  061B  1303               	bcf	3,6	;RP1=0, select bank1
  3625  061C  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3626  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3627  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3628  061F  0821               	movf	?___llmod+1,w
  3629  0620  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0621  1303               	bcf	3,6	;RP1=0, select bank1
  3631  0622  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3632  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0625  0820               	movf	?___llmod,w
  3635  0626  1683               	bsf	3,5	;RP0=1, select bank1
  3636  0627  1303               	bcf	3,6	;RP1=0, select bank1
  3637  0628  00B9               	movwf	sprintf@tmpval^(0+128)
  3638  0629                     l3733:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3641  0629  0839               	movf	sprintf@tmpval^(0+128),w
  3642  062A  3E30               	addlw	48
  3643  062B  00AB               	movwf	??_sprintf^(0+128)
  3644  062C  0841               	movf	sprintf@sp^(0+128),w
  3645  062D  0084               	movwf	4
  3646  062E  082B               	movf	??_sprintf^(0+128),w
  3647  062F  1383               	bcf	3,7	;select IRP bank0
  3648  0630  0080               	movwf	0
  3649  0631  3001               	movlw	1
  3650  0632  00AB               	movwf	??_sprintf^(0+128)
  3651  0633  082B               	movf	??_sprintf^(0+128),w
  3652  0634  07C1               	addwf	sprintf@sp^(0+128),f
  3653  0635                     l3735:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3656  0635  0848               	movf	sprintf@c^(0+128),w
  3657  0636  00AB               	movwf	??_sprintf^(0+128)
  3658  0637  3001               	movlw	1
  3659  0638                     u6085:
  3660  0638  1003               	clrc
  3661  0639  0DAB               	rlf	??_sprintf^(0+128),f
  3662  063A  3EFF               	addlw	-1
  3663  063B  1D03               	skipz
  3664  063C  2E38               	goto	u6085
  3665  063D  1003               	clrc
  3666  063E  0D2B               	rlf	??_sprintf^(0+128),w
  3667  063F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3668  0640  0084               	movwf	4
  3669  0641  160A  158A  200A  120A  118A  	fcall	stringdir
  3670  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0648  00A0               	movwf	___llmod@divisor
  3673  0649  160A  158A  200A  120A  118A  	fcall	stringdir
  3674  064E  00A1               	movwf	___llmod@divisor+1
  3675  064F  160A  158A  200A  120A  118A  	fcall	stringdir
  3676  0654  00A2               	movwf	___llmod@divisor+2
  3677  0655  160A  158A  200A  120A  118A  	fcall	stringdir
  3678  065A  00A3               	movwf	___llmod@divisor+3
  3679  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3680  065C  1303               	bcf	3,6	;RP1=0, select bank1
  3681  065D  0840               	movf	(sprintf@val+3)^(0+128),w
  3682  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3683  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0660  00A7               	movwf	___llmod@dividend+3
  3685  0661  1683               	bsf	3,5	;RP0=1, select bank1
  3686  0662  1303               	bcf	3,6	;RP1=0, select bank1
  3687  0663  083F               	movf	(sprintf@val+2)^(0+128),w
  3688  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3689  0665  1303               	bcf	3,6	;RP1=0, select bank0
  3690  0666  00A6               	movwf	___llmod@dividend+2
  3691  0667  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0668  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0669  083E               	movf	(sprintf@val+1)^(0+128),w
  3694  066A  1283               	bcf	3,5	;RP0=0, select bank0
  3695  066B  1303               	bcf	3,6	;RP1=0, select bank0
  3696  066C  00A5               	movwf	___llmod@dividend+1
  3697  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3698  066E  1303               	bcf	3,6	;RP1=0, select bank1
  3699  066F  083D               	movf	sprintf@val^(0+128),w
  3700  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0671  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0672  00A4               	movwf	___llmod@dividend
  3703  0673  160A  158A  24AA  120A  118A  	fcall	___llmod
  3704  0678  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0679  1303               	bcf	3,6	;RP1=0, select bank0
  3706  067A  0823               	movf	?___llmod+3,w
  3707  067B  1683               	bsf	3,5	;RP0=1, select bank1
  3708  067C  1303               	bcf	3,6	;RP1=0, select bank1
  3709  067D  00C0               	movwf	(sprintf@val+3)^(0+128)
  3710  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3711  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0680  0822               	movf	?___llmod+2,w
  3713  0681  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0682  1303               	bcf	3,6	;RP1=0, select bank1
  3715  0683  00BF               	movwf	(sprintf@val+2)^(0+128)
  3716  0684  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0685  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0686  0821               	movf	?___llmod+1,w
  3719  0687  1683               	bsf	3,5	;RP0=1, select bank1
  3720  0688  1303               	bcf	3,6	;RP1=0, select bank1
  3721  0689  00BE               	movwf	(sprintf@val+1)^(0+128)
  3722  068A  1283               	bcf	3,5	;RP0=0, select bank0
  3723  068B  1303               	bcf	3,6	;RP1=0, select bank0
  3724  068C  0820               	movf	?___llmod,w
  3725  068D  1683               	bsf	3,5	;RP0=1, select bank1
  3726  068E  1303               	bcf	3,6	;RP1=0, select bank1
  3727  068F  00BD               	movwf	sprintf@val^(0+128)
  3728  0690                     l3737:
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3731  0690  3001               	movlw	1
  3732  0691  02C8               	subwf	sprintf@c^(0+128),f
  3733  0692  0A48               	incf	sprintf@c^(0+128),w
  3734  0693  1D03               	btfss	3,2
  3735  0694  2E96               	goto	u6091
  3736  0695  2E97               	goto	u6090
  3737  0696                     u6091:
  3738  0696  2DAF               	goto	l3729
  3739  0697                     u6090:
  3740  0697  2EA9               	goto	l3745
  3741  0698                     l3739:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3744  0698  3030               	movlw	48
  3745  0699  00AB               	movwf	??_sprintf^(0+128)
  3746  069A  0841               	movf	sprintf@sp^(0+128),w
  3747  069B  0084               	movwf	4
  3748  069C  082B               	movf	??_sprintf^(0+128),w
  3749  069D  1383               	bcf	3,7	;select IRP bank0
  3750  069E  0080               	movwf	0
  3751  069F                     l3741:
  3752  069F  3001               	movlw	1
  3753  06A0  00AB               	movwf	??_sprintf^(0+128)
  3754  06A1  082B               	movf	??_sprintf^(0+128),w
  3755  06A2  07C1               	addwf	sprintf@sp^(0+128),f
  3756  06A3                     l3743:
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3759  06A3  30FF               	movlw	255
  3760  06A4  07C6               	addwf	sprintf@prec^(0+128),f
  3761  06A5  1803               	skipnc
  3762  06A6  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3763  06A7  30FF               	movlw	255
  3764  06A8  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3765  06A9                     l3745:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3768  06A9  0846               	movf	sprintf@prec^(0+128),w
  3769  06AA  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3770  06AB  1D03               	btfss	3,2
  3771  06AC  2EAE               	goto	u6101
  3772  06AD  2EAF               	goto	u6100
  3773  06AE                     u6101:
  3774  06AE  2E98               	goto	l3739
  3775  06AF                     u6100:
  3776  06AF  2FD8               	goto	l3797
  3777  06B0                     l3747:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3780  06B0  0834               	movf	sprintf@ap^(0+128),w
  3781  06B1  0084               	movwf	4
  3782  06B2  1383               	bcf	3,7	;select IRP bank0
  3783  06B3  0800               	movf	0,w
  3784  06B4  00AB               	movwf	??_sprintf^(0+128)
  3785  06B5  0A84               	incf	4,f
  3786  06B6  0800               	movf	0,w
  3787  06B7  00AC               	movwf	(??_sprintf^(0+128)+1)
  3788  06B8  082B               	movf	??_sprintf^(0+128),w
  3789  06B9  00BD               	movwf	sprintf@val^(0+128)
  3790  06BA  082C               	movf	(??_sprintf+1)^(0+128),w
  3791  06BB  00BE               	movwf	(sprintf@val+1)^(0+128)
  3792  06BC  3000               	movlw	0
  3793  06BD  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
  3794  06BE  30FF               	movlw	255
  3795  06BF  00BF               	movwf	(sprintf@val+2)^(0+128)
  3796  06C0  00C0               	movwf	(sprintf@val+3)^(0+128)
  3797  06C1                     l3749:
  3798  06C1  3002               	movlw	2
  3799  06C2  00AB               	movwf	??_sprintf^(0+128)
  3800  06C3  082B               	movf	??_sprintf^(0+128),w
  3801  06C4  07B4               	addwf	sprintf@ap^(0+128),f
  3802  06C5                     l3751:
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3805  06C5  1FC0               	btfss	(sprintf@val+3)^(0+128),7
  3806  06C6  2EC8               	goto	u6111
  3807  06C7  2EC9               	goto	u6110
  3808  06C8                     u6111:
  3809  06C8  2ED8               	goto	l3757
  3810  06C9                     u6110:
  3811  06C9                     l3753:
  3812                           
  3813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3814  06C9  3003               	movlw	3
  3815  06CA  04B5               	iorwf	sprintf@flag^(0+128),f
  3816  06CB  3000               	movlw	0
  3817  06CC  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  3818  06CD                     l3755:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3821  06CD  09BD               	comf	sprintf@val^(0+128),f
  3822  06CE  09BE               	comf	(sprintf@val+1)^(0+128),f
  3823  06CF  09BF               	comf	(sprintf@val+2)^(0+128),f
  3824  06D0  09C0               	comf	(sprintf@val+3)^(0+128),f
  3825  06D1  0ABD               	incf	sprintf@val^(0+128),f
  3826  06D2  1903               	skipnz
  3827  06D3  0ABE               	incf	(sprintf@val+1)^(0+128),f
  3828  06D4  1903               	skipnz
  3829  06D5  0ABF               	incf	(sprintf@val+2)^(0+128),f
  3830  06D6  1903               	skipnz
  3831  06D7  0AC0               	incf	(sprintf@val+3)^(0+128),f
  3832  06D8                     l3757:
  3833                           
  3834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3835  06D8  0846               	movf	sprintf@prec^(0+128),w
  3836  06D9  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3837  06DA  1D03               	btfss	3,2
  3838  06DB  2EDD               	goto	u6121
  3839  06DC  2EDE               	goto	u6120
  3840  06DD                     u6121:
  3841  06DD  2EEC               	goto	l3763
  3842  06DE                     u6120:
  3843  06DE                     l3759:
  3844  06DE  0840               	movf	(sprintf@val+3)^(0+128),w
  3845  06DF  043F               	iorwf	(sprintf@val+2)^(0+128),w
  3846  06E0  043E               	iorwf	(sprintf@val+1)^(0+128),w
  3847  06E1  043D               	iorwf	sprintf@val^(0+128),w
  3848  06E2  1D03               	skipz
  3849  06E3  2EE5               	goto	u6131
  3850  06E4  2EE6               	goto	u6130
  3851  06E5                     u6131:
  3852  06E5  2EEC               	goto	l3763
  3853  06E6                     u6130:
  3854  06E6                     l3761:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3857  06E6  3001               	movlw	1
  3858  06E7  07C6               	addwf	sprintf@prec^(0+128),f
  3859  06E8  1803               	skipnc
  3860  06E9  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3861  06EA  3000               	movlw	0
  3862  06EB  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3863  06EC                     l3763:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3866  06EC  01C8               	clrf	sprintf@c^(0+128)
  3867  06ED  0AC8               	incf	sprintf@c^(0+128),f
  3868  06EE                     l3769:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3871  06EE  0848               	movf	sprintf@c^(0+128),w
  3872  06EF  00AB               	movwf	??_sprintf^(0+128)
  3873  06F0  3001               	movlw	1
  3874  06F1                     u6145:
  3875  06F1  1003               	clrc
  3876  06F2  0DAB               	rlf	??_sprintf^(0+128),f
  3877  06F3  3EFF               	addlw	-1
  3878  06F4  1D03               	skipz
  3879  06F5  2EF1               	goto	u6145
  3880  06F6  1003               	clrc
  3881  06F7  0D2B               	rlf	??_sprintf^(0+128),w
  3882  06F8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3883  06F9  0084               	movwf	4
  3884  06FA  160A  158A  200A  120A  118A  	fcall	stringdir
  3885  06FF  00AC               	movwf	(??_sprintf+1)^(0+128)
  3886  0700  160A  158A  200A  120A  118A  	fcall	stringdir
  3887  0705  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  3888  0706  160A  158A  200A  120A  118A  	fcall	stringdir
  3889  070B  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  3890  070C  160A  158A  200A  120A  118A  	fcall	stringdir
  3891  0711  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  3892  0712  082F               	movf	(??_sprintf+4)^(0+128),w
  3893  0713  0240               	subwf	(sprintf@val+3)^(0+128),w
  3894  0714  1D03               	skipz
  3895  0715  2F20               	goto	u6155
  3896  0716  082E               	movf	(??_sprintf+3)^(0+128),w
  3897  0717  023F               	subwf	(sprintf@val+2)^(0+128),w
  3898  0718  1D03               	skipz
  3899  0719  2F20               	goto	u6155
  3900  071A  082D               	movf	(??_sprintf+2)^(0+128),w
  3901  071B  023E               	subwf	(sprintf@val+1)^(0+128),w
  3902  071C  1D03               	skipz
  3903  071D  2F20               	goto	u6155
  3904  071E  082C               	movf	(??_sprintf+1)^(0+128),w
  3905  071F  023D               	subwf	sprintf@val^(0+128),w
  3906  0720                     u6155:
  3907  0720  1803               	skipnc
  3908  0721  2F23               	goto	u6151
  3909  0722  2F24               	goto	u6150
  3910  0723                     u6151:
  3911  0723  2F25               	goto	l3773
  3912  0724                     u6150:
  3913  0724  2F2F               	goto	l3775
  3914  0725                     l3773:
  3915  0725  3001               	movlw	1
  3916  0726  00AB               	movwf	??_sprintf^(0+128)
  3917  0727  082B               	movf	??_sprintf^(0+128),w
  3918  0728  07C8               	addwf	sprintf@c^(0+128),f
  3919  0729  300A               	movlw	10
  3920  072A  0648               	xorwf	sprintf@c^(0+128),w
  3921  072B  1D03               	btfss	3,2
  3922  072C  2F2E               	goto	u6161
  3923  072D  2F2F               	goto	u6160
  3924  072E                     u6161:
  3925  072E  2EEE               	goto	l3769
  3926  072F                     u6160:
  3927  072F                     l3775:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3930  072F  0847               	movf	(sprintf@prec+1)^(0+128),w
  3931  0730  3A80               	xorlw	128
  3932  0731  3C80               	sublw	128
  3933  0732  1D03               	skipz
  3934  0733  2F36               	goto	u6175
  3935  0734  0846               	movf	sprintf@prec^(0+128),w
  3936  0735  0248               	subwf	sprintf@c^(0+128),w
  3937  0736                     u6175:
  3938  0736  1803               	skipnc
  3939  0737  2F39               	goto	u6171
  3940  0738  2F3A               	goto	u6170
  3941  0739                     u6171:
  3942  0739  2F3B               	goto	l3779
  3943  073A                     u6170:
  3944  073A                     l3777:
  3945  073A  2F53               	goto	l3783
  3946  073B                     l3779:
  3947  073B  1683               	bsf	3,5	;RP0=1, select bank1
  3948  073C  1303               	bcf	3,6	;RP1=0, select bank1
  3949  073D  0847               	movf	(sprintf@prec+1)^(0+128),w
  3950  073E  3A80               	xorlw	128
  3951  073F  00AB               	movwf	??_sprintf^(0+128)
  3952  0740  3080               	movlw	128
  3953  0741  022B               	subwf	??_sprintf^(0+128),w
  3954  0742  1D03               	skipz
  3955  0743  2F46               	goto	u6185
  3956  0744  0848               	movf	sprintf@c^(0+128),w
  3957  0745  0246               	subwf	sprintf@prec^(0+128),w
  3958  0746                     u6185:
  3959  0746  1803               	skipnc
  3960  0747  2F49               	goto	u6181
  3961  0748  2F4A               	goto	u6180
  3962  0749                     u6181:
  3963  0749  2F53               	goto	l3783
  3964  074A                     u6180:
  3965  074A                     l3781:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3968  074A  1683               	bsf	3,5	;RP0=1, select bank1
  3969  074B  1303               	bcf	3,6	;RP1=0, select bank1
  3970  074C  0848               	movf	sprintf@c^(0+128),w
  3971  074D  00AB               	movwf	??_sprintf^(0+128)
  3972  074E  01AC               	clrf	(??_sprintf^(0+128)+1)
  3973  074F  082B               	movf	??_sprintf^(0+128),w
  3974  0750  00C6               	movwf	sprintf@prec^(0+128)
  3975  0751  082C               	movf	(??_sprintf+1)^(0+128),w
  3976  0752  00C7               	movwf	(sprintf@prec+1)^(0+128)
  3977  0753                     l3783:
  3978                           
  3979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3980  0753  3003               	movlw	3
  3981  0754  1683               	bsf	3,5	;RP0=1, select bank1
  3982  0755  1303               	bcf	3,6	;RP1=0, select bank1
  3983  0756  0535               	andwf	sprintf@flag^(0+128),w
  3984  0757  00AB               	movwf	??_sprintf^(0+128)
  3985  0758  3000               	movlw	0
  3986  0759  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3987  075A  00AC               	movwf	(??_sprintf+1)^(0+128)
  3988  075B  082B               	movf	??_sprintf^(0+128),w
  3989  075C  042C               	iorwf	(??_sprintf^(0+128)+1),w
  3990  075D  1903               	btfsc	3,2
  3991  075E  2F60               	goto	u6191
  3992  075F  2F61               	goto	u6190
  3993  0760                     u6191:
  3994  0760  2FCA               	goto	l3795
  3995  0761                     u6190:
  3996  0761                     l3785:
  3997                           
  3998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3999  0761  302D               	movlw	45
  4000  0762  00AB               	movwf	??_sprintf^(0+128)
  4001  0763  0841               	movf	sprintf@sp^(0+128),w
  4002  0764  0084               	movwf	4
  4003  0765  082B               	movf	??_sprintf^(0+128),w
  4004  0766  1383               	bcf	3,7	;select IRP bank0
  4005  0767  0080               	movwf	0
  4006  0768                     l3787:
  4007  0768  3001               	movlw	1
  4008  0769  00AB               	movwf	??_sprintf^(0+128)
  4009  076A  082B               	movf	??_sprintf^(0+128),w
  4010  076B  07C1               	addwf	sprintf@sp^(0+128),f
  4011  076C  2FCA               	goto	l3795
  4012  076D                     l3789:
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4015  076D  3000               	movlw	0
  4016  076E  1283               	bcf	3,5	;RP0=0, select bank0
  4017  076F  1303               	bcf	3,6	;RP1=0, select bank0
  4018  0770  00A3               	movwf	___llmod@divisor+3
  4019  0771  3000               	movlw	0
  4020  0772  00A2               	movwf	___llmod@divisor+2
  4021  0773  3000               	movlw	0
  4022  0774  00A1               	movwf	___llmod@divisor+1
  4023  0775  300A               	movlw	10
  4024  0776  00A0               	movwf	___llmod@divisor
  4025  0777  1683               	bsf	3,5	;RP0=1, select bank1
  4026  0778  1303               	bcf	3,6	;RP1=0, select bank1
  4027  0779  0846               	movf	sprintf@prec^(0+128),w
  4028  077A  00AB               	movwf	??_sprintf^(0+128)
  4029  077B  3001               	movlw	1
  4030  077C                     u6205:
  4031  077C  1003               	clrc
  4032  077D  0DAB               	rlf	??_sprintf^(0+128),f
  4033  077E  3EFF               	addlw	-1
  4034  077F  1D03               	skipz
  4035  0780  2F7C               	goto	u6205
  4036  0781  1003               	clrc
  4037  0782  0D2B               	rlf	??_sprintf^(0+128),w
  4038  0783  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4039  0784  0084               	movwf	4
  4040  0785  160A  158A  200A  120A  118A  	fcall	stringdir
  4041  078A  00F0               	movwf	___lldiv@divisor
  4042  078B  160A  158A  200A  120A  118A  	fcall	stringdir
  4043  0790  00F1               	movwf	___lldiv@divisor+1
  4044  0791  160A  158A  200A  120A  118A  	fcall	stringdir
  4045  0796  00F2               	movwf	___lldiv@divisor+2
  4046  0797  160A  158A  200A  120A  118A  	fcall	stringdir
  4047  079C  00F3               	movwf	___lldiv@divisor+3
  4048  079D  0840               	movf	(sprintf@val+3)^(0+128),w
  4049  079E  00F7               	movwf	___lldiv@dividend+3
  4050  079F  083F               	movf	(sprintf@val+2)^(0+128),w
  4051  07A0  00F6               	movwf	___lldiv@dividend+2
  4052  07A1  083E               	movf	(sprintf@val+1)^(0+128),w
  4053  07A2  00F5               	movwf	___lldiv@dividend+1
  4054  07A3  083D               	movf	sprintf@val^(0+128),w
  4055  07A4  00F4               	movwf	___lldiv@dividend
  4056  07A5  160A  158A  2559  120A  118A  	fcall	___lldiv
  4057  07AA  0873               	movf	?___lldiv+3,w
  4058  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  4059  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  4060  07AD  00A7               	movwf	___llmod@dividend+3
  4061  07AE  0872               	movf	?___lldiv+2,w
  4062  07AF  00A6               	movwf	___llmod@dividend+2
  4063  07B0  0871               	movf	?___lldiv+1,w
  4064  07B1  00A5               	movwf	___llmod@dividend+1
  4065  07B2  0870               	movf	?___lldiv,w
  4066  07B3  00A4               	movwf	___llmod@dividend
  4067  07B4  160A  158A  24AA  120A  118A  	fcall	___llmod
  4068  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  4069  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  4070  07BB  0820               	movf	?___llmod,w
  4071  07BC  3E30               	addlw	48
  4072  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  4073  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  4074  07BF  00AC               	movwf	(??_sprintf+1)^(0+128)
  4075  07C0  082C               	movf	(??_sprintf+1)^(0+128),w
  4076  07C1  00C8               	movwf	sprintf@c^(0+128)
  4077  07C2                     l3791:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4080  07C2  0848               	movf	sprintf@c^(0+128),w
  4081  07C3  00AB               	movwf	??_sprintf^(0+128)
  4082  07C4  0841               	movf	sprintf@sp^(0+128),w
  4083  07C5  0084               	movwf	4
  4084  07C6  082B               	movf	??_sprintf^(0+128),w
  4085  07C7  1383               	bcf	3,7	;select IRP bank0
  4086  07C8  0080               	movwf	0
  4087  07C9  2F68               	goto	l3787
  4088  07CA                     l3795:
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4091  07CA  30FF               	movlw	255
  4092  07CB  07C6               	addwf	sprintf@prec^(0+128),f
  4093  07CC  1803               	skipnc
  4094  07CD  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  4095  07CE  30FF               	movlw	255
  4096  07CF  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  4097  07D0  0A46               	incf	sprintf@prec^(0+128),w
  4098  07D1  1D03               	skipz
  4099  07D2  2FD7               	goto	u6211
  4100  07D3  0A47               	incf	(sprintf@prec+1)^(0+128),w
  4101  07D4  1D03               	btfss	3,2
  4102  07D5  2FD7               	goto	u6211
  4103  07D6  2FD8               	goto	u6210
  4104  07D7                     u6211:
  4105  07D7  2F6D               	goto	l3789
  4106  07D8                     u6210:
  4107  07D8                     l3797:
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4110  07D8  3001               	movlw	1
  4111  07D9  07A0               	addwf	sprintf@f^(0+128),f
  4112  07DA  30FF               	movlw	-1
  4113  07DB  0720               	addwf	sprintf@f^(0+128),w
  4114  07DC  0084               	movwf	4
  4115  07DD  160A  158A  200A  120A  118A  	fcall	stringdir
  4116  07E2  00AB               	movwf	??_sprintf^(0+128)
  4117  07E3  082B               	movf	??_sprintf^(0+128),w
  4118  07E4  00C8               	movwf	sprintf@c^(0+128)
  4119  07E5  0848               	movf	sprintf@c^(0+128),w
  4120  07E6  1D03               	btfss	3,2
  4121  07E7  2FE9               	goto	u6221
  4122  07E8  2FEA               	goto	u6220
  4123  07E9                     u6221:
  4124  07E9  2856               	goto	l3573
  4125  07EA                     u6220:
  4126  07EA                     l3799:
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4129  07EA  0841               	movf	sprintf@sp^(0+128),w
  4130  07EB  0084               	movwf	4
  4131  07EC  1383               	bcf	3,7	;select IRP bank0
  4132  07ED  0180               	clrf	0
  4133  07EE                     l400:
  4134  07EE  0008               	return
  4135  07EF                     __end_of_sprintf:
  4136                           
  4137                           	psect	text2
  4138  0940                     __ptext2:	
  4139 ;; *************** function _scale *****************
  4140 ;; Defined at:
  4141 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  scl             1    wreg     char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  scl             1   48[BANK0 ] char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  4   30[BANK0 ] char 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       4       0       0       0
  4156 ;;      Locals:         0       5       0       0       0
  4157 ;;      Temps:          0      10       0       0       0
  4158 ;;      Totals:         0      19       0       0       0
  4159 ;;Total ram usage:       19 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    2
  4162 ;; This function calls:
  4163 ;;		___awdiv
  4164 ;;		___awmod
  4165 ;;		___flmul
  4166 ;; This function is called by:
  4167 ;;		_sprintf
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function _scale
  4173  0940                     _scale:
  4174                           
  4175                           ;incstack = 0
  4176                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4177                           ;scale@scl stored from wreg
  4178  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0942  00D0               	movwf	scale@scl
  4181  0943                     l3037:
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4184  0943  1FD0               	btfss	scale@scl,7
  4185  0944  2946               	goto	u4511
  4186  0945  2947               	goto	u4510
  4187  0946                     u4511:
  4188  0946  2AF4               	goto	l3059
  4189  0947                     u4510:
  4190  0947                     l3039:
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4193  0947  09D0               	comf	scale@scl,f
  4194  0948  0AD0               	incf	scale@scl,f
  4195  0949                     l3041:
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4198  0949  0850               	movf	scale@scl,w
  4199  094A  3A80               	xorlw	128
  4200  094B  3E12               	addlw	-238
  4201  094C  1C03               	skipc
  4202  094D  294F               	goto	u4521
  4203  094E  2950               	goto	u4520
  4204  094F                     u4521:
  4205  094F  2A38               	goto	l3049
  4206  0950                     u4520:
  4207  0950                     l3043:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4210  0950  300A               	movlw	10
  4211  0951  00F7               	movwf	___awdiv@divisor
  4212  0952  3000               	movlw	0
  4213  0953  00F8               	movwf	___awdiv@divisor+1
  4214  0954  0850               	movf	scale@scl,w
  4215  0955  00F2               	movwf	___awmod@dividend
  4216  0956  01F3               	clrf	___awmod@dividend+1
  4217  0957  1BF2               	btfsc	___awmod@dividend,7
  4218  0958  03F3               	decf	___awmod@dividend+1,f
  4219  0959  3064               	movlw	100
  4220  095A  00F0               	movwf	___awmod@divisor
  4221  095B  3000               	movlw	0
  4222  095C  00F1               	movwf	___awmod@divisor+1
  4223  095D  160A  158A  2500  120A  158A  	fcall	___awmod
  4224  0962  0871               	movf	?___awmod+1,w
  4225  0963  00FA               	movwf	___awdiv@dividend+1
  4226  0964  0870               	movf	?___awmod,w
  4227  0965  00F9               	movwf	___awdiv@dividend
  4228  0966  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4229  096B  0877               	movf	?___awdiv,w
  4230  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4231  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4232  096E  00C2               	movwf	??_scale
  4233  096F  3001               	movlw	1
  4234  0970                     u4535:
  4235  0970  1003               	clrc
  4236  0971  0DC2               	rlf	??_scale,f
  4237  0972  3EFF               	addlw	-1
  4238  0973  1D03               	skipz
  4239  0974  2970               	goto	u4535
  4240  0975  1003               	clrc
  4241  0976  0D42               	rlf	??_scale,w
  4242  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4243  0978  0084               	movwf	4
  4244  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  4245  097E  00C3               	movwf	??_scale+1
  4246  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  4247  0984  00C4               	movwf	??_scale+2
  4248  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  4249  098A  00C5               	movwf	??_scale+3
  4250  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  4251  0990  00C6               	movwf	??_scale+4
  4252  0991  0846               	movf	??_scale+4,w
  4253  0992  00A7               	movwf	___flmul@b+3
  4254  0993  0845               	movf	??_scale+3,w
  4255  0994  00A6               	movwf	___flmul@b+2
  4256  0995  0844               	movf	??_scale+2,w
  4257  0996  00A5               	movwf	___flmul@b+1
  4258  0997  0843               	movf	??_scale+1,w
  4259  0998  00A4               	movwf	___flmul@b
  4260  0999  3064               	movlw	100
  4261  099A  00F7               	movwf	___awdiv@divisor
  4262  099B  3000               	movlw	0
  4263  099C  00F8               	movwf	___awdiv@divisor+1
  4264  099D  0850               	movf	scale@scl,w
  4265  099E  00F9               	movwf	___awdiv@dividend
  4266  099F  01FA               	clrf	___awdiv@dividend+1
  4267  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4268  09A1  03FA               	decf	___awdiv@dividend+1,f
  4269  09A2  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4270  09A7  0877               	movf	?___awdiv,w
  4271  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4272  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4273  09AA  00C7               	movwf	??_scale+5
  4274  09AB  3001               	movlw	1
  4275  09AC                     u4545:
  4276  09AC  1003               	clrc
  4277  09AD  0DC7               	rlf	??_scale+5,f
  4278  09AE  3EFF               	addlw	-1
  4279  09AF  1D03               	skipz
  4280  09B0  29AC               	goto	u4545
  4281  09B1  1003               	clrc
  4282  09B2  0D47               	rlf	??_scale+5,w
  4283  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4284  09B4  0084               	movwf	4
  4285  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  4286  09BA  00C8               	movwf	??_scale+6
  4287  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  4288  09C0  00C9               	movwf	??_scale+7
  4289  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  4290  09C6  00CA               	movwf	??_scale+8
  4291  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  4292  09CC  00CB               	movwf	??_scale+9
  4293  09CD  084B               	movf	??_scale+9,w
  4294  09CE  00AB               	movwf	___flmul@a+3
  4295  09CF  084A               	movf	??_scale+8,w
  4296  09D0  00AA               	movwf	___flmul@a+2
  4297  09D1  0849               	movf	??_scale+7,w
  4298  09D2  00A9               	movwf	___flmul@a+1
  4299  09D3  0848               	movf	??_scale+6,w
  4300  09D4  00A8               	movwf	___flmul@a
  4301  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4302  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4303  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4304  09DC  0827               	movf	?___flmul+3,w
  4305  09DD  00CF               	movwf	_scale$1318+3
  4306  09DE  0826               	movf	?___flmul+2,w
  4307  09DF  00CE               	movwf	_scale$1318+2
  4308  09E0  0825               	movf	?___flmul+1,w
  4309  09E1  00CD               	movwf	_scale$1318+1
  4310  09E2  0824               	movf	?___flmul,w
  4311  09E3  00CC               	movwf	_scale$1318
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4314  09E4  300A               	movlw	10
  4315  09E5  00F0               	movwf	___awmod@divisor
  4316  09E6  3000               	movlw	0
  4317  09E7  00F1               	movwf	___awmod@divisor+1
  4318  09E8  0850               	movf	scale@scl,w
  4319  09E9  00F2               	movwf	___awmod@dividend
  4320  09EA  01F3               	clrf	___awmod@dividend+1
  4321  09EB  1BF2               	btfsc	___awmod@dividend,7
  4322  09EC  03F3               	decf	___awmod@dividend+1,f
  4323  09ED  160A  158A  2500  120A  158A  	fcall	___awmod
  4324  09F2  0870               	movf	?___awmod,w
  4325  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4326  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4327  09F5  00C2               	movwf	??_scale
  4328  09F6  3001               	movlw	1
  4329  09F7                     u4555:
  4330  09F7  1003               	clrc
  4331  09F8  0DC2               	rlf	??_scale,f
  4332  09F9  3EFF               	addlw	-1
  4333  09FA  1D03               	skipz
  4334  09FB  29F7               	goto	u4555
  4335  09FC  1003               	clrc
  4336  09FD  0D42               	rlf	??_scale,w
  4337  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4338  09FF  0084               	movwf	4
  4339  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  4340  0A05  00C3               	movwf	??_scale+1
  4341  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  4342  0A0B  00C4               	movwf	??_scale+2
  4343  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4344  0A11  00C5               	movwf	??_scale+3
  4345  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  4346  0A17  00C6               	movwf	??_scale+4
  4347  0A18  0846               	movf	??_scale+4,w
  4348  0A19  00A7               	movwf	___flmul@b+3
  4349  0A1A  0845               	movf	??_scale+3,w
  4350  0A1B  00A6               	movwf	___flmul@b+2
  4351  0A1C  0844               	movf	??_scale+2,w
  4352  0A1D  00A5               	movwf	___flmul@b+1
  4353  0A1E  0843               	movf	??_scale+1,w
  4354  0A1F  00A4               	movwf	___flmul@b
  4355  0A20  084F               	movf	_scale$1318+3,w
  4356  0A21  00AB               	movwf	___flmul@a+3
  4357  0A22  084E               	movf	_scale$1318+2,w
  4358  0A23  00AA               	movwf	___flmul@a+2
  4359  0A24  084D               	movf	_scale$1318+1,w
  4360  0A25  00A9               	movwf	___flmul@a+1
  4361  0A26  084C               	movf	_scale$1318,w
  4362  0A27  00A8               	movwf	___flmul@a
  4363  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4364  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0A2F  0827               	movf	?___flmul+3,w
  4367  0A30  00C1               	movwf	?_scale+3
  4368  0A31  0826               	movf	?___flmul+2,w
  4369  0A32  00C0               	movwf	?_scale+2
  4370  0A33  0825               	movf	?___flmul+1,w
  4371  0A34  00BF               	movwf	?_scale+1
  4372  0A35  0824               	movf	?___flmul,w
  4373  0A36  00BE               	movwf	?_scale
  4374  0A37  2C9E               	goto	l325
  4375  0A38                     l3049:
  4376  0A38  0850               	movf	scale@scl,w
  4377  0A39  3A80               	xorlw	128
  4378  0A3A  3E75               	addlw	-139
  4379  0A3B  1C03               	skipc
  4380  0A3C  2A3E               	goto	u4561
  4381  0A3D  2A3F               	goto	u4560
  4382  0A3E                     u4561:
  4383  0A3E  2AC7               	goto	l3055
  4384  0A3F                     u4560:
  4385  0A3F                     l3051:
  4386                           
  4387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4388  0A3F  300A               	movlw	10
  4389  0A40  00F0               	movwf	___awmod@divisor
  4390  0A41  3000               	movlw	0
  4391  0A42  00F1               	movwf	___awmod@divisor+1
  4392  0A43  0850               	movf	scale@scl,w
  4393  0A44  00F2               	movwf	___awmod@dividend
  4394  0A45  01F3               	clrf	___awmod@dividend+1
  4395  0A46  1BF2               	btfsc	___awmod@dividend,7
  4396  0A47  03F3               	decf	___awmod@dividend+1,f
  4397  0A48  160A  158A  2500  120A  158A  	fcall	___awmod
  4398  0A4D  0870               	movf	?___awmod,w
  4399  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0A50  00C2               	movwf	??_scale
  4402  0A51  3001               	movlw	1
  4403  0A52                     u4575:
  4404  0A52  1003               	clrc
  4405  0A53  0DC2               	rlf	??_scale,f
  4406  0A54  3EFF               	addlw	-1
  4407  0A55  1D03               	skipz
  4408  0A56  2A52               	goto	u4575
  4409  0A57  1003               	clrc
  4410  0A58  0D42               	rlf	??_scale,w
  4411  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4412  0A5A  0084               	movwf	4
  4413  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  4414  0A60  00C3               	movwf	??_scale+1
  4415  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  4416  0A66  00C4               	movwf	??_scale+2
  4417  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  4418  0A6C  00C5               	movwf	??_scale+3
  4419  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4420  0A72  00C6               	movwf	??_scale+4
  4421  0A73  0846               	movf	??_scale+4,w
  4422  0A74  00A7               	movwf	___flmul@b+3
  4423  0A75  0845               	movf	??_scale+3,w
  4424  0A76  00A6               	movwf	___flmul@b+2
  4425  0A77  0844               	movf	??_scale+2,w
  4426  0A78  00A5               	movwf	___flmul@b+1
  4427  0A79  0843               	movf	??_scale+1,w
  4428  0A7A  00A4               	movwf	___flmul@b
  4429  0A7B  300A               	movlw	10
  4430  0A7C  00F7               	movwf	___awdiv@divisor
  4431  0A7D  3000               	movlw	0
  4432  0A7E  00F8               	movwf	___awdiv@divisor+1
  4433  0A7F  0850               	movf	scale@scl,w
  4434  0A80  00F9               	movwf	___awdiv@dividend
  4435  0A81  01FA               	clrf	___awdiv@dividend+1
  4436  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4437  0A83  03FA               	decf	___awdiv@dividend+1,f
  4438  0A84  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4439  0A89  0877               	movf	?___awdiv,w
  4440  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0A8C  00C7               	movwf	??_scale+5
  4443  0A8D  3001               	movlw	1
  4444  0A8E                     u4585:
  4445  0A8E  1003               	clrc
  4446  0A8F  0DC7               	rlf	??_scale+5,f
  4447  0A90  3EFF               	addlw	-1
  4448  0A91  1D03               	skipz
  4449  0A92  2A8E               	goto	u4585
  4450  0A93  1003               	clrc
  4451  0A94  0D47               	rlf	??_scale+5,w
  4452  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4453  0A96  0084               	movwf	4
  4454  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  4455  0A9C  00C8               	movwf	??_scale+6
  4456  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  4457  0AA2  00C9               	movwf	??_scale+7
  4458  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4459  0AA8  00CA               	movwf	??_scale+8
  4460  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4461  0AAE  00CB               	movwf	??_scale+9
  4462  0AAF  084B               	movf	??_scale+9,w
  4463  0AB0  00AB               	movwf	___flmul@a+3
  4464  0AB1  084A               	movf	??_scale+8,w
  4465  0AB2  00AA               	movwf	___flmul@a+2
  4466  0AB3  0849               	movf	??_scale+7,w
  4467  0AB4  00A9               	movwf	___flmul@a+1
  4468  0AB5  0848               	movf	??_scale+6,w
  4469  0AB6  00A8               	movwf	___flmul@a
  4470  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4471  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0ABE  0827               	movf	?___flmul+3,w
  4474  0ABF  00C1               	movwf	?_scale+3
  4475  0AC0  0826               	movf	?___flmul+2,w
  4476  0AC1  00C0               	movwf	?_scale+2
  4477  0AC2  0825               	movf	?___flmul+1,w
  4478  0AC3  00BF               	movwf	?_scale+1
  4479  0AC4  0824               	movf	?___flmul,w
  4480  0AC5  00BE               	movwf	?_scale
  4481  0AC6  2C9E               	goto	l325
  4482  0AC7                     l3055:
  4483                           
  4484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4485  0AC7  0850               	movf	scale@scl,w
  4486  0AC8  00C2               	movwf	??_scale
  4487  0AC9  3001               	movlw	1
  4488  0ACA                     u4595:
  4489  0ACA  1003               	clrc
  4490  0ACB  0DC2               	rlf	??_scale,f
  4491  0ACC  3EFF               	addlw	-1
  4492  0ACD  1D03               	skipz
  4493  0ACE  2ACA               	goto	u4595
  4494  0ACF  1003               	clrc
  4495  0AD0  0D42               	rlf	??_scale,w
  4496  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4497  0AD2  0084               	movwf	4
  4498  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  4499  0AD8  00C3               	movwf	??_scale+1
  4500  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  4501  0ADE  00C4               	movwf	??_scale+2
  4502  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  4503  0AE4  00C5               	movwf	??_scale+3
  4504  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4505  0AEA  00C6               	movwf	??_scale+4
  4506  0AEB  0846               	movf	??_scale+4,w
  4507  0AEC  00C1               	movwf	?_scale+3
  4508  0AED  0845               	movf	??_scale+3,w
  4509  0AEE  00C0               	movwf	?_scale+2
  4510  0AEF  0844               	movf	??_scale+2,w
  4511  0AF0  00BF               	movwf	?_scale+1
  4512  0AF1  0843               	movf	??_scale+1,w
  4513  0AF2  00BE               	movwf	?_scale
  4514  0AF3  2C9E               	goto	l325
  4515  0AF4                     l3059:
  4516                           
  4517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4518  0AF4  0850               	movf	scale@scl,w
  4519  0AF5  3A80               	xorlw	128
  4520  0AF6  3E12               	addlw	-238
  4521  0AF7  1C03               	skipc
  4522  0AF8  2AFA               	goto	u4601
  4523  0AF9  2AFB               	goto	u4600
  4524  0AFA                     u4601:
  4525  0AFA  2BE3               	goto	l3067
  4526  0AFB                     u4600:
  4527  0AFB                     l3061:
  4528                           
  4529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4530  0AFB  300A               	movlw	10
  4531  0AFC  00F7               	movwf	___awdiv@divisor
  4532  0AFD  3000               	movlw	0
  4533  0AFE  00F8               	movwf	___awdiv@divisor+1
  4534  0AFF  0850               	movf	scale@scl,w
  4535  0B00  00F2               	movwf	___awmod@dividend
  4536  0B01  01F3               	clrf	___awmod@dividend+1
  4537  0B02  1BF2               	btfsc	___awmod@dividend,7
  4538  0B03  03F3               	decf	___awmod@dividend+1,f
  4539  0B04  3064               	movlw	100
  4540  0B05  00F0               	movwf	___awmod@divisor
  4541  0B06  3000               	movlw	0
  4542  0B07  00F1               	movwf	___awmod@divisor+1
  4543  0B08  160A  158A  2500  120A  158A  	fcall	___awmod
  4544  0B0D  0871               	movf	?___awmod+1,w
  4545  0B0E  00FA               	movwf	___awdiv@dividend+1
  4546  0B0F  0870               	movf	?___awmod,w
  4547  0B10  00F9               	movwf	___awdiv@dividend
  4548  0B11  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4549  0B16  0877               	movf	?___awdiv,w
  4550  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0B19  00C2               	movwf	??_scale
  4553  0B1A  3001               	movlw	1
  4554  0B1B                     u4615:
  4555  0B1B  1003               	clrc
  4556  0B1C  0DC2               	rlf	??_scale,f
  4557  0B1D  3EFF               	addlw	-1
  4558  0B1E  1D03               	skipz
  4559  0B1F  2B1B               	goto	u4615
  4560  0B20  1003               	clrc
  4561  0B21  0D42               	rlf	??_scale,w
  4562  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4563  0B23  0084               	movwf	4
  4564  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  4565  0B29  00C3               	movwf	??_scale+1
  4566  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  4567  0B2F  00C4               	movwf	??_scale+2
  4568  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  4569  0B35  00C5               	movwf	??_scale+3
  4570  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  4571  0B3B  00C6               	movwf	??_scale+4
  4572  0B3C  0846               	movf	??_scale+4,w
  4573  0B3D  00A7               	movwf	___flmul@b+3
  4574  0B3E  0845               	movf	??_scale+3,w
  4575  0B3F  00A6               	movwf	___flmul@b+2
  4576  0B40  0844               	movf	??_scale+2,w
  4577  0B41  00A5               	movwf	___flmul@b+1
  4578  0B42  0843               	movf	??_scale+1,w
  4579  0B43  00A4               	movwf	___flmul@b
  4580  0B44  3064               	movlw	100
  4581  0B45  00F7               	movwf	___awdiv@divisor
  4582  0B46  3000               	movlw	0
  4583  0B47  00F8               	movwf	___awdiv@divisor+1
  4584  0B48  0850               	movf	scale@scl,w
  4585  0B49  00F9               	movwf	___awdiv@dividend
  4586  0B4A  01FA               	clrf	___awdiv@dividend+1
  4587  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4588  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4589  0B4D  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4590  0B52  0877               	movf	?___awdiv,w
  4591  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4592  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4593  0B55  00C7               	movwf	??_scale+5
  4594  0B56  3001               	movlw	1
  4595  0B57                     u4625:
  4596  0B57  1003               	clrc
  4597  0B58  0DC7               	rlf	??_scale+5,f
  4598  0B59  3EFF               	addlw	-1
  4599  0B5A  1D03               	skipz
  4600  0B5B  2B57               	goto	u4625
  4601  0B5C  1003               	clrc
  4602  0B5D  0D47               	rlf	??_scale+5,w
  4603  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4604  0B5F  0084               	movwf	4
  4605  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  4606  0B65  00C8               	movwf	??_scale+6
  4607  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  4608  0B6B  00C9               	movwf	??_scale+7
  4609  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  4610  0B71  00CA               	movwf	??_scale+8
  4611  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  4612  0B77  00CB               	movwf	??_scale+9
  4613  0B78  084B               	movf	??_scale+9,w
  4614  0B79  00AB               	movwf	___flmul@a+3
  4615  0B7A  084A               	movf	??_scale+8,w
  4616  0B7B  00AA               	movwf	___flmul@a+2
  4617  0B7C  0849               	movf	??_scale+7,w
  4618  0B7D  00A9               	movwf	___flmul@a+1
  4619  0B7E  0848               	movf	??_scale+6,w
  4620  0B7F  00A8               	movwf	___flmul@a
  4621  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4622  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4623  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4624  0B87  0827               	movf	?___flmul+3,w
  4625  0B88  00CF               	movwf	_scale$1318+3
  4626  0B89  0826               	movf	?___flmul+2,w
  4627  0B8A  00CE               	movwf	_scale$1318+2
  4628  0B8B  0825               	movf	?___flmul+1,w
  4629  0B8C  00CD               	movwf	_scale$1318+1
  4630  0B8D  0824               	movf	?___flmul,w
  4631  0B8E  00CC               	movwf	_scale$1318
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4634  0B8F  300A               	movlw	10
  4635  0B90  00F0               	movwf	___awmod@divisor
  4636  0B91  3000               	movlw	0
  4637  0B92  00F1               	movwf	___awmod@divisor+1
  4638  0B93  0850               	movf	scale@scl,w
  4639  0B94  00F2               	movwf	___awmod@dividend
  4640  0B95  01F3               	clrf	___awmod@dividend+1
  4641  0B96  1BF2               	btfsc	___awmod@dividend,7
  4642  0B97  03F3               	decf	___awmod@dividend+1,f
  4643  0B98  160A  158A  2500  120A  158A  	fcall	___awmod
  4644  0B9D  0870               	movf	?___awmod,w
  4645  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4646  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4647  0BA0  00C2               	movwf	??_scale
  4648  0BA1  3001               	movlw	1
  4649  0BA2                     u4635:
  4650  0BA2  1003               	clrc
  4651  0BA3  0DC2               	rlf	??_scale,f
  4652  0BA4  3EFF               	addlw	-1
  4653  0BA5  1D03               	skipz
  4654  0BA6  2BA2               	goto	u4635
  4655  0BA7  1003               	clrc
  4656  0BA8  0D42               	rlf	??_scale,w
  4657  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4658  0BAA  0084               	movwf	4
  4659  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  4660  0BB0  00C3               	movwf	??_scale+1
  4661  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  4662  0BB6  00C4               	movwf	??_scale+2
  4663  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  4664  0BBC  00C5               	movwf	??_scale+3
  4665  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  4666  0BC2  00C6               	movwf	??_scale+4
  4667  0BC3  0846               	movf	??_scale+4,w
  4668  0BC4  00A7               	movwf	___flmul@b+3
  4669  0BC5  0845               	movf	??_scale+3,w
  4670  0BC6  00A6               	movwf	___flmul@b+2
  4671  0BC7  0844               	movf	??_scale+2,w
  4672  0BC8  00A5               	movwf	___flmul@b+1
  4673  0BC9  0843               	movf	??_scale+1,w
  4674  0BCA  00A4               	movwf	___flmul@b
  4675  0BCB  084F               	movf	_scale$1318+3,w
  4676  0BCC  00AB               	movwf	___flmul@a+3
  4677  0BCD  084E               	movf	_scale$1318+2,w
  4678  0BCE  00AA               	movwf	___flmul@a+2
  4679  0BCF  084D               	movf	_scale$1318+1,w
  4680  0BD0  00A9               	movwf	___flmul@a+1
  4681  0BD1  084C               	movf	_scale$1318,w
  4682  0BD2  00A8               	movwf	___flmul@a
  4683  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4684  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4686  0BDA  0827               	movf	?___flmul+3,w
  4687  0BDB  00C1               	movwf	?_scale+3
  4688  0BDC  0826               	movf	?___flmul+2,w
  4689  0BDD  00C0               	movwf	?_scale+2
  4690  0BDE  0825               	movf	?___flmul+1,w
  4691  0BDF  00BF               	movwf	?_scale+1
  4692  0BE0  0824               	movf	?___flmul,w
  4693  0BE1  00BE               	movwf	?_scale
  4694  0BE2  2C9E               	goto	l325
  4695  0BE3                     l3067:
  4696  0BE3  0850               	movf	scale@scl,w
  4697  0BE4  3A80               	xorlw	128
  4698  0BE5  3E75               	addlw	-139
  4699  0BE6  1C03               	skipc
  4700  0BE7  2BE9               	goto	u4641
  4701  0BE8  2BEA               	goto	u4640
  4702  0BE9                     u4641:
  4703  0BE9  2C72               	goto	l3073
  4704  0BEA                     u4640:
  4705  0BEA                     l3069:
  4706                           
  4707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4708  0BEA  300A               	movlw	10
  4709  0BEB  00F0               	movwf	___awmod@divisor
  4710  0BEC  3000               	movlw	0
  4711  0BED  00F1               	movwf	___awmod@divisor+1
  4712  0BEE  0850               	movf	scale@scl,w
  4713  0BEF  00F2               	movwf	___awmod@dividend
  4714  0BF0  01F3               	clrf	___awmod@dividend+1
  4715  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4716  0BF2  03F3               	decf	___awmod@dividend+1,f
  4717  0BF3  160A  158A  2500  120A  158A  	fcall	___awmod
  4718  0BF8  0870               	movf	?___awmod,w
  4719  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4720  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4721  0BFB  00C2               	movwf	??_scale
  4722  0BFC  3001               	movlw	1
  4723  0BFD                     u4655:
  4724  0BFD  1003               	clrc
  4725  0BFE  0DC2               	rlf	??_scale,f
  4726  0BFF  3EFF               	addlw	-1
  4727  0C00  1D03               	skipz
  4728  0C01  2BFD               	goto	u4655
  4729  0C02  1003               	clrc
  4730  0C03  0D42               	rlf	??_scale,w
  4731  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4732  0C05  0084               	movwf	4
  4733  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  4734  0C0B  00C3               	movwf	??_scale+1
  4735  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4736  0C11  00C4               	movwf	??_scale+2
  4737  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  4738  0C17  00C5               	movwf	??_scale+3
  4739  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  4740  0C1D  00C6               	movwf	??_scale+4
  4741  0C1E  0846               	movf	??_scale+4,w
  4742  0C1F  00A7               	movwf	___flmul@b+3
  4743  0C20  0845               	movf	??_scale+3,w
  4744  0C21  00A6               	movwf	___flmul@b+2
  4745  0C22  0844               	movf	??_scale+2,w
  4746  0C23  00A5               	movwf	___flmul@b+1
  4747  0C24  0843               	movf	??_scale+1,w
  4748  0C25  00A4               	movwf	___flmul@b
  4749  0C26  300A               	movlw	10
  4750  0C27  00F7               	movwf	___awdiv@divisor
  4751  0C28  3000               	movlw	0
  4752  0C29  00F8               	movwf	___awdiv@divisor+1
  4753  0C2A  0850               	movf	scale@scl,w
  4754  0C2B  00F9               	movwf	___awdiv@dividend
  4755  0C2C  01FA               	clrf	___awdiv@dividend+1
  4756  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4757  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4758  0C2F  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4759  0C34  0877               	movf	?___awdiv,w
  4760  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0C37  00C7               	movwf	??_scale+5
  4763  0C38  3001               	movlw	1
  4764  0C39                     u4665:
  4765  0C39  1003               	clrc
  4766  0C3A  0DC7               	rlf	??_scale+5,f
  4767  0C3B  3EFF               	addlw	-1
  4768  0C3C  1D03               	skipz
  4769  0C3D  2C39               	goto	u4665
  4770  0C3E  1003               	clrc
  4771  0C3F  0D47               	rlf	??_scale+5,w
  4772  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4773  0C41  0084               	movwf	4
  4774  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  4775  0C47  00C8               	movwf	??_scale+6
  4776  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  4777  0C4D  00C9               	movwf	??_scale+7
  4778  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  4779  0C53  00CA               	movwf	??_scale+8
  4780  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  4781  0C59  00CB               	movwf	??_scale+9
  4782  0C5A  084B               	movf	??_scale+9,w
  4783  0C5B  00AB               	movwf	___flmul@a+3
  4784  0C5C  084A               	movf	??_scale+8,w
  4785  0C5D  00AA               	movwf	___flmul@a+2
  4786  0C5E  0849               	movf	??_scale+7,w
  4787  0C5F  00A9               	movwf	___flmul@a+1
  4788  0C60  0848               	movf	??_scale+6,w
  4789  0C61  00A8               	movwf	___flmul@a
  4790  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4791  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0C69  0827               	movf	?___flmul+3,w
  4794  0C6A  00C1               	movwf	?_scale+3
  4795  0C6B  0826               	movf	?___flmul+2,w
  4796  0C6C  00C0               	movwf	?_scale+2
  4797  0C6D  0825               	movf	?___flmul+1,w
  4798  0C6E  00BF               	movwf	?_scale+1
  4799  0C6F  0824               	movf	?___flmul,w
  4800  0C70  00BE               	movwf	?_scale
  4801  0C71  2C9E               	goto	l325
  4802  0C72                     l3073:
  4803                           
  4804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4805  0C72  0850               	movf	scale@scl,w
  4806  0C73  00C2               	movwf	??_scale
  4807  0C74  3001               	movlw	1
  4808  0C75                     u4675:
  4809  0C75  1003               	clrc
  4810  0C76  0DC2               	rlf	??_scale,f
  4811  0C77  3EFF               	addlw	-1
  4812  0C78  1D03               	skipz
  4813  0C79  2C75               	goto	u4675
  4814  0C7A  1003               	clrc
  4815  0C7B  0D42               	rlf	??_scale,w
  4816  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4817  0C7D  0084               	movwf	4
  4818  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  4819  0C83  00C3               	movwf	??_scale+1
  4820  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  4821  0C89  00C4               	movwf	??_scale+2
  4822  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  4823  0C8F  00C5               	movwf	??_scale+3
  4824  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  4825  0C95  00C6               	movwf	??_scale+4
  4826  0C96  0846               	movf	??_scale+4,w
  4827  0C97  00C1               	movwf	?_scale+3
  4828  0C98  0845               	movf	??_scale+3,w
  4829  0C99  00C0               	movwf	?_scale+2
  4830  0C9A  0844               	movf	??_scale+2,w
  4831  0C9B  00BF               	movwf	?_scale+1
  4832  0C9C  0843               	movf	??_scale+1,w
  4833  0C9D  00BE               	movwf	?_scale
  4834  0C9E                     l325:
  4835  0C9E  0008               	return
  4836  0C9F                     __end_of_scale:
  4837                           
  4838                           	psect	text3
  4839  1D00                     __ptext3:	
  4840 ;; *************** function ___awmod *****************
  4841 ;; Defined at:
  4842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  divisor         2    0[COMMON] int 
  4845 ;;  dividend        2    2[COMMON] int 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  sign            1    6[COMMON] unsigned char 
  4848 ;;  counter         1    5[COMMON] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  2    0[COMMON] int 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4858 ;;      Params:         4       0       0       0       0
  4859 ;;      Locals:         2       0       0       0       0
  4860 ;;      Temps:          1       0       0       0       0
  4861 ;;      Totals:         7       0       0       0       0
  4862 ;;Total ram usage:        7 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_scale
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           
  4872                           ;psect for function ___awmod
  4873  1D00                     ___awmod:
  4874  1D00                     l2575:	
  4875                           ;incstack = 0
  4876                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4877                           
  4878  1D00  01F6               	clrf	___awmod@sign
  4879  1D01                     l2577:
  4880  1D01  1FF3               	btfss	___awmod@dividend+1,7
  4881  1D02  2D04               	goto	u3361
  4882  1D03  2D05               	goto	u3360
  4883  1D04                     u3361:
  4884  1D04  2D0C               	goto	l2583
  4885  1D05                     u3360:
  4886  1D05                     l2579:
  4887  1D05  09F2               	comf	___awmod@dividend,f
  4888  1D06  09F3               	comf	___awmod@dividend+1,f
  4889  1D07  0AF2               	incf	___awmod@dividend,f
  4890  1D08  1903               	skipnz
  4891  1D09  0AF3               	incf	___awmod@dividend+1,f
  4892  1D0A                     l2581:
  4893  1D0A  01F6               	clrf	___awmod@sign
  4894  1D0B  0AF6               	incf	___awmod@sign,f
  4895  1D0C                     l2583:
  4896  1D0C  1FF1               	btfss	___awmod@divisor+1,7
  4897  1D0D  2D0F               	goto	u3371
  4898  1D0E  2D10               	goto	u3370
  4899  1D0F                     u3371:
  4900  1D0F  2D15               	goto	l2587
  4901  1D10                     u3370:
  4902  1D10                     l2585:
  4903  1D10  09F0               	comf	___awmod@divisor,f
  4904  1D11  09F1               	comf	___awmod@divisor+1,f
  4905  1D12  0AF0               	incf	___awmod@divisor,f
  4906  1D13  1903               	skipnz
  4907  1D14  0AF1               	incf	___awmod@divisor+1,f
  4908  1D15                     l2587:
  4909  1D15  0870               	movf	___awmod@divisor,w
  4910  1D16  0471               	iorwf	___awmod@divisor+1,w
  4911  1D17  1903               	btfsc	3,2
  4912  1D18  2D1A               	goto	u3381
  4913  1D19  2D1B               	goto	u3380
  4914  1D1A                     u3381:
  4915  1D1A  2D4A               	goto	l2605
  4916  1D1B                     u3380:
  4917  1D1B                     l2589:
  4918  1D1B  01F5               	clrf	___awmod@counter
  4919  1D1C  0AF5               	incf	___awmod@counter,f
  4920  1D1D  2D29               	goto	l2595
  4921  1D1E                     l2591:
  4922  1D1E  3001               	movlw	1
  4923  1D1F                     u3395:
  4924  1D1F  1003               	clrc
  4925  1D20  0DF0               	rlf	___awmod@divisor,f
  4926  1D21  0DF1               	rlf	___awmod@divisor+1,f
  4927  1D22  3EFF               	addlw	-1
  4928  1D23  1D03               	skipz
  4929  1D24  2D1F               	goto	u3395
  4930  1D25                     l2593:
  4931  1D25  3001               	movlw	1
  4932  1D26  00F4               	movwf	??___awmod
  4933  1D27  0874               	movf	??___awmod,w
  4934  1D28  07F5               	addwf	___awmod@counter,f
  4935  1D29                     l2595:
  4936  1D29  1FF1               	btfss	___awmod@divisor+1,7
  4937  1D2A  2D2C               	goto	u3401
  4938  1D2B  2D2D               	goto	u3400
  4939  1D2C                     u3401:
  4940  1D2C  2D1E               	goto	l2591
  4941  1D2D                     u3400:
  4942  1D2D                     l2597:
  4943  1D2D  0871               	movf	___awmod@divisor+1,w
  4944  1D2E  0273               	subwf	___awmod@dividend+1,w
  4945  1D2F  1D03               	skipz
  4946  1D30  2D33               	goto	u3415
  4947  1D31  0870               	movf	___awmod@divisor,w
  4948  1D32  0272               	subwf	___awmod@dividend,w
  4949  1D33                     u3415:
  4950  1D33  1C03               	skipc
  4951  1D34  2D36               	goto	u3411
  4952  1D35  2D37               	goto	u3410
  4953  1D36                     u3411:
  4954  1D36  2D3D               	goto	l2601
  4955  1D37                     u3410:
  4956  1D37                     l2599:
  4957  1D37  0870               	movf	___awmod@divisor,w
  4958  1D38  02F2               	subwf	___awmod@dividend,f
  4959  1D39  0871               	movf	___awmod@divisor+1,w
  4960  1D3A  1C03               	skipc
  4961  1D3B  03F3               	decf	___awmod@dividend+1,f
  4962  1D3C  02F3               	subwf	___awmod@dividend+1,f
  4963  1D3D                     l2601:
  4964  1D3D  3001               	movlw	1
  4965  1D3E                     u3425:
  4966  1D3E  1003               	clrc
  4967  1D3F  0CF1               	rrf	___awmod@divisor+1,f
  4968  1D40  0CF0               	rrf	___awmod@divisor,f
  4969  1D41  3EFF               	addlw	-1
  4970  1D42  1D03               	skipz
  4971  1D43  2D3E               	goto	u3425
  4972  1D44                     l2603:
  4973  1D44  3001               	movlw	1
  4974  1D45  02F5               	subwf	___awmod@counter,f
  4975  1D46  1D03               	btfss	3,2
  4976  1D47  2D49               	goto	u3431
  4977  1D48  2D4A               	goto	u3430
  4978  1D49                     u3431:
  4979  1D49  2D2D               	goto	l2597
  4980  1D4A                     u3430:
  4981  1D4A                     l2605:
  4982  1D4A  0876               	movf	___awmod@sign,w
  4983  1D4B  1903               	btfsc	3,2
  4984  1D4C  2D4E               	goto	u3441
  4985  1D4D  2D4F               	goto	u3440
  4986  1D4E                     u3441:
  4987  1D4E  2D54               	goto	l2609
  4988  1D4F                     u3440:
  4989  1D4F                     l2607:
  4990  1D4F  09F2               	comf	___awmod@dividend,f
  4991  1D50  09F3               	comf	___awmod@dividend+1,f
  4992  1D51  0AF2               	incf	___awmod@dividend,f
  4993  1D52  1903               	skipnz
  4994  1D53  0AF3               	incf	___awmod@dividend+1,f
  4995  1D54                     l2609:
  4996  1D54  0873               	movf	___awmod@dividend+1,w
  4997  1D55  00F1               	movwf	?___awmod+1
  4998  1D56  0872               	movf	___awmod@dividend,w
  4999  1D57  00F0               	movwf	?___awmod
  5000  1D58                     l570:
  5001  1D58  0008               	return
  5002  1D59                     __end_of___awmod:
  5003                           
  5004                           	psect	text4
  5005  1DBF                     __ptext4:	
  5006 ;; *************** function ___awdiv *****************
  5007 ;; Defined at:
  5008 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  divisor         2    7[COMMON] int 
  5011 ;;  dividend        2    9[COMMON] int 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  quotient        2    2[BANK0 ] int 
  5014 ;;  sign            1    1[BANK0 ] unsigned char 
  5015 ;;  counter         1    0[BANK0 ] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  2    7[COMMON] int 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5025 ;;      Params:         4       0       0       0       0
  5026 ;;      Locals:         0       4       0       0       0
  5027 ;;      Temps:          1       0       0       0       0
  5028 ;;      Totals:         5       4       0       0       0
  5029 ;;Total ram usage:        9 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_scale
  5035 ;;		_sprintf
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           
  5040                           ;psect for function ___awdiv
  5041  1DBF                     ___awdiv:
  5042  1DBF                     l2531:	
  5043                           ;incstack = 0
  5044                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5045                           
  5046  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  5047  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  5048  1DC1  01A1               	clrf	___awdiv@sign
  5049  1DC2                     l2533:
  5050  1DC2  1FF8               	btfss	___awdiv@divisor+1,7
  5051  1DC3  2DC5               	goto	u3261
  5052  1DC4  2DC6               	goto	u3260
  5053  1DC5                     u3261:
  5054  1DC5  2DCD               	goto	l2539
  5055  1DC6                     u3260:
  5056  1DC6                     l2535:
  5057  1DC6  09F7               	comf	___awdiv@divisor,f
  5058  1DC7  09F8               	comf	___awdiv@divisor+1,f
  5059  1DC8  0AF7               	incf	___awdiv@divisor,f
  5060  1DC9  1903               	skipnz
  5061  1DCA  0AF8               	incf	___awdiv@divisor+1,f
  5062  1DCB                     l2537:
  5063  1DCB  01A1               	clrf	___awdiv@sign
  5064  1DCC  0AA1               	incf	___awdiv@sign,f
  5065  1DCD                     l2539:
  5066  1DCD  1FFA               	btfss	___awdiv@dividend+1,7
  5067  1DCE  2DD0               	goto	u3271
  5068  1DCF  2DD1               	goto	u3270
  5069  1DD0                     u3271:
  5070  1DD0  2DDA               	goto	l2545
  5071  1DD1                     u3270:
  5072  1DD1                     l2541:
  5073  1DD1  09F9               	comf	___awdiv@dividend,f
  5074  1DD2  09FA               	comf	___awdiv@dividend+1,f
  5075  1DD3  0AF9               	incf	___awdiv@dividend,f
  5076  1DD4  1903               	skipnz
  5077  1DD5  0AFA               	incf	___awdiv@dividend+1,f
  5078  1DD6                     l2543:
  5079  1DD6  3001               	movlw	1
  5080  1DD7  00FB               	movwf	??___awdiv
  5081  1DD8  087B               	movf	??___awdiv,w
  5082  1DD9  06A1               	xorwf	___awdiv@sign,f
  5083  1DDA                     l2545:
  5084  1DDA  01A2               	clrf	___awdiv@quotient
  5085  1DDB  01A3               	clrf	___awdiv@quotient+1
  5086  1DDC                     l2547:
  5087  1DDC  0877               	movf	___awdiv@divisor,w
  5088  1DDD  0478               	iorwf	___awdiv@divisor+1,w
  5089  1DDE  1903               	btfsc	3,2
  5090  1DDF  2DE1               	goto	u3281
  5091  1DE0  2DE2               	goto	u3280
  5092  1DE1                     u3281:
  5093  1DE1  2E19               	goto	l2567
  5094  1DE2                     u3280:
  5095  1DE2                     l2549:
  5096  1DE2  01A0               	clrf	___awdiv@counter
  5097  1DE3  0AA0               	incf	___awdiv@counter,f
  5098  1DE4  2DF0               	goto	l2555
  5099  1DE5                     l2551:
  5100  1DE5  3001               	movlw	1
  5101  1DE6                     u3295:
  5102  1DE6  1003               	clrc
  5103  1DE7  0DF7               	rlf	___awdiv@divisor,f
  5104  1DE8  0DF8               	rlf	___awdiv@divisor+1,f
  5105  1DE9  3EFF               	addlw	-1
  5106  1DEA  1D03               	skipz
  5107  1DEB  2DE6               	goto	u3295
  5108  1DEC                     l2553:
  5109  1DEC  3001               	movlw	1
  5110  1DED  00FB               	movwf	??___awdiv
  5111  1DEE  087B               	movf	??___awdiv,w
  5112  1DEF  07A0               	addwf	___awdiv@counter,f
  5113  1DF0                     l2555:
  5114  1DF0  1FF8               	btfss	___awdiv@divisor+1,7
  5115  1DF1  2DF3               	goto	u3301
  5116  1DF2  2DF4               	goto	u3300
  5117  1DF3                     u3301:
  5118  1DF3  2DE5               	goto	l2551
  5119  1DF4                     u3300:
  5120  1DF4                     l2557:
  5121  1DF4  3001               	movlw	1
  5122  1DF5                     u3315:
  5123  1DF5  1003               	clrc
  5124  1DF6  0DA2               	rlf	___awdiv@quotient,f
  5125  1DF7  0DA3               	rlf	___awdiv@quotient+1,f
  5126  1DF8  3EFF               	addlw	-1
  5127  1DF9  1D03               	skipz
  5128  1DFA  2DF5               	goto	u3315
  5129  1DFB  0878               	movf	___awdiv@divisor+1,w
  5130  1DFC  027A               	subwf	___awdiv@dividend+1,w
  5131  1DFD  1D03               	skipz
  5132  1DFE  2E01               	goto	u3325
  5133  1DFF  0877               	movf	___awdiv@divisor,w
  5134  1E00  0279               	subwf	___awdiv@dividend,w
  5135  1E01                     u3325:
  5136  1E01  1C03               	skipc
  5137  1E02  2E04               	goto	u3321
  5138  1E03  2E05               	goto	u3320
  5139  1E04                     u3321:
  5140  1E04  2E0C               	goto	l2563
  5141  1E05                     u3320:
  5142  1E05                     l2559:
  5143  1E05  0877               	movf	___awdiv@divisor,w
  5144  1E06  02F9               	subwf	___awdiv@dividend,f
  5145  1E07  0878               	movf	___awdiv@divisor+1,w
  5146  1E08  1C03               	skipc
  5147  1E09  03FA               	decf	___awdiv@dividend+1,f
  5148  1E0A  02FA               	subwf	___awdiv@dividend+1,f
  5149  1E0B                     l2561:
  5150  1E0B  1422               	bsf	___awdiv@quotient,0
  5151  1E0C                     l2563:
  5152  1E0C  3001               	movlw	1
  5153  1E0D                     u3335:
  5154  1E0D  1003               	clrc
  5155  1E0E  0CF8               	rrf	___awdiv@divisor+1,f
  5156  1E0F  0CF7               	rrf	___awdiv@divisor,f
  5157  1E10  3EFF               	addlw	-1
  5158  1E11  1D03               	skipz
  5159  1E12  2E0D               	goto	u3335
  5160  1E13                     l2565:
  5161  1E13  3001               	movlw	1
  5162  1E14  02A0               	subwf	___awdiv@counter,f
  5163  1E15  1D03               	btfss	3,2
  5164  1E16  2E18               	goto	u3341
  5165  1E17  2E19               	goto	u3340
  5166  1E18                     u3341:
  5167  1E18  2DF4               	goto	l2557
  5168  1E19                     u3340:
  5169  1E19                     l2567:
  5170  1E19  0821               	movf	___awdiv@sign,w
  5171  1E1A  1903               	btfsc	3,2
  5172  1E1B  2E1D               	goto	u3351
  5173  1E1C  2E1E               	goto	u3350
  5174  1E1D                     u3351:
  5175  1E1D  2E23               	goto	l2571
  5176  1E1E                     u3350:
  5177  1E1E                     l2569:
  5178  1E1E  09A2               	comf	___awdiv@quotient,f
  5179  1E1F  09A3               	comf	___awdiv@quotient+1,f
  5180  1E20  0AA2               	incf	___awdiv@quotient,f
  5181  1E21  1903               	skipnz
  5182  1E22  0AA3               	incf	___awdiv@quotient+1,f
  5183  1E23                     l2571:
  5184  1E23  0823               	movf	___awdiv@quotient+1,w
  5185  1E24  00F8               	movwf	?___awdiv+1
  5186  1E25  0822               	movf	___awdiv@quotient,w
  5187  1E26  00F7               	movwf	?___awdiv
  5188  1E27                     l557:
  5189  1E27  0008               	return
  5190  1E28                     __end_of___awdiv:
  5191                           
  5192                           	psect	text5
  5193  0802                     __ptext5:	
  5194 ;; *************** function _isdigit *****************
  5195 ;; Defined at:
  5196 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  c               1    wreg     unsigned char 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  c               1    1[COMMON] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;		None               void
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5210 ;;      Params:         0       0       0       0       0
  5211 ;;      Locals:         2       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0
  5213 ;;      Totals:         2       0       0       0       0
  5214 ;;Total ram usage:        2 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_sprintf
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           
  5224                           ;psect for function _isdigit
  5225  0802                     _isdigit:
  5226                           
  5227                           ;incstack = 0
  5228                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5229                           ;isdigit@c stored from wreg
  5230  0802  00F1               	movwf	isdigit@c
  5231  0803                     l3077:
  5232  0803  01F0               	clrf	_isdigit$1119
  5233  0804                     l3079:
  5234  0804  303A               	movlw	58
  5235  0805  0271               	subwf	isdigit@c,w
  5236  0806  1803               	skipnc
  5237  0807  2809               	goto	u4681
  5238  0808  280A               	goto	u4680
  5239  0809                     u4681:
  5240  0809  2812               	goto	l3085
  5241  080A                     u4680:
  5242  080A                     l3081:
  5243  080A  3030               	movlw	48
  5244  080B  0271               	subwf	isdigit@c,w
  5245  080C  1C03               	skipc
  5246  080D  280F               	goto	u4691
  5247  080E  2810               	goto	u4690
  5248  080F                     u4691:
  5249  080F  2812               	goto	l3085
  5250  0810                     u4690:
  5251  0810                     l3083:
  5252  0810  01F0               	clrf	_isdigit$1119
  5253  0811  0AF0               	incf	_isdigit$1119,f
  5254  0812                     l3085:
  5255  0812  0C70               	rrf	_isdigit$1119,w
  5256  0813                     l891:
  5257  0813  0008               	return
  5258  0814                     __end_of_isdigit:
  5259                           
  5260                           	psect	text6
  5261  136D                     __ptext6:	
  5262 ;; *************** function _fround *****************
  5263 ;; Defined at:
  5264 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  prec            1    wreg     unsigned char 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  prec            1   49[BANK0 ] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  4   30[BANK0 ] unsigned char 
  5271 ;; Registers used:
  5272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5278 ;;      Params:         0       4       0       0       0
  5279 ;;      Locals:         0       9       0       0       0
  5280 ;;      Temps:          0       7       0       0       0
  5281 ;;      Totals:         0      20       0       0       0
  5282 ;;Total ram usage:       20 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    2
  5285 ;; This function calls:
  5286 ;;		___flmul
  5287 ;;		___lwdiv
  5288 ;;		___lwmod
  5289 ;; This function is called by:
  5290 ;;		_sprintf
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           
  5295                           ;psect for function _fround
  5296  136D                     _fround:
  5297                           
  5298                           ;incstack = 0
  5299                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5300                           ;fround@prec stored from wreg
  5301  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5302  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5303  136F  00D1               	movwf	fround@prec
  5304  1370                     l3019:
  5305                           
  5306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5307  1370  306E               	movlw	110
  5308  1371  0251               	subwf	fround@prec,w
  5309  1372  1C03               	skipc
  5310  1373  2B75               	goto	u4431
  5311  1374  2B76               	goto	u4430
  5312  1375                     u4431:
  5313  1375  2C83               	goto	l3027
  5314  1376                     u4430:
  5315  1376                     l3021:
  5316                           
  5317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5318  1376  303F               	movlw	63
  5319  1377  00A7               	movwf	___flmul@b+3
  5320  1378  3000               	movlw	0
  5321  1379  00A6               	movwf	___flmul@b+2
  5322  137A  3000               	movlw	0
  5323  137B  00A5               	movwf	___flmul@b+1
  5324  137C  3000               	movlw	0
  5325  137D  00A4               	movwf	___flmul@b
  5326  137E  3064               	movlw	100
  5327  137F  00F6               	movwf	___lwdiv@divisor
  5328  1380  3000               	movlw	0
  5329  1381  00F7               	movwf	___lwdiv@divisor+1
  5330  1382  0851               	movf	fround@prec,w
  5331  1383  00C2               	movwf	??_fround
  5332  1384  01C3               	clrf	??_fround+1
  5333  1385  0842               	movf	??_fround,w
  5334  1386  00F8               	movwf	___lwdiv@dividend
  5335  1387  0843               	movf	??_fround+1,w
  5336  1388  00F9               	movwf	___lwdiv@dividend+1
  5337  1389  120A  118A  200A  160A  118A  	fcall	___lwdiv
  5338  138E  0876               	movf	?___lwdiv,w
  5339  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5340  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5341  1391  00C4               	movwf	??_fround+2
  5342  1392  3001               	movlw	1
  5343  1393                     u4445:
  5344  1393  1003               	clrc
  5345  1394  0DC4               	rlf	??_fround+2,f
  5346  1395  3EFF               	addlw	-1
  5347  1396  1D03               	skipz
  5348  1397  2B93               	goto	u4445
  5349  1398  1003               	clrc
  5350  1399  0D44               	rlf	??_fround+2,w
  5351  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5352  139B  0084               	movwf	4
  5353  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  5354  13A1  00C5               	movwf	??_fround+3
  5355  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  5356  13A7  00C6               	movwf	??_fround+4
  5357  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  5358  13AD  00C7               	movwf	??_fround+5
  5359  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  5360  13B3  00C8               	movwf	??_fround+6
  5361  13B4  0848               	movf	??_fround+6,w
  5362  13B5  00AB               	movwf	___flmul@a+3
  5363  13B6  0847               	movf	??_fround+5,w
  5364  13B7  00AA               	movwf	___flmul@a+2
  5365  13B8  0846               	movf	??_fround+4,w
  5366  13B9  00A9               	movwf	___flmul@a+1
  5367  13BA  0845               	movf	??_fround+3,w
  5368  13BB  00A8               	movwf	___flmul@a
  5369  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5370  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5371  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5372  13C3  0827               	movf	?___flmul+3,w
  5373  13C4  00D0               	movwf	_fround$1316+3
  5374  13C5  0826               	movf	?___flmul+2,w
  5375  13C6  00CF               	movwf	_fround$1316+2
  5376  13C7  0825               	movf	?___flmul+1,w
  5377  13C8  00CE               	movwf	_fround$1316+1
  5378  13C9  0824               	movf	?___flmul,w
  5379  13CA  00CD               	movwf	_fround$1316
  5380                           
  5381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5382  13CB  300A               	movlw	10
  5383  13CC  00F6               	movwf	___lwdiv@divisor
  5384  13CD  3000               	movlw	0
  5385  13CE  00F7               	movwf	___lwdiv@divisor+1
  5386  13CF  0851               	movf	fround@prec,w
  5387  13D0  00C2               	movwf	??_fround
  5388  13D1  01C3               	clrf	??_fround+1
  5389  13D2  0842               	movf	??_fround,w
  5390  13D3  00F2               	movwf	___lwmod@dividend
  5391  13D4  0843               	movf	??_fround+1,w
  5392  13D5  00F3               	movwf	___lwmod@dividend+1
  5393  13D6  3064               	movlw	100
  5394  13D7  00F0               	movwf	___lwmod@divisor
  5395  13D8  3000               	movlw	0
  5396  13D9  00F1               	movwf	___lwmod@divisor+1
  5397  13DA  160A  158A  2302  160A  118A  	fcall	___lwmod
  5398  13DF  0871               	movf	?___lwmod+1,w
  5399  13E0  00F9               	movwf	___lwdiv@dividend+1
  5400  13E1  0870               	movf	?___lwmod,w
  5401  13E2  00F8               	movwf	___lwdiv@dividend
  5402  13E3  120A  118A  200A  160A  118A  	fcall	___lwdiv
  5403  13E8  0876               	movf	?___lwdiv,w
  5404  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5405  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5406  13EB  00C4               	movwf	??_fround+2
  5407  13EC  3001               	movlw	1
  5408  13ED                     u4455:
  5409  13ED  1003               	clrc
  5410  13EE  0DC4               	rlf	??_fround+2,f
  5411  13EF  3EFF               	addlw	-1
  5412  13F0  1D03               	skipz
  5413  13F1  2BED               	goto	u4455
  5414  13F2  1003               	clrc
  5415  13F3  0D44               	rlf	??_fround+2,w
  5416  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5417  13F5  0084               	movwf	4
  5418  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5419  13FB  00C5               	movwf	??_fround+3
  5420  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5421  1401  00C6               	movwf	??_fround+4
  5422  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5423  1407  00C7               	movwf	??_fround+5
  5424  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5425  140D  00C8               	movwf	??_fround+6
  5426  140E  0848               	movf	??_fround+6,w
  5427  140F  00A7               	movwf	___flmul@b+3
  5428  1410  0847               	movf	??_fround+5,w
  5429  1411  00A6               	movwf	___flmul@b+2
  5430  1412  0846               	movf	??_fround+4,w
  5431  1413  00A5               	movwf	___flmul@b+1
  5432  1414  0845               	movf	??_fround+3,w
  5433  1415  00A4               	movwf	___flmul@b
  5434  1416  0850               	movf	_fround$1316+3,w
  5435  1417  00AB               	movwf	___flmul@a+3
  5436  1418  084F               	movf	_fround$1316+2,w
  5437  1419  00AA               	movwf	___flmul@a+2
  5438  141A  084E               	movf	_fround$1316+1,w
  5439  141B  00A9               	movwf	___flmul@a+1
  5440  141C  084D               	movf	_fround$1316,w
  5441  141D  00A8               	movwf	___flmul@a
  5442  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5443  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5444  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5445  1425  0827               	movf	?___flmul+3,w
  5446  1426  00CC               	movwf	_fround$1317+3
  5447  1427  0826               	movf	?___flmul+2,w
  5448  1428  00CB               	movwf	_fround$1317+2
  5449  1429  0825               	movf	?___flmul+1,w
  5450  142A  00CA               	movwf	_fround$1317+1
  5451  142B  0824               	movf	?___flmul,w
  5452  142C  00C9               	movwf	_fround$1317
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5455  142D  300A               	movlw	10
  5456  142E  00F0               	movwf	___lwmod@divisor
  5457  142F  3000               	movlw	0
  5458  1430  00F1               	movwf	___lwmod@divisor+1
  5459  1431  0851               	movf	fround@prec,w
  5460  1432  00C2               	movwf	??_fround
  5461  1433  01C3               	clrf	??_fround+1
  5462  1434  0842               	movf	??_fround,w
  5463  1435  00F2               	movwf	___lwmod@dividend
  5464  1436  0843               	movf	??_fround+1,w
  5465  1437  00F3               	movwf	___lwmod@dividend+1
  5466  1438  160A  158A  2302  160A  118A  	fcall	___lwmod
  5467  143D  0870               	movf	?___lwmod,w
  5468  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5469  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5470  1440  00C4               	movwf	??_fround+2
  5471  1441  3001               	movlw	1
  5472  1442                     u4465:
  5473  1442  1003               	clrc
  5474  1443  0DC4               	rlf	??_fround+2,f
  5475  1444  3EFF               	addlw	-1
  5476  1445  1D03               	skipz
  5477  1446  2C42               	goto	u4465
  5478  1447  1003               	clrc
  5479  1448  0D44               	rlf	??_fround+2,w
  5480  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5481  144A  0084               	movwf	4
  5482  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5483  1450  00C5               	movwf	??_fround+3
  5484  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5485  1456  00C6               	movwf	??_fround+4
  5486  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5487  145C  00C7               	movwf	??_fround+5
  5488  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5489  1462  00C8               	movwf	??_fround+6
  5490  1463  0848               	movf	??_fround+6,w
  5491  1464  00A7               	movwf	___flmul@b+3
  5492  1465  0847               	movf	??_fround+5,w
  5493  1466  00A6               	movwf	___flmul@b+2
  5494  1467  0846               	movf	??_fround+4,w
  5495  1468  00A5               	movwf	___flmul@b+1
  5496  1469  0845               	movf	??_fround+3,w
  5497  146A  00A4               	movwf	___flmul@b
  5498  146B  084C               	movf	_fround$1317+3,w
  5499  146C  00AB               	movwf	___flmul@a+3
  5500  146D  084B               	movf	_fround$1317+2,w
  5501  146E  00AA               	movwf	___flmul@a+2
  5502  146F  084A               	movf	_fround$1317+1,w
  5503  1470  00A9               	movwf	___flmul@a+1
  5504  1471  0849               	movf	_fround$1317,w
  5505  1472  00A8               	movwf	___flmul@a
  5506  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5507  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5508  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5509  147A  0827               	movf	?___flmul+3,w
  5510  147B  00C1               	movwf	?_fround+3
  5511  147C  0826               	movf	?___flmul+2,w
  5512  147D  00C0               	movwf	?_fround+2
  5513  147E  0825               	movf	?___flmul+1,w
  5514  147F  00BF               	movwf	?_fround+1
  5515  1480  0824               	movf	?___flmul,w
  5516  1481  00BE               	movwf	?_fround
  5517  1482  2D77               	goto	l318
  5518  1483                     l3027:
  5519  1483  300B               	movlw	11
  5520  1484  0251               	subwf	fround@prec,w
  5521  1485  1C03               	skipc
  5522  1486  2C88               	goto	u4471
  5523  1487  2C89               	goto	u4470
  5524  1488                     u4471:
  5525  1488  2D34               	goto	l3033
  5526  1489                     u4470:
  5527  1489                     l3029:
  5528                           
  5529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5530  1489  303F               	movlw	63
  5531  148A  00A7               	movwf	___flmul@b+3
  5532  148B  3000               	movlw	0
  5533  148C  00A6               	movwf	___flmul@b+2
  5534  148D  3000               	movlw	0
  5535  148E  00A5               	movwf	___flmul@b+1
  5536  148F  3000               	movlw	0
  5537  1490  00A4               	movwf	___flmul@b
  5538  1491  300A               	movlw	10
  5539  1492  00F6               	movwf	___lwdiv@divisor
  5540  1493  3000               	movlw	0
  5541  1494  00F7               	movwf	___lwdiv@divisor+1
  5542  1495  0851               	movf	fround@prec,w
  5543  1496  00C2               	movwf	??_fround
  5544  1497  01C3               	clrf	??_fround+1
  5545  1498  0842               	movf	??_fround,w
  5546  1499  00F8               	movwf	___lwdiv@dividend
  5547  149A  0843               	movf	??_fround+1,w
  5548  149B  00F9               	movwf	___lwdiv@dividend+1
  5549  149C  120A  118A  200A  160A  118A  	fcall	___lwdiv
  5550  14A1  0876               	movf	?___lwdiv,w
  5551  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5552  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5553  14A4  00C4               	movwf	??_fround+2
  5554  14A5  3001               	movlw	1
  5555  14A6                     u4485:
  5556  14A6  1003               	clrc
  5557  14A7  0DC4               	rlf	??_fround+2,f
  5558  14A8  3EFF               	addlw	-1
  5559  14A9  1D03               	skipz
  5560  14AA  2CA6               	goto	u4485
  5561  14AB  1003               	clrc
  5562  14AC  0D44               	rlf	??_fround+2,w
  5563  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5564  14AE  0084               	movwf	4
  5565  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5566  14B4  00C5               	movwf	??_fround+3
  5567  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5568  14BA  00C6               	movwf	??_fround+4
  5569  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5570  14C0  00C7               	movwf	??_fround+5
  5571  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5572  14C6  00C8               	movwf	??_fround+6
  5573  14C7  0848               	movf	??_fround+6,w
  5574  14C8  00AB               	movwf	___flmul@a+3
  5575  14C9  0847               	movf	??_fround+5,w
  5576  14CA  00AA               	movwf	___flmul@a+2
  5577  14CB  0846               	movf	??_fround+4,w
  5578  14CC  00A9               	movwf	___flmul@a+1
  5579  14CD  0845               	movf	??_fround+3,w
  5580  14CE  00A8               	movwf	___flmul@a
  5581  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5582  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5583  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5584  14D6  0827               	movf	?___flmul+3,w
  5585  14D7  00D0               	movwf	_fround$1316+3
  5586  14D8  0826               	movf	?___flmul+2,w
  5587  14D9  00CF               	movwf	_fround$1316+2
  5588  14DA  0825               	movf	?___flmul+1,w
  5589  14DB  00CE               	movwf	_fround$1316+1
  5590  14DC  0824               	movf	?___flmul,w
  5591  14DD  00CD               	movwf	_fround$1316
  5592                           
  5593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5594  14DE  300A               	movlw	10
  5595  14DF  00F0               	movwf	___lwmod@divisor
  5596  14E0  3000               	movlw	0
  5597  14E1  00F1               	movwf	___lwmod@divisor+1
  5598  14E2  0851               	movf	fround@prec,w
  5599  14E3  00C2               	movwf	??_fround
  5600  14E4  01C3               	clrf	??_fround+1
  5601  14E5  0842               	movf	??_fround,w
  5602  14E6  00F2               	movwf	___lwmod@dividend
  5603  14E7  0843               	movf	??_fround+1,w
  5604  14E8  00F3               	movwf	___lwmod@dividend+1
  5605  14E9  160A  158A  2302  160A  118A  	fcall	___lwmod
  5606  14EE  0870               	movf	?___lwmod,w
  5607  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5608  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5609  14F1  00C4               	movwf	??_fround+2
  5610  14F2  3001               	movlw	1
  5611  14F3                     u4495:
  5612  14F3  1003               	clrc
  5613  14F4  0DC4               	rlf	??_fround+2,f
  5614  14F5  3EFF               	addlw	-1
  5615  14F6  1D03               	skipz
  5616  14F7  2CF3               	goto	u4495
  5617  14F8  1003               	clrc
  5618  14F9  0D44               	rlf	??_fround+2,w
  5619  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5620  14FB  0084               	movwf	4
  5621  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5622  1501  00C5               	movwf	??_fround+3
  5623  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  5624  1507  00C6               	movwf	??_fround+4
  5625  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  5626  150D  00C7               	movwf	??_fround+5
  5627  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  5628  1513  00C8               	movwf	??_fround+6
  5629  1514  0848               	movf	??_fround+6,w
  5630  1515  00A7               	movwf	___flmul@b+3
  5631  1516  0847               	movf	??_fround+5,w
  5632  1517  00A6               	movwf	___flmul@b+2
  5633  1518  0846               	movf	??_fround+4,w
  5634  1519  00A5               	movwf	___flmul@b+1
  5635  151A  0845               	movf	??_fround+3,w
  5636  151B  00A4               	movwf	___flmul@b
  5637  151C  0850               	movf	_fround$1316+3,w
  5638  151D  00AB               	movwf	___flmul@a+3
  5639  151E  084F               	movf	_fround$1316+2,w
  5640  151F  00AA               	movwf	___flmul@a+2
  5641  1520  084E               	movf	_fround$1316+1,w
  5642  1521  00A9               	movwf	___flmul@a+1
  5643  1522  084D               	movf	_fround$1316,w
  5644  1523  00A8               	movwf	___flmul@a
  5645  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5646  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5647  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5648  152B  0827               	movf	?___flmul+3,w
  5649  152C  00C1               	movwf	?_fround+3
  5650  152D  0826               	movf	?___flmul+2,w
  5651  152E  00C0               	movwf	?_fround+2
  5652  152F  0825               	movf	?___flmul+1,w
  5653  1530  00BF               	movwf	?_fround+1
  5654  1531  0824               	movf	?___flmul,w
  5655  1532  00BE               	movwf	?_fround
  5656  1533  2D77               	goto	l318
  5657  1534                     l3033:
  5658                           
  5659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5660  1534  303F               	movlw	63
  5661  1535  00A7               	movwf	___flmul@b+3
  5662  1536  3000               	movlw	0
  5663  1537  00A6               	movwf	___flmul@b+2
  5664  1538  3000               	movlw	0
  5665  1539  00A5               	movwf	___flmul@b+1
  5666  153A  3000               	movlw	0
  5667  153B  00A4               	movwf	___flmul@b
  5668  153C  0851               	movf	fround@prec,w
  5669  153D  00C2               	movwf	??_fround
  5670  153E  3001               	movlw	1
  5671  153F                     u4505:
  5672  153F  1003               	clrc
  5673  1540  0DC2               	rlf	??_fround,f
  5674  1541  3EFF               	addlw	-1
  5675  1542  1D03               	skipz
  5676  1543  2D3F               	goto	u4505
  5677  1544  1003               	clrc
  5678  1545  0D42               	rlf	??_fround,w
  5679  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5680  1547  0084               	movwf	4
  5681  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  5682  154D  00C3               	movwf	??_fround+1
  5683  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  5684  1553  00C4               	movwf	??_fround+2
  5685  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  5686  1559  00C5               	movwf	??_fround+3
  5687  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  5688  155F  00C6               	movwf	??_fround+4
  5689  1560  0846               	movf	??_fround+4,w
  5690  1561  00AB               	movwf	___flmul@a+3
  5691  1562  0845               	movf	??_fround+3,w
  5692  1563  00AA               	movwf	___flmul@a+2
  5693  1564  0844               	movf	??_fround+2,w
  5694  1565  00A9               	movwf	___flmul@a+1
  5695  1566  0843               	movf	??_fround+1,w
  5696  1567  00A8               	movwf	___flmul@a
  5697  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5698  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5699  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5700  156F  0827               	movf	?___flmul+3,w
  5701  1570  00C1               	movwf	?_fround+3
  5702  1571  0826               	movf	?___flmul+2,w
  5703  1572  00C0               	movwf	?_fround+2
  5704  1573  0825               	movf	?___flmul+1,w
  5705  1574  00BF               	movwf	?_fround+1
  5706  1575  0824               	movf	?___flmul,w
  5707  1576  00BE               	movwf	?_fround
  5708  1577                     l318:
  5709  1577  0008               	return
  5710  1578                     __end_of_fround:
  5711                           
  5712                           	psect	text7
  5713  1B02                     __ptext7:	
  5714 ;; *************** function ___lwmod *****************
  5715 ;; Defined at:
  5716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  divisor         2    0[COMMON] unsigned int 
  5719 ;;  dividend        2    2[COMMON] unsigned int 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  counter         1    5[COMMON] unsigned char 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  2    0[COMMON] unsigned int 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5731 ;;      Params:         4       0       0       0       0
  5732 ;;      Locals:         1       0       0       0       0
  5733 ;;      Temps:          1       0       0       0       0
  5734 ;;      Totals:         6       0       0       0       0
  5735 ;;Total ram usage:        6 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_fround
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           
  5745                           ;psect for function ___lwmod
  5746  1B02                     ___lwmod:
  5747  1B02                     l2639:	
  5748                           ;incstack = 0
  5749                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5750                           
  5751  1B02  0870               	movf	___lwmod@divisor,w
  5752  1B03  0471               	iorwf	___lwmod@divisor+1,w
  5753  1B04  1903               	btfsc	3,2
  5754  1B05  2B07               	goto	u3521
  5755  1B06  2B08               	goto	u3520
  5756  1B07                     u3521:
  5757  1B07  2B37               	goto	l2657
  5758  1B08                     u3520:
  5759  1B08                     l2641:
  5760  1B08  01F5               	clrf	___lwmod@counter
  5761  1B09  0AF5               	incf	___lwmod@counter,f
  5762  1B0A  2B16               	goto	l2647
  5763  1B0B                     l2643:
  5764  1B0B  3001               	movlw	1
  5765  1B0C                     u3535:
  5766  1B0C  1003               	clrc
  5767  1B0D  0DF0               	rlf	___lwmod@divisor,f
  5768  1B0E  0DF1               	rlf	___lwmod@divisor+1,f
  5769  1B0F  3EFF               	addlw	-1
  5770  1B10  1D03               	skipz
  5771  1B11  2B0C               	goto	u3535
  5772  1B12                     l2645:
  5773  1B12  3001               	movlw	1
  5774  1B13  00F4               	movwf	??___lwmod
  5775  1B14  0874               	movf	??___lwmod,w
  5776  1B15  07F5               	addwf	___lwmod@counter,f
  5777  1B16                     l2647:
  5778  1B16  1FF1               	btfss	___lwmod@divisor+1,7
  5779  1B17  2B19               	goto	u3541
  5780  1B18  2B1A               	goto	u3540
  5781  1B19                     u3541:
  5782  1B19  2B0B               	goto	l2643
  5783  1B1A                     u3540:
  5784  1B1A                     l2649:
  5785  1B1A  0871               	movf	___lwmod@divisor+1,w
  5786  1B1B  0273               	subwf	___lwmod@dividend+1,w
  5787  1B1C  1D03               	skipz
  5788  1B1D  2B20               	goto	u3555
  5789  1B1E  0870               	movf	___lwmod@divisor,w
  5790  1B1F  0272               	subwf	___lwmod@dividend,w
  5791  1B20                     u3555:
  5792  1B20  1C03               	skipc
  5793  1B21  2B23               	goto	u3551
  5794  1B22  2B24               	goto	u3550
  5795  1B23                     u3551:
  5796  1B23  2B2A               	goto	l2653
  5797  1B24                     u3550:
  5798  1B24                     l2651:
  5799  1B24  0870               	movf	___lwmod@divisor,w
  5800  1B25  02F2               	subwf	___lwmod@dividend,f
  5801  1B26  0871               	movf	___lwmod@divisor+1,w
  5802  1B27  1C03               	skipc
  5803  1B28  03F3               	decf	___lwmod@dividend+1,f
  5804  1B29  02F3               	subwf	___lwmod@dividend+1,f
  5805  1B2A                     l2653:
  5806  1B2A  3001               	movlw	1
  5807  1B2B                     u3565:
  5808  1B2B  1003               	clrc
  5809  1B2C  0CF1               	rrf	___lwmod@divisor+1,f
  5810  1B2D  0CF0               	rrf	___lwmod@divisor,f
  5811  1B2E  3EFF               	addlw	-1
  5812  1B2F  1D03               	skipz
  5813  1B30  2B2B               	goto	u3565
  5814  1B31                     l2655:
  5815  1B31  3001               	movlw	1
  5816  1B32  02F5               	subwf	___lwmod@counter,f
  5817  1B33  1D03               	btfss	3,2
  5818  1B34  2B36               	goto	u3571
  5819  1B35  2B37               	goto	u3570
  5820  1B36                     u3571:
  5821  1B36  2B1A               	goto	l2649
  5822  1B37                     u3570:
  5823  1B37                     l2657:
  5824  1B37  0873               	movf	___lwmod@dividend+1,w
  5825  1B38  00F1               	movwf	?___lwmod+1
  5826  1B39  0872               	movf	___lwmod@dividend,w
  5827  1B3A  00F0               	movwf	?___lwmod
  5828  1B3B                     l720:
  5829  1B3B  0008               	return
  5830  1B3C                     __end_of___lwmod:
  5831                           
  5832                           	psect	text8
  5833  000A                     __ptext8:	
  5834 ;; *************** function ___lwdiv *****************
  5835 ;; Defined at:
  5836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  divisor         2    6[COMMON] unsigned int 
  5839 ;;  dividend        2    8[COMMON] unsigned int 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  quotient        2   11[COMMON] unsigned int 
  5842 ;;  counter         1   13[COMMON] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  2    6[COMMON] unsigned int 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5852 ;;      Params:         4       0       0       0       0
  5853 ;;      Locals:         3       0       0       0       0
  5854 ;;      Temps:          1       0       0       0       0
  5855 ;;      Totals:         8       0       0       0       0
  5856 ;;Total ram usage:        8 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_fround
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           
  5866                           ;psect for function ___lwdiv
  5867  000A                     ___lwdiv:
  5868  000A                     l2613:	
  5869                           ;incstack = 0
  5870                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5871                           
  5872  000A  01FB               	clrf	___lwdiv@quotient
  5873  000B  01FC               	clrf	___lwdiv@quotient+1
  5874  000C                     l2615:
  5875  000C  0876               	movf	___lwdiv@divisor,w
  5876  000D  0477               	iorwf	___lwdiv@divisor+1,w
  5877  000E  1903               	btfsc	3,2
  5878  000F  2811               	goto	u3451
  5879  0010  2812               	goto	u3450
  5880  0011                     u3451:
  5881  0011  2849               	goto	l2635
  5882  0012                     u3450:
  5883  0012                     l2617:
  5884  0012  01FD               	clrf	___lwdiv@counter
  5885  0013  0AFD               	incf	___lwdiv@counter,f
  5886  0014  2820               	goto	l2623
  5887  0015                     l2619:
  5888  0015  3001               	movlw	1
  5889  0016                     u3465:
  5890  0016  1003               	clrc
  5891  0017  0DF6               	rlf	___lwdiv@divisor,f
  5892  0018  0DF7               	rlf	___lwdiv@divisor+1,f
  5893  0019  3EFF               	addlw	-1
  5894  001A  1D03               	skipz
  5895  001B  2816               	goto	u3465
  5896  001C                     l2621:
  5897  001C  3001               	movlw	1
  5898  001D  00FA               	movwf	??___lwdiv
  5899  001E  087A               	movf	??___lwdiv,w
  5900  001F  07FD               	addwf	___lwdiv@counter,f
  5901  0020                     l2623:
  5902  0020  1FF7               	btfss	___lwdiv@divisor+1,7
  5903  0021  2823               	goto	u3471
  5904  0022  2824               	goto	u3470
  5905  0023                     u3471:
  5906  0023  2815               	goto	l2619
  5907  0024                     u3470:
  5908  0024                     l2625:
  5909  0024  3001               	movlw	1
  5910  0025                     u3485:
  5911  0025  1003               	clrc
  5912  0026  0DFB               	rlf	___lwdiv@quotient,f
  5913  0027  0DFC               	rlf	___lwdiv@quotient+1,f
  5914  0028  3EFF               	addlw	-1
  5915  0029  1D03               	skipz
  5916  002A  2825               	goto	u3485
  5917  002B  0877               	movf	___lwdiv@divisor+1,w
  5918  002C  0279               	subwf	___lwdiv@dividend+1,w
  5919  002D  1D03               	skipz
  5920  002E  2831               	goto	u3495
  5921  002F  0876               	movf	___lwdiv@divisor,w
  5922  0030  0278               	subwf	___lwdiv@dividend,w
  5923  0031                     u3495:
  5924  0031  1C03               	skipc
  5925  0032  2834               	goto	u3491
  5926  0033  2835               	goto	u3490
  5927  0034                     u3491:
  5928  0034  283C               	goto	l2631
  5929  0035                     u3490:
  5930  0035                     l2627:
  5931  0035  0876               	movf	___lwdiv@divisor,w
  5932  0036  02F8               	subwf	___lwdiv@dividend,f
  5933  0037  0877               	movf	___lwdiv@divisor+1,w
  5934  0038  1C03               	skipc
  5935  0039  03F9               	decf	___lwdiv@dividend+1,f
  5936  003A  02F9               	subwf	___lwdiv@dividend+1,f
  5937  003B                     l2629:
  5938  003B  147B               	bsf	___lwdiv@quotient,0
  5939  003C                     l2631:
  5940  003C  3001               	movlw	1
  5941  003D                     u3505:
  5942  003D  1003               	clrc
  5943  003E  0CF7               	rrf	___lwdiv@divisor+1,f
  5944  003F  0CF6               	rrf	___lwdiv@divisor,f
  5945  0040  3EFF               	addlw	-1
  5946  0041  1D03               	skipz
  5947  0042  283D               	goto	u3505
  5948  0043                     l2633:
  5949  0043  3001               	movlw	1
  5950  0044  02FD               	subwf	___lwdiv@counter,f
  5951  0045  1D03               	btfss	3,2
  5952  0046  2848               	goto	u3511
  5953  0047  2849               	goto	u3510
  5954  0048                     u3511:
  5955  0048  2824               	goto	l2625
  5956  0049                     u3510:
  5957  0049                     l2635:
  5958  0049  087C               	movf	___lwdiv@quotient+1,w
  5959  004A  00F7               	movwf	?___lwdiv+1
  5960  004B  087B               	movf	___lwdiv@quotient,w
  5961  004C  00F6               	movwf	?___lwdiv
  5962  004D                     l710:
  5963  004D  0008               	return
  5964  004E                     __end_of___lwdiv:
  5965                           
  5966                           	psect	text9
  5967  1015                     __ptext9:	
  5968 ;; *************** function __tdiv_to_l_ *****************
  5969 ;; Defined at:
  5970 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  f1              4    0[COMMON] float 
  5973 ;;  f2              4    4[COMMON] float 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  quot            4    0[BANK0 ] unsigned long 
  5976 ;;  exp1            1    5[BANK0 ] unsigned char 
  5977 ;;  cntr            1    4[BANK0 ] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  4    0[COMMON] unsigned long 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5987 ;;      Params:         8       0       0       0       0
  5988 ;;      Locals:         0       6       0       0       0
  5989 ;;      Temps:          4       0       0       0       0
  5990 ;;      Totals:        12       6       0       0       0
  5991 ;;Total ram usage:       18 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_sprintf
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function __tdiv_to_l_
  6002  1015                     __tdiv_to_l_:
  6003  1015                     l3089:	
  6004                           ;incstack = 0
  6005                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6006                           
  6007  1015  0870               	movf	__tdiv_to_l_@f1,w
  6008  1016  00F8               	movwf	??__tdiv_to_l_
  6009  1017  0871               	movf	__tdiv_to_l_@f1+1,w
  6010  1018  00F9               	movwf	??__tdiv_to_l_+1
  6011  1019  0872               	movf	__tdiv_to_l_@f1+2,w
  6012  101A  00FA               	movwf	??__tdiv_to_l_+2
  6013  101B  1003               	clrc
  6014  101C  0D79               	rlf	??__tdiv_to_l_+1,w
  6015  101D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6016  101E  00FB               	movwf	??__tdiv_to_l_+3
  6017  101F  087B               	movf	??__tdiv_to_l_+3,w
  6018  1020  1283               	bcf	3,5	;RP0=0, select bank0
  6019  1021  1303               	bcf	3,6	;RP1=0, select bank0
  6020  1022  00A5               	movwf	__tdiv_to_l_@exp1
  6021  1023  0825               	movf	__tdiv_to_l_@exp1,w
  6022  1024  1D03               	btfss	3,2
  6023  1025  2827               	goto	u4701
  6024  1026  2828               	goto	u4700
  6025  1027                     u4701:
  6026  1027  2831               	goto	l3095
  6027  1028                     u4700:
  6028  1028                     l3091:
  6029  1028  3000               	movlw	0
  6030  1029  00F3               	movwf	?__tdiv_to_l_+3
  6031  102A  3000               	movlw	0
  6032  102B  00F2               	movwf	?__tdiv_to_l_+2
  6033  102C  3000               	movlw	0
  6034  102D  00F1               	movwf	?__tdiv_to_l_+1
  6035  102E  3000               	movlw	0
  6036  102F  00F0               	movwf	?__tdiv_to_l_
  6037  1030  28D1               	goto	l621
  6038  1031                     l3095:
  6039  1031  0874               	movf	__tdiv_to_l_@f2,w
  6040  1032  00F8               	movwf	??__tdiv_to_l_
  6041  1033  0875               	movf	__tdiv_to_l_@f2+1,w
  6042  1034  00F9               	movwf	??__tdiv_to_l_+1
  6043  1035  0876               	movf	__tdiv_to_l_@f2+2,w
  6044  1036  00FA               	movwf	??__tdiv_to_l_+2
  6045  1037  1003               	clrc
  6046  1038  0D79               	rlf	??__tdiv_to_l_+1,w
  6047  1039  0D7A               	rlf	??__tdiv_to_l_+2,w
  6048  103A  00FB               	movwf	??__tdiv_to_l_+3
  6049  103B  087B               	movf	??__tdiv_to_l_+3,w
  6050  103C  00A4               	movwf	__tdiv_to_l_@cntr
  6051  103D  0824               	movf	__tdiv_to_l_@cntr,w
  6052  103E  1D03               	btfss	3,2
  6053  103F  2841               	goto	u4711
  6054  1040  2842               	goto	u4710
  6055  1041                     u4711:
  6056  1041  2843               	goto	l622
  6057  1042                     u4710:
  6058  1042  2828               	goto	l3091
  6059  1043                     l622:
  6060  1043  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6061  1044                     l3101:
  6062  1044  30FF               	movlw	255
  6063  1045  05F0               	andwf	__tdiv_to_l_@f1,f
  6064  1046  30FF               	movlw	255
  6065  1047  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6066  1048  3000               	movlw	0
  6067  1049  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6068  104A                     l3103:
  6069  104A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6070  104B  30FF               	movlw	255
  6071  104C  05F4               	andwf	__tdiv_to_l_@f2,f
  6072  104D  30FF               	movlw	255
  6073  104E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6074  104F  3000               	movlw	0
  6075  1050  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6076  1051  3000               	movlw	0
  6077  1052  00A3               	movwf	__tdiv_to_l_@quot+3
  6078  1053  3000               	movlw	0
  6079  1054  00A2               	movwf	__tdiv_to_l_@quot+2
  6080  1055  3000               	movlw	0
  6081  1056  00A1               	movwf	__tdiv_to_l_@quot+1
  6082  1057  3000               	movlw	0
  6083  1058  00A0               	movwf	__tdiv_to_l_@quot
  6084  1059                     l3105:
  6085  1059  307F               	movlw	127
  6086  105A  02A5               	subwf	__tdiv_to_l_@exp1,f
  6087  105B                     l3107:
  6088  105B  3098               	movlw	152
  6089  105C  0724               	addwf	__tdiv_to_l_@cntr,w
  6090  105D  00F8               	movwf	??__tdiv_to_l_
  6091  105E  0878               	movf	??__tdiv_to_l_,w
  6092  105F  02A5               	subwf	__tdiv_to_l_@exp1,f
  6093  1060  3018               	movlw	24
  6094  1061  00F8               	movwf	??__tdiv_to_l_
  6095  1062  0878               	movf	??__tdiv_to_l_,w
  6096  1063  00A4               	movwf	__tdiv_to_l_@cntr
  6097  1064                     l3109:
  6098  1064  3001               	movlw	1
  6099  1065  00F8               	movwf	??__tdiv_to_l_
  6100  1066                     u4725:
  6101  1066  1003               	clrc
  6102  1067  0DA0               	rlf	__tdiv_to_l_@quot,f
  6103  1068  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6104  1069  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6105  106A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6106  106B  0BF8               	decfsz	??__tdiv_to_l_,f
  6107  106C  2866               	goto	u4725
  6108  106D                     l3111:
  6109  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  6110  106E  0272               	subwf	__tdiv_to_l_@f1+2,w
  6111  106F  1D03               	skipz
  6112  1070  2877               	goto	u4735
  6113  1071  0875               	movf	__tdiv_to_l_@f2+1,w
  6114  1072  0271               	subwf	__tdiv_to_l_@f1+1,w
  6115  1073  1D03               	skipz
  6116  1074  2877               	goto	u4735
  6117  1075  0874               	movf	__tdiv_to_l_@f2,w
  6118  1076  0270               	subwf	__tdiv_to_l_@f1,w
  6119  1077                     u4735:
  6120  1077  1C03               	skipc
  6121  1078  287A               	goto	u4731
  6122  1079  287B               	goto	u4730
  6123  107A                     u4731:
  6124  107A  2886               	goto	l3117
  6125  107B                     u4730:
  6126  107B                     l3113:
  6127  107B  0874               	movf	__tdiv_to_l_@f2,w
  6128  107C  02F0               	subwf	__tdiv_to_l_@f1,f
  6129  107D  0875               	movf	__tdiv_to_l_@f2+1,w
  6130  107E  1C03               	skipc
  6131  107F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6132  1080  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6133  1081  0876               	movf	__tdiv_to_l_@f2+2,w
  6134  1082  1C03               	skipc
  6135  1083  0A76               	incf	__tdiv_to_l_@f2+2,w
  6136  1084  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6137  1085                     l3115:
  6138  1085  1420               	bsf	__tdiv_to_l_@quot,0
  6139  1086                     l3117:
  6140  1086  3001               	movlw	1
  6141  1087                     u4745:
  6142  1087  1003               	clrc
  6143  1088  0DF0               	rlf	__tdiv_to_l_@f1,f
  6144  1089  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6145  108A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6146  108B  3EFF               	addlw	-1
  6147  108C  1D03               	skipz
  6148  108D  2887               	goto	u4745
  6149  108E                     l3119:
  6150  108E  3001               	movlw	1
  6151  108F  02A4               	subwf	__tdiv_to_l_@cntr,f
  6152  1090  1D03               	btfss	3,2
  6153  1091  2893               	goto	u4751
  6154  1092  2894               	goto	u4750
  6155  1093                     u4751:
  6156  1093  2864               	goto	l3109
  6157  1094                     u4750:
  6158  1094                     l625:
  6159  1094  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6160  1095  2897               	goto	u4761
  6161  1096  2898               	goto	u4760
  6162  1097                     u4761:
  6163  1097  28B2               	goto	l3129
  6164  1098                     u4760:
  6165  1098                     l3121:
  6166  1098  0825               	movf	__tdiv_to_l_@exp1,w
  6167  1099  3A80               	xorlw	128
  6168  109A  3E97               	addlw	151
  6169  109B  1803               	skipnc
  6170  109C  289E               	goto	u4771
  6171  109D  289F               	goto	u4770
  6172  109E                     u4771:
  6173  109E  28A0               	goto	l3127
  6174  109F                     u4770:
  6175  109F  2828               	goto	l3091
  6176  10A0                     l3127:
  6177  10A0  3001               	movlw	1
  6178  10A1                     u4785:
  6179  10A1  1003               	clrc
  6180  10A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6181  10A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6182  10A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6183  10A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  6184  10A6  3EFF               	addlw	-1
  6185  10A7  1D03               	skipz
  6186  10A8  28A1               	goto	u4785
  6187  10A9  3001               	movlw	1
  6188  10AA  00F8               	movwf	??__tdiv_to_l_
  6189  10AB  0878               	movf	??__tdiv_to_l_,w
  6190  10AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  6191  10AD  1D03               	btfss	3,2
  6192  10AE  28B0               	goto	u4791
  6193  10AF  28B1               	goto	u4790
  6194  10B0                     u4791:
  6195  10B0  28A0               	goto	l3127
  6196  10B1                     u4790:
  6197  10B1  28C9               	goto	l3137
  6198  10B2                     l3129:
  6199  10B2  3018               	movlw	24
  6200  10B3  0225               	subwf	__tdiv_to_l_@exp1,w
  6201  10B4  1C03               	skipc
  6202  10B5  28B7               	goto	u4801
  6203  10B6  28B8               	goto	u4800
  6204  10B7                     u4801:
  6205  10B7  28C4               	goto	l632
  6206  10B8                     u4800:
  6207  10B8  2828               	goto	l3091
  6208  10B9                     l3135:
  6209  10B9  3001               	movlw	1
  6210  10BA  00F8               	movwf	??__tdiv_to_l_
  6211  10BB                     u4815:
  6212  10BB  1003               	clrc
  6213  10BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  6214  10BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6215  10BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6216  10BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6217  10C0  0BF8               	decfsz	??__tdiv_to_l_,f
  6218  10C1  28BB               	goto	u4815
  6219  10C2  3001               	movlw	1
  6220  10C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  6221  10C4                     l632:
  6222  10C4  0825               	movf	__tdiv_to_l_@exp1,w
  6223  10C5  1D03               	btfss	3,2
  6224  10C6  28C8               	goto	u4821
  6225  10C7  28C9               	goto	u4820
  6226  10C8                     u4821:
  6227  10C8  28B9               	goto	l3135
  6228  10C9                     u4820:
  6229  10C9                     l3137:
  6230  10C9  0823               	movf	__tdiv_to_l_@quot+3,w
  6231  10CA  00F3               	movwf	?__tdiv_to_l_+3
  6232  10CB  0822               	movf	__tdiv_to_l_@quot+2,w
  6233  10CC  00F2               	movwf	?__tdiv_to_l_+2
  6234  10CD  0821               	movf	__tdiv_to_l_@quot+1,w
  6235  10CE  00F1               	movwf	?__tdiv_to_l_+1
  6236  10CF  0820               	movf	__tdiv_to_l_@quot,w
  6237  10D0  00F0               	movwf	?__tdiv_to_l_
  6238  10D1                     l621:
  6239  10D1  0008               	return
  6240  10D2                     __end_of__tdiv_to_l_:
  6241                           
  6242                           	psect	text10
  6243  10D2                     __ptext10:	
  6244 ;; *************** function __div_to_l_ *****************
  6245 ;; Defined at:
  6246 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  f1              4    0[COMMON] unsigned long 
  6249 ;;  f2              4    4[COMMON] unsigned long 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  quot            4    0[BANK0 ] unsigned long 
  6252 ;;  exp1            1    5[BANK0 ] unsigned char 
  6253 ;;  cntr            1    4[BANK0 ] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  4    0[COMMON] unsigned long 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6263 ;;      Params:         8       0       0       0       0
  6264 ;;      Locals:         0       6       0       0       0
  6265 ;;      Temps:          1       0       0       0       0
  6266 ;;      Totals:         9       6       0       0       0
  6267 ;;Total ram usage:       15 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_sprintf
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function __div_to_l_
  6278  10D2                     __div_to_l_:
  6279  10D2                     l3141:	
  6280                           ;incstack = 0
  6281                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6282                           
  6283  10D2  1003               	clrc
  6284  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  6285  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  6286  10D5  00F8               	movwf	??__div_to_l_
  6287  10D6  0878               	movf	??__div_to_l_,w
  6288  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  6289  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  6290  10D9  00A5               	movwf	__div_to_l_@exp1
  6291  10DA  0825               	movf	__div_to_l_@exp1,w
  6292  10DB  1D03               	btfss	3,2
  6293  10DC  28DE               	goto	u4831
  6294  10DD  28DF               	goto	u4830
  6295  10DE                     u4831:
  6296  10DE  28E8               	goto	l3147
  6297  10DF                     u4830:
  6298  10DF                     l3143:
  6299  10DF  3000               	movlw	0
  6300  10E0  00F3               	movwf	?__div_to_l_+3
  6301  10E1  3000               	movlw	0
  6302  10E2  00F2               	movwf	?__div_to_l_+2
  6303  10E3  3000               	movlw	0
  6304  10E4  00F1               	movwf	?__div_to_l_+1
  6305  10E5  3000               	movlw	0
  6306  10E6  00F0               	movwf	?__div_to_l_
  6307  10E7  298F               	goto	l574
  6308  10E8                     l3147:
  6309  10E8  1003               	clrc
  6310  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  6311  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  6312  10EB  00F8               	movwf	??__div_to_l_
  6313  10EC  0878               	movf	??__div_to_l_,w
  6314  10ED  00A4               	movwf	__div_to_l_@cntr
  6315  10EE  0824               	movf	__div_to_l_@cntr,w
  6316  10EF  1D03               	btfss	3,2
  6317  10F0  28F2               	goto	u4841
  6318  10F1  28F3               	goto	u4840
  6319  10F2                     u4841:
  6320  10F2  28F4               	goto	l575
  6321  10F3                     u4840:
  6322  10F3  28DF               	goto	l3143
  6323  10F4                     l575:
  6324  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  6325  10F5                     l3153:
  6326  10F5  30FF               	movlw	255
  6327  10F6  05F0               	andwf	__div_to_l_@f1,f
  6328  10F7  30FF               	movlw	255
  6329  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  6330  10F9  30FF               	movlw	255
  6331  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  6332  10FB  3000               	movlw	0
  6333  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  6334  10FD                     l3155:
  6335  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  6336  10FE  30FF               	movlw	255
  6337  10FF  05F4               	andwf	__div_to_l_@f2,f
  6338  1100  30FF               	movlw	255
  6339  1101  05F5               	andwf	__div_to_l_@f2+1,f
  6340  1102  30FF               	movlw	255
  6341  1103  05F6               	andwf	__div_to_l_@f2+2,f
  6342  1104  3000               	movlw	0
  6343  1105  05F7               	andwf	__div_to_l_@f2+3,f
  6344  1106  3000               	movlw	0
  6345  1107  00A3               	movwf	__div_to_l_@quot+3
  6346  1108  3000               	movlw	0
  6347  1109  00A2               	movwf	__div_to_l_@quot+2
  6348  110A  3000               	movlw	0
  6349  110B  00A1               	movwf	__div_to_l_@quot+1
  6350  110C  3000               	movlw	0
  6351  110D  00A0               	movwf	__div_to_l_@quot
  6352  110E                     l3157:
  6353  110E  307F               	movlw	127
  6354  110F  02A5               	subwf	__div_to_l_@exp1,f
  6355  1110                     l3159:
  6356  1110  30A0               	movlw	160
  6357  1111  0724               	addwf	__div_to_l_@cntr,w
  6358  1112  00F8               	movwf	??__div_to_l_
  6359  1113  0878               	movf	??__div_to_l_,w
  6360  1114  02A5               	subwf	__div_to_l_@exp1,f
  6361  1115  3020               	movlw	32
  6362  1116  00F8               	movwf	??__div_to_l_
  6363  1117  0878               	movf	??__div_to_l_,w
  6364  1118  00A4               	movwf	__div_to_l_@cntr
  6365  1119                     l3161:
  6366  1119  3001               	movlw	1
  6367  111A  00F8               	movwf	??__div_to_l_
  6368  111B                     u4855:
  6369  111B  1003               	clrc
  6370  111C  0DA0               	rlf	__div_to_l_@quot,f
  6371  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  6372  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  6373  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  6374  1120  0BF8               	decfsz	??__div_to_l_,f
  6375  1121  291B               	goto	u4855
  6376  1122                     l3163:
  6377  1122  0877               	movf	__div_to_l_@f2+3,w
  6378  1123  0273               	subwf	__div_to_l_@f1+3,w
  6379  1124  1D03               	skipz
  6380  1125  2930               	goto	u4865
  6381  1126  0876               	movf	__div_to_l_@f2+2,w
  6382  1127  0272               	subwf	__div_to_l_@f1+2,w
  6383  1128  1D03               	skipz
  6384  1129  2930               	goto	u4865
  6385  112A  0875               	movf	__div_to_l_@f2+1,w
  6386  112B  0271               	subwf	__div_to_l_@f1+1,w
  6387  112C  1D03               	skipz
  6388  112D  2930               	goto	u4865
  6389  112E  0874               	movf	__div_to_l_@f2,w
  6390  112F  0270               	subwf	__div_to_l_@f1,w
  6391  1130                     u4865:
  6392  1130  1C03               	skipc
  6393  1131  2933               	goto	u4861
  6394  1132  2934               	goto	u4860
  6395  1133                     u4861:
  6396  1133  2943               	goto	l3169
  6397  1134                     u4860:
  6398  1134                     l3165:
  6399  1134  0874               	movf	__div_to_l_@f2,w
  6400  1135  02F0               	subwf	__div_to_l_@f1,f
  6401  1136  0875               	movf	__div_to_l_@f2+1,w
  6402  1137  1C03               	skipc
  6403  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  6404  1139  02F1               	subwf	__div_to_l_@f1+1,f
  6405  113A  0876               	movf	__div_to_l_@f2+2,w
  6406  113B  1C03               	skipc
  6407  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  6408  113D  02F2               	subwf	__div_to_l_@f1+2,f
  6409  113E  0877               	movf	__div_to_l_@f2+3,w
  6410  113F  1C03               	skipc
  6411  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  6412  1141  02F3               	subwf	__div_to_l_@f1+3,f
  6413  1142                     l3167:
  6414  1142  1420               	bsf	__div_to_l_@quot,0
  6415  1143                     l3169:
  6416  1143  3001               	movlw	1
  6417  1144  00F8               	movwf	??__div_to_l_
  6418  1145                     u4875:
  6419  1145  1003               	clrc
  6420  1146  0DF0               	rlf	__div_to_l_@f1,f
  6421  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  6422  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  6423  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  6424  114A  0BF8               	decfsz	??__div_to_l_,f
  6425  114B  2945               	goto	u4875
  6426  114C                     l3171:
  6427  114C  3001               	movlw	1
  6428  114D  02A4               	subwf	__div_to_l_@cntr,f
  6429  114E  1D03               	btfss	3,2
  6430  114F  2951               	goto	u4881
  6431  1150  2952               	goto	u4880
  6432  1151                     u4881:
  6433  1151  2919               	goto	l3161
  6434  1152                     u4880:
  6435  1152                     l578:
  6436  1152  1FA5               	btfss	__div_to_l_@exp1,7
  6437  1153  2955               	goto	u4891
  6438  1154  2956               	goto	u4890
  6439  1155                     u4891:
  6440  1155  2970               	goto	l3181
  6441  1156                     u4890:
  6442  1156                     l3173:
  6443  1156  0825               	movf	__div_to_l_@exp1,w
  6444  1157  3A80               	xorlw	128
  6445  1158  3E9F               	addlw	159
  6446  1159  1803               	skipnc
  6447  115A  295C               	goto	u4901
  6448  115B  295D               	goto	u4900
  6449  115C                     u4901:
  6450  115C  295E               	goto	l3179
  6451  115D                     u4900:
  6452  115D  28DF               	goto	l3143
  6453  115E                     l3179:
  6454  115E  3001               	movlw	1
  6455  115F                     u4915:
  6456  115F  1003               	clrc
  6457  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  6458  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  6459  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  6460  1163  0CA0               	rrf	__div_to_l_@quot,f
  6461  1164  3EFF               	addlw	-1
  6462  1165  1D03               	skipz
  6463  1166  295F               	goto	u4915
  6464  1167  3001               	movlw	1
  6465  1168  00F8               	movwf	??__div_to_l_
  6466  1169  0878               	movf	??__div_to_l_,w
  6467  116A  07A5               	addwf	__div_to_l_@exp1,f
  6468  116B  1D03               	btfss	3,2
  6469  116C  296E               	goto	u4921
  6470  116D  296F               	goto	u4920
  6471  116E                     u4921:
  6472  116E  295E               	goto	l3179
  6473  116F                     u4920:
  6474  116F  2987               	goto	l3189
  6475  1170                     l3181:
  6476  1170  3020               	movlw	32
  6477  1171  0225               	subwf	__div_to_l_@exp1,w
  6478  1172  1C03               	skipc
  6479  1173  2975               	goto	u4931
  6480  1174  2976               	goto	u4930
  6481  1175                     u4931:
  6482  1175  2982               	goto	l585
  6483  1176                     u4930:
  6484  1176  28DF               	goto	l3143
  6485  1177                     l3187:
  6486  1177  3001               	movlw	1
  6487  1178  00F8               	movwf	??__div_to_l_
  6488  1179                     u4945:
  6489  1179  1003               	clrc
  6490  117A  0DA0               	rlf	__div_to_l_@quot,f
  6491  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  6492  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  6493  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  6494  117E  0BF8               	decfsz	??__div_to_l_,f
  6495  117F  2979               	goto	u4945
  6496  1180  3001               	movlw	1
  6497  1181  02A5               	subwf	__div_to_l_@exp1,f
  6498  1182                     l585:
  6499  1182  0825               	movf	__div_to_l_@exp1,w
  6500  1183  1D03               	btfss	3,2
  6501  1184  2986               	goto	u4951
  6502  1185  2987               	goto	u4950
  6503  1186                     u4951:
  6504  1186  2977               	goto	l3187
  6505  1187                     u4950:
  6506  1187                     l3189:
  6507  1187  0823               	movf	__div_to_l_@quot+3,w
  6508  1188  00F3               	movwf	?__div_to_l_+3
  6509  1189  0822               	movf	__div_to_l_@quot+2,w
  6510  118A  00F2               	movwf	?__div_to_l_+2
  6511  118B  0821               	movf	__div_to_l_@quot+1,w
  6512  118C  00F1               	movwf	?__div_to_l_+1
  6513  118D  0820               	movf	__div_to_l_@quot,w
  6514  118E  00F0               	movwf	?__div_to_l_
  6515  118F                     l574:
  6516  118F  0008               	return
  6517  1190                     __end_of__div_to_l_:
  6518                           
  6519                           	psect	text11
  6520  1AB6                     __ptext11:	
  6521 ;; *************** function ___wmul *****************
  6522 ;; Defined at:
  6523 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  multiplier      2    0[COMMON] unsigned int 
  6526 ;;  multiplicand    2    2[COMMON] unsigned int 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  product         2    4[COMMON] unsigned int 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  2    0[COMMON] unsigned int 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6538 ;;      Params:         4       0       0       0       0
  6539 ;;      Locals:         2       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0
  6541 ;;      Totals:         6       0       0       0       0
  6542 ;;Total ram usage:        6 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_sprintf
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           
  6552                           ;psect for function ___wmul
  6553  1AB6                     ___wmul:
  6554  1AB6                     l3193:	
  6555                           ;incstack = 0
  6556                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6557                           
  6558  1AB6  01F4               	clrf	___wmul@product
  6559  1AB7  01F5               	clrf	___wmul@product+1
  6560  1AB8                     l3195:
  6561  1AB8  1C70               	btfss	___wmul@multiplier,0
  6562  1AB9  2ABB               	goto	u4961
  6563  1ABA  2ABC               	goto	u4960
  6564  1ABB                     u4961:
  6565  1ABB  2AC2               	goto	l404
  6566  1ABC                     u4960:
  6567  1ABC                     l3197:
  6568  1ABC  0872               	movf	___wmul@multiplicand,w
  6569  1ABD  07F4               	addwf	___wmul@product,f
  6570  1ABE  1803               	skipnc
  6571  1ABF  0AF5               	incf	___wmul@product+1,f
  6572  1AC0  0873               	movf	___wmul@multiplicand+1,w
  6573  1AC1  07F5               	addwf	___wmul@product+1,f
  6574  1AC2                     l404:
  6575  1AC2  3001               	movlw	1
  6576  1AC3                     u4975:
  6577  1AC3  1003               	clrc
  6578  1AC4  0DF2               	rlf	___wmul@multiplicand,f
  6579  1AC5  0DF3               	rlf	___wmul@multiplicand+1,f
  6580  1AC6  3EFF               	addlw	-1
  6581  1AC7  1D03               	skipz
  6582  1AC8  2AC3               	goto	u4975
  6583  1AC9                     l3199:
  6584  1AC9  3001               	movlw	1
  6585  1ACA                     u4985:
  6586  1ACA  1003               	clrc
  6587  1ACB  0CF1               	rrf	___wmul@multiplier+1,f
  6588  1ACC  0CF0               	rrf	___wmul@multiplier,f
  6589  1ACD  3EFF               	addlw	-1
  6590  1ACE  1D03               	skipz
  6591  1ACF  2ACA               	goto	u4985
  6592  1AD0                     l3201:
  6593  1AD0  0870               	movf	___wmul@multiplier,w
  6594  1AD1  0471               	iorwf	___wmul@multiplier+1,w
  6595  1AD2  1D03               	btfss	3,2
  6596  1AD3  2AD5               	goto	u4991
  6597  1AD4  2AD6               	goto	u4990
  6598  1AD5                     u4991:
  6599  1AD5  2AB8               	goto	l3195
  6600  1AD6                     u4990:
  6601  1AD6                     l3203:
  6602  1AD6  0875               	movf	___wmul@product+1,w
  6603  1AD7  00F1               	movwf	?___wmul+1
  6604  1AD8  0874               	movf	___wmul@product,w
  6605  1AD9  00F0               	movwf	?___wmul
  6606  1ADA                     l406:
  6607  1ADA  0008               	return
  6608  1ADB                     __end_of___wmul:
  6609                           
  6610                           	psect	text12
  6611  1CAA                     __ptext12:	
  6612 ;; *************** function ___llmod *****************
  6613 ;; Defined at:
  6614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  divisor         4    0[BANK0 ] unsigned long 
  6617 ;;  dividend        4    4[BANK0 ] unsigned long 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  counter         1    9[BANK0 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  4    0[BANK0 ] unsigned long 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6629 ;;      Params:         0       8       0       0       0
  6630 ;;      Locals:         0       1       0       0       0
  6631 ;;      Temps:          0       1       0       0       0
  6632 ;;      Totals:         0      10       0       0       0
  6633 ;;Total ram usage:       10 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_sprintf
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           
  6643                           ;psect for function ___llmod
  6644  1CAA                     ___llmod:
  6645  1CAA                     l3307:	
  6646                           ;incstack = 0
  6647                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6648                           
  6649  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  6650  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  6651  1CAC  0823               	movf	___llmod@divisor+3,w
  6652  1CAD  0422               	iorwf	___llmod@divisor+2,w
  6653  1CAE  0421               	iorwf	___llmod@divisor+1,w
  6654  1CAF  0420               	iorwf	___llmod@divisor,w
  6655  1CB0  1903               	skipnz
  6656  1CB1  2CB3               	goto	u5281
  6657  1CB2  2CB4               	goto	u5280
  6658  1CB3                     u5281:
  6659  1CB3  2CF7               	goto	l3323
  6660  1CB4                     u5280:
  6661  1CB4                     l3309:
  6662  1CB4  01A9               	clrf	___llmod@counter
  6663  1CB5  0AA9               	incf	___llmod@counter,f
  6664  1CB6  2CC4               	goto	l3313
  6665  1CB7                     l3311:
  6666  1CB7  3001               	movlw	1
  6667  1CB8  00A8               	movwf	??___llmod
  6668  1CB9                     u5295:
  6669  1CB9  1003               	clrc
  6670  1CBA  0DA0               	rlf	___llmod@divisor,f
  6671  1CBB  0DA1               	rlf	___llmod@divisor+1,f
  6672  1CBC  0DA2               	rlf	___llmod@divisor+2,f
  6673  1CBD  0DA3               	rlf	___llmod@divisor+3,f
  6674  1CBE  0BA8               	decfsz	??___llmod,f
  6675  1CBF  2CB9               	goto	u5295
  6676  1CC0  3001               	movlw	1
  6677  1CC1  00A8               	movwf	??___llmod
  6678  1CC2  0828               	movf	??___llmod,w
  6679  1CC3  07A9               	addwf	___llmod@counter,f
  6680  1CC4                     l3313:
  6681  1CC4  1FA3               	btfss	___llmod@divisor+3,7
  6682  1CC5  2CC7               	goto	u5301
  6683  1CC6  2CC8               	goto	u5300
  6684  1CC7                     u5301:
  6685  1CC7  2CB7               	goto	l3311
  6686  1CC8                     u5300:
  6687  1CC8                     l3315:
  6688  1CC8  0823               	movf	___llmod@divisor+3,w
  6689  1CC9  0227               	subwf	___llmod@dividend+3,w
  6690  1CCA  1D03               	skipz
  6691  1CCB  2CD6               	goto	u5315
  6692  1CCC  0822               	movf	___llmod@divisor+2,w
  6693  1CCD  0226               	subwf	___llmod@dividend+2,w
  6694  1CCE  1D03               	skipz
  6695  1CCF  2CD6               	goto	u5315
  6696  1CD0  0821               	movf	___llmod@divisor+1,w
  6697  1CD1  0225               	subwf	___llmod@dividend+1,w
  6698  1CD2  1D03               	skipz
  6699  1CD3  2CD6               	goto	u5315
  6700  1CD4  0820               	movf	___llmod@divisor,w
  6701  1CD5  0224               	subwf	___llmod@dividend,w
  6702  1CD6                     u5315:
  6703  1CD6  1C03               	skipc
  6704  1CD7  2CD9               	goto	u5311
  6705  1CD8  2CDA               	goto	u5310
  6706  1CD9                     u5311:
  6707  1CD9  2CE8               	goto	l3319
  6708  1CDA                     u5310:
  6709  1CDA                     l3317:
  6710  1CDA  0820               	movf	___llmod@divisor,w
  6711  1CDB  02A4               	subwf	___llmod@dividend,f
  6712  1CDC  0821               	movf	___llmod@divisor+1,w
  6713  1CDD  1C03               	skipc
  6714  1CDE  0F21               	incfsz	___llmod@divisor+1,w
  6715  1CDF  02A5               	subwf	___llmod@dividend+1,f
  6716  1CE0  0822               	movf	___llmod@divisor+2,w
  6717  1CE1  1C03               	skipc
  6718  1CE2  0F22               	incfsz	___llmod@divisor+2,w
  6719  1CE3  02A6               	subwf	___llmod@dividend+2,f
  6720  1CE4  0823               	movf	___llmod@divisor+3,w
  6721  1CE5  1C03               	skipc
  6722  1CE6  0F23               	incfsz	___llmod@divisor+3,w
  6723  1CE7  02A7               	subwf	___llmod@dividend+3,f
  6724  1CE8                     l3319:
  6725  1CE8  3001               	movlw	1
  6726  1CE9                     u5325:
  6727  1CE9  1003               	clrc
  6728  1CEA  0CA3               	rrf	___llmod@divisor+3,f
  6729  1CEB  0CA2               	rrf	___llmod@divisor+2,f
  6730  1CEC  0CA1               	rrf	___llmod@divisor+1,f
  6731  1CED  0CA0               	rrf	___llmod@divisor,f
  6732  1CEE  3EFF               	addlw	-1
  6733  1CEF  1D03               	skipz
  6734  1CF0  2CE9               	goto	u5325
  6735  1CF1                     l3321:
  6736  1CF1  3001               	movlw	1
  6737  1CF2  02A9               	subwf	___llmod@counter,f
  6738  1CF3  1D03               	btfss	3,2
  6739  1CF4  2CF6               	goto	u5331
  6740  1CF5  2CF7               	goto	u5330
  6741  1CF6                     u5331:
  6742  1CF6  2CC8               	goto	l3315
  6743  1CF7                     u5330:
  6744  1CF7                     l3323:
  6745  1CF7  0827               	movf	___llmod@dividend+3,w
  6746  1CF8  00A3               	movwf	?___llmod+3
  6747  1CF9  0826               	movf	___llmod@dividend+2,w
  6748  1CFA  00A2               	movwf	?___llmod+2
  6749  1CFB  0825               	movf	___llmod@dividend+1,w
  6750  1CFC  00A1               	movwf	?___llmod+1
  6751  1CFD  0824               	movf	___llmod@dividend,w
  6752  1CFE  00A0               	movwf	?___llmod
  6753  1CFF                     l660:
  6754  1CFF  0008               	return
  6755  1D00                     __end_of___llmod:
  6756                           
  6757                           	psect	text13
  6758  1D59                     __ptext13:	
  6759 ;; *************** function ___lldiv *****************
  6760 ;; Defined at:
  6761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  divisor         4    0[COMMON] unsigned long 
  6764 ;;  dividend        4    4[COMMON] unsigned long 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  quotient        4    9[COMMON] unsigned long 
  6767 ;;  counter         1   13[COMMON] unsigned char 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  4    0[COMMON] unsigned long 
  6770 ;; Registers used:
  6771 ;;		wreg, status,2, status,0
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6777 ;;      Params:         8       0       0       0       0
  6778 ;;      Locals:         5       0       0       0       0
  6779 ;;      Temps:          1       0       0       0       0
  6780 ;;      Totals:        14       0       0       0       0
  6781 ;;Total ram usage:       14 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_sprintf
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           
  6791                           ;psect for function ___lldiv
  6792  1D59                     ___lldiv:
  6793  1D59                     l3207:	
  6794                           ;incstack = 0
  6795                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6796                           
  6797  1D59  3000               	movlw	0
  6798  1D5A  00FC               	movwf	___lldiv@quotient+3
  6799  1D5B  3000               	movlw	0
  6800  1D5C  00FB               	movwf	___lldiv@quotient+2
  6801  1D5D  3000               	movlw	0
  6802  1D5E  00FA               	movwf	___lldiv@quotient+1
  6803  1D5F  3000               	movlw	0
  6804  1D60  00F9               	movwf	___lldiv@quotient
  6805  1D61  0873               	movf	___lldiv@divisor+3,w
  6806  1D62  0472               	iorwf	___lldiv@divisor+2,w
  6807  1D63  0471               	iorwf	___lldiv@divisor+1,w
  6808  1D64  0470               	iorwf	___lldiv@divisor,w
  6809  1D65  1903               	skipnz
  6810  1D66  2D68               	goto	u5001
  6811  1D67  2D69               	goto	u5000
  6812  1D68                     u5001:
  6813  1D68  2DB6               	goto	l3227
  6814  1D69                     u5000:
  6815  1D69                     l3209:
  6816  1D69  01FD               	clrf	___lldiv@counter
  6817  1D6A  0AFD               	incf	___lldiv@counter,f
  6818  1D6B  2D79               	goto	l3213
  6819  1D6C                     l3211:
  6820  1D6C  3001               	movlw	1
  6821  1D6D  00F8               	movwf	??___lldiv
  6822  1D6E                     u5015:
  6823  1D6E  1003               	clrc
  6824  1D6F  0DF0               	rlf	___lldiv@divisor,f
  6825  1D70  0DF1               	rlf	___lldiv@divisor+1,f
  6826  1D71  0DF2               	rlf	___lldiv@divisor+2,f
  6827  1D72  0DF3               	rlf	___lldiv@divisor+3,f
  6828  1D73  0BF8               	decfsz	??___lldiv,f
  6829  1D74  2D6E               	goto	u5015
  6830  1D75  3001               	movlw	1
  6831  1D76  00F8               	movwf	??___lldiv
  6832  1D77  0878               	movf	??___lldiv,w
  6833  1D78  07FD               	addwf	___lldiv@counter,f
  6834  1D79                     l3213:
  6835  1D79  1FF3               	btfss	___lldiv@divisor+3,7
  6836  1D7A  2D7C               	goto	u5021
  6837  1D7B  2D7D               	goto	u5020
  6838  1D7C                     u5021:
  6839  1D7C  2D6C               	goto	l3211
  6840  1D7D                     u5020:
  6841  1D7D                     l3215:
  6842  1D7D  3001               	movlw	1
  6843  1D7E  00F8               	movwf	??___lldiv
  6844  1D7F                     u5035:
  6845  1D7F  1003               	clrc
  6846  1D80  0DF9               	rlf	___lldiv@quotient,f
  6847  1D81  0DFA               	rlf	___lldiv@quotient+1,f
  6848  1D82  0DFB               	rlf	___lldiv@quotient+2,f
  6849  1D83  0DFC               	rlf	___lldiv@quotient+3,f
  6850  1D84  0BF8               	decfsz	??___lldiv,f
  6851  1D85  2D7F               	goto	u5035
  6852  1D86                     l3217:
  6853  1D86  0873               	movf	___lldiv@divisor+3,w
  6854  1D87  0277               	subwf	___lldiv@dividend+3,w
  6855  1D88  1D03               	skipz
  6856  1D89  2D94               	goto	u5045
  6857  1D8A  0872               	movf	___lldiv@divisor+2,w
  6858  1D8B  0276               	subwf	___lldiv@dividend+2,w
  6859  1D8C  1D03               	skipz
  6860  1D8D  2D94               	goto	u5045
  6861  1D8E  0871               	movf	___lldiv@divisor+1,w
  6862  1D8F  0275               	subwf	___lldiv@dividend+1,w
  6863  1D90  1D03               	skipz
  6864  1D91  2D94               	goto	u5045
  6865  1D92  0870               	movf	___lldiv@divisor,w
  6866  1D93  0274               	subwf	___lldiv@dividend,w
  6867  1D94                     u5045:
  6868  1D94  1C03               	skipc
  6869  1D95  2D97               	goto	u5041
  6870  1D96  2D98               	goto	u5040
  6871  1D97                     u5041:
  6872  1D97  2DA7               	goto	l3223
  6873  1D98                     u5040:
  6874  1D98                     l3219:
  6875  1D98  0870               	movf	___lldiv@divisor,w
  6876  1D99  02F4               	subwf	___lldiv@dividend,f
  6877  1D9A  0871               	movf	___lldiv@divisor+1,w
  6878  1D9B  1C03               	skipc
  6879  1D9C  0F71               	incfsz	___lldiv@divisor+1,w
  6880  1D9D  02F5               	subwf	___lldiv@dividend+1,f
  6881  1D9E  0872               	movf	___lldiv@divisor+2,w
  6882  1D9F  1C03               	skipc
  6883  1DA0  0F72               	incfsz	___lldiv@divisor+2,w
  6884  1DA1  02F6               	subwf	___lldiv@dividend+2,f
  6885  1DA2  0873               	movf	___lldiv@divisor+3,w
  6886  1DA3  1C03               	skipc
  6887  1DA4  0F73               	incfsz	___lldiv@divisor+3,w
  6888  1DA5  02F7               	subwf	___lldiv@dividend+3,f
  6889  1DA6                     l3221:
  6890  1DA6  1479               	bsf	___lldiv@quotient,0
  6891  1DA7                     l3223:
  6892  1DA7  3001               	movlw	1
  6893  1DA8                     u5055:
  6894  1DA8  1003               	clrc
  6895  1DA9  0CF3               	rrf	___lldiv@divisor+3,f
  6896  1DAA  0CF2               	rrf	___lldiv@divisor+2,f
  6897  1DAB  0CF1               	rrf	___lldiv@divisor+1,f
  6898  1DAC  0CF0               	rrf	___lldiv@divisor,f
  6899  1DAD  3EFF               	addlw	-1
  6900  1DAE  1D03               	skipz
  6901  1DAF  2DA8               	goto	u5055
  6902  1DB0                     l3225:
  6903  1DB0  3001               	movlw	1
  6904  1DB1  02FD               	subwf	___lldiv@counter,f
  6905  1DB2  1D03               	btfss	3,2
  6906  1DB3  2DB5               	goto	u5061
  6907  1DB4  2DB6               	goto	u5060
  6908  1DB5                     u5061:
  6909  1DB5  2D7D               	goto	l3215
  6910  1DB6                     u5060:
  6911  1DB6                     l3227:
  6912  1DB6  087C               	movf	___lldiv@quotient+3,w
  6913  1DB7  00F3               	movwf	?___lldiv+3
  6914  1DB8  087B               	movf	___lldiv@quotient+2,w
  6915  1DB9  00F2               	movwf	?___lldiv+2
  6916  1DBA  087A               	movf	___lldiv@quotient+1,w
  6917  1DBB  00F1               	movwf	?___lldiv+1
  6918  1DBC  0879               	movf	___lldiv@quotient,w
  6919  1DBD  00F0               	movwf	?___lldiv
  6920  1DBE                     l440:
  6921  1DBE  0008               	return
  6922  1DBF                     __end_of___lldiv:
  6923                           
  6924                           	psect	text14
  6925  1E28                     __ptext14:	
  6926 ;; *************** function ___fltol *****************
  6927 ;; Defined at:
  6928 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  f1              4   49[BANK0 ] unsigned long 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  exp1            1   59[BANK0 ] unsigned char 
  6933 ;;  sign1           1   58[BANK0 ] unsigned char 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  4   49[BANK0 ] long 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6943 ;;      Params:         0       4       0       0       0
  6944 ;;      Locals:         0       2       0       0       0
  6945 ;;      Temps:          0       5       0       0       0
  6946 ;;      Totals:         0      11       0       0       0
  6947 ;;Total ram usage:       11 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_sprintf
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function ___fltol
  6958  1E28                     ___fltol:
  6959  1E28                     l3271:	
  6960                           ;incstack = 0
  6961                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6962                           
  6963  1E28  1003               	clrc
  6964  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  6965  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  6966  1E2B  0D53               	rlf	___fltol@f1+2,w
  6967  1E2C  0D54               	rlf	___fltol@f1+3,w
  6968  1E2D  00D5               	movwf	??___fltol
  6969  1E2E  0855               	movf	??___fltol,w
  6970  1E2F  00DB               	movwf	___fltol@exp1
  6971  1E30  085B               	movf	___fltol@exp1,w
  6972  1E31  1D03               	btfss	3,2
  6973  1E32  2E34               	goto	u5181
  6974  1E33  2E35               	goto	u5180
  6975  1E34                     u5181:
  6976  1E34  2E3E               	goto	l3277
  6977  1E35                     u5180:
  6978  1E35                     l3273:
  6979  1E35  3000               	movlw	0
  6980  1E36  00D4               	movwf	?___fltol+3
  6981  1E37  3000               	movlw	0
  6982  1E38  00D3               	movwf	?___fltol+2
  6983  1E39  3000               	movlw	0
  6984  1E3A  00D2               	movwf	?___fltol+1
  6985  1E3B  3000               	movlw	0
  6986  1E3C  00D1               	movwf	?___fltol
  6987  1E3D  2EA3               	goto	l607
  6988  1E3E                     l3277:
  6989  1E3E  0851               	movf	___fltol@f1,w
  6990  1E3F  00D5               	movwf	??___fltol
  6991  1E40  0852               	movf	___fltol@f1+1,w
  6992  1E41  00D6               	movwf	??___fltol+1
  6993  1E42  0853               	movf	___fltol@f1+2,w
  6994  1E43  00D7               	movwf	??___fltol+2
  6995  1E44  0854               	movf	___fltol@f1+3,w
  6996  1E45  00D8               	movwf	??___fltol+3
  6997  1E46  301F               	movlw	31
  6998  1E47                     u5195:
  6999  1E47  1003               	clrc
  7000  1E48  0CD8               	rrf	??___fltol+3,f
  7001  1E49  0CD7               	rrf	??___fltol+2,f
  7002  1E4A  0CD6               	rrf	??___fltol+1,f
  7003  1E4B  0CD5               	rrf	??___fltol,f
  7004  1E4C                     u5190:
  7005  1E4C  3EFF               	addlw	-1
  7006  1E4D  1D03               	skipz
  7007  1E4E  2E47               	goto	u5195
  7008  1E4F  0855               	movf	??___fltol,w
  7009  1E50  00D9               	movwf	??___fltol+4
  7010  1E51  0859               	movf	??___fltol+4,w
  7011  1E52  00DA               	movwf	___fltol@sign1
  7012  1E53                     l3279:
  7013  1E53  17D3               	bsf	___fltol@f1+2,7
  7014  1E54                     l3281:
  7015  1E54  30FF               	movlw	255
  7016  1E55  05D1               	andwf	___fltol@f1,f
  7017  1E56  30FF               	movlw	255
  7018  1E57  05D2               	andwf	___fltol@f1+1,f
  7019  1E58  30FF               	movlw	255
  7020  1E59  05D3               	andwf	___fltol@f1+2,f
  7021  1E5A  3000               	movlw	0
  7022  1E5B  05D4               	andwf	___fltol@f1+3,f
  7023  1E5C                     l3283:
  7024  1E5C  3096               	movlw	150
  7025  1E5D  02DB               	subwf	___fltol@exp1,f
  7026  1E5E                     l3285:
  7027  1E5E  1FDB               	btfss	___fltol@exp1,7
  7028  1E5F  2E61               	goto	u5201
  7029  1E60  2E62               	goto	u5200
  7030  1E61                     u5201:
  7031  1E61  2E7C               	goto	l3295
  7032  1E62                     u5200:
  7033  1E62                     l3287:
  7034  1E62  085B               	movf	___fltol@exp1,w
  7035  1E63  3A80               	xorlw	128
  7036  1E64  3E97               	addlw	151
  7037  1E65  1803               	skipnc
  7038  1E66  2E68               	goto	u5211
  7039  1E67  2E69               	goto	u5210
  7040  1E68                     u5211:
  7041  1E68  2E6A               	goto	l3293
  7042  1E69                     u5210:
  7043  1E69  2E35               	goto	l3273
  7044  1E6A                     l3293:
  7045  1E6A  3001               	movlw	1
  7046  1E6B                     u5225:
  7047  1E6B  1003               	clrc
  7048  1E6C  0CD4               	rrf	___fltol@f1+3,f
  7049  1E6D  0CD3               	rrf	___fltol@f1+2,f
  7050  1E6E  0CD2               	rrf	___fltol@f1+1,f
  7051  1E6F  0CD1               	rrf	___fltol@f1,f
  7052  1E70  3EFF               	addlw	-1
  7053  1E71  1D03               	skipz
  7054  1E72  2E6B               	goto	u5225
  7055  1E73  3001               	movlw	1
  7056  1E74  00D5               	movwf	??___fltol
  7057  1E75  0855               	movf	??___fltol,w
  7058  1E76  07DB               	addwf	___fltol@exp1,f
  7059  1E77  1D03               	btfss	3,2
  7060  1E78  2E7A               	goto	u5231
  7061  1E79  2E7B               	goto	u5230
  7062  1E7A                     u5231:
  7063  1E7A  2E6A               	goto	l3293
  7064  1E7B                     u5230:
  7065  1E7B  2E93               	goto	l3303
  7066  1E7C                     l3295:
  7067  1E7C  3020               	movlw	32
  7068  1E7D  025B               	subwf	___fltol@exp1,w
  7069  1E7E  1C03               	skipc
  7070  1E7F  2E81               	goto	u5241
  7071  1E80  2E82               	goto	u5240
  7072  1E81                     u5241:
  7073  1E81  2E8E               	goto	l614
  7074  1E82                     u5240:
  7075  1E82  2E35               	goto	l3273
  7076  1E83                     l3301:
  7077  1E83  3001               	movlw	1
  7078  1E84  00D5               	movwf	??___fltol
  7079  1E85                     u5255:
  7080  1E85  1003               	clrc
  7081  1E86  0DD1               	rlf	___fltol@f1,f
  7082  1E87  0DD2               	rlf	___fltol@f1+1,f
  7083  1E88  0DD3               	rlf	___fltol@f1+2,f
  7084  1E89  0DD4               	rlf	___fltol@f1+3,f
  7085  1E8A  0BD5               	decfsz	??___fltol,f
  7086  1E8B  2E85               	goto	u5255
  7087  1E8C  3001               	movlw	1
  7088  1E8D  02DB               	subwf	___fltol@exp1,f
  7089  1E8E                     l614:
  7090  1E8E  085B               	movf	___fltol@exp1,w
  7091  1E8F  1D03               	btfss	3,2
  7092  1E90  2E92               	goto	u5261
  7093  1E91  2E93               	goto	u5260
  7094  1E92                     u5261:
  7095  1E92  2E83               	goto	l3301
  7096  1E93                     u5260:
  7097  1E93                     l3303:
  7098  1E93  085A               	movf	___fltol@sign1,w
  7099  1E94  1903               	btfsc	3,2
  7100  1E95  2E97               	goto	u5271
  7101  1E96  2E98               	goto	u5270
  7102  1E97                     u5271:
  7103  1E97  2EA3               	goto	l617
  7104  1E98                     u5270:
  7105  1E98                     l3305:
  7106  1E98  09D1               	comf	___fltol@f1,f
  7107  1E99  09D2               	comf	___fltol@f1+1,f
  7108  1E9A  09D3               	comf	___fltol@f1+2,f
  7109  1E9B  09D4               	comf	___fltol@f1+3,f
  7110  1E9C  0AD1               	incf	___fltol@f1,f
  7111  1E9D  1903               	skipnz
  7112  1E9E  0AD2               	incf	___fltol@f1+1,f
  7113  1E9F  1903               	skipnz
  7114  1EA0  0AD3               	incf	___fltol@f1+2,f
  7115  1EA1  1903               	skipnz
  7116  1EA2  0AD4               	incf	___fltol@f1+3,f
  7117  1EA3                     l617:
  7118  1EA3                     l607:
  7119  1EA3  0008               	return
  7120  1EA4                     __end_of___fltol:
  7121                           
  7122                           	psect	text15
  7123  1A92                     __ptext15:	
  7124 ;; *************** function ___flsub *****************
  7125 ;; Defined at:
  7126 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  a               4   70[BANK0 ] long 
  7129 ;;  b               4   74[BANK0 ] long 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  4   70[BANK0 ] long 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       8       0       0       0
  7142 ;;      Locals:         0       0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0
  7144 ;;      Totals:         0       8       0       0       0
  7145 ;;Total ram usage:        8 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    1
  7148 ;; This function calls:
  7149 ;;		___fladd
  7150 ;; This function is called by:
  7151 ;;		_sprintf
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function ___flsub
  7157  1A92                     ___flsub:
  7158  1A92                     l3327:	
  7159                           ;incstack = 0
  7160                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7161                           
  7162  1A92  3080               	movlw	128
  7163  1A93  1283               	bcf	3,5	;RP0=0, select bank0
  7164  1A94  1303               	bcf	3,6	;RP1=0, select bank0
  7165  1A95  06E9               	xorwf	___flsub@a+3,f
  7166  1A96                     l3329:
  7167  1A96  086D               	movf	___flsub@b+3,w
  7168  1A97  00D5               	movwf	___fladd@b+3
  7169  1A98  086C               	movf	___flsub@b+2,w
  7170  1A99  00D4               	movwf	___fladd@b+2
  7171  1A9A  086B               	movf	___flsub@b+1,w
  7172  1A9B  00D3               	movwf	___fladd@b+1
  7173  1A9C  086A               	movf	___flsub@b,w
  7174  1A9D  00D2               	movwf	___fladd@b
  7175  1A9E  0869               	movf	___flsub@a+3,w
  7176  1A9F  00D9               	movwf	___fladd@a+3
  7177  1AA0  0868               	movf	___flsub@a+2,w
  7178  1AA1  00D8               	movwf	___fladd@a+2
  7179  1AA2  0867               	movf	___flsub@a+1,w
  7180  1AA3  00D7               	movwf	___fladd@a+1
  7181  1AA4  0866               	movf	___flsub@a,w
  7182  1AA5  00D6               	movwf	___fladd@a
  7183  1AA6  160A  118A  2578  160A  158A  	fcall	___fladd
  7184  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
  7185  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
  7186  1AAD  0855               	movf	?___fladd+3,w
  7187  1AAE  00E9               	movwf	?___flsub+3
  7188  1AAF  0854               	movf	?___fladd+2,w
  7189  1AB0  00E8               	movwf	?___flsub+2
  7190  1AB1  0853               	movf	?___fladd+1,w
  7191  1AB2  00E7               	movwf	?___flsub+1
  7192  1AB3  0852               	movf	?___fladd,w
  7193  1AB4  00E6               	movwf	?___flsub
  7194  1AB5                     l777:
  7195  1AB5  0008               	return
  7196  1AB6                     __end_of___flsub:
  7197                           
  7198                           	psect	text16
  7199  1578                     __ptext16:	
  7200 ;; *************** function ___fladd *****************
  7201 ;; Defined at:
  7202 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  b               4   50[BANK0 ] long 
  7205 ;;  a               4   54[BANK0 ] long 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  grs             1   69[BANK0 ] unsigned char 
  7208 ;;  bexp            1   68[BANK0 ] unsigned char 
  7209 ;;  aexp            1   67[BANK0 ] unsigned char 
  7210 ;;  signs           1   66[BANK0 ] unsigned char 
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  4   50[BANK0 ] unsigned char 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0, btemp+1
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7220 ;;      Params:         0       8       0       0       0
  7221 ;;      Locals:         0       4       0       0       0
  7222 ;;      Temps:          0       8       0       0       0
  7223 ;;      Totals:         0      20       0       0       0
  7224 ;;Total ram usage:       20 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_sprintf
  7230 ;;		___flsub
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function ___fladd
  7236  1578                     ___fladd:
  7237  1578                     l2661:	
  7238                           ;incstack = 0
  7239                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7240                           
  7241  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7242  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7243  157A  0855               	movf	___fladd@b+3,w
  7244  157B  3980               	andlw	128
  7245  157C  00DA               	movwf	??___fladd
  7246  157D  085A               	movf	??___fladd,w
  7247  157E  00E2               	movwf	___fladd@signs
  7248  157F                     l2663:
  7249  157F  0855               	movf	___fladd@b+3,w
  7250  1580  00DA               	movwf	??___fladd
  7251  1581  075A               	addwf	??___fladd,w
  7252  1582  00DB               	movwf	??___fladd+1
  7253  1583  085B               	movf	??___fladd+1,w
  7254  1584  00E4               	movwf	___fladd@bexp
  7255  1585                     l2665:
  7256  1585  1FD4               	btfss	___fladd@b+2,7
  7257  1586  2D88               	goto	u3581
  7258  1587  2D89               	goto	u3580
  7259  1588                     u3581:
  7260  1588  2D8A               	goto	l2669
  7261  1589                     u3580:
  7262  1589                     l2667:
  7263  1589  1464               	bsf	___fladd@bexp,0
  7264  158A                     l2669:
  7265  158A  0864               	movf	___fladd@bexp,w
  7266  158B  1903               	btfsc	3,2
  7267  158C  2D8E               	goto	u3591
  7268  158D  2D8F               	goto	u3590
  7269  158E                     u3591:
  7270  158E  2D9F               	goto	l2679
  7271  158F                     u3590:
  7272  158F                     l2671:
  7273  158F  0A64               	incf	___fladd@bexp,w
  7274  1590  1D03               	btfss	3,2
  7275  1591  2D93               	goto	u3601
  7276  1592  2D94               	goto	u3600
  7277  1593                     u3601:
  7278  1593  2D9C               	goto	l2675
  7279  1594                     u3600:
  7280  1594                     l2673:
  7281  1594  3000               	movlw	0
  7282  1595  00D5               	movwf	___fladd@b+3
  7283  1596  3000               	movlw	0
  7284  1597  00D4               	movwf	___fladd@b+2
  7285  1598  3000               	movlw	0
  7286  1599  00D3               	movwf	___fladd@b+1
  7287  159A  3000               	movlw	0
  7288  159B  00D2               	movwf	___fladd@b
  7289  159C                     l2675:
  7290  159C  17D4               	bsf	___fladd@b+2,7
  7291  159D                     l2677:
  7292  159D  01D5               	clrf	___fladd@b+3
  7293  159E  2DA7               	goto	l2681
  7294  159F                     l2679:
  7295  159F  3000               	movlw	0
  7296  15A0  00D5               	movwf	___fladd@b+3
  7297  15A1  3000               	movlw	0
  7298  15A2  00D4               	movwf	___fladd@b+2
  7299  15A3  3000               	movlw	0
  7300  15A4  00D3               	movwf	___fladd@b+1
  7301  15A5  3000               	movlw	0
  7302  15A6  00D2               	movwf	___fladd@b
  7303  15A7                     l2681:
  7304  15A7  0859               	movf	___fladd@a+3,w
  7305  15A8  3980               	andlw	128
  7306  15A9  00DA               	movwf	??___fladd
  7307  15AA  085A               	movf	??___fladd,w
  7308  15AB  00E3               	movwf	___fladd@aexp
  7309  15AC                     l2683:
  7310  15AC  0863               	movf	___fladd@aexp,w
  7311  15AD  0662               	xorwf	___fladd@signs,w
  7312  15AE  1903               	skipnz
  7313  15AF  2DB1               	goto	u3611
  7314  15B0  2DB2               	goto	u3610
  7315  15B1                     u3611:
  7316  15B1  2DB3               	goto	l2687
  7317  15B2                     u3610:
  7318  15B2                     l2685:
  7319  15B2  1762               	bsf	___fladd@signs,6
  7320  15B3                     l2687:
  7321  15B3  0859               	movf	___fladd@a+3,w
  7322  15B4  00DA               	movwf	??___fladd
  7323  15B5  075A               	addwf	??___fladd,w
  7324  15B6  00DB               	movwf	??___fladd+1
  7325  15B7  085B               	movf	??___fladd+1,w
  7326  15B8  00E3               	movwf	___fladd@aexp
  7327  15B9                     l2689:
  7328  15B9  1FD8               	btfss	___fladd@a+2,7
  7329  15BA  2DBC               	goto	u3621
  7330  15BB  2DBD               	goto	u3620
  7331  15BC                     u3621:
  7332  15BC  2DBE               	goto	l2693
  7333  15BD                     u3620:
  7334  15BD                     l2691:
  7335  15BD  1463               	bsf	___fladd@aexp,0
  7336  15BE                     l2693:
  7337  15BE  0863               	movf	___fladd@aexp,w
  7338  15BF  1903               	btfsc	3,2
  7339  15C0  2DC2               	goto	u3631
  7340  15C1  2DC3               	goto	u3630
  7341  15C2                     u3631:
  7342  15C2  2DD3               	goto	l2703
  7343  15C3                     u3630:
  7344  15C3                     l2695:
  7345  15C3  0A63               	incf	___fladd@aexp,w
  7346  15C4  1D03               	btfss	3,2
  7347  15C5  2DC7               	goto	u3641
  7348  15C6  2DC8               	goto	u3640
  7349  15C7                     u3641:
  7350  15C7  2DD0               	goto	l2699
  7351  15C8                     u3640:
  7352  15C8                     l2697:
  7353  15C8  3000               	movlw	0
  7354  15C9  00D9               	movwf	___fladd@a+3
  7355  15CA  3000               	movlw	0
  7356  15CB  00D8               	movwf	___fladd@a+2
  7357  15CC  3000               	movlw	0
  7358  15CD  00D7               	movwf	___fladd@a+1
  7359  15CE  3000               	movlw	0
  7360  15CF  00D6               	movwf	___fladd@a
  7361  15D0                     l2699:
  7362  15D0  17D8               	bsf	___fladd@a+2,7
  7363  15D1                     l2701:
  7364  15D1  01D9               	clrf	___fladd@a+3
  7365  15D2  2DDB               	goto	l731
  7366  15D3                     l2703:
  7367  15D3  3000               	movlw	0
  7368  15D4  00D9               	movwf	___fladd@a+3
  7369  15D5  3000               	movlw	0
  7370  15D6  00D8               	movwf	___fladd@a+2
  7371  15D7  3000               	movlw	0
  7372  15D8  00D7               	movwf	___fladd@a+1
  7373  15D9  3000               	movlw	0
  7374  15DA  00D6               	movwf	___fladd@a
  7375  15DB                     l731:
  7376  15DB  0864               	movf	___fladd@bexp,w
  7377  15DC  0263               	subwf	___fladd@aexp,w
  7378  15DD  1803               	skipnc
  7379  15DE  2DE0               	goto	u3651
  7380  15DF  2DE1               	goto	u3650
  7381  15E0                     u3651:
  7382  15E0  2E25               	goto	l2739
  7383  15E1                     u3650:
  7384  15E1                     l2705:
  7385  15E1  1F62               	btfss	___fladd@signs,6
  7386  15E2  2DE4               	goto	u3661
  7387  15E3  2DE5               	goto	u3660
  7388  15E4                     u3661:
  7389  15E4  2DE9               	goto	l2709
  7390  15E5                     u3660:
  7391  15E5                     l2707:
  7392  15E5  3080               	movlw	128
  7393  15E6  00DA               	movwf	??___fladd
  7394  15E7  085A               	movf	??___fladd,w
  7395  15E8  06E2               	xorwf	___fladd@signs,f
  7396  15E9                     l2709:
  7397  15E9  0864               	movf	___fladd@bexp,w
  7398  15EA  00DA               	movwf	??___fladd
  7399  15EB  085A               	movf	??___fladd,w
  7400  15EC  00E5               	movwf	___fladd@grs
  7401  15ED                     l2711:
  7402  15ED  0863               	movf	___fladd@aexp,w
  7403  15EE  00DA               	movwf	??___fladd
  7404  15EF  085A               	movf	??___fladd,w
  7405  15F0  00E4               	movwf	___fladd@bexp
  7406  15F1                     l2713:
  7407  15F1  0865               	movf	___fladd@grs,w
  7408  15F2  00DA               	movwf	??___fladd
  7409  15F3  085A               	movf	??___fladd,w
  7410  15F4  00E3               	movwf	___fladd@aexp
  7411  15F5                     l2715:
  7412  15F5  0852               	movf	___fladd@b,w
  7413  15F6  00DA               	movwf	??___fladd
  7414  15F7  085A               	movf	??___fladd,w
  7415  15F8  00E5               	movwf	___fladd@grs
  7416  15F9                     l2717:
  7417  15F9  0856               	movf	___fladd@a,w
  7418  15FA  00DA               	movwf	??___fladd
  7419  15FB  085A               	movf	??___fladd,w
  7420  15FC  00D2               	movwf	___fladd@b
  7421  15FD                     l2719:
  7422  15FD  0865               	movf	___fladd@grs,w
  7423  15FE  00DA               	movwf	??___fladd
  7424  15FF  085A               	movf	??___fladd,w
  7425  1600  00D6               	movwf	___fladd@a
  7426  1601                     l2721:
  7427  1601  0853               	movf	___fladd@b+1,w
  7428  1602  00DA               	movwf	??___fladd
  7429  1603  085A               	movf	??___fladd,w
  7430  1604  00E5               	movwf	___fladd@grs
  7431  1605                     l2723:
  7432  1605  0857               	movf	___fladd@a+1,w
  7433  1606  00DA               	movwf	??___fladd
  7434  1607  085A               	movf	??___fladd,w
  7435  1608  00D3               	movwf	___fladd@b+1
  7436  1609                     l2725:
  7437  1609  0865               	movf	___fladd@grs,w
  7438  160A  00DA               	movwf	??___fladd
  7439  160B  085A               	movf	??___fladd,w
  7440  160C  00D7               	movwf	___fladd@a+1
  7441  160D                     l2727:
  7442  160D  0854               	movf	___fladd@b+2,w
  7443  160E  00DA               	movwf	??___fladd
  7444  160F  085A               	movf	??___fladd,w
  7445  1610  00E5               	movwf	___fladd@grs
  7446  1611                     l2729:
  7447  1611  0858               	movf	___fladd@a+2,w
  7448  1612  00DA               	movwf	??___fladd
  7449  1613  085A               	movf	??___fladd,w
  7450  1614  00D4               	movwf	___fladd@b+2
  7451  1615                     l2731:
  7452  1615  0865               	movf	___fladd@grs,w
  7453  1616  00DA               	movwf	??___fladd
  7454  1617  085A               	movf	??___fladd,w
  7455  1618  00D8               	movwf	___fladd@a+2
  7456  1619                     l2733:
  7457  1619  0855               	movf	___fladd@b+3,w
  7458  161A  00DA               	movwf	??___fladd
  7459  161B  085A               	movf	??___fladd,w
  7460  161C  00E5               	movwf	___fladd@grs
  7461  161D                     l2735:
  7462  161D  0859               	movf	___fladd@a+3,w
  7463  161E  00DA               	movwf	??___fladd
  7464  161F  085A               	movf	??___fladd,w
  7465  1620  00D5               	movwf	___fladd@b+3
  7466  1621                     l2737:
  7467  1621  0865               	movf	___fladd@grs,w
  7468  1622  00DA               	movwf	??___fladd
  7469  1623  085A               	movf	??___fladd,w
  7470  1624  00D9               	movwf	___fladd@a+3
  7471  1625                     l2739:
  7472  1625  01E5               	clrf	___fladd@grs
  7473  1626                     l2741:
  7474  1626  0863               	movf	___fladd@aexp,w
  7475  1627  00DA               	movwf	??___fladd
  7476  1628  01DB               	clrf	??___fladd+1
  7477  1629  085B               	movf	??___fladd+1,w
  7478  162A  00DD               	movwf	??___fladd+3
  7479  162B  0864               	movf	___fladd@bexp,w
  7480  162C  025A               	subwf	??___fladd,w
  7481  162D  00DC               	movwf	??___fladd+2
  7482  162E  1C03               	skipc
  7483  162F  03DD               	decf	??___fladd+3,f
  7484  1630  085D               	movf	??___fladd+3,w
  7485  1631  3A80               	xorlw	128
  7486  1632  00FF               	movwf	btemp+1
  7487  1633  3080               	movlw	128
  7488  1634  027F               	subwf	btemp+1,w
  7489  1635  1D03               	skipz
  7490  1636  2E39               	goto	u3675
  7491  1637  301A               	movlw	26
  7492  1638  025C               	subwf	??___fladd+2,w
  7493  1639                     u3675:
  7494  1639  1C03               	skipc
  7495  163A  2E3C               	goto	u3671
  7496  163B  2E3D               	goto	u3670
  7497  163C                     u3671:
  7498  163C  2E7A               	goto	l2757
  7499  163D                     u3670:
  7500  163D                     l2743:
  7501  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7502  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7503  163F  0855               	movf	___fladd@b+3,w
  7504  1640  0454               	iorwf	___fladd@b+2,w
  7505  1641  0453               	iorwf	___fladd@b+1,w
  7506  1642  0452               	iorwf	___fladd@b,w
  7507  1643  1D03               	skipz
  7508  1644  2E46               	goto	u3681
  7509  1645  2E48               	goto	u3680
  7510  1646                     u3681:
  7511  1646  3001               	movlw	1
  7512  1647  2E49               	goto	u3690
  7513  1648                     u3680:
  7514  1648  3000               	movlw	0
  7515  1649                     u3690:
  7516  1649  00DA               	movwf	??___fladd
  7517  164A  085A               	movf	??___fladd,w
  7518  164B  00E5               	movwf	___fladd@grs
  7519  164C  3000               	movlw	0
  7520  164D  00D5               	movwf	___fladd@b+3
  7521  164E  3000               	movlw	0
  7522  164F  00D4               	movwf	___fladd@b+2
  7523  1650  3000               	movlw	0
  7524  1651  00D3               	movwf	___fladd@b+1
  7525  1652  3000               	movlw	0
  7526  1653  00D2               	movwf	___fladd@b
  7527  1654  0863               	movf	___fladd@aexp,w
  7528  1655  00DA               	movwf	??___fladd
  7529  1656  085A               	movf	??___fladd,w
  7530  1657  00E4               	movwf	___fladd@bexp
  7531  1658  2E82               	goto	l735
  7532  1659                     l737:
  7533  1659  1C65               	btfss	___fladd@grs,0
  7534  165A  2E5C               	goto	u3701
  7535  165B  2E5D               	goto	u3700
  7536  165C                     u3701:
  7537  165C  2E66               	goto	l2747
  7538  165D                     u3700:
  7539  165D                     l2745:
  7540  165D  0865               	movf	___fladd@grs,w
  7541  165E  00DA               	movwf	??___fladd
  7542  165F  1003               	clrc
  7543  1660  0C5A               	rrf	??___fladd,w
  7544  1661  3801               	iorlw	1
  7545  1662  00DB               	movwf	??___fladd+1
  7546  1663  085B               	movf	??___fladd+1,w
  7547  1664  00E5               	movwf	___fladd@grs
  7548  1665  2E68               	goto	l2749
  7549  1666                     l2747:
  7550  1666  1003               	clrc
  7551  1667  0CE5               	rrf	___fladd@grs,f
  7552  1668                     l2749:
  7553  1668  1C52               	btfss	___fladd@b,0
  7554  1669  2E6B               	goto	u3711
  7555  166A  2E6C               	goto	u3710
  7556  166B                     u3711:
  7557  166B  2E6D               	goto	l2753
  7558  166C                     u3710:
  7559  166C                     l2751:
  7560  166C  17E5               	bsf	___fladd@grs,7
  7561  166D                     l2753:
  7562  166D  3001               	movlw	1
  7563  166E  00DA               	movwf	??___fladd
  7564  166F                     u3725:
  7565  166F  0D55               	rlf	___fladd@b+3,w
  7566  1670  0CD5               	rrf	___fladd@b+3,f
  7567  1671  0CD4               	rrf	___fladd@b+2,f
  7568  1672  0CD3               	rrf	___fladd@b+1,f
  7569  1673  0CD2               	rrf	___fladd@b,f
  7570  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7571  1675  2E6F               	goto	u3725
  7572  1676                     l2755:
  7573  1676  3001               	movlw	1
  7574  1677  00DA               	movwf	??___fladd
  7575  1678  085A               	movf	??___fladd,w
  7576  1679  07E4               	addwf	___fladd@bexp,f
  7577  167A                     l2757:
  7578  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7579  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7580  167C  0863               	movf	___fladd@aexp,w
  7581  167D  0264               	subwf	___fladd@bexp,w
  7582  167E  1C03               	skipc
  7583  167F  2E81               	goto	u3731
  7584  1680  2E82               	goto	u3730
  7585  1681                     u3731:
  7586  1681  2E59               	goto	l737
  7587  1682                     u3730:
  7588  1682                     l735:
  7589  1682  1B62               	btfsc	___fladd@signs,6
  7590  1683  2E85               	goto	u3741
  7591  1684  2E86               	goto	u3740
  7592  1685                     u3741:
  7593  1685  2ED1               	goto	l2783
  7594  1686                     u3740:
  7595  1686                     l2759:
  7596  1686  0864               	movf	___fladd@bexp,w
  7597  1687  1D03               	btfss	3,2
  7598  1688  2E8A               	goto	u3751
  7599  1689  2E8B               	goto	u3750
  7600  168A                     u3751:
  7601  168A  2E94               	goto	l2765
  7602  168B                     u3750:
  7603  168B                     l2761:
  7604  168B  3000               	movlw	0
  7605  168C  00D5               	movwf	?___fladd+3
  7606  168D  3000               	movlw	0
  7607  168E  00D4               	movwf	?___fladd+2
  7608  168F  3000               	movlw	0
  7609  1690  00D3               	movwf	?___fladd+1
  7610  1691  3000               	movlw	0
  7611  1692  00D2               	movwf	?___fladd
  7612  1693  2FFF               	goto	l744
  7613  1694                     l2765:
  7614  1694  0856               	movf	___fladd@a,w
  7615  1695  07D2               	addwf	___fladd@b,f
  7616  1696  0857               	movf	___fladd@a+1,w
  7617  1697  1103               	clrz
  7618  1698  1803               	skipnc
  7619  1699  3E01               	addlw	1
  7620  169A  1903               	skipnz
  7621  169B  2E9D               	goto	u3761
  7622  169C  07D3               	addwf	___fladd@b+1,f
  7623  169D                     u3761:
  7624  169D  0858               	movf	___fladd@a+2,w
  7625  169E  1103               	clrz
  7626  169F  1803               	skipnc
  7627  16A0  3E01               	addlw	1
  7628  16A1  1903               	skipnz
  7629  16A2  2EA4               	goto	u3762
  7630  16A3  07D4               	addwf	___fladd@b+2,f
  7631  16A4                     u3762:
  7632  16A4  0859               	movf	___fladd@a+3,w
  7633  16A5  1103               	clrz
  7634  16A6  1803               	skipnc
  7635  16A7  3E01               	addlw	1
  7636  16A8  1903               	skipnz
  7637  16A9  2EAB               	goto	u3763
  7638  16AA  07D5               	addwf	___fladd@b+3,f
  7639  16AB                     u3763:
  7640  16AB                     l2767:
  7641  16AB  1C55               	btfss	___fladd@b+3,0
  7642  16AC  2EAE               	goto	u3771
  7643  16AD  2EAF               	goto	u3770
  7644  16AE                     u3771:
  7645  16AE  2F85               	goto	l2817
  7646  16AF                     u3770:
  7647  16AF                     l2769:
  7648  16AF  1C65               	btfss	___fladd@grs,0
  7649  16B0  2EB2               	goto	u3781
  7650  16B1  2EB3               	goto	u3780
  7651  16B2                     u3781:
  7652  16B2  2EBC               	goto	l2773
  7653  16B3                     u3780:
  7654  16B3                     l2771:
  7655  16B3  0865               	movf	___fladd@grs,w
  7656  16B4  00DA               	movwf	??___fladd
  7657  16B5  1003               	clrc
  7658  16B6  0C5A               	rrf	??___fladd,w
  7659  16B7  3801               	iorlw	1
  7660  16B8  00DB               	movwf	??___fladd+1
  7661  16B9  085B               	movf	??___fladd+1,w
  7662  16BA  00E5               	movwf	___fladd@grs
  7663  16BB  2EBE               	goto	l2775
  7664  16BC                     l2773:
  7665  16BC  1003               	clrc
  7666  16BD  0CE5               	rrf	___fladd@grs,f
  7667  16BE                     l2775:
  7668  16BE  1C52               	btfss	___fladd@b,0
  7669  16BF  2EC1               	goto	u3791
  7670  16C0  2EC2               	goto	u3790
  7671  16C1                     u3791:
  7672  16C1  2EC3               	goto	l2779
  7673  16C2                     u3790:
  7674  16C2                     l2777:
  7675  16C2  17E5               	bsf	___fladd@grs,7
  7676  16C3                     l2779:
  7677  16C3  3001               	movlw	1
  7678  16C4  00DA               	movwf	??___fladd
  7679  16C5                     u3805:
  7680  16C5  0D55               	rlf	___fladd@b+3,w
  7681  16C6  0CD5               	rrf	___fladd@b+3,f
  7682  16C7  0CD4               	rrf	___fladd@b+2,f
  7683  16C8  0CD3               	rrf	___fladd@b+1,f
  7684  16C9  0CD2               	rrf	___fladd@b,f
  7685  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  7686  16CB  2EC5               	goto	u3805
  7687  16CC                     l2781:
  7688  16CC  3001               	movlw	1
  7689  16CD  00DA               	movwf	??___fladd
  7690  16CE  085A               	movf	??___fladd,w
  7691  16CF  07E4               	addwf	___fladd@bexp,f
  7692  16D0  2F85               	goto	l2817
  7693  16D1                     l2783:
  7694  16D1  0855               	movf	___fladd@b+3,w
  7695  16D2  3A80               	xorlw	128
  7696  16D3  00FF               	movwf	btemp+1
  7697  16D4  0859               	movf	___fladd@a+3,w
  7698  16D5  3A80               	xorlw	128
  7699  16D6  027F               	subwf	btemp+1,w
  7700  16D7  1D03               	skipz
  7701  16D8  2EE3               	goto	u3813
  7702  16D9  0858               	movf	___fladd@a+2,w
  7703  16DA  0254               	subwf	___fladd@b+2,w
  7704  16DB  1D03               	skipz
  7705  16DC  2EE3               	goto	u3813
  7706  16DD  0857               	movf	___fladd@a+1,w
  7707  16DE  0253               	subwf	___fladd@b+1,w
  7708  16DF  1D03               	skipz
  7709  16E0  2EE3               	goto	u3813
  7710  16E1  0856               	movf	___fladd@a,w
  7711  16E2  0252               	subwf	___fladd@b,w
  7712  16E3                     u3813:
  7713  16E3  1803               	skipnc
  7714  16E4  2EE6               	goto	u3811
  7715  16E5  2EE7               	goto	u3810
  7716  16E6                     u3811:
  7717  16E6  2F3F               	goto	l2793
  7718  16E7                     u3810:
  7719  16E7                     l2785:
  7720  16E7  30FF               	movlw	255
  7721  16E8  00DA               	movwf	??___fladd
  7722  16E9  30FF               	movlw	255
  7723  16EA  00DB               	movwf	??___fladd+1
  7724  16EB  30FF               	movlw	255
  7725  16EC  00DC               	movwf	??___fladd+2
  7726  16ED  30FF               	movlw	255
  7727  16EE  00DD               	movwf	??___fladd+3
  7728  16EF  0856               	movf	___fladd@a,w
  7729  16F0  00DE               	movwf	??___fladd+4
  7730  16F1  0857               	movf	___fladd@a+1,w
  7731  16F2  00DF               	movwf	??___fladd+5
  7732  16F3  0858               	movf	___fladd@a+2,w
  7733  16F4  00E0               	movwf	??___fladd+6
  7734  16F5  0859               	movf	___fladd@a+3,w
  7735  16F6  00E1               	movwf	??___fladd+7
  7736  16F7  0852               	movf	___fladd@b,w
  7737  16F8  02DE               	subwf	??___fladd+4,f
  7738  16F9  0853               	movf	___fladd@b+1,w
  7739  16FA  1C03               	skipc
  7740  16FB  0F53               	incfsz	___fladd@b+1,w
  7741  16FC  2EFE               	goto	u3821
  7742  16FD  2EFF               	goto	u3822
  7743  16FE                     u3821:
  7744  16FE  02DF               	subwf	??___fladd+5,f
  7745  16FF                     u3822:
  7746  16FF  0854               	movf	___fladd@b+2,w
  7747  1700  1C03               	skipc
  7748  1701  0F54               	incfsz	___fladd@b+2,w
  7749  1702  2F04               	goto	u3823
  7750  1703  2F05               	goto	u3824
  7751  1704                     u3823:
  7752  1704  02E0               	subwf	??___fladd+6,f
  7753  1705                     u3824:
  7754  1705  0855               	movf	___fladd@b+3,w
  7755  1706  1C03               	skipc
  7756  1707  0F55               	incfsz	___fladd@b+3,w
  7757  1708  2F0A               	goto	u3825
  7758  1709  2F0B               	goto	u3826
  7759  170A                     u3825:
  7760  170A  02E1               	subwf	??___fladd+7,f
  7761  170B                     u3826:
  7762  170B  085E               	movf	??___fladd+4,w
  7763  170C  07DA               	addwf	??___fladd,f
  7764  170D  085F               	movf	??___fladd+5,w
  7765  170E  1803               	skipnc
  7766  170F  0F5F               	incfsz	??___fladd+5,w
  7767  1710  2F12               	goto	u3830
  7768  1711  2F13               	goto	u3831
  7769  1712                     u3830:
  7770  1712  07DB               	addwf	??___fladd+1,f
  7771  1713                     u3831:
  7772  1713  0860               	movf	??___fladd+6,w
  7773  1714  1803               	skipnc
  7774  1715  0F60               	incfsz	??___fladd+6,w
  7775  1716  2F18               	goto	u3832
  7776  1717  2F19               	goto	u3833
  7777  1718                     u3832:
  7778  1718  07DC               	addwf	??___fladd+2,f
  7779  1719                     u3833:
  7780  1719  0861               	movf	??___fladd+7,w
  7781  171A  1803               	skipnc
  7782  171B  0A61               	incf	??___fladd+7,w
  7783  171C  07DD               	addwf	??___fladd+3,f
  7784  171D  085D               	movf	??___fladd+3,w
  7785  171E  00D5               	movwf	___fladd@b+3
  7786  171F  085C               	movf	??___fladd+2,w
  7787  1720  00D4               	movwf	___fladd@b+2
  7788  1721  085B               	movf	??___fladd+1,w
  7789  1722  00D3               	movwf	___fladd@b+1
  7790  1723  085A               	movf	??___fladd,w
  7791  1724  00D2               	movwf	___fladd@b
  7792  1725                     l2787:
  7793  1725  3080               	movlw	128
  7794  1726  00DA               	movwf	??___fladd
  7795  1727  085A               	movf	??___fladd,w
  7796  1728  06E2               	xorwf	___fladd@signs,f
  7797  1729  09E5               	comf	___fladd@grs,f
  7798  172A  0AE5               	incf	___fladd@grs,f
  7799  172B                     l2789:
  7800  172B  0865               	movf	___fladd@grs,w
  7801  172C  1D03               	btfss	3,2
  7802  172D  2F2F               	goto	u3841
  7803  172E  2F30               	goto	u3840
  7804  172F                     u3841:
  7805  172F  2F4D               	goto	l752
  7806  1730                     u3840:
  7807  1730                     l2791:
  7808  1730  3001               	movlw	1
  7809  1731  07D2               	addwf	___fladd@b,f
  7810  1732  3000               	movlw	0
  7811  1733  1803               	skipnc
  7812  1734  3001               	movlw	1
  7813  1735  07D3               	addwf	___fladd@b+1,f
  7814  1736  3000               	movlw	0
  7815  1737  1803               	skipnc
  7816  1738  3001               	movlw	1
  7817  1739  07D4               	addwf	___fladd@b+2,f
  7818  173A  3000               	movlw	0
  7819  173B  1803               	skipnc
  7820  173C  3001               	movlw	1
  7821  173D  07D5               	addwf	___fladd@b+3,f
  7822  173E  2F4D               	goto	l752
  7823  173F                     l2793:
  7824  173F  0856               	movf	___fladd@a,w
  7825  1740  02D2               	subwf	___fladd@b,f
  7826  1741  0857               	movf	___fladd@a+1,w
  7827  1742  1C03               	skipc
  7828  1743  0F57               	incfsz	___fladd@a+1,w
  7829  1744  02D3               	subwf	___fladd@b+1,f
  7830  1745  0858               	movf	___fladd@a+2,w
  7831  1746  1C03               	skipc
  7832  1747  0F58               	incfsz	___fladd@a+2,w
  7833  1748  02D4               	subwf	___fladd@b+2,f
  7834  1749  0859               	movf	___fladd@a+3,w
  7835  174A  1C03               	skipc
  7836  174B  0F59               	incfsz	___fladd@a+3,w
  7837  174C  02D5               	subwf	___fladd@b+3,f
  7838  174D                     l752:
  7839  174D  0855               	movf	___fladd@b+3,w
  7840  174E  0454               	iorwf	___fladd@b+2,w
  7841  174F  0453               	iorwf	___fladd@b+1,w
  7842  1750  0452               	iorwf	___fladd@b,w
  7843  1751  1D03               	skipz
  7844  1752  2F54               	goto	u3851
  7845  1753  2F55               	goto	u3850
  7846  1754                     u3851:
  7847  1754  2F81               	goto	l2815
  7848  1755                     u3850:
  7849  1755                     l2795:
  7850  1755  0865               	movf	___fladd@grs,w
  7851  1756  1D03               	btfss	3,2
  7852  1757  2F59               	goto	u3861
  7853  1758  2F5A               	goto	u3860
  7854  1759                     u3861:
  7855  1759  2F81               	goto	l2815
  7856  175A                     u3860:
  7857  175A                     l2797:
  7858  175A  3000               	movlw	0
  7859  175B  00D5               	movwf	?___fladd+3
  7860  175C  3000               	movlw	0
  7861  175D  00D4               	movwf	?___fladd+2
  7862  175E  3000               	movlw	0
  7863  175F  00D3               	movwf	?___fladd+1
  7864  1760  3000               	movlw	0
  7865  1761  00D2               	movwf	?___fladd
  7866  1762  2FFF               	goto	l744
  7867  1763                     l2801:
  7868  1763  3001               	movlw	1
  7869  1764  00DA               	movwf	??___fladd
  7870  1765                     u3875:
  7871  1765  1003               	clrc
  7872  1766  0DD2               	rlf	___fladd@b,f
  7873  1767  0DD3               	rlf	___fladd@b+1,f
  7874  1768  0DD4               	rlf	___fladd@b+2,f
  7875  1769  0DD5               	rlf	___fladd@b+3,f
  7876  176A  0BDA               	decfsz	??___fladd,f
  7877  176B  2F65               	goto	u3875
  7878  176C                     l2803:
  7879  176C  1FE5               	btfss	___fladd@grs,7
  7880  176D  2F6F               	goto	u3881
  7881  176E  2F70               	goto	u3880
  7882  176F                     u3881:
  7883  176F  2F71               	goto	l756
  7884  1770                     u3880:
  7885  1770                     l2805:
  7886  1770  1452               	bsf	___fladd@b,0
  7887  1771                     l756:
  7888  1771  1C65               	btfss	___fladd@grs,0
  7889  1772  2F74               	goto	u3891
  7890  1773  2F75               	goto	u3890
  7891  1774                     u3891:
  7892  1774  2F78               	goto	l2809
  7893  1775                     u3890:
  7894  1775                     l2807:
  7895  1775  1403               	setc
  7896  1776  0DE5               	rlf	___fladd@grs,f
  7897  1777  2F7A               	goto	l2811
  7898  1778                     l2809:
  7899  1778  1003               	clrc
  7900  1779  0DE5               	rlf	___fladd@grs,f
  7901  177A                     l2811:
  7902  177A  0864               	movf	___fladd@bexp,w
  7903  177B  1903               	btfsc	3,2
  7904  177C  2F7E               	goto	u3901
  7905  177D  2F7F               	goto	u3900
  7906  177E                     u3901:
  7907  177E  2F81               	goto	l2815
  7908  177F                     u3900:
  7909  177F                     l2813:
  7910  177F  3001               	movlw	1
  7911  1780  02E4               	subwf	___fladd@bexp,f
  7912  1781                     l2815:
  7913  1781  1FD4               	btfss	___fladd@b+2,7
  7914  1782  2F84               	goto	u3911
  7915  1783  2F85               	goto	u3910
  7916  1784                     u3911:
  7917  1784  2F63               	goto	l2801
  7918  1785                     u3910:
  7919  1785                     l2817:
  7920  1785  01E3               	clrf	___fladd@aexp
  7921  1786                     l2819:
  7922  1786  1FE5               	btfss	___fladd@grs,7
  7923  1787  2F89               	goto	u3921
  7924  1788  2F8A               	goto	u3920
  7925  1789                     u3921:
  7926  1789  2F98               	goto	l2827
  7927  178A                     u3920:
  7928  178A                     l2821:
  7929  178A  0865               	movf	___fladd@grs,w
  7930  178B  397F               	andlw	127
  7931  178C  1903               	btfsc	3,2
  7932  178D  2F8F               	goto	u3931
  7933  178E  2F90               	goto	u3930
  7934  178F                     u3931:
  7935  178F  2F93               	goto	l762
  7936  1790                     u3930:
  7937  1790                     l2823:
  7938  1790  01E3               	clrf	___fladd@aexp
  7939  1791  0AE3               	incf	___fladd@aexp,f
  7940  1792  2F98               	goto	l2827
  7941  1793                     l762:
  7942  1793  1C52               	btfss	___fladd@b,0
  7943  1794  2F96               	goto	u3941
  7944  1795  2F97               	goto	u3940
  7945  1796                     u3941:
  7946  1796  2F98               	goto	l2827
  7947  1797                     u3940:
  7948  1797  2F90               	goto	l2823
  7949  1798                     l2827:
  7950  1798  0863               	movf	___fladd@aexp,w
  7951  1799  1903               	btfsc	3,2
  7952  179A  2F9C               	goto	u3951
  7953  179B  2F9D               	goto	u3950
  7954  179C                     u3951:
  7955  179C  2FD1               	goto	l765
  7956  179D                     u3950:
  7957  179D                     l2829:
  7958  179D  3001               	movlw	1
  7959  179E  07D2               	addwf	___fladd@b,f
  7960  179F  3000               	movlw	0
  7961  17A0  1803               	skipnc
  7962  17A1  3001               	movlw	1
  7963  17A2  07D3               	addwf	___fladd@b+1,f
  7964  17A3  3000               	movlw	0
  7965  17A4  1803               	skipnc
  7966  17A5  3001               	movlw	1
  7967  17A6  07D4               	addwf	___fladd@b+2,f
  7968  17A7  3000               	movlw	0
  7969  17A8  1803               	skipnc
  7970  17A9  3001               	movlw	1
  7971  17AA  07D5               	addwf	___fladd@b+3,f
  7972  17AB                     l2831:
  7973  17AB  1C55               	btfss	___fladd@b+3,0
  7974  17AC  2FAE               	goto	u3961
  7975  17AD  2FAF               	goto	u3960
  7976  17AE                     u3961:
  7977  17AE  2FD1               	goto	l765
  7978  17AF                     u3960:
  7979  17AF                     l2833:
  7980  17AF  0852               	movf	___fladd@b,w
  7981  17B0  00DA               	movwf	??___fladd
  7982  17B1  0853               	movf	___fladd@b+1,w
  7983  17B2  00DB               	movwf	??___fladd+1
  7984  17B3  0854               	movf	___fladd@b+2,w
  7985  17B4  00DC               	movwf	??___fladd+2
  7986  17B5  0855               	movf	___fladd@b+3,w
  7987  17B6  00DD               	movwf	??___fladd+3
  7988  17B7  3001               	movlw	1
  7989  17B8  00DE               	movwf	??___fladd+4
  7990  17B9                     u3975:
  7991  17B9  0D5D               	rlf	??___fladd+3,w
  7992  17BA  0CDD               	rrf	??___fladd+3,f
  7993  17BB  0CDC               	rrf	??___fladd+2,f
  7994  17BC  0CDB               	rrf	??___fladd+1,f
  7995  17BD  0CDA               	rrf	??___fladd,f
  7996  17BE                     u3970:
  7997  17BE  0BDE               	decfsz	??___fladd+4,f
  7998  17BF  2FB9               	goto	u3975
  7999  17C0  085D               	movf	??___fladd+3,w
  8000  17C1  00D5               	movwf	___fladd@b+3
  8001  17C2  085C               	movf	??___fladd+2,w
  8002  17C3  00D4               	movwf	___fladd@b+2
  8003  17C4  085B               	movf	??___fladd+1,w
  8004  17C5  00D3               	movwf	___fladd@b+1
  8005  17C6  085A               	movf	??___fladd,w
  8006  17C7  00D2               	movwf	___fladd@b
  8007  17C8  0A64               	incf	___fladd@bexp,w
  8008  17C9  1903               	btfsc	3,2
  8009  17CA  2FCC               	goto	u3981
  8010  17CB  2FCD               	goto	u3980
  8011  17CC                     u3981:
  8012  17CC  2FD1               	goto	l765
  8013  17CD                     u3980:
  8014  17CD                     l2835:
  8015  17CD  3001               	movlw	1
  8016  17CE  00DA               	movwf	??___fladd
  8017  17CF  085A               	movf	??___fladd,w
  8018  17D0  07E4               	addwf	___fladd@bexp,f
  8019  17D1                     l765:
  8020  17D1  0A64               	incf	___fladd@bexp,w
  8021  17D2  1903               	btfsc	3,2
  8022  17D3  2FD5               	goto	u3991
  8023  17D4  2FD6               	goto	u3990
  8024  17D5                     u3991:
  8025  17D5  2FDB               	goto	l2839
  8026  17D6                     u3990:
  8027  17D6                     l2837:
  8028  17D6  0864               	movf	___fladd@bexp,w
  8029  17D7  1D03               	btfss	3,2
  8030  17D8  2FDA               	goto	u4001
  8031  17D9  2FDB               	goto	u4000
  8032  17DA                     u4001:
  8033  17DA  2FE9               	goto	l2845
  8034  17DB                     u4000:
  8035  17DB                     l2839:
  8036  17DB  3000               	movlw	0
  8037  17DC  00D5               	movwf	___fladd@b+3
  8038  17DD  3000               	movlw	0
  8039  17DE  00D4               	movwf	___fladd@b+2
  8040  17DF  3000               	movlw	0
  8041  17E0  00D3               	movwf	___fladd@b+1
  8042  17E1  3000               	movlw	0
  8043  17E2  00D2               	movwf	___fladd@b
  8044  17E3                     l2841:
  8045  17E3  0864               	movf	___fladd@bexp,w
  8046  17E4  1D03               	btfss	3,2
  8047  17E5  2FE7               	goto	u4011
  8048  17E6  2FE8               	goto	u4010
  8049  17E7                     u4011:
  8050  17E7  2FE9               	goto	l2845
  8051  17E8                     u4010:
  8052  17E8                     l2843:
  8053  17E8  01E2               	clrf	___fladd@signs
  8054  17E9                     l2845:
  8055  17E9  1C64               	btfss	___fladd@bexp,0
  8056  17EA  2FEC               	goto	u4021
  8057  17EB  2FED               	goto	u4020
  8058  17EC                     u4021:
  8059  17EC  2FEF               	goto	l2849
  8060  17ED                     u4020:
  8061  17ED                     l2847:
  8062  17ED  17D4               	bsf	___fladd@b+2,7
  8063  17EE  2FF3               	goto	l773
  8064  17EF                     l2849:
  8065  17EF  307F               	movlw	127
  8066  17F0  00DA               	movwf	??___fladd
  8067  17F1  085A               	movf	??___fladd,w
  8068  17F2  05D4               	andwf	___fladd@b+2,f
  8069  17F3                     l773:
  8070  17F3  0864               	movf	___fladd@bexp,w
  8071  17F4  00DA               	movwf	??___fladd
  8072  17F5  1003               	clrc
  8073  17F6  0C5A               	rrf	??___fladd,w
  8074  17F7  00DB               	movwf	??___fladd+1
  8075  17F8  085B               	movf	??___fladd+1,w
  8076  17F9  00D5               	movwf	___fladd@b+3
  8077  17FA                     l2851:
  8078  17FA  1FE2               	btfss	___fladd@signs,7
  8079  17FB  2FFD               	goto	u4031
  8080  17FC  2FFE               	goto	u4030
  8081  17FD                     u4031:
  8082  17FD  2FFF               	goto	l774
  8083  17FE                     u4030:
  8084  17FE                     l2853:
  8085  17FE  17D5               	bsf	___fladd@b+3,7
  8086  17FF                     l774:
  8087  17FF                     l744:
  8088  17FF  0008               	return
  8089  1800                     __end_of___fladd:
  8090                           
  8091                           	psect	text17
  8092  19FA                     __ptext17:	
  8093 ;; *************** function ___flneg *****************
  8094 ;; Defined at:
  8095 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  f1              4    0[COMMON] unsigned char 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  4    0[COMMON] unsigned char 
  8102 ;; Registers used:
  8103 ;;		wreg
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8109 ;;      Params:         4       0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0
  8112 ;;      Totals:         4       0       0       0       0
  8113 ;;Total ram usage:        4 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_sprintf
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           
  8123                           ;psect for function ___flneg
  8124  19FA                     ___flneg:
  8125  19FA                     l3263:	
  8126                           ;incstack = 0
  8127                           ; Regs used in ___flneg: [wreg]
  8128                           
  8129  19FA  0873               	movf	___flneg@f1+3,w
  8130  19FB  0472               	iorwf	___flneg@f1+2,w
  8131  19FC  0471               	iorwf	___flneg@f1+1,w
  8132  19FD  0470               	iorwf	___flneg@f1,w
  8133  19FE  1903               	skipnz
  8134  19FF  2A01               	goto	u5171
  8135  1A00  2A02               	goto	u5170
  8136  1A01                     u5171:
  8137  1A01  2A04               	goto	l3267
  8138  1A02                     u5170:
  8139  1A02                     l3265:
  8140  1A02  3080               	movlw	128
  8141  1A03  06F3               	xorwf	___flneg@f1+3,f
  8142  1A04                     l3267:
  8143  1A04                     l603:
  8144  1A04  0008               	return
  8145  1A05                     __end_of___flneg:
  8146                           
  8147                           	psect	text18
  8148  1EA4                     __ptext18:	
  8149 ;; *************** function ___flge *****************
  8150 ;; Defined at:
  8151 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  ff1             4    0[COMMON] unsigned char 
  8154 ;;  ff2             4    4[COMMON] unsigned char 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;		None               void
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8166 ;;      Params:         8       0       0       0       0
  8167 ;;      Locals:         0       0       0       0       0
  8168 ;;      Temps:          4       0       0       0       0
  8169 ;;      Totals:        12       0       0       0       0
  8170 ;;Total ram usage:       12 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_sprintf
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           
  8180                           ;psect for function ___flge
  8181  1EA4                     ___flge:
  8182  1EA4                     l3243:	
  8183                           ;incstack = 0
  8184                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8185                           
  8186  1EA4  3000               	movlw	0
  8187  1EA5  0570               	andwf	___flge@ff1,w
  8188  1EA6  00F8               	movwf	??___flge
  8189  1EA7  3000               	movlw	0
  8190  1EA8  0571               	andwf	___flge@ff1+1,w
  8191  1EA9  00F9               	movwf	??___flge+1
  8192  1EAA  3080               	movlw	128
  8193  1EAB  0572               	andwf	___flge@ff1+2,w
  8194  1EAC  00FA               	movwf	??___flge+2
  8195  1EAD  307F               	movlw	127
  8196  1EAE  0573               	andwf	___flge@ff1+3,w
  8197  1EAF  00FB               	movwf	??___flge+3
  8198  1EB0  087B               	movf	??___flge+3,w
  8199  1EB1  047A               	iorwf	??___flge+2,w
  8200  1EB2  0479               	iorwf	??___flge+1,w
  8201  1EB3  0478               	iorwf	??___flge,w
  8202  1EB4  1D03               	skipz
  8203  1EB5  2EB7               	goto	u5101
  8204  1EB6  2EB8               	goto	u5100
  8205  1EB7                     u5101:
  8206  1EB7  2EC0               	goto	l595
  8207  1EB8                     u5100:
  8208  1EB8                     l3245:
  8209  1EB8  3000               	movlw	0
  8210  1EB9  00F3               	movwf	___flge@ff1+3
  8211  1EBA  3000               	movlw	0
  8212  1EBB  00F2               	movwf	___flge@ff1+2
  8213  1EBC  3000               	movlw	0
  8214  1EBD  00F1               	movwf	___flge@ff1+1
  8215  1EBE  3000               	movlw	0
  8216  1EBF  00F0               	movwf	___flge@ff1
  8217  1EC0                     l595:
  8218  1EC0  3000               	movlw	0
  8219  1EC1  0574               	andwf	___flge@ff2,w
  8220  1EC2  00F8               	movwf	??___flge
  8221  1EC3  3000               	movlw	0
  8222  1EC4  0575               	andwf	___flge@ff2+1,w
  8223  1EC5  00F9               	movwf	??___flge+1
  8224  1EC6  3080               	movlw	128
  8225  1EC7  0576               	andwf	___flge@ff2+2,w
  8226  1EC8  00FA               	movwf	??___flge+2
  8227  1EC9  307F               	movlw	127
  8228  1ECA  0577               	andwf	___flge@ff2+3,w
  8229  1ECB  00FB               	movwf	??___flge+3
  8230  1ECC  087B               	movf	??___flge+3,w
  8231  1ECD  047A               	iorwf	??___flge+2,w
  8232  1ECE  0479               	iorwf	??___flge+1,w
  8233  1ECF  0478               	iorwf	??___flge,w
  8234  1ED0  1D03               	skipz
  8235  1ED1  2ED3               	goto	u5111
  8236  1ED2  2ED4               	goto	u5110
  8237  1ED3                     u5111:
  8238  1ED3  2EDC               	goto	l3249
  8239  1ED4                     u5110:
  8240  1ED4                     l3247:
  8241  1ED4  3000               	movlw	0
  8242  1ED5  00F7               	movwf	___flge@ff2+3
  8243  1ED6  3000               	movlw	0
  8244  1ED7  00F6               	movwf	___flge@ff2+2
  8245  1ED8  3000               	movlw	0
  8246  1ED9  00F5               	movwf	___flge@ff2+1
  8247  1EDA  3000               	movlw	0
  8248  1EDB  00F4               	movwf	___flge@ff2
  8249  1EDC                     l3249:
  8250  1EDC  1FF3               	btfss	___flge@ff1+3,7
  8251  1EDD  2EDF               	goto	u5121
  8252  1EDE  2EE0               	goto	u5120
  8253  1EDF                     u5121:
  8254  1EDF  2F04               	goto	l3253
  8255  1EE0                     u5120:
  8256  1EE0                     l3251:
  8257  1EE0  3000               	movlw	0
  8258  1EE1  00F8               	movwf	??___flge
  8259  1EE2  3000               	movlw	0
  8260  1EE3  00F9               	movwf	??___flge+1
  8261  1EE4  3000               	movlw	0
  8262  1EE5  00FA               	movwf	??___flge+2
  8263  1EE6  3080               	movlw	128
  8264  1EE7  00FB               	movwf	??___flge+3
  8265  1EE8  0870               	movf	___flge@ff1,w
  8266  1EE9  02F8               	subwf	??___flge,f
  8267  1EEA  0871               	movf	___flge@ff1+1,w
  8268  1EEB  1C03               	skipc
  8269  1EEC  0F71               	incfsz	___flge@ff1+1,w
  8270  1EED  2EEF               	goto	u5131
  8271  1EEE  2EF0               	goto	u5132
  8272  1EEF                     u5131:
  8273  1EEF  02F9               	subwf	??___flge+1,f
  8274  1EF0                     u5132:
  8275  1EF0  0872               	movf	___flge@ff1+2,w
  8276  1EF1  1C03               	skipc
  8277  1EF2  0F72               	incfsz	___flge@ff1+2,w
  8278  1EF3  2EF5               	goto	u5133
  8279  1EF4  2EF6               	goto	u5134
  8280  1EF5                     u5133:
  8281  1EF5  02FA               	subwf	??___flge+2,f
  8282  1EF6                     u5134:
  8283  1EF6  0873               	movf	___flge@ff1+3,w
  8284  1EF7  1C03               	skipc
  8285  1EF8  0F73               	incfsz	___flge@ff1+3,w
  8286  1EF9  2EFB               	goto	u5135
  8287  1EFA  2EFC               	goto	u5136
  8288  1EFB                     u5135:
  8289  1EFB  02FB               	subwf	??___flge+3,f
  8290  1EFC                     u5136:
  8291  1EFC  087B               	movf	??___flge+3,w
  8292  1EFD  00F3               	movwf	___flge@ff1+3
  8293  1EFE  087A               	movf	??___flge+2,w
  8294  1EFF  00F2               	movwf	___flge@ff1+2
  8295  1F00  0879               	movf	??___flge+1,w
  8296  1F01  00F1               	movwf	___flge@ff1+1
  8297  1F02  0878               	movf	??___flge,w
  8298  1F03  00F0               	movwf	___flge@ff1
  8299  1F04                     l3253:
  8300  1F04  1FF7               	btfss	___flge@ff2+3,7
  8301  1F05  2F07               	goto	u5141
  8302  1F06  2F08               	goto	u5140
  8303  1F07                     u5141:
  8304  1F07  2F2C               	goto	l598
  8305  1F08                     u5140:
  8306  1F08                     l3255:
  8307  1F08  3000               	movlw	0
  8308  1F09  00F8               	movwf	??___flge
  8309  1F0A  3000               	movlw	0
  8310  1F0B  00F9               	movwf	??___flge+1
  8311  1F0C  3000               	movlw	0
  8312  1F0D  00FA               	movwf	??___flge+2
  8313  1F0E  3080               	movlw	128
  8314  1F0F  00FB               	movwf	??___flge+3
  8315  1F10  0874               	movf	___flge@ff2,w
  8316  1F11  02F8               	subwf	??___flge,f
  8317  1F12  0875               	movf	___flge@ff2+1,w
  8318  1F13  1C03               	skipc
  8319  1F14  0F75               	incfsz	___flge@ff2+1,w
  8320  1F15  2F17               	goto	u5151
  8321  1F16  2F18               	goto	u5152
  8322  1F17                     u5151:
  8323  1F17  02F9               	subwf	??___flge+1,f
  8324  1F18                     u5152:
  8325  1F18  0876               	movf	___flge@ff2+2,w
  8326  1F19  1C03               	skipc
  8327  1F1A  0F76               	incfsz	___flge@ff2+2,w
  8328  1F1B  2F1D               	goto	u5153
  8329  1F1C  2F1E               	goto	u5154
  8330  1F1D                     u5153:
  8331  1F1D  02FA               	subwf	??___flge+2,f
  8332  1F1E                     u5154:
  8333  1F1E  0877               	movf	___flge@ff2+3,w
  8334  1F1F  1C03               	skipc
  8335  1F20  0F77               	incfsz	___flge@ff2+3,w
  8336  1F21  2F23               	goto	u5155
  8337  1F22  2F24               	goto	u5156
  8338  1F23                     u5155:
  8339  1F23  02FB               	subwf	??___flge+3,f
  8340  1F24                     u5156:
  8341  1F24  087B               	movf	??___flge+3,w
  8342  1F25  00F7               	movwf	___flge@ff2+3
  8343  1F26  087A               	movf	??___flge+2,w
  8344  1F27  00F6               	movwf	___flge@ff2+2
  8345  1F28  0879               	movf	??___flge+1,w
  8346  1F29  00F5               	movwf	___flge@ff2+1
  8347  1F2A  0878               	movf	??___flge,w
  8348  1F2B  00F4               	movwf	___flge@ff2
  8349  1F2C                     l598:
  8350  1F2C  3080               	movlw	128
  8351  1F2D  06F3               	xorwf	___flge@ff1+3,f
  8352  1F2E  3080               	movlw	128
  8353  1F2F  06F7               	xorwf	___flge@ff2+3,f
  8354  1F30  0877               	movf	___flge@ff2+3,w
  8355  1F31  0273               	subwf	___flge@ff1+3,w
  8356  1F32  1D03               	skipz
  8357  1F33  2F3E               	goto	u5165
  8358  1F34  0876               	movf	___flge@ff2+2,w
  8359  1F35  0272               	subwf	___flge@ff1+2,w
  8360  1F36  1D03               	skipz
  8361  1F37  2F3E               	goto	u5165
  8362  1F38  0875               	movf	___flge@ff2+1,w
  8363  1F39  0271               	subwf	___flge@ff1+1,w
  8364  1F3A  1D03               	skipz
  8365  1F3B  2F3E               	goto	u5165
  8366  1F3C  0874               	movf	___flge@ff2,w
  8367  1F3D  0270               	subwf	___flge@ff1,w
  8368  1F3E                     u5165:
  8369  1F3E  1803               	skipnc
  8370  1F3F  2F41               	goto	u5161
  8371  1F40  2F42               	goto	u5160
  8372  1F41                     u5161:
  8373  1F41  2F44               	goto	l3259
  8374  1F42                     u5160:
  8375  1F42                     l3257:
  8376  1F42  1003               	clrc
  8377  1F43  2F45               	goto	l599
  8378  1F44                     l3259:
  8379  1F44  1403               	setc
  8380  1F45                     l599:
  8381  1F45  0008               	return
  8382  1F46                     __end_of___flge:
  8383                           
  8384                           	psect	text19
  8385  1BBC                     __ptext19:	
  8386 ;; *************** function ___fleq *****************
  8387 ;; Defined at:
  8388 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  ff1             4    0[COMMON] unsigned char 
  8391 ;;  ff2             4    4[COMMON] unsigned char 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;		None               void
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         8       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0
  8405 ;;      Temps:          4       0       0       0       0
  8406 ;;      Totals:        12       0       0       0       0
  8407 ;;Total ram usage:       12 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_sprintf
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           
  8417                           ;psect for function ___fleq
  8418  1BBC                     ___fleq:
  8419  1BBC                     l3231:	
  8420                           ;incstack = 0
  8421                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8422                           
  8423  1BBC  3000               	movlw	0
  8424  1BBD  0570               	andwf	___fleq@ff1,w
  8425  1BBE  00F8               	movwf	??___fleq
  8426  1BBF  3000               	movlw	0
  8427  1BC0  0571               	andwf	___fleq@ff1+1,w
  8428  1BC1  00F9               	movwf	??___fleq+1
  8429  1BC2  3080               	movlw	128
  8430  1BC3  0572               	andwf	___fleq@ff1+2,w
  8431  1BC4  00FA               	movwf	??___fleq+2
  8432  1BC5  307F               	movlw	127
  8433  1BC6  0573               	andwf	___fleq@ff1+3,w
  8434  1BC7  00FB               	movwf	??___fleq+3
  8435  1BC8  087B               	movf	??___fleq+3,w
  8436  1BC9  047A               	iorwf	??___fleq+2,w
  8437  1BCA  0479               	iorwf	??___fleq+1,w
  8438  1BCB  0478               	iorwf	??___fleq,w
  8439  1BCC  1D03               	skipz
  8440  1BCD  2BCF               	goto	u5071
  8441  1BCE  2BD0               	goto	u5070
  8442  1BCF                     u5071:
  8443  1BCF  2BD8               	goto	l590
  8444  1BD0                     u5070:
  8445  1BD0                     l3233:
  8446  1BD0  3000               	movlw	0
  8447  1BD1  00F3               	movwf	___fleq@ff1+3
  8448  1BD2  3000               	movlw	0
  8449  1BD3  00F2               	movwf	___fleq@ff1+2
  8450  1BD4  3000               	movlw	0
  8451  1BD5  00F1               	movwf	___fleq@ff1+1
  8452  1BD6  3000               	movlw	0
  8453  1BD7  00F0               	movwf	___fleq@ff1
  8454  1BD8                     l590:
  8455  1BD8  3000               	movlw	0
  8456  1BD9  0574               	andwf	___fleq@ff2,w
  8457  1BDA  00F8               	movwf	??___fleq
  8458  1BDB  3000               	movlw	0
  8459  1BDC  0575               	andwf	___fleq@ff2+1,w
  8460  1BDD  00F9               	movwf	??___fleq+1
  8461  1BDE  3080               	movlw	128
  8462  1BDF  0576               	andwf	___fleq@ff2+2,w
  8463  1BE0  00FA               	movwf	??___fleq+2
  8464  1BE1  307F               	movlw	127
  8465  1BE2  0577               	andwf	___fleq@ff2+3,w
  8466  1BE3  00FB               	movwf	??___fleq+3
  8467  1BE4  087B               	movf	??___fleq+3,w
  8468  1BE5  047A               	iorwf	??___fleq+2,w
  8469  1BE6  0479               	iorwf	??___fleq+1,w
  8470  1BE7  0478               	iorwf	??___fleq,w
  8471  1BE8  1D03               	skipz
  8472  1BE9  2BEB               	goto	u5081
  8473  1BEA  2BEC               	goto	u5080
  8474  1BEB                     u5081:
  8475  1BEB  2BF4               	goto	l591
  8476  1BEC                     u5080:
  8477  1BEC                     l3235:
  8478  1BEC  3000               	movlw	0
  8479  1BED  00F7               	movwf	___fleq@ff2+3
  8480  1BEE  3000               	movlw	0
  8481  1BEF  00F6               	movwf	___fleq@ff2+2
  8482  1BF0  3000               	movlw	0
  8483  1BF1  00F5               	movwf	___fleq@ff2+1
  8484  1BF2  3000               	movlw	0
  8485  1BF3  00F4               	movwf	___fleq@ff2
  8486  1BF4                     l591:
  8487  1BF4  0877               	movf	___fleq@ff2+3,w
  8488  1BF5  0673               	xorwf	___fleq@ff1+3,w
  8489  1BF6  1D03               	skipz
  8490  1BF7  2C02               	goto	u5095
  8491  1BF8  0876               	movf	___fleq@ff2+2,w
  8492  1BF9  0672               	xorwf	___fleq@ff1+2,w
  8493  1BFA  1D03               	skipz
  8494  1BFB  2C02               	goto	u5095
  8495  1BFC  0875               	movf	___fleq@ff2+1,w
  8496  1BFD  0671               	xorwf	___fleq@ff1+1,w
  8497  1BFE  1D03               	skipz
  8498  1BFF  2C02               	goto	u5095
  8499  1C00  0874               	movf	___fleq@ff2,w
  8500  1C01  0670               	xorwf	___fleq@ff1,w
  8501  1C02                     u5095:
  8502  1C02  1903               	skipnz
  8503  1C03  2C05               	goto	u5091
  8504  1C04  2C06               	goto	u5090
  8505  1C05                     u5091:
  8506  1C05  2C08               	goto	l3239
  8507  1C06                     u5090:
  8508  1C06                     l3237:
  8509  1C06  1003               	clrc
  8510  1C07  2C09               	goto	l592
  8511  1C08                     l3239:
  8512  1C08  1403               	setc
  8513  1C09                     l592:
  8514  1C09  0008               	return
  8515  1C0A                     __end_of___fleq:
  8516                           
  8517                           	psect	text20
  8518  1C0A                     __ptext20:	
  8519 ;; *************** function _mapear *****************
  8520 ;; Defined at:
  8521 ;;		line 50 in file "lab2.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  adresval        1    wreg     unsigned char 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  adresval        1   64[BANK0 ] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  4   56[BANK0 ] float 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8535 ;;      Params:         0       4       0       0       0
  8536 ;;      Locals:         0       1       0       0       0
  8537 ;;      Temps:          0       4       0       0       0
  8538 ;;      Totals:         0       9       0       0       0
  8539 ;;Total ram usage:        9 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:    2
  8542 ;; This function calls:
  8543 ;;		___fldiv
  8544 ;;		___flmul
  8545 ;;		___xxtofl
  8546 ;; This function is called by:
  8547 ;;		_main
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           
  8552                           ;psect for function _mapear
  8553  1C0A                     _mapear:
  8554                           
  8555                           ;incstack = 0
  8556                           ; Regs used in _mapear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8557                           ;mapear@adresval stored from wreg
  8558  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
  8559  1C0B  1303               	bcf	3,6	;RP1=0, select bank0
  8560  1C0C  00E0               	movwf	mapear@adresval
  8561  1C0D                     l3549:
  8562                           
  8563                           ;lab2.c: 51:     return (adresval-0)*(5.00-0)/(255-0.0)+0;}
  8564  1C0D  3043               	movlw	67
  8565  1C0E  00C1               	movwf	___fldiv@a+3
  8566  1C0F  307F               	movlw	127
  8567  1C10  00C0               	movwf	___fldiv@a+2
  8568  1C11  3000               	movlw	0
  8569  1C12  00BF               	movwf	___fldiv@a+1
  8570  1C13  3000               	movlw	0
  8571  1C14  00BE               	movwf	___fldiv@a
  8572  1C15  3040               	movlw	64
  8573  1C16  00A7               	movwf	___flmul@b+3
  8574  1C17  30A0               	movlw	160
  8575  1C18  00A6               	movwf	___flmul@b+2
  8576  1C19  3000               	movlw	0
  8577  1C1A  00A5               	movwf	___flmul@b+1
  8578  1C1B  3000               	movlw	0
  8579  1C1C  00A4               	movwf	___flmul@b
  8580  1C1D  0860               	movf	mapear@adresval,w
  8581  1C1E  00DC               	movwf	??_mapear
  8582  1C1F  01DD               	clrf	??_mapear+1
  8583  1C20  01DE               	clrf	??_mapear+2
  8584  1C21  01DF               	clrf	??_mapear+3
  8585  1C22  085F               	movf	??_mapear+3,w
  8586  1C23  00F3               	movwf	___xxtofl@val+3
  8587  1C24  085E               	movf	??_mapear+2,w
  8588  1C25  00F2               	movwf	___xxtofl@val+2
  8589  1C26  085D               	movf	??_mapear+1,w
  8590  1C27  00F1               	movwf	___xxtofl@val+1
  8591  1C28  085C               	movf	??_mapear,w
  8592  1C29  00F0               	movwf	___xxtofl@val
  8593  1C2A  3001               	movlw	1
  8594  1C2B  160A  158A  2746  160A  158A  	fcall	___xxtofl
  8595  1C30  0873               	movf	?___xxtofl+3,w
  8596  1C31  1283               	bcf	3,5	;RP0=0, select bank0
  8597  1C32  1303               	bcf	3,6	;RP1=0, select bank0
  8598  1C33  00AB               	movwf	___flmul@a+3
  8599  1C34  0872               	movf	?___xxtofl+2,w
  8600  1C35  00AA               	movwf	___flmul@a+2
  8601  1C36  0871               	movf	?___xxtofl+1,w
  8602  1C37  00A9               	movwf	___flmul@a+1
  8603  1C38  0870               	movf	?___xxtofl,w
  8604  1C39  00A8               	movwf	___flmul@a
  8605  1C3A  120A  158A  249F  160A  158A  	fcall	___flmul
  8606  1C3F  1283               	bcf	3,5	;RP0=0, select bank0
  8607  1C40  1303               	bcf	3,6	;RP1=0, select bank0
  8608  1C41  0827               	movf	?___flmul+3,w
  8609  1C42  00C5               	movwf	___fldiv@b+3
  8610  1C43  0826               	movf	?___flmul+2,w
  8611  1C44  00C4               	movwf	___fldiv@b+2
  8612  1C45  0825               	movf	?___flmul+1,w
  8613  1C46  00C3               	movwf	___fldiv@b+1
  8614  1C47  0824               	movf	?___flmul,w
  8615  1C48  00C2               	movwf	___fldiv@b
  8616  1C49  160A  118A  2190  160A  158A  	fcall	___fldiv
  8617  1C4E  1283               	bcf	3,5	;RP0=0, select bank0
  8618  1C4F  1303               	bcf	3,6	;RP1=0, select bank0
  8619  1C50  0841               	movf	?___fldiv+3,w
  8620  1C51  00DB               	movwf	?_mapear+3
  8621  1C52  0840               	movf	?___fldiv+2,w
  8622  1C53  00DA               	movwf	?_mapear+2
  8623  1C54  083F               	movf	?___fldiv+1,w
  8624  1C55  00D9               	movwf	?_mapear+1
  8625  1C56  083E               	movf	?___fldiv,w
  8626  1C57  00D8               	movwf	?_mapear
  8627  1C58                     l146:
  8628  1C58  0008               	return
  8629  1C59                     __end_of_mapear:
  8630                           
  8631                           	psect	text21
  8632  1F46                     __ptext21:	
  8633 ;; *************** function ___xxtofl *****************
  8634 ;; Defined at:
  8635 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  sign            1    wreg     unsigned char 
  8638 ;;  val             4    0[COMMON] long 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  sign            1    8[COMMON] unsigned char 
  8641 ;;  arg             4   10[COMMON] unsigned long 
  8642 ;;  exp             1    9[COMMON] unsigned char 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  4    0[COMMON] unsigned char 
  8645 ;; Registers used:
  8646 ;;		wreg, status,2, status,0
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8652 ;;      Params:         4       0       0       0       0
  8653 ;;      Locals:         6       0       0       0       0
  8654 ;;      Temps:          4       0       0       0       0
  8655 ;;      Totals:        14       0       0       0       0
  8656 ;;Total ram usage:       14 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; This function calls:
  8659 ;;		Nothing
  8660 ;; This function is called by:
  8661 ;;		_mapear
  8662 ;;		_sprintf
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           
  8667                           ;psect for function ___xxtofl
  8668  1F46                     ___xxtofl:
  8669                           
  8670                           ;incstack = 0
  8671                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8672                           ;___xxtofl@sign stored from wreg
  8673  1F46  00F8               	movwf	___xxtofl@sign
  8674  1F47                     l3475:
  8675  1F47  0878               	movf	___xxtofl@sign,w
  8676  1F48  1903               	btfsc	3,2
  8677  1F49  2F4B               	goto	u5631
  8678  1F4A  2F4C               	goto	u5630
  8679  1F4B                     u5631:
  8680  1F4B  2F60               	goto	l3481
  8681  1F4C                     u5630:
  8682  1F4C                     l3477:
  8683  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  8684  1F4D  2F4F               	goto	u5641
  8685  1F4E  2F50               	goto	u5640
  8686  1F4F                     u5641:
  8687  1F4F  2F60               	goto	l3481
  8688  1F50                     u5640:
  8689  1F50                     l3479:
  8690  1F50  0970               	comf	___xxtofl@val,w
  8691  1F51  00FA               	movwf	___xxtofl@arg
  8692  1F52  0971               	comf	___xxtofl@val+1,w
  8693  1F53  00FB               	movwf	___xxtofl@arg+1
  8694  1F54  0972               	comf	___xxtofl@val+2,w
  8695  1F55  00FC               	movwf	___xxtofl@arg+2
  8696  1F56  0973               	comf	___xxtofl@val+3,w
  8697  1F57  00FD               	movwf	___xxtofl@arg+3
  8698  1F58  0AFA               	incf	___xxtofl@arg,f
  8699  1F59  1903               	skipnz
  8700  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  8701  1F5B  1903               	skipnz
  8702  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  8703  1F5D  1903               	skipnz
  8704  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  8705  1F5F  2F68               	goto	l871
  8706  1F60                     l3481:
  8707  1F60  0873               	movf	___xxtofl@val+3,w
  8708  1F61  00FD               	movwf	___xxtofl@arg+3
  8709  1F62  0872               	movf	___xxtofl@val+2,w
  8710  1F63  00FC               	movwf	___xxtofl@arg+2
  8711  1F64  0871               	movf	___xxtofl@val+1,w
  8712  1F65  00FB               	movwf	___xxtofl@arg+1
  8713  1F66  0870               	movf	___xxtofl@val,w
  8714  1F67  00FA               	movwf	___xxtofl@arg
  8715  1F68                     l871:
  8716  1F68  0873               	movf	___xxtofl@val+3,w
  8717  1F69  0472               	iorwf	___xxtofl@val+2,w
  8718  1F6A  0471               	iorwf	___xxtofl@val+1,w
  8719  1F6B  0470               	iorwf	___xxtofl@val,w
  8720  1F6C  1D03               	skipz
  8721  1F6D  2F6F               	goto	u5651
  8722  1F6E  2F70               	goto	u5650
  8723  1F6F                     u5651:
  8724  1F6F  2F79               	goto	l3487
  8725  1F70                     u5650:
  8726  1F70                     l3483:
  8727  1F70  3000               	movlw	0
  8728  1F71  00F3               	movwf	?___xxtofl+3
  8729  1F72  3000               	movlw	0
  8730  1F73  00F2               	movwf	?___xxtofl+2
  8731  1F74  3000               	movlw	0
  8732  1F75  00F1               	movwf	?___xxtofl+1
  8733  1F76  3000               	movlw	0
  8734  1F77  00F0               	movwf	?___xxtofl
  8735  1F78  2FFF               	goto	l873
  8736  1F79                     l3487:
  8737  1F79  3096               	movlw	150
  8738  1F7A  00F4               	movwf	??___xxtofl
  8739  1F7B  0874               	movf	??___xxtofl,w
  8740  1F7C  00F9               	movwf	___xxtofl@exp
  8741  1F7D  2F8B               	goto	l3491
  8742  1F7E                     l3489:
  8743  1F7E  3001               	movlw	1
  8744  1F7F  00F4               	movwf	??___xxtofl
  8745  1F80  0874               	movf	??___xxtofl,w
  8746  1F81  07F9               	addwf	___xxtofl@exp,f
  8747  1F82  3001               	movlw	1
  8748  1F83                     u5665:
  8749  1F83  1003               	clrc
  8750  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  8751  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  8752  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  8753  1F87  0CFA               	rrf	___xxtofl@arg,f
  8754  1F88  3EFF               	addlw	-1
  8755  1F89  1D03               	skipz
  8756  1F8A  2F83               	goto	u5665
  8757  1F8B                     l3491:
  8758  1F8B  30FE               	movlw	254
  8759  1F8C  057D               	andwf	___xxtofl@arg+3,w
  8760  1F8D  1D03               	btfss	3,2
  8761  1F8E  2F90               	goto	u5671
  8762  1F8F  2F91               	goto	u5670
  8763  1F90                     u5671:
  8764  1F90  2F7E               	goto	l3489
  8765  1F91                     u5670:
  8766  1F91  2FAD               	goto	l877
  8767  1F92                     l3493:
  8768  1F92  3001               	movlw	1
  8769  1F93  00F4               	movwf	??___xxtofl
  8770  1F94  0874               	movf	??___xxtofl,w
  8771  1F95  07F9               	addwf	___xxtofl@exp,f
  8772  1F96                     l3495:
  8773  1F96  3001               	movlw	1
  8774  1F97  07FA               	addwf	___xxtofl@arg,f
  8775  1F98  3000               	movlw	0
  8776  1F99  1803               	skipnc
  8777  1F9A  3001               	movlw	1
  8778  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  8779  1F9C  3000               	movlw	0
  8780  1F9D  1803               	skipnc
  8781  1F9E  3001               	movlw	1
  8782  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  8783  1FA0  3000               	movlw	0
  8784  1FA1  1803               	skipnc
  8785  1FA2  3001               	movlw	1
  8786  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  8787  1FA4                     l3497:
  8788  1FA4  3001               	movlw	1
  8789  1FA5                     u5685:
  8790  1FA5  1003               	clrc
  8791  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  8792  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  8793  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  8794  1FA9  0CFA               	rrf	___xxtofl@arg,f
  8795  1FAA  3EFF               	addlw	-1
  8796  1FAB  1D03               	skipz
  8797  1FAC  2FA5               	goto	u5685
  8798  1FAD                     l877:
  8799  1FAD  30FF               	movlw	255
  8800  1FAE  057D               	andwf	___xxtofl@arg+3,w
  8801  1FAF  1D03               	btfss	3,2
  8802  1FB0  2FB2               	goto	u5691
  8803  1FB1  2FB3               	goto	u5690
  8804  1FB2                     u5691:
  8805  1FB2  2F92               	goto	l3493
  8806  1FB3                     u5690:
  8807  1FB3  2FBF               	goto	l3501
  8808  1FB4                     l3499:
  8809  1FB4  3001               	movlw	1
  8810  1FB5  02F9               	subwf	___xxtofl@exp,f
  8811  1FB6  3001               	movlw	1
  8812  1FB7  00F4               	movwf	??___xxtofl
  8813  1FB8                     u5705:
  8814  1FB8  1003               	clrc
  8815  1FB9  0DFA               	rlf	___xxtofl@arg,f
  8816  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  8817  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  8818  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  8819  1FBD  0BF4               	decfsz	??___xxtofl,f
  8820  1FBE  2FB8               	goto	u5705
  8821  1FBF                     l3501:
  8822  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  8823  1FC0  2FC2               	goto	u5711
  8824  1FC1  2FC3               	goto	u5710
  8825  1FC2                     u5711:
  8826  1FC2  2FC9               	goto	l884
  8827  1FC3                     u5710:
  8828  1FC3                     l3503:
  8829  1FC3  3002               	movlw	2
  8830  1FC4  0279               	subwf	___xxtofl@exp,w
  8831  1FC5  1803               	skipnc
  8832  1FC6  2FC8               	goto	u5721
  8833  1FC7  2FC9               	goto	u5720
  8834  1FC8                     u5721:
  8835  1FC8  2FB4               	goto	l3499
  8836  1FC9                     u5720:
  8837  1FC9                     l884:
  8838  1FC9  1879               	btfsc	___xxtofl@exp,0
  8839  1FCA  2FCC               	goto	u5731
  8840  1FCB  2FCD               	goto	u5730
  8841  1FCC                     u5731:
  8842  1FCC  2FD5               	goto	l885
  8843  1FCD                     u5730:
  8844  1FCD                     l3505:
  8845  1FCD  30FF               	movlw	255
  8846  1FCE  05FA               	andwf	___xxtofl@arg,f
  8847  1FCF  30FF               	movlw	255
  8848  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  8849  1FD1  307F               	movlw	127
  8850  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  8851  1FD3  30FF               	movlw	255
  8852  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  8853  1FD5                     l885:
  8854  1FD5  1003               	clrc
  8855  1FD6  0CF9               	rrf	___xxtofl@exp,f
  8856  1FD7                     l3507:
  8857  1FD7  0879               	movf	___xxtofl@exp,w
  8858  1FD8  00F4               	movwf	??___xxtofl
  8859  1FD9  01F5               	clrf	??___xxtofl+1
  8860  1FDA  01F6               	clrf	??___xxtofl+2
  8861  1FDB  01F7               	clrf	??___xxtofl+3
  8862  1FDC  3018               	movlw	24
  8863  1FDD                     u5745:
  8864  1FDD  1003               	clrc
  8865  1FDE  0DF4               	rlf	??___xxtofl,f
  8866  1FDF  0DF5               	rlf	??___xxtofl+1,f
  8867  1FE0  0DF6               	rlf	??___xxtofl+2,f
  8868  1FE1  0DF7               	rlf	??___xxtofl+3,f
  8869  1FE2                     u5740:
  8870  1FE2  3EFF               	addlw	-1
  8871  1FE3  1D03               	skipz
  8872  1FE4  2FDD               	goto	u5745
  8873  1FE5  0874               	movf	??___xxtofl,w
  8874  1FE6  04FA               	iorwf	___xxtofl@arg,f
  8875  1FE7  0875               	movf	??___xxtofl+1,w
  8876  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  8877  1FE9  0876               	movf	??___xxtofl+2,w
  8878  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  8879  1FEB  0877               	movf	??___xxtofl+3,w
  8880  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  8881  1FED                     l3509:
  8882  1FED  0878               	movf	___xxtofl@sign,w
  8883  1FEE  1903               	btfsc	3,2
  8884  1FEF  2FF1               	goto	u5751
  8885  1FF0  2FF2               	goto	u5750
  8886  1FF1                     u5751:
  8887  1FF1  2FF7               	goto	l3515
  8888  1FF2                     u5750:
  8889  1FF2                     l3511:
  8890  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  8891  1FF3  2FF5               	goto	u5761
  8892  1FF4  2FF6               	goto	u5760
  8893  1FF5                     u5761:
  8894  1FF5  2FF7               	goto	l3515
  8895  1FF6                     u5760:
  8896  1FF6                     l3513:
  8897  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  8898  1FF7                     l3515:
  8899  1FF7  087D               	movf	___xxtofl@arg+3,w
  8900  1FF8  00F3               	movwf	?___xxtofl+3
  8901  1FF9  087C               	movf	___xxtofl@arg+2,w
  8902  1FFA  00F2               	movwf	?___xxtofl+2
  8903  1FFB  087B               	movf	___xxtofl@arg+1,w
  8904  1FFC  00F1               	movwf	?___xxtofl+1
  8905  1FFD  087A               	movf	___xxtofl@arg,w
  8906  1FFE  00F0               	movwf	?___xxtofl
  8907  1FFF                     l873:
  8908  1FFF  0008               	return
  8909  2000                     __end_of___xxtofl:
  8910                           
  8911                           	psect	text22
  8912  0C9F                     __ptext22:	
  8913 ;; *************** function ___flmul *****************
  8914 ;; Defined at:
  8915 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  b               4    4[BANK0 ] unsigned char 
  8918 ;;  a               4    8[BANK0 ] unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  prod            4   24[BANK0 ] struct .
  8921 ;;  grs             4   18[BANK0 ] unsigned long 
  8922 ;;  temp            2   28[BANK0 ] struct .
  8923 ;;  bexp            1   23[BANK0 ] unsigned char 
  8924 ;;  aexp            1   22[BANK0 ] unsigned char 
  8925 ;;  sign            1   17[BANK0 ] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  4    4[BANK0 ] unsigned char 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8935 ;;      Params:         0       8       0       0       0
  8936 ;;      Locals:         0      13       0       0       0
  8937 ;;      Temps:          0       5       0       0       0
  8938 ;;      Totals:         0      26       0       0       0
  8939 ;;Total ram usage:       26 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    1
  8942 ;; This function calls:
  8943 ;;		__Umul8_16
  8944 ;; This function is called by:
  8945 ;;		_mapear
  8946 ;;		_fround
  8947 ;;		_scale
  8948 ;;		_sprintf
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function ___flmul
  8954  0C9F                     ___flmul:
  8955  0C9F                     l2855:	
  8956                           ;incstack = 0
  8957                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8958                           
  8959  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8960  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8961  0CA1  0827               	movf	___flmul@b+3,w
  8962  0CA2  3980               	andlw	128
  8963  0CA3  00AC               	movwf	??___flmul
  8964  0CA4  082C               	movf	??___flmul,w
  8965  0CA5  00B1               	movwf	___flmul@sign
  8966  0CA6                     l2857:
  8967  0CA6  0827               	movf	___flmul@b+3,w
  8968  0CA7  00AC               	movwf	??___flmul
  8969  0CA8  072C               	addwf	??___flmul,w
  8970  0CA9  00AD               	movwf	??___flmul+1
  8971  0CAA  082D               	movf	??___flmul+1,w
  8972  0CAB  00B7               	movwf	___flmul@bexp
  8973  0CAC                     l2859:
  8974  0CAC  1FA6               	btfss	___flmul@b+2,7
  8975  0CAD  2CAF               	goto	u4041
  8976  0CAE  2CB0               	goto	u4040
  8977  0CAF                     u4041:
  8978  0CAF  2CB1               	goto	l2863
  8979  0CB0                     u4040:
  8980  0CB0                     l2861:
  8981  0CB0  1437               	bsf	___flmul@bexp,0
  8982  0CB1                     l2863:
  8983  0CB1  0837               	movf	___flmul@bexp,w
  8984  0CB2  1903               	btfsc	3,2
  8985  0CB3  2CB5               	goto	u4051
  8986  0CB4  2CB6               	goto	u4050
  8987  0CB5                     u4051:
  8988  0CB5  2CC5               	goto	l2871
  8989  0CB6                     u4050:
  8990  0CB6                     l2865:
  8991  0CB6  0A37               	incf	___flmul@bexp,w
  8992  0CB7  1D03               	btfss	3,2
  8993  0CB8  2CBA               	goto	u4061
  8994  0CB9  2CBB               	goto	u4060
  8995  0CBA                     u4061:
  8996  0CBA  2CC3               	goto	l2869
  8997  0CBB                     u4060:
  8998  0CBB                     l2867:
  8999  0CBB  3000               	movlw	0
  9000  0CBC  00A7               	movwf	___flmul@b+3
  9001  0CBD  3000               	movlw	0
  9002  0CBE  00A6               	movwf	___flmul@b+2
  9003  0CBF  3000               	movlw	0
  9004  0CC0  00A5               	movwf	___flmul@b+1
  9005  0CC1  3000               	movlw	0
  9006  0CC2  00A4               	movwf	___flmul@b
  9007  0CC3                     l2869:
  9008  0CC3  17A6               	bsf	___flmul@b+2,7
  9009  0CC4  2CCD               	goto	l2873
  9010  0CC5                     l2871:
  9011  0CC5  3000               	movlw	0
  9012  0CC6  00A7               	movwf	___flmul@b+3
  9013  0CC7  3000               	movlw	0
  9014  0CC8  00A6               	movwf	___flmul@b+2
  9015  0CC9  3000               	movlw	0
  9016  0CCA  00A5               	movwf	___flmul@b+1
  9017  0CCB  3000               	movlw	0
  9018  0CCC  00A4               	movwf	___flmul@b
  9019  0CCD                     l2873:
  9020  0CCD  082B               	movf	___flmul@a+3,w
  9021  0CCE  3980               	andlw	128
  9022  0CCF  00AC               	movwf	??___flmul
  9023  0CD0  082C               	movf	??___flmul,w
  9024  0CD1  06B1               	xorwf	___flmul@sign,f
  9025  0CD2                     l2875:
  9026  0CD2  082B               	movf	___flmul@a+3,w
  9027  0CD3  00AC               	movwf	??___flmul
  9028  0CD4  072C               	addwf	??___flmul,w
  9029  0CD5  00AD               	movwf	??___flmul+1
  9030  0CD6  082D               	movf	??___flmul+1,w
  9031  0CD7  00B6               	movwf	___flmul@aexp
  9032  0CD8                     l2877:
  9033  0CD8  1FAA               	btfss	___flmul@a+2,7
  9034  0CD9  2CDB               	goto	u4071
  9035  0CDA  2CDC               	goto	u4070
  9036  0CDB                     u4071:
  9037  0CDB  2CDD               	goto	l2881
  9038  0CDC                     u4070:
  9039  0CDC                     l2879:
  9040  0CDC  1436               	bsf	___flmul@aexp,0
  9041  0CDD                     l2881:
  9042  0CDD  0836               	movf	___flmul@aexp,w
  9043  0CDE  1903               	btfsc	3,2
  9044  0CDF  2CE1               	goto	u4081
  9045  0CE0  2CE2               	goto	u4080
  9046  0CE1                     u4081:
  9047  0CE1  2CF1               	goto	l2889
  9048  0CE2                     u4080:
  9049  0CE2                     l2883:
  9050  0CE2  0A36               	incf	___flmul@aexp,w
  9051  0CE3  1D03               	btfss	3,2
  9052  0CE4  2CE6               	goto	u4091
  9053  0CE5  2CE7               	goto	u4090
  9054  0CE6                     u4091:
  9055  0CE6  2CEF               	goto	l2887
  9056  0CE7                     u4090:
  9057  0CE7                     l2885:
  9058  0CE7  3000               	movlw	0
  9059  0CE8  00AB               	movwf	___flmul@a+3
  9060  0CE9  3000               	movlw	0
  9061  0CEA  00AA               	movwf	___flmul@a+2
  9062  0CEB  3000               	movlw	0
  9063  0CEC  00A9               	movwf	___flmul@a+1
  9064  0CED  3000               	movlw	0
  9065  0CEE  00A8               	movwf	___flmul@a
  9066  0CEF                     l2887:
  9067  0CEF  17AA               	bsf	___flmul@a+2,7
  9068  0CF0  2CF9               	goto	l2891
  9069  0CF1                     l2889:
  9070  0CF1  3000               	movlw	0
  9071  0CF2  00AB               	movwf	___flmul@a+3
  9072  0CF3  3000               	movlw	0
  9073  0CF4  00AA               	movwf	___flmul@a+2
  9074  0CF5  3000               	movlw	0
  9075  0CF6  00A9               	movwf	___flmul@a+1
  9076  0CF7  3000               	movlw	0
  9077  0CF8  00A8               	movwf	___flmul@a
  9078  0CF9                     l2891:
  9079  0CF9  0836               	movf	___flmul@aexp,w
  9080  0CFA  1903               	btfsc	3,2
  9081  0CFB  2CFD               	goto	u4101
  9082  0CFC  2CFE               	goto	u4100
  9083  0CFD                     u4101:
  9084  0CFD  2D03               	goto	l2895
  9085  0CFE                     u4100:
  9086  0CFE                     l2893:
  9087  0CFE  0837               	movf	___flmul@bexp,w
  9088  0CFF  1D03               	btfss	3,2
  9089  0D00  2D02               	goto	u4111
  9090  0D01  2D03               	goto	u4110
  9091  0D02                     u4111:
  9092  0D02  2D0C               	goto	l2899
  9093  0D03                     u4110:
  9094  0D03                     l2895:
  9095  0D03  3000               	movlw	0
  9096  0D04  00A7               	movwf	?___flmul+3
  9097  0D05  3000               	movlw	0
  9098  0D06  00A6               	movwf	?___flmul+2
  9099  0D07  3000               	movlw	0
  9100  0D08  00A5               	movwf	?___flmul+1
  9101  0D09  3000               	movlw	0
  9102  0D0A  00A4               	movwf	?___flmul
  9103  0D0B  2FFF               	goto	l827
  9104  0D0C                     l2899:
  9105  0D0C  0824               	movf	___flmul@b,w
  9106  0D0D  00AC               	movwf	??___flmul
  9107  0D0E  082C               	movf	??___flmul,w
  9108  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  9109  0D10  082A               	movf	___flmul@a+2,w
  9110  0D11  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9111  0D16  0871               	movf	?__Umul8_16+1,w
  9112  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9113  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  9114  0D19  00BD               	movwf	___flmul@temp+1
  9115  0D1A  0870               	movf	?__Umul8_16,w
  9116  0D1B  00BC               	movwf	___flmul@temp
  9117  0D1C                     l2901:
  9118  0D1C  083C               	movf	___flmul@temp,w
  9119  0D1D  00AC               	movwf	??___flmul
  9120  0D1E  01AD               	clrf	??___flmul+1
  9121  0D1F  01AE               	clrf	??___flmul+2
  9122  0D20  01AF               	clrf	??___flmul+3
  9123  0D21  082F               	movf	??___flmul+3,w
  9124  0D22  00B5               	movwf	___flmul@grs+3
  9125  0D23  082E               	movf	??___flmul+2,w
  9126  0D24  00B4               	movwf	___flmul@grs+2
  9127  0D25  082D               	movf	??___flmul+1,w
  9128  0D26  00B3               	movwf	___flmul@grs+1
  9129  0D27  082C               	movf	??___flmul,w
  9130  0D28  00B2               	movwf	___flmul@grs
  9131  0D29                     l2903:
  9132  0D29  083D               	movf	___flmul@temp+1,w
  9133  0D2A  00AC               	movwf	??___flmul
  9134  0D2B  01AD               	clrf	??___flmul+1
  9135  0D2C  01AE               	clrf	??___flmul+2
  9136  0D2D  01AF               	clrf	??___flmul+3
  9137  0D2E  082F               	movf	??___flmul+3,w
  9138  0D2F  00BB               	movwf	___flmul@prod+3
  9139  0D30  082E               	movf	??___flmul+2,w
  9140  0D31  00BA               	movwf	___flmul@prod+2
  9141  0D32  082D               	movf	??___flmul+1,w
  9142  0D33  00B9               	movwf	___flmul@prod+1
  9143  0D34  082C               	movf	??___flmul,w
  9144  0D35  00B8               	movwf	___flmul@prod
  9145  0D36  0825               	movf	___flmul@b+1,w
  9146  0D37  00AC               	movwf	??___flmul
  9147  0D38  082C               	movf	??___flmul,w
  9148  0D39  00F0               	movwf	__Umul8_16@multiplicand
  9149  0D3A  0829               	movf	___flmul@a+1,w
  9150  0D3B  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9151  0D40  0871               	movf	?__Umul8_16+1,w
  9152  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  9153  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  9154  0D43  00BD               	movwf	___flmul@temp+1
  9155  0D44  0870               	movf	?__Umul8_16,w
  9156  0D45  00BC               	movwf	___flmul@temp
  9157  0D46                     l2905:
  9158  0D46  083C               	movf	___flmul@temp,w
  9159  0D47  00AC               	movwf	??___flmul
  9160  0D48  01AD               	clrf	??___flmul+1
  9161  0D49  01AE               	clrf	??___flmul+2
  9162  0D4A  01AF               	clrf	??___flmul+3
  9163  0D4B  082C               	movf	??___flmul,w
  9164  0D4C  07B2               	addwf	___flmul@grs,f
  9165  0D4D  082D               	movf	??___flmul+1,w
  9166  0D4E  1103               	clrz
  9167  0D4F  1803               	skipnc
  9168  0D50  3E01               	addlw	1
  9169  0D51  1903               	skipnz
  9170  0D52  2D54               	goto	u4121
  9171  0D53  07B3               	addwf	___flmul@grs+1,f
  9172  0D54                     u4121:
  9173  0D54  082E               	movf	??___flmul+2,w
  9174  0D55  1103               	clrz
  9175  0D56  1803               	skipnc
  9176  0D57  3E01               	addlw	1
  9177  0D58  1903               	skipnz
  9178  0D59  2D5B               	goto	u4122
  9179  0D5A  07B4               	addwf	___flmul@grs+2,f
  9180  0D5B                     u4122:
  9181  0D5B  082F               	movf	??___flmul+3,w
  9182  0D5C  1103               	clrz
  9183  0D5D  1803               	skipnc
  9184  0D5E  3E01               	addlw	1
  9185  0D5F  1903               	skipnz
  9186  0D60  2D62               	goto	u4123
  9187  0D61  07B5               	addwf	___flmul@grs+3,f
  9188  0D62                     u4123:
  9189  0D62                     l2907:
  9190  0D62  083D               	movf	___flmul@temp+1,w
  9191  0D63  00AC               	movwf	??___flmul
  9192  0D64  01AD               	clrf	??___flmul+1
  9193  0D65  01AE               	clrf	??___flmul+2
  9194  0D66  01AF               	clrf	??___flmul+3
  9195  0D67  082C               	movf	??___flmul,w
  9196  0D68  07B8               	addwf	___flmul@prod,f
  9197  0D69  082D               	movf	??___flmul+1,w
  9198  0D6A  1103               	clrz
  9199  0D6B  1803               	skipnc
  9200  0D6C  3E01               	addlw	1
  9201  0D6D  1903               	skipnz
  9202  0D6E  2D70               	goto	u4131
  9203  0D6F  07B9               	addwf	___flmul@prod+1,f
  9204  0D70                     u4131:
  9205  0D70  082E               	movf	??___flmul+2,w
  9206  0D71  1103               	clrz
  9207  0D72  1803               	skipnc
  9208  0D73  3E01               	addlw	1
  9209  0D74  1903               	skipnz
  9210  0D75  2D77               	goto	u4132
  9211  0D76  07BA               	addwf	___flmul@prod+2,f
  9212  0D77                     u4132:
  9213  0D77  082F               	movf	??___flmul+3,w
  9214  0D78  1103               	clrz
  9215  0D79  1803               	skipnc
  9216  0D7A  3E01               	addlw	1
  9217  0D7B  1903               	skipnz
  9218  0D7C  2D7E               	goto	u4133
  9219  0D7D  07BB               	addwf	___flmul@prod+3,f
  9220  0D7E                     u4133:
  9221  0D7E  0826               	movf	___flmul@b+2,w
  9222  0D7F  00AC               	movwf	??___flmul
  9223  0D80  082C               	movf	??___flmul,w
  9224  0D81  00F0               	movwf	__Umul8_16@multiplicand
  9225  0D82  0828               	movf	___flmul@a,w
  9226  0D83  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9227  0D88  0871               	movf	?__Umul8_16+1,w
  9228  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  9229  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  9230  0D8B  00BD               	movwf	___flmul@temp+1
  9231  0D8C  0870               	movf	?__Umul8_16,w
  9232  0D8D  00BC               	movwf	___flmul@temp
  9233  0D8E                     l2909:
  9234  0D8E  083C               	movf	___flmul@temp,w
  9235  0D8F  00AC               	movwf	??___flmul
  9236  0D90  01AD               	clrf	??___flmul+1
  9237  0D91  01AE               	clrf	??___flmul+2
  9238  0D92  01AF               	clrf	??___flmul+3
  9239  0D93  082C               	movf	??___flmul,w
  9240  0D94  07B2               	addwf	___flmul@grs,f
  9241  0D95  082D               	movf	??___flmul+1,w
  9242  0D96  1103               	clrz
  9243  0D97  1803               	skipnc
  9244  0D98  3E01               	addlw	1
  9245  0D99  1903               	skipnz
  9246  0D9A  2D9C               	goto	u4141
  9247  0D9B  07B3               	addwf	___flmul@grs+1,f
  9248  0D9C                     u4141:
  9249  0D9C  082E               	movf	??___flmul+2,w
  9250  0D9D  1103               	clrz
  9251  0D9E  1803               	skipnc
  9252  0D9F  3E01               	addlw	1
  9253  0DA0  1903               	skipnz
  9254  0DA1  2DA3               	goto	u4142
  9255  0DA2  07B4               	addwf	___flmul@grs+2,f
  9256  0DA3                     u4142:
  9257  0DA3  082F               	movf	??___flmul+3,w
  9258  0DA4  1103               	clrz
  9259  0DA5  1803               	skipnc
  9260  0DA6  3E01               	addlw	1
  9261  0DA7  1903               	skipnz
  9262  0DA8  2DAA               	goto	u4143
  9263  0DA9  07B5               	addwf	___flmul@grs+3,f
  9264  0DAA                     u4143:
  9265  0DAA                     l2911:
  9266  0DAA  083D               	movf	___flmul@temp+1,w
  9267  0DAB  00AC               	movwf	??___flmul
  9268  0DAC  01AD               	clrf	??___flmul+1
  9269  0DAD  01AE               	clrf	??___flmul+2
  9270  0DAE  01AF               	clrf	??___flmul+3
  9271  0DAF  082C               	movf	??___flmul,w
  9272  0DB0  07B8               	addwf	___flmul@prod,f
  9273  0DB1  082D               	movf	??___flmul+1,w
  9274  0DB2  1103               	clrz
  9275  0DB3  1803               	skipnc
  9276  0DB4  3E01               	addlw	1
  9277  0DB5  1903               	skipnz
  9278  0DB6  2DB8               	goto	u4151
  9279  0DB7  07B9               	addwf	___flmul@prod+1,f
  9280  0DB8                     u4151:
  9281  0DB8  082E               	movf	??___flmul+2,w
  9282  0DB9  1103               	clrz
  9283  0DBA  1803               	skipnc
  9284  0DBB  3E01               	addlw	1
  9285  0DBC  1903               	skipnz
  9286  0DBD  2DBF               	goto	u4152
  9287  0DBE  07BA               	addwf	___flmul@prod+2,f
  9288  0DBF                     u4152:
  9289  0DBF  082F               	movf	??___flmul+3,w
  9290  0DC0  1103               	clrz
  9291  0DC1  1803               	skipnc
  9292  0DC2  3E01               	addlw	1
  9293  0DC3  1903               	skipnz
  9294  0DC4  2DC6               	goto	u4153
  9295  0DC5  07BB               	addwf	___flmul@prod+3,f
  9296  0DC6                     u4153:
  9297  0DC6                     l2913:
  9298  0DC6  3008               	movlw	8
  9299  0DC7  00AC               	movwf	??___flmul
  9300  0DC8                     u4165:
  9301  0DC8  1003               	clrc
  9302  0DC9  0DB2               	rlf	___flmul@grs,f
  9303  0DCA  0DB3               	rlf	___flmul@grs+1,f
  9304  0DCB  0DB4               	rlf	___flmul@grs+2,f
  9305  0DCC  0DB5               	rlf	___flmul@grs+3,f
  9306  0DCD  0BAC               	decfsz	??___flmul,f
  9307  0DCE  2DC8               	goto	u4165
  9308  0DCF                     l2915:
  9309  0DCF  0825               	movf	___flmul@b+1,w
  9310  0DD0  00AC               	movwf	??___flmul
  9311  0DD1  082C               	movf	??___flmul,w
  9312  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  9313  0DD3  0828               	movf	___flmul@a,w
  9314  0DD4  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9315  0DD9  0871               	movf	?__Umul8_16+1,w
  9316  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  9317  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  9318  0DDC  00BD               	movwf	___flmul@temp+1
  9319  0DDD  0870               	movf	?__Umul8_16,w
  9320  0DDE  00BC               	movwf	___flmul@temp
  9321  0DDF                     l2917:
  9322  0DDF  083C               	movf	___flmul@temp,w
  9323  0DE0  00AC               	movwf	??___flmul
  9324  0DE1  083D               	movf	___flmul@temp+1,w
  9325  0DE2  00AD               	movwf	??___flmul+1
  9326  0DE3  01AE               	clrf	??___flmul+2
  9327  0DE4  01AF               	clrf	??___flmul+3
  9328  0DE5  082C               	movf	??___flmul,w
  9329  0DE6  07B2               	addwf	___flmul@grs,f
  9330  0DE7  082D               	movf	??___flmul+1,w
  9331  0DE8  1103               	clrz
  9332  0DE9  1803               	skipnc
  9333  0DEA  3E01               	addlw	1
  9334  0DEB  1903               	skipnz
  9335  0DEC  2DEE               	goto	u4171
  9336  0DED  07B3               	addwf	___flmul@grs+1,f
  9337  0DEE                     u4171:
  9338  0DEE  082E               	movf	??___flmul+2,w
  9339  0DEF  1103               	clrz
  9340  0DF0  1803               	skipnc
  9341  0DF1  3E01               	addlw	1
  9342  0DF2  1903               	skipnz
  9343  0DF3  2DF5               	goto	u4172
  9344  0DF4  07B4               	addwf	___flmul@grs+2,f
  9345  0DF5                     u4172:
  9346  0DF5  082F               	movf	??___flmul+3,w
  9347  0DF6  1103               	clrz
  9348  0DF7  1803               	skipnc
  9349  0DF8  3E01               	addlw	1
  9350  0DF9  1903               	skipnz
  9351  0DFA  2DFC               	goto	u4173
  9352  0DFB  07B5               	addwf	___flmul@grs+3,f
  9353  0DFC                     u4173:
  9354  0DFC                     l2919:
  9355  0DFC  0824               	movf	___flmul@b,w
  9356  0DFD  00AC               	movwf	??___flmul
  9357  0DFE  082C               	movf	??___flmul,w
  9358  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  9359  0E00  0829               	movf	___flmul@a+1,w
  9360  0E01  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9361  0E06  0871               	movf	?__Umul8_16+1,w
  9362  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  9363  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  9364  0E09  00BD               	movwf	___flmul@temp+1
  9365  0E0A  0870               	movf	?__Umul8_16,w
  9366  0E0B  00BC               	movwf	___flmul@temp
  9367  0E0C                     l2921:
  9368  0E0C  083C               	movf	___flmul@temp,w
  9369  0E0D  00AC               	movwf	??___flmul
  9370  0E0E  083D               	movf	___flmul@temp+1,w
  9371  0E0F  00AD               	movwf	??___flmul+1
  9372  0E10  01AE               	clrf	??___flmul+2
  9373  0E11  01AF               	clrf	??___flmul+3
  9374  0E12  082C               	movf	??___flmul,w
  9375  0E13  07B2               	addwf	___flmul@grs,f
  9376  0E14  082D               	movf	??___flmul+1,w
  9377  0E15  1103               	clrz
  9378  0E16  1803               	skipnc
  9379  0E17  3E01               	addlw	1
  9380  0E18  1903               	skipnz
  9381  0E19  2E1B               	goto	u4181
  9382  0E1A  07B3               	addwf	___flmul@grs+1,f
  9383  0E1B                     u4181:
  9384  0E1B  082E               	movf	??___flmul+2,w
  9385  0E1C  1103               	clrz
  9386  0E1D  1803               	skipnc
  9387  0E1E  3E01               	addlw	1
  9388  0E1F  1903               	skipnz
  9389  0E20  2E22               	goto	u4182
  9390  0E21  07B4               	addwf	___flmul@grs+2,f
  9391  0E22                     u4182:
  9392  0E22  082F               	movf	??___flmul+3,w
  9393  0E23  1103               	clrz
  9394  0E24  1803               	skipnc
  9395  0E25  3E01               	addlw	1
  9396  0E26  1903               	skipnz
  9397  0E27  2E29               	goto	u4183
  9398  0E28  07B5               	addwf	___flmul@grs+3,f
  9399  0E29                     u4183:
  9400  0E29                     l2923:
  9401  0E29  3008               	movlw	8
  9402  0E2A  00AC               	movwf	??___flmul
  9403  0E2B                     u4195:
  9404  0E2B  1003               	clrc
  9405  0E2C  0DB2               	rlf	___flmul@grs,f
  9406  0E2D  0DB3               	rlf	___flmul@grs+1,f
  9407  0E2E  0DB4               	rlf	___flmul@grs+2,f
  9408  0E2F  0DB5               	rlf	___flmul@grs+3,f
  9409  0E30  0BAC               	decfsz	??___flmul,f
  9410  0E31  2E2B               	goto	u4195
  9411  0E32  0824               	movf	___flmul@b,w
  9412  0E33  00AC               	movwf	??___flmul
  9413  0E34  082C               	movf	??___flmul,w
  9414  0E35  00F0               	movwf	__Umul8_16@multiplicand
  9415  0E36  0828               	movf	___flmul@a,w
  9416  0E37  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9417  0E3C  0871               	movf	?__Umul8_16+1,w
  9418  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  9419  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  9420  0E3F  00BD               	movwf	___flmul@temp+1
  9421  0E40  0870               	movf	?__Umul8_16,w
  9422  0E41  00BC               	movwf	___flmul@temp
  9423  0E42                     l2925:
  9424  0E42  083C               	movf	___flmul@temp,w
  9425  0E43  00AC               	movwf	??___flmul
  9426  0E44  083D               	movf	___flmul@temp+1,w
  9427  0E45  00AD               	movwf	??___flmul+1
  9428  0E46  01AE               	clrf	??___flmul+2
  9429  0E47  01AF               	clrf	??___flmul+3
  9430  0E48  082C               	movf	??___flmul,w
  9431  0E49  07B2               	addwf	___flmul@grs,f
  9432  0E4A  082D               	movf	??___flmul+1,w
  9433  0E4B  1103               	clrz
  9434  0E4C  1803               	skipnc
  9435  0E4D  3E01               	addlw	1
  9436  0E4E  1903               	skipnz
  9437  0E4F  2E51               	goto	u4201
  9438  0E50  07B3               	addwf	___flmul@grs+1,f
  9439  0E51                     u4201:
  9440  0E51  082E               	movf	??___flmul+2,w
  9441  0E52  1103               	clrz
  9442  0E53  1803               	skipnc
  9443  0E54  3E01               	addlw	1
  9444  0E55  1903               	skipnz
  9445  0E56  2E58               	goto	u4202
  9446  0E57  07B4               	addwf	___flmul@grs+2,f
  9447  0E58                     u4202:
  9448  0E58  082F               	movf	??___flmul+3,w
  9449  0E59  1103               	clrz
  9450  0E5A  1803               	skipnc
  9451  0E5B  3E01               	addlw	1
  9452  0E5C  1903               	skipnz
  9453  0E5D  2E5F               	goto	u4203
  9454  0E5E  07B5               	addwf	___flmul@grs+3,f
  9455  0E5F                     u4203:
  9456  0E5F                     l2927:
  9457  0E5F  0825               	movf	___flmul@b+1,w
  9458  0E60  00AC               	movwf	??___flmul
  9459  0E61  082C               	movf	??___flmul,w
  9460  0E62  00F0               	movwf	__Umul8_16@multiplicand
  9461  0E63  082A               	movf	___flmul@a+2,w
  9462  0E64  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9463  0E69  0871               	movf	?__Umul8_16+1,w
  9464  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  9465  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  9466  0E6C  00BD               	movwf	___flmul@temp+1
  9467  0E6D  0870               	movf	?__Umul8_16,w
  9468  0E6E  00BC               	movwf	___flmul@temp
  9469  0E6F  083C               	movf	___flmul@temp,w
  9470  0E70  00AC               	movwf	??___flmul
  9471  0E71  083D               	movf	___flmul@temp+1,w
  9472  0E72  00AD               	movwf	??___flmul+1
  9473  0E73  01AE               	clrf	??___flmul+2
  9474  0E74  01AF               	clrf	??___flmul+3
  9475  0E75  082C               	movf	??___flmul,w
  9476  0E76  07B8               	addwf	___flmul@prod,f
  9477  0E77  082D               	movf	??___flmul+1,w
  9478  0E78  1103               	clrz
  9479  0E79  1803               	skipnc
  9480  0E7A  3E01               	addlw	1
  9481  0E7B  1903               	skipnz
  9482  0E7C  2E7E               	goto	u4211
  9483  0E7D  07B9               	addwf	___flmul@prod+1,f
  9484  0E7E                     u4211:
  9485  0E7E  082E               	movf	??___flmul+2,w
  9486  0E7F  1103               	clrz
  9487  0E80  1803               	skipnc
  9488  0E81  3E01               	addlw	1
  9489  0E82  1903               	skipnz
  9490  0E83  2E85               	goto	u4212
  9491  0E84  07BA               	addwf	___flmul@prod+2,f
  9492  0E85                     u4212:
  9493  0E85  082F               	movf	??___flmul+3,w
  9494  0E86  1103               	clrz
  9495  0E87  1803               	skipnc
  9496  0E88  3E01               	addlw	1
  9497  0E89  1903               	skipnz
  9498  0E8A  2E8C               	goto	u4213
  9499  0E8B  07BB               	addwf	___flmul@prod+3,f
  9500  0E8C                     u4213:
  9501  0E8C                     l2929:
  9502  0E8C  0826               	movf	___flmul@b+2,w
  9503  0E8D  00AC               	movwf	??___flmul
  9504  0E8E  082C               	movf	??___flmul,w
  9505  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  9506  0E90  0829               	movf	___flmul@a+1,w
  9507  0E91  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9508  0E96  0871               	movf	?__Umul8_16+1,w
  9509  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  9510  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  9511  0E99  00BD               	movwf	___flmul@temp+1
  9512  0E9A  0870               	movf	?__Umul8_16,w
  9513  0E9B  00BC               	movwf	___flmul@temp
  9514  0E9C                     l2931:
  9515  0E9C  083C               	movf	___flmul@temp,w
  9516  0E9D  00AC               	movwf	??___flmul
  9517  0E9E  083D               	movf	___flmul@temp+1,w
  9518  0E9F  00AD               	movwf	??___flmul+1
  9519  0EA0  01AE               	clrf	??___flmul+2
  9520  0EA1  01AF               	clrf	??___flmul+3
  9521  0EA2  082C               	movf	??___flmul,w
  9522  0EA3  07B8               	addwf	___flmul@prod,f
  9523  0EA4  082D               	movf	??___flmul+1,w
  9524  0EA5  1103               	clrz
  9525  0EA6  1803               	skipnc
  9526  0EA7  3E01               	addlw	1
  9527  0EA8  1903               	skipnz
  9528  0EA9  2EAB               	goto	u4221
  9529  0EAA  07B9               	addwf	___flmul@prod+1,f
  9530  0EAB                     u4221:
  9531  0EAB  082E               	movf	??___flmul+2,w
  9532  0EAC  1103               	clrz
  9533  0EAD  1803               	skipnc
  9534  0EAE  3E01               	addlw	1
  9535  0EAF  1903               	skipnz
  9536  0EB0  2EB2               	goto	u4222
  9537  0EB1  07BA               	addwf	___flmul@prod+2,f
  9538  0EB2                     u4222:
  9539  0EB2  082F               	movf	??___flmul+3,w
  9540  0EB3  1103               	clrz
  9541  0EB4  1803               	skipnc
  9542  0EB5  3E01               	addlw	1
  9543  0EB6  1903               	skipnz
  9544  0EB7  2EB9               	goto	u4223
  9545  0EB8  07BB               	addwf	___flmul@prod+3,f
  9546  0EB9                     u4223:
  9547  0EB9  0826               	movf	___flmul@b+2,w
  9548  0EBA  00AC               	movwf	??___flmul
  9549  0EBB  082C               	movf	??___flmul,w
  9550  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  9551  0EBD  082A               	movf	___flmul@a+2,w
  9552  0EBE  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9553  0EC3  0871               	movf	?__Umul8_16+1,w
  9554  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9555  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9556  0EC6  00BD               	movwf	___flmul@temp+1
  9557  0EC7  0870               	movf	?__Umul8_16,w
  9558  0EC8  00BC               	movwf	___flmul@temp
  9559  0EC9                     l2933:
  9560  0EC9  083C               	movf	___flmul@temp,w
  9561  0ECA  00AC               	movwf	??___flmul
  9562  0ECB  083D               	movf	___flmul@temp+1,w
  9563  0ECC  00AD               	movwf	??___flmul+1
  9564  0ECD  01AE               	clrf	??___flmul+2
  9565  0ECE  01AF               	clrf	??___flmul+3
  9566  0ECF  3008               	movlw	8
  9567  0ED0                     u4235:
  9568  0ED0  1003               	clrc
  9569  0ED1  0DAC               	rlf	??___flmul,f
  9570  0ED2  0DAD               	rlf	??___flmul+1,f
  9571  0ED3  0DAE               	rlf	??___flmul+2,f
  9572  0ED4  0DAF               	rlf	??___flmul+3,f
  9573  0ED5                     u4230:
  9574  0ED5  3EFF               	addlw	-1
  9575  0ED6  1D03               	skipz
  9576  0ED7  2ED0               	goto	u4235
  9577  0ED8  082C               	movf	??___flmul,w
  9578  0ED9  07B8               	addwf	___flmul@prod,f
  9579  0EDA  082D               	movf	??___flmul+1,w
  9580  0EDB  1103               	clrz
  9581  0EDC  1803               	skipnc
  9582  0EDD  3E01               	addlw	1
  9583  0EDE  1903               	skipnz
  9584  0EDF  2EE1               	goto	u4241
  9585  0EE0  07B9               	addwf	___flmul@prod+1,f
  9586  0EE1                     u4241:
  9587  0EE1  082E               	movf	??___flmul+2,w
  9588  0EE2  1103               	clrz
  9589  0EE3  1803               	skipnc
  9590  0EE4  3E01               	addlw	1
  9591  0EE5  1903               	skipnz
  9592  0EE6  2EE8               	goto	u4242
  9593  0EE7  07BA               	addwf	___flmul@prod+2,f
  9594  0EE8                     u4242:
  9595  0EE8  082F               	movf	??___flmul+3,w
  9596  0EE9  1103               	clrz
  9597  0EEA  1803               	skipnc
  9598  0EEB  3E01               	addlw	1
  9599  0EEC  1903               	skipnz
  9600  0EED  2EEF               	goto	u4243
  9601  0EEE  07BB               	addwf	___flmul@prod+3,f
  9602  0EEF                     u4243:
  9603  0EEF                     l2935:
  9604  0EEF  0832               	movf	___flmul@grs,w
  9605  0EF0  00AC               	movwf	??___flmul
  9606  0EF1  0833               	movf	___flmul@grs+1,w
  9607  0EF2  00AD               	movwf	??___flmul+1
  9608  0EF3  0834               	movf	___flmul@grs+2,w
  9609  0EF4  00AE               	movwf	??___flmul+2
  9610  0EF5  0835               	movf	___flmul@grs+3,w
  9611  0EF6  00AF               	movwf	??___flmul+3
  9612  0EF7  3018               	movlw	24
  9613  0EF8                     u4255:
  9614  0EF8  1003               	clrc
  9615  0EF9  0CAF               	rrf	??___flmul+3,f
  9616  0EFA  0CAE               	rrf	??___flmul+2,f
  9617  0EFB  0CAD               	rrf	??___flmul+1,f
  9618  0EFC  0CAC               	rrf	??___flmul,f
  9619  0EFD                     u4250:
  9620  0EFD  3EFF               	addlw	-1
  9621  0EFE  1D03               	skipz
  9622  0EFF  2EF8               	goto	u4255
  9623  0F00  082C               	movf	??___flmul,w
  9624  0F01  07B8               	addwf	___flmul@prod,f
  9625  0F02  082D               	movf	??___flmul+1,w
  9626  0F03  1103               	clrz
  9627  0F04  1803               	skipnc
  9628  0F05  3E01               	addlw	1
  9629  0F06  1903               	skipnz
  9630  0F07  2F09               	goto	u4261
  9631  0F08  07B9               	addwf	___flmul@prod+1,f
  9632  0F09                     u4261:
  9633  0F09  082E               	movf	??___flmul+2,w
  9634  0F0A  1103               	clrz
  9635  0F0B  1803               	skipnc
  9636  0F0C  3E01               	addlw	1
  9637  0F0D  1903               	skipnz
  9638  0F0E  2F10               	goto	u4262
  9639  0F0F  07BA               	addwf	___flmul@prod+2,f
  9640  0F10                     u4262:
  9641  0F10  082F               	movf	??___flmul+3,w
  9642  0F11  1103               	clrz
  9643  0F12  1803               	skipnc
  9644  0F13  3E01               	addlw	1
  9645  0F14  1903               	skipnz
  9646  0F15  2F17               	goto	u4263
  9647  0F16  07BB               	addwf	___flmul@prod+3,f
  9648  0F17                     u4263:
  9649  0F17                     l2937:
  9650  0F17  3008               	movlw	8
  9651  0F18  00AC               	movwf	??___flmul
  9652  0F19                     u4275:
  9653  0F19  1003               	clrc
  9654  0F1A  0DB2               	rlf	___flmul@grs,f
  9655  0F1B  0DB3               	rlf	___flmul@grs+1,f
  9656  0F1C  0DB4               	rlf	___flmul@grs+2,f
  9657  0F1D  0DB5               	rlf	___flmul@grs+3,f
  9658  0F1E  0BAC               	decfsz	??___flmul,f
  9659  0F1F  2F19               	goto	u4275
  9660  0F20                     l2939:
  9661  0F20  0837               	movf	___flmul@bexp,w
  9662  0F21  0736               	addwf	___flmul@aexp,w
  9663  0F22  00AC               	movwf	??___flmul
  9664  0F23  01AD               	clrf	??___flmul+1
  9665  0F24  0DAD               	rlf	??___flmul+1,f
  9666  0F25  082C               	movf	??___flmul,w
  9667  0F26  3E82               	addlw	130
  9668  0F27  00BC               	movwf	___flmul@temp
  9669  0F28  082D               	movf	??___flmul+1,w
  9670  0F29  1803               	skipnc
  9671  0F2A  3E01               	addlw	1
  9672  0F2B  3EFF               	addlw	255
  9673  0F2C  00BD               	movwf	___flmul@temp+1
  9674  0F2D  2F4B               	goto	l2951
  9675  0F2E                     l2941:
  9676  0F2E  3001               	movlw	1
  9677  0F2F  00AC               	movwf	??___flmul
  9678  0F30                     u4285:
  9679  0F30  1003               	clrc
  9680  0F31  0DB8               	rlf	___flmul@prod,f
  9681  0F32  0DB9               	rlf	___flmul@prod+1,f
  9682  0F33  0DBA               	rlf	___flmul@prod+2,f
  9683  0F34  0DBB               	rlf	___flmul@prod+3,f
  9684  0F35  0BAC               	decfsz	??___flmul,f
  9685  0F36  2F30               	goto	u4285
  9686  0F37                     l2943:
  9687  0F37  1FB5               	btfss	___flmul@grs+3,7
  9688  0F38  2F3A               	goto	u4291
  9689  0F39  2F3B               	goto	u4290
  9690  0F3A                     u4291:
  9691  0F3A  2F3C               	goto	l2947
  9692  0F3B                     u4290:
  9693  0F3B                     l2945:
  9694  0F3B  1438               	bsf	___flmul@prod,0
  9695  0F3C                     l2947:
  9696  0F3C  3001               	movlw	1
  9697  0F3D  00AC               	movwf	??___flmul
  9698  0F3E                     u4305:
  9699  0F3E  1003               	clrc
  9700  0F3F  0DB2               	rlf	___flmul@grs,f
  9701  0F40  0DB3               	rlf	___flmul@grs+1,f
  9702  0F41  0DB4               	rlf	___flmul@grs+2,f
  9703  0F42  0DB5               	rlf	___flmul@grs+3,f
  9704  0F43  0BAC               	decfsz	??___flmul,f
  9705  0F44  2F3E               	goto	u4305
  9706  0F45                     l2949:
  9707  0F45  30FF               	movlw	255
  9708  0F46  07BC               	addwf	___flmul@temp,f
  9709  0F47  1803               	skipnc
  9710  0F48  0ABD               	incf	___flmul@temp+1,f
  9711  0F49  30FF               	movlw	255
  9712  0F4A  07BD               	addwf	___flmul@temp+1,f
  9713  0F4B                     l2951:
  9714  0F4B  1FBA               	btfss	___flmul@prod+2,7
  9715  0F4C  2F4E               	goto	u4311
  9716  0F4D  2F4F               	goto	u4310
  9717  0F4E                     u4311:
  9718  0F4E  2F2E               	goto	l2941
  9719  0F4F                     u4310:
  9720  0F4F                     l2953:
  9721  0F4F  01B6               	clrf	___flmul@aexp
  9722  0F50                     l2955:
  9723  0F50  1FB5               	btfss	___flmul@grs+3,7
  9724  0F51  2F53               	goto	u4321
  9725  0F52  2F54               	goto	u4320
  9726  0F53                     u4321:
  9727  0F53  2F70               	goto	l2963
  9728  0F54                     u4320:
  9729  0F54                     l2957:
  9730  0F54  30FF               	movlw	255
  9731  0F55  0532               	andwf	___flmul@grs,w
  9732  0F56  00AC               	movwf	??___flmul
  9733  0F57  30FF               	movlw	255
  9734  0F58  0533               	andwf	___flmul@grs+1,w
  9735  0F59  00AD               	movwf	??___flmul+1
  9736  0F5A  30FF               	movlw	255
  9737  0F5B  0534               	andwf	___flmul@grs+2,w
  9738  0F5C  00AE               	movwf	??___flmul+2
  9739  0F5D  307F               	movlw	127
  9740  0F5E  0535               	andwf	___flmul@grs+3,w
  9741  0F5F  00AF               	movwf	??___flmul+3
  9742  0F60  082F               	movf	??___flmul+3,w
  9743  0F61  042E               	iorwf	??___flmul+2,w
  9744  0F62  042D               	iorwf	??___flmul+1,w
  9745  0F63  042C               	iorwf	??___flmul,w
  9746  0F64  1903               	skipnz
  9747  0F65  2F67               	goto	u4331
  9748  0F66  2F68               	goto	u4330
  9749  0F67                     u4331:
  9750  0F67  2F6B               	goto	l833
  9751  0F68                     u4330:
  9752  0F68                     l2959:
  9753  0F68  01B6               	clrf	___flmul@aexp
  9754  0F69  0AB6               	incf	___flmul@aexp,f
  9755  0F6A  2F70               	goto	l2963
  9756  0F6B                     l833:
  9757  0F6B  1C38               	btfss	___flmul@prod,0
  9758  0F6C  2F6E               	goto	u4341
  9759  0F6D  2F6F               	goto	u4340
  9760  0F6E                     u4341:
  9761  0F6E  2F70               	goto	l2963
  9762  0F6F                     u4340:
  9763  0F6F  2F68               	goto	l2959
  9764  0F70                     l2963:
  9765  0F70  0836               	movf	___flmul@aexp,w
  9766  0F71  1903               	btfsc	3,2
  9767  0F72  2F74               	goto	u4351
  9768  0F73  2F75               	goto	u4350
  9769  0F74                     u4351:
  9770  0F74  2FA6               	goto	l2973
  9771  0F75                     u4350:
  9772  0F75                     l2965:
  9773  0F75  3001               	movlw	1
  9774  0F76  07B8               	addwf	___flmul@prod,f
  9775  0F77  3000               	movlw	0
  9776  0F78  1803               	skipnc
  9777  0F79  3001               	movlw	1
  9778  0F7A  07B9               	addwf	___flmul@prod+1,f
  9779  0F7B  3000               	movlw	0
  9780  0F7C  1803               	skipnc
  9781  0F7D  3001               	movlw	1
  9782  0F7E  07BA               	addwf	___flmul@prod+2,f
  9783  0F7F  3000               	movlw	0
  9784  0F80  1803               	skipnc
  9785  0F81  3001               	movlw	1
  9786  0F82  07BB               	addwf	___flmul@prod+3,f
  9787  0F83                     l2967:
  9788  0F83  1C3B               	btfss	___flmul@prod+3,0
  9789  0F84  2F86               	goto	u4361
  9790  0F85  2F87               	goto	u4360
  9791  0F86                     u4361:
  9792  0F86  2FA6               	goto	l2973
  9793  0F87                     u4360:
  9794  0F87                     l2969:
  9795  0F87  0838               	movf	___flmul@prod,w
  9796  0F88  00AC               	movwf	??___flmul
  9797  0F89  0839               	movf	___flmul@prod+1,w
  9798  0F8A  00AD               	movwf	??___flmul+1
  9799  0F8B  083A               	movf	___flmul@prod+2,w
  9800  0F8C  00AE               	movwf	??___flmul+2
  9801  0F8D  083B               	movf	___flmul@prod+3,w
  9802  0F8E  00AF               	movwf	??___flmul+3
  9803  0F8F  3001               	movlw	1
  9804  0F90  00B0               	movwf	??___flmul+4
  9805  0F91                     u4375:
  9806  0F91  0D2F               	rlf	??___flmul+3,w
  9807  0F92  0CAF               	rrf	??___flmul+3,f
  9808  0F93  0CAE               	rrf	??___flmul+2,f
  9809  0F94  0CAD               	rrf	??___flmul+1,f
  9810  0F95  0CAC               	rrf	??___flmul,f
  9811  0F96                     u4370:
  9812  0F96  0BB0               	decfsz	??___flmul+4,f
  9813  0F97  2F91               	goto	u4375
  9814  0F98  082F               	movf	??___flmul+3,w
  9815  0F99  00BB               	movwf	___flmul@prod+3
  9816  0F9A  082E               	movf	??___flmul+2,w
  9817  0F9B  00BA               	movwf	___flmul@prod+2
  9818  0F9C  082D               	movf	??___flmul+1,w
  9819  0F9D  00B9               	movwf	___flmul@prod+1
  9820  0F9E  082C               	movf	??___flmul,w
  9821  0F9F  00B8               	movwf	___flmul@prod
  9822  0FA0                     l2971:
  9823  0FA0  3001               	movlw	1
  9824  0FA1  07BC               	addwf	___flmul@temp,f
  9825  0FA2  1803               	skipnc
  9826  0FA3  0ABD               	incf	___flmul@temp+1,f
  9827  0FA4  3000               	movlw	0
  9828  0FA5  07BD               	addwf	___flmul@temp+1,f
  9829  0FA6                     l2973:
  9830  0FA6  083D               	movf	___flmul@temp+1,w
  9831  0FA7  3A80               	xorlw	128
  9832  0FA8  00FF               	movwf	btemp+1
  9833  0FA9  3080               	movlw	128
  9834  0FAA  027F               	subwf	btemp+1,w
  9835  0FAB  1D03               	skipz
  9836  0FAC  2FAF               	goto	u4385
  9837  0FAD  30FF               	movlw	255
  9838  0FAE  023C               	subwf	___flmul@temp,w
  9839  0FAF                     u4385:
  9840  0FAF  1C03               	skipc
  9841  0FB0  2FB2               	goto	u4381
  9842  0FB1  2FB3               	goto	u4380
  9843  0FB2                     u4381:
  9844  0FB2  2FBE               	goto	l2977
  9845  0FB3                     u4380:
  9846  0FB3                     l2975:
  9847  0FB3  307F               	movlw	127
  9848  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  9849  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  9850  0FB6  00BB               	movwf	___flmul@prod+3
  9851  0FB7  3080               	movlw	128
  9852  0FB8  00BA               	movwf	___flmul@prod+2
  9853  0FB9  3000               	movlw	0
  9854  0FBA  00B9               	movwf	___flmul@prod+1
  9855  0FBB  3000               	movlw	0
  9856  0FBC  00B8               	movwf	___flmul@prod
  9857  0FBD  2FF3               	goto	l839
  9858  0FBE                     l2977:
  9859  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  9860  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  9861  0FC0  083D               	movf	___flmul@temp+1,w
  9862  0FC1  3A80               	xorlw	128
  9863  0FC2  00FF               	movwf	btemp+1
  9864  0FC3  3080               	movlw	128
  9865  0FC4  027F               	subwf	btemp+1,w
  9866  0FC5  1D03               	skipz
  9867  0FC6  2FC9               	goto	u4395
  9868  0FC7  3001               	movlw	1
  9869  0FC8  023C               	subwf	___flmul@temp,w
  9870  0FC9                     u4395:
  9871  0FC9  1803               	skipnc
  9872  0FCA  2FCC               	goto	u4391
  9873  0FCB  2FCD               	goto	u4390
  9874  0FCC                     u4391:
  9875  0FCC  2FD9               	goto	l2983
  9876  0FCD                     u4390:
  9877  0FCD                     l2979:
  9878  0FCD  3000               	movlw	0
  9879  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  9880  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  9881  0FD0  00BB               	movwf	___flmul@prod+3
  9882  0FD1  3000               	movlw	0
  9883  0FD2  00BA               	movwf	___flmul@prod+2
  9884  0FD3  3000               	movlw	0
  9885  0FD4  00B9               	movwf	___flmul@prod+1
  9886  0FD5  3000               	movlw	0
  9887  0FD6  00B8               	movwf	___flmul@prod
  9888  0FD7                     l2981:
  9889  0FD7  01B1               	clrf	___flmul@sign
  9890  0FD8  2FF3               	goto	l839
  9891  0FD9                     l2983:
  9892  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  9893  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  9894  0FDB  083C               	movf	___flmul@temp,w
  9895  0FDC  00AC               	movwf	??___flmul
  9896  0FDD  082C               	movf	??___flmul,w
  9897  0FDE  00B7               	movwf	___flmul@bexp
  9898  0FDF  30FF               	movlw	255
  9899  0FE0  05B8               	andwf	___flmul@prod,f
  9900  0FE1  30FF               	movlw	255
  9901  0FE2  05B9               	andwf	___flmul@prod+1,f
  9902  0FE3  307F               	movlw	127
  9903  0FE4  05BA               	andwf	___flmul@prod+2,f
  9904  0FE5  3000               	movlw	0
  9905  0FE6  05BB               	andwf	___flmul@prod+3,f
  9906  0FE7                     l2985:
  9907  0FE7  1C37               	btfss	___flmul@bexp,0
  9908  0FE8  2FEA               	goto	u4401
  9909  0FE9  2FEB               	goto	u4400
  9910  0FEA                     u4401:
  9911  0FEA  2FEC               	goto	l2989
  9912  0FEB                     u4400:
  9913  0FEB                     l2987:
  9914  0FEB  17BA               	bsf	___flmul@prod+2,7
  9915  0FEC                     l2989:
  9916  0FEC  0837               	movf	___flmul@bexp,w
  9917  0FED  00AC               	movwf	??___flmul
  9918  0FEE  1003               	clrc
  9919  0FEF  0C2C               	rrf	??___flmul,w
  9920  0FF0  00AD               	movwf	??___flmul+1
  9921  0FF1  082D               	movf	??___flmul+1,w
  9922  0FF2  00BB               	movwf	___flmul@prod+3
  9923  0FF3                     l839:
  9924  0FF3  0831               	movf	___flmul@sign,w
  9925  0FF4  00AC               	movwf	??___flmul
  9926  0FF5  082C               	movf	??___flmul,w
  9927  0FF6  04BB               	iorwf	___flmul@prod+3,f
  9928  0FF7                     l2991:
  9929  0FF7  083B               	movf	___flmul@prod+3,w
  9930  0FF8  00A7               	movwf	?___flmul+3
  9931  0FF9  083A               	movf	___flmul@prod+2,w
  9932  0FFA  00A6               	movwf	?___flmul+2
  9933  0FFB  0839               	movf	___flmul@prod+1,w
  9934  0FFC  00A5               	movwf	?___flmul+1
  9935  0FFD  0838               	movf	___flmul@prod,w
  9936  0FFE  00A4               	movwf	?___flmul
  9937  0FFF                     l827:
  9938  0FFF  0008               	return
  9939  1000                     __end_of___flmul:
  9940                           
  9941                           	psect	text23
  9942  1ADB                     __ptext23:	
  9943 ;; *************** function __Umul8_16 *****************
  9944 ;; Defined at:
  9945 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  multiplier      1    wreg     unsigned char 
  9948 ;;  multiplicand    1    0[COMMON] unsigned char 
  9949 ;; Auto vars:     Size  Location     Type
  9950 ;;  multiplier      1    8[COMMON] unsigned char 
  9951 ;;  word_mpld       2    6[COMMON] unsigned int 
  9952 ;;  product         2    4[COMMON] unsigned int 
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  2    0[COMMON] unsigned int 
  9955 ;; Registers used:
  9956 ;;		wreg, status,2, status,0
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9962 ;;      Params:         2       0       0       0       0
  9963 ;;      Locals:         5       0       0       0       0
  9964 ;;      Temps:          2       0       0       0       0
  9965 ;;      Totals:         9       0       0       0       0
  9966 ;;Total ram usage:        9 bytes
  9967 ;; Hardware stack levels used:    1
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		___flmul
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           
  9976                           ;psect for function __Umul8_16
  9977  1ADB                     __Umul8_16:
  9978                           
  9979                           ;incstack = 0
  9980                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9981                           ;__Umul8_16@multiplier stored from wreg
  9982  1ADB  00F8               	movwf	__Umul8_16@multiplier
  9983  1ADC                     l2499:
  9984  1ADC  01F4               	clrf	__Umul8_16@product
  9985  1ADD  01F5               	clrf	__Umul8_16@product+1
  9986  1ADE                     l2501:
  9987  1ADE  0870               	movf	__Umul8_16@multiplicand,w
  9988  1ADF  00F2               	movwf	??__Umul8_16
  9989  1AE0  01F3               	clrf	??__Umul8_16+1
  9990  1AE1  0872               	movf	??__Umul8_16,w
  9991  1AE2  00F6               	movwf	__Umul8_16@word_mpld
  9992  1AE3  0873               	movf	??__Umul8_16+1,w
  9993  1AE4  00F7               	movwf	__Umul8_16@word_mpld+1
  9994  1AE5                     l2503:
  9995  1AE5  1C78               	btfss	__Umul8_16@multiplier,0
  9996  1AE6  2AE8               	goto	u3151
  9997  1AE7  2AE9               	goto	u3150
  9998  1AE8                     u3151:
  9999  1AE8  2AEF               	goto	l846
 10000  1AE9                     u3150:
 10001  1AE9                     l2505:
 10002  1AE9  0876               	movf	__Umul8_16@word_mpld,w
 10003  1AEA  07F4               	addwf	__Umul8_16@product,f
 10004  1AEB  1803               	skipnc
 10005  1AEC  0AF5               	incf	__Umul8_16@product+1,f
 10006  1AED  0877               	movf	__Umul8_16@word_mpld+1,w
 10007  1AEE  07F5               	addwf	__Umul8_16@product+1,f
 10008  1AEF                     l846:
 10009  1AEF  3001               	movlw	1
 10010  1AF0                     u3165:
 10011  1AF0  1003               	clrc
 10012  1AF1  0DF6               	rlf	__Umul8_16@word_mpld,f
 10013  1AF2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10014  1AF3  3EFF               	addlw	-1
 10015  1AF4  1D03               	skipz
 10016  1AF5  2AF0               	goto	u3165
 10017  1AF6  1003               	clrc
 10018  1AF7  0CF8               	rrf	__Umul8_16@multiplier,f
 10019  1AF8                     l2507:
 10020  1AF8  0878               	movf	__Umul8_16@multiplier,w
 10021  1AF9  1D03               	btfss	3,2
 10022  1AFA  2AFC               	goto	u3171
 10023  1AFB  2AFD               	goto	u3170
 10024  1AFC                     u3171:
 10025  1AFC  2AE5               	goto	l2503
 10026  1AFD                     u3170:
 10027  1AFD                     l2509:
 10028  1AFD  0875               	movf	__Umul8_16@product+1,w
 10029  1AFE  00F1               	movwf	?__Umul8_16+1
 10030  1AFF  0874               	movf	__Umul8_16@product,w
 10031  1B00  00F0               	movwf	?__Umul8_16
 10032  1B01                     l848:
 10033  1B01  0008               	return
 10034  1B02                     __end_of__Umul8_16:
 10035                           
 10036                           	psect	text24
 10037  1190                     __ptext24:	
 10038 ;; *************** function ___fldiv *****************
 10039 ;; Defined at:
 10040 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  a               4   30[BANK0 ] unsigned int 
 10043 ;;  b               4   34[BANK0 ] unsigned int 
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;  grs             4   50[BANK0 ] unsigned long 
 10046 ;;  rem             4   43[BANK0 ] unsigned long 
 10047 ;;  new_exp         2   48[BANK0 ] int 
 10048 ;;  aexp            1   55[BANK0 ] unsigned char 
 10049 ;;  bexp            1   54[BANK0 ] unsigned char 
 10050 ;;  sign            1   47[BANK0 ] unsigned char 
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  4   30[BANK0 ] unsigned char 
 10053 ;; Registers used:
 10054 ;;		wreg, status,2, status,0, btemp+1
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10060 ;;      Params:         0       8       0       0       0
 10061 ;;      Locals:         0      13       0       0       0
 10062 ;;      Temps:          0       5       0       0       0
 10063 ;;      Totals:         0      26       0       0       0
 10064 ;;Total ram usage:       26 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; This function calls:
 10067 ;;		Nothing
 10068 ;; This function is called by:
 10069 ;;		_mapear
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           
 10074                           ;psect for function ___fldiv
 10075  1190                     ___fldiv:
 10076  1190                     l3333:	
 10077                           ;incstack = 0
 10078                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10079                           
 10080  1190  1283               	bcf	3,5	;RP0=0, select bank0
 10081  1191  1303               	bcf	3,6	;RP1=0, select bank0
 10082  1192  0845               	movf	___fldiv@b+3,w
 10083  1193  3980               	andlw	128
 10084  1194  00C6               	movwf	??___fldiv
 10085  1195  0846               	movf	??___fldiv,w
 10086  1196  00CF               	movwf	___fldiv@sign
 10087  1197                     l3335:
 10088  1197  0845               	movf	___fldiv@b+3,w
 10089  1198  00C6               	movwf	??___fldiv
 10090  1199  0746               	addwf	??___fldiv,w
 10091  119A  00C7               	movwf	??___fldiv+1
 10092  119B  0847               	movf	??___fldiv+1,w
 10093  119C  00D6               	movwf	___fldiv@bexp
 10094  119D                     l3337:
 10095  119D  1FC4               	btfss	___fldiv@b+2,7
 10096  119E  29A0               	goto	u5341
 10097  119F  29A1               	goto	u5340
 10098  11A0                     u5341:
 10099  11A0  29A2               	goto	l3341
 10100  11A1                     u5340:
 10101  11A1                     l3339:
 10102  11A1  1456               	bsf	___fldiv@bexp,0
 10103  11A2                     l3341:
 10104  11A2  0856               	movf	___fldiv@bexp,w
 10105  11A3  1903               	btfsc	3,2
 10106  11A4  29A6               	goto	u5351
 10107  11A5  29A7               	goto	u5350
 10108  11A6                     u5351:
 10109  11A6  29B7               	goto	l3351
 10110  11A7                     u5350:
 10111  11A7                     l3343:
 10112  11A7  0A56               	incf	___fldiv@bexp,w
 10113  11A8  1D03               	btfss	3,2
 10114  11A9  29AB               	goto	u5361
 10115  11AA  29AC               	goto	u5360
 10116  11AB                     u5361:
 10117  11AB  29B4               	goto	l3347
 10118  11AC                     u5360:
 10119  11AC                     l3345:
 10120  11AC  3000               	movlw	0
 10121  11AD  00C5               	movwf	___fldiv@b+3
 10122  11AE  3000               	movlw	0
 10123  11AF  00C4               	movwf	___fldiv@b+2
 10124  11B0  3000               	movlw	0
 10125  11B1  00C3               	movwf	___fldiv@b+1
 10126  11B2  3000               	movlw	0
 10127  11B3  00C2               	movwf	___fldiv@b
 10128  11B4                     l3347:
 10129  11B4  17C4               	bsf	___fldiv@b+2,7
 10130  11B5                     l3349:
 10131  11B5  01C5               	clrf	___fldiv@b+3
 10132  11B6  29BF               	goto	l3353
 10133  11B7                     l3351:
 10134  11B7  3000               	movlw	0
 10135  11B8  00C5               	movwf	___fldiv@b+3
 10136  11B9  3000               	movlw	0
 10137  11BA  00C4               	movwf	___fldiv@b+2
 10138  11BB  3000               	movlw	0
 10139  11BC  00C3               	movwf	___fldiv@b+1
 10140  11BD  3000               	movlw	0
 10141  11BE  00C2               	movwf	___fldiv@b
 10142  11BF                     l3353:
 10143  11BF  0841               	movf	___fldiv@a+3,w
 10144  11C0  3980               	andlw	128
 10145  11C1  00C6               	movwf	??___fldiv
 10146  11C2  0846               	movf	??___fldiv,w
 10147  11C3  06CF               	xorwf	___fldiv@sign,f
 10148  11C4                     l3355:
 10149  11C4  0841               	movf	___fldiv@a+3,w
 10150  11C5  00C6               	movwf	??___fldiv
 10151  11C6  0746               	addwf	??___fldiv,w
 10152  11C7  00C7               	movwf	??___fldiv+1
 10153  11C8  0847               	movf	??___fldiv+1,w
 10154  11C9  00D7               	movwf	___fldiv@aexp
 10155  11CA                     l3357:
 10156  11CA  1FC0               	btfss	___fldiv@a+2,7
 10157  11CB  29CD               	goto	u5371
 10158  11CC  29CE               	goto	u5370
 10159  11CD                     u5371:
 10160  11CD  29CF               	goto	l3361
 10161  11CE                     u5370:
 10162  11CE                     l3359:
 10163  11CE  1457               	bsf	___fldiv@aexp,0
 10164  11CF                     l3361:
 10165  11CF  0857               	movf	___fldiv@aexp,w
 10166  11D0  1903               	btfsc	3,2
 10167  11D1  29D3               	goto	u5381
 10168  11D2  29D4               	goto	u5380
 10169  11D3                     u5381:
 10170  11D3  29E4               	goto	l3371
 10171  11D4                     u5380:
 10172  11D4                     l3363:
 10173  11D4  0A57               	incf	___fldiv@aexp,w
 10174  11D5  1D03               	btfss	3,2
 10175  11D6  29D8               	goto	u5391
 10176  11D7  29D9               	goto	u5390
 10177  11D8                     u5391:
 10178  11D8  29E1               	goto	l3367
 10179  11D9                     u5390:
 10180  11D9                     l3365:
 10181  11D9  3000               	movlw	0
 10182  11DA  00C1               	movwf	___fldiv@a+3
 10183  11DB  3000               	movlw	0
 10184  11DC  00C0               	movwf	___fldiv@a+2
 10185  11DD  3000               	movlw	0
 10186  11DE  00BF               	movwf	___fldiv@a+1
 10187  11DF  3000               	movlw	0
 10188  11E0  00BE               	movwf	___fldiv@a
 10189  11E1                     l3367:
 10190  11E1  17C0               	bsf	___fldiv@a+2,7
 10191  11E2                     l3369:
 10192  11E2  01C1               	clrf	___fldiv@a+3
 10193  11E3  29EC               	goto	l787
 10194  11E4                     l3371:
 10195  11E4  3000               	movlw	0
 10196  11E5  00C1               	movwf	___fldiv@a+3
 10197  11E6  3000               	movlw	0
 10198  11E7  00C0               	movwf	___fldiv@a+2
 10199  11E8  3000               	movlw	0
 10200  11E9  00BF               	movwf	___fldiv@a+1
 10201  11EA  3000               	movlw	0
 10202  11EB  00BE               	movwf	___fldiv@a
 10203  11EC                     l787:
 10204  11EC  0841               	movf	___fldiv@a+3,w
 10205  11ED  0440               	iorwf	___fldiv@a+2,w
 10206  11EE  043F               	iorwf	___fldiv@a+1,w
 10207  11EF  043E               	iorwf	___fldiv@a,w
 10208  11F0  1D03               	skipz
 10209  11F1  29F3               	goto	u5401
 10210  11F2  29F4               	goto	u5400
 10211  11F3                     u5401:
 10212  11F3  2A0D               	goto	l3381
 10213  11F4                     u5400:
 10214  11F4                     l3373:
 10215  11F4  3000               	movlw	0
 10216  11F5  00C5               	movwf	___fldiv@b+3
 10217  11F6  3000               	movlw	0
 10218  11F7  00C4               	movwf	___fldiv@b+2
 10219  11F8  3000               	movlw	0
 10220  11F9  00C3               	movwf	___fldiv@b+1
 10221  11FA  3000               	movlw	0
 10222  11FB  00C2               	movwf	___fldiv@b
 10223  11FC  3080               	movlw	128
 10224  11FD  04C4               	iorwf	___fldiv@b+2,f
 10225  11FE  307F               	movlw	127
 10226  11FF  04C5               	iorwf	___fldiv@b+3,f
 10227  1200                     l3375:
 10228  1200  084F               	movf	___fldiv@sign,w
 10229  1201  00C6               	movwf	??___fldiv
 10230  1202  0846               	movf	??___fldiv,w
 10231  1203  04C5               	iorwf	___fldiv@b+3,f
 10232  1204                     l3377:
 10233  1204  0845               	movf	___fldiv@b+3,w
 10234  1205  00C1               	movwf	?___fldiv+3
 10235  1206  0844               	movf	___fldiv@b+2,w
 10236  1207  00C0               	movwf	?___fldiv+2
 10237  1208  0843               	movf	___fldiv@b+1,w
 10238  1209  00BF               	movwf	?___fldiv+1
 10239  120A  0842               	movf	___fldiv@b,w
 10240  120B  00BE               	movwf	?___fldiv
 10241  120C  2B6C               	goto	l789
 10242  120D                     l3381:
 10243  120D  0856               	movf	___fldiv@bexp,w
 10244  120E  1D03               	btfss	3,2
 10245  120F  2A11               	goto	u5411
 10246  1210  2A12               	goto	u5410
 10247  1211                     u5411:
 10248  1211  2A1B               	goto	l3387
 10249  1212                     u5410:
 10250  1212                     l3383:
 10251  1212  3000               	movlw	0
 10252  1213  00C1               	movwf	?___fldiv+3
 10253  1214  3000               	movlw	0
 10254  1215  00C0               	movwf	?___fldiv+2
 10255  1216  3000               	movlw	0
 10256  1217  00BF               	movwf	?___fldiv+1
 10257  1218  3000               	movlw	0
 10258  1219  00BE               	movwf	?___fldiv
 10259  121A  2B6C               	goto	l789
 10260  121B                     l3387:
 10261  121B  0856               	movf	___fldiv@bexp,w
 10262  121C  00C6               	movwf	??___fldiv
 10263  121D  01C7               	clrf	??___fldiv+1
 10264  121E  0847               	movf	??___fldiv+1,w
 10265  121F  00C9               	movwf	??___fldiv+3
 10266  1220  0857               	movf	___fldiv@aexp,w
 10267  1221  0246               	subwf	??___fldiv,w
 10268  1222  00C8               	movwf	??___fldiv+2
 10269  1223  1C03               	skipc
 10270  1224  03C9               	decf	??___fldiv+3,f
 10271  1225  0848               	movf	??___fldiv+2,w
 10272  1226  3E7F               	addlw	127
 10273  1227  00D0               	movwf	___fldiv@new_exp
 10274  1228  0849               	movf	??___fldiv+3,w
 10275  1229  1803               	skipnc
 10276  122A  3E01               	addlw	1
 10277  122B  3E00               	addlw	0
 10278  122C  00D1               	movwf	___fldiv@new_exp+1
 10279  122D                     l3389:
 10280  122D  0845               	movf	___fldiv@b+3,w
 10281  122E  00CE               	movwf	___fldiv@rem+3
 10282  122F  0844               	movf	___fldiv@b+2,w
 10283  1230  00CD               	movwf	___fldiv@rem+2
 10284  1231  0843               	movf	___fldiv@b+1,w
 10285  1232  00CC               	movwf	___fldiv@rem+1
 10286  1233  0842               	movf	___fldiv@b,w
 10287  1234  00CB               	movwf	___fldiv@rem
 10288  1235                     l3391:
 10289  1235  3000               	movlw	0
 10290  1236  00C5               	movwf	___fldiv@b+3
 10291  1237  3000               	movlw	0
 10292  1238  00C4               	movwf	___fldiv@b+2
 10293  1239  3000               	movlw	0
 10294  123A  00C3               	movwf	___fldiv@b+1
 10295  123B  3000               	movlw	0
 10296  123C  00C2               	movwf	___fldiv@b
 10297  123D                     l3393:
 10298  123D  3000               	movlw	0
 10299  123E  00D5               	movwf	___fldiv@grs+3
 10300  123F  3000               	movlw	0
 10301  1240  00D4               	movwf	___fldiv@grs+2
 10302  1241  3000               	movlw	0
 10303  1242  00D3               	movwf	___fldiv@grs+1
 10304  1243  3000               	movlw	0
 10305  1244  00D2               	movwf	___fldiv@grs
 10306  1245                     l3395:
 10307  1245  01D7               	clrf	___fldiv@aexp
 10308  1246  2A91               	goto	l3415
 10309  1247                     l3397:
 10310  1247  0857               	movf	___fldiv@aexp,w
 10311  1248  1903               	btfsc	3,2
 10312  1249  2A4B               	goto	u5421
 10313  124A  2A4C               	goto	u5420
 10314  124B                     u5421:
 10315  124B  2A6C               	goto	l3407
 10316  124C                     u5420:
 10317  124C                     l3399:
 10318  124C  3001               	movlw	1
 10319  124D  00C6               	movwf	??___fldiv
 10320  124E                     u5435:
 10321  124E  1003               	clrc
 10322  124F  0DCB               	rlf	___fldiv@rem,f
 10323  1250  0DCC               	rlf	___fldiv@rem+1,f
 10324  1251  0DCD               	rlf	___fldiv@rem+2,f
 10325  1252  0DCE               	rlf	___fldiv@rem+3,f
 10326  1253  0BC6               	decfsz	??___fldiv,f
 10327  1254  2A4E               	goto	u5435
 10328  1255  3001               	movlw	1
 10329  1256  00C6               	movwf	??___fldiv
 10330  1257                     u5445:
 10331  1257  1003               	clrc
 10332  1258  0DC2               	rlf	___fldiv@b,f
 10333  1259  0DC3               	rlf	___fldiv@b+1,f
 10334  125A  0DC4               	rlf	___fldiv@b+2,f
 10335  125B  0DC5               	rlf	___fldiv@b+3,f
 10336  125C  0BC6               	decfsz	??___fldiv,f
 10337  125D  2A57               	goto	u5445
 10338  125E                     l3401:
 10339  125E  1FD5               	btfss	___fldiv@grs+3,7
 10340  125F  2A61               	goto	u5451
 10341  1260  2A62               	goto	u5450
 10342  1261                     u5451:
 10343  1261  2A63               	goto	l3405
 10344  1262                     u5450:
 10345  1262                     l3403:
 10346  1262  1442               	bsf	___fldiv@b,0
 10347  1263                     l3405:
 10348  1263  3001               	movlw	1
 10349  1264  00C6               	movwf	??___fldiv
 10350  1265                     u5465:
 10351  1265  1003               	clrc
 10352  1266  0DD2               	rlf	___fldiv@grs,f
 10353  1267  0DD3               	rlf	___fldiv@grs+1,f
 10354  1268  0DD4               	rlf	___fldiv@grs+2,f
 10355  1269  0DD5               	rlf	___fldiv@grs+3,f
 10356  126A  0BC6               	decfsz	??___fldiv,f
 10357  126B  2A65               	goto	u5465
 10358  126C                     l3407:
 10359  126C  0841               	movf	___fldiv@a+3,w
 10360  126D  024E               	subwf	___fldiv@rem+3,w
 10361  126E  1D03               	skipz
 10362  126F  2A7A               	goto	u5475
 10363  1270  0840               	movf	___fldiv@a+2,w
 10364  1271  024D               	subwf	___fldiv@rem+2,w
 10365  1272  1D03               	skipz
 10366  1273  2A7A               	goto	u5475
 10367  1274  083F               	movf	___fldiv@a+1,w
 10368  1275  024C               	subwf	___fldiv@rem+1,w
 10369  1276  1D03               	skipz
 10370  1277  2A7A               	goto	u5475
 10371  1278  083E               	movf	___fldiv@a,w
 10372  1279  024B               	subwf	___fldiv@rem,w
 10373  127A                     u5475:
 10374  127A  1C03               	skipc
 10375  127B  2A7D               	goto	u5471
 10376  127C  2A7E               	goto	u5470
 10377  127D                     u5471:
 10378  127D  2A8D               	goto	l3413
 10379  127E                     u5470:
 10380  127E                     l3409:
 10381  127E  1755               	bsf	___fldiv@grs+3,6
 10382  127F                     l3411:
 10383  127F  083E               	movf	___fldiv@a,w
 10384  1280  02CB               	subwf	___fldiv@rem,f
 10385  1281  083F               	movf	___fldiv@a+1,w
 10386  1282  1C03               	skipc
 10387  1283  0F3F               	incfsz	___fldiv@a+1,w
 10388  1284  02CC               	subwf	___fldiv@rem+1,f
 10389  1285  0840               	movf	___fldiv@a+2,w
 10390  1286  1C03               	skipc
 10391  1287  0F40               	incfsz	___fldiv@a+2,w
 10392  1288  02CD               	subwf	___fldiv@rem+2,f
 10393  1289  0841               	movf	___fldiv@a+3,w
 10394  128A  1C03               	skipc
 10395  128B  0F41               	incfsz	___fldiv@a+3,w
 10396  128C  02CE               	subwf	___fldiv@rem+3,f
 10397  128D                     l3413:
 10398  128D  3001               	movlw	1
 10399  128E  00C6               	movwf	??___fldiv
 10400  128F  0846               	movf	??___fldiv,w
 10401  1290  07D7               	addwf	___fldiv@aexp,f
 10402  1291                     l3415:
 10403  1291  301A               	movlw	26
 10404  1292  0257               	subwf	___fldiv@aexp,w
 10405  1293  1C03               	skipc
 10406  1294  2A96               	goto	u5481
 10407  1295  2A97               	goto	u5480
 10408  1296                     u5481:
 10409  1296  2A47               	goto	l3397
 10410  1297                     u5480:
 10411  1297                     l3417:
 10412  1297  084E               	movf	___fldiv@rem+3,w
 10413  1298  044D               	iorwf	___fldiv@rem+2,w
 10414  1299  044C               	iorwf	___fldiv@rem+1,w
 10415  129A  044B               	iorwf	___fldiv@rem,w
 10416  129B  1903               	skipnz
 10417  129C  2A9E               	goto	u5491
 10418  129D  2A9F               	goto	u5490
 10419  129E                     u5491:
 10420  129E  2ABE               	goto	l3431
 10421  129F                     u5490:
 10422  129F                     l3419:
 10423  129F  1452               	bsf	___fldiv@grs,0
 10424  12A0  2ABE               	goto	l3431
 10425  12A1                     l3421:
 10426  12A1  3001               	movlw	1
 10427  12A2  00C6               	movwf	??___fldiv
 10428  12A3                     u5505:
 10429  12A3  1003               	clrc
 10430  12A4  0DC2               	rlf	___fldiv@b,f
 10431  12A5  0DC3               	rlf	___fldiv@b+1,f
 10432  12A6  0DC4               	rlf	___fldiv@b+2,f
 10433  12A7  0DC5               	rlf	___fldiv@b+3,f
 10434  12A8  0BC6               	decfsz	??___fldiv,f
 10435  12A9  2AA3               	goto	u5505
 10436  12AA                     l3423:
 10437  12AA  1FD5               	btfss	___fldiv@grs+3,7
 10438  12AB  2AAD               	goto	u5511
 10439  12AC  2AAE               	goto	u5510
 10440  12AD                     u5511:
 10441  12AD  2AAF               	goto	l3427
 10442  12AE                     u5510:
 10443  12AE                     l3425:
 10444  12AE  1442               	bsf	___fldiv@b,0
 10445  12AF                     l3427:
 10446  12AF  3001               	movlw	1
 10447  12B0  00C6               	movwf	??___fldiv
 10448  12B1                     u5525:
 10449  12B1  1003               	clrc
 10450  12B2  0DD2               	rlf	___fldiv@grs,f
 10451  12B3  0DD3               	rlf	___fldiv@grs+1,f
 10452  12B4  0DD4               	rlf	___fldiv@grs+2,f
 10453  12B5  0DD5               	rlf	___fldiv@grs+3,f
 10454  12B6  0BC6               	decfsz	??___fldiv,f
 10455  12B7  2AB1               	goto	u5525
 10456  12B8                     l3429:
 10457  12B8  30FF               	movlw	255
 10458  12B9  07D0               	addwf	___fldiv@new_exp,f
 10459  12BA  1803               	skipnc
 10460  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 10461  12BC  30FF               	movlw	255
 10462  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 10463  12BE                     l3431:
 10464  12BE  1FC4               	btfss	___fldiv@b+2,7
 10465  12BF  2AC1               	goto	u5531
 10466  12C0  2AC2               	goto	u5530
 10467  12C1                     u5531:
 10468  12C1  2AA1               	goto	l3421
 10469  12C2                     u5530:
 10470  12C2                     l3433:
 10471  12C2  01D7               	clrf	___fldiv@aexp
 10472  12C3                     l3435:
 10473  12C3  1FD5               	btfss	___fldiv@grs+3,7
 10474  12C4  2AC6               	goto	u5541
 10475  12C5  2AC7               	goto	u5540
 10476  12C6                     u5541:
 10477  12C6  2AE3               	goto	l3443
 10478  12C7                     u5540:
 10479  12C7                     l3437:
 10480  12C7  30FF               	movlw	255
 10481  12C8  0552               	andwf	___fldiv@grs,w
 10482  12C9  00C6               	movwf	??___fldiv
 10483  12CA  30FF               	movlw	255
 10484  12CB  0553               	andwf	___fldiv@grs+1,w
 10485  12CC  00C7               	movwf	??___fldiv+1
 10486  12CD  30FF               	movlw	255
 10487  12CE  0554               	andwf	___fldiv@grs+2,w
 10488  12CF  00C8               	movwf	??___fldiv+2
 10489  12D0  307F               	movlw	127
 10490  12D1  0555               	andwf	___fldiv@grs+3,w
 10491  12D2  00C9               	movwf	??___fldiv+3
 10492  12D3  0849               	movf	??___fldiv+3,w
 10493  12D4  0448               	iorwf	??___fldiv+2,w
 10494  12D5  0447               	iorwf	??___fldiv+1,w
 10495  12D6  0446               	iorwf	??___fldiv,w
 10496  12D7  1903               	skipnz
 10497  12D8  2ADA               	goto	u5551
 10498  12D9  2ADB               	goto	u5550
 10499  12DA                     u5551:
 10500  12DA  2ADE               	goto	l803
 10501  12DB                     u5550:
 10502  12DB                     l3439:
 10503  12DB  01D7               	clrf	___fldiv@aexp
 10504  12DC  0AD7               	incf	___fldiv@aexp,f
 10505  12DD  2AE3               	goto	l3443
 10506  12DE                     l803:
 10507  12DE  1C42               	btfss	___fldiv@b,0
 10508  12DF  2AE1               	goto	u5561
 10509  12E0  2AE2               	goto	u5560
 10510  12E1                     u5561:
 10511  12E1  2AE3               	goto	l3443
 10512  12E2                     u5560:
 10513  12E2  2ADB               	goto	l3439
 10514  12E3                     l3443:
 10515  12E3  0857               	movf	___fldiv@aexp,w
 10516  12E4  1903               	btfsc	3,2
 10517  12E5  2AE7               	goto	u5571
 10518  12E6  2AE8               	goto	u5570
 10519  12E7                     u5571:
 10520  12E7  2B19               	goto	l3453
 10521  12E8                     u5570:
 10522  12E8                     l3445:
 10523  12E8  3001               	movlw	1
 10524  12E9  07C2               	addwf	___fldiv@b,f
 10525  12EA  3000               	movlw	0
 10526  12EB  1803               	skipnc
 10527  12EC  3001               	movlw	1
 10528  12ED  07C3               	addwf	___fldiv@b+1,f
 10529  12EE  3000               	movlw	0
 10530  12EF  1803               	skipnc
 10531  12F0  3001               	movlw	1
 10532  12F1  07C4               	addwf	___fldiv@b+2,f
 10533  12F2  3000               	movlw	0
 10534  12F3  1803               	skipnc
 10535  12F4  3001               	movlw	1
 10536  12F5  07C5               	addwf	___fldiv@b+3,f
 10537  12F6                     l3447:
 10538  12F6  1C45               	btfss	___fldiv@b+3,0
 10539  12F7  2AF9               	goto	u5581
 10540  12F8  2AFA               	goto	u5580
 10541  12F9                     u5581:
 10542  12F9  2B19               	goto	l3453
 10543  12FA                     u5580:
 10544  12FA                     l3449:
 10545  12FA  0842               	movf	___fldiv@b,w
 10546  12FB  00C6               	movwf	??___fldiv
 10547  12FC  0843               	movf	___fldiv@b+1,w
 10548  12FD  00C7               	movwf	??___fldiv+1
 10549  12FE  0844               	movf	___fldiv@b+2,w
 10550  12FF  00C8               	movwf	??___fldiv+2
 10551  1300  0845               	movf	___fldiv@b+3,w
 10552  1301  00C9               	movwf	??___fldiv+3
 10553  1302  3001               	movlw	1
 10554  1303  00CA               	movwf	??___fldiv+4
 10555  1304                     u5595:
 10556  1304  0D49               	rlf	??___fldiv+3,w
 10557  1305  0CC9               	rrf	??___fldiv+3,f
 10558  1306  0CC8               	rrf	??___fldiv+2,f
 10559  1307  0CC7               	rrf	??___fldiv+1,f
 10560  1308  0CC6               	rrf	??___fldiv,f
 10561  1309                     u5590:
 10562  1309  0BCA               	decfsz	??___fldiv+4,f
 10563  130A  2B04               	goto	u5595
 10564  130B  0849               	movf	??___fldiv+3,w
 10565  130C  00C5               	movwf	___fldiv@b+3
 10566  130D  0848               	movf	??___fldiv+2,w
 10567  130E  00C4               	movwf	___fldiv@b+2
 10568  130F  0847               	movf	??___fldiv+1,w
 10569  1310  00C3               	movwf	___fldiv@b+1
 10570  1311  0846               	movf	??___fldiv,w
 10571  1312  00C2               	movwf	___fldiv@b
 10572  1313                     l3451:
 10573  1313  3001               	movlw	1
 10574  1314  07D0               	addwf	___fldiv@new_exp,f
 10575  1315  1803               	skipnc
 10576  1316  0AD1               	incf	___fldiv@new_exp+1,f
 10577  1317  3000               	movlw	0
 10578  1318  07D1               	addwf	___fldiv@new_exp+1,f
 10579  1319                     l3453:
 10580  1319  0851               	movf	___fldiv@new_exp+1,w
 10581  131A  3A80               	xorlw	128
 10582  131B  00FF               	movwf	btemp+1
 10583  131C  3080               	movlw	128
 10584  131D  027F               	subwf	btemp+1,w
 10585  131E  1D03               	skipz
 10586  131F  2B22               	goto	u5605
 10587  1320  30FF               	movlw	255
 10588  1321  0250               	subwf	___fldiv@new_exp,w
 10589  1322                     u5605:
 10590  1322  1C03               	skipc
 10591  1323  2B25               	goto	u5601
 10592  1324  2B26               	goto	u5600
 10593  1325                     u5601:
 10594  1325  2B34               	goto	l3457
 10595  1326                     u5600:
 10596  1326                     l3455:
 10597  1326  30FF               	movlw	255
 10598  1327  1283               	bcf	3,5	;RP0=0, select bank0
 10599  1328  1303               	bcf	3,6	;RP1=0, select bank0
 10600  1329  00D0               	movwf	___fldiv@new_exp
 10601  132A  3000               	movlw	0
 10602  132B  00D1               	movwf	___fldiv@new_exp+1
 10603  132C  3000               	movlw	0
 10604  132D  00C5               	movwf	___fldiv@b+3
 10605  132E  3000               	movlw	0
 10606  132F  00C4               	movwf	___fldiv@b+2
 10607  1330  3000               	movlw	0
 10608  1331  00C3               	movwf	___fldiv@b+1
 10609  1332  3000               	movlw	0
 10610  1333  00C2               	movwf	___fldiv@b
 10611  1334                     l3457:
 10612  1334  1283               	bcf	3,5	;RP0=0, select bank0
 10613  1335  1303               	bcf	3,6	;RP1=0, select bank0
 10614  1336  0851               	movf	___fldiv@new_exp+1,w
 10615  1337  3A80               	xorlw	128
 10616  1338  00FF               	movwf	btemp+1
 10617  1339  3080               	movlw	128
 10618  133A  027F               	subwf	btemp+1,w
 10619  133B  1D03               	skipz
 10620  133C  2B3F               	goto	u5615
 10621  133D  3001               	movlw	1
 10622  133E  0250               	subwf	___fldiv@new_exp,w
 10623  133F                     u5615:
 10624  133F  1803               	skipnc
 10625  1340  2B42               	goto	u5611
 10626  1341  2B43               	goto	u5610
 10627  1342                     u5611:
 10628  1342  2B50               	goto	l809
 10629  1343                     u5610:
 10630  1343                     l3459:
 10631  1343  1283               	bcf	3,5	;RP0=0, select bank0
 10632  1344  1303               	bcf	3,6	;RP1=0, select bank0
 10633  1345  01D0               	clrf	___fldiv@new_exp
 10634  1346  01D1               	clrf	___fldiv@new_exp+1
 10635  1347                     l3461:
 10636  1347  3000               	movlw	0
 10637  1348  00C5               	movwf	___fldiv@b+3
 10638  1349  3000               	movlw	0
 10639  134A  00C4               	movwf	___fldiv@b+2
 10640  134B  3000               	movlw	0
 10641  134C  00C3               	movwf	___fldiv@b+1
 10642  134D  3000               	movlw	0
 10643  134E  00C2               	movwf	___fldiv@b
 10644  134F                     l3463:
 10645  134F  01CF               	clrf	___fldiv@sign
 10646  1350                     l809:
 10647  1350  1283               	bcf	3,5	;RP0=0, select bank0
 10648  1351  1303               	bcf	3,6	;RP1=0, select bank0
 10649  1352  0850               	movf	___fldiv@new_exp,w
 10650  1353  00C6               	movwf	??___fldiv
 10651  1354  0846               	movf	??___fldiv,w
 10652  1355  00D6               	movwf	___fldiv@bexp
 10653  1356                     l3465:
 10654  1356  1C56               	btfss	___fldiv@bexp,0
 10655  1357  2B59               	goto	u5621
 10656  1358  2B5A               	goto	u5620
 10657  1359                     u5621:
 10658  1359  2B5C               	goto	l3469
 10659  135A                     u5620:
 10660  135A                     l3467:
 10661  135A  17C4               	bsf	___fldiv@b+2,7
 10662  135B  2B60               	goto	l811
 10663  135C                     l3469:
 10664  135C  307F               	movlw	127
 10665  135D  00C6               	movwf	??___fldiv
 10666  135E  0846               	movf	??___fldiv,w
 10667  135F  05C4               	andwf	___fldiv@b+2,f
 10668  1360                     l811:
 10669  1360  0856               	movf	___fldiv@bexp,w
 10670  1361  00C6               	movwf	??___fldiv
 10671  1362  1003               	clrc
 10672  1363  0C46               	rrf	??___fldiv,w
 10673  1364  00C7               	movwf	??___fldiv+1
 10674  1365  0847               	movf	??___fldiv+1,w
 10675  1366  00C5               	movwf	___fldiv@b+3
 10676  1367  084F               	movf	___fldiv@sign,w
 10677  1368  00C6               	movwf	??___fldiv
 10678  1369  0846               	movf	??___fldiv,w
 10679  136A  04C5               	iorwf	___fldiv@b+3,f
 10680  136B  2A04               	goto	l3377
 10681  136C                     l789:
 10682  136C  0008               	return
 10683  136D                     __end_of___fldiv:
 10684                           
 10685                           	psect	text25
 10686  1A4F                     __ptext25:	
 10687 ;; *************** function _enviocadena *****************
 10688 ;; Defined at:
 10689 ;;		line 44 in file "usart.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  cadena          1    wreg     PTR unsigned char 
 10692 ;;		 -> volt(16), 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  cadena          1    2[COMMON] PTR unsigned char 
 10695 ;;		 -> volt(16), 
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      void 
 10698 ;; Registers used:
 10699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10705 ;;      Params:         0       0       0       0       0
 10706 ;;      Locals:         1       0       0       0       0
 10707 ;;      Temps:          1       0       0       0       0
 10708 ;;      Totals:         2       0       0       0       0
 10709 ;;Total ram usage:        2 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    1
 10712 ;; This function calls:
 10713 ;;		_enviocaracter
 10714 ;; This function is called by:
 10715 ;;		_main
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           
 10720                           ;psect for function _enviocadena
 10721  1A4F                     _enviocadena:
 10722                           
 10723                           ;incstack = 0
 10724                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10725                           ;enviocadena@cadena stored from wreg
 10726  1A4F  00F2               	movwf	enviocadena@cadena
 10727  1A50                     l3809:
 10728                           
 10729                           ;usart.c: 45:     while (*cadena != 0){
 10730  1A50  2A5D               	goto	l3815
 10731  1A51                     l3811:
 10732                           
 10733                           ;usart.c: 46:       enviocaracter(*cadena);
 10734  1A51  0872               	movf	enviocadena@cadena,w
 10735  1A52  0084               	movwf	4
 10736  1A53  0800               	movf	0,w
 10737  1A54  160A  118A  2005  160A  158A  	fcall	_enviocaracter
 10738  1A59                     l3813:
 10739                           
 10740                           ;usart.c: 47:       cadena++;
 10741  1A59  3001               	movlw	1
 10742  1A5A  00F1               	movwf	??_enviocadena
 10743  1A5B  0871               	movf	??_enviocadena,w
 10744  1A5C  07F2               	addwf	enviocadena@cadena,f
 10745  1A5D                     l3815:
 10746                           
 10747                           ;usart.c: 45:     while (*cadena != 0){
 10748  1A5D  0872               	movf	enviocadena@cadena,w
 10749  1A5E  0084               	movwf	4
 10750  1A5F  1383               	bcf	3,7	;select IRP bank0
 10751  1A60  0800               	movf	0,w
 10752  1A61  1D03               	btfss	3,2
 10753  1A62  2A64               	goto	u6231
 10754  1A63  2A65               	goto	u6230
 10755  1A64                     u6231:
 10756  1A64  2A51               	goto	l3811
 10757  1A65                     u6230:
 10758  1A65                     l214:
 10759                           
 10760                           ;usart.c: 49:     if (PIR1bits.TXIF){
 10761  1A65  1283               	bcf	3,5	;RP0=0, select bank0
 10762  1A66  1303               	bcf	3,6	;RP1=0, select bank0
 10763  1A67  1E0C               	btfss	12,4	;volatile
 10764  1A68  2A6A               	goto	u6241
 10765  1A69  2A6B               	goto	u6240
 10766  1A6A                     u6241:
 10767  1A6A  2A6D               	goto	l216
 10768  1A6B                     u6240:
 10769  1A6B                     l3817:
 10770                           
 10771                           ;usart.c: 50:             TXREG = 13;
 10772  1A6B  300D               	movlw	13
 10773  1A6C  0099               	movwf	25	;volatile
 10774  1A6D                     l216:
 10775  1A6D  0008               	return
 10776  1A6E                     __end_of_enviocadena:
 10777                           
 10778                           	psect	text26
 10779  1005                     __ptext26:	
 10780 ;; *************** function _enviocaracter *****************
 10781 ;; Defined at:
 10782 ;;		line 35 in file "usart.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  a               1    wreg     unsigned char 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  a               1    0[COMMON] unsigned char 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10796 ;;      Params:         0       0       0       0       0
 10797 ;;      Locals:         1       0       0       0       0
 10798 ;;      Temps:          0       0       0       0       0
 10799 ;;      Totals:         1       0       0       0       0
 10800 ;;Total ram usage:        1 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; This function calls:
 10803 ;;		Nothing
 10804 ;; This function is called by:
 10805 ;;		_enviocadena
 10806 ;; This function uses a non-reentrant model
 10807 ;;
 10808                           
 10809                           
 10810                           ;psect for function _enviocaracter
 10811  1005                     _enviocaracter:
 10812                           
 10813                           ;incstack = 0
 10814                           ; Regs used in _enviocaracter: [wreg]
 10815                           ;enviocaracter@a stored from wreg
 10816  1005  00F0               	movwf	enviocaracter@a
 10817  1006                     l3015:
 10818  1006                     l205:	
 10819                           ;usart.c: 38:     }
 10820                           
 10821                           
 10822                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
 10823  1006  1683               	bsf	3,5	;RP0=1, select bank1
 10824  1007  1303               	bcf	3,6	;RP1=0, select bank1
 10825  1008  1C98               	btfss	24,1	;volatile
 10826  1009  280B               	goto	u4411
 10827  100A  280C               	goto	u4410
 10828  100B                     u4411:
 10829  100B  2806               	goto	l205
 10830  100C                     u4410:
 10831  100C                     l207:
 10832                           
 10833                           ;usart.c: 39:     if (PIR1bits.TXIF){
 10834  100C  1283               	bcf	3,5	;RP0=0, select bank0
 10835  100D  1303               	bcf	3,6	;RP1=0, select bank0
 10836  100E  1E0C               	btfss	12,4	;volatile
 10837  100F  2811               	goto	u4421
 10838  1010  2812               	goto	u4420
 10839  1011                     u4421:
 10840  1011  2814               	goto	l209
 10841  1012                     u4420:
 10842  1012                     l3017:
 10843                           
 10844                           ;usart.c: 40:             TXREG = a;
 10845  1012  0870               	movf	enviocaracter@a,w
 10846  1013  0099               	movwf	25	;volatile
 10847  1014                     l209:
 10848  1014  0008               	return
 10849  1015                     __end_of_enviocaracter:
 10850                           
 10851                           	psect	text27
 10852  1A11                     __ptext27:	
 10853 ;; *************** function _adc_canal *****************
 10854 ;; Defined at:
 10855 ;;		line 11 in file "adc_canal.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  canal           1    wreg     unsigned char 
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;  canal           1    1[COMMON] unsigned char 
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      unsigned char 
 10862 ;; Registers used:
 10863 ;;		wreg, status,2, status,0
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10869 ;;      Params:         0       0       0       0       0
 10870 ;;      Locals:         1       0       0       0       0
 10871 ;;      Temps:          1       0       0       0       0
 10872 ;;      Totals:         2       0       0       0       0
 10873 ;;Total ram usage:        2 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; This function calls:
 10876 ;;		Nothing
 10877 ;; This function is called by:
 10878 ;;		_main
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           
 10883                           ;psect for function _adc_canal
 10884  1A11                     _adc_canal:
 10885                           
 10886                           ;incstack = 0
 10887                           ; Regs used in _adc_canal: [wreg+status,2+status,0]
 10888                           ;adc_canal@canal stored from wreg
 10889  1A11  00F1               	movwf	adc_canal@canal
 10890  1A12                     l3565:
 10891                           
 10892                           ;adc_canal.c: 12:     ADCON0bits.CHS = canal;
 10893  1A12  0871               	movf	adc_canal@canal,w
 10894  1A13  00F0               	movwf	??_adc_canal
 10895  1A14  0DF0               	rlf	??_adc_canal,f
 10896  1A15  0DF0               	rlf	??_adc_canal,f
 10897  1A16  1283               	bcf	3,5	;RP0=0, select bank0
 10898  1A17  1303               	bcf	3,6	;RP1=0, select bank0
 10899  1A18  081F               	movf	31,w	;volatile
 10900  1A19  0670               	xorwf	??_adc_canal,w
 10901  1A1A  39C3               	andlw	-61
 10902  1A1B  0670               	xorwf	??_adc_canal,w
 10903  1A1C  009F               	movwf	31	;volatile
 10904  1A1D                     l3567:
 10905                           
 10906                           ;adc_canal.c: 13:     return ADRESH;
 10907  1A1D  081E               	movf	30,w	;volatile
 10908  1A1E                     l175:
 10909  1A1E  0008               	return
 10910  1A1F                     __end_of_adc_canal:
 10911                           
 10912                           	psect	text28
 10913  1A05                     __ptext28:	
 10914 ;; *************** function _adc_c *****************
 10915 ;; Defined at:
 10916 ;;		line 11 in file "adc_c.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;		None
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;		None
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2, status,0
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10930 ;;      Params:         0       0       0       0       0
 10931 ;;      Locals:         0       0       0       0       0
 10932 ;;      Temps:          0       0       0       0       0
 10933 ;;      Totals:         0       0       0       0       0
 10934 ;;Total ram usage:        0 bytes
 10935 ;; Hardware stack levels used:    1
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_main
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           
 10944                           ;psect for function _adc_c
 10945  1A05                     _adc_c:
 10946  1A05                     l3553:	
 10947                           ;incstack = 0
 10948                           ; Regs used in _adc_c: [wreg+status,2+status,0]
 10949                           
 10950                           
 10951                           ;adc_c.c: 13:     ADCON0bits.ADCS = 0;
 10952  1A05  303F               	movlw	-193
 10953  1A06  1283               	bcf	3,5	;RP0=0, select bank0
 10954  1A07  1303               	bcf	3,6	;RP1=0, select bank0
 10955  1A08  059F               	andwf	31,f	;volatile
 10956  1A09                     l3555:
 10957                           
 10958                           ;adc_c.c: 14:     ADCON0bits.CHS0 = 0;
 10959  1A09  111F               	bcf	31,2	;volatile
 10960  1A0A                     l3557:
 10961                           
 10962                           ;adc_c.c: 15:     ADCON0bits.ADON = 1;
 10963  1A0A  141F               	bsf	31,0	;volatile
 10964  1A0B                     l3559:
 10965                           
 10966                           ;adc_c.c: 16:     ADCON1bits.VCFG1 = 0;
 10967  1A0B  1683               	bsf	3,5	;RP0=1, select bank1
 10968  1A0C  1303               	bcf	3,6	;RP1=0, select bank1
 10969  1A0D  129F               	bcf	31,5	;volatile
 10970  1A0E                     l3561:
 10971                           
 10972                           ;adc_c.c: 17:     ADCON1bits.VCFG0 = 0;
 10973  1A0E  121F               	bcf	31,4	;volatile
 10974  1A0F                     l3563:
 10975                           
 10976                           ;adc_c.c: 18:     ADCON1bits.ADFM = 0;
 10977  1A0F  139F               	bcf	31,7	;volatile
 10978  1A10                     l168:
 10979  1A10  0008               	return
 10980  1A11                     __end_of_adc_c:
 10981                           
 10982                           	psect	text29
 10983  1B7A                     __ptext29:	
 10984 ;; *************** function _Lcd_Write_String *****************
 10985 ;; Defined at:
 10986 ;;		line 104 in file "LCD8bits.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  a               2    3[COMMON] PTR unsigned char 
 10989 ;;		 -> volt(16), STR_1(11), 
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  i               2    8[COMMON] int 
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11001 ;;      Params:         2       0       0       0       0
 11002 ;;      Locals:         2       0       0       0       0
 11003 ;;      Temps:          3       0       0       0       0
 11004 ;;      Totals:         7       0       0       0       0
 11005 ;;Total ram usage:        7 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:    2
 11008 ;; This function calls:
 11009 ;;		_Lcd_Write_Char
 11010 ;; This function is called by:
 11011 ;;		_main
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           
 11016                           ;psect for function _Lcd_Write_String
 11017  1B7A                     _Lcd_Write_String:
 11018  1B7A                     l3541:	
 11019                           ;incstack = 0
 11020                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11021                           
 11022                           
 11023                           ;LCD8bits.c: 105:     int i;;LCD8bits.c: 106:     for (i = 0; a[i] != '\0'; i++)
 11024  1B7A  01F8               	clrf	Lcd_Write_String@i
 11025  1B7B  01F9               	clrf	Lcd_Write_String@i+1
 11026  1B7C  2B9F               	goto	l3547
 11027  1B7D                     l3543:
 11028                           
 11029                           ;LCD8bits.c: 107:         Lcd_Write_Char(a[i]);
 11030  1B7D  0878               	movf	Lcd_Write_String@i,w
 11031  1B7E  0773               	addwf	Lcd_Write_String@a,w
 11032  1B7F  00F6               	movwf	??_Lcd_Write_String+1
 11033  1B80  0874               	movf	Lcd_Write_String@a+1,w
 11034  1B81  00F5               	movwf	??_Lcd_Write_String
 11035  1B82  1803               	skipnc
 11036  1B83  0AF5               	incf	??_Lcd_Write_String,f
 11037  1B84  1FF8               	btfss	Lcd_Write_String@i,7
 11038  1B85  2B87               	goto	u5790
 11039  1B86  03F5               	decf	??_Lcd_Write_String,f
 11040  1B87                     u5790:
 11041  1B87  0875               	movf	??_Lcd_Write_String,w
 11042  1B88  00F7               	movwf	??_Lcd_Write_String+2
 11043  1B89  0877               	movf	??_Lcd_Write_String+2,w
 11044  1B8A  1283               	bcf	3,5	;RP0=0, select bank0
 11045  1B8B  1303               	bcf	3,6	;RP1=0, select bank0
 11046  1B8C  00FF               	movwf	btemp+1
 11047  1B8D  0876               	movf	??_Lcd_Write_String+1,w
 11048  1B8E  0084               	movwf	4
 11049  1B8F  160A  158A  2000  160A  158A  	fcall	stringtab
 11050  1B94  160A  158A  221F  160A  158A  	fcall	_Lcd_Write_Char
 11051  1B99                     l3545:
 11052  1B99  3001               	movlw	1
 11053  1B9A  07F8               	addwf	Lcd_Write_String@i,f
 11054  1B9B  1803               	skipnc
 11055  1B9C  0AF9               	incf	Lcd_Write_String@i+1,f
 11056  1B9D  3000               	movlw	0
 11057  1B9E  07F9               	addwf	Lcd_Write_String@i+1,f
 11058  1B9F                     l3547:
 11059  1B9F  0878               	movf	Lcd_Write_String@i,w
 11060  1BA0  0773               	addwf	Lcd_Write_String@a,w
 11061  1BA1  00F6               	movwf	??_Lcd_Write_String+1
 11062  1BA2  0874               	movf	Lcd_Write_String@a+1,w
 11063  1BA3  00F5               	movwf	??_Lcd_Write_String
 11064  1BA4  1803               	skipnc
 11065  1BA5  0AF5               	incf	??_Lcd_Write_String,f
 11066  1BA6  1FF8               	btfss	Lcd_Write_String@i,7
 11067  1BA7  2BA9               	goto	u5800
 11068  1BA8  03F5               	decf	??_Lcd_Write_String,f
 11069  1BA9                     u5800:
 11070  1BA9  0875               	movf	??_Lcd_Write_String,w
 11071  1BAA  00F7               	movwf	??_Lcd_Write_String+2
 11072  1BAB  0877               	movf	??_Lcd_Write_String+2,w
 11073  1BAC  1283               	bcf	3,5	;RP0=0, select bank0
 11074  1BAD  1303               	bcf	3,6	;RP1=0, select bank0
 11075  1BAE  00FF               	movwf	btemp+1
 11076  1BAF  0876               	movf	??_Lcd_Write_String+1,w
 11077  1BB0  0084               	movwf	4
 11078  1BB1  160A  158A  2000  160A  158A  	fcall	stringtab
 11079  1BB6  3A00               	xorlw	0
 11080  1BB7  1D03               	skipz
 11081  1BB8  2BBA               	goto	u5811
 11082  1BB9  2BBB               	goto	u5810
 11083  1BBA                     u5811:
 11084  1BBA  2B7D               	goto	l3543
 11085  1BBB                     u5810:
 11086  1BBB                     l67:
 11087  1BBB  0008               	return
 11088  1BBC                     __end_of_Lcd_Write_String:
 11089                           
 11090                           	psect	text30
 11091  1A1F                     __ptext30:	
 11092 ;; *************** function _Lcd_Write_Char *****************
 11093 ;; Defined at:
 11094 ;;		line 96 in file "LCD8bits.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  a               1    wreg     unsigned char 
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;  a               1    2[COMMON] unsigned char 
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2, status,0, pclath, cstack
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11108 ;;      Params:         0       0       0       0       0
 11109 ;;      Locals:         1       0       0       0       0
 11110 ;;      Temps:          1       0       0       0       0
 11111 ;;      Totals:         2       0       0       0       0
 11112 ;;Total ram usage:        2 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:    1
 11115 ;; This function calls:
 11116 ;;		_Lcd_Port
 11117 ;; This function is called by:
 11118 ;;		_Lcd_Write_String
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           
 11123                           ;psect for function _Lcd_Write_Char
 11124  1A1F                     _Lcd_Write_Char:
 11125                           
 11126                           ;incstack = 0
 11127                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11128                           ;Lcd_Write_Char@a stored from wreg
 11129  1A1F  00F2               	movwf	Lcd_Write_Char@a
 11130  1A20                     l3005:
 11131                           
 11132                           ;LCD8bits.c: 97:     RC0 = 1;
 11133  1A20  1283               	bcf	3,5	;RP0=0, select bank0
 11134  1A21  1303               	bcf	3,6	;RP1=0, select bank0
 11135  1A22  1407               	bsf	7,0	;volatile
 11136  1A23                     l3007:
 11137                           
 11138                           ;LCD8bits.c: 98:     Lcd_Port(a);
 11139  1A23  0872               	movf	Lcd_Write_Char@a,w
 11140  1A24  160A  158A  233C  160A  158A  	fcall	_Lcd_Port
 11141  1A29                     l3009:
 11142                           
 11143                           ;LCD8bits.c: 99:     RC1 = 1;
 11144  1A29  1283               	bcf	3,5	;RP0=0, select bank0
 11145  1A2A  1303               	bcf	3,6	;RP1=0, select bank0
 11146  1A2B  1487               	bsf	7,1	;volatile
 11147  1A2C                     l3011:
 11148                           
 11149                           ;LCD8bits.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 11150  1A2C  301A               	movlw	26
 11151  1A2D  00F1               	movwf	??_Lcd_Write_Char
 11152  1A2E                     u6317:
 11153  1A2E  0BF1               	decfsz	??_Lcd_Write_Char,f
 11154  1A2F  2A2E               	goto	u6317
 11155  1A30  0000               	nop
 11156  1A31                     l3013:
 11157                           
 11158                           ;LCD8bits.c: 101:     RC1 = 0;
 11159  1A31  1283               	bcf	3,5	;RP0=0, select bank0
 11160  1A32  1303               	bcf	3,6	;RP1=0, select bank0
 11161  1A33  1087               	bcf	7,1	;volatile
 11162  1A34                     l61:
 11163  1A34  0008               	return
 11164  1A35                     __end_of_Lcd_Write_Char:
 11165                           
 11166                           	psect	text31
 11167  1A6E                     __ptext31:	
 11168 ;; *************** function _Lcd_Set_Cursor *****************
 11169 ;; Defined at:
 11170 ;;		line 68 in file "LCD8bits.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  a               1    wreg     unsigned char 
 11173 ;;  b               1    4[COMMON] unsigned char 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  a               1    6[COMMON] unsigned char 
 11176 ;;  temp            1    7[COMMON] unsigned char 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, status,2, status,0, pclath, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11186 ;;      Params:         1       0       0       0       0
 11187 ;;      Locals:         2       0       0       0       0
 11188 ;;      Temps:          1       0       0       0       0
 11189 ;;      Totals:         4       0       0       0       0
 11190 ;;Total ram usage:        4 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    2
 11193 ;; This function calls:
 11194 ;;		_Lcd_Cmd
 11195 ;; This function is called by:
 11196 ;;		_main
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           
 11201                           ;psect for function _Lcd_Set_Cursor
 11202  1A6E                     _Lcd_Set_Cursor:
 11203                           
 11204                           ;incstack = 0
 11205                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11206                           ;Lcd_Set_Cursor@a stored from wreg
 11207  1A6E  00F6               	movwf	Lcd_Set_Cursor@a
 11208  1A6F                     l3519:
 11209                           
 11210                           ;LCD8bits.c: 69:     unsigned char temp;;LCD8bits.c: 70:     if (a == 1) {
 11211  1A6F  0376               	decf	Lcd_Set_Cursor@a,w
 11212  1A70  1D03               	btfss	3,2
 11213  1A71  2A73               	goto	u5771
 11214  1A72  2A74               	goto	u5770
 11215  1A73                     u5771:
 11216  1A73  2A80               	goto	l3525
 11217  1A74                     u5770:
 11218  1A74                     l3521:
 11219                           
 11220                           ;LCD8bits.c: 71:         temp = 0x80 + b - 1;
 11221  1A74  0874               	movf	Lcd_Set_Cursor@b,w
 11222  1A75  3E7F               	addlw	127
 11223  1A76  00F5               	movwf	??_Lcd_Set_Cursor
 11224  1A77  0875               	movf	??_Lcd_Set_Cursor,w
 11225  1A78  00F7               	movwf	Lcd_Set_Cursor@temp
 11226  1A79                     l3523:
 11227                           
 11228                           ;LCD8bits.c: 72:         Lcd_Cmd(temp);
 11229  1A79  0877               	movf	Lcd_Set_Cursor@temp,w
 11230  1A7A  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11231                           
 11232                           ;LCD8bits.c: 74:     } else if (a == 2) {
 11233  1A7F  2A91               	goto	l55
 11234  1A80                     l3525:
 11235  1A80  3002               	movlw	2
 11236  1A81  0676               	xorwf	Lcd_Set_Cursor@a,w
 11237  1A82  1D03               	btfss	3,2
 11238  1A83  2A85               	goto	u5781
 11239  1A84  2A86               	goto	u5780
 11240  1A85                     u5781:
 11241  1A85  2A91               	goto	l55
 11242  1A86                     u5780:
 11243  1A86                     l3527:
 11244                           
 11245                           ;LCD8bits.c: 75:         temp = 0xC0 + b - 1;
 11246  1A86  0874               	movf	Lcd_Set_Cursor@b,w
 11247  1A87  3EBF               	addlw	191
 11248  1A88  00F5               	movwf	??_Lcd_Set_Cursor
 11249  1A89  0875               	movf	??_Lcd_Set_Cursor,w
 11250  1A8A  00F7               	movwf	Lcd_Set_Cursor@temp
 11251  1A8B                     l3529:
 11252                           
 11253                           ;LCD8bits.c: 76:         Lcd_Cmd(temp);
 11254  1A8B  0877               	movf	Lcd_Set_Cursor@temp,w
 11255  1A8C  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11256  1A91                     l55:
 11257  1A91  0008               	return
 11258  1A92                     __end_of_Lcd_Set_Cursor:
 11259                           
 11260                           	psect	text32
 11261  1C59                     __ptext32:	
 11262 ;; *************** function _Lcd_Init *****************
 11263 ;; Defined at:
 11264 ;;		line 80 in file "LCD8bits.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, status,2, status,0, pclath, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11278 ;;      Params:         0       0       0       0       0
 11279 ;;      Locals:         0       0       0       0       0
 11280 ;;      Temps:          2       0       0       0       0
 11281 ;;      Totals:         2       0       0       0       0
 11282 ;;Total ram usage:        2 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    2
 11285 ;; This function calls:
 11286 ;;		_Lcd_Cmd
 11287 ;;		_Lcd_Port
 11288 ;; This function is called by:
 11289 ;;		_main
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           
 11294                           ;psect for function _Lcd_Init
 11295  1C59                     _Lcd_Init:
 11296  1C59                     l3531:	
 11297                           ;incstack = 0
 11298                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11299                           
 11300                           
 11301                           ;LCD8bits.c: 81:     Lcd_Port(0);
 11302  1C59  3000               	movlw	0
 11303  1C5A  160A  158A  233C  160A  158A  	fcall	_Lcd_Port
 11304  1C5F                     l3533:
 11305                           
 11306                           ;LCD8bits.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
 11307  1C5F  3034               	movlw	52
 11308  1C60  00F5               	movwf	??_Lcd_Init+1
 11309  1C61  30F1               	movlw	241
 11310  1C62  00F4               	movwf	??_Lcd_Init
 11311  1C63                     u6327:
 11312  1C63  0BF4               	decfsz	??_Lcd_Init,f
 11313  1C64  2C63               	goto	u6327
 11314  1C65  0BF5               	decfsz	??_Lcd_Init+1,f
 11315  1C66  2C63               	goto	u6327
 11316  1C67  2C68               	nop2
 11317  1C68                     l3535:
 11318                           
 11319                           ;LCD8bits.c: 83:     Lcd_Cmd(48);
 11320  1C68  3030               	movlw	48
 11321  1C69  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11322                           
 11323                           ;LCD8bits.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11324  1C6E  300D               	movlw	13
 11325  1C6F  00F5               	movwf	??_Lcd_Init+1
 11326  1C70  30FB               	movlw	251
 11327  1C71  00F4               	movwf	??_Lcd_Init
 11328  1C72                     u6337:
 11329  1C72  0BF4               	decfsz	??_Lcd_Init,f
 11330  1C73  2C72               	goto	u6337
 11331  1C74  0BF5               	decfsz	??_Lcd_Init+1,f
 11332  1C75  2C72               	goto	u6337
 11333  1C76  2C77               	nop2
 11334  1C77                     l3537:
 11335                           
 11336                           ;LCD8bits.c: 85:     Lcd_Cmd(48);
 11337  1C77  3030               	movlw	48
 11338  1C78  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11339  1C7D                     l3539:
 11340                           
 11341                           ;LCD8bits.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
 11342  1C7D  301D               	movlw	29
 11343  1C7E  00F5               	movwf	??_Lcd_Init+1
 11344  1C7F  3091               	movlw	145
 11345  1C80  00F4               	movwf	??_Lcd_Init
 11346  1C81                     u6347:
 11347  1C81  0BF4               	decfsz	??_Lcd_Init,f
 11348  1C82  2C81               	goto	u6347
 11349  1C83  0BF5               	decfsz	??_Lcd_Init+1,f
 11350  1C84  2C81               	goto	u6347
 11351                           
 11352                           ;LCD8bits.c: 87:     Lcd_Cmd(48);
 11353  1C85  3030               	movlw	48
 11354  1C86  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11355                           
 11356                           ;LCD8bits.c: 89:     Lcd_Cmd(56);
 11357  1C8B  3038               	movlw	56
 11358  1C8C  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11359                           
 11360                           ;LCD8bits.c: 90:     Lcd_Cmd(8);
 11361  1C91  3008               	movlw	8
 11362  1C92  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11363                           
 11364                           ;LCD8bits.c: 91:     Lcd_Cmd(1);
 11365  1C97  3001               	movlw	1
 11366  1C98  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11367                           
 11368                           ;LCD8bits.c: 92:     Lcd_Cmd(6);
 11369  1C9D  3006               	movlw	6
 11370  1C9E  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11371                           
 11372                           ;LCD8bits.c: 93:     Lcd_Cmd(12);
 11373  1CA3  300C               	movlw	12
 11374  1CA4  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11375  1CA9                     l58:
 11376  1CA9  0008               	return
 11377  1CAA                     __end_of_Lcd_Init:
 11378                           
 11379                           	psect	text33
 11380  1A35                     __ptext33:	
 11381 ;; *************** function _Lcd_Cmd *****************
 11382 ;; Defined at:
 11383 ;;		line 55 in file "LCD8bits.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;  a               1    wreg     unsigned char 
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;  a               1    3[COMMON] unsigned char 
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  1    wreg      void 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2, status,0, pclath, cstack
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11397 ;;      Params:         0       0       0       0       0
 11398 ;;      Locals:         1       0       0       0       0
 11399 ;;      Temps:          2       0       0       0       0
 11400 ;;      Totals:         3       0       0       0       0
 11401 ;;Total ram usage:        3 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:    1
 11404 ;; This function calls:
 11405 ;;		_Lcd_Port
 11406 ;; This function is called by:
 11407 ;;		_Lcd_Set_Cursor
 11408 ;;		_Lcd_Init
 11409 ;;		_Lcd_Clear
 11410 ;;		_Lcd_Shift_Right
 11411 ;;		_Lcd_Shift_Left
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           
 11416                           ;psect for function _Lcd_Cmd
 11417  1A35                     _Lcd_Cmd:
 11418                           
 11419                           ;incstack = 0
 11420                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11421                           ;Lcd_Cmd@a stored from wreg
 11422  1A35  00F3               	movwf	Lcd_Cmd@a
 11423  1A36                     l2995:
 11424                           
 11425                           ;LCD8bits.c: 56:     RC0 = 0;
 11426  1A36  1283               	bcf	3,5	;RP0=0, select bank0
 11427  1A37  1303               	bcf	3,6	;RP1=0, select bank0
 11428  1A38  1007               	bcf	7,0	;volatile
 11429  1A39                     l2997:
 11430                           
 11431                           ;LCD8bits.c: 57:     Lcd_Port(a);
 11432  1A39  0873               	movf	Lcd_Cmd@a,w
 11433  1A3A  160A  158A  233C  160A  158A  	fcall	_Lcd_Port
 11434  1A3F                     l2999:
 11435                           
 11436                           ;LCD8bits.c: 58:     RC1 = 1;
 11437  1A3F  1283               	bcf	3,5	;RP0=0, select bank0
 11438  1A40  1303               	bcf	3,6	;RP1=0, select bank0
 11439  1A41  1487               	bsf	7,1	;volatile
 11440  1A42                     l3001:
 11441                           
 11442                           ;LCD8bits.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11443  1A42  300B               	movlw	11
 11444  1A43  00F2               	movwf	??_Lcd_Cmd+1
 11445  1A44  3062               	movlw	98
 11446  1A45  00F1               	movwf	??_Lcd_Cmd
 11447  1A46                     u6357:
 11448  1A46  0BF1               	decfsz	??_Lcd_Cmd,f
 11449  1A47  2A46               	goto	u6357
 11450  1A48  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11451  1A49  2A46               	goto	u6357
 11452  1A4A  0000               	nop
 11453  1A4B                     l3003:
 11454                           
 11455                           ;LCD8bits.c: 60:     RC1 = 0;
 11456  1A4B  1283               	bcf	3,5	;RP0=0, select bank0
 11457  1A4C  1303               	bcf	3,6	;RP1=0, select bank0
 11458  1A4D  1087               	bcf	7,1	;volatile
 11459  1A4E                     l46:
 11460  1A4E  0008               	return
 11461  1A4F                     __end_of_Lcd_Cmd:
 11462                           
 11463                           	psect	text34
 11464  1B3C                     __ptext34:	
 11465 ;; *************** function _Lcd_Port *****************
 11466 ;; Defined at:
 11467 ;;		line 13 in file "LCD8bits.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;  a               1    wreg     unsigned char 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;  a               1    0[COMMON] unsigned char 
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11481 ;;      Params:         0       0       0       0       0
 11482 ;;      Locals:         1       0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0
 11484 ;;      Totals:         1       0       0       0       0
 11485 ;;Total ram usage:        1 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_Lcd_Cmd
 11491 ;;		_Lcd_Init
 11492 ;;		_Lcd_Write_Char
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           
 11497                           ;psect for function _Lcd_Port
 11498  1B3C                     _Lcd_Port:
 11499                           
 11500                           ;incstack = 0
 11501                           ; Regs used in _Lcd_Port: [wreg]
 11502                           ;Lcd_Port@a stored from wreg
 11503  1B3C  00F0               	movwf	Lcd_Port@a
 11504  1B3D                     l2513:
 11505                           
 11506                           ;LCD8bits.c: 14:     if (a & 1)
 11507  1B3D  1C70               	btfss	Lcd_Port@a,0
 11508  1B3E  2B40               	goto	u3181
 11509  1B3F  2B41               	goto	u3180
 11510  1B40                     u3181:
 11511  1B40  2B45               	goto	l27
 11512  1B41                     u3180:
 11513  1B41                     l2515:
 11514                           
 11515                           ;LCD8bits.c: 15:         RD0 = 1;
 11516  1B41  1283               	bcf	3,5	;RP0=0, select bank0
 11517  1B42  1303               	bcf	3,6	;RP1=0, select bank0
 11518  1B43  1408               	bsf	8,0	;volatile
 11519  1B44  2B48               	goto	l28
 11520  1B45                     l27:	
 11521                           ;LCD8bits.c: 16:     else
 11522                           
 11523                           
 11524                           ;LCD8bits.c: 17:         RD0 = 0;
 11525  1B45  1283               	bcf	3,5	;RP0=0, select bank0
 11526  1B46  1303               	bcf	3,6	;RP1=0, select bank0
 11527  1B47  1008               	bcf	8,0	;volatile
 11528  1B48                     l28:
 11529                           
 11530                           ;LCD8bits.c: 19:     if (a & 2)
 11531  1B48  1CF0               	btfss	Lcd_Port@a,1
 11532  1B49  2B4B               	goto	u3191
 11533  1B4A  2B4C               	goto	u3190
 11534  1B4B                     u3191:
 11535  1B4B  2B4E               	goto	l29
 11536  1B4C                     u3190:
 11537  1B4C                     l2517:
 11538                           
 11539                           ;LCD8bits.c: 20:         RD1 = 1;
 11540  1B4C  1488               	bsf	8,1	;volatile
 11541  1B4D  2B4F               	goto	l30
 11542  1B4E                     l29:	
 11543                           ;LCD8bits.c: 21:     else
 11544                           
 11545                           
 11546                           ;LCD8bits.c: 22:         RD1 = 0;
 11547  1B4E  1088               	bcf	8,1	;volatile
 11548  1B4F                     l30:
 11549                           
 11550                           ;LCD8bits.c: 24:     if (a & 4)
 11551  1B4F  1D70               	btfss	Lcd_Port@a,2
 11552  1B50  2B52               	goto	u3201
 11553  1B51  2B53               	goto	u3200
 11554  1B52                     u3201:
 11555  1B52  2B55               	goto	l31
 11556  1B53                     u3200:
 11557  1B53                     l2519:
 11558                           
 11559                           ;LCD8bits.c: 25:         RD2 = 1;
 11560  1B53  1508               	bsf	8,2	;volatile
 11561  1B54  2B56               	goto	l32
 11562  1B55                     l31:	
 11563                           ;LCD8bits.c: 26:     else
 11564                           
 11565                           
 11566                           ;LCD8bits.c: 27:         RD2 = 0;
 11567  1B55  1108               	bcf	8,2	;volatile
 11568  1B56                     l32:
 11569                           
 11570                           ;LCD8bits.c: 29:     if (a & 8)
 11571  1B56  1DF0               	btfss	Lcd_Port@a,3
 11572  1B57  2B59               	goto	u3211
 11573  1B58  2B5A               	goto	u3210
 11574  1B59                     u3211:
 11575  1B59  2B5C               	goto	l33
 11576  1B5A                     u3210:
 11577  1B5A                     l2521:
 11578                           
 11579                           ;LCD8bits.c: 30:         RD3 = 1;
 11580  1B5A  1588               	bsf	8,3	;volatile
 11581  1B5B  2B5D               	goto	l34
 11582  1B5C                     l33:	
 11583                           ;LCD8bits.c: 31:     else
 11584                           
 11585                           
 11586                           ;LCD8bits.c: 32:         RD3 = 0;
 11587  1B5C  1188               	bcf	8,3	;volatile
 11588  1B5D                     l34:
 11589                           
 11590                           ;LCD8bits.c: 34:     if (a & 16)
 11591  1B5D  1E70               	btfss	Lcd_Port@a,4
 11592  1B5E  2B60               	goto	u3221
 11593  1B5F  2B61               	goto	u3220
 11594  1B60                     u3221:
 11595  1B60  2B63               	goto	l35
 11596  1B61                     u3220:
 11597  1B61                     l2523:
 11598                           
 11599                           ;LCD8bits.c: 35:         RD4 = 1;
 11600  1B61  1608               	bsf	8,4	;volatile
 11601  1B62  2B64               	goto	l36
 11602  1B63                     l35:	
 11603                           ;LCD8bits.c: 36:     else
 11604                           
 11605                           
 11606                           ;LCD8bits.c: 37:         RD4 = 0;
 11607  1B63  1208               	bcf	8,4	;volatile
 11608  1B64                     l36:
 11609                           
 11610                           ;LCD8bits.c: 39:     if (a & 32)
 11611  1B64  1EF0               	btfss	Lcd_Port@a,5
 11612  1B65  2B67               	goto	u3231
 11613  1B66  2B68               	goto	u3230
 11614  1B67                     u3231:
 11615  1B67  2B6A               	goto	l37
 11616  1B68                     u3230:
 11617  1B68                     l2525:
 11618                           
 11619                           ;LCD8bits.c: 40:         RD5 = 1;
 11620  1B68  1688               	bsf	8,5	;volatile
 11621  1B69  2B6B               	goto	l38
 11622  1B6A                     l37:	
 11623                           ;LCD8bits.c: 41:     else
 11624                           
 11625                           
 11626                           ;LCD8bits.c: 42:         RD5 = 0;
 11627  1B6A  1288               	bcf	8,5	;volatile
 11628  1B6B                     l38:
 11629                           
 11630                           ;LCD8bits.c: 44:     if (a & 64)
 11631  1B6B  1F70               	btfss	Lcd_Port@a,6
 11632  1B6C  2B6E               	goto	u3241
 11633  1B6D  2B6F               	goto	u3240
 11634  1B6E                     u3241:
 11635  1B6E  2B71               	goto	l39
 11636  1B6F                     u3240:
 11637  1B6F                     l2527:
 11638                           
 11639                           ;LCD8bits.c: 45:         RD6 = 1;
 11640  1B6F  1708               	bsf	8,6	;volatile
 11641  1B70  2B72               	goto	l40
 11642  1B71                     l39:	
 11643                           ;LCD8bits.c: 46:     else
 11644                           
 11645                           
 11646                           ;LCD8bits.c: 47:         RD6 = 0;
 11647  1B71  1308               	bcf	8,6	;volatile
 11648  1B72                     l40:
 11649                           
 11650                           ;LCD8bits.c: 49:     if (a & 128)
 11651  1B72  1FF0               	btfss	Lcd_Port@a,7
 11652  1B73  2B75               	goto	u3251
 11653  1B74  2B76               	goto	u3250
 11654  1B75                     u3251:
 11655  1B75  2B78               	goto	l41
 11656  1B76                     u3250:
 11657  1B76                     l2529:
 11658                           
 11659                           ;LCD8bits.c: 50:         RD7 = 1;
 11660  1B76  1788               	bsf	8,7	;volatile
 11661  1B77  2B79               	goto	l43
 11662  1B78                     l41:	
 11663                           ;LCD8bits.c: 51:     else
 11664                           
 11665                           
 11666                           ;LCD8bits.c: 52:         RD7 = 0;
 11667  1B78  1388               	bcf	8,7	;volatile
 11668  1B79                     l43:
 11669  1B79  0008               	return
 11670  1B7A                     __end_of_Lcd_Port:
 11671  007E                     btemp	set	126	;btemp
 11672  007E                     wtemp0	set	126
 11673                           
 11674                           	psect	config
 11675                           
 11676                           ;Config register CONFIG1 @ 0x2007
 11677                           ;	Oscillator Selection bits
 11678                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11679                           ;	Watchdog Timer Enable bit
 11680                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11681                           ;	Power-up Timer Enable bit
 11682                           ;	PWRTE = OFF, PWRT disabled
 11683                           ;	RE3/MCLR pin function select bit
 11684                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11685                           ;	Code Protection bit
 11686                           ;	CP = OFF, Program memory code protection is disabled
 11687                           ;	Data Code Protection bit
 11688                           ;	CPD = OFF, Data memory code protection is disabled
 11689                           ;	Brown Out Reset Selection bits
 11690                           ;	BOREN = OFF, BOR disabled
 11691                           ;	Internal External Switchover bit
 11692                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11693                           ;	Fail-Safe Clock Monitor Enabled bit
 11694                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11695                           ;	Low Voltage Programming Enable bit
 11696                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11697                           ;	In-Circuit Debugger Mode bit
 11698                           ;	DEBUG = 0x1, unprogrammed default
 11699  2007                     	org	8199
 11700  2007  20D4               	dw	8404
 11701                           
 11702                           ;Config register CONFIG2 @ 0x2008
 11703                           ;	Brown-out Reset Selection bit
 11704                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11705                           ;	Flash Program Memory Self Write Enable bits
 11706                           ;	WRT = OFF, Write protection off
 11707  2008                     	org	8200
 11708  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    144
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     44      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> volt(BANK1[16]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _mapear->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _enviocadena->_enviocaracter
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _mapear->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   39264
                                             41 BANK1      3     3      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _adc_c
                          _adc_canal
                        _enviocadena
                             _mapear
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   31530
                                              0 BANK1     41    30     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _mapear                                               9     5      4    6314
                                             56 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_canal                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_c                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _adc_c
   _adc_canal
   _enviocadena
     _enviocaracter
   _mapear
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Sep 01 22:19:09 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          _a 006F  
                        pc 0002               ___fldiv@sign 004F                         l30 1B4F  
                       l31 1B55                         l40 1B72                         l32 1B56  
                       l41 1B78                         l33 1B5C                         l34 1B5D  
                       l43 1B79                         l35 1B63                         l27 1B45  
                       l36 1B64                         l28 1B48                         l37 1B6A  
                       l29 1B4E                         l61 1A34                         l38 1B6B  
                       l46 1A4E                         l39 1B71                         l55 1A91  
                       l58 1CA9                         l67 1BBB                         _S1 00D0  
                       _S2 00CC               ___awdiv@sign 0021                         _s1 00D6  
                       _s2 00D5                         _pc 00D4                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l205 1006  
                      l214 1A65                        l207 100C                        l216 1A6D  
                      l400 07EE                        l209 1014                        l146 1C58  
                      l404 1AC2                        l325 0C9E                        l406 1ADA  
                      l318 1577                        l175 1A1E                        l168 1A10  
                      l440 1DBE                        l344 00BF                        l603 1A04  
                      l372 04D9                        l621 10D1                        l614 1E8E  
                      l622 1043                        l710 004D                        l607 1EA3  
                      l632 10C4                        l720 1B3B                        l617 1EA3  
                      l625 1094                        l570 1D58                        l811 1360  
                      l803 12DE                        l731 15DB                        l379 051D  
                      l660 1CFF                        l557 1E27                        l590 1BD8  
                      l574 118F                        l591 1BF4                        l735 1682  
                      l575 10F4                        l592 1C09                        l752 174D  
                      l744 17FF                        l809 1350                        l833 0F6B  
                      l737 1659                        l585 1182                        l762 1793  
                      l578 1152                        l827 0FFF                        l595 1EC0  
                      l756 1771                        l773 17F3                        l765 17D1  
                      l846 1AEF                        l598 1F2C                        l774 17FF  
                      l839 0FF3                        l871 1F68                        l599 1F45  
                      l848 1B01                        l873 1FFF                        l777 1AB5  
                      l787 11EC                        l891 0813                        l884 1FC9  
                      l789 136C                        l885 1FD5                        l877 1FAD  
                      _RC0 0038                        _RC1 0039                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 0036               ___flmul@bexp 0037  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             ___fltol@exp1 005B                       l3001 1A42                       l3003 1A4B  
                     l3011 1A2C                       l3013 1A31                       l3005 1A20  
                     l3101 1044                       l3021 1376                       l3007 1A23  
                     l3015 1006                       l3111 106D                       l3103 104A  
                     l3009 1A29                       l3017 1012                       l3201 1AD0  
                     l3121 1098                       l3113 107B                       l3105 1059  
                     l3033 1534                       l3041 0949                       l3211 1D6C  
                     l3203 1AD6                       l3115 1085                       l3107 105B  
                     l3027 1483                       l3019 1370                       l3051 0A3F  
                     l3043 0950                       l2501 1ADE                       l3301 1E83  
                     l3221 1DA6                       l3213 1D79                       l3141 10D2  
                     l3117 1086                       l3109 1064                       l3029 1489  
                     l3061 0AFB                       l3037 0943                       l2503 1AE5  
                     l3231 1BBC                       l3303 1E93                       l3223 1DA7  
                     l3215 1D7D                       l3207 1D59                       l3311 1CB7  
                     l3143 10DF                       l3135 10B9                       l3127 10A0  
                     l3119 108E                       l3055 0AC7                       l3039 0947  
                     l2521 1B5A                       l2513 1B3D                       l3401 125E  
                     l2505 1AE9                       l3233 1BD0                       l3305 1E98  
                     l3225 1DB0                       l3217 1D86                       l3209 1D69  
                     l3321 1CF1                       l3313 1CC4                       l3161 1119  
                     l3153 10F5                       l3137 10C9                       l3129 10B2  
                     l3081 080A                       l2601 1D3D                       l3073 0C72  
                     l3049 0A38                       l2523 1B61                       l2515 1B41  
                     l3411 127F                       l3403 1262                       l2507 1AF8  
                     l3235 1BEC                       l3251 1EE0                       l3243 1EA4  
                     l3219 1D98                       l3227 1DB6                       l3315 1CC8  
                     l3323 1CF7                       l3307 1CAA                       l3171 114C  
                     l3163 1122                       l3155 10FD                       l3147 10E8  
                     l3091 1028                       l3083 0810                       l2531 1DBF  
                     l2603 1D44                       l3067 0BE3                       l3059 0AF4  
                     l2525 1B68                       l2517 1B4C                       l3421 12A1  
                     l3413 128D                       l3405 1263                       l3341 11A2  
                     l3333 1190                       l2509 1AFD                       l3501 1FBF  
                     l3237 1C06                       l3253 1F04                       l3245 1EB8  
                     l2701 15D1                       l3317 1CDA                       l3309 1CB4  
                     l3173 1156                       l3181 1170                       l3165 1134  
                     l3157 110E                       l2621 001C                       l2613 000A  
                     l3085 0812                       l3077 0803                       l2541 1DD1  
                     l2533 1DC2                       l2605 1D4A                       l3069 0BEA  
                     l2527 1B6F                       l2519 1B53                       l3423 12AA  
                     l3431 12BE                       l3407 126C                       l3415 1291  
                     l3343 11A7                       l3351 11B7                       l3335 1197  
                     l3511 1FF2                       l3503 1FC3                       l3239 1C08  
                     l3255 1F08                       l3247 1ED4                       l3263 19FA  
                     l2711 15ED                       l2703 15D3                       l3327 1A92  
                     l3271 1E28                       l3319 1CE8                       l3167 1142  
                     l3159 1110                       l3095 1031                       l2631 003C  
                     l2623 0020                       l2615 000C                       l3079 0804  
                     l2551 1DE5                       l2543 1DD6                       l2535 1DC6  
                     l2607 1D4F                       l2529 1B76                       l3521 1A74  
                     l3433 12C2                       l3425 12AE                       l3417 1297  
                     l3409 127E                       l3361 11CF                       l3353 11BF  
                     l3345 11AC                       l3337 119D                       l3513 1FF6  
                     l3505 1FCD                       l3257 1F42                       l3249 1EDC  
                     l3265 1A02                       l2801 1763                       l2721 1601  
                     l2713 15F1                       l2705 15E1                       l3329 1A96  
                     l3281 1E54                       l3273 1E35                       l3193 1AB6  
                     l3169 1143                       l3089 1015                       l2633 0043  
                     l2625 0024                       l2617 0012                       l2641 1B08  
                     l2561 1E0B                       l2553 1DEC                       l2545 1DDA  
                     l2537 1DCB                       l2609 1D54                       l3531 1C59  
                     l3523 1A79                       l3451 1313                       l3443 12E3  
                     l3435 12C3                       l3427 12AF                       l3419 129F  
                     l3363 11D4                       l3371 11E4                       l3355 11C4  
                     l3347 11B4                       l3339 11A1                       l3515 1FF7  
                     l3507 1FD7                       l3259 1F44                       l3267 1A04  
                     l2811 177A                       l2803 176C                       l2731 1615  
                     l2723 1605                       l2715 15F5                       l2707 15E5  
                     l3283 1E5C                       l3195 1AB8                       l3187 1177  
                     l3179 115E                       l2627 0035                       l2619 0015  
                     l2635 0049                       l2651 1B24                       l2643 1B0B  
                     l2571 1E23                       l2563 1E0C                       l2555 1DF0  
                     l2547 1DDC                       l2539 1DCD                       l3611 00F7  
                     l3603 00C1                       l3533 1C5F                       l3525 1A80  
                     l3541 1B7A                       l3461 1347                       l3445 12E8  
                     l3453 1319                       l3437 12C7                       l3429 12B8  
                     l3373 11F4                       l3381 120D                       l3365 11D9  
                     l3357 11CA                       l3349 11B5                       l2901 0D1C  
                     l3509 1FED                       l2821 178A                       l2813 177F  
                     l2805 1770                       l2741 1626                       l2733 1619  
                     l2725 1609                       l2717 15F9                       l2709 15E9  
                     l2661 1578                       l3293 1E6A                       l3285 1E5E  
                     l3277 1E3E                       l3197 1ABC                       l3189 1187  
                     l2629 003B                       l2653 1B2A                       l2645 1B12  
                     l2565 1E13                       l2557 1DF4                       l2549 1DE2  
                     l2581 1D0A                       l3701 048E                       l3621 013F  
                     l3613 0105                       l3605 00E3                       l3535 1C68  
                     l3527 1A86                       l3519 1A6F                       l3543 1B7D  
                     l3463 134F                       l3455 1326                       l3447 12F6  
                     l3439 12DB                       l3391 1235                       l3383 1212  
                     l3375 1200                       l3367 11E1                       l3359 11CE  
                     l2911 0DAA                       l2903 0D29                       l2831 17AB  
                     l2823 1790                       l2807 1775                       l2815 1781  
                     l2751 166C                       l2743 163D                       l2735 161D  
                     l2727 160D                       l2719 15FD                       l2671 158F  
                     l2663 157F                       l3287 1E62                       l3295 1E7C  
                     l3279 1E53                       l3199 1AC9                       l2655 1B31  
                     l2647 1B16                       l2639 1B02                       l2559 1E05  
                     l2567 1E19                       l2591 1D1E                       l2583 1D0C  
                     l2575 1D00                       l3711 04F4                       l3703 04CD  
                     l3631 0180                       l3623 0143                       l3615 0109  
                     l3607 00EF                       l3537 1C77                       l3529 1A8B  
                     l3545 1B99                       l3561 1A0E                       l3553 1A05  
                     l3465 1356                       l3457 1334                       l3449 12FA  
                     l3393 123D                       l3377 1204                       l3369 11E2  
                     l2921 0E0C                       l2913 0DC6                       l2905 0D46  
                     l3481 1F60                       l2841 17E3                       l2833 17AF  
                     l2809 1778                       l2817 1785                       l2761 168B  
                     l2753 166D                       l2745 165D                       l2737 1621  
                     l2729 1611                       l2681 15A7                       l2673 1594  
                     l2665 1585                       l2649 1B1A                       l2657 1B37  
                     l2569 1E1E                       l2593 1D25                       l2585 1D10  
                     l2577 1D01                       l3721 052B                       l3713 0501  
                     l3705 04E1                       l3641 0207                       l3633 0193  
                     l3625 015C                       l3617 0122                       l3609 00F3  
                     l3539 1C7D                       l3547 1B9F                       l3563 1A0F  
                     l3555 1A09                       l3811 1A51                       l3467 135A  
                     l3459 1343                       l3395 1245                       l3387 121B  
                     l2499 1ADC                       l2931 0E9C                       l2923 0E29  
                     l2915 0DCF                       l2907 0D62                       l3491 1F8B  
                     l3483 1F70                       l3475 1F47                       l2851 17FA  
                     l2843 17E8                       l2835 17CD                       l2827 1798  
                     l2819 1786                       l2771 16B3                       l2755 1676  
                     l2747 1666                       l2739 1625                       l2691 15BD  
                     l2683 15AC                       l2675 159C                       l2667 1589  
                     l2595 1D29                       l2587 1D15                       l2579 1D05  
                     l3731 05EA                       l3723 0532                       l3715 0510  
                     l3707 04EA                       l3651 025B                       l3643 0220  
                     l3635 0197                       l3627 0167                       l3619 013B  
                     l3571 0051                       l3557 1A0A                       l3565 1A12  
                     l3813 1A59                       l3469 135C                       l3397 1247  
                     l3389 122D                       l2941 0F2E                       l2933 0EC9  
                     l2925 0E42                       l2917 0DDF                       l2909 0D8E  
                     l2861 0CB0                       l3493 1F92                       l3477 1F4C  
                     l3549 1C0D                       l2853 17FE                       l2845 17E9  
                     l2837 17D6                       l2829 179D                       l2781 16CC  
                     l2773 16BC                       l2765 1694                       l2749 1668  
                     l2757 167A                       l2693 15BE                       l2685 15B2  
                     l2677 159D                       l2669 158A                       l2597 1D2D  
                     l2589 1D1B                       l3741 069F                       l3733 0629  
                     l3725 0536                       l3717 0517                       l3709 04EE  
                     l3661 0302                       l3653 02A2                       l3645 0229  
                     l3637 019D                       l3629 016D                       l3581 006A  
                     l3573 0056                       l3901 08E1                       l3559 1A0B  
                     l3567 1A1D                       l3815 1A5D                       l3399 124C  
                     l2943 0F37                       l2951 0F4B                       l2935 0EEF  
                     l2927 0E5F                       l2919 0DFC                       l2871 0CC5  
                     l2863 0CB1                       l2855 0C9F                       l3495 1F96  
                     l3487 1F79                       l3479 1F50                       l2847 17ED  
                     l2839 17DB                       l2791 1730                       l2775 16BE  
                     l2767 16AB                       l2759 1686                       l2783 16D1  
                     l2695 15C3                       l2687 15B3                       l2679 159F  
                     l2599 1D37                       l3751 06C5                       l3743 06A3  
                     l3735 0635                       l3727 0554                       l3719 0526  
                     l3663 031D                       l3655 02B1                       l3647 0244  
                     l3639 01BC                       l3591 0093                       l3583 0076  
                     l3575 005C                       l3911 090A                       l3903 08E9  
                     l3831 081C                       l3817 1A6B                       l3809 1A50  
                     l2953 0F4F                       l2945 0F3B                       l2937 0F17  
                     l2929 0E8C                       l2881 0CDD                       l2873 0CCD  
                     l2865 0CB6                       l2857 0CA6                       l3497 1FA4  
                     l3489 1F7E                       l2849 17EF                       l2785 16E7  
                     l2793 173F                       l2777 16C2                       l2769 16AF  
                     l2697 15C8                       l2689 15B9                       l3761 06E6  
                     l3753 06C9                       l3745 06A9                       l3729 05AF  
                     l3737 0690                       l3681 03F8                       l3673 036B  
                     l3665 0326                       l3657 02CC                       l3649 024C  
                     l3593 00A6                       l3585 0077                       l3577 0063  
                     l3921 0918                       l3913 090D                       l3905 08F2  
                     l3841 0825                       l3833 081D                       l3825 0814  
                     l2971 0FA0                       l2963 0F70                       l2955 0F50  
                     l2947 0F3C                       l2939 0F20                       l2891 0CF9  
                     l2883 0CE2                       l2875 0CD2                       l2867 0CBB  
                     l2859 0CAC                       l3499 1FB4                       l2795 1755  
                     l2787 1725                       l2779 16C3                       l2699 15D0  
                     l3763 06EC                       l3755 06CD                       l3739 0698  
                     l3691 0431                       l3667 032E                       l3659 02F3  
                     l3675 0374                       l3747 06B0                       l3595 00AA  
                     l3587 007B                       l3579 0068                       l3907 08F8  
                     l3915 090E                       l3851 0834                       l3843 0828  
                     l3835 081E                       l3827 0818                       l2981 0FD7  
                     l2965 0F75                       l2973 0FA6                       l2957 0F54  
                     l2949 0F45                       l2893 0CFE                       l2885 0CE7  
                     l2877 0CD8                       l2869 0CC3                       l2797 175A  
                     l2789 172B                       l3781 074A                       l3773 0725  
                     l3757 06D8                       l3749 06C1                       l3693 043B  
                     l3677 03A9                       l3669 034C                       l3589 007E  
                     l3597 00BB                       l3925 091B                       l3909 0903  
                     l3861 0840                       l3853 0837                       l3845 0829  
                     l3837 0822                       l3829 0819                       l2991 0FF7  
                     l2983 0FD9                       l2975 0FB3                       l2967 0F83  
                     l2959 0F68                       l2895 0D03                       l2887 0CEF  
                     l2879 0CDC                       l3791 07C2                       l3783 0753  
                     l3775 072F                       l3759 06DE                       l3695 0447  
                     l3687 03FA                       l3679 03F6                       l3599 00BD  
                     l3919 0913                       l3927 092D                       l3871 0849  
                     l3863 0843                       l3855 0838                       l3847 082A  
                     l3839 0824                       l2985 0FE7                       l2977 0FBE  
                     l2969 0F87                       l2889 0CF1                       l3785 0761  
                     l3777 073A                       l3769 06EE                       l3697 044E  
                     l3881 0855                       l3873 084A                       l3865 0844  
                     l3857 083B                       l3849 082F                       l2995 1A36  
                     l2987 0FEB                       l2979 0FCD                       l2899 0D0C  
                     l3787 0768                       l3795 07CA                       l3779 073B  
                     l3699 0453                       l3891 0873                       l3883 0860  
                     l3875 084B                       l3867 0845                       l3859 083F  
                     l2997 1A39                       l2989 0FEC                       l3789 076D  
                     l3797 07D8                       l3893 087C                       l3885 0867  
                     l3877 084C                       l3869 0848                       l2999 1A3F  
                     l3799 07EA                       l3895 089C                       l3887 086A  
                     l3879 084F                       l3897 08BA                       l3889 086B  
                     l3995 0925                       l3899 08DB                       l3997 00D5  
                     STR_1 18B0                       STR_2 18A0                       u3200 1B53  
                     u4000 17DB                       u3201 1B52                       u4001 17DA  
                     u3210 1B5A                       u4010 17E8                       u3211 1B59  
                     u4011 17E7                       u3220 1B61                       u4100 0CFE  
                     u4020 17ED                       u3300 1DF4                       u3221 1B60  
                     u4101 0CFD                       u4021 17EC                       u3301 1DF3  
                     u3230 1B68                       u3150 1AE9                       u4110 0D03  
                     u4030 17FE                       u3231 1B67                       u3151 1AE8  
                     u4111 0D02                       u4031 17FD                       u3240 1B6F  
                     u4040 0CB0                       u5000 1D69                       u3320 1E05  
                     u3400 1D2D                       u3241 1B6E                       u4201 0E51  
                     u4121 0D54                       u4041 0CAF                       u5001 1D68  
                     u3321 1E04                       u3401 1D2C                       u3250 1B76  
                     u3170 1AFD                       u4202 0E58                       u4122 0D5B  
                     u4050 0CB6                       u3410 1D37                       u3251 1B75  
                     u3171 1AFC                       u4211 0E7E                       u4203 0E5F  
                     u4131 0D70                       u4123 0D62                       u4051 0CB5  
                     u3315 1DF5                       u3411 1D36                       u3180 1B41  
                     u4212 0E85                       u4132 0D77                       u4060 0CBB  
                     u5100 1EB8                       u5020 1D7D                       u3340 1E19  
                     u3260 1DC6                       u3181 1B40                       u3165 1AF0  
                     u4221 0EAB                       u4213 0E8C                       u4141 0D9C  
                     u4133 0D7E                       u4061 0CBA                       u5101 1EB7  
                     u5021 1D7C                       u3341 1E18                       u3325 1E01  
                     u3261 1DC5                       u3190 1B4C                       u4310 0F4F  
                     u4230 0ED5                       u4222 0EB2                       u4142 0DA3  
                     u4070 0CDC                       u5110 1ED4                       u3510 0049  
                     u3350 1E1E                       u3270 1DD1                       u3430 1D4A  
                     u3191 1B4B                       u4311 0F4E                       u4223 0EB9  
                     u4151 0DB8                       u4143 0DAA                       u4071 0CDB  
                     u5111 1ED3                       u5015 1D6E                       u3511 0048  
                     u3351 1E1D                       u3335 1E0D                       u3271 1DD0  
                     u3431 1D49                       u3415 1D33                       u4400 0FEB  
                     u4320 0F54                       u4152 0DBF                       u4080 0CE2  
                     u5120 1EE0                       u3600 1594                       u5200 1E62  
                     u5040 1D98                       u3520 1B08                       u3280 1DE2  
                     u3440 1D4F                       u3360 1D05                       u6000 043B  
                     u4401 0FEA                       u4321 0F53                       u4305 0F3E  
                     u4241 0EE1                       u4153 0DC6                       u4081 0CE1  
                     u5121 1EDF                       u3601 1593                       u5201 1E61  
                     u5041 1D97                       u3505 003D                       u3521 1B07  
                     u3281 1DE1                       u3441 1D4E                       u3425 1D3E  
                     u3361 1D04                       u6001 043A                       u4410 100C  
                     u4330 0F68                       u4250 0EFD                       u4242 0EE8  
                     u4090 0CE7                       u3610 15B2                       u5210 1E69  
                     u3450 0012                       u3370 1D10                       u6010 0447  
                     u4411 100B                       u4331 0F67                       u4243 0EEF  
                     u4235 0ED0                       u4171 0DEE                       u4091 0CE6  
                     u5131 1EEF                       u3611 15B1                       u5211 1E68  
                     u5035 1D7F                       u3451 0011                       u3371 1D0F  
                     u6011 0446                       u4420 1012                       u4340 0F6F  
                     u4172 0DF5                       u5140 1F08                       u5132 1EF0  
                     u3700 165D                       u3620 15BD                       u5060 1DB6  
                     u5300 1CC8                       u3540 1B1A                       u3380 1D1B  
                     u6100 06AF                       u4421 1011                       u4341 0F6E  
                     u4261 0F09                       u4181 0E1B                       u4173 0DFC  
                     u4165 0DC8                       u5141 1F07                       u5133 1EF5  
                     u3701 165C                       u3621 15BC                       u5061 1DB5  
                     u5045 1D94                       u5301 1CC7                       u3541 1B19  
                     u3381 1D1A                       u6101 06AE                       u4350 0F75  
                     u4262 0F10                       u4182 0E22                       u5070 1BD0  
                     u5134 1EF6                       u3710 166C                       u3630 15C3  
                     u5230 1E7B                       u5310 1CDA                       u3470 0024  
                     u3550 1B24                       u4430 1376                       u4510 0947  
                     u6110 06C9                       u6030 04E0                       u4351 0F74  
                     u4263 0F17                       u4255 0EF8                       u4183 0E29  
                     u5071 1BCF                       u5151 1F17                       u5135 1EFB  
                     u3711 166B                       u3631 15C2                       u5231 1E7A  
                     u5055 1DA8                       u5311 1CD9                       u3471 0023  
                     u3551 1B23                       u3535 1B0C                       u4431 1375  
                     u3295 1DE6                       u4511 0946                       u6111 06C8  
                     u6031 04DF                       u5400 11F4                       u4360 0F87  
                     u5080 1BEC                       u5160 1F42                       u5152 1F18  
                     u5136 1EFC                       u3640 15C8                       u5240 1E82  
                     u4600 0AFB                       u4520 0950                       u6120 06DE  
                     u6040 0501                       u5401 11F3                       u4361 0F86  
                     u5081 1BEB                       u5161 1F41                       u5153 1F1D  
                     u3641 15C7                       u5241 1E81                       u5225 1E6B  
                     u3465 0016                       u4505 153F                       u4601 0AFA  
                     u4521 094F                       u6121 06DD                       u6041 0500  
                     u6025 0456                       u5410 1212                       u4370 0F96  
                     u4290 0F3B                       u5090 1C06                       u5154 1F1E  
                     u5170 1A02                       u3810 16E7                       u3730 1682  
                     u3650 15E1                       u5330 1CF7                       u3490 0035  
                     u3570 1B37                       u6210 07D8                       u6130 06E6  
                     u6050 0510                       u5411 1211                       u4291 0F3A  
                     u4275 0F19                       u4195 0E2B                       u5091 1C05  
                     u5155 1F23                       u5171 1A01                       u3811 16E6  
                     u3731 1681                       u3651 15E0                       u5331 1CF6  
                     u5315 1CD6                       u3491 0034                       u3571 1B36  
                     u3555 1B20                       u3395 1D1F                       u6211 07D7  
                     u6131 06E5                       u6051 050F                       u5420 124C  
                     u5340 11A1                       u4380 0FB3                       u5156 1F24  
                     u3900 177F                       u3740 1686                       u3660 15E5  
                     u3580 1589                       u5260 1E93                       u5180 1E35  
                     u4700 1028                       u6220 07EA                       u6060 052B  
                     u5421 124B                       u5341 11A0                       u4381 0FB2  
                     u4285 0F30                       u5165 1F3E                       u3901 177E  
                     u3821 16FE                       u3813 16E3                       u3805 16C5  
                     u3741 1685                       u3725 166F                       u3661 15E4  
                     u3581 1588                       u5261 1E92                       u5181 1E34  
                     u5325 1CE9                       u4701 1027                       u3485 0025  
                     u3565 1B2B                       u4445 1393                       u6221 07E9  
                     u6205 077C                       u6061 052A                       u6045 04FD  
                     u6230 1A65                       u5510 12AE                       u5350 11A7  
                     u4390 0FCD                       u3910 1785                       u3830 1712  
                     u3822 16FF                       u3750 168B                       u3670 163D  
                     u3590 158F                       u5270 1E98                       u5190 1E4C  
                     u4710 1042                       u4470 1489                       u6150 0724  
                     u6231 1A64                       u5511 12AD                       u5351 11A6  
                     u4391 0FCC                       u4375 0F91                       u5095 1C02  
                     u3911 1784                       u3831 1713                       u3823 1704  
                     u3751 168A                       u3671 163C                       u3591 158E  
                     u5271 1E97                       u5255 1E85                       u4711 1041  
                     u3495 0031                       u4471 1488                       u4455 13ED  
                     u4615 0B1B                       u4535 0970                       u6151 0723  
                     u6055 050C                       u6240 1A6B                       u5600 1326  
                     u5360 11AC                       u3920 178A                       u3840 1730  
                     u3832 1718                       u3824 1705                       u3680 1648  
                     u5280 1CB4                       u4800 10B8                       u4640 0BEA  
                     u4560 0A3F                       u6160 072F                       u6241 1A6A  
                     u5601 1325                       u5505 12A3                       u5361 11AB  
                     u4385 0FAF                       u3921 1789                       u3841 172F  
                     u3833 1719                       u3825 170A                       u3761 169D  
                     u3681 1646                       u5281 1CB3                       u4801 10B7  
                     u4465 1442                       u4641 0BE9                       u4625 0B57  
                     u4561 0A3E                       u4545 09AC                       u6161 072E  
                     u6145 06F1                       u5610 1343                       u5530 12C2  
                     u5450 1262                       u5370 11CE                       u3930 1790  
                     u3850 1755                       u3826 170B                       u3770 16AF  
                     u3762 16A4                       u3690 1649                       u4730 107B  
                     u6170 073A                       u6090 0697                       u6250 0855  
                     u5611 1342                       u5531 12C1                       u5451 1261  
                     u5435 124E                       u5371 11CD                       u4395 0FC9  
                     u3931 178F                       u3851 1754                       u3771 16AE  
                     u3763 16AB                       u3675 1639                       u5195 1E47  
                     u4731 107A                       u4635 0BA2                       u4555 09F7  
                     u6171 0739                       u6155 0720                       u6091 0696  
                     u6075 05B2                       u6307 0935                       u6251 0854  
                     u5620 135A                       u5540 12C7                       u5380 11D4  
                     u3940 1797                       u3860 175A                       u3780 16B3  
                     u4900 115D                       u4820 10C9                       u6180 074A  
                     u6260 08F8                       u6317 1A2E                       u5621 1359  
                     u5605 1322                       u5541 12C6                       u5525 12B1  
                     u5445 1257                       u5381 11D3                       u3941 1796  
                     u3861 1759                       u3781 16B2                       u4901 115C  
                     u4821 10C8                       u4725 1066                       u4485 14A6  
                     u6181 0749                       u6085 0638                       u6261 08F7  
                     u5550 12DB                       u5470 127E                       u5390 11D9  
                     u5710 1FC3                       u5630 1F4C                       u3950 179D  
                     u3790 16C2                       u4830 10DF                       u4750 1094  
                     u6190 0761                       u6270 0912                       u6327 1C63  
                     u5615 133F                       u5551 12DA                       u5471 127D  
                     u5391 11D8                       u5711 1FC2                       u5631 1F4B  
                     u3951 179C                       u3791 16C1                       u5295 1CB9  
                     u4831 10DE                       u4815 10BB                       u4751 1093  
                     u4735 1077                       u4495 14F3                       u4655 0BFD  
                     u4575 0A52                       u6191 0760                       u6175 0736  
                     u6271 0911                       u5800 1BA9                       u5560 12E2  
                     u5480 1297                       u5720 1FC9                       u5640 1F50  
                     u3960 17AF                       u3880 1770                       u4920 116F  
                     u4840 10F3                       u4760 1098                       u4680 080A  
                     u6337 1C72                       u5561 12E1                       u5481 1296  
                     u5465 1265                       u5721 1FC8                       u5705 1FB8  
                     u5641 1F4F                       u3961 17AE                       u3881 176F  
                     u4921 116E                       u4841 10F2                       u4761 1097  
                     u4745 1087                       u4681 0809                       u4665 0C39  
                     u4585 0A8E                       u6185 0746                       u5810 1BBB  
                     u5570 12E8                       u5490 129F                       u5730 1FCD  
                     u5650 1F70                       u3970 17BE                       u3890 1775  
                     u4930 1176                       u4770 109F                       u4690 0810  
                     u6347 1C81                       u5811 1BBA                       u5571 12E7  
                     u5491 129E                       u5475 127A                       u5731 1FCC  
                     u5651 1F6F                       u3891 1774                       u3875 1765  
                     u4931 1175                       u4915 115F                       u4771 109E  
                     u4691 080F                       u4675 0C75                       u4595 0ACA  
                     u5580 12FA                       u5740 1FE2                       u3980 17CD  
                     u4860 1134                       u5900 0220                       u5820 005C  
                     u6357 1A46                       u5581 12F9                       u3981 17CC  
                     u4861 1133                       u5901 021F                       u5821 005B  
                     u5590 1309                       u5750 1FF2                       u5670 1F91  
                     u3990 17D6                       u4950 1187                       u4790 10B1  
                     u5910 0244                       u5830 0076                       u5751 1FF1  
                     u5671 1F90                       u3991 17D5                       u3975 17B9  
                     u4951 1186                       u4855 111B                       u4791 10B0  
                     u5911 0243                       u5831 0075                       u6287 0864  
                     u5760 1FF6                       u4960 1ABC                       u4880 1152  
                     u5920 025B                       u5840 00BA                       u5761 1FF5  
                     u5745 1FDD                       u5665 1F83                       u4961 1ABB  
                     u4945 1179                       u4881 1151                       u4865 1130  
                     u4785 10A1                       u5921 025A                       u5841 00B9  
                     u6297 0907                       u5770 1A74                       u5690 1FB3  
                     u4890 1156                       u5930 02B1                       u5850 00EF  
                     u5771 1A73                       u5595 1304                       u5691 1FB2  
                     u4891 1155                       u4875 1145                       u5931 02B0  
                     u5851 00EE                       u5780 1A86                       u5940 02CC  
                     u5860 00F3                       u5781 1A85                       u5685 1FA5  
                     u5941 02CB                       u5925 0257                       u5861 00F2  
                     u5790 1B87                       u4990 1AD6                       u5950 02F3  
                     u5870 0122                       u4991 1AD5                       u4975 1AC3  
                     u5951 02F2                       u5935 02AD                       u5871 0121  
                     u5960 0302                       u5880 015C                       u4985 1ACA  
                     u5961 0301                       u5881 015B                       u5970 031D  
                     u5890 0197                       u5971 031C                       u5891 0196  
                     u5965 02FE                       u5990 0430                       u5991 042F  
                     u5985 03FD                       u5995 042C          ?_Lcd_Write_String 0073  
                     _main 0814                       btemp 007E                       _volt 00D7  
                     start 0000         ??_Lcd_Write_String 0075            ___fldiv@new_exp 0050  
             _sprintf$1319 00B0            __end_of_Lcd_Cmd 1A4F               ?_enviocadena 0070  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 136D            __end_of___awdiv 1E28            __end_of___flneg 1A05  
                    _EEADR 010D                      _EEDAT 010C            __end_of___awmod 1D59  
          __end_of___flmul 1000            __end_of___flsub 1AB6            __end_of___fltol 1EA4  
          __end_of___lldiv 1DBF            ___awdiv@divisor 0077            __end_of___llmod 1D00  
          __end_of___lwdiv 004E            __end_of___lwmod 1B3C            ___awdiv@counter 0020  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTC 0007                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    _TXREG 0019             adc_canal@canal 0071                      _adc_c 1A05  
          __end_of_dpowers 18A0                      _scale 0940            __end_of_isdigit 0814  
   __size_of_enviocaracter 0010                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07EF           __end_of_Lcd_Init 1CAA  
         __end_of_Lcd_Port 1B7A            __initialization 07EF               __end_of_main 0940  
                   ??_main 00C9       __size_of__tdiv_to_l_ 00BD                     ?_adc_c 0070  
         ___llmod@dividend 0024                     ?_scale 003E                     _ADRESH 001E  
                   _EECON2 018D           ___awdiv@dividend 0079                     _ANSELH 0189  
                ??_Lcd_Cmd 0071                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
         __end_of___xxtofl 2000           __end_of__powers_ 1844                     ___flge 1EA4  
                   ___fleq 1BBC                  ??___fladd 005A                     ___wmul 1AB6  
                ??___fldiv 0046                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0028  
            _enviocaracter 1005                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _mapear 1C0A                     _pcchar 006E                     _fround 136D  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_sprintf 00AB  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070         __size_of_adc_canal 000E  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_adc_c 1A11  
           ?_enviocaracter 0070       __size_of_enviocadena 001F              __end_of_scale 0C9F  
           _Lcd_Set_Cursor 1A6E                 __div_to_l_ 10D2                    ??_adc_c 0070  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0042            __div_to_l_@quot 0020  
               __pbssBANK0 006E                 __pbssBANK1 00CC              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1B02                 __pmaintext 0814  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_mapear 0058                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 1A92          __end_of_adc_canal 1A1F                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070             enviocaracter@a 0070  
               __stringtab 1800             _Lcd_Write_Char 1A1F                    _Lcd_Cmd 1A35  
        __end_of__npowers_ 1878                 _scale$1318 004C            ??_enviocaracter 0070  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 1578  
                  ___fldiv 1190                    ___awdiv 1DBF                    ___flneg 19FA  
                  ___awmod 1D00                    ___flmul 0C9F                    ___flsub 1A92  
                  ___fltol 1E28                    ___lldiv 1D59            __size_of___wmul 0025  
                  ___llmod 1CAA                    ___lwdiv 000A                    ___lwmod 1B02  
          __size_of_mapear 004F                  _ANSELbits 0188            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 004E                    __ptext2 0940  
                  __ptext3 1D00                    __ptext4 1DBF                    __ptext5 0802  
                  __ptext6 136D                    __ptext7 1B02                    __ptext8 000A  
                  __ptext9 1015                ?__div_to_l_ 0070                    _dpowers 1878  
                  _isdigit 0802                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sprintf 004E                    clrloop0 19F3     __end_of_Lcd_Write_Char 1A35  
     end_of_initialization 07FC            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018                  Lcd_Port@a 0070             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078                ___fladd@grs 0065  
            ___xxtofl@sign 0078                ___fldiv@grs 0052                ___fldiv@rem 004B  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
              ___flmul@grs 0032                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
           __end_of___flge 1F46             __end_of___fleq 1C0A             __end_of___wmul 1ADB  
         _Lcd_Write_String 1B7A                _BAUDCTLbits 0187             __end_of_mapear 1C59  
           __end_of_fround 1578        start_initialization 07EF        __end_of__tdiv_to_l_ 10D2  
        __size_of_Lcd_Init 0051          __size_of_Lcd_Port 003E            ___llmod@divisor 0020  
          ___llmod@counter 0029              ??_enviocadena 0071                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 1ADB  
                 ??_mapear 005C            Lcd_Write_Char@a 0072                   ??_fround 0042  
            sprintf@tmpval 00B9                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___fldiv@a 003E                  ___fldiv@b 0042  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                  _adc_canal 1A11          __size_of___xxtofl 00BA  
             _isdigit$1119 0070                   ?_Lcd_Cmd 0070                sprintf@flag 00B5  
              sprintf@eexp 00B7                sprintf@fval 00C2                sprintf@prec 00C6  
         ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___fldiv 003E                   ?___awdiv 0077                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0024                   ?___flsub 0066  
                 ?___fltol 0051                   ?___lldiv 0070                   ?___llmod 0020  
                __npowers_ 1844                 ?__Umul8_16 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070        __end_of_enviocadena 1A6E                  __pstrings 1800  
              __tdiv_to_l_ 1015               ??__div_to_l_ 0078                   ?_isdigit 0070  
               ?_adc_canal 0070             __size_of_adc_c 000C           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 035F             ___wmul@product 0074  
                clear_ram0 19F2                   _PIE1bits 008C                   Lcd_Cmd@a 0073  
                 _PIR1bits 000C         __end_of__div_to_l_ 1190                   _PIR2bits 000D  
    __end_of_enviocaracter 1015                 _ADCON0bits 001F                __stringbase 180F  
               _ADCON1bits 009F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 1C59                   _Lcd_Port 1B3C          enviocadena@cadena 0072  
 __end_of_Lcd_Write_String 1BBC           __size_of_Lcd_Cmd 001A                 _EECON1bits 018C  
              _enviocadena 1A4F                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___fldiv 01DD           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0024  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0056  
         __size_of___lwdiv 0044           __size_of___lwmod 003A                _fround$1316 004D  
              _fround$1317 0049         __end_of__stringtab 1810                 sprintf@val 00BD  
                 ___xxtofl 1F46           __size_of_isdigit 0012                ??_adc_canal 0070  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   __ptext10 10D2  
                 __ptext11 1AB6                   __ptext20 1C0A                   __ptext12 1CAA  
                 __ptext21 1F46                   __ptext13 1D59                   __ptext30 1A1F  
                 __ptext22 0C9F                   __ptext14 1E28                   __ptext31 1A6E  
                 __ptext23 1ADB                   __ptext15 1A92                   __ptext32 1C59  
                 __ptext24 1190                   __ptext16 1578                   __ptext33 1A35  
                 __ptext25 1A4F                   __ptext17 19FA                   __ptext34 1B3C  
                 __ptext26 1005                   __ptext18 1EA4                   __ptext27 1A11  
                 __ptext19 1BBC                   __ptext28 1A05                   __ptext29 1B7A  
                 __powers_ 1810           __size_of_sprintf 07A1              __size_of_main 012C  
               _INTCONbits 000B                   isdigit@c 0071                   scale@scl 0050  
                sprintf@ap 00B4           __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024  
                sprintf@sp 00C1           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 180A                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C8                   sprintf@f 00A0           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 180A  
                 stringtab 1800             mapear@adresval 0060              ___fladd@signs 0062  
             ___fladd@aexp 0063               ___fladd@bexp 0064       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
