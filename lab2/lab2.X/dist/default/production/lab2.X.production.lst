

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 03 23:56:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001D                     	;# 
   351  001E                     	;# 
   352  001F                     	;# 
   353  0081                     	;# 
   354  0085                     	;# 
   355  0086                     	;# 
   356  0087                     	;# 
   357  0088                     	;# 
   358  0089                     	;# 
   359  008C                     	;# 
   360  008D                     	;# 
   361  008E                     	;# 
   362  008F                     	;# 
   363  0090                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009C                     	;# 
   378  009D                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  0105                     	;# 
   382  0107                     	;# 
   383  0108                     	;# 
   384  0109                     	;# 
   385  010C                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  010F                     	;# 
   390  0185                     	;# 
   391  0187                     	;# 
   392  0188                     	;# 
   393  0189                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  000E                     	;# 
   412  000F                     	;# 
   413  0010                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0013                     	;# 
   417  0014                     	;# 
   418  0015                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0017                     	;# 
   422  0018                     	;# 
   423  0019                     	;# 
   424  001A                     	;# 
   425  001B                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001D                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  0081                     	;# 
   432  0085                     	;# 
   433  0086                     	;# 
   434  0087                     	;# 
   435  0088                     	;# 
   436  0089                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  008E                     	;# 
   440  008F                     	;# 
   441  0090                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0094                     	;# 
   448  0095                     	;# 
   449  0096                     	;# 
   450  0097                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009A                     	;# 
   454  009B                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  009F                     	;# 
   459  0105                     	;# 
   460  0107                     	;# 
   461  0108                     	;# 
   462  0109                     	;# 
   463  010C                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  010F                     	;# 
   468  0185                     	;# 
   469  0187                     	;# 
   470  0188                     	;# 
   471  0189                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  000E                     	;# 
   490  000F                     	;# 
   491  0010                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0013                     	;# 
   495  0014                     	;# 
   496  0015                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0017                     	;# 
   500  0018                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  001D                     	;# 
   507  001E                     	;# 
   508  001F                     	;# 
   509  0081                     	;# 
   510  0085                     	;# 
   511  0086                     	;# 
   512  0087                     	;# 
   513  0088                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  008F                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0095                     	;# 
   527  0096                     	;# 
   528  0097                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009A                     	;# 
   532  009B                     	;# 
   533  009C                     	;# 
   534  009D                     	;# 
   535  009E                     	;# 
   536  009F                     	;# 
   537  0105                     	;# 
   538  0107                     	;# 
   539  0108                     	;# 
   540  0109                     	;# 
   541  010C                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  010F                     	;# 
   546  0185                     	;# 
   547  0187                     	;# 
   548  0188                     	;# 
   549  0189                     	;# 
   550  018C                     	;# 
   551  018D                     	;# 
   552                           
   553                           	psect	strings
   554  1800                     __pstrings:
   555  1800                     stringtab:
   556  1800                     __stringtab:
   557                           
   558                           ;	String table - string pointers are 1 byte each
   559  1800  1BFF               	btfsc	btemp+1,7
   560  1801  280A               	ljmp	stringcode
   561  1802  1383               	bcf	3,7
   562  1803  187F               	btfsc	btemp+1,0
   563  1804  1783               	bsf	3,7
   564  1805  0800               	movf	0,w
   565  1806  0A84               	incf	4,f
   566  1807  1903               	skipnz
   567  1808  0AFF               	incf	btemp+1,f
   568  1809  0008               	return
   569  180A                     stringcode:
   570  180A                     stringdir:
   571  180A  3018               	movlw	high stringdir
   572  180B  008A               	movwf	10
   573  180C  0804               	movf	4,w
   574  180D  0A84               	incf	4,f
   575  180E  0782               	addwf	2,f
   576  180F                     __stringbase:
   577  180F  3400               	retlw	0
   578  1810                     __end_of__stringtab:
   579  1810                     __powers_:
   580  1810  3400               	retlw	0
   581  1811  3400               	retlw	0
   582  1812  3480               	retlw	128
   583  1813  343F               	retlw	63
   584  1814  3400               	retlw	0
   585  1815  3400               	retlw	0
   586  1816  3420               	retlw	32
   587  1817  3441               	retlw	65
   588  1818  3400               	retlw	0
   589  1819  3400               	retlw	0
   590  181A  34C8               	retlw	200
   591  181B  3442               	retlw	66
   592  181C  3400               	retlw	0
   593  181D  3400               	retlw	0
   594  181E  347A               	retlw	122
   595  181F  3444               	retlw	68
   596  1820  3400               	retlw	0
   597  1821  3440               	retlw	64
   598  1822  341C               	retlw	28
   599  1823  3446               	retlw	70
   600  1824  3400               	retlw	0
   601  1825  3450               	retlw	80
   602  1826  34C3               	retlw	195
   603  1827  3447               	retlw	71
   604  1828  3400               	retlw	0
   605  1829  3424               	retlw	36
   606  182A  3474               	retlw	116
   607  182B  3449               	retlw	73
   608  182C  3480               	retlw	128
   609  182D  3496               	retlw	150
   610  182E  3418               	retlw	24
   611  182F  344B               	retlw	75
   612  1830  3420               	retlw	32
   613  1831  34BC               	retlw	188
   614  1832  34BE               	retlw	190
   615  1833  344C               	retlw	76
   616  1834  3428               	retlw	40
   617  1835  346B               	retlw	107
   618  1836  346E               	retlw	110
   619  1837  344E               	retlw	78
   620  1838  34F9               	retlw	249
   621  1839  3402               	retlw	2
   622  183A  3415               	retlw	21
   623  183B  3450               	retlw	80
   624  183C  34EC               	retlw	236
   625  183D  3478               	retlw	120
   626  183E  34AD               	retlw	173
   627  183F  3460               	retlw	96
   628  1840  34CA               	retlw	202
   629  1841  34F2               	retlw	242
   630  1842  3449               	retlw	73
   631  1843  3471               	retlw	113
   632  1844                     __end_of__powers_:
   633  1844                     __npowers_:
   634  1844  3400               	retlw	0
   635  1845  3400               	retlw	0
   636  1846  3480               	retlw	128
   637  1847  343F               	retlw	63
   638  1848  34CD               	retlw	205
   639  1849  34CC               	retlw	204
   640  184A  34CC               	retlw	204
   641  184B  343D               	retlw	61
   642  184C  340A               	retlw	10
   643  184D  34D7               	retlw	215
   644  184E  3423               	retlw	35
   645  184F  343C               	retlw	60
   646  1850  346F               	retlw	111
   647  1851  3412               	retlw	18
   648  1852  3483               	retlw	131
   649  1853  343A               	retlw	58
   650  1854  3417               	retlw	23
   651  1855  34B7               	retlw	183
   652  1856  34D1               	retlw	209
   653  1857  3438               	retlw	56
   654  1858  34AC               	retlw	172
   655  1859  34C5               	retlw	197
   656  185A  3427               	retlw	39
   657  185B  3437               	retlw	55
   658  185C  34BD               	retlw	189
   659  185D  3437               	retlw	55
   660  185E  3486               	retlw	134
   661  185F  3435               	retlw	53
   662  1860  3495               	retlw	149
   663  1861  34BF               	retlw	191
   664  1862  34D6               	retlw	214
   665  1863  3433               	retlw	51
   666  1864  3477               	retlw	119
   667  1865  34CC               	retlw	204
   668  1866  342B               	retlw	43
   669  1867  3432               	retlw	50
   670  1868  345F               	retlw	95
   671  1869  3470               	retlw	112
   672  186A  3489               	retlw	137
   673  186B  3430               	retlw	48
   674  186C  34FF               	retlw	255
   675  186D  34E6               	retlw	230
   676  186E  34DB               	retlw	219
   677  186F  342E               	retlw	46
   678  1870  3408               	retlw	8
   679  1871  34E5               	retlw	229
   680  1872  343C               	retlw	60
   681  1873  341E               	retlw	30
   682  1874  3460               	retlw	96
   683  1875  3442               	retlw	66
   684  1876  34A2               	retlw	162
   685  1877  340D               	retlw	13
   686  1878                     __end_of__npowers_:
   687  1878                     _dpowers:
   688  1878  3401               	retlw	1
   689  1879  3400               	retlw	0
   690  187A  3400               	retlw	0
   691  187B  3400               	retlw	0
   692  187C  340A               	retlw	10
   693  187D  3400               	retlw	0
   694  187E  3400               	retlw	0
   695  187F  3400               	retlw	0
   696  1880  3464               	retlw	100
   697  1881  3400               	retlw	0
   698  1882  3400               	retlw	0
   699  1883  3400               	retlw	0
   700  1884  34E8               	retlw	232
   701  1885  3403               	retlw	3
   702  1886  3400               	retlw	0
   703  1887  3400               	retlw	0
   704  1888  3410               	retlw	16
   705  1889  3427               	retlw	39
   706  188A  3400               	retlw	0
   707  188B  3400               	retlw	0
   708  188C  34A0               	retlw	160
   709  188D  3486               	retlw	134
   710  188E  3401               	retlw	1
   711  188F  3400               	retlw	0
   712  1890  3440               	retlw	64
   713  1891  3442               	retlw	66
   714  1892  340F               	retlw	15
   715  1893  3400               	retlw	0
   716  1894  3480               	retlw	128
   717  1895  3496               	retlw	150
   718  1896  3498               	retlw	152
   719  1897  3400               	retlw	0
   720  1898  3400               	retlw	0
   721  1899  34E1               	retlw	225
   722  189A  34F5               	retlw	245
   723  189B  3405               	retlw	5
   724  189C  3400               	retlw	0
   725  189D  34CA               	retlw	202
   726  189E  349A               	retlw	154
   727  189F  343B               	retlw	59
   728  18A0                     __end_of_dpowers:
   729  0019                     _TXREG	set	25
   730  000D                     _PIR2bits	set	13
   731  001E                     _ADRESH	set	30
   732  001A                     _RCREG	set	26
   733  000C                     _PIR1bits	set	12
   734  001F                     _ADCON0bits	set	31
   735  000B                     _INTCONbits	set	11
   736  0018                     _RCSTAbits	set	24
   737  0008                     _PORTD	set	8
   738  0007                     _PORTC	set	7
   739  0005                     _PORTA	set	5
   740  0039                     _RC1	set	57
   741  0038                     _RC0	set	56
   742  0047                     _RD7	set	71
   743  0046                     _RD6	set	70
   744  0045                     _RD5	set	69
   745  0044                     _RD4	set	68
   746  0043                     _RD3	set	67
   747  0042                     _RD2	set	66
   748  0041                     _RD1	set	65
   749  0040                     _RD0	set	64
   750  009F                     _ADCON1bits	set	159
   751  008C                     _PIE1bits	set	140
   752  009A                     _SPBRGH	set	154
   753  0099                     _SPBRG	set	153
   754  0098                     _TXSTAbits	set	152
   755  0088                     _TRISD	set	136
   756  0087                     _TRISC	set	135
   757  0085                     _TRISA	set	133
   758  008F                     _OSCCONbits	set	143
   759  010C                     _EEDAT	set	268
   760  010D                     _EEADR	set	269
   761  018D                     _EECON2	set	397
   762  018C                     _EECON1bits	set	396
   763  0187                     _BAUDCTLbits	set	391
   764  0188                     _ANSELbits	set	392
   765  0189                     _ANSELH	set	393
   766  18A0                     STR_2:
   767  18A0  3425               	retlw	37	;'%'
   768  18A1  342E               	retlw	46	;'.'
   769  18A2  3432               	retlw	50	;'2'
   770  18A3  3466               	retlw	102	;'f'
   771  18A4  3420               	retlw	32	;' '
   772  18A5  3420               	retlw	32	;' '
   773  18A6  3425               	retlw	37	;'%'
   774  18A7  342E               	retlw	46	;'.'
   775  18A8  3432               	retlw	50	;'2'
   776  18A9  3466               	retlw	102	;'f'
   777  18AA  3420               	retlw	32	;' '
   778  18AB  3420               	retlw	32	;' '
   779  18AC  3425               	retlw	37	;'%'
   780  18AD  3464               	retlw	100	;'d'
   781  18AE  3400               	retlw	0
   782  18AF                     STR_1:
   783  18AF  3453               	retlw	83	;'S'
   784  18B0  3431               	retlw	49	;'1'
   785  18B1  3420               	retlw	32	;' '
   786  18B2  3420               	retlw	32	;' '
   787  18B3  3453               	retlw	83	;'S'
   788  18B4  3431               	retlw	49	;'1'
   789  18B5  3420               	retlw	32	;' '
   790  18B6  3420               	retlw	32	;' '
   791  18B7  3453               	retlw	83	;'S'
   792  18B8  3433               	retlw	51	;'3'
   793  18B9  3400               	retlw	0
   794                           
   795                           	psect	cinit
   796  07F0                     start_initialization:	
   797                           ; #config settings
   798                           
   799  07F0                     __initialization:
   800                           
   801                           ; Clear objects allocated to BANK0
   802  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   803  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   804  07F2  01EE               	clrf	__pbssBANK0& (0+127)
   805                           
   806                           ; Clear objects allocated to BANK1
   807  07F3  1383               	bcf	3,7	;select IRP bank0
   808  07F4  30CC               	movlw	low __pbssBANK1
   809  07F5  0084               	movwf	4
   810  07F6  30E7               	movlw	low (__pbssBANK1+27)
   811  07F7  120A  118A  2003  120A  118A  	fcall	clear_ram0
   812  07FC                     end_of_initialization:	
   813                           ;End of C runtime variable initialization code
   814                           
   815  07FC                     __end_of__initialization:
   816  07FC  0183               	clrf	3
   817  07FD  120A  158A  2814   	ljmp	_main	;jump to C main() function
   818                           
   819                           	psect	bssBANK0
   820  006E                     __pbssBANK0:
   821  006E                     _a:
   822  006E                     	ds	1
   823                           
   824                           	psect	bssBANK1
   825  00CC                     __pbssBANK1:
   826  00CC                     _S2:
   827  00CC                     	ds	4
   828  00D0                     _S1:
   829  00D0                     	ds	4
   830  00D4                     _pc:
   831  00D4                     	ds	1
   832  00D5                     _s2:
   833  00D5                     	ds	1
   834  00D6                     _s1:
   835  00D6                     	ds	1
   836  00D7                     _volt:
   837  00D7                     	ds	16
   838                           
   839                           	psect	clrtext
   840  0003                     clear_ram0:	
   841                           ;	Called with FSR containing the base address, and
   842                           ;	W with the last address+1
   843                           
   844  0003  0064               	clrwdt	;clear the watchdog before getting into this loop
   845  0004                     clrloop0:
   846  0004  0180               	clrf	0	;clear RAM location pointed to by FSR
   847  0005  0A84               	incf	4,f	;increment pointer
   848  0006  0604               	xorwf	4,w	;XOR with final address
   849  0007  1903               	btfsc	3,2	;have we reached the end yet?
   850  0008  3400               	retlw	0	;all done for this memory range, return
   851  0009  0604               	xorwf	4,w	;XOR again to restore value
   852  000A  2804               	goto	clrloop0	;do the next byte
   853                           
   854                           	psect	cstackBANK1
   855  00A0                     __pcstackBANK1:
   856  00A0                     ?_sprintf:
   857  00A0                     sprintf@f:	
   858                           ; 2 bytes @ 0x0
   859                           
   860                           
   861                           ; 1 bytes @ 0x0
   862  00A0                     	ds	11
   863  00AB                     ??_sprintf:
   864                           
   865                           ; 1 bytes @ 0xB
   866  00AB                     	ds	5
   867  00B0                     _sprintf$1318:
   868                           
   869                           ; 4 bytes @ 0x10
   870  00B0                     	ds	4
   871  00B4                     sprintf@ap:
   872                           
   873                           ; 1 bytes @ 0x14
   874  00B4                     	ds	1
   875  00B5                     sprintf@flag:
   876                           
   877                           ; 2 bytes @ 0x15
   878  00B5                     	ds	2
   879  00B7                     sprintf@eexp:
   880                           
   881                           ; 2 bytes @ 0x17
   882  00B7                     	ds	2
   883  00B9                     sprintf@tmpval:
   884                           
   885                           ; 4 bytes @ 0x19
   886  00B9                     	ds	4
   887  00BD                     sprintf@val:
   888                           
   889                           ; 4 bytes @ 0x1D
   890  00BD                     	ds	4
   891  00C1                     sprintf@sp:
   892                           
   893                           ; 1 bytes @ 0x21
   894  00C1                     	ds	1
   895  00C2                     sprintf@fval:
   896                           
   897                           ; 4 bytes @ 0x22
   898  00C2                     	ds	4
   899  00C6                     sprintf@prec:
   900                           
   901                           ; 2 bytes @ 0x26
   902  00C6                     	ds	2
   903  00C8                     sprintf@c:
   904                           
   905                           ; 1 bytes @ 0x28
   906  00C8                     	ds	1
   907  00C9                     ??_main:
   908                           
   909                           ; 1 bytes @ 0x29
   910  00C9                     	ds	3
   911                           
   912                           	psect	cstackCOMMON
   913  0070                     __pcstackCOMMON:
   914  0070                     ?_isdigit:
   915  0070                     ?___fleq:	
   916                           ; 1 bit 
   917                           
   918  0070                     ?___flge:	
   919                           ; 1 bit 
   920                           
   921  0070                     ?_adc_c:	
   922                           ; 1 bit 
   923                           
   924  0070                     ??_adc_c:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_adc_canal:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ??_adc_canal:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_enviocadena:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ??_isdigit:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_Lcd_Port:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ??_Lcd_Port:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_Lcd_Cmd:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_Lcd_Init:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_Lcd_Write_Char:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_main:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_enviocaracter:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ??_enviocaracter:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?__Umul8_16:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?___wmul:	
   967                           ; 2 bytes @ 0x0
   968                           
   969  0070                     ?___awmod:	
   970                           ; 2 bytes @ 0x0
   971                           
   972  0070                     ?___lwmod:	
   973                           ; 2 bytes @ 0x0
   974                           
   975  0070                     ?__tdiv_to_l_:	
   976                           ; 2 bytes @ 0x0
   977                           
   978  0070                     ?__div_to_l_:	
   979                           ; 4 bytes @ 0x0
   980                           
   981  0070                     ?___lldiv:	
   982                           ; 4 bytes @ 0x0
   983                           
   984  0070                     ?___flneg:	
   985                           ; 4 bytes @ 0x0
   986                           
   987  0070                     ?___xxtofl:	
   988                           ; 4 bytes @ 0x0
   989                           
   990  0070                     Lcd_Port@a:	
   991                           ; 4 bytes @ 0x0
   992                           
   993  0070                     enviocaracter@a:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     __Umul8_16@multiplicand:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     _isdigit$1118:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ___wmul@multiplier:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ___awmod@divisor:	
  1006                           ; 2 bytes @ 0x0
  1007                           
  1008  0070                     ___lwmod@divisor:	
  1009                           ; 2 bytes @ 0x0
  1010                           
  1011  0070                     ___lldiv@divisor:	
  1012                           ; 2 bytes @ 0x0
  1013                           
  1014  0070                     __div_to_l_@f1:	
  1015                           ; 4 bytes @ 0x0
  1016                           
  1017  0070                     ___fleq@ff1:	
  1018                           ; 4 bytes @ 0x0
  1019                           
  1020  0070                     ___flge@ff1:	
  1021                           ; 4 bytes @ 0x0
  1022                           
  1023  0070                     ___flneg@f1:	
  1024                           ; 4 bytes @ 0x0
  1025                           
  1026  0070                     __tdiv_to_l_@f1:	
  1027                           ; 4 bytes @ 0x0
  1028                           
  1029  0070                     ___xxtofl@val:	
  1030                           ; 4 bytes @ 0x0
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x0
  1034  0070                     	ds	1
  1035  0071                     ??_enviocadena:
  1036  0071                     ??_Lcd_Cmd:	
  1037                           ; 1 bytes @ 0x1
  1038                           
  1039  0071                     ??_Lcd_Write_Char:	
  1040                           ; 1 bytes @ 0x1
  1041                           
  1042  0071                     adc_canal@canal:	
  1043                           ; 1 bytes @ 0x1
  1044                           
  1045  0071                     isdigit@c:	
  1046                           ; 1 bytes @ 0x1
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0x1
  1050  0071                     	ds	1
  1051  0072                     ??__Umul8_16:
  1052  0072                     Lcd_Write_Char@a:	
  1053                           ; 1 bytes @ 0x2
  1054                           
  1055  0072                     enviocadena@cadena:	
  1056                           ; 1 bytes @ 0x2
  1057                           
  1058  0072                     ___wmul@multiplicand:	
  1059                           ; 1 bytes @ 0x2
  1060                           
  1061  0072                     ___awmod@dividend:	
  1062                           ; 2 bytes @ 0x2
  1063                           
  1064  0072                     ___lwmod@dividend:	
  1065                           ; 2 bytes @ 0x2
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x2
  1069  0072                     	ds	1
  1070  0073                     ?_Lcd_Write_String:
  1071  0073                     Lcd_Cmd@a:	
  1072                           ; 1 bytes @ 0x3
  1073                           
  1074  0073                     Lcd_Write_String@a:	
  1075                           ; 1 bytes @ 0x3
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x3
  1079  0073                     	ds	1
  1080  0074                     ?_Lcd_Set_Cursor:
  1081  0074                     ??_Lcd_Init:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084  0074                     ??___wmul:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087  0074                     ??___awmod:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090  0074                     ??___flneg:	
  1091                           ; 1 bytes @ 0x4
  1092                           
  1093  0074                     ??___lwmod:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0074                     ??___xxtofl:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099  0074                     Lcd_Set_Cursor@b:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102  0074                     ___wmul@product:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0074                     __Umul8_16@product:	
  1106                           ; 2 bytes @ 0x4
  1107                           
  1108  0074                     ___lldiv@dividend:	
  1109                           ; 2 bytes @ 0x4
  1110                           
  1111  0074                     __div_to_l_@f2:	
  1112                           ; 4 bytes @ 0x4
  1113                           
  1114  0074                     ___fleq@ff2:	
  1115                           ; 4 bytes @ 0x4
  1116                           
  1117  0074                     ___flge@ff2:	
  1118                           ; 4 bytes @ 0x4
  1119                           
  1120  0074                     __tdiv_to_l_@f2:	
  1121                           ; 4 bytes @ 0x4
  1122                           
  1123                           
  1124                           ; 4 bytes @ 0x4
  1125  0074                     	ds	1
  1126  0075                     ??_Lcd_Set_Cursor:
  1127  0075                     ??_Lcd_Write_String:	
  1128                           ; 1 bytes @ 0x5
  1129                           
  1130  0075                     ___awmod@counter:	
  1131                           ; 1 bytes @ 0x5
  1132                           
  1133  0075                     ___lwmod@counter:	
  1134                           ; 1 bytes @ 0x5
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0x5
  1138  0075                     	ds	1
  1139  0076                     ?___lwdiv:
  1140  0076                     Lcd_Set_Cursor@a:	
  1141                           ; 2 bytes @ 0x6
  1142                           
  1143  0076                     ___awmod@sign:	
  1144                           ; 1 bytes @ 0x6
  1145                           
  1146  0076                     ___lwdiv@divisor:	
  1147                           ; 1 bytes @ 0x6
  1148                           
  1149  0076                     __Umul8_16@word_mpld:	
  1150                           ; 2 bytes @ 0x6
  1151                           
  1152                           
  1153                           ; 2 bytes @ 0x6
  1154  0076                     	ds	1
  1155  0077                     ?___awdiv:
  1156  0077                     Lcd_Set_Cursor@temp:	
  1157                           ; 2 bytes @ 0x7
  1158                           
  1159  0077                     ___awdiv@divisor:	
  1160                           ; 1 bytes @ 0x7
  1161                           
  1162                           
  1163                           ; 2 bytes @ 0x7
  1164  0077                     	ds	1
  1165  0078                     ??__tdiv_to_l_:
  1166  0078                     ??__div_to_l_:	
  1167                           ; 1 bytes @ 0x8
  1168                           
  1169  0078                     ??___lldiv:	
  1170                           ; 1 bytes @ 0x8
  1171                           
  1172  0078                     ??___fleq:	
  1173                           ; 1 bytes @ 0x8
  1174                           
  1175  0078                     ??___flge:	
  1176                           ; 1 bytes @ 0x8
  1177                           
  1178  0078                     __Umul8_16@multiplier:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181  0078                     ___xxtofl@sign:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184  0078                     Lcd_Write_String@i:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0078                     ___lwdiv@dividend:	
  1188                           ; 2 bytes @ 0x8
  1189                           
  1190                           
  1191                           ; 2 bytes @ 0x8
  1192  0078                     	ds	1
  1193  0079                     ___xxtofl@exp:
  1194  0079                     ___awdiv@dividend:	
  1195                           ; 1 bytes @ 0x9
  1196                           
  1197  0079                     ___lldiv@quotient:	
  1198                           ; 2 bytes @ 0x9
  1199                           
  1200                           
  1201                           ; 4 bytes @ 0x9
  1202  0079                     	ds	1
  1203  007A                     ??___lwdiv:
  1204  007A                     ___xxtofl@arg:	
  1205                           ; 1 bytes @ 0xA
  1206                           
  1207                           
  1208                           ; 4 bytes @ 0xA
  1209  007A                     	ds	1
  1210  007B                     ??___awdiv:
  1211  007B                     ___lwdiv@quotient:	
  1212                           ; 1 bytes @ 0xB
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0xB
  1216  007B                     	ds	2
  1217  007D                     ___lldiv@counter:
  1218  007D                     ___lwdiv@counter:	
  1219                           ; 1 bytes @ 0xD
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0xD
  1223  007D                     	ds	1
  1224  007E                     ??___flsub:
  1225                           
  1226                           	psect	cstackBANK0
  1227  0020                     __pcstackBANK0:	
  1228                           ; 1 bytes @ 0xE
  1229                           
  1230  0020                     ?___llmod:
  1231  0020                     ___awdiv@counter:	
  1232                           ; 4 bytes @ 0x0
  1233                           
  1234  0020                     __div_to_l_@quot:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0020                     __tdiv_to_l_@quot:	
  1238                           ; 4 bytes @ 0x0
  1239                           
  1240  0020                     ___llmod@divisor:	
  1241                           ; 4 bytes @ 0x0
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x0
  1245  0020                     	ds	1
  1246  0021                     ___awdiv@sign:
  1247                           
  1248                           ; 1 bytes @ 0x1
  1249  0021                     	ds	1
  1250  0022                     ___awdiv@quotient:
  1251                           
  1252                           ; 2 bytes @ 0x2
  1253  0022                     	ds	2
  1254  0024                     ?___flmul:
  1255  0024                     __div_to_l_@cntr:	
  1256                           ; 4 bytes @ 0x4
  1257                           
  1258  0024                     __tdiv_to_l_@cntr:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261  0024                     ___llmod@dividend:	
  1262                           ; 1 bytes @ 0x4
  1263                           
  1264  0024                     ___flmul@b:	
  1265                           ; 4 bytes @ 0x4
  1266                           
  1267                           
  1268                           ; 4 bytes @ 0x4
  1269  0024                     	ds	1
  1270  0025                     __div_to_l_@exp1:
  1271  0025                     __tdiv_to_l_@exp1:	
  1272                           ; 1 bytes @ 0x5
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x5
  1276  0025                     	ds	3
  1277  0028                     ??___llmod:
  1278  0028                     ___flmul@a:	
  1279                           ; 1 bytes @ 0x8
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0x8
  1283  0028                     	ds	1
  1284  0029                     ___llmod@counter:
  1285                           
  1286                           ; 1 bytes @ 0x9
  1287  0029                     	ds	3
  1288  002C                     ??___flmul:
  1289                           
  1290                           ; 1 bytes @ 0xC
  1291  002C                     	ds	5
  1292  0031                     ___flmul@sign:
  1293                           
  1294                           ; 1 bytes @ 0x11
  1295  0031                     	ds	1
  1296  0032                     ___flmul@grs:
  1297                           
  1298                           ; 4 bytes @ 0x12
  1299  0032                     	ds	4
  1300  0036                     ___flmul@aexp:
  1301                           
  1302                           ; 1 bytes @ 0x16
  1303  0036                     	ds	1
  1304  0037                     ___flmul@bexp:
  1305                           
  1306                           ; 1 bytes @ 0x17
  1307  0037                     	ds	1
  1308  0038                     ___flmul@prod:
  1309                           
  1310                           ; 4 bytes @ 0x18
  1311  0038                     	ds	4
  1312  003C                     ___flmul@temp:
  1313                           
  1314                           ; 2 bytes @ 0x1C
  1315  003C                     	ds	2
  1316  003E                     ?_fround:
  1317  003E                     ?_scale:	
  1318                           ; 4 bytes @ 0x1E
  1319                           
  1320  003E                     ?___fldiv:	
  1321                           ; 4 bytes @ 0x1E
  1322                           
  1323  003E                     ___fldiv@a:	
  1324                           ; 4 bytes @ 0x1E
  1325                           
  1326                           
  1327                           ; 4 bytes @ 0x1E
  1328  003E                     	ds	4
  1329  0042                     ??_fround:
  1330  0042                     ??_scale:	
  1331                           ; 1 bytes @ 0x22
  1332                           
  1333  0042                     ___fldiv@b:	
  1334                           ; 1 bytes @ 0x22
  1335                           
  1336                           
  1337                           ; 4 bytes @ 0x22
  1338  0042                     	ds	4
  1339  0046                     ??___fldiv:
  1340                           
  1341                           ; 1 bytes @ 0x26
  1342  0046                     	ds	3
  1343  0049                     _fround$1316:
  1344                           
  1345                           ; 4 bytes @ 0x29
  1346  0049                     	ds	2
  1347  004B                     ___fldiv@rem:
  1348                           
  1349                           ; 4 bytes @ 0x2B
  1350  004B                     	ds	1
  1351  004C                     _scale$1317:
  1352                           
  1353                           ; 4 bytes @ 0x2C
  1354  004C                     	ds	1
  1355  004D                     _fround$1315:
  1356                           
  1357                           ; 4 bytes @ 0x2D
  1358  004D                     	ds	2
  1359  004F                     ___fldiv@sign:
  1360                           
  1361                           ; 1 bytes @ 0x2F
  1362  004F                     	ds	1
  1363  0050                     scale@scl:
  1364  0050                     ___fldiv@new_exp:	
  1365                           ; 1 bytes @ 0x30
  1366                           
  1367                           
  1368                           ; 2 bytes @ 0x30
  1369  0050                     	ds	1
  1370  0051                     ?___fltol:
  1371  0051                     fround@prec:	
  1372                           ; 4 bytes @ 0x31
  1373                           
  1374  0051                     ___fltol@f1:	
  1375                           ; 1 bytes @ 0x31
  1376                           
  1377                           
  1378                           ; 4 bytes @ 0x31
  1379  0051                     	ds	1
  1380  0052                     ?___fladd:
  1381  0052                     ___fladd@b:	
  1382                           ; 4 bytes @ 0x32
  1383                           
  1384  0052                     ___fldiv@grs:	
  1385                           ; 4 bytes @ 0x32
  1386                           
  1387                           
  1388                           ; 4 bytes @ 0x32
  1389  0052                     	ds	3
  1390  0055                     ??___fltol:
  1391                           
  1392                           ; 1 bytes @ 0x35
  1393  0055                     	ds	1
  1394  0056                     ___fldiv@bexp:
  1395  0056                     ___fladd@a:	
  1396                           ; 1 bytes @ 0x36
  1397                           
  1398                           
  1399                           ; 4 bytes @ 0x36
  1400  0056                     	ds	1
  1401  0057                     ___fldiv@aexp:
  1402                           
  1403                           ; 1 bytes @ 0x37
  1404  0057                     	ds	1
  1405  0058                     ?_mapear:
  1406                           
  1407                           ; 4 bytes @ 0x38
  1408  0058                     	ds	2
  1409  005A                     ??___fladd:
  1410  005A                     ___fltol@sign1:	
  1411                           ; 1 bytes @ 0x3A
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x3A
  1415  005A                     	ds	1
  1416  005B                     ___fltol@exp1:
  1417                           
  1418                           ; 1 bytes @ 0x3B
  1419  005B                     	ds	1
  1420  005C                     ??_mapear:
  1421                           
  1422                           ; 1 bytes @ 0x3C
  1423  005C                     	ds	4
  1424  0060                     mapear@adresval:
  1425                           
  1426                           ; 1 bytes @ 0x40
  1427  0060                     	ds	2
  1428  0062                     ___fladd@signs:
  1429                           
  1430                           ; 1 bytes @ 0x42
  1431  0062                     	ds	1
  1432  0063                     ___fladd@aexp:
  1433                           
  1434                           ; 1 bytes @ 0x43
  1435  0063                     	ds	1
  1436  0064                     ___fladd@bexp:
  1437                           
  1438                           ; 1 bytes @ 0x44
  1439  0064                     	ds	1
  1440  0065                     ___fladd@grs:
  1441                           
  1442                           ; 1 bytes @ 0x45
  1443  0065                     	ds	1
  1444  0066                     ?___flsub:
  1445  0066                     ___flsub@a:	
  1446                           ; 4 bytes @ 0x46
  1447                           
  1448                           
  1449                           ; 4 bytes @ 0x46
  1450  0066                     	ds	4
  1451  006A                     ___flsub@b:
  1452                           
  1453                           ; 4 bytes @ 0x4A
  1454  006A                     	ds	4
  1455                           
  1456                           	psect	maintext
  1457  0814                     __pmaintext:	
  1458 ;;
  1459 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1460 ;;
  1461 ;; *************** function _main *****************
  1462 ;; Defined at:
  1463 ;;		line 52 in file "lab2.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : B00/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          0       0       3       0       0
  1480 ;;      Totals:         0       0       3       0       0
  1481 ;;Total ram usage:        3 bytes
  1482 ;; Hardware stack levels required when called:    4
  1483 ;; This function calls:
  1484 ;;		_Lcd_Init
  1485 ;;		_Lcd_Set_Cursor
  1486 ;;		_Lcd_Write_String
  1487 ;;		_adc_c
  1488 ;;		_adc_canal
  1489 ;;		_enviocadena
  1490 ;;		_mapear
  1491 ;;		_sprintf
  1492 ;; This function is called by:
  1493 ;;		Startup code after reset
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _main
  1499  0814                     _main:
  1500  0814                     l3823:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1503                           
  1504                           
  1505                           ;lab2.c: 55:     OSCCONbits.IRCF = 7;
  1506  0814  3070               	movlw	112
  1507  0815  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0816  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0817  048F               	iorwf	15,f	;volatile
  1510  0818                     l3825:
  1511                           
  1512                           ;lab2.c: 56:     OSCCONbits.SCS = 1;
  1513  0818  140F               	bsf	15,0	;volatile
  1514  0819                     l3827:
  1515                           
  1516                           ;lab2.c: 58:     ANSELH = 0;
  1517  0819  1683               	bsf	3,5	;RP0=1, select bank3
  1518  081A  1703               	bsf	3,6	;RP1=1, select bank3
  1519  081B  0189               	clrf	9	;volatile
  1520  081C                     l3829:
  1521                           
  1522                           ;lab2.c: 59:     ANSELbits.ANS0 = 1;
  1523  081C  1408               	bsf	8,0	;volatile
  1524  081D                     l3831:
  1525                           
  1526                           ;lab2.c: 60:     ANSELbits.ANS1 = 1;
  1527  081D  1488               	bsf	8,1	;volatile
  1528  081E                     l3833:
  1529                           
  1530                           ;lab2.c: 61:     TRISA = 3;
  1531  081E  3003               	movlw	3
  1532  081F  1683               	bsf	3,5	;RP0=1, select bank1
  1533  0820  1303               	bcf	3,6	;RP1=0, select bank1
  1534  0821  0085               	movwf	5	;volatile
  1535  0822                     l3835:
  1536                           
  1537                           ;lab2.c: 62:     TRISC = 128;
  1538  0822  3080               	movlw	128
  1539  0823  0087               	movwf	7	;volatile
  1540  0824                     l3837:
  1541                           
  1542                           ;lab2.c: 63:     TRISD = 0;
  1543  0824  0188               	clrf	8	;volatile
  1544  0825                     l3839:
  1545                           
  1546                           ;lab2.c: 64:     PORTA = 0;
  1547  0825  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0826  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0827  0185               	clrf	5	;volatile
  1550  0828                     l3841:
  1551                           
  1552                           ;lab2.c: 65:     PORTC = 0;
  1553  0828  0187               	clrf	7	;volatile
  1554  0829                     l3843:
  1555                           
  1556                           ;lab2.c: 66:     PORTD = 0;
  1557  0829  0188               	clrf	8	;volatile
  1558  082A                     l3845:
  1559                           
  1560                           ;lab2.c: 68:     adc_c();
  1561  082A  160A  158A  2205  120A  158A  	fcall	_adc_c
  1562  082F                     l3847:
  1563                           
  1564                           ;lab2.c: 69:     Lcd_Init();
  1565  082F  160A  158A  2459  120A  158A  	fcall	_Lcd_Init
  1566  0834                     l3849:
  1567                           
  1568                           ;lab2.c: 71:     TXSTAbits.SYNC = 0;
  1569  0834  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0835  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0836  1218               	bcf	24,4	;volatile
  1572  0837                     l3851:
  1573                           
  1574                           ;lab2.c: 72:     TXSTAbits.BRGH = 1;
  1575  0837  1518               	bsf	24,2	;volatile
  1576  0838                     l3853:
  1577                           
  1578                           ;lab2.c: 74:     BAUDCTLbits.BRG16 = 1;
  1579  0838  1683               	bsf	3,5	;RP0=1, select bank3
  1580  0839  1703               	bsf	3,6	;RP1=1, select bank3
  1581  083A  1587               	bsf	7,3	;volatile
  1582  083B                     l3855:
  1583                           
  1584                           ;lab2.c: 76:     SPBRG = 207;
  1585  083B  30CF               	movlw	207
  1586  083C  1683               	bsf	3,5	;RP0=1, select bank1
  1587  083D  1303               	bcf	3,6	;RP1=0, select bank1
  1588  083E  0099               	movwf	25	;volatile
  1589  083F                     l3857:
  1590                           
  1591                           ;lab2.c: 77:     SPBRGH = 0;
  1592  083F  019A               	clrf	26	;volatile
  1593  0840                     l3859:
  1594                           
  1595                           ;lab2.c: 79:     RCSTAbits.SPEN = 1;
  1596  0840  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0841  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0842  1798               	bsf	24,7	;volatile
  1599  0843                     l3861:
  1600                           
  1601                           ;lab2.c: 80:     RCSTAbits.RX9 = 0;
  1602  0843  1318               	bcf	24,6	;volatile
  1603  0844                     l3863:
  1604                           
  1605                           ;lab2.c: 81:     RCSTAbits.CREN = 1;
  1606  0844  1618               	bsf	24,4	;volatile
  1607  0845                     l3865:
  1608                           
  1609                           ;lab2.c: 83:     TXSTAbits.TXEN = 1;
  1610  0845  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0846  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0847  1698               	bsf	24,5	;volatile
  1613  0848                     l3867:
  1614                           
  1615                           ;lab2.c: 85:     INTCONbits.GIE = 1;
  1616  0848  178B               	bsf	11,7	;volatile
  1617  0849                     l3869:
  1618                           
  1619                           ;lab2.c: 86:     INTCONbits.RBIE = 1;
  1620  0849  158B               	bsf	11,3	;volatile
  1621  084A                     l3871:
  1622                           
  1623                           ;lab2.c: 87:     INTCONbits.PEIE = 1;
  1624  084A  170B               	bsf	11,6	;volatile
  1625  084B                     l3873:
  1626                           
  1627                           ;lab2.c: 88:     PIE1bits.ADIE = 1;
  1628  084B  170C               	bsf	12,6	;volatile
  1629  084C                     l3875:
  1630                           
  1631                           ;lab2.c: 89:     ADCON0bits.GO = 1;
  1632  084C  1283               	bcf	3,5	;RP0=0, select bank0
  1633  084D  1303               	bcf	3,6	;RP1=0, select bank0
  1634  084E  149F               	bsf	31,1	;volatile
  1635  084F                     l3877:
  1636                           
  1637                           ;lab2.c: 92:   {if (ADCON0bits.GO == 0) {
  1638  084F  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0850  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0851  189F               	btfsc	31,1	;volatile
  1641  0852  2854               	goto	u6251
  1642  0853  2855               	goto	u6250
  1643  0854                     u6251:
  1644  0854  286B               	goto	l3887
  1645  0855                     u6250:
  1646  0855                     l3879:
  1647                           
  1648                           ;lab2.c: 93:         s2 = adc_canal(0);
  1649  0855  3000               	movlw	0
  1650  0856  160A  158A  2211  120A  158A  	fcall	_adc_canal
  1651  085B  1683               	bsf	3,5	;RP0=1, select bank1
  1652  085C  1303               	bcf	3,6	;RP1=0, select bank1
  1653  085D  00C9               	movwf	??_main^(0+128)
  1654  085E  0849               	movf	??_main^(0+128),w
  1655  085F  00D5               	movwf	_s2^(0+128)
  1656  0860                     l3881:
  1657                           
  1658                           ;lab2.c: 94:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  1659  0860  300C               	movlw	12
  1660  0861  1683               	bsf	3,5	;RP0=1, select bank1
  1661  0862  1303               	bcf	3,6	;RP1=0, select bank1
  1662  0863  00C9               	movwf	??_main^(0+128)
  1663  0864                     u6287:
  1664  0864  0BC9               	decfsz	??_main^(0+128),f
  1665  0865  2864               	goto	u6287
  1666  0866  0000               	nop
  1667  0867                     l3883:
  1668                           
  1669                           ;lab2.c: 95:         PIR1bits.ADIF = 0;
  1670  0867  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0868  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0869  130C               	bcf	12,6	;volatile
  1673  086A                     l3885:
  1674                           
  1675                           ;lab2.c: 96:         ADCON0bits.GO = 1;
  1676  086A  149F               	bsf	31,1	;volatile
  1677  086B                     l3887:
  1678                           
  1679                           ;lab2.c: 98:     Lcd_Set_Cursor(1,1);
  1680  086B  01F4               	clrf	Lcd_Set_Cursor@b
  1681  086C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1682  086D  3001               	movlw	1
  1683  086E  160A  158A  226E  120A  158A  	fcall	_Lcd_Set_Cursor
  1684  0873                     l3889:
  1685                           
  1686                           ;lab2.c: 99:     Lcd_Write_String("S1  S1  S3");
  1687  0873  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1688  0874  00F3               	movwf	Lcd_Write_String@a
  1689  0875  3080               	movlw	128
  1690  0876  00F4               	movwf	Lcd_Write_String@a+1
  1691  0877  160A  158A  237A  120A  158A  	fcall	_Lcd_Write_String
  1692  087C                     l3891:
  1693                           
  1694                           ;lab2.c: 100:     S1 = mapear(s1);
  1695  087C  1683               	bsf	3,5	;RP0=1, select bank1
  1696  087D  1303               	bcf	3,6	;RP1=0, select bank1
  1697  087E  0856               	movf	_s1^(0+128),w
  1698  087F  160A  158A  240A  120A  158A  	fcall	_mapear
  1699  0884  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0885  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0886  085B               	movf	?_mapear+3,w
  1702  0887  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0888  1303               	bcf	3,6	;RP1=0, select bank1
  1704  0889  00D3               	movwf	(_S1+3)^(0+128)
  1705  088A  1283               	bcf	3,5	;RP0=0, select bank0
  1706  088B  1303               	bcf	3,6	;RP1=0, select bank0
  1707  088C  085A               	movf	?_mapear+2,w
  1708  088D  1683               	bsf	3,5	;RP0=1, select bank1
  1709  088E  1303               	bcf	3,6	;RP1=0, select bank1
  1710  088F  00D2               	movwf	(_S1+2)^(0+128)
  1711  0890  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0891  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0892  0859               	movf	?_mapear+1,w
  1714  0893  1683               	bsf	3,5	;RP0=1, select bank1
  1715  0894  1303               	bcf	3,6	;RP1=0, select bank1
  1716  0895  00D1               	movwf	(_S1+1)^(0+128)
  1717  0896  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0897  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0898  0858               	movf	?_mapear,w
  1720  0899  1683               	bsf	3,5	;RP0=1, select bank1
  1721  089A  1303               	bcf	3,6	;RP1=0, select bank1
  1722  089B  00D0               	movwf	_S1^(0+128)
  1723  089C                     l3893:
  1724                           
  1725                           ;lab2.c: 101:     S2 = mapear(s2);
  1726  089C  0855               	movf	_s2^(0+128),w
  1727  089D  160A  158A  240A  120A  158A  	fcall	_mapear
  1728  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  1729  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  1730  08A4  085B               	movf	?_mapear+3,w
  1731  08A5  1683               	bsf	3,5	;RP0=1, select bank1
  1732  08A6  1303               	bcf	3,6	;RP1=0, select bank1
  1733  08A7  00CF               	movwf	(_S2+3)^(0+128)
  1734  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  1735  08A9  1303               	bcf	3,6	;RP1=0, select bank0
  1736  08AA  085A               	movf	?_mapear+2,w
  1737  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  1738  08AC  1303               	bcf	3,6	;RP1=0, select bank1
  1739  08AD  00CE               	movwf	(_S2+2)^(0+128)
  1740  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  1741  08AF  1303               	bcf	3,6	;RP1=0, select bank0
  1742  08B0  0859               	movf	?_mapear+1,w
  1743  08B1  1683               	bsf	3,5	;RP0=1, select bank1
  1744  08B2  1303               	bcf	3,6	;RP1=0, select bank1
  1745  08B3  00CD               	movwf	(_S2+1)^(0+128)
  1746  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  1747  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  1748  08B6  0858               	movf	?_mapear,w
  1749  08B7  1683               	bsf	3,5	;RP0=1, select bank1
  1750  08B8  1303               	bcf	3,6	;RP1=0, select bank1
  1751  08B9  00CC               	movwf	_S2^(0+128)
  1752  08BA                     l3895:
  1753                           
  1754                           ;lab2.c: 102:     sprintf(volt, "%.2f  %.2f  %d", S1, S2, pc);
  1755  08BA  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1756  08BB  00C9               	movwf	??_main^(0+128)
  1757  08BC  0849               	movf	??_main^(0+128),w
  1758  08BD  00A0               	movwf	sprintf@f^(0+128)
  1759  08BE  0853               	movf	(_S1+3)^(0+128),w
  1760  08BF  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1761  08C0  0852               	movf	(_S1+2)^(0+128),w
  1762  08C1  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1763  08C2  0851               	movf	(_S1+1)^(0+128),w
  1764  08C3  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1765  08C4  0850               	movf	_S1^(0+128),w
  1766  08C5  00A1               	movwf	(?_sprintf^(0+128)+1)
  1767  08C6  084F               	movf	(_S2+3)^(0+128),w
  1768  08C7  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1769  08C8  084E               	movf	(_S2+2)^(0+128),w
  1770  08C9  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1771  08CA  084D               	movf	(_S2+1)^(0+128),w
  1772  08CB  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1773  08CC  084C               	movf	_S2^(0+128),w
  1774  08CD  00A5               	movwf	(?_sprintf^(0+128)+5)
  1775  08CE  0854               	movf	_pc^(0+128),w
  1776  08CF  00CA               	movwf	(??_main+1)^(0+128)
  1777  08D0  01CB               	clrf	((??_main+1)^(0+128)+1)
  1778  08D1  084A               	movf	(??_main+1)^(0+128),w
  1779  08D2  00A9               	movwf	(?_sprintf^(0+128)+9)
  1780  08D3  084B               	movf	(??_main+2)^(0+128),w
  1781  08D4  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1782  08D5  30D7               	movlw	(low (_volt| 0))& (0+255)
  1783  08D6  120A  118A  204F  120A  158A  	fcall	_sprintf
  1784  08DB                     l3897:
  1785                           
  1786                           ;lab2.c: 103:     enviocadena(volt);
  1787  08DB  30D7               	movlw	(low (_volt| 0))& (0+255)
  1788  08DC  160A  158A  224F  120A  158A  	fcall	_enviocadena
  1789  08E1                     l3899:
  1790                           
  1791                           ;lab2.c: 104:     Lcd_Set_Cursor(2,1);
  1792  08E1  01F4               	clrf	Lcd_Set_Cursor@b
  1793  08E2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1794  08E3  3002               	movlw	2
  1795  08E4  160A  158A  226E  120A  158A  	fcall	_Lcd_Set_Cursor
  1796  08E9                     l3901:
  1797                           
  1798                           ;lab2.c: 105:     Lcd_Write_String(volt);
  1799  08E9  30D7               	movlw	(low (_volt| 0))& (0+255)
  1800  08EA  00F3               	movwf	Lcd_Write_String@a
  1801  08EB  3000               	movlw	0
  1802  08EC  00F4               	movwf	Lcd_Write_String@a+1
  1803  08ED  160A  158A  237A  120A  158A  	fcall	_Lcd_Write_String
  1804  08F2                     l3903:
  1805                           
  1806                           ;lab2.c: 106:     if (ADCON0bits.GO == 0) {
  1807  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1808  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1809  08F4  189F               	btfsc	31,1	;volatile
  1810  08F5  28F7               	goto	u6261
  1811  08F6  28F8               	goto	u6260
  1812  08F7                     u6261:
  1813  08F7  290E               	goto	l3913
  1814  08F8                     u6260:
  1815  08F8                     l3905:
  1816                           
  1817                           ;lab2.c: 107:         s1 = adc_canal(1);
  1818  08F8  3001               	movlw	1
  1819  08F9  160A  158A  2211  120A  158A  	fcall	_adc_canal
  1820  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1821  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0900  00C9               	movwf	??_main^(0+128)
  1823  0901  0849               	movf	??_main^(0+128),w
  1824  0902  00D6               	movwf	_s1^(0+128)
  1825  0903                     l3907:
  1826                           
  1827                           ;lab2.c: 108:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  1828  0903  300C               	movlw	12
  1829  0904  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0905  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0906  00C9               	movwf	??_main^(0+128)
  1832  0907                     u6297:
  1833  0907  0BC9               	decfsz	??_main^(0+128),f
  1834  0908  2907               	goto	u6297
  1835  0909  0000               	nop
  1836  090A                     l3909:
  1837                           
  1838                           ;lab2.c: 109:         PIR1bits.ADIF = 0;
  1839  090A  1283               	bcf	3,5	;RP0=0, select bank0
  1840  090B  1303               	bcf	3,6	;RP1=0, select bank0
  1841  090C  130C               	bcf	12,6	;volatile
  1842  090D                     l3911:
  1843                           
  1844                           ;lab2.c: 110:         ADCON0bits.GO = 1;
  1845  090D  149F               	bsf	31,1	;volatile
  1846  090E                     l3913:
  1847                           
  1848                           ;lab2.c: 112:     if (PIR1bits.RCIF == 1) {
  1849  090E  1E8C               	btfss	12,5	;volatile
  1850  090F  2911               	goto	u6271
  1851  0910  2912               	goto	u6270
  1852  0911                     u6271:
  1853  0911  292D               	goto	l3925
  1854  0912                     u6270:
  1855  0912  291B               	goto	l3923
  1856  0913                     l3917:
  1857                           
  1858                           ;lab2.c: 115:                         pc++;
  1859  0913  3001               	movlw	1
  1860  0914  00C9               	movwf	??_main^(0+128)
  1861  0915  0849               	movf	??_main^(0+128),w
  1862  0916  07D4               	addwf	_pc^(0+128),f
  1863                           
  1864                           ;lab2.c: 116:                     break;
  1865  0917  292D               	goto	l3925
  1866  0918                     l3919:
  1867                           
  1868                           ;lab2.c: 119:                         pc--;
  1869  0918  3001               	movlw	1
  1870  0919  02D4               	subwf	_pc^(0+128),f
  1871                           
  1872                           ;lab2.c: 120:                     break;
  1873  091A  292D               	goto	l3925
  1874  091B                     l3923:
  1875  091B  081A               	movf	26,w	;volatile
  1876  091C  1683               	bsf	3,5	;RP0=1, select bank1
  1877  091D  1303               	bcf	3,6	;RP1=0, select bank1
  1878  091E  00C9               	movwf	??_main^(0+128)
  1879  091F  01CA               	clrf	(??_main^(0+128)+1)
  1880                           
  1881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1882                           ; Switch size 1, requested type "simple"
  1883                           ; Number of cases is 1, Range of values is 0 to 0
  1884                           ; switch strategies available:
  1885                           ; Name         Instructions Cycles
  1886                           ; simple_byte            4     3 (average)
  1887                           ; direct_byte           11     8 (fixed)
  1888                           ; jumptable            260     6 (fixed)
  1889                           ;	Chosen strategy is simple_byte
  1890  0920  084A               	movf	(??_main+1)^(0+128),w
  1891  0921  3A00               	xorlw	0	; case 0
  1892  0922  1903               	skipnz
  1893  0923  2925               	goto	l3993
  1894  0924  292D               	goto	l3925
  1895  0925                     l3993:
  1896                           
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 2, Range of values is 43 to 45
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte            7     4 (average)
  1902                           ; direct_byte           20    11 (fixed)
  1903                           ; jumptable            263     9 (fixed)
  1904                           ;	Chosen strategy is simple_byte
  1905  0925  0849               	movf	??_main^(0+128),w
  1906  0926  3A2B               	xorlw	43	; case 43
  1907  0927  1903               	skipnz
  1908  0928  2913               	goto	l3917
  1909  0929  3A06               	xorlw	6	; case 45
  1910  092A  1903               	skipnz
  1911  092B  2918               	goto	l3919
  1912  092C  292D               	goto	l3925
  1913  092D                     l3925:
  1914                           
  1915                           ;lab2.c: 123:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1916  092D  3002               	movlw	2
  1917  092E  1683               	bsf	3,5	;RP0=1, select bank1
  1918  092F  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0930  00CB               	movwf	(??_main^(0+128)+2)
  1920  0931  3004               	movlw	4
  1921  0932  00CA               	movwf	(??_main^(0+128)+1)
  1922  0933  30B9               	movlw	185
  1923  0934  00C9               	movwf	??_main^(0+128)
  1924  0935                     u6307:
  1925  0935  0BC9               	decfsz	??_main^(0+128),f
  1926  0936  2935               	goto	u6307
  1927  0937  0BCA               	decfsz	(??_main^(0+128)+1),f
  1928  0938  2935               	goto	u6307
  1929  0939  0BCB               	decfsz	(??_main^(0+128)+2),f
  1930  093A  2935               	goto	u6307
  1931  093B  293C               	nop2
  1932  093C  284F               	goto	l3877
  1933  093D  120A  118A  2800   	ljmp	start
  1934  0940                     __end_of_main:
  1935                           
  1936                           	psect	text1
  1937  004F                     __ptext1:	
  1938 ;; *************** function _sprintf *****************
  1939 ;; Defined at:
  1940 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  sp              1    wreg     PTR unsigned char 
  1943 ;;		 -> volt(16), 
  1944 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1945 ;;		 -> STR_2(15), 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1948 ;;		 -> volt(16), 
  1949 ;;  fval            4   34[BANK1 ] PTR unsigned char 
  1950 ;;  val             4   29[BANK1 ] unsigned long 
  1951 ;;  tmpval          4   25[BANK1 ] struct .
  1952 ;;  prec            2   38[BANK1 ] int 
  1953 ;;  eexp            2   23[BANK1 ] int 
  1954 ;;  flag            2   21[BANK1 ] unsigned short 
  1955 ;;  cp              2    0        PTR const unsigned char 
  1956 ;;  len             2    0        unsigned int 
  1957 ;;  width           2    0        int 
  1958 ;;  c               1   40[BANK1 ] unsigned char 
  1959 ;;  ap              1   20[BANK1 ] PTR void [1]
  1960 ;;		 -> ?_sprintf(2), 
  1961 ;;  d               1    0        unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  2    0[BANK1 ] int 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1971 ;;      Params:         0       0      11       0       0
  1972 ;;      Locals:         0       0      25       0       0
  1973 ;;      Temps:          0       0       5       0       0
  1974 ;;      Totals:         0       0      41       0       0
  1975 ;;Total ram usage:       41 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    3
  1978 ;; This function calls:
  1979 ;;		___awdiv
  1980 ;;		___fladd
  1981 ;;		___fleq
  1982 ;;		___flge
  1983 ;;		___flmul
  1984 ;;		___flneg
  1985 ;;		___flsub
  1986 ;;		___fltol
  1987 ;;		___lldiv
  1988 ;;		___llmod
  1989 ;;		___wmul
  1990 ;;		___xxtofl
  1991 ;;		__div_to_l_
  1992 ;;		__tdiv_to_l_
  1993 ;;		_fround
  1994 ;;		_isdigit
  1995 ;;		_scale
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _sprintf
  2003  004F                     _sprintf:
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2007                           ;sprintf@sp stored from wreg
  2008  004F  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0050  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0051  00C1               	movwf	sprintf@sp^(0+128)
  2011  0052                     l3569:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2014  0052  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2015  0053  00AB               	movwf	??_sprintf^(0+128)
  2016  0054  082B               	movf	??_sprintf^(0+128),w
  2017  0055  00B4               	movwf	sprintf@ap^(0+128)
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2020  0056  2FD9               	goto	l3795
  2021  0057                     l3571:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2024  0057  3025               	movlw	37
  2025  0058  0648               	xorwf	sprintf@c^(0+128),w
  2026  0059  1903               	btfsc	3,2
  2027  005A  285C               	goto	u5821
  2028  005B  285D               	goto	u5820
  2029  005C                     u5821:
  2030  005C  2869               	goto	l3577
  2031  005D                     u5820:
  2032  005D                     l3573:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2035  005D  0848               	movf	sprintf@c^(0+128),w
  2036  005E  00AB               	movwf	??_sprintf^(0+128)
  2037  005F  0841               	movf	sprintf@sp^(0+128),w
  2038  0060  0084               	movwf	4
  2039  0061  082B               	movf	??_sprintf^(0+128),w
  2040  0062  1383               	bcf	3,7	;select IRP bank0
  2041  0063  0080               	movwf	0
  2042  0064                     l3575:
  2043  0064  3001               	movlw	1
  2044  0065  00AB               	movwf	??_sprintf^(0+128)
  2045  0066  082B               	movf	??_sprintf^(0+128),w
  2046  0067  07C1               	addwf	sprintf@sp^(0+128),f
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2049  0068  2FD9               	goto	l3795
  2050  0069                     l3577:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2053  0069  01B5               	clrf	sprintf@flag^(0+128)
  2054  006A  01B6               	clrf	(sprintf@flag+1)^(0+128)
  2055  006B                     l3579:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2058  006B  0820               	movf	sprintf@f^(0+128),w
  2059  006C  0084               	movwf	4
  2060  006D  160A  158A  200A  120A  118A  	fcall	stringdir
  2061  0072  3A2E               	xorlw	46
  2062  0073  1D03               	skipz
  2063  0074  2876               	goto	u5831
  2064  0075  2877               	goto	u5830
  2065  0076                     u5831:
  2066  0076  28BC               	goto	l3595
  2067  0077                     u5830:
  2068  0077                     l3581:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2071  0077  1736               	bsf	(sprintf@flag^(0+128)+1),6
  2072  0078                     l3583:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2075  0078  3001               	movlw	1
  2076  0079  00AB               	movwf	??_sprintf^(0+128)
  2077  007A  082B               	movf	??_sprintf^(0+128),w
  2078  007B  07A0               	addwf	sprintf@f^(0+128),f
  2079  007C                     l3585:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2082  007C  01C6               	clrf	sprintf@prec^(0+128)
  2083  007D  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2086  007E  28AB               	goto	l3593
  2087  007F                     l3587:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2090  007F  300A               	movlw	10
  2091  0080  00F0               	movwf	___wmul@multiplier
  2092  0081  3000               	movlw	0
  2093  0082  00F1               	movwf	___wmul@multiplier+1
  2094  0083  1683               	bsf	3,5	;RP0=1, select bank1
  2095  0084  1303               	bcf	3,6	;RP1=0, select bank1
  2096  0085  0847               	movf	(sprintf@prec+1)^(0+128),w
  2097  0086  00F3               	movwf	___wmul@multiplicand+1
  2098  0087  0846               	movf	sprintf@prec^(0+128),w
  2099  0088  00F2               	movwf	___wmul@multiplicand
  2100  0089  160A  158A  22B6  120A  118A  	fcall	___wmul
  2101  008E  0871               	movf	?___wmul+1,w
  2102  008F  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0090  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0091  00C7               	movwf	(sprintf@prec+1)^(0+128)
  2105  0092  0870               	movf	?___wmul,w
  2106  0093  00C6               	movwf	sprintf@prec^(0+128)
  2107  0094                     l3589:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2110  0094  0820               	movf	sprintf@f^(0+128),w
  2111  0095  0084               	movwf	4
  2112  0096  160A  158A  200A  120A  118A  	fcall	stringdir
  2113  009B  3ED0               	addlw	208
  2114  009C  00AB               	movwf	??_sprintf^(0+128)
  2115  009D  30FF               	movlw	255
  2116  009E  1803               	skipnc
  2117  009F  3000               	movlw	0
  2118  00A0  00AC               	movwf	(??_sprintf^(0+128)+1)
  2119  00A1  082B               	movf	??_sprintf^(0+128),w
  2120  00A2  07C6               	addwf	sprintf@prec^(0+128),f
  2121  00A3  1803               	skipnc
  2122  00A4  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  2123  00A5  082C               	movf	(??_sprintf+1)^(0+128),w
  2124  00A6  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  2125  00A7                     l3591:
  2126  00A7  3001               	movlw	1
  2127  00A8  00AB               	movwf	??_sprintf^(0+128)
  2128  00A9  082B               	movf	??_sprintf^(0+128),w
  2129  00AA  07A0               	addwf	sprintf@f^(0+128),f
  2130  00AB                     l3593:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2133  00AB  0820               	movf	sprintf@f^(0+128),w
  2134  00AC  0084               	movwf	4
  2135  00AD  160A  158A  200A  120A  118A  	fcall	stringdir
  2136  00B2  120A  158A  2002  120A  118A  	fcall	_isdigit
  2137  00B7  1803               	btfsc	3,0
  2138  00B8  28BA               	goto	u5841
  2139  00B9  28BB               	goto	u5840
  2140  00BA                     u5841:
  2141  00BA  287F               	goto	l3587
  2142  00BB                     u5840:
  2143  00BB  28C2               	goto	l3601
  2144  00BC                     l3595:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2147  00BC  01C6               	clrf	sprintf@prec^(0+128)
  2148  00BD  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2149  00BE                     l3597:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2152  00BE  1636               	bsf	(sprintf@flag^(0+128)+1),4
  2153  00BF  28C2               	goto	l3601
  2154  00C0                     l342:	
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2156                           
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2159  00C0  1536               	bsf	(sprintf@flag^(0+128)+1),2
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2162  00C1  28E4               	goto	l3603
  2163  00C2                     l3601:
  2164  00C2  3001               	movlw	1
  2165  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2166  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  2167  00C5  07A0               	addwf	sprintf@f^(0+128),f
  2168  00C6  30FF               	movlw	-1
  2169  00C7  0720               	addwf	sprintf@f^(0+128),w
  2170  00C8  0084               	movwf	4
  2171  00C9  160A  158A  200A  120A  118A  	fcall	stringdir
  2172  00CE  00C8               	movwf	sprintf@c^(0+128)
  2173  00CF  00AB               	movwf	??_sprintf^(0+128)
  2174  00D0  01AC               	clrf	(??_sprintf^(0+128)+1)
  2175                           
  2176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2177                           ; Switch size 1, requested type "simple"
  2178                           ; Number of cases is 1, Range of values is 0 to 0
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte            4     3 (average)
  2182                           ; direct_byte           11     8 (fixed)
  2183                           ; jumptable            260     6 (fixed)
  2184                           ;	Chosen strategy is simple_byte
  2185  00D1  082C               	movf	(??_sprintf+1)^(0+128),w
  2186  00D2  3A00               	xorlw	0	; case 0
  2187  00D3  1903               	skipnz
  2188  00D4  28D6               	goto	l3995
  2189  00D5  2FD9               	goto	l3795
  2190  00D6                     l3995:
  2191                           
  2192                           ; Switch size 1, requested type "simple"
  2193                           ; Number of cases is 4, Range of values is 0 to 105
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte           13     7 (average)
  2197                           ; jumptable            260     6 (fixed)
  2198                           ;	Chosen strategy is simple_byte
  2199  00D6  082B               	movf	??_sprintf^(0+128),w
  2200  00D7  3A00               	xorlw	0	; case 0
  2201  00D8  1903               	skipnz
  2202  00D9  2FEB               	goto	l3797
  2203  00DA  3A64               	xorlw	100	; case 100
  2204  00DB  1903               	skipnz
  2205  00DC  28E4               	goto	l3603
  2206  00DD  3A02               	xorlw	2	; case 102
  2207  00DE  1903               	skipnz
  2208  00DF  28C0               	goto	l342
  2209  00E0  3A0F               	xorlw	15	; case 105
  2210  00E1  1903               	skipnz
  2211  00E2  28E4               	goto	l3603
  2212  00E3  2FD9               	goto	l3795
  2213  00E4                     l3603:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2216  00E4  3000               	movlw	0
  2217  00E5  0535               	andwf	sprintf@flag^(0+128),w
  2218  00E6  00AB               	movwf	??_sprintf^(0+128)
  2219  00E7  3007               	movlw	7
  2220  00E8  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2221  00E9  00AC               	movwf	(??_sprintf+1)^(0+128)
  2222  00EA  082B               	movf	??_sprintf^(0+128),w
  2223  00EB  042C               	iorwf	(??_sprintf^(0+128)+1),w
  2224  00EC  1903               	btfsc	3,2
  2225  00ED  28EF               	goto	u5851
  2226  00EE  28F0               	goto	u5850
  2227  00EF                     u5851:
  2228  00EF  2EB1               	goto	l3745
  2229  00F0                     u5850:
  2230  00F0                     l3605:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2233  00F0  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  2234  00F1  28F3               	goto	u5861
  2235  00F2  28F4               	goto	u5860
  2236  00F3                     u5861:
  2237  00F3  28F8               	goto	l3609
  2238  00F4                     u5860:
  2239  00F4                     l3607:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2242  00F4  3006               	movlw	6
  2243  00F5  00C6               	movwf	sprintf@prec^(0+128)
  2244  00F6  3000               	movlw	0
  2245  00F7  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2246  00F8                     l3609:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2249  00F8  0834               	movf	sprintf@ap^(0+128),w
  2250  00F9  0084               	movwf	4
  2251  00FA  1383               	bcf	3,7	;select IRP bank0
  2252  00FB  0800               	movf	0,w
  2253  00FC  00C2               	movwf	sprintf@fval^(0+128)
  2254  00FD  0A84               	incf	4,f
  2255  00FE  0800               	movf	0,w
  2256  00FF  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2257  0100  0A84               	incf	4,f
  2258  0101  0800               	movf	0,w
  2259  0102  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2260  0103  0A84               	incf	4,f
  2261  0104  0800               	movf	0,w
  2262  0105  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2263  0106                     l3611:
  2264  0106  3004               	movlw	4
  2265  0107  00AB               	movwf	??_sprintf^(0+128)
  2266  0108  082B               	movf	??_sprintf^(0+128),w
  2267  0109  07B4               	addwf	sprintf@ap^(0+128),f
  2268  010A                     l3613:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2271  010A  0845               	movf	(sprintf@fval+3)^(0+128),w
  2272  010B  00F3               	movwf	___flge@ff1+3
  2273  010C  0844               	movf	(sprintf@fval+2)^(0+128),w
  2274  010D  00F2               	movwf	___flge@ff1+2
  2275  010E  0843               	movf	(sprintf@fval+1)^(0+128),w
  2276  010F  00F1               	movwf	___flge@ff1+1
  2277  0110  0842               	movf	sprintf@fval^(0+128),w
  2278  0111  00F0               	movwf	___flge@ff1
  2279  0112  3000               	movlw	0
  2280  0113  00F7               	movwf	___flge@ff2+3
  2281  0114  3000               	movlw	0
  2282  0115  00F6               	movwf	___flge@ff2+2
  2283  0116  3000               	movlw	0
  2284  0117  00F5               	movwf	___flge@ff2+1
  2285  0118  3000               	movlw	0
  2286  0119  00F4               	movwf	___flge@ff2
  2287  011A  160A  158A  26A4  120A  118A  	fcall	___flge
  2288  011F  1803               	btfsc	3,0
  2289  0120  2922               	goto	u5871
  2290  0121  2923               	goto	u5870
  2291  0122                     u5871:
  2292  0122  2940               	goto	l3619
  2293  0123                     u5870:
  2294  0123                     l3615:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2297  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2299  0125  0845               	movf	(sprintf@fval+3)^(0+128),w
  2300  0126  00F3               	movwf	___flneg@f1+3
  2301  0127  0844               	movf	(sprintf@fval+2)^(0+128),w
  2302  0128  00F2               	movwf	___flneg@f1+2
  2303  0129  0843               	movf	(sprintf@fval+1)^(0+128),w
  2304  012A  00F1               	movwf	___flneg@f1+1
  2305  012B  0842               	movf	sprintf@fval^(0+128),w
  2306  012C  00F0               	movwf	___flneg@f1
  2307  012D  160A  158A  21FA  120A  118A  	fcall	___flneg
  2308  0132  0873               	movf	?___flneg+3,w
  2309  0133  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0134  1303               	bcf	3,6	;RP1=0, select bank1
  2311  0135  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2312  0136  0872               	movf	?___flneg+2,w
  2313  0137  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2314  0138  0871               	movf	?___flneg+1,w
  2315  0139  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2316  013A  0870               	movf	?___flneg,w
  2317  013B  00C2               	movwf	sprintf@fval^(0+128)
  2318  013C                     l3617:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2321  013C  3003               	movlw	3
  2322  013D  04B5               	iorwf	sprintf@flag^(0+128),f
  2323  013E  3000               	movlw	0
  2324  013F  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  2325  0140                     l3619:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2328  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2329  0141  1303               	bcf	3,6	;RP1=0, select bank1
  2330  0142  01B7               	clrf	sprintf@eexp^(0+128)
  2331  0143  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2332  0144                     l3621:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2335  0144  0845               	movf	(sprintf@fval+3)^(0+128),w
  2336  0145  00F3               	movwf	___fleq@ff1+3
  2337  0146  0844               	movf	(sprintf@fval+2)^(0+128),w
  2338  0147  00F2               	movwf	___fleq@ff1+2
  2339  0148  0843               	movf	(sprintf@fval+1)^(0+128),w
  2340  0149  00F1               	movwf	___fleq@ff1+1
  2341  014A  0842               	movf	sprintf@fval^(0+128),w
  2342  014B  00F0               	movwf	___fleq@ff1
  2343  014C  3000               	movlw	0
  2344  014D  00F7               	movwf	___fleq@ff2+3
  2345  014E  3000               	movlw	0
  2346  014F  00F6               	movwf	___fleq@ff2+2
  2347  0150  3000               	movlw	0
  2348  0151  00F5               	movwf	___fleq@ff2+1
  2349  0152  3000               	movlw	0
  2350  0153  00F4               	movwf	___fleq@ff2
  2351  0154  160A  158A  23BC  120A  118A  	fcall	___fleq
  2352  0159  1803               	btfsc	3,0
  2353  015A  295C               	goto	u5881
  2354  015B  295D               	goto	u5880
  2355  015C                     u5881:
  2356  015C  2A4D               	goto	l3647
  2357  015D                     u5880:
  2358  015D                     l3623:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2361  015D  1003               	clrc
  2362  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2363  015F  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0160  0D44               	rlf	(sprintf@fval+2)^(0+128),w
  2365  0161  0D45               	rlf	(sprintf@fval+3)^(0+128),w
  2366  0162  3E82               	addlw	130
  2367  0163  00B7               	movwf	sprintf@eexp^(0+128)
  2368  0164  30FF               	movlw	255
  2369  0165  1803               	skipnc
  2370  0166  3000               	movlw	0
  2371  0167  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2372  0168                     l3625:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2375  0168  30FF               	movlw	255
  2376  0169  07B7               	addwf	sprintf@eexp^(0+128),f
  2377  016A  1803               	skipnc
  2378  016B  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2379  016C  30FF               	movlw	255
  2380  016D  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2381  016E                     l3627:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2384  016E  3003               	movlw	3
  2385  016F  00F0               	movwf	___wmul@multiplier
  2386  0170  3000               	movlw	0
  2387  0171  00F1               	movwf	___wmul@multiplier+1
  2388  0172  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2389  0173  00F3               	movwf	___wmul@multiplicand+1
  2390  0174  0837               	movf	sprintf@eexp^(0+128),w
  2391  0175  00F2               	movwf	___wmul@multiplicand
  2392  0176  160A  158A  22B6  120A  118A  	fcall	___wmul
  2393  017B  0871               	movf	?___wmul+1,w
  2394  017C  1683               	bsf	3,5	;RP0=1, select bank1
  2395  017D  1303               	bcf	3,6	;RP1=0, select bank1
  2396  017E  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2397  017F  0870               	movf	?___wmul,w
  2398  0180  00B7               	movwf	sprintf@eexp^(0+128)
  2399  0181                     l3629:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2402  0181  300A               	movlw	10
  2403  0182  00F7               	movwf	___awdiv@divisor
  2404  0183  3000               	movlw	0
  2405  0184  00F8               	movwf	___awdiv@divisor+1
  2406  0185  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2407  0186  00FA               	movwf	___awdiv@dividend+1
  2408  0187  0837               	movf	sprintf@eexp^(0+128),w
  2409  0188  00F9               	movwf	___awdiv@dividend
  2410  0189  160A  158A  25BF  120A  118A  	fcall	___awdiv
  2411  018E  0878               	movf	?___awdiv+1,w
  2412  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0190  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0191  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2415  0192  0877               	movf	?___awdiv,w
  2416  0193  00B7               	movwf	sprintf@eexp^(0+128)
  2417  0194                     l3631:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2420  0194  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2421  0195  2997               	goto	u5891
  2422  0196  2998               	goto	u5890
  2423  0197                     u5891:
  2424  0197  299E               	goto	l3635
  2425  0198                     u5890:
  2426  0198                     l3633:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2429  0198  30FF               	movlw	255
  2430  0199  07B7               	addwf	sprintf@eexp^(0+128),f
  2431  019A  1803               	skipnc
  2432  019B  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2433  019C  30FF               	movlw	255
  2434  019D  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2435  019E                     l3635:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2438  019E  0337               	decf	sprintf@eexp^(0+128),w
  2439  019F  3AFF               	xorlw	255
  2440  01A0  120A  158A  2140  120A  118A  	fcall	_scale
  2441  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2442  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2443  01A7  0841               	movf	?_scale+3,w
  2444  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2445  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2446  01AA  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2447  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2448  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2449  01AD  0840               	movf	?_scale+2,w
  2450  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2451  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2452  01B0  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2453  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2454  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2455  01B3  083F               	movf	?_scale+1,w
  2456  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2457  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2458  01B6  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2459  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2460  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2461  01B9  083E               	movf	?_scale,w
  2462  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2463  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  2464  01BC  00B9               	movwf	sprintf@tmpval^(0+128)
  2465  01BD                     l3637:
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2468  01BD  0845               	movf	(sprintf@fval+3)^(0+128),w
  2469  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2470  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2471  01C0  00A7               	movwf	___flmul@b+3
  2472  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2473  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2474  01C3  0844               	movf	(sprintf@fval+2)^(0+128),w
  2475  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2476  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2477  01C6  00A6               	movwf	___flmul@b+2
  2478  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2479  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2480  01C9  0843               	movf	(sprintf@fval+1)^(0+128),w
  2481  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2482  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2483  01CC  00A5               	movwf	___flmul@b+1
  2484  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2485  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2486  01CF  0842               	movf	sprintf@fval^(0+128),w
  2487  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2488  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2489  01D2  00A4               	movwf	___flmul@b
  2490  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2491  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2492  01D5  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2493  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2494  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2495  01D8  00AB               	movwf	___flmul@a+3
  2496  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2497  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2498  01DB  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2499  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2500  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2501  01DE  00AA               	movwf	___flmul@a+2
  2502  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2503  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2504  01E1  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2505  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2506  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2507  01E4  00A9               	movwf	___flmul@a+1
  2508  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2509  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2510  01E7  0839               	movf	sprintf@tmpval^(0+128),w
  2511  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2512  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2513  01EA  00A8               	movwf	___flmul@a
  2514  01EB  120A  158A  249F  120A  118A  	fcall	___flmul
  2515  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2516  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2517  01F2  0827               	movf	?___flmul+3,w
  2518  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2519  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2520  01F5  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2521  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2522  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2523  01F8  0826               	movf	?___flmul+2,w
  2524  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2525  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2526  01FB  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2527  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2528  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2529  01FE  0825               	movf	?___flmul+1,w
  2530  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2531  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2532  0201  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2533  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0204  0824               	movf	?___flmul,w
  2536  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2537  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2538  0207  00B9               	movwf	sprintf@tmpval^(0+128)
  2539  0208                     l3639:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2542  0208  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2543  0209  00F3               	movwf	___flge@ff1+3
  2544  020A  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2545  020B  00F2               	movwf	___flge@ff1+2
  2546  020C  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2547  020D  00F1               	movwf	___flge@ff1+1
  2548  020E  0839               	movf	sprintf@tmpval^(0+128),w
  2549  020F  00F0               	movwf	___flge@ff1
  2550  0210  303F               	movlw	63
  2551  0211  00F7               	movwf	___flge@ff2+3
  2552  0212  3080               	movlw	128
  2553  0213  00F6               	movwf	___flge@ff2+2
  2554  0214  3000               	movlw	0
  2555  0215  00F5               	movwf	___flge@ff2+1
  2556  0216  3000               	movlw	0
  2557  0217  00F4               	movwf	___flge@ff2
  2558  0218  160A  158A  26A4  120A  118A  	fcall	___flge
  2559  021D  1803               	btfsc	3,0
  2560  021E  2A20               	goto	u5901
  2561  021F  2A21               	goto	u5900
  2562  0220                     u5901:
  2563  0220  2A2A               	goto	l3643
  2564  0221                     u5900:
  2565  0221                     l3641:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2568  0221  30FF               	movlw	255
  2569  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0224  07B7               	addwf	sprintf@eexp^(0+128),f
  2572  0225  1803               	skipnc
  2573  0226  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2574  0227  30FF               	movlw	255
  2575  0228  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2576  0229  2A4D               	goto	l3647
  2577  022A                     l3643:
  2578  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2579  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2580  022C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2581  022D  00F3               	movwf	___flge@ff1+3
  2582  022E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2583  022F  00F2               	movwf	___flge@ff1+2
  2584  0230  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2585  0231  00F1               	movwf	___flge@ff1+1
  2586  0232  0839               	movf	sprintf@tmpval^(0+128),w
  2587  0233  00F0               	movwf	___flge@ff1
  2588  0234  3041               	movlw	65
  2589  0235  00F7               	movwf	___flge@ff2+3
  2590  0236  3020               	movlw	32
  2591  0237  00F6               	movwf	___flge@ff2+2
  2592  0238  3000               	movlw	0
  2593  0239  00F5               	movwf	___flge@ff2+1
  2594  023A  3000               	movlw	0
  2595  023B  00F4               	movwf	___flge@ff2
  2596  023C  160A  158A  26A4  120A  118A  	fcall	___flge
  2597  0241  1C03               	btfss	3,0
  2598  0242  2A44               	goto	u5911
  2599  0243  2A45               	goto	u5910
  2600  0244                     u5911:
  2601  0244  2A4D               	goto	l3647
  2602  0245                     u5910:
  2603  0245                     l3645:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2606  0245  3001               	movlw	1
  2607  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0247  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0248  07B7               	addwf	sprintf@eexp^(0+128),f
  2610  0249  1803               	skipnc
  2611  024A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2612  024B  3000               	movlw	0
  2613  024C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2614  024D                     l3647:
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2617  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2618  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2619  024F  0847               	movf	(sprintf@prec+1)^(0+128),w
  2620  0250  3A80               	xorlw	128
  2621  0251  00FF               	movwf	btemp+1
  2622  0252  3080               	movlw	128
  2623  0253  027F               	subwf	btemp+1,w
  2624  0254  1D03               	skipz
  2625  0255  2A58               	goto	u5925
  2626  0256  300D               	movlw	13
  2627  0257  0246               	subwf	sprintf@prec^(0+128),w
  2628  0258                     u5925:
  2629  0258  1803               	skipnc
  2630  0259  2A5B               	goto	u5921
  2631  025A  2A5C               	goto	u5920
  2632  025B                     u5921:
  2633  025B  2AA3               	goto	l3651
  2634  025C                     u5920:
  2635  025C                     l3649:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2638  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2639  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2640  025E  0846               	movf	sprintf@prec^(0+128),w
  2641  025F  160A  118A  236D  120A  118A  	fcall	_fround
  2642  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0266  0841               	movf	?_fround+3,w
  2645  0267  00D5               	movwf	___fladd@b+3
  2646  0268  0840               	movf	?_fround+2,w
  2647  0269  00D4               	movwf	___fladd@b+2
  2648  026A  083F               	movf	?_fround+1,w
  2649  026B  00D3               	movwf	___fladd@b+1
  2650  026C  083E               	movf	?_fround,w
  2651  026D  00D2               	movwf	___fladd@b
  2652  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2653  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2654  0270  0845               	movf	(sprintf@fval+3)^(0+128),w
  2655  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0273  00D9               	movwf	___fladd@a+3
  2658  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2659  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2660  0276  0844               	movf	(sprintf@fval+2)^(0+128),w
  2661  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0279  00D8               	movwf	___fladd@a+2
  2664  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2665  027B  1303               	bcf	3,6	;RP1=0, select bank1
  2666  027C  0843               	movf	(sprintf@fval+1)^(0+128),w
  2667  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2668  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2669  027F  00D7               	movwf	___fladd@a+1
  2670  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0281  1303               	bcf	3,6	;RP1=0, select bank1
  2672  0282  0842               	movf	sprintf@fval^(0+128),w
  2673  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0285  00D6               	movwf	___fladd@a
  2676  0286  160A  118A  2578  120A  118A  	fcall	___fladd
  2677  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2678  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2679  028D  0855               	movf	?___fladd+3,w
  2680  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2681  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2682  0290  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2683  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2684  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2685  0293  0854               	movf	?___fladd+2,w
  2686  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2687  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2688  0296  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2689  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0299  0853               	movf	?___fladd+1,w
  2692  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2693  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2694  029C  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2695  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2696  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2697  029F  0852               	movf	?___fladd,w
  2698  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2699  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2700  02A2  00C2               	movwf	sprintf@fval^(0+128)
  2701  02A3                     l3651:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2704  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2705  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2706  02A5  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2707  02A6  3A80               	xorlw	128
  2708  02A7  00FF               	movwf	btemp+1
  2709  02A8  3080               	movlw	128
  2710  02A9  027F               	subwf	btemp+1,w
  2711  02AA  1D03               	skipz
  2712  02AB  2AAE               	goto	u5935
  2713  02AC  300A               	movlw	10
  2714  02AD  0237               	subwf	sprintf@eexp^(0+128),w
  2715  02AE                     u5935:
  2716  02AE  1803               	skipnc
  2717  02AF  2AB1               	goto	u5931
  2718  02B0  2AB2               	goto	u5930
  2719  02B1                     u5931:
  2720  02B1  2B03               	goto	l3659
  2721  02B2                     u5930:
  2722  02B2                     l3653:
  2723  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2724  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2725  02B4  0845               	movf	(sprintf@fval+3)^(0+128),w
  2726  02B5  00F3               	movwf	___fleq@ff1+3
  2727  02B6  0844               	movf	(sprintf@fval+2)^(0+128),w
  2728  02B7  00F2               	movwf	___fleq@ff1+2
  2729  02B8  0843               	movf	(sprintf@fval+1)^(0+128),w
  2730  02B9  00F1               	movwf	___fleq@ff1+1
  2731  02BA  0842               	movf	sprintf@fval^(0+128),w
  2732  02BB  00F0               	movwf	___fleq@ff1
  2733  02BC  3000               	movlw	0
  2734  02BD  00F7               	movwf	___fleq@ff2+3
  2735  02BE  3000               	movlw	0
  2736  02BF  00F6               	movwf	___fleq@ff2+2
  2737  02C0  3000               	movlw	0
  2738  02C1  00F5               	movwf	___fleq@ff2+1
  2739  02C2  3000               	movlw	0
  2740  02C3  00F4               	movwf	___fleq@ff2
  2741  02C4  160A  158A  23BC  120A  118A  	fcall	___fleq
  2742  02C9  1803               	btfsc	3,0
  2743  02CA  2ACC               	goto	u5941
  2744  02CB  2ACD               	goto	u5940
  2745  02CC                     u5941:
  2746  02CC  2B75               	goto	l3673
  2747  02CD                     u5940:
  2748  02CD                     l3655:
  2749  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2750  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2751  02CF  0845               	movf	(sprintf@fval+3)^(0+128),w
  2752  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2753  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2754  02D2  00D4               	movwf	___fltol@f1+3
  2755  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2756  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2757  02D5  0844               	movf	(sprintf@fval+2)^(0+128),w
  2758  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2759  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2760  02D8  00D3               	movwf	___fltol@f1+2
  2761  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2762  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2763  02DB  0843               	movf	(sprintf@fval+1)^(0+128),w
  2764  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2765  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2766  02DE  00D2               	movwf	___fltol@f1+1
  2767  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2768  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  2769  02E1  0842               	movf	sprintf@fval^(0+128),w
  2770  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2771  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2772  02E4  00D1               	movwf	___fltol@f1
  2773  02E5  160A  158A  2628  120A  118A  	fcall	___fltol
  2774  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2775  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2776  02EC  0854               	movf	?___fltol+3,w
  2777  02ED  0453               	iorwf	?___fltol+2,w
  2778  02EE  0452               	iorwf	?___fltol+1,w
  2779  02EF  0451               	iorwf	?___fltol,w
  2780  02F0  1D03               	skipz
  2781  02F1  2AF3               	goto	u5951
  2782  02F2  2AF4               	goto	u5950
  2783  02F3                     u5951:
  2784  02F3  2B75               	goto	l3673
  2785  02F4                     u5950:
  2786  02F4                     l3657:
  2787  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2788  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2789  02F6  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2790  02F7  3A80               	xorlw	128
  2791  02F8  00FF               	movwf	btemp+1
  2792  02F9  3080               	movlw	128
  2793  02FA  027F               	subwf	btemp+1,w
  2794  02FB  1D03               	skipz
  2795  02FC  2AFF               	goto	u5965
  2796  02FD  3002               	movlw	2
  2797  02FE  0237               	subwf	sprintf@eexp^(0+128),w
  2798  02FF                     u5965:
  2799  02FF  1C03               	skipc
  2800  0300  2B02               	goto	u5961
  2801  0301  2B03               	goto	u5960
  2802  0302                     u5961:
  2803  0302  2B75               	goto	l3673
  2804  0303                     u5960:
  2805  0303                     l3659:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2808  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0304  1303               	bcf	3,6	;RP1=0, select bank1
  2810  0305  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2811  0306  00F3               	movwf	___flge@ff1+3
  2812  0307  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2813  0308  00F2               	movwf	___flge@ff1+2
  2814  0309  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2815  030A  00F1               	movwf	___flge@ff1+1
  2816  030B  0839               	movf	sprintf@tmpval^(0+128),w
  2817  030C  00F0               	movwf	___flge@ff1
  2818  030D  3040               	movlw	64
  2819  030E  00F7               	movwf	___flge@ff2+3
  2820  030F  3089               	movlw	137
  2821  0310  00F6               	movwf	___flge@ff2+2
  2822  0311  3070               	movlw	112
  2823  0312  00F5               	movwf	___flge@ff2+1
  2824  0313  305F               	movlw	95
  2825  0314  00F4               	movwf	___flge@ff2
  2826  0315  160A  158A  26A4  120A  118A  	fcall	___flge
  2827  031A  1803               	btfsc	3,0
  2828  031B  2B1D               	goto	u5971
  2829  031C  2B1E               	goto	u5970
  2830  031D                     u5971:
  2831  031D  2B27               	goto	l3663
  2832  031E                     u5970:
  2833  031E                     l3661:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2836  031E  30F7               	movlw	247
  2837  031F  1683               	bsf	3,5	;RP0=1, select bank1
  2838  0320  1303               	bcf	3,6	;RP1=0, select bank1
  2839  0321  07B7               	addwf	sprintf@eexp^(0+128),f
  2840  0322  1803               	skipnc
  2841  0323  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2842  0324  30FF               	movlw	255
  2843  0325  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2846  0326  2B2F               	goto	l3665
  2847  0327                     l3663:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2850  0327  30F8               	movlw	248
  2851  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2852  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2853  032A  07B7               	addwf	sprintf@eexp^(0+128),f
  2854  032B  1803               	skipnc
  2855  032C  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2856  032D  30FF               	movlw	255
  2857  032E  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2858  032F                     l3665:
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2861  032F  0837               	movf	sprintf@eexp^(0+128),w
  2862  0330  120A  158A  2140  120A  118A  	fcall	_scale
  2863  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0337  0841               	movf	?_scale+3,w
  2866  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2867  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2868  033A  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2869  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2870  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2871  033D  0840               	movf	?_scale+2,w
  2872  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2873  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2874  0340  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2875  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0343  083F               	movf	?_scale+1,w
  2878  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2879  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0346  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2881  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0349  083E               	movf	?_scale,w
  2884  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2885  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2886  034C  00B9               	movwf	sprintf@tmpval^(0+128)
  2887  034D                     l3667:
  2888  034D  0845               	movf	(sprintf@fval+3)^(0+128),w
  2889  034E  00F3               	movwf	__div_to_l_@f1+3
  2890  034F  0844               	movf	(sprintf@fval+2)^(0+128),w
  2891  0350  00F2               	movwf	__div_to_l_@f1+2
  2892  0351  0843               	movf	(sprintf@fval+1)^(0+128),w
  2893  0352  00F1               	movwf	__div_to_l_@f1+1
  2894  0353  0842               	movf	sprintf@fval^(0+128),w
  2895  0354  00F0               	movwf	__div_to_l_@f1
  2896  0355  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2897  0356  00F7               	movwf	__div_to_l_@f2+3
  2898  0357  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2899  0358  00F6               	movwf	__div_to_l_@f2+2
  2900  0359  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2901  035A  00F5               	movwf	__div_to_l_@f2+1
  2902  035B  0839               	movf	sprintf@tmpval^(0+128),w
  2903  035C  00F4               	movwf	__div_to_l_@f2
  2904  035D  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  2905  0362  0873               	movf	?__div_to_l_+3,w
  2906  0363  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0364  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0365  00C0               	movwf	(sprintf@val+3)^(0+128)
  2909  0366  0872               	movf	?__div_to_l_+2,w
  2910  0367  00BF               	movwf	(sprintf@val+2)^(0+128)
  2911  0368  0871               	movf	?__div_to_l_+1,w
  2912  0369  00BE               	movwf	(sprintf@val+1)^(0+128)
  2913  036A  0870               	movf	?__div_to_l_,w
  2914  036B  00BD               	movwf	sprintf@val^(0+128)
  2915  036C                     l3671:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2918  036C  3000               	movlw	0
  2919  036D  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2920  036E  3000               	movlw	0
  2921  036F  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2922  0370  3000               	movlw	0
  2923  0371  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2924  0372  3000               	movlw	0
  2925  0373  00C2               	movwf	sprintf@fval^(0+128)
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2928  0374  2BF9               	goto	l3679
  2929  0375                     l3673:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2932  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2934  0377  0845               	movf	(sprintf@fval+3)^(0+128),w
  2935  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2937  037A  00D4               	movwf	___fltol@f1+3
  2938  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2939  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2940  037D  0844               	movf	(sprintf@fval+2)^(0+128),w
  2941  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2942  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0380  00D3               	movwf	___fltol@f1+2
  2944  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2946  0383  0843               	movf	(sprintf@fval+1)^(0+128),w
  2947  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0386  00D2               	movwf	___fltol@f1+1
  2950  0387  1683               	bsf	3,5	;RP0=1, select bank1
  2951  0388  1303               	bcf	3,6	;RP1=0, select bank1
  2952  0389  0842               	movf	sprintf@fval^(0+128),w
  2953  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2954  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2955  038C  00D1               	movwf	___fltol@f1
  2956  038D  160A  158A  2628  120A  118A  	fcall	___fltol
  2957  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0394  0854               	movf	?___fltol+3,w
  2960  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2961  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2962  0397  00C0               	movwf	(sprintf@val+3)^(0+128)
  2963  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2965  039A  0853               	movf	?___fltol+2,w
  2966  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2967  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2968  039D  00BF               	movwf	(sprintf@val+2)^(0+128)
  2969  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2970  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2971  03A0  0852               	movf	?___fltol+1,w
  2972  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2973  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2974  03A3  00BE               	movwf	(sprintf@val+1)^(0+128)
  2975  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2976  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2977  03A6  0851               	movf	?___fltol,w
  2978  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2979  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2980  03A9  00BD               	movwf	sprintf@val^(0+128)
  2981  03AA                     l3675:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2984  03AA  0840               	movf	(sprintf@val+3)^(0+128),w
  2985  03AB  00F3               	movwf	___xxtofl@val+3
  2986  03AC  083F               	movf	(sprintf@val+2)^(0+128),w
  2987  03AD  00F2               	movwf	___xxtofl@val+2
  2988  03AE  083E               	movf	(sprintf@val+1)^(0+128),w
  2989  03AF  00F1               	movwf	___xxtofl@val+1
  2990  03B0  083D               	movf	sprintf@val^(0+128),w
  2991  03B1  00F0               	movwf	___xxtofl@val
  2992  03B2  3000               	movlw	0
  2993  03B3  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2994  03B8  0873               	movf	?___xxtofl+3,w
  2995  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2996  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2997  03BB  00E9               	movwf	___flsub@a+3
  2998  03BC  0872               	movf	?___xxtofl+2,w
  2999  03BD  00E8               	movwf	___flsub@a+2
  3000  03BE  0871               	movf	?___xxtofl+1,w
  3001  03BF  00E7               	movwf	___flsub@a+1
  3002  03C0  0870               	movf	?___xxtofl,w
  3003  03C1  00E6               	movwf	___flsub@a
  3004  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  3005  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  3006  03C4  0845               	movf	(sprintf@fval+3)^(0+128),w
  3007  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3008  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3009  03C7  00ED               	movwf	___flsub@b+3
  3010  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  3011  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  3012  03CA  0844               	movf	(sprintf@fval+2)^(0+128),w
  3013  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3014  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3015  03CD  00EC               	movwf	___flsub@b+2
  3016  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  3017  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  3018  03D0  0843               	movf	(sprintf@fval+1)^(0+128),w
  3019  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3020  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3021  03D3  00EB               	movwf	___flsub@b+1
  3022  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3023  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3024  03D6  0842               	movf	sprintf@fval^(0+128),w
  3025  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3026  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3027  03D9  00EA               	movwf	___flsub@b
  3028  03DA  160A  158A  2292  120A  118A  	fcall	___flsub
  3029  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3030  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3031  03E1  0869               	movf	?___flsub+3,w
  3032  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  3033  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  3034  03E4  00C5               	movwf	(sprintf@fval+3)^(0+128)
  3035  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3036  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  3037  03E7  0868               	movf	?___flsub+2,w
  3038  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  3039  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  3040  03EA  00C4               	movwf	(sprintf@fval+2)^(0+128)
  3041  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3042  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3043  03ED  0867               	movf	?___flsub+1,w
  3044  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  3045  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  3046  03F0  00C3               	movwf	(sprintf@fval+1)^(0+128)
  3047  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3048  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3049  03F3  0866               	movf	?___flsub,w
  3050  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  3051  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  3052  03F6  00C2               	movwf	sprintf@fval^(0+128)
  3053  03F7                     l3677:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3056  03F7  01B7               	clrf	sprintf@eexp^(0+128)
  3057  03F8  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  3058  03F9                     l3679:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3061  03F9  01C8               	clrf	sprintf@c^(0+128)
  3062  03FA  0AC8               	incf	sprintf@c^(0+128),f
  3063  03FB                     l3685:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3066  03FB  0848               	movf	sprintf@c^(0+128),w
  3067  03FC  00AB               	movwf	??_sprintf^(0+128)
  3068  03FD  3001               	movlw	1
  3069  03FE                     u5985:
  3070  03FE  1003               	clrc
  3071  03FF  0DAB               	rlf	??_sprintf^(0+128),f
  3072  0400  3EFF               	addlw	-1
  3073  0401  1D03               	skipz
  3074  0402  2BFE               	goto	u5985
  3075  0403  1003               	clrc
  3076  0404  0D2B               	rlf	??_sprintf^(0+128),w
  3077  0405  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3078  0406  0084               	movwf	4
  3079  0407  160A  158A  200A  120A  118A  	fcall	stringdir
  3080  040C  00AC               	movwf	(??_sprintf+1)^(0+128)
  3081  040D  160A  158A  200A  120A  118A  	fcall	stringdir
  3082  0412  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  3083  0413  160A  158A  200A  120A  118A  	fcall	stringdir
  3084  0418  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  3085  0419  160A  158A  200A  120A  118A  	fcall	stringdir
  3086  041E  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  3087  041F  082F               	movf	(??_sprintf+4)^(0+128),w
  3088  0420  0240               	subwf	(sprintf@val+3)^(0+128),w
  3089  0421  1D03               	skipz
  3090  0422  2C2D               	goto	u5995
  3091  0423  082E               	movf	(??_sprintf+3)^(0+128),w
  3092  0424  023F               	subwf	(sprintf@val+2)^(0+128),w
  3093  0425  1D03               	skipz
  3094  0426  2C2D               	goto	u5995
  3095  0427  082D               	movf	(??_sprintf+2)^(0+128),w
  3096  0428  023E               	subwf	(sprintf@val+1)^(0+128),w
  3097  0429  1D03               	skipz
  3098  042A  2C2D               	goto	u5995
  3099  042B  082C               	movf	(??_sprintf+1)^(0+128),w
  3100  042C  023D               	subwf	sprintf@val^(0+128),w
  3101  042D                     u5995:
  3102  042D  1803               	skipnc
  3103  042E  2C30               	goto	u5991
  3104  042F  2C31               	goto	u5990
  3105  0430                     u5991:
  3106  0430  2C32               	goto	l3689
  3107  0431                     u5990:
  3108  0431  2C3C               	goto	l3691
  3109  0432                     l3689:
  3110  0432  3001               	movlw	1
  3111  0433  00AB               	movwf	??_sprintf^(0+128)
  3112  0434  082B               	movf	??_sprintf^(0+128),w
  3113  0435  07C8               	addwf	sprintf@c^(0+128),f
  3114  0436  300A               	movlw	10
  3115  0437  0648               	xorwf	sprintf@c^(0+128),w
  3116  0438  1D03               	btfss	3,2
  3117  0439  2C3B               	goto	u6001
  3118  043A  2C3C               	goto	u6000
  3119  043B                     u6001:
  3120  043B  2BFB               	goto	l3685
  3121  043C                     u6000:
  3122  043C                     l3691:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3125  043C  3003               	movlw	3
  3126  043D  0535               	andwf	sprintf@flag^(0+128),w
  3127  043E  00AB               	movwf	??_sprintf^(0+128)
  3128  043F  3000               	movlw	0
  3129  0440  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3130  0441  00AC               	movwf	(??_sprintf+1)^(0+128)
  3131  0442  082B               	movf	??_sprintf^(0+128),w
  3132  0443  042C               	iorwf	(??_sprintf^(0+128)+1),w
  3133  0444  1903               	btfsc	3,2
  3134  0445  2C47               	goto	u6011
  3135  0446  2C48               	goto	u6010
  3136  0447                     u6011:
  3137  0447  2CDA               	goto	l370
  3138  0448                     u6010:
  3139  0448                     l3693:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3142  0448  302D               	movlw	45
  3143  0449  00AB               	movwf	??_sprintf^(0+128)
  3144  044A  0841               	movf	sprintf@sp^(0+128),w
  3145  044B  0084               	movwf	4
  3146  044C  082B               	movf	??_sprintf^(0+128),w
  3147  044D  1383               	bcf	3,7	;select IRP bank0
  3148  044E  0080               	movwf	0
  3149  044F                     l3695:
  3150  044F  3001               	movlw	1
  3151  0450  00AB               	movwf	??_sprintf^(0+128)
  3152  0451  082B               	movf	??_sprintf^(0+128),w
  3153  0452  07C1               	addwf	sprintf@sp^(0+128),f
  3154  0453  2CDA               	goto	l370
  3155  0454                     l3697:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3158  0454  0848               	movf	sprintf@c^(0+128),w
  3159  0455  00AB               	movwf	??_sprintf^(0+128)
  3160  0456  3001               	movlw	1
  3161  0457                     u6025:
  3162  0457  1003               	clrc
  3163  0458  0DAB               	rlf	??_sprintf^(0+128),f
  3164  0459  3EFF               	addlw	-1
  3165  045A  1D03               	skipz
  3166  045B  2C57               	goto	u6025
  3167  045C  1003               	clrc
  3168  045D  0D2B               	rlf	??_sprintf^(0+128),w
  3169  045E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3170  045F  0084               	movwf	4
  3171  0460  160A  158A  200A  120A  118A  	fcall	stringdir
  3172  0465  00F0               	movwf	___lldiv@divisor
  3173  0466  160A  158A  200A  120A  118A  	fcall	stringdir
  3174  046B  00F1               	movwf	___lldiv@divisor+1
  3175  046C  160A  158A  200A  120A  118A  	fcall	stringdir
  3176  0471  00F2               	movwf	___lldiv@divisor+2
  3177  0472  160A  158A  200A  120A  118A  	fcall	stringdir
  3178  0477  00F3               	movwf	___lldiv@divisor+3
  3179  0478  0840               	movf	(sprintf@val+3)^(0+128),w
  3180  0479  00F7               	movwf	___lldiv@dividend+3
  3181  047A  083F               	movf	(sprintf@val+2)^(0+128),w
  3182  047B  00F6               	movwf	___lldiv@dividend+2
  3183  047C  083E               	movf	(sprintf@val+1)^(0+128),w
  3184  047D  00F5               	movwf	___lldiv@dividend+1
  3185  047E  083D               	movf	sprintf@val^(0+128),w
  3186  047F  00F4               	movwf	___lldiv@dividend
  3187  0480  160A  158A  2559  120A  118A  	fcall	___lldiv
  3188  0485  0873               	movf	?___lldiv+3,w
  3189  0486  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0487  1303               	bcf	3,6	;RP1=0, select bank1
  3191  0488  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3192  0489  0872               	movf	?___lldiv+2,w
  3193  048A  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3194  048B  0871               	movf	?___lldiv+1,w
  3195  048C  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3196  048D  0870               	movf	?___lldiv,w
  3197  048E  00B9               	movwf	sprintf@tmpval^(0+128)
  3198  048F                     l3699:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3201  048F  3000               	movlw	0
  3202  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0492  00A3               	movwf	___llmod@divisor+3
  3205  0493  3000               	movlw	0
  3206  0494  00A2               	movwf	___llmod@divisor+2
  3207  0495  3000               	movlw	0
  3208  0496  00A1               	movwf	___llmod@divisor+1
  3209  0497  300A               	movlw	10
  3210  0498  00A0               	movwf	___llmod@divisor
  3211  0499  1683               	bsf	3,5	;RP0=1, select bank1
  3212  049A  1303               	bcf	3,6	;RP1=0, select bank1
  3213  049B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3214  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3215  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3216  049E  00A7               	movwf	___llmod@dividend+3
  3217  049F  1683               	bsf	3,5	;RP0=1, select bank1
  3218  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  3219  04A1  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3220  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3221  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3222  04A4  00A6               	movwf	___llmod@dividend+2
  3223  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  3224  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  3225  04A7  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3226  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3227  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3228  04AA  00A5               	movwf	___llmod@dividend+1
  3229  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  3230  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  3231  04AD  0839               	movf	sprintf@tmpval^(0+128),w
  3232  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3233  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3234  04B0  00A4               	movwf	___llmod@dividend
  3235  04B1  160A  158A  24AA  120A  118A  	fcall	___llmod
  3236  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3237  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3238  04B8  0823               	movf	?___llmod+3,w
  3239  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3240  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3241  04BB  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3242  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3243  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3244  04BE  0822               	movf	?___llmod+2,w
  3245  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  3246  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  3247  04C1  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3248  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3249  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3250  04C4  0821               	movf	?___llmod+1,w
  3251  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  3252  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  3253  04C7  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3254  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3255  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3256  04CA  0820               	movf	?___llmod,w
  3257  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3258  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  3259  04CD  00B9               	movwf	sprintf@tmpval^(0+128)
  3260  04CE                     l3701:
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3263  04CE  0839               	movf	sprintf@tmpval^(0+128),w
  3264  04CF  3E30               	addlw	48
  3265  04D0  00AB               	movwf	??_sprintf^(0+128)
  3266  04D1  0841               	movf	sprintf@sp^(0+128),w
  3267  04D2  0084               	movwf	4
  3268  04D3  082B               	movf	??_sprintf^(0+128),w
  3269  04D4  1383               	bcf	3,7	;select IRP bank0
  3270  04D5  0080               	movwf	0
  3271  04D6  3001               	movlw	1
  3272  04D7  00AB               	movwf	??_sprintf^(0+128)
  3273  04D8  082B               	movf	??_sprintf^(0+128),w
  3274  04D9  07C1               	addwf	sprintf@sp^(0+128),f
  3275  04DA                     l370:	
  3276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3277                           
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3280  04DA  3001               	movlw	1
  3281  04DB  02C8               	subwf	sprintf@c^(0+128),f
  3282  04DC  0A48               	incf	sprintf@c^(0+128),w
  3283  04DD  1D03               	btfss	3,2
  3284  04DE  2CE0               	goto	u6031
  3285  04DF  2CE1               	goto	u6030
  3286  04E0                     u6031:
  3287  04E0  2C54               	goto	l3697
  3288  04E1                     u6030:
  3289  04E1  2CF5               	goto	l3709
  3290  04E2                     l3703:
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3293  04E2  3030               	movlw	48
  3294  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  3295  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  3296  04E5  00AB               	movwf	??_sprintf^(0+128)
  3297  04E6  0841               	movf	sprintf@sp^(0+128),w
  3298  04E7  0084               	movwf	4
  3299  04E8  082B               	movf	??_sprintf^(0+128),w
  3300  04E9  1383               	bcf	3,7	;select IRP bank0
  3301  04EA  0080               	movwf	0
  3302  04EB                     l3705:
  3303  04EB  3001               	movlw	1
  3304  04EC  00AB               	movwf	??_sprintf^(0+128)
  3305  04ED  082B               	movf	??_sprintf^(0+128),w
  3306  04EE  07C1               	addwf	sprintf@sp^(0+128),f
  3307  04EF                     l3707:
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3310  04EF  30FF               	movlw	255
  3311  04F0  07B7               	addwf	sprintf@eexp^(0+128),f
  3312  04F1  1803               	skipnc
  3313  04F2  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3314  04F3  30FF               	movlw	255
  3315  04F4  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3316  04F5                     l3709:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3319  04F5  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3320  04F6  3A80               	xorlw	128
  3321  04F7  00FF               	movwf	btemp+1
  3322  04F8  3080               	movlw	128
  3323  04F9  027F               	subwf	btemp+1,w
  3324  04FA  1D03               	skipz
  3325  04FB  2CFE               	goto	u6045
  3326  04FC  3001               	movlw	1
  3327  04FD  0237               	subwf	sprintf@eexp^(0+128),w
  3328  04FE                     u6045:
  3329  04FE  1803               	skipnc
  3330  04FF  2D01               	goto	u6041
  3331  0500  2D02               	goto	u6040
  3332  0501                     u6041:
  3333  0501  2CE2               	goto	l3703
  3334  0502                     u6040:
  3335  0502                     l3711:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3338  0502  1683               	bsf	3,5	;RP0=1, select bank1
  3339  0503  1303               	bcf	3,6	;RP1=0, select bank1
  3340  0504  0847               	movf	(sprintf@prec+1)^(0+128),w
  3341  0505  3A80               	xorlw	128
  3342  0506  00FF               	movwf	btemp+1
  3343  0507  3080               	movlw	128
  3344  0508  027F               	subwf	btemp+1,w
  3345  0509  1D03               	skipz
  3346  050A  2D0D               	goto	u6055
  3347  050B  3009               	movlw	9
  3348  050C  0246               	subwf	sprintf@prec^(0+128),w
  3349  050D                     u6055:
  3350  050D  1C03               	skipc
  3351  050E  2D10               	goto	u6051
  3352  050F  2D11               	goto	u6050
  3353  0510                     u6051:
  3354  0510  2D18               	goto	l3715
  3355  0511                     u6050:
  3356  0511                     l3713:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3359  0511  3008               	movlw	8
  3360  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0513  1303               	bcf	3,6	;RP1=0, select bank1
  3362  0514  00AB               	movwf	??_sprintf^(0+128)
  3363  0515  082B               	movf	??_sprintf^(0+128),w
  3364  0516  00C8               	movwf	sprintf@c^(0+128)
  3365  0517  2D1E               	goto	l377
  3366  0518                     l3715:
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3369  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3371  051A  0846               	movf	sprintf@prec^(0+128),w
  3372  051B  00AB               	movwf	??_sprintf^(0+128)
  3373  051C  082B               	movf	??_sprintf^(0+128),w
  3374  051D  00C8               	movwf	sprintf@c^(0+128)
  3375  051E                     l377:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3378  051E  0848               	movf	sprintf@c^(0+128),w
  3379  051F  00AB               	movwf	??_sprintf^(0+128)
  3380  0520  01AC               	clrf	(??_sprintf^(0+128)+1)
  3381  0521  082B               	movf	??_sprintf^(0+128),w
  3382  0522  02C6               	subwf	sprintf@prec^(0+128),f
  3383  0523  082C               	movf	(??_sprintf+1)^(0+128),w
  3384  0524  1C03               	skipc
  3385  0525  03C7               	decf	(sprintf@prec+1)^(0+128),f
  3386  0526  02C7               	subwf	(sprintf@prec+1)^(0+128),f
  3387  0527                     l3717:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3390  0527  0848               	movf	sprintf@c^(0+128),w
  3391  0528  1903               	btfsc	3,2
  3392  0529  2D2B               	goto	u6061
  3393  052A  2D2C               	goto	u6060
  3394  052B                     u6061:
  3395  052B  2D37               	goto	l3723
  3396  052C                     u6060:
  3397  052C                     l3719:
  3398                           
  3399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3400  052C  302E               	movlw	46
  3401  052D  00AB               	movwf	??_sprintf^(0+128)
  3402  052E  0841               	movf	sprintf@sp^(0+128),w
  3403  052F  0084               	movwf	4
  3404  0530  082B               	movf	??_sprintf^(0+128),w
  3405  0531  1383               	bcf	3,7	;select IRP bank0
  3406  0532  0080               	movwf	0
  3407  0533                     l3721:
  3408  0533  3001               	movlw	1
  3409  0534  00AB               	movwf	??_sprintf^(0+128)
  3410  0535  082B               	movf	??_sprintf^(0+128),w
  3411  0536  07C1               	addwf	sprintf@sp^(0+128),f
  3412  0537                     l3723:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3415  0537  0848               	movf	sprintf@c^(0+128),w
  3416  0538  120A  158A  2140  120A  118A  	fcall	_scale
  3417  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3418  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3419  053F  0841               	movf	?_scale+3,w
  3420  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3421  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3422  0542  00B3               	movwf	(_sprintf$1318+3)^(0+128)
  3423  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0545  0840               	movf	?_scale+2,w
  3426  0546  1683               	bsf	3,5	;RP0=1, select bank1
  3427  0547  1303               	bcf	3,6	;RP1=0, select bank1
  3428  0548  00B2               	movwf	(_sprintf$1318+2)^(0+128)
  3429  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3430  054A  1303               	bcf	3,6	;RP1=0, select bank0
  3431  054B  083F               	movf	?_scale+1,w
  3432  054C  1683               	bsf	3,5	;RP0=1, select bank1
  3433  054D  1303               	bcf	3,6	;RP1=0, select bank1
  3434  054E  00B1               	movwf	(_sprintf$1318+1)^(0+128)
  3435  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0551  083E               	movf	?_scale,w
  3438  0552  1683               	bsf	3,5	;RP0=1, select bank1
  3439  0553  1303               	bcf	3,6	;RP1=0, select bank1
  3440  0554  00B0               	movwf	_sprintf$1318^(0+128)
  3441  0555                     l3725:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3444  0555  0833               	movf	(_sprintf$1318+3)^(0+128),w
  3445  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0558  00AB               	movwf	___flmul@a+3
  3448  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3449  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3450  055B  0832               	movf	(_sprintf$1318+2)^(0+128),w
  3451  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3452  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3453  055E  00AA               	movwf	___flmul@a+2
  3454  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3455  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3456  0561  0831               	movf	(_sprintf$1318+1)^(0+128),w
  3457  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3459  0564  00A9               	movwf	___flmul@a+1
  3460  0565  1683               	bsf	3,5	;RP0=1, select bank1
  3461  0566  1303               	bcf	3,6	;RP1=0, select bank1
  3462  0567  0830               	movf	_sprintf$1318^(0+128),w
  3463  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3465  056A  00A8               	movwf	___flmul@a
  3466  056B  1683               	bsf	3,5	;RP0=1, select bank1
  3467  056C  1303               	bcf	3,6	;RP1=0, select bank1
  3468  056D  0845               	movf	(sprintf@fval+3)^(0+128),w
  3469  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3470  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3471  0570  00A7               	movwf	___flmul@b+3
  3472  0571  1683               	bsf	3,5	;RP0=1, select bank1
  3473  0572  1303               	bcf	3,6	;RP1=0, select bank1
  3474  0573  0844               	movf	(sprintf@fval+2)^(0+128),w
  3475  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0576  00A6               	movwf	___flmul@b+2
  3478  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0578  1303               	bcf	3,6	;RP1=0, select bank1
  3480  0579  0843               	movf	(sprintf@fval+1)^(0+128),w
  3481  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3482  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3483  057C  00A5               	movwf	___flmul@b+1
  3484  057D  1683               	bsf	3,5	;RP0=1, select bank1
  3485  057E  1303               	bcf	3,6	;RP1=0, select bank1
  3486  057F  0842               	movf	sprintf@fval^(0+128),w
  3487  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0582  00A4               	movwf	___flmul@b
  3490  0583  120A  158A  249F  120A  118A  	fcall	___flmul
  3491  0588  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0589  1303               	bcf	3,6	;RP1=0, select bank0
  3493  058A  0827               	movf	?___flmul+3,w
  3494  058B  00D4               	movwf	___fltol@f1+3
  3495  058C  0826               	movf	?___flmul+2,w
  3496  058D  00D3               	movwf	___fltol@f1+2
  3497  058E  0825               	movf	?___flmul+1,w
  3498  058F  00D2               	movwf	___fltol@f1+1
  3499  0590  0824               	movf	?___flmul,w
  3500  0591  00D1               	movwf	___fltol@f1
  3501  0592  160A  158A  2628  120A  118A  	fcall	___fltol
  3502  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0599  0854               	movf	?___fltol+3,w
  3505  059A  1683               	bsf	3,5	;RP0=1, select bank1
  3506  059B  1303               	bcf	3,6	;RP1=0, select bank1
  3507  059C  00C0               	movwf	(sprintf@val+3)^(0+128)
  3508  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3509  059E  1303               	bcf	3,6	;RP1=0, select bank0
  3510  059F  0853               	movf	?___fltol+2,w
  3511  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3512  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  3513  05A2  00BF               	movwf	(sprintf@val+2)^(0+128)
  3514  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3515  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3516  05A5  0852               	movf	?___fltol+1,w
  3517  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  3518  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  3519  05A8  00BE               	movwf	(sprintf@val+1)^(0+128)
  3520  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3521  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3522  05AB  0851               	movf	?___fltol,w
  3523  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  3524  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  3525  05AE  00BD               	movwf	sprintf@val^(0+128)
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3528  05AF  2E91               	goto	l3735
  3529  05B0                     l3727:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3532  05B0  0848               	movf	sprintf@c^(0+128),w
  3533  05B1  00AB               	movwf	??_sprintf^(0+128)
  3534  05B2  3001               	movlw	1
  3535  05B3                     u6075:
  3536  05B3  1003               	clrc
  3537  05B4  0DAB               	rlf	??_sprintf^(0+128),f
  3538  05B5  3EFF               	addlw	-1
  3539  05B6  1D03               	skipz
  3540  05B7  2DB3               	goto	u6075
  3541  05B8  1003               	clrc
  3542  05B9  0D2B               	rlf	??_sprintf^(0+128),w
  3543  05BA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3544  05BB  0084               	movwf	4
  3545  05BC  160A  158A  200A  120A  118A  	fcall	stringdir
  3546  05C1  00F0               	movwf	___lldiv@divisor
  3547  05C2  160A  158A  200A  120A  118A  	fcall	stringdir
  3548  05C7  00F1               	movwf	___lldiv@divisor+1
  3549  05C8  160A  158A  200A  120A  118A  	fcall	stringdir
  3550  05CD  00F2               	movwf	___lldiv@divisor+2
  3551  05CE  160A  158A  200A  120A  118A  	fcall	stringdir
  3552  05D3  00F3               	movwf	___lldiv@divisor+3
  3553  05D4  0840               	movf	(sprintf@val+3)^(0+128),w
  3554  05D5  00F7               	movwf	___lldiv@dividend+3
  3555  05D6  083F               	movf	(sprintf@val+2)^(0+128),w
  3556  05D7  00F6               	movwf	___lldiv@dividend+2
  3557  05D8  083E               	movf	(sprintf@val+1)^(0+128),w
  3558  05D9  00F5               	movwf	___lldiv@dividend+1
  3559  05DA  083D               	movf	sprintf@val^(0+128),w
  3560  05DB  00F4               	movwf	___lldiv@dividend
  3561  05DC  160A  158A  2559  120A  118A  	fcall	___lldiv
  3562  05E1  0873               	movf	?___lldiv+3,w
  3563  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3564  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3565  05E4  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3566  05E5  0872               	movf	?___lldiv+2,w
  3567  05E6  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3568  05E7  0871               	movf	?___lldiv+1,w
  3569  05E8  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3570  05E9  0870               	movf	?___lldiv,w
  3571  05EA  00B9               	movwf	sprintf@tmpval^(0+128)
  3572  05EB                     l3729:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3575  05EB  3000               	movlw	0
  3576  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3577  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3578  05EE  00A3               	movwf	___llmod@divisor+3
  3579  05EF  3000               	movlw	0
  3580  05F0  00A2               	movwf	___llmod@divisor+2
  3581  05F1  3000               	movlw	0
  3582  05F2  00A1               	movwf	___llmod@divisor+1
  3583  05F3  300A               	movlw	10
  3584  05F4  00A0               	movwf	___llmod@divisor
  3585  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3586  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  3587  05F7  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3588  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3589  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3590  05FA  00A7               	movwf	___llmod@dividend+3
  3591  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3592  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3593  05FD  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3594  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3595  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0600  00A6               	movwf	___llmod@dividend+2
  3597  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3598  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3599  0603  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3600  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0606  00A5               	movwf	___llmod@dividend+1
  3603  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3605  0609  0839               	movf	sprintf@tmpval^(0+128),w
  3606  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3607  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3608  060C  00A4               	movwf	___llmod@dividend
  3609  060D  160A  158A  24AA  120A  118A  	fcall	___llmod
  3610  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0614  0823               	movf	?___llmod+3,w
  3613  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3615  0617  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3616  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3618  061A  0822               	movf	?___llmod+2,w
  3619  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3620  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3621  061D  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3622  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3623  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3624  0620  0821               	movf	?___llmod+1,w
  3625  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3626  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3627  0623  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3628  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3630  0626  0820               	movf	?___llmod,w
  3631  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3632  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3633  0629  00B9               	movwf	sprintf@tmpval^(0+128)
  3634  062A                     l3731:
  3635                           
  3636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3637  062A  0839               	movf	sprintf@tmpval^(0+128),w
  3638  062B  3E30               	addlw	48
  3639  062C  00AB               	movwf	??_sprintf^(0+128)
  3640  062D  0841               	movf	sprintf@sp^(0+128),w
  3641  062E  0084               	movwf	4
  3642  062F  082B               	movf	??_sprintf^(0+128),w
  3643  0630  1383               	bcf	3,7	;select IRP bank0
  3644  0631  0080               	movwf	0
  3645  0632  3001               	movlw	1
  3646  0633  00AB               	movwf	??_sprintf^(0+128)
  3647  0634  082B               	movf	??_sprintf^(0+128),w
  3648  0635  07C1               	addwf	sprintf@sp^(0+128),f
  3649  0636                     l3733:
  3650                           
  3651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3652  0636  0848               	movf	sprintf@c^(0+128),w
  3653  0637  00AB               	movwf	??_sprintf^(0+128)
  3654  0638  3001               	movlw	1
  3655  0639                     u6085:
  3656  0639  1003               	clrc
  3657  063A  0DAB               	rlf	??_sprintf^(0+128),f
  3658  063B  3EFF               	addlw	-1
  3659  063C  1D03               	skipz
  3660  063D  2E39               	goto	u6085
  3661  063E  1003               	clrc
  3662  063F  0D2B               	rlf	??_sprintf^(0+128),w
  3663  0640  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3664  0641  0084               	movwf	4
  3665  0642  160A  158A  200A  120A  118A  	fcall	stringdir
  3666  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0649  00A0               	movwf	___llmod@divisor
  3669  064A  160A  158A  200A  120A  118A  	fcall	stringdir
  3670  064F  00A1               	movwf	___llmod@divisor+1
  3671  0650  160A  158A  200A  120A  118A  	fcall	stringdir
  3672  0655  00A2               	movwf	___llmod@divisor+2
  3673  0656  160A  158A  200A  120A  118A  	fcall	stringdir
  3674  065B  00A3               	movwf	___llmod@divisor+3
  3675  065C  1683               	bsf	3,5	;RP0=1, select bank1
  3676  065D  1303               	bcf	3,6	;RP1=0, select bank1
  3677  065E  0840               	movf	(sprintf@val+3)^(0+128),w
  3678  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0661  00A7               	movwf	___llmod@dividend+3
  3681  0662  1683               	bsf	3,5	;RP0=1, select bank1
  3682  0663  1303               	bcf	3,6	;RP1=0, select bank1
  3683  0664  083F               	movf	(sprintf@val+2)^(0+128),w
  3684  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0667  00A6               	movwf	___llmod@dividend+2
  3687  0668  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0669  1303               	bcf	3,6	;RP1=0, select bank1
  3689  066A  083E               	movf	(sprintf@val+1)^(0+128),w
  3690  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3691  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3692  066D  00A5               	movwf	___llmod@dividend+1
  3693  066E  1683               	bsf	3,5	;RP0=1, select bank1
  3694  066F  1303               	bcf	3,6	;RP1=0, select bank1
  3695  0670  083D               	movf	sprintf@val^(0+128),w
  3696  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0672  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0673  00A4               	movwf	___llmod@dividend
  3699  0674  160A  158A  24AA  120A  118A  	fcall	___llmod
  3700  0679  1283               	bcf	3,5	;RP0=0, select bank0
  3701  067A  1303               	bcf	3,6	;RP1=0, select bank0
  3702  067B  0823               	movf	?___llmod+3,w
  3703  067C  1683               	bsf	3,5	;RP0=1, select bank1
  3704  067D  1303               	bcf	3,6	;RP1=0, select bank1
  3705  067E  00C0               	movwf	(sprintf@val+3)^(0+128)
  3706  067F  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0680  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0681  0822               	movf	?___llmod+2,w
  3709  0682  1683               	bsf	3,5	;RP0=1, select bank1
  3710  0683  1303               	bcf	3,6	;RP1=0, select bank1
  3711  0684  00BF               	movwf	(sprintf@val+2)^(0+128)
  3712  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3714  0687  0821               	movf	?___llmod+1,w
  3715  0688  1683               	bsf	3,5	;RP0=1, select bank1
  3716  0689  1303               	bcf	3,6	;RP1=0, select bank1
  3717  068A  00BE               	movwf	(sprintf@val+1)^(0+128)
  3718  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3719  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3720  068D  0820               	movf	?___llmod,w
  3721  068E  1683               	bsf	3,5	;RP0=1, select bank1
  3722  068F  1303               	bcf	3,6	;RP1=0, select bank1
  3723  0690  00BD               	movwf	sprintf@val^(0+128)
  3724  0691                     l3735:
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3727  0691  3001               	movlw	1
  3728  0692  02C8               	subwf	sprintf@c^(0+128),f
  3729  0693  0A48               	incf	sprintf@c^(0+128),w
  3730  0694  1D03               	btfss	3,2
  3731  0695  2E97               	goto	u6091
  3732  0696  2E98               	goto	u6090
  3733  0697                     u6091:
  3734  0697  2DB0               	goto	l3727
  3735  0698                     u6090:
  3736  0698  2EAA               	goto	l3743
  3737  0699                     l3737:
  3738                           
  3739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3740  0699  3030               	movlw	48
  3741  069A  00AB               	movwf	??_sprintf^(0+128)
  3742  069B  0841               	movf	sprintf@sp^(0+128),w
  3743  069C  0084               	movwf	4
  3744  069D  082B               	movf	??_sprintf^(0+128),w
  3745  069E  1383               	bcf	3,7	;select IRP bank0
  3746  069F  0080               	movwf	0
  3747  06A0                     l3739:
  3748  06A0  3001               	movlw	1
  3749  06A1  00AB               	movwf	??_sprintf^(0+128)
  3750  06A2  082B               	movf	??_sprintf^(0+128),w
  3751  06A3  07C1               	addwf	sprintf@sp^(0+128),f
  3752  06A4                     l3741:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3755  06A4  30FF               	movlw	255
  3756  06A5  07C6               	addwf	sprintf@prec^(0+128),f
  3757  06A6  1803               	skipnc
  3758  06A7  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3759  06A8  30FF               	movlw	255
  3760  06A9  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3761  06AA                     l3743:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3764  06AA  0846               	movf	sprintf@prec^(0+128),w
  3765  06AB  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3766  06AC  1D03               	btfss	3,2
  3767  06AD  2EAF               	goto	u6101
  3768  06AE  2EB0               	goto	u6100
  3769  06AF                     u6101:
  3770  06AF  2E99               	goto	l3737
  3771  06B0                     u6100:
  3772  06B0  2FD9               	goto	l3795
  3773  06B1                     l3745:
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3776  06B1  0834               	movf	sprintf@ap^(0+128),w
  3777  06B2  0084               	movwf	4
  3778  06B3  1383               	bcf	3,7	;select IRP bank0
  3779  06B4  0800               	movf	0,w
  3780  06B5  00AB               	movwf	??_sprintf^(0+128)
  3781  06B6  0A84               	incf	4,f
  3782  06B7  0800               	movf	0,w
  3783  06B8  00AC               	movwf	(??_sprintf^(0+128)+1)
  3784  06B9  082B               	movf	??_sprintf^(0+128),w
  3785  06BA  00BD               	movwf	sprintf@val^(0+128)
  3786  06BB  082C               	movf	(??_sprintf+1)^(0+128),w
  3787  06BC  00BE               	movwf	(sprintf@val+1)^(0+128)
  3788  06BD  3000               	movlw	0
  3789  06BE  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
  3790  06BF  30FF               	movlw	255
  3791  06C0  00BF               	movwf	(sprintf@val+2)^(0+128)
  3792  06C1  00C0               	movwf	(sprintf@val+3)^(0+128)
  3793  06C2                     l3747:
  3794  06C2  3002               	movlw	2
  3795  06C3  00AB               	movwf	??_sprintf^(0+128)
  3796  06C4  082B               	movf	??_sprintf^(0+128),w
  3797  06C5  07B4               	addwf	sprintf@ap^(0+128),f
  3798  06C6                     l3749:
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3801  06C6  1FC0               	btfss	(sprintf@val+3)^(0+128),7
  3802  06C7  2EC9               	goto	u6111
  3803  06C8  2ECA               	goto	u6110
  3804  06C9                     u6111:
  3805  06C9  2ED9               	goto	l3755
  3806  06CA                     u6110:
  3807  06CA                     l3751:
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3810  06CA  3003               	movlw	3
  3811  06CB  04B5               	iorwf	sprintf@flag^(0+128),f
  3812  06CC  3000               	movlw	0
  3813  06CD  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  3814  06CE                     l3753:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3817  06CE  09BD               	comf	sprintf@val^(0+128),f
  3818  06CF  09BE               	comf	(sprintf@val+1)^(0+128),f
  3819  06D0  09BF               	comf	(sprintf@val+2)^(0+128),f
  3820  06D1  09C0               	comf	(sprintf@val+3)^(0+128),f
  3821  06D2  0ABD               	incf	sprintf@val^(0+128),f
  3822  06D3  1903               	skipnz
  3823  06D4  0ABE               	incf	(sprintf@val+1)^(0+128),f
  3824  06D5  1903               	skipnz
  3825  06D6  0ABF               	incf	(sprintf@val+2)^(0+128),f
  3826  06D7  1903               	skipnz
  3827  06D8  0AC0               	incf	(sprintf@val+3)^(0+128),f
  3828  06D9                     l3755:
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3831  06D9  0846               	movf	sprintf@prec^(0+128),w
  3832  06DA  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3833  06DB  1D03               	btfss	3,2
  3834  06DC  2EDE               	goto	u6121
  3835  06DD  2EDF               	goto	u6120
  3836  06DE                     u6121:
  3837  06DE  2EED               	goto	l3761
  3838  06DF                     u6120:
  3839  06DF                     l3757:
  3840  06DF  0840               	movf	(sprintf@val+3)^(0+128),w
  3841  06E0  043F               	iorwf	(sprintf@val+2)^(0+128),w
  3842  06E1  043E               	iorwf	(sprintf@val+1)^(0+128),w
  3843  06E2  043D               	iorwf	sprintf@val^(0+128),w
  3844  06E3  1D03               	skipz
  3845  06E4  2EE6               	goto	u6131
  3846  06E5  2EE7               	goto	u6130
  3847  06E6                     u6131:
  3848  06E6  2EED               	goto	l3761
  3849  06E7                     u6130:
  3850  06E7                     l3759:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3853  06E7  3001               	movlw	1
  3854  06E8  07C6               	addwf	sprintf@prec^(0+128),f
  3855  06E9  1803               	skipnc
  3856  06EA  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3857  06EB  3000               	movlw	0
  3858  06EC  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3859  06ED                     l3761:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3862  06ED  01C8               	clrf	sprintf@c^(0+128)
  3863  06EE  0AC8               	incf	sprintf@c^(0+128),f
  3864  06EF                     l3767:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3867  06EF  0848               	movf	sprintf@c^(0+128),w
  3868  06F0  00AB               	movwf	??_sprintf^(0+128)
  3869  06F1  3001               	movlw	1
  3870  06F2                     u6145:
  3871  06F2  1003               	clrc
  3872  06F3  0DAB               	rlf	??_sprintf^(0+128),f
  3873  06F4  3EFF               	addlw	-1
  3874  06F5  1D03               	skipz
  3875  06F6  2EF2               	goto	u6145
  3876  06F7  1003               	clrc
  3877  06F8  0D2B               	rlf	??_sprintf^(0+128),w
  3878  06F9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3879  06FA  0084               	movwf	4
  3880  06FB  160A  158A  200A  120A  118A  	fcall	stringdir
  3881  0700  00AC               	movwf	(??_sprintf+1)^(0+128)
  3882  0701  160A  158A  200A  120A  118A  	fcall	stringdir
  3883  0706  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  3884  0707  160A  158A  200A  120A  118A  	fcall	stringdir
  3885  070C  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  3886  070D  160A  158A  200A  120A  118A  	fcall	stringdir
  3887  0712  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  3888  0713  082F               	movf	(??_sprintf+4)^(0+128),w
  3889  0714  0240               	subwf	(sprintf@val+3)^(0+128),w
  3890  0715  1D03               	skipz
  3891  0716  2F21               	goto	u6155
  3892  0717  082E               	movf	(??_sprintf+3)^(0+128),w
  3893  0718  023F               	subwf	(sprintf@val+2)^(0+128),w
  3894  0719  1D03               	skipz
  3895  071A  2F21               	goto	u6155
  3896  071B  082D               	movf	(??_sprintf+2)^(0+128),w
  3897  071C  023E               	subwf	(sprintf@val+1)^(0+128),w
  3898  071D  1D03               	skipz
  3899  071E  2F21               	goto	u6155
  3900  071F  082C               	movf	(??_sprintf+1)^(0+128),w
  3901  0720  023D               	subwf	sprintf@val^(0+128),w
  3902  0721                     u6155:
  3903  0721  1803               	skipnc
  3904  0722  2F24               	goto	u6151
  3905  0723  2F25               	goto	u6150
  3906  0724                     u6151:
  3907  0724  2F26               	goto	l3771
  3908  0725                     u6150:
  3909  0725  2F30               	goto	l3773
  3910  0726                     l3771:
  3911  0726  3001               	movlw	1
  3912  0727  00AB               	movwf	??_sprintf^(0+128)
  3913  0728  082B               	movf	??_sprintf^(0+128),w
  3914  0729  07C8               	addwf	sprintf@c^(0+128),f
  3915  072A  300A               	movlw	10
  3916  072B  0648               	xorwf	sprintf@c^(0+128),w
  3917  072C  1D03               	btfss	3,2
  3918  072D  2F2F               	goto	u6161
  3919  072E  2F30               	goto	u6160
  3920  072F                     u6161:
  3921  072F  2EEF               	goto	l3767
  3922  0730                     u6160:
  3923  0730                     l3773:
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3926  0730  0847               	movf	(sprintf@prec+1)^(0+128),w
  3927  0731  3A80               	xorlw	128
  3928  0732  3C80               	sublw	128
  3929  0733  1D03               	skipz
  3930  0734  2F37               	goto	u6175
  3931  0735  0846               	movf	sprintf@prec^(0+128),w
  3932  0736  0248               	subwf	sprintf@c^(0+128),w
  3933  0737                     u6175:
  3934  0737  1803               	skipnc
  3935  0738  2F3A               	goto	u6171
  3936  0739  2F3B               	goto	u6170
  3937  073A                     u6171:
  3938  073A  2F3C               	goto	l3777
  3939  073B                     u6170:
  3940  073B                     l3775:
  3941  073B  2F54               	goto	l3781
  3942  073C                     l3777:
  3943  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3944  073D  1303               	bcf	3,6	;RP1=0, select bank1
  3945  073E  0847               	movf	(sprintf@prec+1)^(0+128),w
  3946  073F  3A80               	xorlw	128
  3947  0740  00AB               	movwf	??_sprintf^(0+128)
  3948  0741  3080               	movlw	128
  3949  0742  022B               	subwf	??_sprintf^(0+128),w
  3950  0743  1D03               	skipz
  3951  0744  2F47               	goto	u6185
  3952  0745  0848               	movf	sprintf@c^(0+128),w
  3953  0746  0246               	subwf	sprintf@prec^(0+128),w
  3954  0747                     u6185:
  3955  0747  1803               	skipnc
  3956  0748  2F4A               	goto	u6181
  3957  0749  2F4B               	goto	u6180
  3958  074A                     u6181:
  3959  074A  2F54               	goto	l3781
  3960  074B                     u6180:
  3961  074B                     l3779:
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3964  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3965  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3966  074D  0848               	movf	sprintf@c^(0+128),w
  3967  074E  00AB               	movwf	??_sprintf^(0+128)
  3968  074F  01AC               	clrf	(??_sprintf^(0+128)+1)
  3969  0750  082B               	movf	??_sprintf^(0+128),w
  3970  0751  00C6               	movwf	sprintf@prec^(0+128)
  3971  0752  082C               	movf	(??_sprintf+1)^(0+128),w
  3972  0753  00C7               	movwf	(sprintf@prec+1)^(0+128)
  3973  0754                     l3781:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3976  0754  3003               	movlw	3
  3977  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0756  1303               	bcf	3,6	;RP1=0, select bank1
  3979  0757  0535               	andwf	sprintf@flag^(0+128),w
  3980  0758  00AB               	movwf	??_sprintf^(0+128)
  3981  0759  3000               	movlw	0
  3982  075A  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3983  075B  00AC               	movwf	(??_sprintf+1)^(0+128)
  3984  075C  082B               	movf	??_sprintf^(0+128),w
  3985  075D  042C               	iorwf	(??_sprintf^(0+128)+1),w
  3986  075E  1903               	btfsc	3,2
  3987  075F  2F61               	goto	u6191
  3988  0760  2F62               	goto	u6190
  3989  0761                     u6191:
  3990  0761  2FCB               	goto	l3793
  3991  0762                     u6190:
  3992  0762                     l3783:
  3993                           
  3994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3995  0762  302D               	movlw	45
  3996  0763  00AB               	movwf	??_sprintf^(0+128)
  3997  0764  0841               	movf	sprintf@sp^(0+128),w
  3998  0765  0084               	movwf	4
  3999  0766  082B               	movf	??_sprintf^(0+128),w
  4000  0767  1383               	bcf	3,7	;select IRP bank0
  4001  0768  0080               	movwf	0
  4002  0769                     l3785:
  4003  0769  3001               	movlw	1
  4004  076A  00AB               	movwf	??_sprintf^(0+128)
  4005  076B  082B               	movf	??_sprintf^(0+128),w
  4006  076C  07C1               	addwf	sprintf@sp^(0+128),f
  4007  076D  2FCB               	goto	l3793
  4008  076E                     l3787:
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4011  076E  3000               	movlw	0
  4012  076F  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0770  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0771  00A3               	movwf	___llmod@divisor+3
  4015  0772  3000               	movlw	0
  4016  0773  00A2               	movwf	___llmod@divisor+2
  4017  0774  3000               	movlw	0
  4018  0775  00A1               	movwf	___llmod@divisor+1
  4019  0776  300A               	movlw	10
  4020  0777  00A0               	movwf	___llmod@divisor
  4021  0778  1683               	bsf	3,5	;RP0=1, select bank1
  4022  0779  1303               	bcf	3,6	;RP1=0, select bank1
  4023  077A  0846               	movf	sprintf@prec^(0+128),w
  4024  077B  00AB               	movwf	??_sprintf^(0+128)
  4025  077C  3001               	movlw	1
  4026  077D                     u6205:
  4027  077D  1003               	clrc
  4028  077E  0DAB               	rlf	??_sprintf^(0+128),f
  4029  077F  3EFF               	addlw	-1
  4030  0780  1D03               	skipz
  4031  0781  2F7D               	goto	u6205
  4032  0782  1003               	clrc
  4033  0783  0D2B               	rlf	??_sprintf^(0+128),w
  4034  0784  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4035  0785  0084               	movwf	4
  4036  0786  160A  158A  200A  120A  118A  	fcall	stringdir
  4037  078B  00F0               	movwf	___lldiv@divisor
  4038  078C  160A  158A  200A  120A  118A  	fcall	stringdir
  4039  0791  00F1               	movwf	___lldiv@divisor+1
  4040  0792  160A  158A  200A  120A  118A  	fcall	stringdir
  4041  0797  00F2               	movwf	___lldiv@divisor+2
  4042  0798  160A  158A  200A  120A  118A  	fcall	stringdir
  4043  079D  00F3               	movwf	___lldiv@divisor+3
  4044  079E  0840               	movf	(sprintf@val+3)^(0+128),w
  4045  079F  00F7               	movwf	___lldiv@dividend+3
  4046  07A0  083F               	movf	(sprintf@val+2)^(0+128),w
  4047  07A1  00F6               	movwf	___lldiv@dividend+2
  4048  07A2  083E               	movf	(sprintf@val+1)^(0+128),w
  4049  07A3  00F5               	movwf	___lldiv@dividend+1
  4050  07A4  083D               	movf	sprintf@val^(0+128),w
  4051  07A5  00F4               	movwf	___lldiv@dividend
  4052  07A6  160A  158A  2559  120A  118A  	fcall	___lldiv
  4053  07AB  0873               	movf	?___lldiv+3,w
  4054  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  4055  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  4056  07AE  00A7               	movwf	___llmod@dividend+3
  4057  07AF  0872               	movf	?___lldiv+2,w
  4058  07B0  00A6               	movwf	___llmod@dividend+2
  4059  07B1  0871               	movf	?___lldiv+1,w
  4060  07B2  00A5               	movwf	___llmod@dividend+1
  4061  07B3  0870               	movf	?___lldiv,w
  4062  07B4  00A4               	movwf	___llmod@dividend
  4063  07B5  160A  158A  24AA  120A  118A  	fcall	___llmod
  4064  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4065  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4066  07BC  0820               	movf	?___llmod,w
  4067  07BD  3E30               	addlw	48
  4068  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  4069  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  4070  07C0  00AC               	movwf	(??_sprintf+1)^(0+128)
  4071  07C1  082C               	movf	(??_sprintf+1)^(0+128),w
  4072  07C2  00C8               	movwf	sprintf@c^(0+128)
  4073  07C3                     l3789:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4076  07C3  0848               	movf	sprintf@c^(0+128),w
  4077  07C4  00AB               	movwf	??_sprintf^(0+128)
  4078  07C5  0841               	movf	sprintf@sp^(0+128),w
  4079  07C6  0084               	movwf	4
  4080  07C7  082B               	movf	??_sprintf^(0+128),w
  4081  07C8  1383               	bcf	3,7	;select IRP bank0
  4082  07C9  0080               	movwf	0
  4083  07CA  2F69               	goto	l3785
  4084  07CB                     l3793:
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4087  07CB  30FF               	movlw	255
  4088  07CC  07C6               	addwf	sprintf@prec^(0+128),f
  4089  07CD  1803               	skipnc
  4090  07CE  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  4091  07CF  30FF               	movlw	255
  4092  07D0  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  4093  07D1  0A46               	incf	sprintf@prec^(0+128),w
  4094  07D2  1D03               	skipz
  4095  07D3  2FD8               	goto	u6211
  4096  07D4  0A47               	incf	(sprintf@prec+1)^(0+128),w
  4097  07D5  1D03               	btfss	3,2
  4098  07D6  2FD8               	goto	u6211
  4099  07D7  2FD9               	goto	u6210
  4100  07D8                     u6211:
  4101  07D8  2F6E               	goto	l3787
  4102  07D9                     u6210:
  4103  07D9                     l3795:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4106  07D9  3001               	movlw	1
  4107  07DA  07A0               	addwf	sprintf@f^(0+128),f
  4108  07DB  30FF               	movlw	-1
  4109  07DC  0720               	addwf	sprintf@f^(0+128),w
  4110  07DD  0084               	movwf	4
  4111  07DE  160A  158A  200A  120A  118A  	fcall	stringdir
  4112  07E3  00AB               	movwf	??_sprintf^(0+128)
  4113  07E4  082B               	movf	??_sprintf^(0+128),w
  4114  07E5  00C8               	movwf	sprintf@c^(0+128)
  4115  07E6  0848               	movf	sprintf@c^(0+128),w
  4116  07E7  1D03               	btfss	3,2
  4117  07E8  2FEA               	goto	u6221
  4118  07E9  2FEB               	goto	u6220
  4119  07EA                     u6221:
  4120  07EA  2857               	goto	l3571
  4121  07EB                     u6220:
  4122  07EB                     l3797:
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4125  07EB  0841               	movf	sprintf@sp^(0+128),w
  4126  07EC  0084               	movwf	4
  4127  07ED  1383               	bcf	3,7	;select IRP bank0
  4128  07EE  0180               	clrf	0
  4129  07EF                     l398:
  4130  07EF  0008               	return
  4131  07F0                     __end_of_sprintf:
  4132                           
  4133                           	psect	text2
  4134  0940                     __ptext2:	
  4135 ;; *************** function _scale *****************
  4136 ;; Defined at:
  4137 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  scl             1    wreg     char 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  scl             1   48[BANK0 ] char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  4   30[BANK0 ] char 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4151 ;;      Params:         0       4       0       0       0
  4152 ;;      Locals:         0       5       0       0       0
  4153 ;;      Temps:          0      10       0       0       0
  4154 ;;      Totals:         0      19       0       0       0
  4155 ;;Total ram usage:       19 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    2
  4158 ;; This function calls:
  4159 ;;		___awdiv
  4160 ;;		___awmod
  4161 ;;		___flmul
  4162 ;; This function is called by:
  4163 ;;		_sprintf
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _scale
  4169  0940                     _scale:
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4173                           ;scale@scl stored from wreg
  4174  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0942  00D0               	movwf	scale@scl
  4177  0943                     l3035:
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4180  0943  1FD0               	btfss	scale@scl,7
  4181  0944  2946               	goto	u4511
  4182  0945  2947               	goto	u4510
  4183  0946                     u4511:
  4184  0946  2AF4               	goto	l3057
  4185  0947                     u4510:
  4186  0947                     l3037:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4189  0947  09D0               	comf	scale@scl,f
  4190  0948  0AD0               	incf	scale@scl,f
  4191  0949                     l3039:
  4192                           
  4193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4194  0949  0850               	movf	scale@scl,w
  4195  094A  3A80               	xorlw	128
  4196  094B  3E12               	addlw	-238
  4197  094C  1C03               	skipc
  4198  094D  294F               	goto	u4521
  4199  094E  2950               	goto	u4520
  4200  094F                     u4521:
  4201  094F  2A38               	goto	l3047
  4202  0950                     u4520:
  4203  0950                     l3041:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4206  0950  300A               	movlw	10
  4207  0951  00F7               	movwf	___awdiv@divisor
  4208  0952  3000               	movlw	0
  4209  0953  00F8               	movwf	___awdiv@divisor+1
  4210  0954  0850               	movf	scale@scl,w
  4211  0955  00F2               	movwf	___awmod@dividend
  4212  0956  01F3               	clrf	___awmod@dividend+1
  4213  0957  1BF2               	btfsc	___awmod@dividend,7
  4214  0958  03F3               	decf	___awmod@dividend+1,f
  4215  0959  3064               	movlw	100
  4216  095A  00F0               	movwf	___awmod@divisor
  4217  095B  3000               	movlw	0
  4218  095C  00F1               	movwf	___awmod@divisor+1
  4219  095D  160A  158A  2500  120A  158A  	fcall	___awmod
  4220  0962  0871               	movf	?___awmod+1,w
  4221  0963  00FA               	movwf	___awdiv@dividend+1
  4222  0964  0870               	movf	?___awmod,w
  4223  0965  00F9               	movwf	___awdiv@dividend
  4224  0966  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4225  096B  0877               	movf	?___awdiv,w
  4226  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4227  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4228  096E  00C2               	movwf	??_scale
  4229  096F  3001               	movlw	1
  4230  0970                     u4535:
  4231  0970  1003               	clrc
  4232  0971  0DC2               	rlf	??_scale,f
  4233  0972  3EFF               	addlw	-1
  4234  0973  1D03               	skipz
  4235  0974  2970               	goto	u4535
  4236  0975  1003               	clrc
  4237  0976  0D42               	rlf	??_scale,w
  4238  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4239  0978  0084               	movwf	4
  4240  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  4241  097E  00C3               	movwf	??_scale+1
  4242  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  4243  0984  00C4               	movwf	??_scale+2
  4244  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  4245  098A  00C5               	movwf	??_scale+3
  4246  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  4247  0990  00C6               	movwf	??_scale+4
  4248  0991  0846               	movf	??_scale+4,w
  4249  0992  00A7               	movwf	___flmul@b+3
  4250  0993  0845               	movf	??_scale+3,w
  4251  0994  00A6               	movwf	___flmul@b+2
  4252  0995  0844               	movf	??_scale+2,w
  4253  0996  00A5               	movwf	___flmul@b+1
  4254  0997  0843               	movf	??_scale+1,w
  4255  0998  00A4               	movwf	___flmul@b
  4256  0999  3064               	movlw	100
  4257  099A  00F7               	movwf	___awdiv@divisor
  4258  099B  3000               	movlw	0
  4259  099C  00F8               	movwf	___awdiv@divisor+1
  4260  099D  0850               	movf	scale@scl,w
  4261  099E  00F9               	movwf	___awdiv@dividend
  4262  099F  01FA               	clrf	___awdiv@dividend+1
  4263  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4264  09A1  03FA               	decf	___awdiv@dividend+1,f
  4265  09A2  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4266  09A7  0877               	movf	?___awdiv,w
  4267  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4268  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4269  09AA  00C7               	movwf	??_scale+5
  4270  09AB  3001               	movlw	1
  4271  09AC                     u4545:
  4272  09AC  1003               	clrc
  4273  09AD  0DC7               	rlf	??_scale+5,f
  4274  09AE  3EFF               	addlw	-1
  4275  09AF  1D03               	skipz
  4276  09B0  29AC               	goto	u4545
  4277  09B1  1003               	clrc
  4278  09B2  0D47               	rlf	??_scale+5,w
  4279  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4280  09B4  0084               	movwf	4
  4281  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  4282  09BA  00C8               	movwf	??_scale+6
  4283  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  4284  09C0  00C9               	movwf	??_scale+7
  4285  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  4286  09C6  00CA               	movwf	??_scale+8
  4287  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  4288  09CC  00CB               	movwf	??_scale+9
  4289  09CD  084B               	movf	??_scale+9,w
  4290  09CE  00AB               	movwf	___flmul@a+3
  4291  09CF  084A               	movf	??_scale+8,w
  4292  09D0  00AA               	movwf	___flmul@a+2
  4293  09D1  0849               	movf	??_scale+7,w
  4294  09D2  00A9               	movwf	___flmul@a+1
  4295  09D3  0848               	movf	??_scale+6,w
  4296  09D4  00A8               	movwf	___flmul@a
  4297  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4298  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4299  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4300  09DC  0827               	movf	?___flmul+3,w
  4301  09DD  00CF               	movwf	_scale$1317+3
  4302  09DE  0826               	movf	?___flmul+2,w
  4303  09DF  00CE               	movwf	_scale$1317+2
  4304  09E0  0825               	movf	?___flmul+1,w
  4305  09E1  00CD               	movwf	_scale$1317+1
  4306  09E2  0824               	movf	?___flmul,w
  4307  09E3  00CC               	movwf	_scale$1317
  4308                           
  4309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4310  09E4  300A               	movlw	10
  4311  09E5  00F0               	movwf	___awmod@divisor
  4312  09E6  3000               	movlw	0
  4313  09E7  00F1               	movwf	___awmod@divisor+1
  4314  09E8  0850               	movf	scale@scl,w
  4315  09E9  00F2               	movwf	___awmod@dividend
  4316  09EA  01F3               	clrf	___awmod@dividend+1
  4317  09EB  1BF2               	btfsc	___awmod@dividend,7
  4318  09EC  03F3               	decf	___awmod@dividend+1,f
  4319  09ED  160A  158A  2500  120A  158A  	fcall	___awmod
  4320  09F2  0870               	movf	?___awmod,w
  4321  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4322  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4323  09F5  00C2               	movwf	??_scale
  4324  09F6  3001               	movlw	1
  4325  09F7                     u4555:
  4326  09F7  1003               	clrc
  4327  09F8  0DC2               	rlf	??_scale,f
  4328  09F9  3EFF               	addlw	-1
  4329  09FA  1D03               	skipz
  4330  09FB  29F7               	goto	u4555
  4331  09FC  1003               	clrc
  4332  09FD  0D42               	rlf	??_scale,w
  4333  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4334  09FF  0084               	movwf	4
  4335  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  4336  0A05  00C3               	movwf	??_scale+1
  4337  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  4338  0A0B  00C4               	movwf	??_scale+2
  4339  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4340  0A11  00C5               	movwf	??_scale+3
  4341  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  4342  0A17  00C6               	movwf	??_scale+4
  4343  0A18  0846               	movf	??_scale+4,w
  4344  0A19  00A7               	movwf	___flmul@b+3
  4345  0A1A  0845               	movf	??_scale+3,w
  4346  0A1B  00A6               	movwf	___flmul@b+2
  4347  0A1C  0844               	movf	??_scale+2,w
  4348  0A1D  00A5               	movwf	___flmul@b+1
  4349  0A1E  0843               	movf	??_scale+1,w
  4350  0A1F  00A4               	movwf	___flmul@b
  4351  0A20  084F               	movf	_scale$1317+3,w
  4352  0A21  00AB               	movwf	___flmul@a+3
  4353  0A22  084E               	movf	_scale$1317+2,w
  4354  0A23  00AA               	movwf	___flmul@a+2
  4355  0A24  084D               	movf	_scale$1317+1,w
  4356  0A25  00A9               	movwf	___flmul@a+1
  4357  0A26  084C               	movf	_scale$1317,w
  4358  0A27  00A8               	movwf	___flmul@a
  4359  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4360  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4362  0A2F  0827               	movf	?___flmul+3,w
  4363  0A30  00C1               	movwf	?_scale+3
  4364  0A31  0826               	movf	?___flmul+2,w
  4365  0A32  00C0               	movwf	?_scale+2
  4366  0A33  0825               	movf	?___flmul+1,w
  4367  0A34  00BF               	movwf	?_scale+1
  4368  0A35  0824               	movf	?___flmul,w
  4369  0A36  00BE               	movwf	?_scale
  4370  0A37  2C9E               	goto	l323
  4371  0A38                     l3047:
  4372  0A38  0850               	movf	scale@scl,w
  4373  0A39  3A80               	xorlw	128
  4374  0A3A  3E75               	addlw	-139
  4375  0A3B  1C03               	skipc
  4376  0A3C  2A3E               	goto	u4561
  4377  0A3D  2A3F               	goto	u4560
  4378  0A3E                     u4561:
  4379  0A3E  2AC7               	goto	l3053
  4380  0A3F                     u4560:
  4381  0A3F                     l3049:
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4384  0A3F  300A               	movlw	10
  4385  0A40  00F0               	movwf	___awmod@divisor
  4386  0A41  3000               	movlw	0
  4387  0A42  00F1               	movwf	___awmod@divisor+1
  4388  0A43  0850               	movf	scale@scl,w
  4389  0A44  00F2               	movwf	___awmod@dividend
  4390  0A45  01F3               	clrf	___awmod@dividend+1
  4391  0A46  1BF2               	btfsc	___awmod@dividend,7
  4392  0A47  03F3               	decf	___awmod@dividend+1,f
  4393  0A48  160A  158A  2500  120A  158A  	fcall	___awmod
  4394  0A4D  0870               	movf	?___awmod,w
  4395  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4397  0A50  00C2               	movwf	??_scale
  4398  0A51  3001               	movlw	1
  4399  0A52                     u4575:
  4400  0A52  1003               	clrc
  4401  0A53  0DC2               	rlf	??_scale,f
  4402  0A54  3EFF               	addlw	-1
  4403  0A55  1D03               	skipz
  4404  0A56  2A52               	goto	u4575
  4405  0A57  1003               	clrc
  4406  0A58  0D42               	rlf	??_scale,w
  4407  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4408  0A5A  0084               	movwf	4
  4409  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  4410  0A60  00C3               	movwf	??_scale+1
  4411  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  4412  0A66  00C4               	movwf	??_scale+2
  4413  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  4414  0A6C  00C5               	movwf	??_scale+3
  4415  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4416  0A72  00C6               	movwf	??_scale+4
  4417  0A73  0846               	movf	??_scale+4,w
  4418  0A74  00A7               	movwf	___flmul@b+3
  4419  0A75  0845               	movf	??_scale+3,w
  4420  0A76  00A6               	movwf	___flmul@b+2
  4421  0A77  0844               	movf	??_scale+2,w
  4422  0A78  00A5               	movwf	___flmul@b+1
  4423  0A79  0843               	movf	??_scale+1,w
  4424  0A7A  00A4               	movwf	___flmul@b
  4425  0A7B  300A               	movlw	10
  4426  0A7C  00F7               	movwf	___awdiv@divisor
  4427  0A7D  3000               	movlw	0
  4428  0A7E  00F8               	movwf	___awdiv@divisor+1
  4429  0A7F  0850               	movf	scale@scl,w
  4430  0A80  00F9               	movwf	___awdiv@dividend
  4431  0A81  01FA               	clrf	___awdiv@dividend+1
  4432  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4433  0A83  03FA               	decf	___awdiv@dividend+1,f
  4434  0A84  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4435  0A89  0877               	movf	?___awdiv,w
  4436  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4437  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4438  0A8C  00C7               	movwf	??_scale+5
  4439  0A8D  3001               	movlw	1
  4440  0A8E                     u4585:
  4441  0A8E  1003               	clrc
  4442  0A8F  0DC7               	rlf	??_scale+5,f
  4443  0A90  3EFF               	addlw	-1
  4444  0A91  1D03               	skipz
  4445  0A92  2A8E               	goto	u4585
  4446  0A93  1003               	clrc
  4447  0A94  0D47               	rlf	??_scale+5,w
  4448  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4449  0A96  0084               	movwf	4
  4450  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  4451  0A9C  00C8               	movwf	??_scale+6
  4452  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  4453  0AA2  00C9               	movwf	??_scale+7
  4454  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4455  0AA8  00CA               	movwf	??_scale+8
  4456  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4457  0AAE  00CB               	movwf	??_scale+9
  4458  0AAF  084B               	movf	??_scale+9,w
  4459  0AB0  00AB               	movwf	___flmul@a+3
  4460  0AB1  084A               	movf	??_scale+8,w
  4461  0AB2  00AA               	movwf	___flmul@a+2
  4462  0AB3  0849               	movf	??_scale+7,w
  4463  0AB4  00A9               	movwf	___flmul@a+1
  4464  0AB5  0848               	movf	??_scale+6,w
  4465  0AB6  00A8               	movwf	___flmul@a
  4466  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4467  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4469  0ABE  0827               	movf	?___flmul+3,w
  4470  0ABF  00C1               	movwf	?_scale+3
  4471  0AC0  0826               	movf	?___flmul+2,w
  4472  0AC1  00C0               	movwf	?_scale+2
  4473  0AC2  0825               	movf	?___flmul+1,w
  4474  0AC3  00BF               	movwf	?_scale+1
  4475  0AC4  0824               	movf	?___flmul,w
  4476  0AC5  00BE               	movwf	?_scale
  4477  0AC6  2C9E               	goto	l323
  4478  0AC7                     l3053:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4481  0AC7  0850               	movf	scale@scl,w
  4482  0AC8  00C2               	movwf	??_scale
  4483  0AC9  3001               	movlw	1
  4484  0ACA                     u4595:
  4485  0ACA  1003               	clrc
  4486  0ACB  0DC2               	rlf	??_scale,f
  4487  0ACC  3EFF               	addlw	-1
  4488  0ACD  1D03               	skipz
  4489  0ACE  2ACA               	goto	u4595
  4490  0ACF  1003               	clrc
  4491  0AD0  0D42               	rlf	??_scale,w
  4492  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4493  0AD2  0084               	movwf	4
  4494  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  4495  0AD8  00C3               	movwf	??_scale+1
  4496  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  4497  0ADE  00C4               	movwf	??_scale+2
  4498  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  4499  0AE4  00C5               	movwf	??_scale+3
  4500  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4501  0AEA  00C6               	movwf	??_scale+4
  4502  0AEB  0846               	movf	??_scale+4,w
  4503  0AEC  00C1               	movwf	?_scale+3
  4504  0AED  0845               	movf	??_scale+3,w
  4505  0AEE  00C0               	movwf	?_scale+2
  4506  0AEF  0844               	movf	??_scale+2,w
  4507  0AF0  00BF               	movwf	?_scale+1
  4508  0AF1  0843               	movf	??_scale+1,w
  4509  0AF2  00BE               	movwf	?_scale
  4510  0AF3  2C9E               	goto	l323
  4511  0AF4                     l3057:
  4512                           
  4513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4514  0AF4  0850               	movf	scale@scl,w
  4515  0AF5  3A80               	xorlw	128
  4516  0AF6  3E12               	addlw	-238
  4517  0AF7  1C03               	skipc
  4518  0AF8  2AFA               	goto	u4601
  4519  0AF9  2AFB               	goto	u4600
  4520  0AFA                     u4601:
  4521  0AFA  2BE3               	goto	l3065
  4522  0AFB                     u4600:
  4523  0AFB                     l3059:
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4526  0AFB  300A               	movlw	10
  4527  0AFC  00F7               	movwf	___awdiv@divisor
  4528  0AFD  3000               	movlw	0
  4529  0AFE  00F8               	movwf	___awdiv@divisor+1
  4530  0AFF  0850               	movf	scale@scl,w
  4531  0B00  00F2               	movwf	___awmod@dividend
  4532  0B01  01F3               	clrf	___awmod@dividend+1
  4533  0B02  1BF2               	btfsc	___awmod@dividend,7
  4534  0B03  03F3               	decf	___awmod@dividend+1,f
  4535  0B04  3064               	movlw	100
  4536  0B05  00F0               	movwf	___awmod@divisor
  4537  0B06  3000               	movlw	0
  4538  0B07  00F1               	movwf	___awmod@divisor+1
  4539  0B08  160A  158A  2500  120A  158A  	fcall	___awmod
  4540  0B0D  0871               	movf	?___awmod+1,w
  4541  0B0E  00FA               	movwf	___awdiv@dividend+1
  4542  0B0F  0870               	movf	?___awmod,w
  4543  0B10  00F9               	movwf	___awdiv@dividend
  4544  0B11  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4545  0B16  0877               	movf	?___awdiv,w
  4546  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0B19  00C2               	movwf	??_scale
  4549  0B1A  3001               	movlw	1
  4550  0B1B                     u4615:
  4551  0B1B  1003               	clrc
  4552  0B1C  0DC2               	rlf	??_scale,f
  4553  0B1D  3EFF               	addlw	-1
  4554  0B1E  1D03               	skipz
  4555  0B1F  2B1B               	goto	u4615
  4556  0B20  1003               	clrc
  4557  0B21  0D42               	rlf	??_scale,w
  4558  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4559  0B23  0084               	movwf	4
  4560  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  4561  0B29  00C3               	movwf	??_scale+1
  4562  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  4563  0B2F  00C4               	movwf	??_scale+2
  4564  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  4565  0B35  00C5               	movwf	??_scale+3
  4566  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  4567  0B3B  00C6               	movwf	??_scale+4
  4568  0B3C  0846               	movf	??_scale+4,w
  4569  0B3D  00A7               	movwf	___flmul@b+3
  4570  0B3E  0845               	movf	??_scale+3,w
  4571  0B3F  00A6               	movwf	___flmul@b+2
  4572  0B40  0844               	movf	??_scale+2,w
  4573  0B41  00A5               	movwf	___flmul@b+1
  4574  0B42  0843               	movf	??_scale+1,w
  4575  0B43  00A4               	movwf	___flmul@b
  4576  0B44  3064               	movlw	100
  4577  0B45  00F7               	movwf	___awdiv@divisor
  4578  0B46  3000               	movlw	0
  4579  0B47  00F8               	movwf	___awdiv@divisor+1
  4580  0B48  0850               	movf	scale@scl,w
  4581  0B49  00F9               	movwf	___awdiv@dividend
  4582  0B4A  01FA               	clrf	___awdiv@dividend+1
  4583  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4584  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4585  0B4D  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4586  0B52  0877               	movf	?___awdiv,w
  4587  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0B55  00C7               	movwf	??_scale+5
  4590  0B56  3001               	movlw	1
  4591  0B57                     u4625:
  4592  0B57  1003               	clrc
  4593  0B58  0DC7               	rlf	??_scale+5,f
  4594  0B59  3EFF               	addlw	-1
  4595  0B5A  1D03               	skipz
  4596  0B5B  2B57               	goto	u4625
  4597  0B5C  1003               	clrc
  4598  0B5D  0D47               	rlf	??_scale+5,w
  4599  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4600  0B5F  0084               	movwf	4
  4601  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  4602  0B65  00C8               	movwf	??_scale+6
  4603  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  4604  0B6B  00C9               	movwf	??_scale+7
  4605  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  4606  0B71  00CA               	movwf	??_scale+8
  4607  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  4608  0B77  00CB               	movwf	??_scale+9
  4609  0B78  084B               	movf	??_scale+9,w
  4610  0B79  00AB               	movwf	___flmul@a+3
  4611  0B7A  084A               	movf	??_scale+8,w
  4612  0B7B  00AA               	movwf	___flmul@a+2
  4613  0B7C  0849               	movf	??_scale+7,w
  4614  0B7D  00A9               	movwf	___flmul@a+1
  4615  0B7E  0848               	movf	??_scale+6,w
  4616  0B7F  00A8               	movwf	___flmul@a
  4617  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4618  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0B87  0827               	movf	?___flmul+3,w
  4621  0B88  00CF               	movwf	_scale$1317+3
  4622  0B89  0826               	movf	?___flmul+2,w
  4623  0B8A  00CE               	movwf	_scale$1317+2
  4624  0B8B  0825               	movf	?___flmul+1,w
  4625  0B8C  00CD               	movwf	_scale$1317+1
  4626  0B8D  0824               	movf	?___flmul,w
  4627  0B8E  00CC               	movwf	_scale$1317
  4628                           
  4629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4630  0B8F  300A               	movlw	10
  4631  0B90  00F0               	movwf	___awmod@divisor
  4632  0B91  3000               	movlw	0
  4633  0B92  00F1               	movwf	___awmod@divisor+1
  4634  0B93  0850               	movf	scale@scl,w
  4635  0B94  00F2               	movwf	___awmod@dividend
  4636  0B95  01F3               	clrf	___awmod@dividend+1
  4637  0B96  1BF2               	btfsc	___awmod@dividend,7
  4638  0B97  03F3               	decf	___awmod@dividend+1,f
  4639  0B98  160A  158A  2500  120A  158A  	fcall	___awmod
  4640  0B9D  0870               	movf	?___awmod,w
  4641  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4642  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4643  0BA0  00C2               	movwf	??_scale
  4644  0BA1  3001               	movlw	1
  4645  0BA2                     u4635:
  4646  0BA2  1003               	clrc
  4647  0BA3  0DC2               	rlf	??_scale,f
  4648  0BA4  3EFF               	addlw	-1
  4649  0BA5  1D03               	skipz
  4650  0BA6  2BA2               	goto	u4635
  4651  0BA7  1003               	clrc
  4652  0BA8  0D42               	rlf	??_scale,w
  4653  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4654  0BAA  0084               	movwf	4
  4655  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  4656  0BB0  00C3               	movwf	??_scale+1
  4657  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  4658  0BB6  00C4               	movwf	??_scale+2
  4659  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  4660  0BBC  00C5               	movwf	??_scale+3
  4661  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  4662  0BC2  00C6               	movwf	??_scale+4
  4663  0BC3  0846               	movf	??_scale+4,w
  4664  0BC4  00A7               	movwf	___flmul@b+3
  4665  0BC5  0845               	movf	??_scale+3,w
  4666  0BC6  00A6               	movwf	___flmul@b+2
  4667  0BC7  0844               	movf	??_scale+2,w
  4668  0BC8  00A5               	movwf	___flmul@b+1
  4669  0BC9  0843               	movf	??_scale+1,w
  4670  0BCA  00A4               	movwf	___flmul@b
  4671  0BCB  084F               	movf	_scale$1317+3,w
  4672  0BCC  00AB               	movwf	___flmul@a+3
  4673  0BCD  084E               	movf	_scale$1317+2,w
  4674  0BCE  00AA               	movwf	___flmul@a+2
  4675  0BCF  084D               	movf	_scale$1317+1,w
  4676  0BD0  00A9               	movwf	___flmul@a+1
  4677  0BD1  084C               	movf	_scale$1317,w
  4678  0BD2  00A8               	movwf	___flmul@a
  4679  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4680  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0BDA  0827               	movf	?___flmul+3,w
  4683  0BDB  00C1               	movwf	?_scale+3
  4684  0BDC  0826               	movf	?___flmul+2,w
  4685  0BDD  00C0               	movwf	?_scale+2
  4686  0BDE  0825               	movf	?___flmul+1,w
  4687  0BDF  00BF               	movwf	?_scale+1
  4688  0BE0  0824               	movf	?___flmul,w
  4689  0BE1  00BE               	movwf	?_scale
  4690  0BE2  2C9E               	goto	l323
  4691  0BE3                     l3065:
  4692  0BE3  0850               	movf	scale@scl,w
  4693  0BE4  3A80               	xorlw	128
  4694  0BE5  3E75               	addlw	-139
  4695  0BE6  1C03               	skipc
  4696  0BE7  2BE9               	goto	u4641
  4697  0BE8  2BEA               	goto	u4640
  4698  0BE9                     u4641:
  4699  0BE9  2C72               	goto	l3071
  4700  0BEA                     u4640:
  4701  0BEA                     l3067:
  4702                           
  4703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4704  0BEA  300A               	movlw	10
  4705  0BEB  00F0               	movwf	___awmod@divisor
  4706  0BEC  3000               	movlw	0
  4707  0BED  00F1               	movwf	___awmod@divisor+1
  4708  0BEE  0850               	movf	scale@scl,w
  4709  0BEF  00F2               	movwf	___awmod@dividend
  4710  0BF0  01F3               	clrf	___awmod@dividend+1
  4711  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4712  0BF2  03F3               	decf	___awmod@dividend+1,f
  4713  0BF3  160A  158A  2500  120A  158A  	fcall	___awmod
  4714  0BF8  0870               	movf	?___awmod,w
  4715  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0BFB  00C2               	movwf	??_scale
  4718  0BFC  3001               	movlw	1
  4719  0BFD                     u4655:
  4720  0BFD  1003               	clrc
  4721  0BFE  0DC2               	rlf	??_scale,f
  4722  0BFF  3EFF               	addlw	-1
  4723  0C00  1D03               	skipz
  4724  0C01  2BFD               	goto	u4655
  4725  0C02  1003               	clrc
  4726  0C03  0D42               	rlf	??_scale,w
  4727  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4728  0C05  0084               	movwf	4
  4729  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  4730  0C0B  00C3               	movwf	??_scale+1
  4731  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4732  0C11  00C4               	movwf	??_scale+2
  4733  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  4734  0C17  00C5               	movwf	??_scale+3
  4735  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  4736  0C1D  00C6               	movwf	??_scale+4
  4737  0C1E  0846               	movf	??_scale+4,w
  4738  0C1F  00A7               	movwf	___flmul@b+3
  4739  0C20  0845               	movf	??_scale+3,w
  4740  0C21  00A6               	movwf	___flmul@b+2
  4741  0C22  0844               	movf	??_scale+2,w
  4742  0C23  00A5               	movwf	___flmul@b+1
  4743  0C24  0843               	movf	??_scale+1,w
  4744  0C25  00A4               	movwf	___flmul@b
  4745  0C26  300A               	movlw	10
  4746  0C27  00F7               	movwf	___awdiv@divisor
  4747  0C28  3000               	movlw	0
  4748  0C29  00F8               	movwf	___awdiv@divisor+1
  4749  0C2A  0850               	movf	scale@scl,w
  4750  0C2B  00F9               	movwf	___awdiv@dividend
  4751  0C2C  01FA               	clrf	___awdiv@dividend+1
  4752  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4753  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4754  0C2F  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4755  0C34  0877               	movf	?___awdiv,w
  4756  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0C37  00C7               	movwf	??_scale+5
  4759  0C38  3001               	movlw	1
  4760  0C39                     u4665:
  4761  0C39  1003               	clrc
  4762  0C3A  0DC7               	rlf	??_scale+5,f
  4763  0C3B  3EFF               	addlw	-1
  4764  0C3C  1D03               	skipz
  4765  0C3D  2C39               	goto	u4665
  4766  0C3E  1003               	clrc
  4767  0C3F  0D47               	rlf	??_scale+5,w
  4768  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4769  0C41  0084               	movwf	4
  4770  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  4771  0C47  00C8               	movwf	??_scale+6
  4772  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  4773  0C4D  00C9               	movwf	??_scale+7
  4774  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  4775  0C53  00CA               	movwf	??_scale+8
  4776  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  4777  0C59  00CB               	movwf	??_scale+9
  4778  0C5A  084B               	movf	??_scale+9,w
  4779  0C5B  00AB               	movwf	___flmul@a+3
  4780  0C5C  084A               	movf	??_scale+8,w
  4781  0C5D  00AA               	movwf	___flmul@a+2
  4782  0C5E  0849               	movf	??_scale+7,w
  4783  0C5F  00A9               	movwf	___flmul@a+1
  4784  0C60  0848               	movf	??_scale+6,w
  4785  0C61  00A8               	movwf	___flmul@a
  4786  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4787  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4788  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0C69  0827               	movf	?___flmul+3,w
  4790  0C6A  00C1               	movwf	?_scale+3
  4791  0C6B  0826               	movf	?___flmul+2,w
  4792  0C6C  00C0               	movwf	?_scale+2
  4793  0C6D  0825               	movf	?___flmul+1,w
  4794  0C6E  00BF               	movwf	?_scale+1
  4795  0C6F  0824               	movf	?___flmul,w
  4796  0C70  00BE               	movwf	?_scale
  4797  0C71  2C9E               	goto	l323
  4798  0C72                     l3071:
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4801  0C72  0850               	movf	scale@scl,w
  4802  0C73  00C2               	movwf	??_scale
  4803  0C74  3001               	movlw	1
  4804  0C75                     u4675:
  4805  0C75  1003               	clrc
  4806  0C76  0DC2               	rlf	??_scale,f
  4807  0C77  3EFF               	addlw	-1
  4808  0C78  1D03               	skipz
  4809  0C79  2C75               	goto	u4675
  4810  0C7A  1003               	clrc
  4811  0C7B  0D42               	rlf	??_scale,w
  4812  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4813  0C7D  0084               	movwf	4
  4814  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  4815  0C83  00C3               	movwf	??_scale+1
  4816  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  4817  0C89  00C4               	movwf	??_scale+2
  4818  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  4819  0C8F  00C5               	movwf	??_scale+3
  4820  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  4821  0C95  00C6               	movwf	??_scale+4
  4822  0C96  0846               	movf	??_scale+4,w
  4823  0C97  00C1               	movwf	?_scale+3
  4824  0C98  0845               	movf	??_scale+3,w
  4825  0C99  00C0               	movwf	?_scale+2
  4826  0C9A  0844               	movf	??_scale+2,w
  4827  0C9B  00BF               	movwf	?_scale+1
  4828  0C9C  0843               	movf	??_scale+1,w
  4829  0C9D  00BE               	movwf	?_scale
  4830  0C9E                     l323:
  4831  0C9E  0008               	return
  4832  0C9F                     __end_of_scale:
  4833                           
  4834                           	psect	text3
  4835  1D00                     __ptext3:	
  4836 ;; *************** function ___awmod *****************
  4837 ;; Defined at:
  4838 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  divisor         2    0[COMMON] int 
  4841 ;;  dividend        2    2[COMMON] int 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  sign            1    6[COMMON] unsigned char 
  4844 ;;  counter         1    5[COMMON] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  2    0[COMMON] int 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4854 ;;      Params:         4       0       0       0       0
  4855 ;;      Locals:         2       0       0       0       0
  4856 ;;      Temps:          1       0       0       0       0
  4857 ;;      Totals:         7       0       0       0       0
  4858 ;;Total ram usage:        7 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_scale
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function ___awmod
  4869  1D00                     ___awmod:
  4870  1D00                     l2573:	
  4871                           ;incstack = 0
  4872                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4873                           
  4874  1D00  01F6               	clrf	___awmod@sign
  4875  1D01                     l2575:
  4876  1D01  1FF3               	btfss	___awmod@dividend+1,7
  4877  1D02  2D04               	goto	u3361
  4878  1D03  2D05               	goto	u3360
  4879  1D04                     u3361:
  4880  1D04  2D0C               	goto	l2581
  4881  1D05                     u3360:
  4882  1D05                     l2577:
  4883  1D05  09F2               	comf	___awmod@dividend,f
  4884  1D06  09F3               	comf	___awmod@dividend+1,f
  4885  1D07  0AF2               	incf	___awmod@dividend,f
  4886  1D08  1903               	skipnz
  4887  1D09  0AF3               	incf	___awmod@dividend+1,f
  4888  1D0A                     l2579:
  4889  1D0A  01F6               	clrf	___awmod@sign
  4890  1D0B  0AF6               	incf	___awmod@sign,f
  4891  1D0C                     l2581:
  4892  1D0C  1FF1               	btfss	___awmod@divisor+1,7
  4893  1D0D  2D0F               	goto	u3371
  4894  1D0E  2D10               	goto	u3370
  4895  1D0F                     u3371:
  4896  1D0F  2D15               	goto	l2585
  4897  1D10                     u3370:
  4898  1D10                     l2583:
  4899  1D10  09F0               	comf	___awmod@divisor,f
  4900  1D11  09F1               	comf	___awmod@divisor+1,f
  4901  1D12  0AF0               	incf	___awmod@divisor,f
  4902  1D13  1903               	skipnz
  4903  1D14  0AF1               	incf	___awmod@divisor+1,f
  4904  1D15                     l2585:
  4905  1D15  0870               	movf	___awmod@divisor,w
  4906  1D16  0471               	iorwf	___awmod@divisor+1,w
  4907  1D17  1903               	btfsc	3,2
  4908  1D18  2D1A               	goto	u3381
  4909  1D19  2D1B               	goto	u3380
  4910  1D1A                     u3381:
  4911  1D1A  2D4A               	goto	l2603
  4912  1D1B                     u3380:
  4913  1D1B                     l2587:
  4914  1D1B  01F5               	clrf	___awmod@counter
  4915  1D1C  0AF5               	incf	___awmod@counter,f
  4916  1D1D  2D29               	goto	l2593
  4917  1D1E                     l2589:
  4918  1D1E  3001               	movlw	1
  4919  1D1F                     u3395:
  4920  1D1F  1003               	clrc
  4921  1D20  0DF0               	rlf	___awmod@divisor,f
  4922  1D21  0DF1               	rlf	___awmod@divisor+1,f
  4923  1D22  3EFF               	addlw	-1
  4924  1D23  1D03               	skipz
  4925  1D24  2D1F               	goto	u3395
  4926  1D25                     l2591:
  4927  1D25  3001               	movlw	1
  4928  1D26  00F4               	movwf	??___awmod
  4929  1D27  0874               	movf	??___awmod,w
  4930  1D28  07F5               	addwf	___awmod@counter,f
  4931  1D29                     l2593:
  4932  1D29  1FF1               	btfss	___awmod@divisor+1,7
  4933  1D2A  2D2C               	goto	u3401
  4934  1D2B  2D2D               	goto	u3400
  4935  1D2C                     u3401:
  4936  1D2C  2D1E               	goto	l2589
  4937  1D2D                     u3400:
  4938  1D2D                     l2595:
  4939  1D2D  0871               	movf	___awmod@divisor+1,w
  4940  1D2E  0273               	subwf	___awmod@dividend+1,w
  4941  1D2F  1D03               	skipz
  4942  1D30  2D33               	goto	u3415
  4943  1D31  0870               	movf	___awmod@divisor,w
  4944  1D32  0272               	subwf	___awmod@dividend,w
  4945  1D33                     u3415:
  4946  1D33  1C03               	skipc
  4947  1D34  2D36               	goto	u3411
  4948  1D35  2D37               	goto	u3410
  4949  1D36                     u3411:
  4950  1D36  2D3D               	goto	l2599
  4951  1D37                     u3410:
  4952  1D37                     l2597:
  4953  1D37  0870               	movf	___awmod@divisor,w
  4954  1D38  02F2               	subwf	___awmod@dividend,f
  4955  1D39  0871               	movf	___awmod@divisor+1,w
  4956  1D3A  1C03               	skipc
  4957  1D3B  03F3               	decf	___awmod@dividend+1,f
  4958  1D3C  02F3               	subwf	___awmod@dividend+1,f
  4959  1D3D                     l2599:
  4960  1D3D  3001               	movlw	1
  4961  1D3E                     u3425:
  4962  1D3E  1003               	clrc
  4963  1D3F  0CF1               	rrf	___awmod@divisor+1,f
  4964  1D40  0CF0               	rrf	___awmod@divisor,f
  4965  1D41  3EFF               	addlw	-1
  4966  1D42  1D03               	skipz
  4967  1D43  2D3E               	goto	u3425
  4968  1D44                     l2601:
  4969  1D44  3001               	movlw	1
  4970  1D45  02F5               	subwf	___awmod@counter,f
  4971  1D46  1D03               	btfss	3,2
  4972  1D47  2D49               	goto	u3431
  4973  1D48  2D4A               	goto	u3430
  4974  1D49                     u3431:
  4975  1D49  2D2D               	goto	l2595
  4976  1D4A                     u3430:
  4977  1D4A                     l2603:
  4978  1D4A  0876               	movf	___awmod@sign,w
  4979  1D4B  1903               	btfsc	3,2
  4980  1D4C  2D4E               	goto	u3441
  4981  1D4D  2D4F               	goto	u3440
  4982  1D4E                     u3441:
  4983  1D4E  2D54               	goto	l2607
  4984  1D4F                     u3440:
  4985  1D4F                     l2605:
  4986  1D4F  09F2               	comf	___awmod@dividend,f
  4987  1D50  09F3               	comf	___awmod@dividend+1,f
  4988  1D51  0AF2               	incf	___awmod@dividend,f
  4989  1D52  1903               	skipnz
  4990  1D53  0AF3               	incf	___awmod@dividend+1,f
  4991  1D54                     l2607:
  4992  1D54  0873               	movf	___awmod@dividend+1,w
  4993  1D55  00F1               	movwf	?___awmod+1
  4994  1D56  0872               	movf	___awmod@dividend,w
  4995  1D57  00F0               	movwf	?___awmod
  4996  1D58                     l568:
  4997  1D58  0008               	return
  4998  1D59                     __end_of___awmod:
  4999                           
  5000                           	psect	text4
  5001  1DBF                     __ptext4:	
  5002 ;; *************** function ___awdiv *****************
  5003 ;; Defined at:
  5004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  divisor         2    7[COMMON] int 
  5007 ;;  dividend        2    9[COMMON] int 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  quotient        2    2[BANK0 ] int 
  5010 ;;  sign            1    1[BANK0 ] unsigned char 
  5011 ;;  counter         1    0[BANK0 ] unsigned char 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  2    7[COMMON] int 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5021 ;;      Params:         4       0       0       0       0
  5022 ;;      Locals:         0       4       0       0       0
  5023 ;;      Temps:          1       0       0       0       0
  5024 ;;      Totals:         5       4       0       0       0
  5025 ;;Total ram usage:        9 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_scale
  5031 ;;		_sprintf
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function ___awdiv
  5037  1DBF                     ___awdiv:
  5038  1DBF                     l2529:	
  5039                           ;incstack = 0
  5040                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5041                           
  5042  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  5043  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  5044  1DC1  01A1               	clrf	___awdiv@sign
  5045  1DC2                     l2531:
  5046  1DC2  1FF8               	btfss	___awdiv@divisor+1,7
  5047  1DC3  2DC5               	goto	u3261
  5048  1DC4  2DC6               	goto	u3260
  5049  1DC5                     u3261:
  5050  1DC5  2DCD               	goto	l2537
  5051  1DC6                     u3260:
  5052  1DC6                     l2533:
  5053  1DC6  09F7               	comf	___awdiv@divisor,f
  5054  1DC7  09F8               	comf	___awdiv@divisor+1,f
  5055  1DC8  0AF7               	incf	___awdiv@divisor,f
  5056  1DC9  1903               	skipnz
  5057  1DCA  0AF8               	incf	___awdiv@divisor+1,f
  5058  1DCB                     l2535:
  5059  1DCB  01A1               	clrf	___awdiv@sign
  5060  1DCC  0AA1               	incf	___awdiv@sign,f
  5061  1DCD                     l2537:
  5062  1DCD  1FFA               	btfss	___awdiv@dividend+1,7
  5063  1DCE  2DD0               	goto	u3271
  5064  1DCF  2DD1               	goto	u3270
  5065  1DD0                     u3271:
  5066  1DD0  2DDA               	goto	l2543
  5067  1DD1                     u3270:
  5068  1DD1                     l2539:
  5069  1DD1  09F9               	comf	___awdiv@dividend,f
  5070  1DD2  09FA               	comf	___awdiv@dividend+1,f
  5071  1DD3  0AF9               	incf	___awdiv@dividend,f
  5072  1DD4  1903               	skipnz
  5073  1DD5  0AFA               	incf	___awdiv@dividend+1,f
  5074  1DD6                     l2541:
  5075  1DD6  3001               	movlw	1
  5076  1DD7  00FB               	movwf	??___awdiv
  5077  1DD8  087B               	movf	??___awdiv,w
  5078  1DD9  06A1               	xorwf	___awdiv@sign,f
  5079  1DDA                     l2543:
  5080  1DDA  01A2               	clrf	___awdiv@quotient
  5081  1DDB  01A3               	clrf	___awdiv@quotient+1
  5082  1DDC                     l2545:
  5083  1DDC  0877               	movf	___awdiv@divisor,w
  5084  1DDD  0478               	iorwf	___awdiv@divisor+1,w
  5085  1DDE  1903               	btfsc	3,2
  5086  1DDF  2DE1               	goto	u3281
  5087  1DE0  2DE2               	goto	u3280
  5088  1DE1                     u3281:
  5089  1DE1  2E19               	goto	l2565
  5090  1DE2                     u3280:
  5091  1DE2                     l2547:
  5092  1DE2  01A0               	clrf	___awdiv@counter
  5093  1DE3  0AA0               	incf	___awdiv@counter,f
  5094  1DE4  2DF0               	goto	l2553
  5095  1DE5                     l2549:
  5096  1DE5  3001               	movlw	1
  5097  1DE6                     u3295:
  5098  1DE6  1003               	clrc
  5099  1DE7  0DF7               	rlf	___awdiv@divisor,f
  5100  1DE8  0DF8               	rlf	___awdiv@divisor+1,f
  5101  1DE9  3EFF               	addlw	-1
  5102  1DEA  1D03               	skipz
  5103  1DEB  2DE6               	goto	u3295
  5104  1DEC                     l2551:
  5105  1DEC  3001               	movlw	1
  5106  1DED  00FB               	movwf	??___awdiv
  5107  1DEE  087B               	movf	??___awdiv,w
  5108  1DEF  07A0               	addwf	___awdiv@counter,f
  5109  1DF0                     l2553:
  5110  1DF0  1FF8               	btfss	___awdiv@divisor+1,7
  5111  1DF1  2DF3               	goto	u3301
  5112  1DF2  2DF4               	goto	u3300
  5113  1DF3                     u3301:
  5114  1DF3  2DE5               	goto	l2549
  5115  1DF4                     u3300:
  5116  1DF4                     l2555:
  5117  1DF4  3001               	movlw	1
  5118  1DF5                     u3315:
  5119  1DF5  1003               	clrc
  5120  1DF6  0DA2               	rlf	___awdiv@quotient,f
  5121  1DF7  0DA3               	rlf	___awdiv@quotient+1,f
  5122  1DF8  3EFF               	addlw	-1
  5123  1DF9  1D03               	skipz
  5124  1DFA  2DF5               	goto	u3315
  5125  1DFB  0878               	movf	___awdiv@divisor+1,w
  5126  1DFC  027A               	subwf	___awdiv@dividend+1,w
  5127  1DFD  1D03               	skipz
  5128  1DFE  2E01               	goto	u3325
  5129  1DFF  0877               	movf	___awdiv@divisor,w
  5130  1E00  0279               	subwf	___awdiv@dividend,w
  5131  1E01                     u3325:
  5132  1E01  1C03               	skipc
  5133  1E02  2E04               	goto	u3321
  5134  1E03  2E05               	goto	u3320
  5135  1E04                     u3321:
  5136  1E04  2E0C               	goto	l2561
  5137  1E05                     u3320:
  5138  1E05                     l2557:
  5139  1E05  0877               	movf	___awdiv@divisor,w
  5140  1E06  02F9               	subwf	___awdiv@dividend,f
  5141  1E07  0878               	movf	___awdiv@divisor+1,w
  5142  1E08  1C03               	skipc
  5143  1E09  03FA               	decf	___awdiv@dividend+1,f
  5144  1E0A  02FA               	subwf	___awdiv@dividend+1,f
  5145  1E0B                     l2559:
  5146  1E0B  1422               	bsf	___awdiv@quotient,0
  5147  1E0C                     l2561:
  5148  1E0C  3001               	movlw	1
  5149  1E0D                     u3335:
  5150  1E0D  1003               	clrc
  5151  1E0E  0CF8               	rrf	___awdiv@divisor+1,f
  5152  1E0F  0CF7               	rrf	___awdiv@divisor,f
  5153  1E10  3EFF               	addlw	-1
  5154  1E11  1D03               	skipz
  5155  1E12  2E0D               	goto	u3335
  5156  1E13                     l2563:
  5157  1E13  3001               	movlw	1
  5158  1E14  02A0               	subwf	___awdiv@counter,f
  5159  1E15  1D03               	btfss	3,2
  5160  1E16  2E18               	goto	u3341
  5161  1E17  2E19               	goto	u3340
  5162  1E18                     u3341:
  5163  1E18  2DF4               	goto	l2555
  5164  1E19                     u3340:
  5165  1E19                     l2565:
  5166  1E19  0821               	movf	___awdiv@sign,w
  5167  1E1A  1903               	btfsc	3,2
  5168  1E1B  2E1D               	goto	u3351
  5169  1E1C  2E1E               	goto	u3350
  5170  1E1D                     u3351:
  5171  1E1D  2E23               	goto	l2569
  5172  1E1E                     u3350:
  5173  1E1E                     l2567:
  5174  1E1E  09A2               	comf	___awdiv@quotient,f
  5175  1E1F  09A3               	comf	___awdiv@quotient+1,f
  5176  1E20  0AA2               	incf	___awdiv@quotient,f
  5177  1E21  1903               	skipnz
  5178  1E22  0AA3               	incf	___awdiv@quotient+1,f
  5179  1E23                     l2569:
  5180  1E23  0823               	movf	___awdiv@quotient+1,w
  5181  1E24  00F8               	movwf	?___awdiv+1
  5182  1E25  0822               	movf	___awdiv@quotient,w
  5183  1E26  00F7               	movwf	?___awdiv
  5184  1E27                     l555:
  5185  1E27  0008               	return
  5186  1E28                     __end_of___awdiv:
  5187                           
  5188                           	psect	text5
  5189  0802                     __ptext5:	
  5190 ;; *************** function _isdigit *****************
  5191 ;; Defined at:
  5192 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  c               1    wreg     unsigned char 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  c               1    1[COMMON] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;		None               void
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5206 ;;      Params:         0       0       0       0       0
  5207 ;;      Locals:         2       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0
  5209 ;;      Totals:         2       0       0       0       0
  5210 ;;Total ram usage:        2 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_sprintf
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           
  5220                           ;psect for function _isdigit
  5221  0802                     _isdigit:
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5225                           ;isdigit@c stored from wreg
  5226  0802  00F1               	movwf	isdigit@c
  5227  0803                     l3075:
  5228  0803  01F0               	clrf	_isdigit$1118
  5229  0804                     l3077:
  5230  0804  303A               	movlw	58
  5231  0805  0271               	subwf	isdigit@c,w
  5232  0806  1803               	skipnc
  5233  0807  2809               	goto	u4681
  5234  0808  280A               	goto	u4680
  5235  0809                     u4681:
  5236  0809  2812               	goto	l3083
  5237  080A                     u4680:
  5238  080A                     l3079:
  5239  080A  3030               	movlw	48
  5240  080B  0271               	subwf	isdigit@c,w
  5241  080C  1C03               	skipc
  5242  080D  280F               	goto	u4691
  5243  080E  2810               	goto	u4690
  5244  080F                     u4691:
  5245  080F  2812               	goto	l3083
  5246  0810                     u4690:
  5247  0810                     l3081:
  5248  0810  01F0               	clrf	_isdigit$1118
  5249  0811  0AF0               	incf	_isdigit$1118,f
  5250  0812                     l3083:
  5251  0812  0C70               	rrf	_isdigit$1118,w
  5252  0813                     l889:
  5253  0813  0008               	return
  5254  0814                     __end_of_isdigit:
  5255                           
  5256                           	psect	text6
  5257  136D                     __ptext6:	
  5258 ;; *************** function _fround *****************
  5259 ;; Defined at:
  5260 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  prec            1    wreg     unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  prec            1   49[BANK0 ] unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  4   30[BANK0 ] unsigned char 
  5267 ;; Registers used:
  5268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5274 ;;      Params:         0       4       0       0       0
  5275 ;;      Locals:         0       9       0       0       0
  5276 ;;      Temps:          0       7       0       0       0
  5277 ;;      Totals:         0      20       0       0       0
  5278 ;;Total ram usage:       20 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    2
  5281 ;; This function calls:
  5282 ;;		___flmul
  5283 ;;		___lwdiv
  5284 ;;		___lwmod
  5285 ;; This function is called by:
  5286 ;;		_sprintf
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _fround
  5292  136D                     _fround:
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5296                           ;fround@prec stored from wreg
  5297  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5298  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5299  136F  00D1               	movwf	fround@prec
  5300  1370                     l3017:
  5301                           
  5302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5303  1370  306E               	movlw	110
  5304  1371  0251               	subwf	fround@prec,w
  5305  1372  1C03               	skipc
  5306  1373  2B75               	goto	u4431
  5307  1374  2B76               	goto	u4430
  5308  1375                     u4431:
  5309  1375  2C83               	goto	l3025
  5310  1376                     u4430:
  5311  1376                     l3019:
  5312                           
  5313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5314  1376  303F               	movlw	63
  5315  1377  00A7               	movwf	___flmul@b+3
  5316  1378  3000               	movlw	0
  5317  1379  00A6               	movwf	___flmul@b+2
  5318  137A  3000               	movlw	0
  5319  137B  00A5               	movwf	___flmul@b+1
  5320  137C  3000               	movlw	0
  5321  137D  00A4               	movwf	___flmul@b
  5322  137E  3064               	movlw	100
  5323  137F  00F6               	movwf	___lwdiv@divisor
  5324  1380  3000               	movlw	0
  5325  1381  00F7               	movwf	___lwdiv@divisor+1
  5326  1382  0851               	movf	fround@prec,w
  5327  1383  00C2               	movwf	??_fround
  5328  1384  01C3               	clrf	??_fround+1
  5329  1385  0842               	movf	??_fround,w
  5330  1386  00F8               	movwf	___lwdiv@dividend
  5331  1387  0843               	movf	??_fround+1,w
  5332  1388  00F9               	movwf	___lwdiv@dividend+1
  5333  1389  120A  118A  200B  160A  118A  	fcall	___lwdiv
  5334  138E  0876               	movf	?___lwdiv,w
  5335  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5336  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5337  1391  00C4               	movwf	??_fround+2
  5338  1392  3001               	movlw	1
  5339  1393                     u4445:
  5340  1393  1003               	clrc
  5341  1394  0DC4               	rlf	??_fround+2,f
  5342  1395  3EFF               	addlw	-1
  5343  1396  1D03               	skipz
  5344  1397  2B93               	goto	u4445
  5345  1398  1003               	clrc
  5346  1399  0D44               	rlf	??_fround+2,w
  5347  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5348  139B  0084               	movwf	4
  5349  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  5350  13A1  00C5               	movwf	??_fround+3
  5351  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  5352  13A7  00C6               	movwf	??_fround+4
  5353  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  5354  13AD  00C7               	movwf	??_fround+5
  5355  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  5356  13B3  00C8               	movwf	??_fround+6
  5357  13B4  0848               	movf	??_fround+6,w
  5358  13B5  00AB               	movwf	___flmul@a+3
  5359  13B6  0847               	movf	??_fround+5,w
  5360  13B7  00AA               	movwf	___flmul@a+2
  5361  13B8  0846               	movf	??_fround+4,w
  5362  13B9  00A9               	movwf	___flmul@a+1
  5363  13BA  0845               	movf	??_fround+3,w
  5364  13BB  00A8               	movwf	___flmul@a
  5365  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5366  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5367  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5368  13C3  0827               	movf	?___flmul+3,w
  5369  13C4  00D0               	movwf	_fround$1315+3
  5370  13C5  0826               	movf	?___flmul+2,w
  5371  13C6  00CF               	movwf	_fround$1315+2
  5372  13C7  0825               	movf	?___flmul+1,w
  5373  13C8  00CE               	movwf	_fround$1315+1
  5374  13C9  0824               	movf	?___flmul,w
  5375  13CA  00CD               	movwf	_fround$1315
  5376                           
  5377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5378  13CB  300A               	movlw	10
  5379  13CC  00F6               	movwf	___lwdiv@divisor
  5380  13CD  3000               	movlw	0
  5381  13CE  00F7               	movwf	___lwdiv@divisor+1
  5382  13CF  0851               	movf	fround@prec,w
  5383  13D0  00C2               	movwf	??_fround
  5384  13D1  01C3               	clrf	??_fround+1
  5385  13D2  0842               	movf	??_fround,w
  5386  13D3  00F2               	movwf	___lwmod@dividend
  5387  13D4  0843               	movf	??_fround+1,w
  5388  13D5  00F3               	movwf	___lwmod@dividend+1
  5389  13D6  3064               	movlw	100
  5390  13D7  00F0               	movwf	___lwmod@divisor
  5391  13D8  3000               	movlw	0
  5392  13D9  00F1               	movwf	___lwmod@divisor+1
  5393  13DA  160A  158A  2302  160A  118A  	fcall	___lwmod
  5394  13DF  0871               	movf	?___lwmod+1,w
  5395  13E0  00F9               	movwf	___lwdiv@dividend+1
  5396  13E1  0870               	movf	?___lwmod,w
  5397  13E2  00F8               	movwf	___lwdiv@dividend
  5398  13E3  120A  118A  200B  160A  118A  	fcall	___lwdiv
  5399  13E8  0876               	movf	?___lwdiv,w
  5400  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5401  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5402  13EB  00C4               	movwf	??_fround+2
  5403  13EC  3001               	movlw	1
  5404  13ED                     u4455:
  5405  13ED  1003               	clrc
  5406  13EE  0DC4               	rlf	??_fround+2,f
  5407  13EF  3EFF               	addlw	-1
  5408  13F0  1D03               	skipz
  5409  13F1  2BED               	goto	u4455
  5410  13F2  1003               	clrc
  5411  13F3  0D44               	rlf	??_fround+2,w
  5412  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5413  13F5  0084               	movwf	4
  5414  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5415  13FB  00C5               	movwf	??_fround+3
  5416  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5417  1401  00C6               	movwf	??_fround+4
  5418  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5419  1407  00C7               	movwf	??_fround+5
  5420  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5421  140D  00C8               	movwf	??_fround+6
  5422  140E  0848               	movf	??_fround+6,w
  5423  140F  00A7               	movwf	___flmul@b+3
  5424  1410  0847               	movf	??_fround+5,w
  5425  1411  00A6               	movwf	___flmul@b+2
  5426  1412  0846               	movf	??_fround+4,w
  5427  1413  00A5               	movwf	___flmul@b+1
  5428  1414  0845               	movf	??_fround+3,w
  5429  1415  00A4               	movwf	___flmul@b
  5430  1416  0850               	movf	_fround$1315+3,w
  5431  1417  00AB               	movwf	___flmul@a+3
  5432  1418  084F               	movf	_fround$1315+2,w
  5433  1419  00AA               	movwf	___flmul@a+2
  5434  141A  084E               	movf	_fround$1315+1,w
  5435  141B  00A9               	movwf	___flmul@a+1
  5436  141C  084D               	movf	_fround$1315,w
  5437  141D  00A8               	movwf	___flmul@a
  5438  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5439  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5440  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5441  1425  0827               	movf	?___flmul+3,w
  5442  1426  00CC               	movwf	_fround$1316+3
  5443  1427  0826               	movf	?___flmul+2,w
  5444  1428  00CB               	movwf	_fround$1316+2
  5445  1429  0825               	movf	?___flmul+1,w
  5446  142A  00CA               	movwf	_fround$1316+1
  5447  142B  0824               	movf	?___flmul,w
  5448  142C  00C9               	movwf	_fround$1316
  5449                           
  5450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5451  142D  300A               	movlw	10
  5452  142E  00F0               	movwf	___lwmod@divisor
  5453  142F  3000               	movlw	0
  5454  1430  00F1               	movwf	___lwmod@divisor+1
  5455  1431  0851               	movf	fround@prec,w
  5456  1432  00C2               	movwf	??_fround
  5457  1433  01C3               	clrf	??_fround+1
  5458  1434  0842               	movf	??_fround,w
  5459  1435  00F2               	movwf	___lwmod@dividend
  5460  1436  0843               	movf	??_fround+1,w
  5461  1437  00F3               	movwf	___lwmod@dividend+1
  5462  1438  160A  158A  2302  160A  118A  	fcall	___lwmod
  5463  143D  0870               	movf	?___lwmod,w
  5464  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5465  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5466  1440  00C4               	movwf	??_fround+2
  5467  1441  3001               	movlw	1
  5468  1442                     u4465:
  5469  1442  1003               	clrc
  5470  1443  0DC4               	rlf	??_fround+2,f
  5471  1444  3EFF               	addlw	-1
  5472  1445  1D03               	skipz
  5473  1446  2C42               	goto	u4465
  5474  1447  1003               	clrc
  5475  1448  0D44               	rlf	??_fround+2,w
  5476  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5477  144A  0084               	movwf	4
  5478  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5479  1450  00C5               	movwf	??_fround+3
  5480  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5481  1456  00C6               	movwf	??_fround+4
  5482  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5483  145C  00C7               	movwf	??_fround+5
  5484  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5485  1462  00C8               	movwf	??_fround+6
  5486  1463  0848               	movf	??_fround+6,w
  5487  1464  00A7               	movwf	___flmul@b+3
  5488  1465  0847               	movf	??_fround+5,w
  5489  1466  00A6               	movwf	___flmul@b+2
  5490  1467  0846               	movf	??_fround+4,w
  5491  1468  00A5               	movwf	___flmul@b+1
  5492  1469  0845               	movf	??_fround+3,w
  5493  146A  00A4               	movwf	___flmul@b
  5494  146B  084C               	movf	_fround$1316+3,w
  5495  146C  00AB               	movwf	___flmul@a+3
  5496  146D  084B               	movf	_fround$1316+2,w
  5497  146E  00AA               	movwf	___flmul@a+2
  5498  146F  084A               	movf	_fround$1316+1,w
  5499  1470  00A9               	movwf	___flmul@a+1
  5500  1471  0849               	movf	_fround$1316,w
  5501  1472  00A8               	movwf	___flmul@a
  5502  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5503  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5504  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5505  147A  0827               	movf	?___flmul+3,w
  5506  147B  00C1               	movwf	?_fround+3
  5507  147C  0826               	movf	?___flmul+2,w
  5508  147D  00C0               	movwf	?_fround+2
  5509  147E  0825               	movf	?___flmul+1,w
  5510  147F  00BF               	movwf	?_fround+1
  5511  1480  0824               	movf	?___flmul,w
  5512  1481  00BE               	movwf	?_fround
  5513  1482  2D77               	goto	l316
  5514  1483                     l3025:
  5515  1483  300B               	movlw	11
  5516  1484  0251               	subwf	fround@prec,w
  5517  1485  1C03               	skipc
  5518  1486  2C88               	goto	u4471
  5519  1487  2C89               	goto	u4470
  5520  1488                     u4471:
  5521  1488  2D34               	goto	l3031
  5522  1489                     u4470:
  5523  1489                     l3027:
  5524                           
  5525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5526  1489  303F               	movlw	63
  5527  148A  00A7               	movwf	___flmul@b+3
  5528  148B  3000               	movlw	0
  5529  148C  00A6               	movwf	___flmul@b+2
  5530  148D  3000               	movlw	0
  5531  148E  00A5               	movwf	___flmul@b+1
  5532  148F  3000               	movlw	0
  5533  1490  00A4               	movwf	___flmul@b
  5534  1491  300A               	movlw	10
  5535  1492  00F6               	movwf	___lwdiv@divisor
  5536  1493  3000               	movlw	0
  5537  1494  00F7               	movwf	___lwdiv@divisor+1
  5538  1495  0851               	movf	fround@prec,w
  5539  1496  00C2               	movwf	??_fround
  5540  1497  01C3               	clrf	??_fround+1
  5541  1498  0842               	movf	??_fround,w
  5542  1499  00F8               	movwf	___lwdiv@dividend
  5543  149A  0843               	movf	??_fround+1,w
  5544  149B  00F9               	movwf	___lwdiv@dividend+1
  5545  149C  120A  118A  200B  160A  118A  	fcall	___lwdiv
  5546  14A1  0876               	movf	?___lwdiv,w
  5547  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5548  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5549  14A4  00C4               	movwf	??_fround+2
  5550  14A5  3001               	movlw	1
  5551  14A6                     u4485:
  5552  14A6  1003               	clrc
  5553  14A7  0DC4               	rlf	??_fround+2,f
  5554  14A8  3EFF               	addlw	-1
  5555  14A9  1D03               	skipz
  5556  14AA  2CA6               	goto	u4485
  5557  14AB  1003               	clrc
  5558  14AC  0D44               	rlf	??_fround+2,w
  5559  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5560  14AE  0084               	movwf	4
  5561  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5562  14B4  00C5               	movwf	??_fround+3
  5563  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5564  14BA  00C6               	movwf	??_fround+4
  5565  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5566  14C0  00C7               	movwf	??_fround+5
  5567  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5568  14C6  00C8               	movwf	??_fround+6
  5569  14C7  0848               	movf	??_fround+6,w
  5570  14C8  00AB               	movwf	___flmul@a+3
  5571  14C9  0847               	movf	??_fround+5,w
  5572  14CA  00AA               	movwf	___flmul@a+2
  5573  14CB  0846               	movf	??_fround+4,w
  5574  14CC  00A9               	movwf	___flmul@a+1
  5575  14CD  0845               	movf	??_fround+3,w
  5576  14CE  00A8               	movwf	___flmul@a
  5577  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5578  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5579  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5580  14D6  0827               	movf	?___flmul+3,w
  5581  14D7  00D0               	movwf	_fround$1315+3
  5582  14D8  0826               	movf	?___flmul+2,w
  5583  14D9  00CF               	movwf	_fround$1315+2
  5584  14DA  0825               	movf	?___flmul+1,w
  5585  14DB  00CE               	movwf	_fround$1315+1
  5586  14DC  0824               	movf	?___flmul,w
  5587  14DD  00CD               	movwf	_fround$1315
  5588                           
  5589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5590  14DE  300A               	movlw	10
  5591  14DF  00F0               	movwf	___lwmod@divisor
  5592  14E0  3000               	movlw	0
  5593  14E1  00F1               	movwf	___lwmod@divisor+1
  5594  14E2  0851               	movf	fround@prec,w
  5595  14E3  00C2               	movwf	??_fround
  5596  14E4  01C3               	clrf	??_fround+1
  5597  14E5  0842               	movf	??_fround,w
  5598  14E6  00F2               	movwf	___lwmod@dividend
  5599  14E7  0843               	movf	??_fround+1,w
  5600  14E8  00F3               	movwf	___lwmod@dividend+1
  5601  14E9  160A  158A  2302  160A  118A  	fcall	___lwmod
  5602  14EE  0870               	movf	?___lwmod,w
  5603  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5604  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5605  14F1  00C4               	movwf	??_fround+2
  5606  14F2  3001               	movlw	1
  5607  14F3                     u4495:
  5608  14F3  1003               	clrc
  5609  14F4  0DC4               	rlf	??_fround+2,f
  5610  14F5  3EFF               	addlw	-1
  5611  14F6  1D03               	skipz
  5612  14F7  2CF3               	goto	u4495
  5613  14F8  1003               	clrc
  5614  14F9  0D44               	rlf	??_fround+2,w
  5615  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5616  14FB  0084               	movwf	4
  5617  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5618  1501  00C5               	movwf	??_fround+3
  5619  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  5620  1507  00C6               	movwf	??_fround+4
  5621  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  5622  150D  00C7               	movwf	??_fround+5
  5623  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  5624  1513  00C8               	movwf	??_fround+6
  5625  1514  0848               	movf	??_fround+6,w
  5626  1515  00A7               	movwf	___flmul@b+3
  5627  1516  0847               	movf	??_fround+5,w
  5628  1517  00A6               	movwf	___flmul@b+2
  5629  1518  0846               	movf	??_fround+4,w
  5630  1519  00A5               	movwf	___flmul@b+1
  5631  151A  0845               	movf	??_fround+3,w
  5632  151B  00A4               	movwf	___flmul@b
  5633  151C  0850               	movf	_fround$1315+3,w
  5634  151D  00AB               	movwf	___flmul@a+3
  5635  151E  084F               	movf	_fround$1315+2,w
  5636  151F  00AA               	movwf	___flmul@a+2
  5637  1520  084E               	movf	_fround$1315+1,w
  5638  1521  00A9               	movwf	___flmul@a+1
  5639  1522  084D               	movf	_fround$1315,w
  5640  1523  00A8               	movwf	___flmul@a
  5641  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5642  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5643  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5644  152B  0827               	movf	?___flmul+3,w
  5645  152C  00C1               	movwf	?_fround+3
  5646  152D  0826               	movf	?___flmul+2,w
  5647  152E  00C0               	movwf	?_fround+2
  5648  152F  0825               	movf	?___flmul+1,w
  5649  1530  00BF               	movwf	?_fround+1
  5650  1531  0824               	movf	?___flmul,w
  5651  1532  00BE               	movwf	?_fround
  5652  1533  2D77               	goto	l316
  5653  1534                     l3031:
  5654                           
  5655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5656  1534  303F               	movlw	63
  5657  1535  00A7               	movwf	___flmul@b+3
  5658  1536  3000               	movlw	0
  5659  1537  00A6               	movwf	___flmul@b+2
  5660  1538  3000               	movlw	0
  5661  1539  00A5               	movwf	___flmul@b+1
  5662  153A  3000               	movlw	0
  5663  153B  00A4               	movwf	___flmul@b
  5664  153C  0851               	movf	fround@prec,w
  5665  153D  00C2               	movwf	??_fround
  5666  153E  3001               	movlw	1
  5667  153F                     u4505:
  5668  153F  1003               	clrc
  5669  1540  0DC2               	rlf	??_fround,f
  5670  1541  3EFF               	addlw	-1
  5671  1542  1D03               	skipz
  5672  1543  2D3F               	goto	u4505
  5673  1544  1003               	clrc
  5674  1545  0D42               	rlf	??_fround,w
  5675  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5676  1547  0084               	movwf	4
  5677  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  5678  154D  00C3               	movwf	??_fround+1
  5679  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  5680  1553  00C4               	movwf	??_fround+2
  5681  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  5682  1559  00C5               	movwf	??_fround+3
  5683  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  5684  155F  00C6               	movwf	??_fround+4
  5685  1560  0846               	movf	??_fround+4,w
  5686  1561  00AB               	movwf	___flmul@a+3
  5687  1562  0845               	movf	??_fround+3,w
  5688  1563  00AA               	movwf	___flmul@a+2
  5689  1564  0844               	movf	??_fround+2,w
  5690  1565  00A9               	movwf	___flmul@a+1
  5691  1566  0843               	movf	??_fround+1,w
  5692  1567  00A8               	movwf	___flmul@a
  5693  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5694  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5695  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5696  156F  0827               	movf	?___flmul+3,w
  5697  1570  00C1               	movwf	?_fround+3
  5698  1571  0826               	movf	?___flmul+2,w
  5699  1572  00C0               	movwf	?_fround+2
  5700  1573  0825               	movf	?___flmul+1,w
  5701  1574  00BF               	movwf	?_fround+1
  5702  1575  0824               	movf	?___flmul,w
  5703  1576  00BE               	movwf	?_fround
  5704  1577                     l316:
  5705  1577  0008               	return
  5706  1578                     __end_of_fround:
  5707                           
  5708                           	psect	text7
  5709  1B02                     __ptext7:	
  5710 ;; *************** function ___lwmod *****************
  5711 ;; Defined at:
  5712 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  divisor         2    0[COMMON] unsigned int 
  5715 ;;  dividend        2    2[COMMON] unsigned int 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  counter         1    5[COMMON] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2    0[COMMON] unsigned int 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         4       0       0       0       0
  5728 ;;      Locals:         1       0       0       0       0
  5729 ;;      Temps:          1       0       0       0       0
  5730 ;;      Totals:         6       0       0       0       0
  5731 ;;Total ram usage:        6 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_fround
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           
  5741                           ;psect for function ___lwmod
  5742  1B02                     ___lwmod:
  5743  1B02                     l2637:	
  5744                           ;incstack = 0
  5745                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5746                           
  5747  1B02  0870               	movf	___lwmod@divisor,w
  5748  1B03  0471               	iorwf	___lwmod@divisor+1,w
  5749  1B04  1903               	btfsc	3,2
  5750  1B05  2B07               	goto	u3521
  5751  1B06  2B08               	goto	u3520
  5752  1B07                     u3521:
  5753  1B07  2B37               	goto	l2655
  5754  1B08                     u3520:
  5755  1B08                     l2639:
  5756  1B08  01F5               	clrf	___lwmod@counter
  5757  1B09  0AF5               	incf	___lwmod@counter,f
  5758  1B0A  2B16               	goto	l2645
  5759  1B0B                     l2641:
  5760  1B0B  3001               	movlw	1
  5761  1B0C                     u3535:
  5762  1B0C  1003               	clrc
  5763  1B0D  0DF0               	rlf	___lwmod@divisor,f
  5764  1B0E  0DF1               	rlf	___lwmod@divisor+1,f
  5765  1B0F  3EFF               	addlw	-1
  5766  1B10  1D03               	skipz
  5767  1B11  2B0C               	goto	u3535
  5768  1B12                     l2643:
  5769  1B12  3001               	movlw	1
  5770  1B13  00F4               	movwf	??___lwmod
  5771  1B14  0874               	movf	??___lwmod,w
  5772  1B15  07F5               	addwf	___lwmod@counter,f
  5773  1B16                     l2645:
  5774  1B16  1FF1               	btfss	___lwmod@divisor+1,7
  5775  1B17  2B19               	goto	u3541
  5776  1B18  2B1A               	goto	u3540
  5777  1B19                     u3541:
  5778  1B19  2B0B               	goto	l2641
  5779  1B1A                     u3540:
  5780  1B1A                     l2647:
  5781  1B1A  0871               	movf	___lwmod@divisor+1,w
  5782  1B1B  0273               	subwf	___lwmod@dividend+1,w
  5783  1B1C  1D03               	skipz
  5784  1B1D  2B20               	goto	u3555
  5785  1B1E  0870               	movf	___lwmod@divisor,w
  5786  1B1F  0272               	subwf	___lwmod@dividend,w
  5787  1B20                     u3555:
  5788  1B20  1C03               	skipc
  5789  1B21  2B23               	goto	u3551
  5790  1B22  2B24               	goto	u3550
  5791  1B23                     u3551:
  5792  1B23  2B2A               	goto	l2651
  5793  1B24                     u3550:
  5794  1B24                     l2649:
  5795  1B24  0870               	movf	___lwmod@divisor,w
  5796  1B25  02F2               	subwf	___lwmod@dividend,f
  5797  1B26  0871               	movf	___lwmod@divisor+1,w
  5798  1B27  1C03               	skipc
  5799  1B28  03F3               	decf	___lwmod@dividend+1,f
  5800  1B29  02F3               	subwf	___lwmod@dividend+1,f
  5801  1B2A                     l2651:
  5802  1B2A  3001               	movlw	1
  5803  1B2B                     u3565:
  5804  1B2B  1003               	clrc
  5805  1B2C  0CF1               	rrf	___lwmod@divisor+1,f
  5806  1B2D  0CF0               	rrf	___lwmod@divisor,f
  5807  1B2E  3EFF               	addlw	-1
  5808  1B2F  1D03               	skipz
  5809  1B30  2B2B               	goto	u3565
  5810  1B31                     l2653:
  5811  1B31  3001               	movlw	1
  5812  1B32  02F5               	subwf	___lwmod@counter,f
  5813  1B33  1D03               	btfss	3,2
  5814  1B34  2B36               	goto	u3571
  5815  1B35  2B37               	goto	u3570
  5816  1B36                     u3571:
  5817  1B36  2B1A               	goto	l2647
  5818  1B37                     u3570:
  5819  1B37                     l2655:
  5820  1B37  0873               	movf	___lwmod@dividend+1,w
  5821  1B38  00F1               	movwf	?___lwmod+1
  5822  1B39  0872               	movf	___lwmod@dividend,w
  5823  1B3A  00F0               	movwf	?___lwmod
  5824  1B3B                     l718:
  5825  1B3B  0008               	return
  5826  1B3C                     __end_of___lwmod:
  5827                           
  5828                           	psect	text8
  5829  000B                     __ptext8:	
  5830 ;; *************** function ___lwdiv *****************
  5831 ;; Defined at:
  5832 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  divisor         2    6[COMMON] unsigned int 
  5835 ;;  dividend        2    8[COMMON] unsigned int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  quotient        2   11[COMMON] unsigned int 
  5838 ;;  counter         1   13[COMMON] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  2    6[COMMON] unsigned int 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5848 ;;      Params:         4       0       0       0       0
  5849 ;;      Locals:         3       0       0       0       0
  5850 ;;      Temps:          1       0       0       0       0
  5851 ;;      Totals:         8       0       0       0       0
  5852 ;;Total ram usage:        8 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_fround
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function ___lwdiv
  5863  000B                     ___lwdiv:
  5864  000B                     l2611:	
  5865                           ;incstack = 0
  5866                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5867                           
  5868  000B  01FB               	clrf	___lwdiv@quotient
  5869  000C  01FC               	clrf	___lwdiv@quotient+1
  5870  000D                     l2613:
  5871  000D  0876               	movf	___lwdiv@divisor,w
  5872  000E  0477               	iorwf	___lwdiv@divisor+1,w
  5873  000F  1903               	btfsc	3,2
  5874  0010  2812               	goto	u3451
  5875  0011  2813               	goto	u3450
  5876  0012                     u3451:
  5877  0012  284A               	goto	l2633
  5878  0013                     u3450:
  5879  0013                     l2615:
  5880  0013  01FD               	clrf	___lwdiv@counter
  5881  0014  0AFD               	incf	___lwdiv@counter,f
  5882  0015  2821               	goto	l2621
  5883  0016                     l2617:
  5884  0016  3001               	movlw	1
  5885  0017                     u3465:
  5886  0017  1003               	clrc
  5887  0018  0DF6               	rlf	___lwdiv@divisor,f
  5888  0019  0DF7               	rlf	___lwdiv@divisor+1,f
  5889  001A  3EFF               	addlw	-1
  5890  001B  1D03               	skipz
  5891  001C  2817               	goto	u3465
  5892  001D                     l2619:
  5893  001D  3001               	movlw	1
  5894  001E  00FA               	movwf	??___lwdiv
  5895  001F  087A               	movf	??___lwdiv,w
  5896  0020  07FD               	addwf	___lwdiv@counter,f
  5897  0021                     l2621:
  5898  0021  1FF7               	btfss	___lwdiv@divisor+1,7
  5899  0022  2824               	goto	u3471
  5900  0023  2825               	goto	u3470
  5901  0024                     u3471:
  5902  0024  2816               	goto	l2617
  5903  0025                     u3470:
  5904  0025                     l2623:
  5905  0025  3001               	movlw	1
  5906  0026                     u3485:
  5907  0026  1003               	clrc
  5908  0027  0DFB               	rlf	___lwdiv@quotient,f
  5909  0028  0DFC               	rlf	___lwdiv@quotient+1,f
  5910  0029  3EFF               	addlw	-1
  5911  002A  1D03               	skipz
  5912  002B  2826               	goto	u3485
  5913  002C  0877               	movf	___lwdiv@divisor+1,w
  5914  002D  0279               	subwf	___lwdiv@dividend+1,w
  5915  002E  1D03               	skipz
  5916  002F  2832               	goto	u3495
  5917  0030  0876               	movf	___lwdiv@divisor,w
  5918  0031  0278               	subwf	___lwdiv@dividend,w
  5919  0032                     u3495:
  5920  0032  1C03               	skipc
  5921  0033  2835               	goto	u3491
  5922  0034  2836               	goto	u3490
  5923  0035                     u3491:
  5924  0035  283D               	goto	l2629
  5925  0036                     u3490:
  5926  0036                     l2625:
  5927  0036  0876               	movf	___lwdiv@divisor,w
  5928  0037  02F8               	subwf	___lwdiv@dividend,f
  5929  0038  0877               	movf	___lwdiv@divisor+1,w
  5930  0039  1C03               	skipc
  5931  003A  03F9               	decf	___lwdiv@dividend+1,f
  5932  003B  02F9               	subwf	___lwdiv@dividend+1,f
  5933  003C                     l2627:
  5934  003C  147B               	bsf	___lwdiv@quotient,0
  5935  003D                     l2629:
  5936  003D  3001               	movlw	1
  5937  003E                     u3505:
  5938  003E  1003               	clrc
  5939  003F  0CF7               	rrf	___lwdiv@divisor+1,f
  5940  0040  0CF6               	rrf	___lwdiv@divisor,f
  5941  0041  3EFF               	addlw	-1
  5942  0042  1D03               	skipz
  5943  0043  283E               	goto	u3505
  5944  0044                     l2631:
  5945  0044  3001               	movlw	1
  5946  0045  02FD               	subwf	___lwdiv@counter,f
  5947  0046  1D03               	btfss	3,2
  5948  0047  2849               	goto	u3511
  5949  0048  284A               	goto	u3510
  5950  0049                     u3511:
  5951  0049  2825               	goto	l2623
  5952  004A                     u3510:
  5953  004A                     l2633:
  5954  004A  087C               	movf	___lwdiv@quotient+1,w
  5955  004B  00F7               	movwf	?___lwdiv+1
  5956  004C  087B               	movf	___lwdiv@quotient,w
  5957  004D  00F6               	movwf	?___lwdiv
  5958  004E                     l708:
  5959  004E  0008               	return
  5960  004F                     __end_of___lwdiv:
  5961                           
  5962                           	psect	text9
  5963  1015                     __ptext9:	
  5964 ;; *************** function __tdiv_to_l_ *****************
  5965 ;; Defined at:
  5966 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  f1              4    0[COMMON] float 
  5969 ;;  f2              4    4[COMMON] float 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  quot            4    0[BANK0 ] unsigned long 
  5972 ;;  exp1            1    5[BANK0 ] unsigned char 
  5973 ;;  cntr            1    4[BANK0 ] unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  4    0[COMMON] unsigned long 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5983 ;;      Params:         8       0       0       0       0
  5984 ;;      Locals:         0       6       0       0       0
  5985 ;;      Temps:          4       0       0       0       0
  5986 ;;      Totals:        12       6       0       0       0
  5987 ;;Total ram usage:       18 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_sprintf
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           
  5997                           ;psect for function __tdiv_to_l_
  5998  1015                     __tdiv_to_l_:
  5999  1015                     l3087:	
  6000                           ;incstack = 0
  6001                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6002                           
  6003  1015  0870               	movf	__tdiv_to_l_@f1,w
  6004  1016  00F8               	movwf	??__tdiv_to_l_
  6005  1017  0871               	movf	__tdiv_to_l_@f1+1,w
  6006  1018  00F9               	movwf	??__tdiv_to_l_+1
  6007  1019  0872               	movf	__tdiv_to_l_@f1+2,w
  6008  101A  00FA               	movwf	??__tdiv_to_l_+2
  6009  101B  1003               	clrc
  6010  101C  0D79               	rlf	??__tdiv_to_l_+1,w
  6011  101D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6012  101E  00FB               	movwf	??__tdiv_to_l_+3
  6013  101F  087B               	movf	??__tdiv_to_l_+3,w
  6014  1020  1283               	bcf	3,5	;RP0=0, select bank0
  6015  1021  1303               	bcf	3,6	;RP1=0, select bank0
  6016  1022  00A5               	movwf	__tdiv_to_l_@exp1
  6017  1023  0825               	movf	__tdiv_to_l_@exp1,w
  6018  1024  1D03               	btfss	3,2
  6019  1025  2827               	goto	u4701
  6020  1026  2828               	goto	u4700
  6021  1027                     u4701:
  6022  1027  2831               	goto	l3093
  6023  1028                     u4700:
  6024  1028                     l3089:
  6025  1028  3000               	movlw	0
  6026  1029  00F3               	movwf	?__tdiv_to_l_+3
  6027  102A  3000               	movlw	0
  6028  102B  00F2               	movwf	?__tdiv_to_l_+2
  6029  102C  3000               	movlw	0
  6030  102D  00F1               	movwf	?__tdiv_to_l_+1
  6031  102E  3000               	movlw	0
  6032  102F  00F0               	movwf	?__tdiv_to_l_
  6033  1030  28D1               	goto	l619
  6034  1031                     l3093:
  6035  1031  0874               	movf	__tdiv_to_l_@f2,w
  6036  1032  00F8               	movwf	??__tdiv_to_l_
  6037  1033  0875               	movf	__tdiv_to_l_@f2+1,w
  6038  1034  00F9               	movwf	??__tdiv_to_l_+1
  6039  1035  0876               	movf	__tdiv_to_l_@f2+2,w
  6040  1036  00FA               	movwf	??__tdiv_to_l_+2
  6041  1037  1003               	clrc
  6042  1038  0D79               	rlf	??__tdiv_to_l_+1,w
  6043  1039  0D7A               	rlf	??__tdiv_to_l_+2,w
  6044  103A  00FB               	movwf	??__tdiv_to_l_+3
  6045  103B  087B               	movf	??__tdiv_to_l_+3,w
  6046  103C  00A4               	movwf	__tdiv_to_l_@cntr
  6047  103D  0824               	movf	__tdiv_to_l_@cntr,w
  6048  103E  1D03               	btfss	3,2
  6049  103F  2841               	goto	u4711
  6050  1040  2842               	goto	u4710
  6051  1041                     u4711:
  6052  1041  2843               	goto	l620
  6053  1042                     u4710:
  6054  1042  2828               	goto	l3089
  6055  1043                     l620:
  6056  1043  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6057  1044                     l3099:
  6058  1044  30FF               	movlw	255
  6059  1045  05F0               	andwf	__tdiv_to_l_@f1,f
  6060  1046  30FF               	movlw	255
  6061  1047  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6062  1048  3000               	movlw	0
  6063  1049  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6064  104A                     l3101:
  6065  104A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6066  104B  30FF               	movlw	255
  6067  104C  05F4               	andwf	__tdiv_to_l_@f2,f
  6068  104D  30FF               	movlw	255
  6069  104E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6070  104F  3000               	movlw	0
  6071  1050  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6072  1051  3000               	movlw	0
  6073  1052  00A3               	movwf	__tdiv_to_l_@quot+3
  6074  1053  3000               	movlw	0
  6075  1054  00A2               	movwf	__tdiv_to_l_@quot+2
  6076  1055  3000               	movlw	0
  6077  1056  00A1               	movwf	__tdiv_to_l_@quot+1
  6078  1057  3000               	movlw	0
  6079  1058  00A0               	movwf	__tdiv_to_l_@quot
  6080  1059                     l3103:
  6081  1059  307F               	movlw	127
  6082  105A  02A5               	subwf	__tdiv_to_l_@exp1,f
  6083  105B                     l3105:
  6084  105B  3098               	movlw	152
  6085  105C  0724               	addwf	__tdiv_to_l_@cntr,w
  6086  105D  00F8               	movwf	??__tdiv_to_l_
  6087  105E  0878               	movf	??__tdiv_to_l_,w
  6088  105F  02A5               	subwf	__tdiv_to_l_@exp1,f
  6089  1060  3018               	movlw	24
  6090  1061  00F8               	movwf	??__tdiv_to_l_
  6091  1062  0878               	movf	??__tdiv_to_l_,w
  6092  1063  00A4               	movwf	__tdiv_to_l_@cntr
  6093  1064                     l3107:
  6094  1064  3001               	movlw	1
  6095  1065  00F8               	movwf	??__tdiv_to_l_
  6096  1066                     u4725:
  6097  1066  1003               	clrc
  6098  1067  0DA0               	rlf	__tdiv_to_l_@quot,f
  6099  1068  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6100  1069  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6101  106A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6102  106B  0BF8               	decfsz	??__tdiv_to_l_,f
  6103  106C  2866               	goto	u4725
  6104  106D                     l3109:
  6105  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  6106  106E  0272               	subwf	__tdiv_to_l_@f1+2,w
  6107  106F  1D03               	skipz
  6108  1070  2877               	goto	u4735
  6109  1071  0875               	movf	__tdiv_to_l_@f2+1,w
  6110  1072  0271               	subwf	__tdiv_to_l_@f1+1,w
  6111  1073  1D03               	skipz
  6112  1074  2877               	goto	u4735
  6113  1075  0874               	movf	__tdiv_to_l_@f2,w
  6114  1076  0270               	subwf	__tdiv_to_l_@f1,w
  6115  1077                     u4735:
  6116  1077  1C03               	skipc
  6117  1078  287A               	goto	u4731
  6118  1079  287B               	goto	u4730
  6119  107A                     u4731:
  6120  107A  2886               	goto	l3115
  6121  107B                     u4730:
  6122  107B                     l3111:
  6123  107B  0874               	movf	__tdiv_to_l_@f2,w
  6124  107C  02F0               	subwf	__tdiv_to_l_@f1,f
  6125  107D  0875               	movf	__tdiv_to_l_@f2+1,w
  6126  107E  1C03               	skipc
  6127  107F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6128  1080  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6129  1081  0876               	movf	__tdiv_to_l_@f2+2,w
  6130  1082  1C03               	skipc
  6131  1083  0A76               	incf	__tdiv_to_l_@f2+2,w
  6132  1084  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6133  1085                     l3113:
  6134  1085  1420               	bsf	__tdiv_to_l_@quot,0
  6135  1086                     l3115:
  6136  1086  3001               	movlw	1
  6137  1087                     u4745:
  6138  1087  1003               	clrc
  6139  1088  0DF0               	rlf	__tdiv_to_l_@f1,f
  6140  1089  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6141  108A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6142  108B  3EFF               	addlw	-1
  6143  108C  1D03               	skipz
  6144  108D  2887               	goto	u4745
  6145  108E                     l3117:
  6146  108E  3001               	movlw	1
  6147  108F  02A4               	subwf	__tdiv_to_l_@cntr,f
  6148  1090  1D03               	btfss	3,2
  6149  1091  2893               	goto	u4751
  6150  1092  2894               	goto	u4750
  6151  1093                     u4751:
  6152  1093  2864               	goto	l3107
  6153  1094                     u4750:
  6154  1094                     l623:
  6155  1094  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6156  1095  2897               	goto	u4761
  6157  1096  2898               	goto	u4760
  6158  1097                     u4761:
  6159  1097  28B2               	goto	l3127
  6160  1098                     u4760:
  6161  1098                     l3119:
  6162  1098  0825               	movf	__tdiv_to_l_@exp1,w
  6163  1099  3A80               	xorlw	128
  6164  109A  3E97               	addlw	151
  6165  109B  1803               	skipnc
  6166  109C  289E               	goto	u4771
  6167  109D  289F               	goto	u4770
  6168  109E                     u4771:
  6169  109E  28A0               	goto	l3125
  6170  109F                     u4770:
  6171  109F  2828               	goto	l3089
  6172  10A0                     l3125:
  6173  10A0  3001               	movlw	1
  6174  10A1                     u4785:
  6175  10A1  1003               	clrc
  6176  10A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6177  10A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6178  10A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6179  10A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  6180  10A6  3EFF               	addlw	-1
  6181  10A7  1D03               	skipz
  6182  10A8  28A1               	goto	u4785
  6183  10A9  3001               	movlw	1
  6184  10AA  00F8               	movwf	??__tdiv_to_l_
  6185  10AB  0878               	movf	??__tdiv_to_l_,w
  6186  10AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  6187  10AD  1D03               	btfss	3,2
  6188  10AE  28B0               	goto	u4791
  6189  10AF  28B1               	goto	u4790
  6190  10B0                     u4791:
  6191  10B0  28A0               	goto	l3125
  6192  10B1                     u4790:
  6193  10B1  28C9               	goto	l3135
  6194  10B2                     l3127:
  6195  10B2  3018               	movlw	24
  6196  10B3  0225               	subwf	__tdiv_to_l_@exp1,w
  6197  10B4  1C03               	skipc
  6198  10B5  28B7               	goto	u4801
  6199  10B6  28B8               	goto	u4800
  6200  10B7                     u4801:
  6201  10B7  28C4               	goto	l630
  6202  10B8                     u4800:
  6203  10B8  2828               	goto	l3089
  6204  10B9                     l3133:
  6205  10B9  3001               	movlw	1
  6206  10BA  00F8               	movwf	??__tdiv_to_l_
  6207  10BB                     u4815:
  6208  10BB  1003               	clrc
  6209  10BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  6210  10BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6211  10BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6212  10BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6213  10C0  0BF8               	decfsz	??__tdiv_to_l_,f
  6214  10C1  28BB               	goto	u4815
  6215  10C2  3001               	movlw	1
  6216  10C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  6217  10C4                     l630:
  6218  10C4  0825               	movf	__tdiv_to_l_@exp1,w
  6219  10C5  1D03               	btfss	3,2
  6220  10C6  28C8               	goto	u4821
  6221  10C7  28C9               	goto	u4820
  6222  10C8                     u4821:
  6223  10C8  28B9               	goto	l3133
  6224  10C9                     u4820:
  6225  10C9                     l3135:
  6226  10C9  0823               	movf	__tdiv_to_l_@quot+3,w
  6227  10CA  00F3               	movwf	?__tdiv_to_l_+3
  6228  10CB  0822               	movf	__tdiv_to_l_@quot+2,w
  6229  10CC  00F2               	movwf	?__tdiv_to_l_+2
  6230  10CD  0821               	movf	__tdiv_to_l_@quot+1,w
  6231  10CE  00F1               	movwf	?__tdiv_to_l_+1
  6232  10CF  0820               	movf	__tdiv_to_l_@quot,w
  6233  10D0  00F0               	movwf	?__tdiv_to_l_
  6234  10D1                     l619:
  6235  10D1  0008               	return
  6236  10D2                     __end_of__tdiv_to_l_:
  6237                           
  6238                           	psect	text10
  6239  10D2                     __ptext10:	
  6240 ;; *************** function __div_to_l_ *****************
  6241 ;; Defined at:
  6242 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  f1              4    0[COMMON] unsigned long 
  6245 ;;  f2              4    4[COMMON] unsigned long 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  quot            4    0[BANK0 ] unsigned long 
  6248 ;;  exp1            1    5[BANK0 ] unsigned char 
  6249 ;;  cntr            1    4[BANK0 ] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  4    0[COMMON] unsigned long 
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6259 ;;      Params:         8       0       0       0       0
  6260 ;;      Locals:         0       6       0       0       0
  6261 ;;      Temps:          1       0       0       0       0
  6262 ;;      Totals:         9       6       0       0       0
  6263 ;;Total ram usage:       15 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_sprintf
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           
  6273                           ;psect for function __div_to_l_
  6274  10D2                     __div_to_l_:
  6275  10D2                     l3139:	
  6276                           ;incstack = 0
  6277                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6278                           
  6279  10D2  1003               	clrc
  6280  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  6281  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  6282  10D5  00F8               	movwf	??__div_to_l_
  6283  10D6  0878               	movf	??__div_to_l_,w
  6284  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  6285  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  6286  10D9  00A5               	movwf	__div_to_l_@exp1
  6287  10DA  0825               	movf	__div_to_l_@exp1,w
  6288  10DB  1D03               	btfss	3,2
  6289  10DC  28DE               	goto	u4831
  6290  10DD  28DF               	goto	u4830
  6291  10DE                     u4831:
  6292  10DE  28E8               	goto	l3145
  6293  10DF                     u4830:
  6294  10DF                     l3141:
  6295  10DF  3000               	movlw	0
  6296  10E0  00F3               	movwf	?__div_to_l_+3
  6297  10E1  3000               	movlw	0
  6298  10E2  00F2               	movwf	?__div_to_l_+2
  6299  10E3  3000               	movlw	0
  6300  10E4  00F1               	movwf	?__div_to_l_+1
  6301  10E5  3000               	movlw	0
  6302  10E6  00F0               	movwf	?__div_to_l_
  6303  10E7  298F               	goto	l572
  6304  10E8                     l3145:
  6305  10E8  1003               	clrc
  6306  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  6307  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  6308  10EB  00F8               	movwf	??__div_to_l_
  6309  10EC  0878               	movf	??__div_to_l_,w
  6310  10ED  00A4               	movwf	__div_to_l_@cntr
  6311  10EE  0824               	movf	__div_to_l_@cntr,w
  6312  10EF  1D03               	btfss	3,2
  6313  10F0  28F2               	goto	u4841
  6314  10F1  28F3               	goto	u4840
  6315  10F2                     u4841:
  6316  10F2  28F4               	goto	l573
  6317  10F3                     u4840:
  6318  10F3  28DF               	goto	l3141
  6319  10F4                     l573:
  6320  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  6321  10F5                     l3151:
  6322  10F5  30FF               	movlw	255
  6323  10F6  05F0               	andwf	__div_to_l_@f1,f
  6324  10F7  30FF               	movlw	255
  6325  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  6326  10F9  30FF               	movlw	255
  6327  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  6328  10FB  3000               	movlw	0
  6329  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  6330  10FD                     l3153:
  6331  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  6332  10FE  30FF               	movlw	255
  6333  10FF  05F4               	andwf	__div_to_l_@f2,f
  6334  1100  30FF               	movlw	255
  6335  1101  05F5               	andwf	__div_to_l_@f2+1,f
  6336  1102  30FF               	movlw	255
  6337  1103  05F6               	andwf	__div_to_l_@f2+2,f
  6338  1104  3000               	movlw	0
  6339  1105  05F7               	andwf	__div_to_l_@f2+3,f
  6340  1106  3000               	movlw	0
  6341  1107  00A3               	movwf	__div_to_l_@quot+3
  6342  1108  3000               	movlw	0
  6343  1109  00A2               	movwf	__div_to_l_@quot+2
  6344  110A  3000               	movlw	0
  6345  110B  00A1               	movwf	__div_to_l_@quot+1
  6346  110C  3000               	movlw	0
  6347  110D  00A0               	movwf	__div_to_l_@quot
  6348  110E                     l3155:
  6349  110E  307F               	movlw	127
  6350  110F  02A5               	subwf	__div_to_l_@exp1,f
  6351  1110                     l3157:
  6352  1110  30A0               	movlw	160
  6353  1111  0724               	addwf	__div_to_l_@cntr,w
  6354  1112  00F8               	movwf	??__div_to_l_
  6355  1113  0878               	movf	??__div_to_l_,w
  6356  1114  02A5               	subwf	__div_to_l_@exp1,f
  6357  1115  3020               	movlw	32
  6358  1116  00F8               	movwf	??__div_to_l_
  6359  1117  0878               	movf	??__div_to_l_,w
  6360  1118  00A4               	movwf	__div_to_l_@cntr
  6361  1119                     l3159:
  6362  1119  3001               	movlw	1
  6363  111A  00F8               	movwf	??__div_to_l_
  6364  111B                     u4855:
  6365  111B  1003               	clrc
  6366  111C  0DA0               	rlf	__div_to_l_@quot,f
  6367  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  6368  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  6369  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  6370  1120  0BF8               	decfsz	??__div_to_l_,f
  6371  1121  291B               	goto	u4855
  6372  1122                     l3161:
  6373  1122  0877               	movf	__div_to_l_@f2+3,w
  6374  1123  0273               	subwf	__div_to_l_@f1+3,w
  6375  1124  1D03               	skipz
  6376  1125  2930               	goto	u4865
  6377  1126  0876               	movf	__div_to_l_@f2+2,w
  6378  1127  0272               	subwf	__div_to_l_@f1+2,w
  6379  1128  1D03               	skipz
  6380  1129  2930               	goto	u4865
  6381  112A  0875               	movf	__div_to_l_@f2+1,w
  6382  112B  0271               	subwf	__div_to_l_@f1+1,w
  6383  112C  1D03               	skipz
  6384  112D  2930               	goto	u4865
  6385  112E  0874               	movf	__div_to_l_@f2,w
  6386  112F  0270               	subwf	__div_to_l_@f1,w
  6387  1130                     u4865:
  6388  1130  1C03               	skipc
  6389  1131  2933               	goto	u4861
  6390  1132  2934               	goto	u4860
  6391  1133                     u4861:
  6392  1133  2943               	goto	l3167
  6393  1134                     u4860:
  6394  1134                     l3163:
  6395  1134  0874               	movf	__div_to_l_@f2,w
  6396  1135  02F0               	subwf	__div_to_l_@f1,f
  6397  1136  0875               	movf	__div_to_l_@f2+1,w
  6398  1137  1C03               	skipc
  6399  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  6400  1139  02F1               	subwf	__div_to_l_@f1+1,f
  6401  113A  0876               	movf	__div_to_l_@f2+2,w
  6402  113B  1C03               	skipc
  6403  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  6404  113D  02F2               	subwf	__div_to_l_@f1+2,f
  6405  113E  0877               	movf	__div_to_l_@f2+3,w
  6406  113F  1C03               	skipc
  6407  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  6408  1141  02F3               	subwf	__div_to_l_@f1+3,f
  6409  1142                     l3165:
  6410  1142  1420               	bsf	__div_to_l_@quot,0
  6411  1143                     l3167:
  6412  1143  3001               	movlw	1
  6413  1144  00F8               	movwf	??__div_to_l_
  6414  1145                     u4875:
  6415  1145  1003               	clrc
  6416  1146  0DF0               	rlf	__div_to_l_@f1,f
  6417  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  6418  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  6419  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  6420  114A  0BF8               	decfsz	??__div_to_l_,f
  6421  114B  2945               	goto	u4875
  6422  114C                     l3169:
  6423  114C  3001               	movlw	1
  6424  114D  02A4               	subwf	__div_to_l_@cntr,f
  6425  114E  1D03               	btfss	3,2
  6426  114F  2951               	goto	u4881
  6427  1150  2952               	goto	u4880
  6428  1151                     u4881:
  6429  1151  2919               	goto	l3159
  6430  1152                     u4880:
  6431  1152                     l576:
  6432  1152  1FA5               	btfss	__div_to_l_@exp1,7
  6433  1153  2955               	goto	u4891
  6434  1154  2956               	goto	u4890
  6435  1155                     u4891:
  6436  1155  2970               	goto	l3179
  6437  1156                     u4890:
  6438  1156                     l3171:
  6439  1156  0825               	movf	__div_to_l_@exp1,w
  6440  1157  3A80               	xorlw	128
  6441  1158  3E9F               	addlw	159
  6442  1159  1803               	skipnc
  6443  115A  295C               	goto	u4901
  6444  115B  295D               	goto	u4900
  6445  115C                     u4901:
  6446  115C  295E               	goto	l3177
  6447  115D                     u4900:
  6448  115D  28DF               	goto	l3141
  6449  115E                     l3177:
  6450  115E  3001               	movlw	1
  6451  115F                     u4915:
  6452  115F  1003               	clrc
  6453  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  6454  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  6455  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  6456  1163  0CA0               	rrf	__div_to_l_@quot,f
  6457  1164  3EFF               	addlw	-1
  6458  1165  1D03               	skipz
  6459  1166  295F               	goto	u4915
  6460  1167  3001               	movlw	1
  6461  1168  00F8               	movwf	??__div_to_l_
  6462  1169  0878               	movf	??__div_to_l_,w
  6463  116A  07A5               	addwf	__div_to_l_@exp1,f
  6464  116B  1D03               	btfss	3,2
  6465  116C  296E               	goto	u4921
  6466  116D  296F               	goto	u4920
  6467  116E                     u4921:
  6468  116E  295E               	goto	l3177
  6469  116F                     u4920:
  6470  116F  2987               	goto	l3187
  6471  1170                     l3179:
  6472  1170  3020               	movlw	32
  6473  1171  0225               	subwf	__div_to_l_@exp1,w
  6474  1172  1C03               	skipc
  6475  1173  2975               	goto	u4931
  6476  1174  2976               	goto	u4930
  6477  1175                     u4931:
  6478  1175  2982               	goto	l583
  6479  1176                     u4930:
  6480  1176  28DF               	goto	l3141
  6481  1177                     l3185:
  6482  1177  3001               	movlw	1
  6483  1178  00F8               	movwf	??__div_to_l_
  6484  1179                     u4945:
  6485  1179  1003               	clrc
  6486  117A  0DA0               	rlf	__div_to_l_@quot,f
  6487  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  6488  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  6489  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  6490  117E  0BF8               	decfsz	??__div_to_l_,f
  6491  117F  2979               	goto	u4945
  6492  1180  3001               	movlw	1
  6493  1181  02A5               	subwf	__div_to_l_@exp1,f
  6494  1182                     l583:
  6495  1182  0825               	movf	__div_to_l_@exp1,w
  6496  1183  1D03               	btfss	3,2
  6497  1184  2986               	goto	u4951
  6498  1185  2987               	goto	u4950
  6499  1186                     u4951:
  6500  1186  2977               	goto	l3185
  6501  1187                     u4950:
  6502  1187                     l3187:
  6503  1187  0823               	movf	__div_to_l_@quot+3,w
  6504  1188  00F3               	movwf	?__div_to_l_+3
  6505  1189  0822               	movf	__div_to_l_@quot+2,w
  6506  118A  00F2               	movwf	?__div_to_l_+2
  6507  118B  0821               	movf	__div_to_l_@quot+1,w
  6508  118C  00F1               	movwf	?__div_to_l_+1
  6509  118D  0820               	movf	__div_to_l_@quot,w
  6510  118E  00F0               	movwf	?__div_to_l_
  6511  118F                     l572:
  6512  118F  0008               	return
  6513  1190                     __end_of__div_to_l_:
  6514                           
  6515                           	psect	text11
  6516  1AB6                     __ptext11:	
  6517 ;; *************** function ___wmul *****************
  6518 ;; Defined at:
  6519 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  multiplier      2    0[COMMON] unsigned int 
  6522 ;;  multiplicand    2    2[COMMON] unsigned int 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  product         2    4[COMMON] unsigned int 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  2    0[COMMON] unsigned int 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6534 ;;      Params:         4       0       0       0       0
  6535 ;;      Locals:         2       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0
  6537 ;;      Totals:         6       0       0       0       0
  6538 ;;Total ram usage:        6 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_sprintf
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function ___wmul
  6549  1AB6                     ___wmul:
  6550  1AB6                     l3191:	
  6551                           ;incstack = 0
  6552                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6553                           
  6554  1AB6  01F4               	clrf	___wmul@product
  6555  1AB7  01F5               	clrf	___wmul@product+1
  6556  1AB8                     l3193:
  6557  1AB8  1C70               	btfss	___wmul@multiplier,0
  6558  1AB9  2ABB               	goto	u4961
  6559  1ABA  2ABC               	goto	u4960
  6560  1ABB                     u4961:
  6561  1ABB  2AC2               	goto	l402
  6562  1ABC                     u4960:
  6563  1ABC                     l3195:
  6564  1ABC  0872               	movf	___wmul@multiplicand,w
  6565  1ABD  07F4               	addwf	___wmul@product,f
  6566  1ABE  1803               	skipnc
  6567  1ABF  0AF5               	incf	___wmul@product+1,f
  6568  1AC0  0873               	movf	___wmul@multiplicand+1,w
  6569  1AC1  07F5               	addwf	___wmul@product+1,f
  6570  1AC2                     l402:
  6571  1AC2  3001               	movlw	1
  6572  1AC3                     u4975:
  6573  1AC3  1003               	clrc
  6574  1AC4  0DF2               	rlf	___wmul@multiplicand,f
  6575  1AC5  0DF3               	rlf	___wmul@multiplicand+1,f
  6576  1AC6  3EFF               	addlw	-1
  6577  1AC7  1D03               	skipz
  6578  1AC8  2AC3               	goto	u4975
  6579  1AC9                     l3197:
  6580  1AC9  3001               	movlw	1
  6581  1ACA                     u4985:
  6582  1ACA  1003               	clrc
  6583  1ACB  0CF1               	rrf	___wmul@multiplier+1,f
  6584  1ACC  0CF0               	rrf	___wmul@multiplier,f
  6585  1ACD  3EFF               	addlw	-1
  6586  1ACE  1D03               	skipz
  6587  1ACF  2ACA               	goto	u4985
  6588  1AD0                     l3199:
  6589  1AD0  0870               	movf	___wmul@multiplier,w
  6590  1AD1  0471               	iorwf	___wmul@multiplier+1,w
  6591  1AD2  1D03               	btfss	3,2
  6592  1AD3  2AD5               	goto	u4991
  6593  1AD4  2AD6               	goto	u4990
  6594  1AD5                     u4991:
  6595  1AD5  2AB8               	goto	l3193
  6596  1AD6                     u4990:
  6597  1AD6                     l3201:
  6598  1AD6  0875               	movf	___wmul@product+1,w
  6599  1AD7  00F1               	movwf	?___wmul+1
  6600  1AD8  0874               	movf	___wmul@product,w
  6601  1AD9  00F0               	movwf	?___wmul
  6602  1ADA                     l404:
  6603  1ADA  0008               	return
  6604  1ADB                     __end_of___wmul:
  6605                           
  6606                           	psect	text12
  6607  1CAA                     __ptext12:	
  6608 ;; *************** function ___llmod *****************
  6609 ;; Defined at:
  6610 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  divisor         4    0[BANK0 ] unsigned long 
  6613 ;;  dividend        4    4[BANK0 ] unsigned long 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  counter         1    9[BANK0 ] unsigned char 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  4    0[BANK0 ] unsigned long 
  6618 ;; Registers used:
  6619 ;;		wreg, status,2, status,0
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6625 ;;      Params:         0       8       0       0       0
  6626 ;;      Locals:         0       1       0       0       0
  6627 ;;      Temps:          0       1       0       0       0
  6628 ;;      Totals:         0      10       0       0       0
  6629 ;;Total ram usage:       10 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_sprintf
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           
  6639                           ;psect for function ___llmod
  6640  1CAA                     ___llmod:
  6641  1CAA                     l3305:	
  6642                           ;incstack = 0
  6643                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6644                           
  6645  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  6646  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  6647  1CAC  0823               	movf	___llmod@divisor+3,w
  6648  1CAD  0422               	iorwf	___llmod@divisor+2,w
  6649  1CAE  0421               	iorwf	___llmod@divisor+1,w
  6650  1CAF  0420               	iorwf	___llmod@divisor,w
  6651  1CB0  1903               	skipnz
  6652  1CB1  2CB3               	goto	u5281
  6653  1CB2  2CB4               	goto	u5280
  6654  1CB3                     u5281:
  6655  1CB3  2CF7               	goto	l3321
  6656  1CB4                     u5280:
  6657  1CB4                     l3307:
  6658  1CB4  01A9               	clrf	___llmod@counter
  6659  1CB5  0AA9               	incf	___llmod@counter,f
  6660  1CB6  2CC4               	goto	l3311
  6661  1CB7                     l3309:
  6662  1CB7  3001               	movlw	1
  6663  1CB8  00A8               	movwf	??___llmod
  6664  1CB9                     u5295:
  6665  1CB9  1003               	clrc
  6666  1CBA  0DA0               	rlf	___llmod@divisor,f
  6667  1CBB  0DA1               	rlf	___llmod@divisor+1,f
  6668  1CBC  0DA2               	rlf	___llmod@divisor+2,f
  6669  1CBD  0DA3               	rlf	___llmod@divisor+3,f
  6670  1CBE  0BA8               	decfsz	??___llmod,f
  6671  1CBF  2CB9               	goto	u5295
  6672  1CC0  3001               	movlw	1
  6673  1CC1  00A8               	movwf	??___llmod
  6674  1CC2  0828               	movf	??___llmod,w
  6675  1CC3  07A9               	addwf	___llmod@counter,f
  6676  1CC4                     l3311:
  6677  1CC4  1FA3               	btfss	___llmod@divisor+3,7
  6678  1CC5  2CC7               	goto	u5301
  6679  1CC6  2CC8               	goto	u5300
  6680  1CC7                     u5301:
  6681  1CC7  2CB7               	goto	l3309
  6682  1CC8                     u5300:
  6683  1CC8                     l3313:
  6684  1CC8  0823               	movf	___llmod@divisor+3,w
  6685  1CC9  0227               	subwf	___llmod@dividend+3,w
  6686  1CCA  1D03               	skipz
  6687  1CCB  2CD6               	goto	u5315
  6688  1CCC  0822               	movf	___llmod@divisor+2,w
  6689  1CCD  0226               	subwf	___llmod@dividend+2,w
  6690  1CCE  1D03               	skipz
  6691  1CCF  2CD6               	goto	u5315
  6692  1CD0  0821               	movf	___llmod@divisor+1,w
  6693  1CD1  0225               	subwf	___llmod@dividend+1,w
  6694  1CD2  1D03               	skipz
  6695  1CD3  2CD6               	goto	u5315
  6696  1CD4  0820               	movf	___llmod@divisor,w
  6697  1CD5  0224               	subwf	___llmod@dividend,w
  6698  1CD6                     u5315:
  6699  1CD6  1C03               	skipc
  6700  1CD7  2CD9               	goto	u5311
  6701  1CD8  2CDA               	goto	u5310
  6702  1CD9                     u5311:
  6703  1CD9  2CE8               	goto	l3317
  6704  1CDA                     u5310:
  6705  1CDA                     l3315:
  6706  1CDA  0820               	movf	___llmod@divisor,w
  6707  1CDB  02A4               	subwf	___llmod@dividend,f
  6708  1CDC  0821               	movf	___llmod@divisor+1,w
  6709  1CDD  1C03               	skipc
  6710  1CDE  0F21               	incfsz	___llmod@divisor+1,w
  6711  1CDF  02A5               	subwf	___llmod@dividend+1,f
  6712  1CE0  0822               	movf	___llmod@divisor+2,w
  6713  1CE1  1C03               	skipc
  6714  1CE2  0F22               	incfsz	___llmod@divisor+2,w
  6715  1CE3  02A6               	subwf	___llmod@dividend+2,f
  6716  1CE4  0823               	movf	___llmod@divisor+3,w
  6717  1CE5  1C03               	skipc
  6718  1CE6  0F23               	incfsz	___llmod@divisor+3,w
  6719  1CE7  02A7               	subwf	___llmod@dividend+3,f
  6720  1CE8                     l3317:
  6721  1CE8  3001               	movlw	1
  6722  1CE9                     u5325:
  6723  1CE9  1003               	clrc
  6724  1CEA  0CA3               	rrf	___llmod@divisor+3,f
  6725  1CEB  0CA2               	rrf	___llmod@divisor+2,f
  6726  1CEC  0CA1               	rrf	___llmod@divisor+1,f
  6727  1CED  0CA0               	rrf	___llmod@divisor,f
  6728  1CEE  3EFF               	addlw	-1
  6729  1CEF  1D03               	skipz
  6730  1CF0  2CE9               	goto	u5325
  6731  1CF1                     l3319:
  6732  1CF1  3001               	movlw	1
  6733  1CF2  02A9               	subwf	___llmod@counter,f
  6734  1CF3  1D03               	btfss	3,2
  6735  1CF4  2CF6               	goto	u5331
  6736  1CF5  2CF7               	goto	u5330
  6737  1CF6                     u5331:
  6738  1CF6  2CC8               	goto	l3313
  6739  1CF7                     u5330:
  6740  1CF7                     l3321:
  6741  1CF7  0827               	movf	___llmod@dividend+3,w
  6742  1CF8  00A3               	movwf	?___llmod+3
  6743  1CF9  0826               	movf	___llmod@dividend+2,w
  6744  1CFA  00A2               	movwf	?___llmod+2
  6745  1CFB  0825               	movf	___llmod@dividend+1,w
  6746  1CFC  00A1               	movwf	?___llmod+1
  6747  1CFD  0824               	movf	___llmod@dividend,w
  6748  1CFE  00A0               	movwf	?___llmod
  6749  1CFF                     l658:
  6750  1CFF  0008               	return
  6751  1D00                     __end_of___llmod:
  6752                           
  6753                           	psect	text13
  6754  1D59                     __ptext13:	
  6755 ;; *************** function ___lldiv *****************
  6756 ;; Defined at:
  6757 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  divisor         4    0[COMMON] unsigned long 
  6760 ;;  dividend        4    4[COMMON] unsigned long 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  quotient        4    9[COMMON] unsigned long 
  6763 ;;  counter         1   13[COMMON] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  4    0[COMMON] unsigned long 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6773 ;;      Params:         8       0       0       0       0
  6774 ;;      Locals:         5       0       0       0       0
  6775 ;;      Temps:          1       0       0       0       0
  6776 ;;      Totals:        14       0       0       0       0
  6777 ;;Total ram usage:       14 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_sprintf
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           
  6787                           ;psect for function ___lldiv
  6788  1D59                     ___lldiv:
  6789  1D59                     l3205:	
  6790                           ;incstack = 0
  6791                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6792                           
  6793  1D59  3000               	movlw	0
  6794  1D5A  00FC               	movwf	___lldiv@quotient+3
  6795  1D5B  3000               	movlw	0
  6796  1D5C  00FB               	movwf	___lldiv@quotient+2
  6797  1D5D  3000               	movlw	0
  6798  1D5E  00FA               	movwf	___lldiv@quotient+1
  6799  1D5F  3000               	movlw	0
  6800  1D60  00F9               	movwf	___lldiv@quotient
  6801  1D61  0873               	movf	___lldiv@divisor+3,w
  6802  1D62  0472               	iorwf	___lldiv@divisor+2,w
  6803  1D63  0471               	iorwf	___lldiv@divisor+1,w
  6804  1D64  0470               	iorwf	___lldiv@divisor,w
  6805  1D65  1903               	skipnz
  6806  1D66  2D68               	goto	u5001
  6807  1D67  2D69               	goto	u5000
  6808  1D68                     u5001:
  6809  1D68  2DB6               	goto	l3225
  6810  1D69                     u5000:
  6811  1D69                     l3207:
  6812  1D69  01FD               	clrf	___lldiv@counter
  6813  1D6A  0AFD               	incf	___lldiv@counter,f
  6814  1D6B  2D79               	goto	l3211
  6815  1D6C                     l3209:
  6816  1D6C  3001               	movlw	1
  6817  1D6D  00F8               	movwf	??___lldiv
  6818  1D6E                     u5015:
  6819  1D6E  1003               	clrc
  6820  1D6F  0DF0               	rlf	___lldiv@divisor,f
  6821  1D70  0DF1               	rlf	___lldiv@divisor+1,f
  6822  1D71  0DF2               	rlf	___lldiv@divisor+2,f
  6823  1D72  0DF3               	rlf	___lldiv@divisor+3,f
  6824  1D73  0BF8               	decfsz	??___lldiv,f
  6825  1D74  2D6E               	goto	u5015
  6826  1D75  3001               	movlw	1
  6827  1D76  00F8               	movwf	??___lldiv
  6828  1D77  0878               	movf	??___lldiv,w
  6829  1D78  07FD               	addwf	___lldiv@counter,f
  6830  1D79                     l3211:
  6831  1D79  1FF3               	btfss	___lldiv@divisor+3,7
  6832  1D7A  2D7C               	goto	u5021
  6833  1D7B  2D7D               	goto	u5020
  6834  1D7C                     u5021:
  6835  1D7C  2D6C               	goto	l3209
  6836  1D7D                     u5020:
  6837  1D7D                     l3213:
  6838  1D7D  3001               	movlw	1
  6839  1D7E  00F8               	movwf	??___lldiv
  6840  1D7F                     u5035:
  6841  1D7F  1003               	clrc
  6842  1D80  0DF9               	rlf	___lldiv@quotient,f
  6843  1D81  0DFA               	rlf	___lldiv@quotient+1,f
  6844  1D82  0DFB               	rlf	___lldiv@quotient+2,f
  6845  1D83  0DFC               	rlf	___lldiv@quotient+3,f
  6846  1D84  0BF8               	decfsz	??___lldiv,f
  6847  1D85  2D7F               	goto	u5035
  6848  1D86                     l3215:
  6849  1D86  0873               	movf	___lldiv@divisor+3,w
  6850  1D87  0277               	subwf	___lldiv@dividend+3,w
  6851  1D88  1D03               	skipz
  6852  1D89  2D94               	goto	u5045
  6853  1D8A  0872               	movf	___lldiv@divisor+2,w
  6854  1D8B  0276               	subwf	___lldiv@dividend+2,w
  6855  1D8C  1D03               	skipz
  6856  1D8D  2D94               	goto	u5045
  6857  1D8E  0871               	movf	___lldiv@divisor+1,w
  6858  1D8F  0275               	subwf	___lldiv@dividend+1,w
  6859  1D90  1D03               	skipz
  6860  1D91  2D94               	goto	u5045
  6861  1D92  0870               	movf	___lldiv@divisor,w
  6862  1D93  0274               	subwf	___lldiv@dividend,w
  6863  1D94                     u5045:
  6864  1D94  1C03               	skipc
  6865  1D95  2D97               	goto	u5041
  6866  1D96  2D98               	goto	u5040
  6867  1D97                     u5041:
  6868  1D97  2DA7               	goto	l3221
  6869  1D98                     u5040:
  6870  1D98                     l3217:
  6871  1D98  0870               	movf	___lldiv@divisor,w
  6872  1D99  02F4               	subwf	___lldiv@dividend,f
  6873  1D9A  0871               	movf	___lldiv@divisor+1,w
  6874  1D9B  1C03               	skipc
  6875  1D9C  0F71               	incfsz	___lldiv@divisor+1,w
  6876  1D9D  02F5               	subwf	___lldiv@dividend+1,f
  6877  1D9E  0872               	movf	___lldiv@divisor+2,w
  6878  1D9F  1C03               	skipc
  6879  1DA0  0F72               	incfsz	___lldiv@divisor+2,w
  6880  1DA1  02F6               	subwf	___lldiv@dividend+2,f
  6881  1DA2  0873               	movf	___lldiv@divisor+3,w
  6882  1DA3  1C03               	skipc
  6883  1DA4  0F73               	incfsz	___lldiv@divisor+3,w
  6884  1DA5  02F7               	subwf	___lldiv@dividend+3,f
  6885  1DA6                     l3219:
  6886  1DA6  1479               	bsf	___lldiv@quotient,0
  6887  1DA7                     l3221:
  6888  1DA7  3001               	movlw	1
  6889  1DA8                     u5055:
  6890  1DA8  1003               	clrc
  6891  1DA9  0CF3               	rrf	___lldiv@divisor+3,f
  6892  1DAA  0CF2               	rrf	___lldiv@divisor+2,f
  6893  1DAB  0CF1               	rrf	___lldiv@divisor+1,f
  6894  1DAC  0CF0               	rrf	___lldiv@divisor,f
  6895  1DAD  3EFF               	addlw	-1
  6896  1DAE  1D03               	skipz
  6897  1DAF  2DA8               	goto	u5055
  6898  1DB0                     l3223:
  6899  1DB0  3001               	movlw	1
  6900  1DB1  02FD               	subwf	___lldiv@counter,f
  6901  1DB2  1D03               	btfss	3,2
  6902  1DB3  2DB5               	goto	u5061
  6903  1DB4  2DB6               	goto	u5060
  6904  1DB5                     u5061:
  6905  1DB5  2D7D               	goto	l3213
  6906  1DB6                     u5060:
  6907  1DB6                     l3225:
  6908  1DB6  087C               	movf	___lldiv@quotient+3,w
  6909  1DB7  00F3               	movwf	?___lldiv+3
  6910  1DB8  087B               	movf	___lldiv@quotient+2,w
  6911  1DB9  00F2               	movwf	?___lldiv+2
  6912  1DBA  087A               	movf	___lldiv@quotient+1,w
  6913  1DBB  00F1               	movwf	?___lldiv+1
  6914  1DBC  0879               	movf	___lldiv@quotient,w
  6915  1DBD  00F0               	movwf	?___lldiv
  6916  1DBE                     l438:
  6917  1DBE  0008               	return
  6918  1DBF                     __end_of___lldiv:
  6919                           
  6920                           	psect	text14
  6921  1E28                     __ptext14:	
  6922 ;; *************** function ___fltol *****************
  6923 ;; Defined at:
  6924 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  f1              4   49[BANK0 ] unsigned long 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  exp1            1   59[BANK0 ] unsigned char 
  6929 ;;  sign1           1   58[BANK0 ] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  4   49[BANK0 ] long 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, status,0
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6939 ;;      Params:         0       4       0       0       0
  6940 ;;      Locals:         0       2       0       0       0
  6941 ;;      Temps:          0       5       0       0       0
  6942 ;;      Totals:         0      11       0       0       0
  6943 ;;Total ram usage:       11 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_sprintf
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function ___fltol
  6954  1E28                     ___fltol:
  6955  1E28                     l3269:	
  6956                           ;incstack = 0
  6957                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6958                           
  6959  1E28  1003               	clrc
  6960  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  6961  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  6962  1E2B  0D53               	rlf	___fltol@f1+2,w
  6963  1E2C  0D54               	rlf	___fltol@f1+3,w
  6964  1E2D  00D5               	movwf	??___fltol
  6965  1E2E  0855               	movf	??___fltol,w
  6966  1E2F  00DB               	movwf	___fltol@exp1
  6967  1E30  085B               	movf	___fltol@exp1,w
  6968  1E31  1D03               	btfss	3,2
  6969  1E32  2E34               	goto	u5181
  6970  1E33  2E35               	goto	u5180
  6971  1E34                     u5181:
  6972  1E34  2E3E               	goto	l3275
  6973  1E35                     u5180:
  6974  1E35                     l3271:
  6975  1E35  3000               	movlw	0
  6976  1E36  00D4               	movwf	?___fltol+3
  6977  1E37  3000               	movlw	0
  6978  1E38  00D3               	movwf	?___fltol+2
  6979  1E39  3000               	movlw	0
  6980  1E3A  00D2               	movwf	?___fltol+1
  6981  1E3B  3000               	movlw	0
  6982  1E3C  00D1               	movwf	?___fltol
  6983  1E3D  2EA3               	goto	l605
  6984  1E3E                     l3275:
  6985  1E3E  0851               	movf	___fltol@f1,w
  6986  1E3F  00D5               	movwf	??___fltol
  6987  1E40  0852               	movf	___fltol@f1+1,w
  6988  1E41  00D6               	movwf	??___fltol+1
  6989  1E42  0853               	movf	___fltol@f1+2,w
  6990  1E43  00D7               	movwf	??___fltol+2
  6991  1E44  0854               	movf	___fltol@f1+3,w
  6992  1E45  00D8               	movwf	??___fltol+3
  6993  1E46  301F               	movlw	31
  6994  1E47                     u5195:
  6995  1E47  1003               	clrc
  6996  1E48  0CD8               	rrf	??___fltol+3,f
  6997  1E49  0CD7               	rrf	??___fltol+2,f
  6998  1E4A  0CD6               	rrf	??___fltol+1,f
  6999  1E4B  0CD5               	rrf	??___fltol,f
  7000  1E4C                     u5190:
  7001  1E4C  3EFF               	addlw	-1
  7002  1E4D  1D03               	skipz
  7003  1E4E  2E47               	goto	u5195
  7004  1E4F  0855               	movf	??___fltol,w
  7005  1E50  00D9               	movwf	??___fltol+4
  7006  1E51  0859               	movf	??___fltol+4,w
  7007  1E52  00DA               	movwf	___fltol@sign1
  7008  1E53                     l3277:
  7009  1E53  17D3               	bsf	___fltol@f1+2,7
  7010  1E54                     l3279:
  7011  1E54  30FF               	movlw	255
  7012  1E55  05D1               	andwf	___fltol@f1,f
  7013  1E56  30FF               	movlw	255
  7014  1E57  05D2               	andwf	___fltol@f1+1,f
  7015  1E58  30FF               	movlw	255
  7016  1E59  05D3               	andwf	___fltol@f1+2,f
  7017  1E5A  3000               	movlw	0
  7018  1E5B  05D4               	andwf	___fltol@f1+3,f
  7019  1E5C                     l3281:
  7020  1E5C  3096               	movlw	150
  7021  1E5D  02DB               	subwf	___fltol@exp1,f
  7022  1E5E                     l3283:
  7023  1E5E  1FDB               	btfss	___fltol@exp1,7
  7024  1E5F  2E61               	goto	u5201
  7025  1E60  2E62               	goto	u5200
  7026  1E61                     u5201:
  7027  1E61  2E7C               	goto	l3293
  7028  1E62                     u5200:
  7029  1E62                     l3285:
  7030  1E62  085B               	movf	___fltol@exp1,w
  7031  1E63  3A80               	xorlw	128
  7032  1E64  3E97               	addlw	151
  7033  1E65  1803               	skipnc
  7034  1E66  2E68               	goto	u5211
  7035  1E67  2E69               	goto	u5210
  7036  1E68                     u5211:
  7037  1E68  2E6A               	goto	l3291
  7038  1E69                     u5210:
  7039  1E69  2E35               	goto	l3271
  7040  1E6A                     l3291:
  7041  1E6A  3001               	movlw	1
  7042  1E6B                     u5225:
  7043  1E6B  1003               	clrc
  7044  1E6C  0CD4               	rrf	___fltol@f1+3,f
  7045  1E6D  0CD3               	rrf	___fltol@f1+2,f
  7046  1E6E  0CD2               	rrf	___fltol@f1+1,f
  7047  1E6F  0CD1               	rrf	___fltol@f1,f
  7048  1E70  3EFF               	addlw	-1
  7049  1E71  1D03               	skipz
  7050  1E72  2E6B               	goto	u5225
  7051  1E73  3001               	movlw	1
  7052  1E74  00D5               	movwf	??___fltol
  7053  1E75  0855               	movf	??___fltol,w
  7054  1E76  07DB               	addwf	___fltol@exp1,f
  7055  1E77  1D03               	btfss	3,2
  7056  1E78  2E7A               	goto	u5231
  7057  1E79  2E7B               	goto	u5230
  7058  1E7A                     u5231:
  7059  1E7A  2E6A               	goto	l3291
  7060  1E7B                     u5230:
  7061  1E7B  2E93               	goto	l3301
  7062  1E7C                     l3293:
  7063  1E7C  3020               	movlw	32
  7064  1E7D  025B               	subwf	___fltol@exp1,w
  7065  1E7E  1C03               	skipc
  7066  1E7F  2E81               	goto	u5241
  7067  1E80  2E82               	goto	u5240
  7068  1E81                     u5241:
  7069  1E81  2E8E               	goto	l612
  7070  1E82                     u5240:
  7071  1E82  2E35               	goto	l3271
  7072  1E83                     l3299:
  7073  1E83  3001               	movlw	1
  7074  1E84  00D5               	movwf	??___fltol
  7075  1E85                     u5255:
  7076  1E85  1003               	clrc
  7077  1E86  0DD1               	rlf	___fltol@f1,f
  7078  1E87  0DD2               	rlf	___fltol@f1+1,f
  7079  1E88  0DD3               	rlf	___fltol@f1+2,f
  7080  1E89  0DD4               	rlf	___fltol@f1+3,f
  7081  1E8A  0BD5               	decfsz	??___fltol,f
  7082  1E8B  2E85               	goto	u5255
  7083  1E8C  3001               	movlw	1
  7084  1E8D  02DB               	subwf	___fltol@exp1,f
  7085  1E8E                     l612:
  7086  1E8E  085B               	movf	___fltol@exp1,w
  7087  1E8F  1D03               	btfss	3,2
  7088  1E90  2E92               	goto	u5261
  7089  1E91  2E93               	goto	u5260
  7090  1E92                     u5261:
  7091  1E92  2E83               	goto	l3299
  7092  1E93                     u5260:
  7093  1E93                     l3301:
  7094  1E93  085A               	movf	___fltol@sign1,w
  7095  1E94  1903               	btfsc	3,2
  7096  1E95  2E97               	goto	u5271
  7097  1E96  2E98               	goto	u5270
  7098  1E97                     u5271:
  7099  1E97  2EA3               	goto	l615
  7100  1E98                     u5270:
  7101  1E98                     l3303:
  7102  1E98  09D1               	comf	___fltol@f1,f
  7103  1E99  09D2               	comf	___fltol@f1+1,f
  7104  1E9A  09D3               	comf	___fltol@f1+2,f
  7105  1E9B  09D4               	comf	___fltol@f1+3,f
  7106  1E9C  0AD1               	incf	___fltol@f1,f
  7107  1E9D  1903               	skipnz
  7108  1E9E  0AD2               	incf	___fltol@f1+1,f
  7109  1E9F  1903               	skipnz
  7110  1EA0  0AD3               	incf	___fltol@f1+2,f
  7111  1EA1  1903               	skipnz
  7112  1EA2  0AD4               	incf	___fltol@f1+3,f
  7113  1EA3                     l615:
  7114  1EA3                     l605:
  7115  1EA3  0008               	return
  7116  1EA4                     __end_of___fltol:
  7117                           
  7118                           	psect	text15
  7119  1A92                     __ptext15:	
  7120 ;; *************** function ___flsub *****************
  7121 ;; Defined at:
  7122 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  a               4   70[BANK0 ] long 
  7125 ;;  b               4   74[BANK0 ] long 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  4   70[BANK0 ] long 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7137 ;;      Params:         0       8       0       0       0
  7138 ;;      Locals:         0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0
  7140 ;;      Totals:         0       8       0       0       0
  7141 ;;Total ram usage:        8 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    1
  7144 ;; This function calls:
  7145 ;;		___fladd
  7146 ;; This function is called by:
  7147 ;;		_sprintf
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           
  7152                           ;psect for function ___flsub
  7153  1A92                     ___flsub:
  7154  1A92                     l3325:	
  7155                           ;incstack = 0
  7156                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7157                           
  7158  1A92  3080               	movlw	128
  7159  1A93  1283               	bcf	3,5	;RP0=0, select bank0
  7160  1A94  1303               	bcf	3,6	;RP1=0, select bank0
  7161  1A95  06E9               	xorwf	___flsub@a+3,f
  7162  1A96                     l3327:
  7163  1A96  086D               	movf	___flsub@b+3,w
  7164  1A97  00D5               	movwf	___fladd@b+3
  7165  1A98  086C               	movf	___flsub@b+2,w
  7166  1A99  00D4               	movwf	___fladd@b+2
  7167  1A9A  086B               	movf	___flsub@b+1,w
  7168  1A9B  00D3               	movwf	___fladd@b+1
  7169  1A9C  086A               	movf	___flsub@b,w
  7170  1A9D  00D2               	movwf	___fladd@b
  7171  1A9E  0869               	movf	___flsub@a+3,w
  7172  1A9F  00D9               	movwf	___fladd@a+3
  7173  1AA0  0868               	movf	___flsub@a+2,w
  7174  1AA1  00D8               	movwf	___fladd@a+2
  7175  1AA2  0867               	movf	___flsub@a+1,w
  7176  1AA3  00D7               	movwf	___fladd@a+1
  7177  1AA4  0866               	movf	___flsub@a,w
  7178  1AA5  00D6               	movwf	___fladd@a
  7179  1AA6  160A  118A  2578  160A  158A  	fcall	___fladd
  7180  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
  7181  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
  7182  1AAD  0855               	movf	?___fladd+3,w
  7183  1AAE  00E9               	movwf	?___flsub+3
  7184  1AAF  0854               	movf	?___fladd+2,w
  7185  1AB0  00E8               	movwf	?___flsub+2
  7186  1AB1  0853               	movf	?___fladd+1,w
  7187  1AB2  00E7               	movwf	?___flsub+1
  7188  1AB3  0852               	movf	?___fladd,w
  7189  1AB4  00E6               	movwf	?___flsub
  7190  1AB5                     l775:
  7191  1AB5  0008               	return
  7192  1AB6                     __end_of___flsub:
  7193                           
  7194                           	psect	text16
  7195  1578                     __ptext16:	
  7196 ;; *************** function ___fladd *****************
  7197 ;; Defined at:
  7198 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  b               4   50[BANK0 ] long 
  7201 ;;  a               4   54[BANK0 ] long 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  grs             1   69[BANK0 ] unsigned char 
  7204 ;;  bexp            1   68[BANK0 ] unsigned char 
  7205 ;;  aexp            1   67[BANK0 ] unsigned char 
  7206 ;;  signs           1   66[BANK0 ] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  4   50[BANK0 ] unsigned char 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0, btemp+1
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7216 ;;      Params:         0       8       0       0       0
  7217 ;;      Locals:         0       4       0       0       0
  7218 ;;      Temps:          0       8       0       0       0
  7219 ;;      Totals:         0      20       0       0       0
  7220 ;;Total ram usage:       20 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_sprintf
  7226 ;;		___flsub
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           
  7231                           ;psect for function ___fladd
  7232  1578                     ___fladd:
  7233  1578                     l2659:	
  7234                           ;incstack = 0
  7235                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7236                           
  7237  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7238  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7239  157A  0855               	movf	___fladd@b+3,w
  7240  157B  3980               	andlw	128
  7241  157C  00DA               	movwf	??___fladd
  7242  157D  085A               	movf	??___fladd,w
  7243  157E  00E2               	movwf	___fladd@signs
  7244  157F                     l2661:
  7245  157F  0855               	movf	___fladd@b+3,w
  7246  1580  00DA               	movwf	??___fladd
  7247  1581  075A               	addwf	??___fladd,w
  7248  1582  00DB               	movwf	??___fladd+1
  7249  1583  085B               	movf	??___fladd+1,w
  7250  1584  00E4               	movwf	___fladd@bexp
  7251  1585                     l2663:
  7252  1585  1FD4               	btfss	___fladd@b+2,7
  7253  1586  2D88               	goto	u3581
  7254  1587  2D89               	goto	u3580
  7255  1588                     u3581:
  7256  1588  2D8A               	goto	l2667
  7257  1589                     u3580:
  7258  1589                     l2665:
  7259  1589  1464               	bsf	___fladd@bexp,0
  7260  158A                     l2667:
  7261  158A  0864               	movf	___fladd@bexp,w
  7262  158B  1903               	btfsc	3,2
  7263  158C  2D8E               	goto	u3591
  7264  158D  2D8F               	goto	u3590
  7265  158E                     u3591:
  7266  158E  2D9F               	goto	l2677
  7267  158F                     u3590:
  7268  158F                     l2669:
  7269  158F  0A64               	incf	___fladd@bexp,w
  7270  1590  1D03               	btfss	3,2
  7271  1591  2D93               	goto	u3601
  7272  1592  2D94               	goto	u3600
  7273  1593                     u3601:
  7274  1593  2D9C               	goto	l2673
  7275  1594                     u3600:
  7276  1594                     l2671:
  7277  1594  3000               	movlw	0
  7278  1595  00D5               	movwf	___fladd@b+3
  7279  1596  3000               	movlw	0
  7280  1597  00D4               	movwf	___fladd@b+2
  7281  1598  3000               	movlw	0
  7282  1599  00D3               	movwf	___fladd@b+1
  7283  159A  3000               	movlw	0
  7284  159B  00D2               	movwf	___fladd@b
  7285  159C                     l2673:
  7286  159C  17D4               	bsf	___fladd@b+2,7
  7287  159D                     l2675:
  7288  159D  01D5               	clrf	___fladd@b+3
  7289  159E  2DA7               	goto	l2679
  7290  159F                     l2677:
  7291  159F  3000               	movlw	0
  7292  15A0  00D5               	movwf	___fladd@b+3
  7293  15A1  3000               	movlw	0
  7294  15A2  00D4               	movwf	___fladd@b+2
  7295  15A3  3000               	movlw	0
  7296  15A4  00D3               	movwf	___fladd@b+1
  7297  15A5  3000               	movlw	0
  7298  15A6  00D2               	movwf	___fladd@b
  7299  15A7                     l2679:
  7300  15A7  0859               	movf	___fladd@a+3,w
  7301  15A8  3980               	andlw	128
  7302  15A9  00DA               	movwf	??___fladd
  7303  15AA  085A               	movf	??___fladd,w
  7304  15AB  00E3               	movwf	___fladd@aexp
  7305  15AC                     l2681:
  7306  15AC  0863               	movf	___fladd@aexp,w
  7307  15AD  0662               	xorwf	___fladd@signs,w
  7308  15AE  1903               	skipnz
  7309  15AF  2DB1               	goto	u3611
  7310  15B0  2DB2               	goto	u3610
  7311  15B1                     u3611:
  7312  15B1  2DB3               	goto	l2685
  7313  15B2                     u3610:
  7314  15B2                     l2683:
  7315  15B2  1762               	bsf	___fladd@signs,6
  7316  15B3                     l2685:
  7317  15B3  0859               	movf	___fladd@a+3,w
  7318  15B4  00DA               	movwf	??___fladd
  7319  15B5  075A               	addwf	??___fladd,w
  7320  15B6  00DB               	movwf	??___fladd+1
  7321  15B7  085B               	movf	??___fladd+1,w
  7322  15B8  00E3               	movwf	___fladd@aexp
  7323  15B9                     l2687:
  7324  15B9  1FD8               	btfss	___fladd@a+2,7
  7325  15BA  2DBC               	goto	u3621
  7326  15BB  2DBD               	goto	u3620
  7327  15BC                     u3621:
  7328  15BC  2DBE               	goto	l2691
  7329  15BD                     u3620:
  7330  15BD                     l2689:
  7331  15BD  1463               	bsf	___fladd@aexp,0
  7332  15BE                     l2691:
  7333  15BE  0863               	movf	___fladd@aexp,w
  7334  15BF  1903               	btfsc	3,2
  7335  15C0  2DC2               	goto	u3631
  7336  15C1  2DC3               	goto	u3630
  7337  15C2                     u3631:
  7338  15C2  2DD3               	goto	l2701
  7339  15C3                     u3630:
  7340  15C3                     l2693:
  7341  15C3  0A63               	incf	___fladd@aexp,w
  7342  15C4  1D03               	btfss	3,2
  7343  15C5  2DC7               	goto	u3641
  7344  15C6  2DC8               	goto	u3640
  7345  15C7                     u3641:
  7346  15C7  2DD0               	goto	l2697
  7347  15C8                     u3640:
  7348  15C8                     l2695:
  7349  15C8  3000               	movlw	0
  7350  15C9  00D9               	movwf	___fladd@a+3
  7351  15CA  3000               	movlw	0
  7352  15CB  00D8               	movwf	___fladd@a+2
  7353  15CC  3000               	movlw	0
  7354  15CD  00D7               	movwf	___fladd@a+1
  7355  15CE  3000               	movlw	0
  7356  15CF  00D6               	movwf	___fladd@a
  7357  15D0                     l2697:
  7358  15D0  17D8               	bsf	___fladd@a+2,7
  7359  15D1                     l2699:
  7360  15D1  01D9               	clrf	___fladd@a+3
  7361  15D2  2DDB               	goto	l729
  7362  15D3                     l2701:
  7363  15D3  3000               	movlw	0
  7364  15D4  00D9               	movwf	___fladd@a+3
  7365  15D5  3000               	movlw	0
  7366  15D6  00D8               	movwf	___fladd@a+2
  7367  15D7  3000               	movlw	0
  7368  15D8  00D7               	movwf	___fladd@a+1
  7369  15D9  3000               	movlw	0
  7370  15DA  00D6               	movwf	___fladd@a
  7371  15DB                     l729:
  7372  15DB  0864               	movf	___fladd@bexp,w
  7373  15DC  0263               	subwf	___fladd@aexp,w
  7374  15DD  1803               	skipnc
  7375  15DE  2DE0               	goto	u3651
  7376  15DF  2DE1               	goto	u3650
  7377  15E0                     u3651:
  7378  15E0  2E25               	goto	l2737
  7379  15E1                     u3650:
  7380  15E1                     l2703:
  7381  15E1  1F62               	btfss	___fladd@signs,6
  7382  15E2  2DE4               	goto	u3661
  7383  15E3  2DE5               	goto	u3660
  7384  15E4                     u3661:
  7385  15E4  2DE9               	goto	l2707
  7386  15E5                     u3660:
  7387  15E5                     l2705:
  7388  15E5  3080               	movlw	128
  7389  15E6  00DA               	movwf	??___fladd
  7390  15E7  085A               	movf	??___fladd,w
  7391  15E8  06E2               	xorwf	___fladd@signs,f
  7392  15E9                     l2707:
  7393  15E9  0864               	movf	___fladd@bexp,w
  7394  15EA  00DA               	movwf	??___fladd
  7395  15EB  085A               	movf	??___fladd,w
  7396  15EC  00E5               	movwf	___fladd@grs
  7397  15ED                     l2709:
  7398  15ED  0863               	movf	___fladd@aexp,w
  7399  15EE  00DA               	movwf	??___fladd
  7400  15EF  085A               	movf	??___fladd,w
  7401  15F0  00E4               	movwf	___fladd@bexp
  7402  15F1                     l2711:
  7403  15F1  0865               	movf	___fladd@grs,w
  7404  15F2  00DA               	movwf	??___fladd
  7405  15F3  085A               	movf	??___fladd,w
  7406  15F4  00E3               	movwf	___fladd@aexp
  7407  15F5                     l2713:
  7408  15F5  0852               	movf	___fladd@b,w
  7409  15F6  00DA               	movwf	??___fladd
  7410  15F7  085A               	movf	??___fladd,w
  7411  15F8  00E5               	movwf	___fladd@grs
  7412  15F9                     l2715:
  7413  15F9  0856               	movf	___fladd@a,w
  7414  15FA  00DA               	movwf	??___fladd
  7415  15FB  085A               	movf	??___fladd,w
  7416  15FC  00D2               	movwf	___fladd@b
  7417  15FD                     l2717:
  7418  15FD  0865               	movf	___fladd@grs,w
  7419  15FE  00DA               	movwf	??___fladd
  7420  15FF  085A               	movf	??___fladd,w
  7421  1600  00D6               	movwf	___fladd@a
  7422  1601                     l2719:
  7423  1601  0853               	movf	___fladd@b+1,w
  7424  1602  00DA               	movwf	??___fladd
  7425  1603  085A               	movf	??___fladd,w
  7426  1604  00E5               	movwf	___fladd@grs
  7427  1605                     l2721:
  7428  1605  0857               	movf	___fladd@a+1,w
  7429  1606  00DA               	movwf	??___fladd
  7430  1607  085A               	movf	??___fladd,w
  7431  1608  00D3               	movwf	___fladd@b+1
  7432  1609                     l2723:
  7433  1609  0865               	movf	___fladd@grs,w
  7434  160A  00DA               	movwf	??___fladd
  7435  160B  085A               	movf	??___fladd,w
  7436  160C  00D7               	movwf	___fladd@a+1
  7437  160D                     l2725:
  7438  160D  0854               	movf	___fladd@b+2,w
  7439  160E  00DA               	movwf	??___fladd
  7440  160F  085A               	movf	??___fladd,w
  7441  1610  00E5               	movwf	___fladd@grs
  7442  1611                     l2727:
  7443  1611  0858               	movf	___fladd@a+2,w
  7444  1612  00DA               	movwf	??___fladd
  7445  1613  085A               	movf	??___fladd,w
  7446  1614  00D4               	movwf	___fladd@b+2
  7447  1615                     l2729:
  7448  1615  0865               	movf	___fladd@grs,w
  7449  1616  00DA               	movwf	??___fladd
  7450  1617  085A               	movf	??___fladd,w
  7451  1618  00D8               	movwf	___fladd@a+2
  7452  1619                     l2731:
  7453  1619  0855               	movf	___fladd@b+3,w
  7454  161A  00DA               	movwf	??___fladd
  7455  161B  085A               	movf	??___fladd,w
  7456  161C  00E5               	movwf	___fladd@grs
  7457  161D                     l2733:
  7458  161D  0859               	movf	___fladd@a+3,w
  7459  161E  00DA               	movwf	??___fladd
  7460  161F  085A               	movf	??___fladd,w
  7461  1620  00D5               	movwf	___fladd@b+3
  7462  1621                     l2735:
  7463  1621  0865               	movf	___fladd@grs,w
  7464  1622  00DA               	movwf	??___fladd
  7465  1623  085A               	movf	??___fladd,w
  7466  1624  00D9               	movwf	___fladd@a+3
  7467  1625                     l2737:
  7468  1625  01E5               	clrf	___fladd@grs
  7469  1626                     l2739:
  7470  1626  0863               	movf	___fladd@aexp,w
  7471  1627  00DA               	movwf	??___fladd
  7472  1628  01DB               	clrf	??___fladd+1
  7473  1629  085B               	movf	??___fladd+1,w
  7474  162A  00DD               	movwf	??___fladd+3
  7475  162B  0864               	movf	___fladd@bexp,w
  7476  162C  025A               	subwf	??___fladd,w
  7477  162D  00DC               	movwf	??___fladd+2
  7478  162E  1C03               	skipc
  7479  162F  03DD               	decf	??___fladd+3,f
  7480  1630  085D               	movf	??___fladd+3,w
  7481  1631  3A80               	xorlw	128
  7482  1632  00FF               	movwf	btemp+1
  7483  1633  3080               	movlw	128
  7484  1634  027F               	subwf	btemp+1,w
  7485  1635  1D03               	skipz
  7486  1636  2E39               	goto	u3675
  7487  1637  301A               	movlw	26
  7488  1638  025C               	subwf	??___fladd+2,w
  7489  1639                     u3675:
  7490  1639  1C03               	skipc
  7491  163A  2E3C               	goto	u3671
  7492  163B  2E3D               	goto	u3670
  7493  163C                     u3671:
  7494  163C  2E7A               	goto	l2755
  7495  163D                     u3670:
  7496  163D                     l2741:
  7497  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7498  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7499  163F  0855               	movf	___fladd@b+3,w
  7500  1640  0454               	iorwf	___fladd@b+2,w
  7501  1641  0453               	iorwf	___fladd@b+1,w
  7502  1642  0452               	iorwf	___fladd@b,w
  7503  1643  1D03               	skipz
  7504  1644  2E46               	goto	u3681
  7505  1645  2E48               	goto	u3680
  7506  1646                     u3681:
  7507  1646  3001               	movlw	1
  7508  1647  2E49               	goto	u3690
  7509  1648                     u3680:
  7510  1648  3000               	movlw	0
  7511  1649                     u3690:
  7512  1649  00DA               	movwf	??___fladd
  7513  164A  085A               	movf	??___fladd,w
  7514  164B  00E5               	movwf	___fladd@grs
  7515  164C  3000               	movlw	0
  7516  164D  00D5               	movwf	___fladd@b+3
  7517  164E  3000               	movlw	0
  7518  164F  00D4               	movwf	___fladd@b+2
  7519  1650  3000               	movlw	0
  7520  1651  00D3               	movwf	___fladd@b+1
  7521  1652  3000               	movlw	0
  7522  1653  00D2               	movwf	___fladd@b
  7523  1654  0863               	movf	___fladd@aexp,w
  7524  1655  00DA               	movwf	??___fladd
  7525  1656  085A               	movf	??___fladd,w
  7526  1657  00E4               	movwf	___fladd@bexp
  7527  1658  2E82               	goto	l733
  7528  1659                     l735:
  7529  1659  1C65               	btfss	___fladd@grs,0
  7530  165A  2E5C               	goto	u3701
  7531  165B  2E5D               	goto	u3700
  7532  165C                     u3701:
  7533  165C  2E66               	goto	l2745
  7534  165D                     u3700:
  7535  165D                     l2743:
  7536  165D  0865               	movf	___fladd@grs,w
  7537  165E  00DA               	movwf	??___fladd
  7538  165F  1003               	clrc
  7539  1660  0C5A               	rrf	??___fladd,w
  7540  1661  3801               	iorlw	1
  7541  1662  00DB               	movwf	??___fladd+1
  7542  1663  085B               	movf	??___fladd+1,w
  7543  1664  00E5               	movwf	___fladd@grs
  7544  1665  2E68               	goto	l2747
  7545  1666                     l2745:
  7546  1666  1003               	clrc
  7547  1667  0CE5               	rrf	___fladd@grs,f
  7548  1668                     l2747:
  7549  1668  1C52               	btfss	___fladd@b,0
  7550  1669  2E6B               	goto	u3711
  7551  166A  2E6C               	goto	u3710
  7552  166B                     u3711:
  7553  166B  2E6D               	goto	l2751
  7554  166C                     u3710:
  7555  166C                     l2749:
  7556  166C  17E5               	bsf	___fladd@grs,7
  7557  166D                     l2751:
  7558  166D  3001               	movlw	1
  7559  166E  00DA               	movwf	??___fladd
  7560  166F                     u3725:
  7561  166F  0D55               	rlf	___fladd@b+3,w
  7562  1670  0CD5               	rrf	___fladd@b+3,f
  7563  1671  0CD4               	rrf	___fladd@b+2,f
  7564  1672  0CD3               	rrf	___fladd@b+1,f
  7565  1673  0CD2               	rrf	___fladd@b,f
  7566  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7567  1675  2E6F               	goto	u3725
  7568  1676                     l2753:
  7569  1676  3001               	movlw	1
  7570  1677  00DA               	movwf	??___fladd
  7571  1678  085A               	movf	??___fladd,w
  7572  1679  07E4               	addwf	___fladd@bexp,f
  7573  167A                     l2755:
  7574  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7575  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7576  167C  0863               	movf	___fladd@aexp,w
  7577  167D  0264               	subwf	___fladd@bexp,w
  7578  167E  1C03               	skipc
  7579  167F  2E81               	goto	u3731
  7580  1680  2E82               	goto	u3730
  7581  1681                     u3731:
  7582  1681  2E59               	goto	l735
  7583  1682                     u3730:
  7584  1682                     l733:
  7585  1682  1B62               	btfsc	___fladd@signs,6
  7586  1683  2E85               	goto	u3741
  7587  1684  2E86               	goto	u3740
  7588  1685                     u3741:
  7589  1685  2ED1               	goto	l2781
  7590  1686                     u3740:
  7591  1686                     l2757:
  7592  1686  0864               	movf	___fladd@bexp,w
  7593  1687  1D03               	btfss	3,2
  7594  1688  2E8A               	goto	u3751
  7595  1689  2E8B               	goto	u3750
  7596  168A                     u3751:
  7597  168A  2E94               	goto	l2763
  7598  168B                     u3750:
  7599  168B                     l2759:
  7600  168B  3000               	movlw	0
  7601  168C  00D5               	movwf	?___fladd+3
  7602  168D  3000               	movlw	0
  7603  168E  00D4               	movwf	?___fladd+2
  7604  168F  3000               	movlw	0
  7605  1690  00D3               	movwf	?___fladd+1
  7606  1691  3000               	movlw	0
  7607  1692  00D2               	movwf	?___fladd
  7608  1693  2FFF               	goto	l742
  7609  1694                     l2763:
  7610  1694  0856               	movf	___fladd@a,w
  7611  1695  07D2               	addwf	___fladd@b,f
  7612  1696  0857               	movf	___fladd@a+1,w
  7613  1697  1103               	clrz
  7614  1698  1803               	skipnc
  7615  1699  3E01               	addlw	1
  7616  169A  1903               	skipnz
  7617  169B  2E9D               	goto	u3761
  7618  169C  07D3               	addwf	___fladd@b+1,f
  7619  169D                     u3761:
  7620  169D  0858               	movf	___fladd@a+2,w
  7621  169E  1103               	clrz
  7622  169F  1803               	skipnc
  7623  16A0  3E01               	addlw	1
  7624  16A1  1903               	skipnz
  7625  16A2  2EA4               	goto	u3762
  7626  16A3  07D4               	addwf	___fladd@b+2,f
  7627  16A4                     u3762:
  7628  16A4  0859               	movf	___fladd@a+3,w
  7629  16A5  1103               	clrz
  7630  16A6  1803               	skipnc
  7631  16A7  3E01               	addlw	1
  7632  16A8  1903               	skipnz
  7633  16A9  2EAB               	goto	u3763
  7634  16AA  07D5               	addwf	___fladd@b+3,f
  7635  16AB                     u3763:
  7636  16AB                     l2765:
  7637  16AB  1C55               	btfss	___fladd@b+3,0
  7638  16AC  2EAE               	goto	u3771
  7639  16AD  2EAF               	goto	u3770
  7640  16AE                     u3771:
  7641  16AE  2F85               	goto	l2815
  7642  16AF                     u3770:
  7643  16AF                     l2767:
  7644  16AF  1C65               	btfss	___fladd@grs,0
  7645  16B0  2EB2               	goto	u3781
  7646  16B1  2EB3               	goto	u3780
  7647  16B2                     u3781:
  7648  16B2  2EBC               	goto	l2771
  7649  16B3                     u3780:
  7650  16B3                     l2769:
  7651  16B3  0865               	movf	___fladd@grs,w
  7652  16B4  00DA               	movwf	??___fladd
  7653  16B5  1003               	clrc
  7654  16B6  0C5A               	rrf	??___fladd,w
  7655  16B7  3801               	iorlw	1
  7656  16B8  00DB               	movwf	??___fladd+1
  7657  16B9  085B               	movf	??___fladd+1,w
  7658  16BA  00E5               	movwf	___fladd@grs
  7659  16BB  2EBE               	goto	l2773
  7660  16BC                     l2771:
  7661  16BC  1003               	clrc
  7662  16BD  0CE5               	rrf	___fladd@grs,f
  7663  16BE                     l2773:
  7664  16BE  1C52               	btfss	___fladd@b,0
  7665  16BF  2EC1               	goto	u3791
  7666  16C0  2EC2               	goto	u3790
  7667  16C1                     u3791:
  7668  16C1  2EC3               	goto	l2777
  7669  16C2                     u3790:
  7670  16C2                     l2775:
  7671  16C2  17E5               	bsf	___fladd@grs,7
  7672  16C3                     l2777:
  7673  16C3  3001               	movlw	1
  7674  16C4  00DA               	movwf	??___fladd
  7675  16C5                     u3805:
  7676  16C5  0D55               	rlf	___fladd@b+3,w
  7677  16C6  0CD5               	rrf	___fladd@b+3,f
  7678  16C7  0CD4               	rrf	___fladd@b+2,f
  7679  16C8  0CD3               	rrf	___fladd@b+1,f
  7680  16C9  0CD2               	rrf	___fladd@b,f
  7681  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  7682  16CB  2EC5               	goto	u3805
  7683  16CC                     l2779:
  7684  16CC  3001               	movlw	1
  7685  16CD  00DA               	movwf	??___fladd
  7686  16CE  085A               	movf	??___fladd,w
  7687  16CF  07E4               	addwf	___fladd@bexp,f
  7688  16D0  2F85               	goto	l2815
  7689  16D1                     l2781:
  7690  16D1  0855               	movf	___fladd@b+3,w
  7691  16D2  3A80               	xorlw	128
  7692  16D3  00FF               	movwf	btemp+1
  7693  16D4  0859               	movf	___fladd@a+3,w
  7694  16D5  3A80               	xorlw	128
  7695  16D6  027F               	subwf	btemp+1,w
  7696  16D7  1D03               	skipz
  7697  16D8  2EE3               	goto	u3813
  7698  16D9  0858               	movf	___fladd@a+2,w
  7699  16DA  0254               	subwf	___fladd@b+2,w
  7700  16DB  1D03               	skipz
  7701  16DC  2EE3               	goto	u3813
  7702  16DD  0857               	movf	___fladd@a+1,w
  7703  16DE  0253               	subwf	___fladd@b+1,w
  7704  16DF  1D03               	skipz
  7705  16E0  2EE3               	goto	u3813
  7706  16E1  0856               	movf	___fladd@a,w
  7707  16E2  0252               	subwf	___fladd@b,w
  7708  16E3                     u3813:
  7709  16E3  1803               	skipnc
  7710  16E4  2EE6               	goto	u3811
  7711  16E5  2EE7               	goto	u3810
  7712  16E6                     u3811:
  7713  16E6  2F3F               	goto	l2791
  7714  16E7                     u3810:
  7715  16E7                     l2783:
  7716  16E7  30FF               	movlw	255
  7717  16E8  00DA               	movwf	??___fladd
  7718  16E9  30FF               	movlw	255
  7719  16EA  00DB               	movwf	??___fladd+1
  7720  16EB  30FF               	movlw	255
  7721  16EC  00DC               	movwf	??___fladd+2
  7722  16ED  30FF               	movlw	255
  7723  16EE  00DD               	movwf	??___fladd+3
  7724  16EF  0856               	movf	___fladd@a,w
  7725  16F0  00DE               	movwf	??___fladd+4
  7726  16F1  0857               	movf	___fladd@a+1,w
  7727  16F2  00DF               	movwf	??___fladd+5
  7728  16F3  0858               	movf	___fladd@a+2,w
  7729  16F4  00E0               	movwf	??___fladd+6
  7730  16F5  0859               	movf	___fladd@a+3,w
  7731  16F6  00E1               	movwf	??___fladd+7
  7732  16F7  0852               	movf	___fladd@b,w
  7733  16F8  02DE               	subwf	??___fladd+4,f
  7734  16F9  0853               	movf	___fladd@b+1,w
  7735  16FA  1C03               	skipc
  7736  16FB  0F53               	incfsz	___fladd@b+1,w
  7737  16FC  2EFE               	goto	u3821
  7738  16FD  2EFF               	goto	u3822
  7739  16FE                     u3821:
  7740  16FE  02DF               	subwf	??___fladd+5,f
  7741  16FF                     u3822:
  7742  16FF  0854               	movf	___fladd@b+2,w
  7743  1700  1C03               	skipc
  7744  1701  0F54               	incfsz	___fladd@b+2,w
  7745  1702  2F04               	goto	u3823
  7746  1703  2F05               	goto	u3824
  7747  1704                     u3823:
  7748  1704  02E0               	subwf	??___fladd+6,f
  7749  1705                     u3824:
  7750  1705  0855               	movf	___fladd@b+3,w
  7751  1706  1C03               	skipc
  7752  1707  0F55               	incfsz	___fladd@b+3,w
  7753  1708  2F0A               	goto	u3825
  7754  1709  2F0B               	goto	u3826
  7755  170A                     u3825:
  7756  170A  02E1               	subwf	??___fladd+7,f
  7757  170B                     u3826:
  7758  170B  085E               	movf	??___fladd+4,w
  7759  170C  07DA               	addwf	??___fladd,f
  7760  170D  085F               	movf	??___fladd+5,w
  7761  170E  1803               	skipnc
  7762  170F  0F5F               	incfsz	??___fladd+5,w
  7763  1710  2F12               	goto	u3830
  7764  1711  2F13               	goto	u3831
  7765  1712                     u3830:
  7766  1712  07DB               	addwf	??___fladd+1,f
  7767  1713                     u3831:
  7768  1713  0860               	movf	??___fladd+6,w
  7769  1714  1803               	skipnc
  7770  1715  0F60               	incfsz	??___fladd+6,w
  7771  1716  2F18               	goto	u3832
  7772  1717  2F19               	goto	u3833
  7773  1718                     u3832:
  7774  1718  07DC               	addwf	??___fladd+2,f
  7775  1719                     u3833:
  7776  1719  0861               	movf	??___fladd+7,w
  7777  171A  1803               	skipnc
  7778  171B  0A61               	incf	??___fladd+7,w
  7779  171C  07DD               	addwf	??___fladd+3,f
  7780  171D  085D               	movf	??___fladd+3,w
  7781  171E  00D5               	movwf	___fladd@b+3
  7782  171F  085C               	movf	??___fladd+2,w
  7783  1720  00D4               	movwf	___fladd@b+2
  7784  1721  085B               	movf	??___fladd+1,w
  7785  1722  00D3               	movwf	___fladd@b+1
  7786  1723  085A               	movf	??___fladd,w
  7787  1724  00D2               	movwf	___fladd@b
  7788  1725                     l2785:
  7789  1725  3080               	movlw	128
  7790  1726  00DA               	movwf	??___fladd
  7791  1727  085A               	movf	??___fladd,w
  7792  1728  06E2               	xorwf	___fladd@signs,f
  7793  1729  09E5               	comf	___fladd@grs,f
  7794  172A  0AE5               	incf	___fladd@grs,f
  7795  172B                     l2787:
  7796  172B  0865               	movf	___fladd@grs,w
  7797  172C  1D03               	btfss	3,2
  7798  172D  2F2F               	goto	u3841
  7799  172E  2F30               	goto	u3840
  7800  172F                     u3841:
  7801  172F  2F4D               	goto	l750
  7802  1730                     u3840:
  7803  1730                     l2789:
  7804  1730  3001               	movlw	1
  7805  1731  07D2               	addwf	___fladd@b,f
  7806  1732  3000               	movlw	0
  7807  1733  1803               	skipnc
  7808  1734  3001               	movlw	1
  7809  1735  07D3               	addwf	___fladd@b+1,f
  7810  1736  3000               	movlw	0
  7811  1737  1803               	skipnc
  7812  1738  3001               	movlw	1
  7813  1739  07D4               	addwf	___fladd@b+2,f
  7814  173A  3000               	movlw	0
  7815  173B  1803               	skipnc
  7816  173C  3001               	movlw	1
  7817  173D  07D5               	addwf	___fladd@b+3,f
  7818  173E  2F4D               	goto	l750
  7819  173F                     l2791:
  7820  173F  0856               	movf	___fladd@a,w
  7821  1740  02D2               	subwf	___fladd@b,f
  7822  1741  0857               	movf	___fladd@a+1,w
  7823  1742  1C03               	skipc
  7824  1743  0F57               	incfsz	___fladd@a+1,w
  7825  1744  02D3               	subwf	___fladd@b+1,f
  7826  1745  0858               	movf	___fladd@a+2,w
  7827  1746  1C03               	skipc
  7828  1747  0F58               	incfsz	___fladd@a+2,w
  7829  1748  02D4               	subwf	___fladd@b+2,f
  7830  1749  0859               	movf	___fladd@a+3,w
  7831  174A  1C03               	skipc
  7832  174B  0F59               	incfsz	___fladd@a+3,w
  7833  174C  02D5               	subwf	___fladd@b+3,f
  7834  174D                     l750:
  7835  174D  0855               	movf	___fladd@b+3,w
  7836  174E  0454               	iorwf	___fladd@b+2,w
  7837  174F  0453               	iorwf	___fladd@b+1,w
  7838  1750  0452               	iorwf	___fladd@b,w
  7839  1751  1D03               	skipz
  7840  1752  2F54               	goto	u3851
  7841  1753  2F55               	goto	u3850
  7842  1754                     u3851:
  7843  1754  2F81               	goto	l2813
  7844  1755                     u3850:
  7845  1755                     l2793:
  7846  1755  0865               	movf	___fladd@grs,w
  7847  1756  1D03               	btfss	3,2
  7848  1757  2F59               	goto	u3861
  7849  1758  2F5A               	goto	u3860
  7850  1759                     u3861:
  7851  1759  2F81               	goto	l2813
  7852  175A                     u3860:
  7853  175A                     l2795:
  7854  175A  3000               	movlw	0
  7855  175B  00D5               	movwf	?___fladd+3
  7856  175C  3000               	movlw	0
  7857  175D  00D4               	movwf	?___fladd+2
  7858  175E  3000               	movlw	0
  7859  175F  00D3               	movwf	?___fladd+1
  7860  1760  3000               	movlw	0
  7861  1761  00D2               	movwf	?___fladd
  7862  1762  2FFF               	goto	l742
  7863  1763                     l2799:
  7864  1763  3001               	movlw	1
  7865  1764  00DA               	movwf	??___fladd
  7866  1765                     u3875:
  7867  1765  1003               	clrc
  7868  1766  0DD2               	rlf	___fladd@b,f
  7869  1767  0DD3               	rlf	___fladd@b+1,f
  7870  1768  0DD4               	rlf	___fladd@b+2,f
  7871  1769  0DD5               	rlf	___fladd@b+3,f
  7872  176A  0BDA               	decfsz	??___fladd,f
  7873  176B  2F65               	goto	u3875
  7874  176C                     l2801:
  7875  176C  1FE5               	btfss	___fladd@grs,7
  7876  176D  2F6F               	goto	u3881
  7877  176E  2F70               	goto	u3880
  7878  176F                     u3881:
  7879  176F  2F71               	goto	l754
  7880  1770                     u3880:
  7881  1770                     l2803:
  7882  1770  1452               	bsf	___fladd@b,0
  7883  1771                     l754:
  7884  1771  1C65               	btfss	___fladd@grs,0
  7885  1772  2F74               	goto	u3891
  7886  1773  2F75               	goto	u3890
  7887  1774                     u3891:
  7888  1774  2F78               	goto	l2807
  7889  1775                     u3890:
  7890  1775                     l2805:
  7891  1775  1403               	setc
  7892  1776  0DE5               	rlf	___fladd@grs,f
  7893  1777  2F7A               	goto	l2809
  7894  1778                     l2807:
  7895  1778  1003               	clrc
  7896  1779  0DE5               	rlf	___fladd@grs,f
  7897  177A                     l2809:
  7898  177A  0864               	movf	___fladd@bexp,w
  7899  177B  1903               	btfsc	3,2
  7900  177C  2F7E               	goto	u3901
  7901  177D  2F7F               	goto	u3900
  7902  177E                     u3901:
  7903  177E  2F81               	goto	l2813
  7904  177F                     u3900:
  7905  177F                     l2811:
  7906  177F  3001               	movlw	1
  7907  1780  02E4               	subwf	___fladd@bexp,f
  7908  1781                     l2813:
  7909  1781  1FD4               	btfss	___fladd@b+2,7
  7910  1782  2F84               	goto	u3911
  7911  1783  2F85               	goto	u3910
  7912  1784                     u3911:
  7913  1784  2F63               	goto	l2799
  7914  1785                     u3910:
  7915  1785                     l2815:
  7916  1785  01E3               	clrf	___fladd@aexp
  7917  1786                     l2817:
  7918  1786  1FE5               	btfss	___fladd@grs,7
  7919  1787  2F89               	goto	u3921
  7920  1788  2F8A               	goto	u3920
  7921  1789                     u3921:
  7922  1789  2F98               	goto	l2825
  7923  178A                     u3920:
  7924  178A                     l2819:
  7925  178A  0865               	movf	___fladd@grs,w
  7926  178B  397F               	andlw	127
  7927  178C  1903               	btfsc	3,2
  7928  178D  2F8F               	goto	u3931
  7929  178E  2F90               	goto	u3930
  7930  178F                     u3931:
  7931  178F  2F93               	goto	l760
  7932  1790                     u3930:
  7933  1790                     l2821:
  7934  1790  01E3               	clrf	___fladd@aexp
  7935  1791  0AE3               	incf	___fladd@aexp,f
  7936  1792  2F98               	goto	l2825
  7937  1793                     l760:
  7938  1793  1C52               	btfss	___fladd@b,0
  7939  1794  2F96               	goto	u3941
  7940  1795  2F97               	goto	u3940
  7941  1796                     u3941:
  7942  1796  2F98               	goto	l2825
  7943  1797                     u3940:
  7944  1797  2F90               	goto	l2821
  7945  1798                     l2825:
  7946  1798  0863               	movf	___fladd@aexp,w
  7947  1799  1903               	btfsc	3,2
  7948  179A  2F9C               	goto	u3951
  7949  179B  2F9D               	goto	u3950
  7950  179C                     u3951:
  7951  179C  2FD1               	goto	l763
  7952  179D                     u3950:
  7953  179D                     l2827:
  7954  179D  3001               	movlw	1
  7955  179E  07D2               	addwf	___fladd@b,f
  7956  179F  3000               	movlw	0
  7957  17A0  1803               	skipnc
  7958  17A1  3001               	movlw	1
  7959  17A2  07D3               	addwf	___fladd@b+1,f
  7960  17A3  3000               	movlw	0
  7961  17A4  1803               	skipnc
  7962  17A5  3001               	movlw	1
  7963  17A6  07D4               	addwf	___fladd@b+2,f
  7964  17A7  3000               	movlw	0
  7965  17A8  1803               	skipnc
  7966  17A9  3001               	movlw	1
  7967  17AA  07D5               	addwf	___fladd@b+3,f
  7968  17AB                     l2829:
  7969  17AB  1C55               	btfss	___fladd@b+3,0
  7970  17AC  2FAE               	goto	u3961
  7971  17AD  2FAF               	goto	u3960
  7972  17AE                     u3961:
  7973  17AE  2FD1               	goto	l763
  7974  17AF                     u3960:
  7975  17AF                     l2831:
  7976  17AF  0852               	movf	___fladd@b,w
  7977  17B0  00DA               	movwf	??___fladd
  7978  17B1  0853               	movf	___fladd@b+1,w
  7979  17B2  00DB               	movwf	??___fladd+1
  7980  17B3  0854               	movf	___fladd@b+2,w
  7981  17B4  00DC               	movwf	??___fladd+2
  7982  17B5  0855               	movf	___fladd@b+3,w
  7983  17B6  00DD               	movwf	??___fladd+3
  7984  17B7  3001               	movlw	1
  7985  17B8  00DE               	movwf	??___fladd+4
  7986  17B9                     u3975:
  7987  17B9  0D5D               	rlf	??___fladd+3,w
  7988  17BA  0CDD               	rrf	??___fladd+3,f
  7989  17BB  0CDC               	rrf	??___fladd+2,f
  7990  17BC  0CDB               	rrf	??___fladd+1,f
  7991  17BD  0CDA               	rrf	??___fladd,f
  7992  17BE                     u3970:
  7993  17BE  0BDE               	decfsz	??___fladd+4,f
  7994  17BF  2FB9               	goto	u3975
  7995  17C0  085D               	movf	??___fladd+3,w
  7996  17C1  00D5               	movwf	___fladd@b+3
  7997  17C2  085C               	movf	??___fladd+2,w
  7998  17C3  00D4               	movwf	___fladd@b+2
  7999  17C4  085B               	movf	??___fladd+1,w
  8000  17C5  00D3               	movwf	___fladd@b+1
  8001  17C6  085A               	movf	??___fladd,w
  8002  17C7  00D2               	movwf	___fladd@b
  8003  17C8  0A64               	incf	___fladd@bexp,w
  8004  17C9  1903               	btfsc	3,2
  8005  17CA  2FCC               	goto	u3981
  8006  17CB  2FCD               	goto	u3980
  8007  17CC                     u3981:
  8008  17CC  2FD1               	goto	l763
  8009  17CD                     u3980:
  8010  17CD                     l2833:
  8011  17CD  3001               	movlw	1
  8012  17CE  00DA               	movwf	??___fladd
  8013  17CF  085A               	movf	??___fladd,w
  8014  17D0  07E4               	addwf	___fladd@bexp,f
  8015  17D1                     l763:
  8016  17D1  0A64               	incf	___fladd@bexp,w
  8017  17D2  1903               	btfsc	3,2
  8018  17D3  2FD5               	goto	u3991
  8019  17D4  2FD6               	goto	u3990
  8020  17D5                     u3991:
  8021  17D5  2FDB               	goto	l2837
  8022  17D6                     u3990:
  8023  17D6                     l2835:
  8024  17D6  0864               	movf	___fladd@bexp,w
  8025  17D7  1D03               	btfss	3,2
  8026  17D8  2FDA               	goto	u4001
  8027  17D9  2FDB               	goto	u4000
  8028  17DA                     u4001:
  8029  17DA  2FE9               	goto	l2843
  8030  17DB                     u4000:
  8031  17DB                     l2837:
  8032  17DB  3000               	movlw	0
  8033  17DC  00D5               	movwf	___fladd@b+3
  8034  17DD  3000               	movlw	0
  8035  17DE  00D4               	movwf	___fladd@b+2
  8036  17DF  3000               	movlw	0
  8037  17E0  00D3               	movwf	___fladd@b+1
  8038  17E1  3000               	movlw	0
  8039  17E2  00D2               	movwf	___fladd@b
  8040  17E3                     l2839:
  8041  17E3  0864               	movf	___fladd@bexp,w
  8042  17E4  1D03               	btfss	3,2
  8043  17E5  2FE7               	goto	u4011
  8044  17E6  2FE8               	goto	u4010
  8045  17E7                     u4011:
  8046  17E7  2FE9               	goto	l2843
  8047  17E8                     u4010:
  8048  17E8                     l2841:
  8049  17E8  01E2               	clrf	___fladd@signs
  8050  17E9                     l2843:
  8051  17E9  1C64               	btfss	___fladd@bexp,0
  8052  17EA  2FEC               	goto	u4021
  8053  17EB  2FED               	goto	u4020
  8054  17EC                     u4021:
  8055  17EC  2FEF               	goto	l2847
  8056  17ED                     u4020:
  8057  17ED                     l2845:
  8058  17ED  17D4               	bsf	___fladd@b+2,7
  8059  17EE  2FF3               	goto	l771
  8060  17EF                     l2847:
  8061  17EF  307F               	movlw	127
  8062  17F0  00DA               	movwf	??___fladd
  8063  17F1  085A               	movf	??___fladd,w
  8064  17F2  05D4               	andwf	___fladd@b+2,f
  8065  17F3                     l771:
  8066  17F3  0864               	movf	___fladd@bexp,w
  8067  17F4  00DA               	movwf	??___fladd
  8068  17F5  1003               	clrc
  8069  17F6  0C5A               	rrf	??___fladd,w
  8070  17F7  00DB               	movwf	??___fladd+1
  8071  17F8  085B               	movf	??___fladd+1,w
  8072  17F9  00D5               	movwf	___fladd@b+3
  8073  17FA                     l2849:
  8074  17FA  1FE2               	btfss	___fladd@signs,7
  8075  17FB  2FFD               	goto	u4031
  8076  17FC  2FFE               	goto	u4030
  8077  17FD                     u4031:
  8078  17FD  2FFF               	goto	l772
  8079  17FE                     u4030:
  8080  17FE                     l2851:
  8081  17FE  17D5               	bsf	___fladd@b+3,7
  8082  17FF                     l772:
  8083  17FF                     l742:
  8084  17FF  0008               	return
  8085  1800                     __end_of___fladd:
  8086                           
  8087                           	psect	text17
  8088  19FA                     __ptext17:	
  8089 ;; *************** function ___flneg *****************
  8090 ;; Defined at:
  8091 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  f1              4    0[COMMON] unsigned char 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  4    0[COMMON] unsigned char 
  8098 ;; Registers used:
  8099 ;;		wreg
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8105 ;;      Params:         4       0       0       0       0
  8106 ;;      Locals:         0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0
  8108 ;;      Totals:         4       0       0       0       0
  8109 ;;Total ram usage:        4 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_sprintf
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           
  8119                           ;psect for function ___flneg
  8120  19FA                     ___flneg:
  8121  19FA                     l3261:	
  8122                           ;incstack = 0
  8123                           ; Regs used in ___flneg: [wreg]
  8124                           
  8125  19FA  0873               	movf	___flneg@f1+3,w
  8126  19FB  0472               	iorwf	___flneg@f1+2,w
  8127  19FC  0471               	iorwf	___flneg@f1+1,w
  8128  19FD  0470               	iorwf	___flneg@f1,w
  8129  19FE  1903               	skipnz
  8130  19FF  2A01               	goto	u5171
  8131  1A00  2A02               	goto	u5170
  8132  1A01                     u5171:
  8133  1A01  2A04               	goto	l3265
  8134  1A02                     u5170:
  8135  1A02                     l3263:
  8136  1A02  3080               	movlw	128
  8137  1A03  06F3               	xorwf	___flneg@f1+3,f
  8138  1A04                     l3265:
  8139  1A04                     l601:
  8140  1A04  0008               	return
  8141  1A05                     __end_of___flneg:
  8142                           
  8143                           	psect	text18
  8144  1EA4                     __ptext18:	
  8145 ;; *************** function ___flge *****************
  8146 ;; Defined at:
  8147 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  ff1             4    0[COMMON] unsigned char 
  8150 ;;  ff2             4    4[COMMON] unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;		None
  8153 ;; Return value:  Size  Location     Type
  8154 ;;		None               void
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8162 ;;      Params:         8       0       0       0       0
  8163 ;;      Locals:         0       0       0       0       0
  8164 ;;      Temps:          4       0       0       0       0
  8165 ;;      Totals:        12       0       0       0       0
  8166 ;;Total ram usage:       12 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_sprintf
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           
  8176                           ;psect for function ___flge
  8177  1EA4                     ___flge:
  8178  1EA4                     l3241:	
  8179                           ;incstack = 0
  8180                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8181                           
  8182  1EA4  3000               	movlw	0
  8183  1EA5  0570               	andwf	___flge@ff1,w
  8184  1EA6  00F8               	movwf	??___flge
  8185  1EA7  3000               	movlw	0
  8186  1EA8  0571               	andwf	___flge@ff1+1,w
  8187  1EA9  00F9               	movwf	??___flge+1
  8188  1EAA  3080               	movlw	128
  8189  1EAB  0572               	andwf	___flge@ff1+2,w
  8190  1EAC  00FA               	movwf	??___flge+2
  8191  1EAD  307F               	movlw	127
  8192  1EAE  0573               	andwf	___flge@ff1+3,w
  8193  1EAF  00FB               	movwf	??___flge+3
  8194  1EB0  087B               	movf	??___flge+3,w
  8195  1EB1  047A               	iorwf	??___flge+2,w
  8196  1EB2  0479               	iorwf	??___flge+1,w
  8197  1EB3  0478               	iorwf	??___flge,w
  8198  1EB4  1D03               	skipz
  8199  1EB5  2EB7               	goto	u5101
  8200  1EB6  2EB8               	goto	u5100
  8201  1EB7                     u5101:
  8202  1EB7  2EC0               	goto	l593
  8203  1EB8                     u5100:
  8204  1EB8                     l3243:
  8205  1EB8  3000               	movlw	0
  8206  1EB9  00F3               	movwf	___flge@ff1+3
  8207  1EBA  3000               	movlw	0
  8208  1EBB  00F2               	movwf	___flge@ff1+2
  8209  1EBC  3000               	movlw	0
  8210  1EBD  00F1               	movwf	___flge@ff1+1
  8211  1EBE  3000               	movlw	0
  8212  1EBF  00F0               	movwf	___flge@ff1
  8213  1EC0                     l593:
  8214  1EC0  3000               	movlw	0
  8215  1EC1  0574               	andwf	___flge@ff2,w
  8216  1EC2  00F8               	movwf	??___flge
  8217  1EC3  3000               	movlw	0
  8218  1EC4  0575               	andwf	___flge@ff2+1,w
  8219  1EC5  00F9               	movwf	??___flge+1
  8220  1EC6  3080               	movlw	128
  8221  1EC7  0576               	andwf	___flge@ff2+2,w
  8222  1EC8  00FA               	movwf	??___flge+2
  8223  1EC9  307F               	movlw	127
  8224  1ECA  0577               	andwf	___flge@ff2+3,w
  8225  1ECB  00FB               	movwf	??___flge+3
  8226  1ECC  087B               	movf	??___flge+3,w
  8227  1ECD  047A               	iorwf	??___flge+2,w
  8228  1ECE  0479               	iorwf	??___flge+1,w
  8229  1ECF  0478               	iorwf	??___flge,w
  8230  1ED0  1D03               	skipz
  8231  1ED1  2ED3               	goto	u5111
  8232  1ED2  2ED4               	goto	u5110
  8233  1ED3                     u5111:
  8234  1ED3  2EDC               	goto	l3247
  8235  1ED4                     u5110:
  8236  1ED4                     l3245:
  8237  1ED4  3000               	movlw	0
  8238  1ED5  00F7               	movwf	___flge@ff2+3
  8239  1ED6  3000               	movlw	0
  8240  1ED7  00F6               	movwf	___flge@ff2+2
  8241  1ED8  3000               	movlw	0
  8242  1ED9  00F5               	movwf	___flge@ff2+1
  8243  1EDA  3000               	movlw	0
  8244  1EDB  00F4               	movwf	___flge@ff2
  8245  1EDC                     l3247:
  8246  1EDC  1FF3               	btfss	___flge@ff1+3,7
  8247  1EDD  2EDF               	goto	u5121
  8248  1EDE  2EE0               	goto	u5120
  8249  1EDF                     u5121:
  8250  1EDF  2F04               	goto	l3251
  8251  1EE0                     u5120:
  8252  1EE0                     l3249:
  8253  1EE0  3000               	movlw	0
  8254  1EE1  00F8               	movwf	??___flge
  8255  1EE2  3000               	movlw	0
  8256  1EE3  00F9               	movwf	??___flge+1
  8257  1EE4  3000               	movlw	0
  8258  1EE5  00FA               	movwf	??___flge+2
  8259  1EE6  3080               	movlw	128
  8260  1EE7  00FB               	movwf	??___flge+3
  8261  1EE8  0870               	movf	___flge@ff1,w
  8262  1EE9  02F8               	subwf	??___flge,f
  8263  1EEA  0871               	movf	___flge@ff1+1,w
  8264  1EEB  1C03               	skipc
  8265  1EEC  0F71               	incfsz	___flge@ff1+1,w
  8266  1EED  2EEF               	goto	u5131
  8267  1EEE  2EF0               	goto	u5132
  8268  1EEF                     u5131:
  8269  1EEF  02F9               	subwf	??___flge+1,f
  8270  1EF0                     u5132:
  8271  1EF0  0872               	movf	___flge@ff1+2,w
  8272  1EF1  1C03               	skipc
  8273  1EF2  0F72               	incfsz	___flge@ff1+2,w
  8274  1EF3  2EF5               	goto	u5133
  8275  1EF4  2EF6               	goto	u5134
  8276  1EF5                     u5133:
  8277  1EF5  02FA               	subwf	??___flge+2,f
  8278  1EF6                     u5134:
  8279  1EF6  0873               	movf	___flge@ff1+3,w
  8280  1EF7  1C03               	skipc
  8281  1EF8  0F73               	incfsz	___flge@ff1+3,w
  8282  1EF9  2EFB               	goto	u5135
  8283  1EFA  2EFC               	goto	u5136
  8284  1EFB                     u5135:
  8285  1EFB  02FB               	subwf	??___flge+3,f
  8286  1EFC                     u5136:
  8287  1EFC  087B               	movf	??___flge+3,w
  8288  1EFD  00F3               	movwf	___flge@ff1+3
  8289  1EFE  087A               	movf	??___flge+2,w
  8290  1EFF  00F2               	movwf	___flge@ff1+2
  8291  1F00  0879               	movf	??___flge+1,w
  8292  1F01  00F1               	movwf	___flge@ff1+1
  8293  1F02  0878               	movf	??___flge,w
  8294  1F03  00F0               	movwf	___flge@ff1
  8295  1F04                     l3251:
  8296  1F04  1FF7               	btfss	___flge@ff2+3,7
  8297  1F05  2F07               	goto	u5141
  8298  1F06  2F08               	goto	u5140
  8299  1F07                     u5141:
  8300  1F07  2F2C               	goto	l596
  8301  1F08                     u5140:
  8302  1F08                     l3253:
  8303  1F08  3000               	movlw	0
  8304  1F09  00F8               	movwf	??___flge
  8305  1F0A  3000               	movlw	0
  8306  1F0B  00F9               	movwf	??___flge+1
  8307  1F0C  3000               	movlw	0
  8308  1F0D  00FA               	movwf	??___flge+2
  8309  1F0E  3080               	movlw	128
  8310  1F0F  00FB               	movwf	??___flge+3
  8311  1F10  0874               	movf	___flge@ff2,w
  8312  1F11  02F8               	subwf	??___flge,f
  8313  1F12  0875               	movf	___flge@ff2+1,w
  8314  1F13  1C03               	skipc
  8315  1F14  0F75               	incfsz	___flge@ff2+1,w
  8316  1F15  2F17               	goto	u5151
  8317  1F16  2F18               	goto	u5152
  8318  1F17                     u5151:
  8319  1F17  02F9               	subwf	??___flge+1,f
  8320  1F18                     u5152:
  8321  1F18  0876               	movf	___flge@ff2+2,w
  8322  1F19  1C03               	skipc
  8323  1F1A  0F76               	incfsz	___flge@ff2+2,w
  8324  1F1B  2F1D               	goto	u5153
  8325  1F1C  2F1E               	goto	u5154
  8326  1F1D                     u5153:
  8327  1F1D  02FA               	subwf	??___flge+2,f
  8328  1F1E                     u5154:
  8329  1F1E  0877               	movf	___flge@ff2+3,w
  8330  1F1F  1C03               	skipc
  8331  1F20  0F77               	incfsz	___flge@ff2+3,w
  8332  1F21  2F23               	goto	u5155
  8333  1F22  2F24               	goto	u5156
  8334  1F23                     u5155:
  8335  1F23  02FB               	subwf	??___flge+3,f
  8336  1F24                     u5156:
  8337  1F24  087B               	movf	??___flge+3,w
  8338  1F25  00F7               	movwf	___flge@ff2+3
  8339  1F26  087A               	movf	??___flge+2,w
  8340  1F27  00F6               	movwf	___flge@ff2+2
  8341  1F28  0879               	movf	??___flge+1,w
  8342  1F29  00F5               	movwf	___flge@ff2+1
  8343  1F2A  0878               	movf	??___flge,w
  8344  1F2B  00F4               	movwf	___flge@ff2
  8345  1F2C                     l596:
  8346  1F2C  3080               	movlw	128
  8347  1F2D  06F3               	xorwf	___flge@ff1+3,f
  8348  1F2E  3080               	movlw	128
  8349  1F2F  06F7               	xorwf	___flge@ff2+3,f
  8350  1F30  0877               	movf	___flge@ff2+3,w
  8351  1F31  0273               	subwf	___flge@ff1+3,w
  8352  1F32  1D03               	skipz
  8353  1F33  2F3E               	goto	u5165
  8354  1F34  0876               	movf	___flge@ff2+2,w
  8355  1F35  0272               	subwf	___flge@ff1+2,w
  8356  1F36  1D03               	skipz
  8357  1F37  2F3E               	goto	u5165
  8358  1F38  0875               	movf	___flge@ff2+1,w
  8359  1F39  0271               	subwf	___flge@ff1+1,w
  8360  1F3A  1D03               	skipz
  8361  1F3B  2F3E               	goto	u5165
  8362  1F3C  0874               	movf	___flge@ff2,w
  8363  1F3D  0270               	subwf	___flge@ff1,w
  8364  1F3E                     u5165:
  8365  1F3E  1803               	skipnc
  8366  1F3F  2F41               	goto	u5161
  8367  1F40  2F42               	goto	u5160
  8368  1F41                     u5161:
  8369  1F41  2F44               	goto	l3257
  8370  1F42                     u5160:
  8371  1F42                     l3255:
  8372  1F42  1003               	clrc
  8373  1F43  2F45               	goto	l597
  8374  1F44                     l3257:
  8375  1F44  1403               	setc
  8376  1F45                     l597:
  8377  1F45  0008               	return
  8378  1F46                     __end_of___flge:
  8379                           
  8380                           	psect	text19
  8381  1BBC                     __ptext19:	
  8382 ;; *************** function ___fleq *****************
  8383 ;; Defined at:
  8384 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  ff1             4    0[COMMON] unsigned char 
  8387 ;;  ff2             4    4[COMMON] unsigned char 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;		None               void
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8399 ;;      Params:         8       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0
  8401 ;;      Temps:          4       0       0       0       0
  8402 ;;      Totals:        12       0       0       0       0
  8403 ;;Total ram usage:       12 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_sprintf
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function ___fleq
  8414  1BBC                     ___fleq:
  8415  1BBC                     l3229:	
  8416                           ;incstack = 0
  8417                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8418                           
  8419  1BBC  3000               	movlw	0
  8420  1BBD  0570               	andwf	___fleq@ff1,w
  8421  1BBE  00F8               	movwf	??___fleq
  8422  1BBF  3000               	movlw	0
  8423  1BC0  0571               	andwf	___fleq@ff1+1,w
  8424  1BC1  00F9               	movwf	??___fleq+1
  8425  1BC2  3080               	movlw	128
  8426  1BC3  0572               	andwf	___fleq@ff1+2,w
  8427  1BC4  00FA               	movwf	??___fleq+2
  8428  1BC5  307F               	movlw	127
  8429  1BC6  0573               	andwf	___fleq@ff1+3,w
  8430  1BC7  00FB               	movwf	??___fleq+3
  8431  1BC8  087B               	movf	??___fleq+3,w
  8432  1BC9  047A               	iorwf	??___fleq+2,w
  8433  1BCA  0479               	iorwf	??___fleq+1,w
  8434  1BCB  0478               	iorwf	??___fleq,w
  8435  1BCC  1D03               	skipz
  8436  1BCD  2BCF               	goto	u5071
  8437  1BCE  2BD0               	goto	u5070
  8438  1BCF                     u5071:
  8439  1BCF  2BD8               	goto	l588
  8440  1BD0                     u5070:
  8441  1BD0                     l3231:
  8442  1BD0  3000               	movlw	0
  8443  1BD1  00F3               	movwf	___fleq@ff1+3
  8444  1BD2  3000               	movlw	0
  8445  1BD3  00F2               	movwf	___fleq@ff1+2
  8446  1BD4  3000               	movlw	0
  8447  1BD5  00F1               	movwf	___fleq@ff1+1
  8448  1BD6  3000               	movlw	0
  8449  1BD7  00F0               	movwf	___fleq@ff1
  8450  1BD8                     l588:
  8451  1BD8  3000               	movlw	0
  8452  1BD9  0574               	andwf	___fleq@ff2,w
  8453  1BDA  00F8               	movwf	??___fleq
  8454  1BDB  3000               	movlw	0
  8455  1BDC  0575               	andwf	___fleq@ff2+1,w
  8456  1BDD  00F9               	movwf	??___fleq+1
  8457  1BDE  3080               	movlw	128
  8458  1BDF  0576               	andwf	___fleq@ff2+2,w
  8459  1BE0  00FA               	movwf	??___fleq+2
  8460  1BE1  307F               	movlw	127
  8461  1BE2  0577               	andwf	___fleq@ff2+3,w
  8462  1BE3  00FB               	movwf	??___fleq+3
  8463  1BE4  087B               	movf	??___fleq+3,w
  8464  1BE5  047A               	iorwf	??___fleq+2,w
  8465  1BE6  0479               	iorwf	??___fleq+1,w
  8466  1BE7  0478               	iorwf	??___fleq,w
  8467  1BE8  1D03               	skipz
  8468  1BE9  2BEB               	goto	u5081
  8469  1BEA  2BEC               	goto	u5080
  8470  1BEB                     u5081:
  8471  1BEB  2BF4               	goto	l589
  8472  1BEC                     u5080:
  8473  1BEC                     l3233:
  8474  1BEC  3000               	movlw	0
  8475  1BED  00F7               	movwf	___fleq@ff2+3
  8476  1BEE  3000               	movlw	0
  8477  1BEF  00F6               	movwf	___fleq@ff2+2
  8478  1BF0  3000               	movlw	0
  8479  1BF1  00F5               	movwf	___fleq@ff2+1
  8480  1BF2  3000               	movlw	0
  8481  1BF3  00F4               	movwf	___fleq@ff2
  8482  1BF4                     l589:
  8483  1BF4  0877               	movf	___fleq@ff2+3,w
  8484  1BF5  0673               	xorwf	___fleq@ff1+3,w
  8485  1BF6  1D03               	skipz
  8486  1BF7  2C02               	goto	u5095
  8487  1BF8  0876               	movf	___fleq@ff2+2,w
  8488  1BF9  0672               	xorwf	___fleq@ff1+2,w
  8489  1BFA  1D03               	skipz
  8490  1BFB  2C02               	goto	u5095
  8491  1BFC  0875               	movf	___fleq@ff2+1,w
  8492  1BFD  0671               	xorwf	___fleq@ff1+1,w
  8493  1BFE  1D03               	skipz
  8494  1BFF  2C02               	goto	u5095
  8495  1C00  0874               	movf	___fleq@ff2,w
  8496  1C01  0670               	xorwf	___fleq@ff1,w
  8497  1C02                     u5095:
  8498  1C02  1903               	skipnz
  8499  1C03  2C05               	goto	u5091
  8500  1C04  2C06               	goto	u5090
  8501  1C05                     u5091:
  8502  1C05  2C08               	goto	l3237
  8503  1C06                     u5090:
  8504  1C06                     l3235:
  8505  1C06  1003               	clrc
  8506  1C07  2C09               	goto	l590
  8507  1C08                     l3237:
  8508  1C08  1403               	setc
  8509  1C09                     l590:
  8510  1C09  0008               	return
  8511  1C0A                     __end_of___fleq:
  8512                           
  8513                           	psect	text20
  8514  1C0A                     __ptext20:	
  8515 ;; *************** function _mapear *****************
  8516 ;; Defined at:
  8517 ;;		line 49 in file "lab2.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  adresval        1    wreg     unsigned char 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  adresval        1   64[BANK0 ] unsigned char 
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  4   56[BANK0 ] float 
  8524 ;; Registers used:
  8525 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8531 ;;      Params:         0       4       0       0       0
  8532 ;;      Locals:         0       1       0       0       0
  8533 ;;      Temps:          0       4       0       0       0
  8534 ;;      Totals:         0       9       0       0       0
  8535 ;;Total ram usage:        9 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; Hardware stack levels required when called:    2
  8538 ;; This function calls:
  8539 ;;		___fldiv
  8540 ;;		___flmul
  8541 ;;		___xxtofl
  8542 ;; This function is called by:
  8543 ;;		_main
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           
  8548                           ;psect for function _mapear
  8549  1C0A                     _mapear:
  8550                           
  8551                           ;incstack = 0
  8552                           ; Regs used in _mapear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8553                           ;mapear@adresval stored from wreg
  8554  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
  8555  1C0B  1303               	bcf	3,6	;RP1=0, select bank0
  8556  1C0C  00E0               	movwf	mapear@adresval
  8557  1C0D                     l3547:
  8558                           
  8559                           ;lab2.c: 50:     return (adresval-0)*(5.00-0)/(255-0.0)+0;}
  8560  1C0D  3043               	movlw	67
  8561  1C0E  00C1               	movwf	___fldiv@a+3
  8562  1C0F  307F               	movlw	127
  8563  1C10  00C0               	movwf	___fldiv@a+2
  8564  1C11  3000               	movlw	0
  8565  1C12  00BF               	movwf	___fldiv@a+1
  8566  1C13  3000               	movlw	0
  8567  1C14  00BE               	movwf	___fldiv@a
  8568  1C15  3040               	movlw	64
  8569  1C16  00A7               	movwf	___flmul@b+3
  8570  1C17  30A0               	movlw	160
  8571  1C18  00A6               	movwf	___flmul@b+2
  8572  1C19  3000               	movlw	0
  8573  1C1A  00A5               	movwf	___flmul@b+1
  8574  1C1B  3000               	movlw	0
  8575  1C1C  00A4               	movwf	___flmul@b
  8576  1C1D  0860               	movf	mapear@adresval,w
  8577  1C1E  00DC               	movwf	??_mapear
  8578  1C1F  01DD               	clrf	??_mapear+1
  8579  1C20  01DE               	clrf	??_mapear+2
  8580  1C21  01DF               	clrf	??_mapear+3
  8581  1C22  085F               	movf	??_mapear+3,w
  8582  1C23  00F3               	movwf	___xxtofl@val+3
  8583  1C24  085E               	movf	??_mapear+2,w
  8584  1C25  00F2               	movwf	___xxtofl@val+2
  8585  1C26  085D               	movf	??_mapear+1,w
  8586  1C27  00F1               	movwf	___xxtofl@val+1
  8587  1C28  085C               	movf	??_mapear,w
  8588  1C29  00F0               	movwf	___xxtofl@val
  8589  1C2A  3001               	movlw	1
  8590  1C2B  160A  158A  2746  160A  158A  	fcall	___xxtofl
  8591  1C30  0873               	movf	?___xxtofl+3,w
  8592  1C31  1283               	bcf	3,5	;RP0=0, select bank0
  8593  1C32  1303               	bcf	3,6	;RP1=0, select bank0
  8594  1C33  00AB               	movwf	___flmul@a+3
  8595  1C34  0872               	movf	?___xxtofl+2,w
  8596  1C35  00AA               	movwf	___flmul@a+2
  8597  1C36  0871               	movf	?___xxtofl+1,w
  8598  1C37  00A9               	movwf	___flmul@a+1
  8599  1C38  0870               	movf	?___xxtofl,w
  8600  1C39  00A8               	movwf	___flmul@a
  8601  1C3A  120A  158A  249F  160A  158A  	fcall	___flmul
  8602  1C3F  1283               	bcf	3,5	;RP0=0, select bank0
  8603  1C40  1303               	bcf	3,6	;RP1=0, select bank0
  8604  1C41  0827               	movf	?___flmul+3,w
  8605  1C42  00C5               	movwf	___fldiv@b+3
  8606  1C43  0826               	movf	?___flmul+2,w
  8607  1C44  00C4               	movwf	___fldiv@b+2
  8608  1C45  0825               	movf	?___flmul+1,w
  8609  1C46  00C3               	movwf	___fldiv@b+1
  8610  1C47  0824               	movf	?___flmul,w
  8611  1C48  00C2               	movwf	___fldiv@b
  8612  1C49  160A  118A  2190  160A  158A  	fcall	___fldiv
  8613  1C4E  1283               	bcf	3,5	;RP0=0, select bank0
  8614  1C4F  1303               	bcf	3,6	;RP1=0, select bank0
  8615  1C50  0841               	movf	?___fldiv+3,w
  8616  1C51  00DB               	movwf	?_mapear+3
  8617  1C52  0840               	movf	?___fldiv+2,w
  8618  1C53  00DA               	movwf	?_mapear+2
  8619  1C54  083F               	movf	?___fldiv+1,w
  8620  1C55  00D9               	movwf	?_mapear+1
  8621  1C56  083E               	movf	?___fldiv,w
  8622  1C57  00D8               	movwf	?_mapear
  8623  1C58                     l144:
  8624  1C58  0008               	return
  8625  1C59                     __end_of_mapear:
  8626                           
  8627                           	psect	text21
  8628  1F46                     __ptext21:	
  8629 ;; *************** function ___xxtofl *****************
  8630 ;; Defined at:
  8631 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  sign            1    wreg     unsigned char 
  8634 ;;  val             4    0[COMMON] long 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  sign            1    8[COMMON] unsigned char 
  8637 ;;  arg             4   10[COMMON] unsigned long 
  8638 ;;  exp             1    9[COMMON] unsigned char 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  4    0[COMMON] unsigned char 
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8648 ;;      Params:         4       0       0       0       0
  8649 ;;      Locals:         6       0       0       0       0
  8650 ;;      Temps:          4       0       0       0       0
  8651 ;;      Totals:        14       0       0       0       0
  8652 ;;Total ram usage:       14 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_mapear
  8658 ;;		_sprintf
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           
  8663                           ;psect for function ___xxtofl
  8664  1F46                     ___xxtofl:
  8665                           
  8666                           ;incstack = 0
  8667                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8668                           ;___xxtofl@sign stored from wreg
  8669  1F46  00F8               	movwf	___xxtofl@sign
  8670  1F47                     l3473:
  8671  1F47  0878               	movf	___xxtofl@sign,w
  8672  1F48  1903               	btfsc	3,2
  8673  1F49  2F4B               	goto	u5631
  8674  1F4A  2F4C               	goto	u5630
  8675  1F4B                     u5631:
  8676  1F4B  2F60               	goto	l3479
  8677  1F4C                     u5630:
  8678  1F4C                     l3475:
  8679  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  8680  1F4D  2F4F               	goto	u5641
  8681  1F4E  2F50               	goto	u5640
  8682  1F4F                     u5641:
  8683  1F4F  2F60               	goto	l3479
  8684  1F50                     u5640:
  8685  1F50                     l3477:
  8686  1F50  0970               	comf	___xxtofl@val,w
  8687  1F51  00FA               	movwf	___xxtofl@arg
  8688  1F52  0971               	comf	___xxtofl@val+1,w
  8689  1F53  00FB               	movwf	___xxtofl@arg+1
  8690  1F54  0972               	comf	___xxtofl@val+2,w
  8691  1F55  00FC               	movwf	___xxtofl@arg+2
  8692  1F56  0973               	comf	___xxtofl@val+3,w
  8693  1F57  00FD               	movwf	___xxtofl@arg+3
  8694  1F58  0AFA               	incf	___xxtofl@arg,f
  8695  1F59  1903               	skipnz
  8696  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  8697  1F5B  1903               	skipnz
  8698  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  8699  1F5D  1903               	skipnz
  8700  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  8701  1F5F  2F68               	goto	l869
  8702  1F60                     l3479:
  8703  1F60  0873               	movf	___xxtofl@val+3,w
  8704  1F61  00FD               	movwf	___xxtofl@arg+3
  8705  1F62  0872               	movf	___xxtofl@val+2,w
  8706  1F63  00FC               	movwf	___xxtofl@arg+2
  8707  1F64  0871               	movf	___xxtofl@val+1,w
  8708  1F65  00FB               	movwf	___xxtofl@arg+1
  8709  1F66  0870               	movf	___xxtofl@val,w
  8710  1F67  00FA               	movwf	___xxtofl@arg
  8711  1F68                     l869:
  8712  1F68  0873               	movf	___xxtofl@val+3,w
  8713  1F69  0472               	iorwf	___xxtofl@val+2,w
  8714  1F6A  0471               	iorwf	___xxtofl@val+1,w
  8715  1F6B  0470               	iorwf	___xxtofl@val,w
  8716  1F6C  1D03               	skipz
  8717  1F6D  2F6F               	goto	u5651
  8718  1F6E  2F70               	goto	u5650
  8719  1F6F                     u5651:
  8720  1F6F  2F79               	goto	l3485
  8721  1F70                     u5650:
  8722  1F70                     l3481:
  8723  1F70  3000               	movlw	0
  8724  1F71  00F3               	movwf	?___xxtofl+3
  8725  1F72  3000               	movlw	0
  8726  1F73  00F2               	movwf	?___xxtofl+2
  8727  1F74  3000               	movlw	0
  8728  1F75  00F1               	movwf	?___xxtofl+1
  8729  1F76  3000               	movlw	0
  8730  1F77  00F0               	movwf	?___xxtofl
  8731  1F78  2FFF               	goto	l871
  8732  1F79                     l3485:
  8733  1F79  3096               	movlw	150
  8734  1F7A  00F4               	movwf	??___xxtofl
  8735  1F7B  0874               	movf	??___xxtofl,w
  8736  1F7C  00F9               	movwf	___xxtofl@exp
  8737  1F7D  2F8B               	goto	l3489
  8738  1F7E                     l3487:
  8739  1F7E  3001               	movlw	1
  8740  1F7F  00F4               	movwf	??___xxtofl
  8741  1F80  0874               	movf	??___xxtofl,w
  8742  1F81  07F9               	addwf	___xxtofl@exp,f
  8743  1F82  3001               	movlw	1
  8744  1F83                     u5665:
  8745  1F83  1003               	clrc
  8746  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  8747  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  8748  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  8749  1F87  0CFA               	rrf	___xxtofl@arg,f
  8750  1F88  3EFF               	addlw	-1
  8751  1F89  1D03               	skipz
  8752  1F8A  2F83               	goto	u5665
  8753  1F8B                     l3489:
  8754  1F8B  30FE               	movlw	254
  8755  1F8C  057D               	andwf	___xxtofl@arg+3,w
  8756  1F8D  1D03               	btfss	3,2
  8757  1F8E  2F90               	goto	u5671
  8758  1F8F  2F91               	goto	u5670
  8759  1F90                     u5671:
  8760  1F90  2F7E               	goto	l3487
  8761  1F91                     u5670:
  8762  1F91  2FAD               	goto	l875
  8763  1F92                     l3491:
  8764  1F92  3001               	movlw	1
  8765  1F93  00F4               	movwf	??___xxtofl
  8766  1F94  0874               	movf	??___xxtofl,w
  8767  1F95  07F9               	addwf	___xxtofl@exp,f
  8768  1F96                     l3493:
  8769  1F96  3001               	movlw	1
  8770  1F97  07FA               	addwf	___xxtofl@arg,f
  8771  1F98  3000               	movlw	0
  8772  1F99  1803               	skipnc
  8773  1F9A  3001               	movlw	1
  8774  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  8775  1F9C  3000               	movlw	0
  8776  1F9D  1803               	skipnc
  8777  1F9E  3001               	movlw	1
  8778  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  8779  1FA0  3000               	movlw	0
  8780  1FA1  1803               	skipnc
  8781  1FA2  3001               	movlw	1
  8782  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  8783  1FA4                     l3495:
  8784  1FA4  3001               	movlw	1
  8785  1FA5                     u5685:
  8786  1FA5  1003               	clrc
  8787  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  8788  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  8789  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  8790  1FA9  0CFA               	rrf	___xxtofl@arg,f
  8791  1FAA  3EFF               	addlw	-1
  8792  1FAB  1D03               	skipz
  8793  1FAC  2FA5               	goto	u5685
  8794  1FAD                     l875:
  8795  1FAD  30FF               	movlw	255
  8796  1FAE  057D               	andwf	___xxtofl@arg+3,w
  8797  1FAF  1D03               	btfss	3,2
  8798  1FB0  2FB2               	goto	u5691
  8799  1FB1  2FB3               	goto	u5690
  8800  1FB2                     u5691:
  8801  1FB2  2F92               	goto	l3491
  8802  1FB3                     u5690:
  8803  1FB3  2FBF               	goto	l3499
  8804  1FB4                     l3497:
  8805  1FB4  3001               	movlw	1
  8806  1FB5  02F9               	subwf	___xxtofl@exp,f
  8807  1FB6  3001               	movlw	1
  8808  1FB7  00F4               	movwf	??___xxtofl
  8809  1FB8                     u5705:
  8810  1FB8  1003               	clrc
  8811  1FB9  0DFA               	rlf	___xxtofl@arg,f
  8812  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  8813  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  8814  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  8815  1FBD  0BF4               	decfsz	??___xxtofl,f
  8816  1FBE  2FB8               	goto	u5705
  8817  1FBF                     l3499:
  8818  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  8819  1FC0  2FC2               	goto	u5711
  8820  1FC1  2FC3               	goto	u5710
  8821  1FC2                     u5711:
  8822  1FC2  2FC9               	goto	l882
  8823  1FC3                     u5710:
  8824  1FC3                     l3501:
  8825  1FC3  3002               	movlw	2
  8826  1FC4  0279               	subwf	___xxtofl@exp,w
  8827  1FC5  1803               	skipnc
  8828  1FC6  2FC8               	goto	u5721
  8829  1FC7  2FC9               	goto	u5720
  8830  1FC8                     u5721:
  8831  1FC8  2FB4               	goto	l3497
  8832  1FC9                     u5720:
  8833  1FC9                     l882:
  8834  1FC9  1879               	btfsc	___xxtofl@exp,0
  8835  1FCA  2FCC               	goto	u5731
  8836  1FCB  2FCD               	goto	u5730
  8837  1FCC                     u5731:
  8838  1FCC  2FD5               	goto	l883
  8839  1FCD                     u5730:
  8840  1FCD                     l3503:
  8841  1FCD  30FF               	movlw	255
  8842  1FCE  05FA               	andwf	___xxtofl@arg,f
  8843  1FCF  30FF               	movlw	255
  8844  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  8845  1FD1  307F               	movlw	127
  8846  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  8847  1FD3  30FF               	movlw	255
  8848  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  8849  1FD5                     l883:
  8850  1FD5  1003               	clrc
  8851  1FD6  0CF9               	rrf	___xxtofl@exp,f
  8852  1FD7                     l3505:
  8853  1FD7  0879               	movf	___xxtofl@exp,w
  8854  1FD8  00F4               	movwf	??___xxtofl
  8855  1FD9  01F5               	clrf	??___xxtofl+1
  8856  1FDA  01F6               	clrf	??___xxtofl+2
  8857  1FDB  01F7               	clrf	??___xxtofl+3
  8858  1FDC  3018               	movlw	24
  8859  1FDD                     u5745:
  8860  1FDD  1003               	clrc
  8861  1FDE  0DF4               	rlf	??___xxtofl,f
  8862  1FDF  0DF5               	rlf	??___xxtofl+1,f
  8863  1FE0  0DF6               	rlf	??___xxtofl+2,f
  8864  1FE1  0DF7               	rlf	??___xxtofl+3,f
  8865  1FE2                     u5740:
  8866  1FE2  3EFF               	addlw	-1
  8867  1FE3  1D03               	skipz
  8868  1FE4  2FDD               	goto	u5745
  8869  1FE5  0874               	movf	??___xxtofl,w
  8870  1FE6  04FA               	iorwf	___xxtofl@arg,f
  8871  1FE7  0875               	movf	??___xxtofl+1,w
  8872  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  8873  1FE9  0876               	movf	??___xxtofl+2,w
  8874  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  8875  1FEB  0877               	movf	??___xxtofl+3,w
  8876  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  8877  1FED                     l3507:
  8878  1FED  0878               	movf	___xxtofl@sign,w
  8879  1FEE  1903               	btfsc	3,2
  8880  1FEF  2FF1               	goto	u5751
  8881  1FF0  2FF2               	goto	u5750
  8882  1FF1                     u5751:
  8883  1FF1  2FF7               	goto	l3513
  8884  1FF2                     u5750:
  8885  1FF2                     l3509:
  8886  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  8887  1FF3  2FF5               	goto	u5761
  8888  1FF4  2FF6               	goto	u5760
  8889  1FF5                     u5761:
  8890  1FF5  2FF7               	goto	l3513
  8891  1FF6                     u5760:
  8892  1FF6                     l3511:
  8893  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  8894  1FF7                     l3513:
  8895  1FF7  087D               	movf	___xxtofl@arg+3,w
  8896  1FF8  00F3               	movwf	?___xxtofl+3
  8897  1FF9  087C               	movf	___xxtofl@arg+2,w
  8898  1FFA  00F2               	movwf	?___xxtofl+2
  8899  1FFB  087B               	movf	___xxtofl@arg+1,w
  8900  1FFC  00F1               	movwf	?___xxtofl+1
  8901  1FFD  087A               	movf	___xxtofl@arg,w
  8902  1FFE  00F0               	movwf	?___xxtofl
  8903  1FFF                     l871:
  8904  1FFF  0008               	return
  8905  2000                     __end_of___xxtofl:
  8906                           
  8907                           	psect	text22
  8908  0C9F                     __ptext22:	
  8909 ;; *************** function ___flmul *****************
  8910 ;; Defined at:
  8911 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  b               4    4[BANK0 ] unsigned char 
  8914 ;;  a               4    8[BANK0 ] unsigned char 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  prod            4   24[BANK0 ] struct .
  8917 ;;  grs             4   18[BANK0 ] unsigned long 
  8918 ;;  temp            2   28[BANK0 ] struct .
  8919 ;;  bexp            1   23[BANK0 ] unsigned char 
  8920 ;;  aexp            1   22[BANK0 ] unsigned char 
  8921 ;;  sign            1   17[BANK0 ] unsigned char 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  4    4[BANK0 ] unsigned char 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8931 ;;      Params:         0       8       0       0       0
  8932 ;;      Locals:         0      13       0       0       0
  8933 ;;      Temps:          0       5       0       0       0
  8934 ;;      Totals:         0      26       0       0       0
  8935 ;;Total ram usage:       26 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    1
  8938 ;; This function calls:
  8939 ;;		__Umul8_16
  8940 ;; This function is called by:
  8941 ;;		_mapear
  8942 ;;		_fround
  8943 ;;		_scale
  8944 ;;		_sprintf
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           
  8949                           ;psect for function ___flmul
  8950  0C9F                     ___flmul:
  8951  0C9F                     l2853:	
  8952                           ;incstack = 0
  8953                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8954                           
  8955  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8956  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8957  0CA1  0827               	movf	___flmul@b+3,w
  8958  0CA2  3980               	andlw	128
  8959  0CA3  00AC               	movwf	??___flmul
  8960  0CA4  082C               	movf	??___flmul,w
  8961  0CA5  00B1               	movwf	___flmul@sign
  8962  0CA6                     l2855:
  8963  0CA6  0827               	movf	___flmul@b+3,w
  8964  0CA7  00AC               	movwf	??___flmul
  8965  0CA8  072C               	addwf	??___flmul,w
  8966  0CA9  00AD               	movwf	??___flmul+1
  8967  0CAA  082D               	movf	??___flmul+1,w
  8968  0CAB  00B7               	movwf	___flmul@bexp
  8969  0CAC                     l2857:
  8970  0CAC  1FA6               	btfss	___flmul@b+2,7
  8971  0CAD  2CAF               	goto	u4041
  8972  0CAE  2CB0               	goto	u4040
  8973  0CAF                     u4041:
  8974  0CAF  2CB1               	goto	l2861
  8975  0CB0                     u4040:
  8976  0CB0                     l2859:
  8977  0CB0  1437               	bsf	___flmul@bexp,0
  8978  0CB1                     l2861:
  8979  0CB1  0837               	movf	___flmul@bexp,w
  8980  0CB2  1903               	btfsc	3,2
  8981  0CB3  2CB5               	goto	u4051
  8982  0CB4  2CB6               	goto	u4050
  8983  0CB5                     u4051:
  8984  0CB5  2CC5               	goto	l2869
  8985  0CB6                     u4050:
  8986  0CB6                     l2863:
  8987  0CB6  0A37               	incf	___flmul@bexp,w
  8988  0CB7  1D03               	btfss	3,2
  8989  0CB8  2CBA               	goto	u4061
  8990  0CB9  2CBB               	goto	u4060
  8991  0CBA                     u4061:
  8992  0CBA  2CC3               	goto	l2867
  8993  0CBB                     u4060:
  8994  0CBB                     l2865:
  8995  0CBB  3000               	movlw	0
  8996  0CBC  00A7               	movwf	___flmul@b+3
  8997  0CBD  3000               	movlw	0
  8998  0CBE  00A6               	movwf	___flmul@b+2
  8999  0CBF  3000               	movlw	0
  9000  0CC0  00A5               	movwf	___flmul@b+1
  9001  0CC1  3000               	movlw	0
  9002  0CC2  00A4               	movwf	___flmul@b
  9003  0CC3                     l2867:
  9004  0CC3  17A6               	bsf	___flmul@b+2,7
  9005  0CC4  2CCD               	goto	l2871
  9006  0CC5                     l2869:
  9007  0CC5  3000               	movlw	0
  9008  0CC6  00A7               	movwf	___flmul@b+3
  9009  0CC7  3000               	movlw	0
  9010  0CC8  00A6               	movwf	___flmul@b+2
  9011  0CC9  3000               	movlw	0
  9012  0CCA  00A5               	movwf	___flmul@b+1
  9013  0CCB  3000               	movlw	0
  9014  0CCC  00A4               	movwf	___flmul@b
  9015  0CCD                     l2871:
  9016  0CCD  082B               	movf	___flmul@a+3,w
  9017  0CCE  3980               	andlw	128
  9018  0CCF  00AC               	movwf	??___flmul
  9019  0CD0  082C               	movf	??___flmul,w
  9020  0CD1  06B1               	xorwf	___flmul@sign,f
  9021  0CD2                     l2873:
  9022  0CD2  082B               	movf	___flmul@a+3,w
  9023  0CD3  00AC               	movwf	??___flmul
  9024  0CD4  072C               	addwf	??___flmul,w
  9025  0CD5  00AD               	movwf	??___flmul+1
  9026  0CD6  082D               	movf	??___flmul+1,w
  9027  0CD7  00B6               	movwf	___flmul@aexp
  9028  0CD8                     l2875:
  9029  0CD8  1FAA               	btfss	___flmul@a+2,7
  9030  0CD9  2CDB               	goto	u4071
  9031  0CDA  2CDC               	goto	u4070
  9032  0CDB                     u4071:
  9033  0CDB  2CDD               	goto	l2879
  9034  0CDC                     u4070:
  9035  0CDC                     l2877:
  9036  0CDC  1436               	bsf	___flmul@aexp,0
  9037  0CDD                     l2879:
  9038  0CDD  0836               	movf	___flmul@aexp,w
  9039  0CDE  1903               	btfsc	3,2
  9040  0CDF  2CE1               	goto	u4081
  9041  0CE0  2CE2               	goto	u4080
  9042  0CE1                     u4081:
  9043  0CE1  2CF1               	goto	l2887
  9044  0CE2                     u4080:
  9045  0CE2                     l2881:
  9046  0CE2  0A36               	incf	___flmul@aexp,w
  9047  0CE3  1D03               	btfss	3,2
  9048  0CE4  2CE6               	goto	u4091
  9049  0CE5  2CE7               	goto	u4090
  9050  0CE6                     u4091:
  9051  0CE6  2CEF               	goto	l2885
  9052  0CE7                     u4090:
  9053  0CE7                     l2883:
  9054  0CE7  3000               	movlw	0
  9055  0CE8  00AB               	movwf	___flmul@a+3
  9056  0CE9  3000               	movlw	0
  9057  0CEA  00AA               	movwf	___flmul@a+2
  9058  0CEB  3000               	movlw	0
  9059  0CEC  00A9               	movwf	___flmul@a+1
  9060  0CED  3000               	movlw	0
  9061  0CEE  00A8               	movwf	___flmul@a
  9062  0CEF                     l2885:
  9063  0CEF  17AA               	bsf	___flmul@a+2,7
  9064  0CF0  2CF9               	goto	l2889
  9065  0CF1                     l2887:
  9066  0CF1  3000               	movlw	0
  9067  0CF2  00AB               	movwf	___flmul@a+3
  9068  0CF3  3000               	movlw	0
  9069  0CF4  00AA               	movwf	___flmul@a+2
  9070  0CF5  3000               	movlw	0
  9071  0CF6  00A9               	movwf	___flmul@a+1
  9072  0CF7  3000               	movlw	0
  9073  0CF8  00A8               	movwf	___flmul@a
  9074  0CF9                     l2889:
  9075  0CF9  0836               	movf	___flmul@aexp,w
  9076  0CFA  1903               	btfsc	3,2
  9077  0CFB  2CFD               	goto	u4101
  9078  0CFC  2CFE               	goto	u4100
  9079  0CFD                     u4101:
  9080  0CFD  2D03               	goto	l2893
  9081  0CFE                     u4100:
  9082  0CFE                     l2891:
  9083  0CFE  0837               	movf	___flmul@bexp,w
  9084  0CFF  1D03               	btfss	3,2
  9085  0D00  2D02               	goto	u4111
  9086  0D01  2D03               	goto	u4110
  9087  0D02                     u4111:
  9088  0D02  2D0C               	goto	l2897
  9089  0D03                     u4110:
  9090  0D03                     l2893:
  9091  0D03  3000               	movlw	0
  9092  0D04  00A7               	movwf	?___flmul+3
  9093  0D05  3000               	movlw	0
  9094  0D06  00A6               	movwf	?___flmul+2
  9095  0D07  3000               	movlw	0
  9096  0D08  00A5               	movwf	?___flmul+1
  9097  0D09  3000               	movlw	0
  9098  0D0A  00A4               	movwf	?___flmul
  9099  0D0B  2FFF               	goto	l825
  9100  0D0C                     l2897:
  9101  0D0C  0824               	movf	___flmul@b,w
  9102  0D0D  00AC               	movwf	??___flmul
  9103  0D0E  082C               	movf	??___flmul,w
  9104  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  9105  0D10  082A               	movf	___flmul@a+2,w
  9106  0D11  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9107  0D16  0871               	movf	?__Umul8_16+1,w
  9108  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9109  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  9110  0D19  00BD               	movwf	___flmul@temp+1
  9111  0D1A  0870               	movf	?__Umul8_16,w
  9112  0D1B  00BC               	movwf	___flmul@temp
  9113  0D1C                     l2899:
  9114  0D1C  083C               	movf	___flmul@temp,w
  9115  0D1D  00AC               	movwf	??___flmul
  9116  0D1E  01AD               	clrf	??___flmul+1
  9117  0D1F  01AE               	clrf	??___flmul+2
  9118  0D20  01AF               	clrf	??___flmul+3
  9119  0D21  082F               	movf	??___flmul+3,w
  9120  0D22  00B5               	movwf	___flmul@grs+3
  9121  0D23  082E               	movf	??___flmul+2,w
  9122  0D24  00B4               	movwf	___flmul@grs+2
  9123  0D25  082D               	movf	??___flmul+1,w
  9124  0D26  00B3               	movwf	___flmul@grs+1
  9125  0D27  082C               	movf	??___flmul,w
  9126  0D28  00B2               	movwf	___flmul@grs
  9127  0D29                     l2901:
  9128  0D29  083D               	movf	___flmul@temp+1,w
  9129  0D2A  00AC               	movwf	??___flmul
  9130  0D2B  01AD               	clrf	??___flmul+1
  9131  0D2C  01AE               	clrf	??___flmul+2
  9132  0D2D  01AF               	clrf	??___flmul+3
  9133  0D2E  082F               	movf	??___flmul+3,w
  9134  0D2F  00BB               	movwf	___flmul@prod+3
  9135  0D30  082E               	movf	??___flmul+2,w
  9136  0D31  00BA               	movwf	___flmul@prod+2
  9137  0D32  082D               	movf	??___flmul+1,w
  9138  0D33  00B9               	movwf	___flmul@prod+1
  9139  0D34  082C               	movf	??___flmul,w
  9140  0D35  00B8               	movwf	___flmul@prod
  9141  0D36  0825               	movf	___flmul@b+1,w
  9142  0D37  00AC               	movwf	??___flmul
  9143  0D38  082C               	movf	??___flmul,w
  9144  0D39  00F0               	movwf	__Umul8_16@multiplicand
  9145  0D3A  0829               	movf	___flmul@a+1,w
  9146  0D3B  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9147  0D40  0871               	movf	?__Umul8_16+1,w
  9148  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  9149  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  9150  0D43  00BD               	movwf	___flmul@temp+1
  9151  0D44  0870               	movf	?__Umul8_16,w
  9152  0D45  00BC               	movwf	___flmul@temp
  9153  0D46                     l2903:
  9154  0D46  083C               	movf	___flmul@temp,w
  9155  0D47  00AC               	movwf	??___flmul
  9156  0D48  01AD               	clrf	??___flmul+1
  9157  0D49  01AE               	clrf	??___flmul+2
  9158  0D4A  01AF               	clrf	??___flmul+3
  9159  0D4B  082C               	movf	??___flmul,w
  9160  0D4C  07B2               	addwf	___flmul@grs,f
  9161  0D4D  082D               	movf	??___flmul+1,w
  9162  0D4E  1103               	clrz
  9163  0D4F  1803               	skipnc
  9164  0D50  3E01               	addlw	1
  9165  0D51  1903               	skipnz
  9166  0D52  2D54               	goto	u4121
  9167  0D53  07B3               	addwf	___flmul@grs+1,f
  9168  0D54                     u4121:
  9169  0D54  082E               	movf	??___flmul+2,w
  9170  0D55  1103               	clrz
  9171  0D56  1803               	skipnc
  9172  0D57  3E01               	addlw	1
  9173  0D58  1903               	skipnz
  9174  0D59  2D5B               	goto	u4122
  9175  0D5A  07B4               	addwf	___flmul@grs+2,f
  9176  0D5B                     u4122:
  9177  0D5B  082F               	movf	??___flmul+3,w
  9178  0D5C  1103               	clrz
  9179  0D5D  1803               	skipnc
  9180  0D5E  3E01               	addlw	1
  9181  0D5F  1903               	skipnz
  9182  0D60  2D62               	goto	u4123
  9183  0D61  07B5               	addwf	___flmul@grs+3,f
  9184  0D62                     u4123:
  9185  0D62                     l2905:
  9186  0D62  083D               	movf	___flmul@temp+1,w
  9187  0D63  00AC               	movwf	??___flmul
  9188  0D64  01AD               	clrf	??___flmul+1
  9189  0D65  01AE               	clrf	??___flmul+2
  9190  0D66  01AF               	clrf	??___flmul+3
  9191  0D67  082C               	movf	??___flmul,w
  9192  0D68  07B8               	addwf	___flmul@prod,f
  9193  0D69  082D               	movf	??___flmul+1,w
  9194  0D6A  1103               	clrz
  9195  0D6B  1803               	skipnc
  9196  0D6C  3E01               	addlw	1
  9197  0D6D  1903               	skipnz
  9198  0D6E  2D70               	goto	u4131
  9199  0D6F  07B9               	addwf	___flmul@prod+1,f
  9200  0D70                     u4131:
  9201  0D70  082E               	movf	??___flmul+2,w
  9202  0D71  1103               	clrz
  9203  0D72  1803               	skipnc
  9204  0D73  3E01               	addlw	1
  9205  0D74  1903               	skipnz
  9206  0D75  2D77               	goto	u4132
  9207  0D76  07BA               	addwf	___flmul@prod+2,f
  9208  0D77                     u4132:
  9209  0D77  082F               	movf	??___flmul+3,w
  9210  0D78  1103               	clrz
  9211  0D79  1803               	skipnc
  9212  0D7A  3E01               	addlw	1
  9213  0D7B  1903               	skipnz
  9214  0D7C  2D7E               	goto	u4133
  9215  0D7D  07BB               	addwf	___flmul@prod+3,f
  9216  0D7E                     u4133:
  9217  0D7E  0826               	movf	___flmul@b+2,w
  9218  0D7F  00AC               	movwf	??___flmul
  9219  0D80  082C               	movf	??___flmul,w
  9220  0D81  00F0               	movwf	__Umul8_16@multiplicand
  9221  0D82  0828               	movf	___flmul@a,w
  9222  0D83  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9223  0D88  0871               	movf	?__Umul8_16+1,w
  9224  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  9225  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  9226  0D8B  00BD               	movwf	___flmul@temp+1
  9227  0D8C  0870               	movf	?__Umul8_16,w
  9228  0D8D  00BC               	movwf	___flmul@temp
  9229  0D8E                     l2907:
  9230  0D8E  083C               	movf	___flmul@temp,w
  9231  0D8F  00AC               	movwf	??___flmul
  9232  0D90  01AD               	clrf	??___flmul+1
  9233  0D91  01AE               	clrf	??___flmul+2
  9234  0D92  01AF               	clrf	??___flmul+3
  9235  0D93  082C               	movf	??___flmul,w
  9236  0D94  07B2               	addwf	___flmul@grs,f
  9237  0D95  082D               	movf	??___flmul+1,w
  9238  0D96  1103               	clrz
  9239  0D97  1803               	skipnc
  9240  0D98  3E01               	addlw	1
  9241  0D99  1903               	skipnz
  9242  0D9A  2D9C               	goto	u4141
  9243  0D9B  07B3               	addwf	___flmul@grs+1,f
  9244  0D9C                     u4141:
  9245  0D9C  082E               	movf	??___flmul+2,w
  9246  0D9D  1103               	clrz
  9247  0D9E  1803               	skipnc
  9248  0D9F  3E01               	addlw	1
  9249  0DA0  1903               	skipnz
  9250  0DA1  2DA3               	goto	u4142
  9251  0DA2  07B4               	addwf	___flmul@grs+2,f
  9252  0DA3                     u4142:
  9253  0DA3  082F               	movf	??___flmul+3,w
  9254  0DA4  1103               	clrz
  9255  0DA5  1803               	skipnc
  9256  0DA6  3E01               	addlw	1
  9257  0DA7  1903               	skipnz
  9258  0DA8  2DAA               	goto	u4143
  9259  0DA9  07B5               	addwf	___flmul@grs+3,f
  9260  0DAA                     u4143:
  9261  0DAA                     l2909:
  9262  0DAA  083D               	movf	___flmul@temp+1,w
  9263  0DAB  00AC               	movwf	??___flmul
  9264  0DAC  01AD               	clrf	??___flmul+1
  9265  0DAD  01AE               	clrf	??___flmul+2
  9266  0DAE  01AF               	clrf	??___flmul+3
  9267  0DAF  082C               	movf	??___flmul,w
  9268  0DB0  07B8               	addwf	___flmul@prod,f
  9269  0DB1  082D               	movf	??___flmul+1,w
  9270  0DB2  1103               	clrz
  9271  0DB3  1803               	skipnc
  9272  0DB4  3E01               	addlw	1
  9273  0DB5  1903               	skipnz
  9274  0DB6  2DB8               	goto	u4151
  9275  0DB7  07B9               	addwf	___flmul@prod+1,f
  9276  0DB8                     u4151:
  9277  0DB8  082E               	movf	??___flmul+2,w
  9278  0DB9  1103               	clrz
  9279  0DBA  1803               	skipnc
  9280  0DBB  3E01               	addlw	1
  9281  0DBC  1903               	skipnz
  9282  0DBD  2DBF               	goto	u4152
  9283  0DBE  07BA               	addwf	___flmul@prod+2,f
  9284  0DBF                     u4152:
  9285  0DBF  082F               	movf	??___flmul+3,w
  9286  0DC0  1103               	clrz
  9287  0DC1  1803               	skipnc
  9288  0DC2  3E01               	addlw	1
  9289  0DC3  1903               	skipnz
  9290  0DC4  2DC6               	goto	u4153
  9291  0DC5  07BB               	addwf	___flmul@prod+3,f
  9292  0DC6                     u4153:
  9293  0DC6                     l2911:
  9294  0DC6  3008               	movlw	8
  9295  0DC7  00AC               	movwf	??___flmul
  9296  0DC8                     u4165:
  9297  0DC8  1003               	clrc
  9298  0DC9  0DB2               	rlf	___flmul@grs,f
  9299  0DCA  0DB3               	rlf	___flmul@grs+1,f
  9300  0DCB  0DB4               	rlf	___flmul@grs+2,f
  9301  0DCC  0DB5               	rlf	___flmul@grs+3,f
  9302  0DCD  0BAC               	decfsz	??___flmul,f
  9303  0DCE  2DC8               	goto	u4165
  9304  0DCF                     l2913:
  9305  0DCF  0825               	movf	___flmul@b+1,w
  9306  0DD0  00AC               	movwf	??___flmul
  9307  0DD1  082C               	movf	??___flmul,w
  9308  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  9309  0DD3  0828               	movf	___flmul@a,w
  9310  0DD4  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9311  0DD9  0871               	movf	?__Umul8_16+1,w
  9312  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  9313  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  9314  0DDC  00BD               	movwf	___flmul@temp+1
  9315  0DDD  0870               	movf	?__Umul8_16,w
  9316  0DDE  00BC               	movwf	___flmul@temp
  9317  0DDF                     l2915:
  9318  0DDF  083C               	movf	___flmul@temp,w
  9319  0DE0  00AC               	movwf	??___flmul
  9320  0DE1  083D               	movf	___flmul@temp+1,w
  9321  0DE2  00AD               	movwf	??___flmul+1
  9322  0DE3  01AE               	clrf	??___flmul+2
  9323  0DE4  01AF               	clrf	??___flmul+3
  9324  0DE5  082C               	movf	??___flmul,w
  9325  0DE6  07B2               	addwf	___flmul@grs,f
  9326  0DE7  082D               	movf	??___flmul+1,w
  9327  0DE8  1103               	clrz
  9328  0DE9  1803               	skipnc
  9329  0DEA  3E01               	addlw	1
  9330  0DEB  1903               	skipnz
  9331  0DEC  2DEE               	goto	u4171
  9332  0DED  07B3               	addwf	___flmul@grs+1,f
  9333  0DEE                     u4171:
  9334  0DEE  082E               	movf	??___flmul+2,w
  9335  0DEF  1103               	clrz
  9336  0DF0  1803               	skipnc
  9337  0DF1  3E01               	addlw	1
  9338  0DF2  1903               	skipnz
  9339  0DF3  2DF5               	goto	u4172
  9340  0DF4  07B4               	addwf	___flmul@grs+2,f
  9341  0DF5                     u4172:
  9342  0DF5  082F               	movf	??___flmul+3,w
  9343  0DF6  1103               	clrz
  9344  0DF7  1803               	skipnc
  9345  0DF8  3E01               	addlw	1
  9346  0DF9  1903               	skipnz
  9347  0DFA  2DFC               	goto	u4173
  9348  0DFB  07B5               	addwf	___flmul@grs+3,f
  9349  0DFC                     u4173:
  9350  0DFC                     l2917:
  9351  0DFC  0824               	movf	___flmul@b,w
  9352  0DFD  00AC               	movwf	??___flmul
  9353  0DFE  082C               	movf	??___flmul,w
  9354  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  9355  0E00  0829               	movf	___flmul@a+1,w
  9356  0E01  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9357  0E06  0871               	movf	?__Umul8_16+1,w
  9358  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  9359  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  9360  0E09  00BD               	movwf	___flmul@temp+1
  9361  0E0A  0870               	movf	?__Umul8_16,w
  9362  0E0B  00BC               	movwf	___flmul@temp
  9363  0E0C                     l2919:
  9364  0E0C  083C               	movf	___flmul@temp,w
  9365  0E0D  00AC               	movwf	??___flmul
  9366  0E0E  083D               	movf	___flmul@temp+1,w
  9367  0E0F  00AD               	movwf	??___flmul+1
  9368  0E10  01AE               	clrf	??___flmul+2
  9369  0E11  01AF               	clrf	??___flmul+3
  9370  0E12  082C               	movf	??___flmul,w
  9371  0E13  07B2               	addwf	___flmul@grs,f
  9372  0E14  082D               	movf	??___flmul+1,w
  9373  0E15  1103               	clrz
  9374  0E16  1803               	skipnc
  9375  0E17  3E01               	addlw	1
  9376  0E18  1903               	skipnz
  9377  0E19  2E1B               	goto	u4181
  9378  0E1A  07B3               	addwf	___flmul@grs+1,f
  9379  0E1B                     u4181:
  9380  0E1B  082E               	movf	??___flmul+2,w
  9381  0E1C  1103               	clrz
  9382  0E1D  1803               	skipnc
  9383  0E1E  3E01               	addlw	1
  9384  0E1F  1903               	skipnz
  9385  0E20  2E22               	goto	u4182
  9386  0E21  07B4               	addwf	___flmul@grs+2,f
  9387  0E22                     u4182:
  9388  0E22  082F               	movf	??___flmul+3,w
  9389  0E23  1103               	clrz
  9390  0E24  1803               	skipnc
  9391  0E25  3E01               	addlw	1
  9392  0E26  1903               	skipnz
  9393  0E27  2E29               	goto	u4183
  9394  0E28  07B5               	addwf	___flmul@grs+3,f
  9395  0E29                     u4183:
  9396  0E29                     l2921:
  9397  0E29  3008               	movlw	8
  9398  0E2A  00AC               	movwf	??___flmul
  9399  0E2B                     u4195:
  9400  0E2B  1003               	clrc
  9401  0E2C  0DB2               	rlf	___flmul@grs,f
  9402  0E2D  0DB3               	rlf	___flmul@grs+1,f
  9403  0E2E  0DB4               	rlf	___flmul@grs+2,f
  9404  0E2F  0DB5               	rlf	___flmul@grs+3,f
  9405  0E30  0BAC               	decfsz	??___flmul,f
  9406  0E31  2E2B               	goto	u4195
  9407  0E32  0824               	movf	___flmul@b,w
  9408  0E33  00AC               	movwf	??___flmul
  9409  0E34  082C               	movf	??___flmul,w
  9410  0E35  00F0               	movwf	__Umul8_16@multiplicand
  9411  0E36  0828               	movf	___flmul@a,w
  9412  0E37  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9413  0E3C  0871               	movf	?__Umul8_16+1,w
  9414  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  9415  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  9416  0E3F  00BD               	movwf	___flmul@temp+1
  9417  0E40  0870               	movf	?__Umul8_16,w
  9418  0E41  00BC               	movwf	___flmul@temp
  9419  0E42                     l2923:
  9420  0E42  083C               	movf	___flmul@temp,w
  9421  0E43  00AC               	movwf	??___flmul
  9422  0E44  083D               	movf	___flmul@temp+1,w
  9423  0E45  00AD               	movwf	??___flmul+1
  9424  0E46  01AE               	clrf	??___flmul+2
  9425  0E47  01AF               	clrf	??___flmul+3
  9426  0E48  082C               	movf	??___flmul,w
  9427  0E49  07B2               	addwf	___flmul@grs,f
  9428  0E4A  082D               	movf	??___flmul+1,w
  9429  0E4B  1103               	clrz
  9430  0E4C  1803               	skipnc
  9431  0E4D  3E01               	addlw	1
  9432  0E4E  1903               	skipnz
  9433  0E4F  2E51               	goto	u4201
  9434  0E50  07B3               	addwf	___flmul@grs+1,f
  9435  0E51                     u4201:
  9436  0E51  082E               	movf	??___flmul+2,w
  9437  0E52  1103               	clrz
  9438  0E53  1803               	skipnc
  9439  0E54  3E01               	addlw	1
  9440  0E55  1903               	skipnz
  9441  0E56  2E58               	goto	u4202
  9442  0E57  07B4               	addwf	___flmul@grs+2,f
  9443  0E58                     u4202:
  9444  0E58  082F               	movf	??___flmul+3,w
  9445  0E59  1103               	clrz
  9446  0E5A  1803               	skipnc
  9447  0E5B  3E01               	addlw	1
  9448  0E5C  1903               	skipnz
  9449  0E5D  2E5F               	goto	u4203
  9450  0E5E  07B5               	addwf	___flmul@grs+3,f
  9451  0E5F                     u4203:
  9452  0E5F                     l2925:
  9453  0E5F  0825               	movf	___flmul@b+1,w
  9454  0E60  00AC               	movwf	??___flmul
  9455  0E61  082C               	movf	??___flmul,w
  9456  0E62  00F0               	movwf	__Umul8_16@multiplicand
  9457  0E63  082A               	movf	___flmul@a+2,w
  9458  0E64  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9459  0E69  0871               	movf	?__Umul8_16+1,w
  9460  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  9461  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  9462  0E6C  00BD               	movwf	___flmul@temp+1
  9463  0E6D  0870               	movf	?__Umul8_16,w
  9464  0E6E  00BC               	movwf	___flmul@temp
  9465  0E6F  083C               	movf	___flmul@temp,w
  9466  0E70  00AC               	movwf	??___flmul
  9467  0E71  083D               	movf	___flmul@temp+1,w
  9468  0E72  00AD               	movwf	??___flmul+1
  9469  0E73  01AE               	clrf	??___flmul+2
  9470  0E74  01AF               	clrf	??___flmul+3
  9471  0E75  082C               	movf	??___flmul,w
  9472  0E76  07B8               	addwf	___flmul@prod,f
  9473  0E77  082D               	movf	??___flmul+1,w
  9474  0E78  1103               	clrz
  9475  0E79  1803               	skipnc
  9476  0E7A  3E01               	addlw	1
  9477  0E7B  1903               	skipnz
  9478  0E7C  2E7E               	goto	u4211
  9479  0E7D  07B9               	addwf	___flmul@prod+1,f
  9480  0E7E                     u4211:
  9481  0E7E  082E               	movf	??___flmul+2,w
  9482  0E7F  1103               	clrz
  9483  0E80  1803               	skipnc
  9484  0E81  3E01               	addlw	1
  9485  0E82  1903               	skipnz
  9486  0E83  2E85               	goto	u4212
  9487  0E84  07BA               	addwf	___flmul@prod+2,f
  9488  0E85                     u4212:
  9489  0E85  082F               	movf	??___flmul+3,w
  9490  0E86  1103               	clrz
  9491  0E87  1803               	skipnc
  9492  0E88  3E01               	addlw	1
  9493  0E89  1903               	skipnz
  9494  0E8A  2E8C               	goto	u4213
  9495  0E8B  07BB               	addwf	___flmul@prod+3,f
  9496  0E8C                     u4213:
  9497  0E8C                     l2927:
  9498  0E8C  0826               	movf	___flmul@b+2,w
  9499  0E8D  00AC               	movwf	??___flmul
  9500  0E8E  082C               	movf	??___flmul,w
  9501  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  9502  0E90  0829               	movf	___flmul@a+1,w
  9503  0E91  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9504  0E96  0871               	movf	?__Umul8_16+1,w
  9505  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  9506  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  9507  0E99  00BD               	movwf	___flmul@temp+1
  9508  0E9A  0870               	movf	?__Umul8_16,w
  9509  0E9B  00BC               	movwf	___flmul@temp
  9510  0E9C                     l2929:
  9511  0E9C  083C               	movf	___flmul@temp,w
  9512  0E9D  00AC               	movwf	??___flmul
  9513  0E9E  083D               	movf	___flmul@temp+1,w
  9514  0E9F  00AD               	movwf	??___flmul+1
  9515  0EA0  01AE               	clrf	??___flmul+2
  9516  0EA1  01AF               	clrf	??___flmul+3
  9517  0EA2  082C               	movf	??___flmul,w
  9518  0EA3  07B8               	addwf	___flmul@prod,f
  9519  0EA4  082D               	movf	??___flmul+1,w
  9520  0EA5  1103               	clrz
  9521  0EA6  1803               	skipnc
  9522  0EA7  3E01               	addlw	1
  9523  0EA8  1903               	skipnz
  9524  0EA9  2EAB               	goto	u4221
  9525  0EAA  07B9               	addwf	___flmul@prod+1,f
  9526  0EAB                     u4221:
  9527  0EAB  082E               	movf	??___flmul+2,w
  9528  0EAC  1103               	clrz
  9529  0EAD  1803               	skipnc
  9530  0EAE  3E01               	addlw	1
  9531  0EAF  1903               	skipnz
  9532  0EB0  2EB2               	goto	u4222
  9533  0EB1  07BA               	addwf	___flmul@prod+2,f
  9534  0EB2                     u4222:
  9535  0EB2  082F               	movf	??___flmul+3,w
  9536  0EB3  1103               	clrz
  9537  0EB4  1803               	skipnc
  9538  0EB5  3E01               	addlw	1
  9539  0EB6  1903               	skipnz
  9540  0EB7  2EB9               	goto	u4223
  9541  0EB8  07BB               	addwf	___flmul@prod+3,f
  9542  0EB9                     u4223:
  9543  0EB9  0826               	movf	___flmul@b+2,w
  9544  0EBA  00AC               	movwf	??___flmul
  9545  0EBB  082C               	movf	??___flmul,w
  9546  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  9547  0EBD  082A               	movf	___flmul@a+2,w
  9548  0EBE  160A  158A  22DB  120A  158A  	fcall	__Umul8_16
  9549  0EC3  0871               	movf	?__Umul8_16+1,w
  9550  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9551  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9552  0EC6  00BD               	movwf	___flmul@temp+1
  9553  0EC7  0870               	movf	?__Umul8_16,w
  9554  0EC8  00BC               	movwf	___flmul@temp
  9555  0EC9                     l2931:
  9556  0EC9  083C               	movf	___flmul@temp,w
  9557  0ECA  00AC               	movwf	??___flmul
  9558  0ECB  083D               	movf	___flmul@temp+1,w
  9559  0ECC  00AD               	movwf	??___flmul+1
  9560  0ECD  01AE               	clrf	??___flmul+2
  9561  0ECE  01AF               	clrf	??___flmul+3
  9562  0ECF  3008               	movlw	8
  9563  0ED0                     u4235:
  9564  0ED0  1003               	clrc
  9565  0ED1  0DAC               	rlf	??___flmul,f
  9566  0ED2  0DAD               	rlf	??___flmul+1,f
  9567  0ED3  0DAE               	rlf	??___flmul+2,f
  9568  0ED4  0DAF               	rlf	??___flmul+3,f
  9569  0ED5                     u4230:
  9570  0ED5  3EFF               	addlw	-1
  9571  0ED6  1D03               	skipz
  9572  0ED7  2ED0               	goto	u4235
  9573  0ED8  082C               	movf	??___flmul,w
  9574  0ED9  07B8               	addwf	___flmul@prod,f
  9575  0EDA  082D               	movf	??___flmul+1,w
  9576  0EDB  1103               	clrz
  9577  0EDC  1803               	skipnc
  9578  0EDD  3E01               	addlw	1
  9579  0EDE  1903               	skipnz
  9580  0EDF  2EE1               	goto	u4241
  9581  0EE0  07B9               	addwf	___flmul@prod+1,f
  9582  0EE1                     u4241:
  9583  0EE1  082E               	movf	??___flmul+2,w
  9584  0EE2  1103               	clrz
  9585  0EE3  1803               	skipnc
  9586  0EE4  3E01               	addlw	1
  9587  0EE5  1903               	skipnz
  9588  0EE6  2EE8               	goto	u4242
  9589  0EE7  07BA               	addwf	___flmul@prod+2,f
  9590  0EE8                     u4242:
  9591  0EE8  082F               	movf	??___flmul+3,w
  9592  0EE9  1103               	clrz
  9593  0EEA  1803               	skipnc
  9594  0EEB  3E01               	addlw	1
  9595  0EEC  1903               	skipnz
  9596  0EED  2EEF               	goto	u4243
  9597  0EEE  07BB               	addwf	___flmul@prod+3,f
  9598  0EEF                     u4243:
  9599  0EEF                     l2933:
  9600  0EEF  0832               	movf	___flmul@grs,w
  9601  0EF0  00AC               	movwf	??___flmul
  9602  0EF1  0833               	movf	___flmul@grs+1,w
  9603  0EF2  00AD               	movwf	??___flmul+1
  9604  0EF3  0834               	movf	___flmul@grs+2,w
  9605  0EF4  00AE               	movwf	??___flmul+2
  9606  0EF5  0835               	movf	___flmul@grs+3,w
  9607  0EF6  00AF               	movwf	??___flmul+3
  9608  0EF7  3018               	movlw	24
  9609  0EF8                     u4255:
  9610  0EF8  1003               	clrc
  9611  0EF9  0CAF               	rrf	??___flmul+3,f
  9612  0EFA  0CAE               	rrf	??___flmul+2,f
  9613  0EFB  0CAD               	rrf	??___flmul+1,f
  9614  0EFC  0CAC               	rrf	??___flmul,f
  9615  0EFD                     u4250:
  9616  0EFD  3EFF               	addlw	-1
  9617  0EFE  1D03               	skipz
  9618  0EFF  2EF8               	goto	u4255
  9619  0F00  082C               	movf	??___flmul,w
  9620  0F01  07B8               	addwf	___flmul@prod,f
  9621  0F02  082D               	movf	??___flmul+1,w
  9622  0F03  1103               	clrz
  9623  0F04  1803               	skipnc
  9624  0F05  3E01               	addlw	1
  9625  0F06  1903               	skipnz
  9626  0F07  2F09               	goto	u4261
  9627  0F08  07B9               	addwf	___flmul@prod+1,f
  9628  0F09                     u4261:
  9629  0F09  082E               	movf	??___flmul+2,w
  9630  0F0A  1103               	clrz
  9631  0F0B  1803               	skipnc
  9632  0F0C  3E01               	addlw	1
  9633  0F0D  1903               	skipnz
  9634  0F0E  2F10               	goto	u4262
  9635  0F0F  07BA               	addwf	___flmul@prod+2,f
  9636  0F10                     u4262:
  9637  0F10  082F               	movf	??___flmul+3,w
  9638  0F11  1103               	clrz
  9639  0F12  1803               	skipnc
  9640  0F13  3E01               	addlw	1
  9641  0F14  1903               	skipnz
  9642  0F15  2F17               	goto	u4263
  9643  0F16  07BB               	addwf	___flmul@prod+3,f
  9644  0F17                     u4263:
  9645  0F17                     l2935:
  9646  0F17  3008               	movlw	8
  9647  0F18  00AC               	movwf	??___flmul
  9648  0F19                     u4275:
  9649  0F19  1003               	clrc
  9650  0F1A  0DB2               	rlf	___flmul@grs,f
  9651  0F1B  0DB3               	rlf	___flmul@grs+1,f
  9652  0F1C  0DB4               	rlf	___flmul@grs+2,f
  9653  0F1D  0DB5               	rlf	___flmul@grs+3,f
  9654  0F1E  0BAC               	decfsz	??___flmul,f
  9655  0F1F  2F19               	goto	u4275
  9656  0F20                     l2937:
  9657  0F20  0837               	movf	___flmul@bexp,w
  9658  0F21  0736               	addwf	___flmul@aexp,w
  9659  0F22  00AC               	movwf	??___flmul
  9660  0F23  01AD               	clrf	??___flmul+1
  9661  0F24  0DAD               	rlf	??___flmul+1,f
  9662  0F25  082C               	movf	??___flmul,w
  9663  0F26  3E82               	addlw	130
  9664  0F27  00BC               	movwf	___flmul@temp
  9665  0F28  082D               	movf	??___flmul+1,w
  9666  0F29  1803               	skipnc
  9667  0F2A  3E01               	addlw	1
  9668  0F2B  3EFF               	addlw	255
  9669  0F2C  00BD               	movwf	___flmul@temp+1
  9670  0F2D  2F4B               	goto	l2949
  9671  0F2E                     l2939:
  9672  0F2E  3001               	movlw	1
  9673  0F2F  00AC               	movwf	??___flmul
  9674  0F30                     u4285:
  9675  0F30  1003               	clrc
  9676  0F31  0DB8               	rlf	___flmul@prod,f
  9677  0F32  0DB9               	rlf	___flmul@prod+1,f
  9678  0F33  0DBA               	rlf	___flmul@prod+2,f
  9679  0F34  0DBB               	rlf	___flmul@prod+3,f
  9680  0F35  0BAC               	decfsz	??___flmul,f
  9681  0F36  2F30               	goto	u4285
  9682  0F37                     l2941:
  9683  0F37  1FB5               	btfss	___flmul@grs+3,7
  9684  0F38  2F3A               	goto	u4291
  9685  0F39  2F3B               	goto	u4290
  9686  0F3A                     u4291:
  9687  0F3A  2F3C               	goto	l2945
  9688  0F3B                     u4290:
  9689  0F3B                     l2943:
  9690  0F3B  1438               	bsf	___flmul@prod,0
  9691  0F3C                     l2945:
  9692  0F3C  3001               	movlw	1
  9693  0F3D  00AC               	movwf	??___flmul
  9694  0F3E                     u4305:
  9695  0F3E  1003               	clrc
  9696  0F3F  0DB2               	rlf	___flmul@grs,f
  9697  0F40  0DB3               	rlf	___flmul@grs+1,f
  9698  0F41  0DB4               	rlf	___flmul@grs+2,f
  9699  0F42  0DB5               	rlf	___flmul@grs+3,f
  9700  0F43  0BAC               	decfsz	??___flmul,f
  9701  0F44  2F3E               	goto	u4305
  9702  0F45                     l2947:
  9703  0F45  30FF               	movlw	255
  9704  0F46  07BC               	addwf	___flmul@temp,f
  9705  0F47  1803               	skipnc
  9706  0F48  0ABD               	incf	___flmul@temp+1,f
  9707  0F49  30FF               	movlw	255
  9708  0F4A  07BD               	addwf	___flmul@temp+1,f
  9709  0F4B                     l2949:
  9710  0F4B  1FBA               	btfss	___flmul@prod+2,7
  9711  0F4C  2F4E               	goto	u4311
  9712  0F4D  2F4F               	goto	u4310
  9713  0F4E                     u4311:
  9714  0F4E  2F2E               	goto	l2939
  9715  0F4F                     u4310:
  9716  0F4F                     l2951:
  9717  0F4F  01B6               	clrf	___flmul@aexp
  9718  0F50                     l2953:
  9719  0F50  1FB5               	btfss	___flmul@grs+3,7
  9720  0F51  2F53               	goto	u4321
  9721  0F52  2F54               	goto	u4320
  9722  0F53                     u4321:
  9723  0F53  2F70               	goto	l2961
  9724  0F54                     u4320:
  9725  0F54                     l2955:
  9726  0F54  30FF               	movlw	255
  9727  0F55  0532               	andwf	___flmul@grs,w
  9728  0F56  00AC               	movwf	??___flmul
  9729  0F57  30FF               	movlw	255
  9730  0F58  0533               	andwf	___flmul@grs+1,w
  9731  0F59  00AD               	movwf	??___flmul+1
  9732  0F5A  30FF               	movlw	255
  9733  0F5B  0534               	andwf	___flmul@grs+2,w
  9734  0F5C  00AE               	movwf	??___flmul+2
  9735  0F5D  307F               	movlw	127
  9736  0F5E  0535               	andwf	___flmul@grs+3,w
  9737  0F5F  00AF               	movwf	??___flmul+3
  9738  0F60  082F               	movf	??___flmul+3,w
  9739  0F61  042E               	iorwf	??___flmul+2,w
  9740  0F62  042D               	iorwf	??___flmul+1,w
  9741  0F63  042C               	iorwf	??___flmul,w
  9742  0F64  1903               	skipnz
  9743  0F65  2F67               	goto	u4331
  9744  0F66  2F68               	goto	u4330
  9745  0F67                     u4331:
  9746  0F67  2F6B               	goto	l831
  9747  0F68                     u4330:
  9748  0F68                     l2957:
  9749  0F68  01B6               	clrf	___flmul@aexp
  9750  0F69  0AB6               	incf	___flmul@aexp,f
  9751  0F6A  2F70               	goto	l2961
  9752  0F6B                     l831:
  9753  0F6B  1C38               	btfss	___flmul@prod,0
  9754  0F6C  2F6E               	goto	u4341
  9755  0F6D  2F6F               	goto	u4340
  9756  0F6E                     u4341:
  9757  0F6E  2F70               	goto	l2961
  9758  0F6F                     u4340:
  9759  0F6F  2F68               	goto	l2957
  9760  0F70                     l2961:
  9761  0F70  0836               	movf	___flmul@aexp,w
  9762  0F71  1903               	btfsc	3,2
  9763  0F72  2F74               	goto	u4351
  9764  0F73  2F75               	goto	u4350
  9765  0F74                     u4351:
  9766  0F74  2FA6               	goto	l2971
  9767  0F75                     u4350:
  9768  0F75                     l2963:
  9769  0F75  3001               	movlw	1
  9770  0F76  07B8               	addwf	___flmul@prod,f
  9771  0F77  3000               	movlw	0
  9772  0F78  1803               	skipnc
  9773  0F79  3001               	movlw	1
  9774  0F7A  07B9               	addwf	___flmul@prod+1,f
  9775  0F7B  3000               	movlw	0
  9776  0F7C  1803               	skipnc
  9777  0F7D  3001               	movlw	1
  9778  0F7E  07BA               	addwf	___flmul@prod+2,f
  9779  0F7F  3000               	movlw	0
  9780  0F80  1803               	skipnc
  9781  0F81  3001               	movlw	1
  9782  0F82  07BB               	addwf	___flmul@prod+3,f
  9783  0F83                     l2965:
  9784  0F83  1C3B               	btfss	___flmul@prod+3,0
  9785  0F84  2F86               	goto	u4361
  9786  0F85  2F87               	goto	u4360
  9787  0F86                     u4361:
  9788  0F86  2FA6               	goto	l2971
  9789  0F87                     u4360:
  9790  0F87                     l2967:
  9791  0F87  0838               	movf	___flmul@prod,w
  9792  0F88  00AC               	movwf	??___flmul
  9793  0F89  0839               	movf	___flmul@prod+1,w
  9794  0F8A  00AD               	movwf	??___flmul+1
  9795  0F8B  083A               	movf	___flmul@prod+2,w
  9796  0F8C  00AE               	movwf	??___flmul+2
  9797  0F8D  083B               	movf	___flmul@prod+3,w
  9798  0F8E  00AF               	movwf	??___flmul+3
  9799  0F8F  3001               	movlw	1
  9800  0F90  00B0               	movwf	??___flmul+4
  9801  0F91                     u4375:
  9802  0F91  0D2F               	rlf	??___flmul+3,w
  9803  0F92  0CAF               	rrf	??___flmul+3,f
  9804  0F93  0CAE               	rrf	??___flmul+2,f
  9805  0F94  0CAD               	rrf	??___flmul+1,f
  9806  0F95  0CAC               	rrf	??___flmul,f
  9807  0F96                     u4370:
  9808  0F96  0BB0               	decfsz	??___flmul+4,f
  9809  0F97  2F91               	goto	u4375
  9810  0F98  082F               	movf	??___flmul+3,w
  9811  0F99  00BB               	movwf	___flmul@prod+3
  9812  0F9A  082E               	movf	??___flmul+2,w
  9813  0F9B  00BA               	movwf	___flmul@prod+2
  9814  0F9C  082D               	movf	??___flmul+1,w
  9815  0F9D  00B9               	movwf	___flmul@prod+1
  9816  0F9E  082C               	movf	??___flmul,w
  9817  0F9F  00B8               	movwf	___flmul@prod
  9818  0FA0                     l2969:
  9819  0FA0  3001               	movlw	1
  9820  0FA1  07BC               	addwf	___flmul@temp,f
  9821  0FA2  1803               	skipnc
  9822  0FA3  0ABD               	incf	___flmul@temp+1,f
  9823  0FA4  3000               	movlw	0
  9824  0FA5  07BD               	addwf	___flmul@temp+1,f
  9825  0FA6                     l2971:
  9826  0FA6  083D               	movf	___flmul@temp+1,w
  9827  0FA7  3A80               	xorlw	128
  9828  0FA8  00FF               	movwf	btemp+1
  9829  0FA9  3080               	movlw	128
  9830  0FAA  027F               	subwf	btemp+1,w
  9831  0FAB  1D03               	skipz
  9832  0FAC  2FAF               	goto	u4385
  9833  0FAD  30FF               	movlw	255
  9834  0FAE  023C               	subwf	___flmul@temp,w
  9835  0FAF                     u4385:
  9836  0FAF  1C03               	skipc
  9837  0FB0  2FB2               	goto	u4381
  9838  0FB1  2FB3               	goto	u4380
  9839  0FB2                     u4381:
  9840  0FB2  2FBE               	goto	l2975
  9841  0FB3                     u4380:
  9842  0FB3                     l2973:
  9843  0FB3  307F               	movlw	127
  9844  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  9845  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  9846  0FB6  00BB               	movwf	___flmul@prod+3
  9847  0FB7  3080               	movlw	128
  9848  0FB8  00BA               	movwf	___flmul@prod+2
  9849  0FB9  3000               	movlw	0
  9850  0FBA  00B9               	movwf	___flmul@prod+1
  9851  0FBB  3000               	movlw	0
  9852  0FBC  00B8               	movwf	___flmul@prod
  9853  0FBD  2FF3               	goto	l837
  9854  0FBE                     l2975:
  9855  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  9856  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  9857  0FC0  083D               	movf	___flmul@temp+1,w
  9858  0FC1  3A80               	xorlw	128
  9859  0FC2  00FF               	movwf	btemp+1
  9860  0FC3  3080               	movlw	128
  9861  0FC4  027F               	subwf	btemp+1,w
  9862  0FC5  1D03               	skipz
  9863  0FC6  2FC9               	goto	u4395
  9864  0FC7  3001               	movlw	1
  9865  0FC8  023C               	subwf	___flmul@temp,w
  9866  0FC9                     u4395:
  9867  0FC9  1803               	skipnc
  9868  0FCA  2FCC               	goto	u4391
  9869  0FCB  2FCD               	goto	u4390
  9870  0FCC                     u4391:
  9871  0FCC  2FD9               	goto	l2981
  9872  0FCD                     u4390:
  9873  0FCD                     l2977:
  9874  0FCD  3000               	movlw	0
  9875  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  9876  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  9877  0FD0  00BB               	movwf	___flmul@prod+3
  9878  0FD1  3000               	movlw	0
  9879  0FD2  00BA               	movwf	___flmul@prod+2
  9880  0FD3  3000               	movlw	0
  9881  0FD4  00B9               	movwf	___flmul@prod+1
  9882  0FD5  3000               	movlw	0
  9883  0FD6  00B8               	movwf	___flmul@prod
  9884  0FD7                     l2979:
  9885  0FD7  01B1               	clrf	___flmul@sign
  9886  0FD8  2FF3               	goto	l837
  9887  0FD9                     l2981:
  9888  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  9889  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  9890  0FDB  083C               	movf	___flmul@temp,w
  9891  0FDC  00AC               	movwf	??___flmul
  9892  0FDD  082C               	movf	??___flmul,w
  9893  0FDE  00B7               	movwf	___flmul@bexp
  9894  0FDF  30FF               	movlw	255
  9895  0FE0  05B8               	andwf	___flmul@prod,f
  9896  0FE1  30FF               	movlw	255
  9897  0FE2  05B9               	andwf	___flmul@prod+1,f
  9898  0FE3  307F               	movlw	127
  9899  0FE4  05BA               	andwf	___flmul@prod+2,f
  9900  0FE5  3000               	movlw	0
  9901  0FE6  05BB               	andwf	___flmul@prod+3,f
  9902  0FE7                     l2983:
  9903  0FE7  1C37               	btfss	___flmul@bexp,0
  9904  0FE8  2FEA               	goto	u4401
  9905  0FE9  2FEB               	goto	u4400
  9906  0FEA                     u4401:
  9907  0FEA  2FEC               	goto	l2987
  9908  0FEB                     u4400:
  9909  0FEB                     l2985:
  9910  0FEB  17BA               	bsf	___flmul@prod+2,7
  9911  0FEC                     l2987:
  9912  0FEC  0837               	movf	___flmul@bexp,w
  9913  0FED  00AC               	movwf	??___flmul
  9914  0FEE  1003               	clrc
  9915  0FEF  0C2C               	rrf	??___flmul,w
  9916  0FF0  00AD               	movwf	??___flmul+1
  9917  0FF1  082D               	movf	??___flmul+1,w
  9918  0FF2  00BB               	movwf	___flmul@prod+3
  9919  0FF3                     l837:
  9920  0FF3  0831               	movf	___flmul@sign,w
  9921  0FF4  00AC               	movwf	??___flmul
  9922  0FF5  082C               	movf	??___flmul,w
  9923  0FF6  04BB               	iorwf	___flmul@prod+3,f
  9924  0FF7                     l2989:
  9925  0FF7  083B               	movf	___flmul@prod+3,w
  9926  0FF8  00A7               	movwf	?___flmul+3
  9927  0FF9  083A               	movf	___flmul@prod+2,w
  9928  0FFA  00A6               	movwf	?___flmul+2
  9929  0FFB  0839               	movf	___flmul@prod+1,w
  9930  0FFC  00A5               	movwf	?___flmul+1
  9931  0FFD  0838               	movf	___flmul@prod,w
  9932  0FFE  00A4               	movwf	?___flmul
  9933  0FFF                     l825:
  9934  0FFF  0008               	return
  9935  1000                     __end_of___flmul:
  9936                           
  9937                           	psect	text23
  9938  1ADB                     __ptext23:	
  9939 ;; *************** function __Umul8_16 *****************
  9940 ;; Defined at:
  9941 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;  multiplier      1    wreg     unsigned char 
  9944 ;;  multiplicand    1    0[COMMON] unsigned char 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  multiplier      1    8[COMMON] unsigned char 
  9947 ;;  word_mpld       2    6[COMMON] unsigned int 
  9948 ;;  product         2    4[COMMON] unsigned int 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  2    0[COMMON] unsigned int 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9958 ;;      Params:         2       0       0       0       0
  9959 ;;      Locals:         5       0       0       0       0
  9960 ;;      Temps:          2       0       0       0       0
  9961 ;;      Totals:         9       0       0       0       0
  9962 ;;Total ram usage:        9 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; This function calls:
  9965 ;;		Nothing
  9966 ;; This function is called by:
  9967 ;;		___flmul
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           
  9972                           ;psect for function __Umul8_16
  9973  1ADB                     __Umul8_16:
  9974                           
  9975                           ;incstack = 0
  9976                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9977                           ;__Umul8_16@multiplier stored from wreg
  9978  1ADB  00F8               	movwf	__Umul8_16@multiplier
  9979  1ADC                     l2497:
  9980  1ADC  01F4               	clrf	__Umul8_16@product
  9981  1ADD  01F5               	clrf	__Umul8_16@product+1
  9982  1ADE                     l2499:
  9983  1ADE  0870               	movf	__Umul8_16@multiplicand,w
  9984  1ADF  00F2               	movwf	??__Umul8_16
  9985  1AE0  01F3               	clrf	??__Umul8_16+1
  9986  1AE1  0872               	movf	??__Umul8_16,w
  9987  1AE2  00F6               	movwf	__Umul8_16@word_mpld
  9988  1AE3  0873               	movf	??__Umul8_16+1,w
  9989  1AE4  00F7               	movwf	__Umul8_16@word_mpld+1
  9990  1AE5                     l2501:
  9991  1AE5  1C78               	btfss	__Umul8_16@multiplier,0
  9992  1AE6  2AE8               	goto	u3151
  9993  1AE7  2AE9               	goto	u3150
  9994  1AE8                     u3151:
  9995  1AE8  2AEF               	goto	l844
  9996  1AE9                     u3150:
  9997  1AE9                     l2503:
  9998  1AE9  0876               	movf	__Umul8_16@word_mpld,w
  9999  1AEA  07F4               	addwf	__Umul8_16@product,f
 10000  1AEB  1803               	skipnc
 10001  1AEC  0AF5               	incf	__Umul8_16@product+1,f
 10002  1AED  0877               	movf	__Umul8_16@word_mpld+1,w
 10003  1AEE  07F5               	addwf	__Umul8_16@product+1,f
 10004  1AEF                     l844:
 10005  1AEF  3001               	movlw	1
 10006  1AF0                     u3165:
 10007  1AF0  1003               	clrc
 10008  1AF1  0DF6               	rlf	__Umul8_16@word_mpld,f
 10009  1AF2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10010  1AF3  3EFF               	addlw	-1
 10011  1AF4  1D03               	skipz
 10012  1AF5  2AF0               	goto	u3165
 10013  1AF6  1003               	clrc
 10014  1AF7  0CF8               	rrf	__Umul8_16@multiplier,f
 10015  1AF8                     l2505:
 10016  1AF8  0878               	movf	__Umul8_16@multiplier,w
 10017  1AF9  1D03               	btfss	3,2
 10018  1AFA  2AFC               	goto	u3171
 10019  1AFB  2AFD               	goto	u3170
 10020  1AFC                     u3171:
 10021  1AFC  2AE5               	goto	l2501
 10022  1AFD                     u3170:
 10023  1AFD                     l2507:
 10024  1AFD  0875               	movf	__Umul8_16@product+1,w
 10025  1AFE  00F1               	movwf	?__Umul8_16+1
 10026  1AFF  0874               	movf	__Umul8_16@product,w
 10027  1B00  00F0               	movwf	?__Umul8_16
 10028  1B01                     l846:
 10029  1B01  0008               	return
 10030  1B02                     __end_of__Umul8_16:
 10031                           
 10032                           	psect	text24
 10033  1190                     __ptext24:	
 10034 ;; *************** function ___fldiv *****************
 10035 ;; Defined at:
 10036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  a               4   30[BANK0 ] unsigned int 
 10039 ;;  b               4   34[BANK0 ] unsigned int 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  grs             4   50[BANK0 ] unsigned long 
 10042 ;;  rem             4   43[BANK0 ] unsigned long 
 10043 ;;  new_exp         2   48[BANK0 ] int 
 10044 ;;  aexp            1   55[BANK0 ] unsigned char 
 10045 ;;  bexp            1   54[BANK0 ] unsigned char 
 10046 ;;  sign            1   47[BANK0 ] unsigned char 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  4   30[BANK0 ] unsigned char 
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0, btemp+1
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10056 ;;      Params:         0       8       0       0       0
 10057 ;;      Locals:         0      13       0       0       0
 10058 ;;      Temps:          0       5       0       0       0
 10059 ;;      Totals:         0      26       0       0       0
 10060 ;;Total ram usage:       26 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_mapear
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           
 10070                           ;psect for function ___fldiv
 10071  1190                     ___fldiv:
 10072  1190                     l3331:	
 10073                           ;incstack = 0
 10074                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10075                           
 10076  1190  1283               	bcf	3,5	;RP0=0, select bank0
 10077  1191  1303               	bcf	3,6	;RP1=0, select bank0
 10078  1192  0845               	movf	___fldiv@b+3,w
 10079  1193  3980               	andlw	128
 10080  1194  00C6               	movwf	??___fldiv
 10081  1195  0846               	movf	??___fldiv,w
 10082  1196  00CF               	movwf	___fldiv@sign
 10083  1197                     l3333:
 10084  1197  0845               	movf	___fldiv@b+3,w
 10085  1198  00C6               	movwf	??___fldiv
 10086  1199  0746               	addwf	??___fldiv,w
 10087  119A  00C7               	movwf	??___fldiv+1
 10088  119B  0847               	movf	??___fldiv+1,w
 10089  119C  00D6               	movwf	___fldiv@bexp
 10090  119D                     l3335:
 10091  119D  1FC4               	btfss	___fldiv@b+2,7
 10092  119E  29A0               	goto	u5341
 10093  119F  29A1               	goto	u5340
 10094  11A0                     u5341:
 10095  11A0  29A2               	goto	l3339
 10096  11A1                     u5340:
 10097  11A1                     l3337:
 10098  11A1  1456               	bsf	___fldiv@bexp,0
 10099  11A2                     l3339:
 10100  11A2  0856               	movf	___fldiv@bexp,w
 10101  11A3  1903               	btfsc	3,2
 10102  11A4  29A6               	goto	u5351
 10103  11A5  29A7               	goto	u5350
 10104  11A6                     u5351:
 10105  11A6  29B7               	goto	l3349
 10106  11A7                     u5350:
 10107  11A7                     l3341:
 10108  11A7  0A56               	incf	___fldiv@bexp,w
 10109  11A8  1D03               	btfss	3,2
 10110  11A9  29AB               	goto	u5361
 10111  11AA  29AC               	goto	u5360
 10112  11AB                     u5361:
 10113  11AB  29B4               	goto	l3345
 10114  11AC                     u5360:
 10115  11AC                     l3343:
 10116  11AC  3000               	movlw	0
 10117  11AD  00C5               	movwf	___fldiv@b+3
 10118  11AE  3000               	movlw	0
 10119  11AF  00C4               	movwf	___fldiv@b+2
 10120  11B0  3000               	movlw	0
 10121  11B1  00C3               	movwf	___fldiv@b+1
 10122  11B2  3000               	movlw	0
 10123  11B3  00C2               	movwf	___fldiv@b
 10124  11B4                     l3345:
 10125  11B4  17C4               	bsf	___fldiv@b+2,7
 10126  11B5                     l3347:
 10127  11B5  01C5               	clrf	___fldiv@b+3
 10128  11B6  29BF               	goto	l3351
 10129  11B7                     l3349:
 10130  11B7  3000               	movlw	0
 10131  11B8  00C5               	movwf	___fldiv@b+3
 10132  11B9  3000               	movlw	0
 10133  11BA  00C4               	movwf	___fldiv@b+2
 10134  11BB  3000               	movlw	0
 10135  11BC  00C3               	movwf	___fldiv@b+1
 10136  11BD  3000               	movlw	0
 10137  11BE  00C2               	movwf	___fldiv@b
 10138  11BF                     l3351:
 10139  11BF  0841               	movf	___fldiv@a+3,w
 10140  11C0  3980               	andlw	128
 10141  11C1  00C6               	movwf	??___fldiv
 10142  11C2  0846               	movf	??___fldiv,w
 10143  11C3  06CF               	xorwf	___fldiv@sign,f
 10144  11C4                     l3353:
 10145  11C4  0841               	movf	___fldiv@a+3,w
 10146  11C5  00C6               	movwf	??___fldiv
 10147  11C6  0746               	addwf	??___fldiv,w
 10148  11C7  00C7               	movwf	??___fldiv+1
 10149  11C8  0847               	movf	??___fldiv+1,w
 10150  11C9  00D7               	movwf	___fldiv@aexp
 10151  11CA                     l3355:
 10152  11CA  1FC0               	btfss	___fldiv@a+2,7
 10153  11CB  29CD               	goto	u5371
 10154  11CC  29CE               	goto	u5370
 10155  11CD                     u5371:
 10156  11CD  29CF               	goto	l3359
 10157  11CE                     u5370:
 10158  11CE                     l3357:
 10159  11CE  1457               	bsf	___fldiv@aexp,0
 10160  11CF                     l3359:
 10161  11CF  0857               	movf	___fldiv@aexp,w
 10162  11D0  1903               	btfsc	3,2
 10163  11D1  29D3               	goto	u5381
 10164  11D2  29D4               	goto	u5380
 10165  11D3                     u5381:
 10166  11D3  29E4               	goto	l3369
 10167  11D4                     u5380:
 10168  11D4                     l3361:
 10169  11D4  0A57               	incf	___fldiv@aexp,w
 10170  11D5  1D03               	btfss	3,2
 10171  11D6  29D8               	goto	u5391
 10172  11D7  29D9               	goto	u5390
 10173  11D8                     u5391:
 10174  11D8  29E1               	goto	l3365
 10175  11D9                     u5390:
 10176  11D9                     l3363:
 10177  11D9  3000               	movlw	0
 10178  11DA  00C1               	movwf	___fldiv@a+3
 10179  11DB  3000               	movlw	0
 10180  11DC  00C0               	movwf	___fldiv@a+2
 10181  11DD  3000               	movlw	0
 10182  11DE  00BF               	movwf	___fldiv@a+1
 10183  11DF  3000               	movlw	0
 10184  11E0  00BE               	movwf	___fldiv@a
 10185  11E1                     l3365:
 10186  11E1  17C0               	bsf	___fldiv@a+2,7
 10187  11E2                     l3367:
 10188  11E2  01C1               	clrf	___fldiv@a+3
 10189  11E3  29EC               	goto	l785
 10190  11E4                     l3369:
 10191  11E4  3000               	movlw	0
 10192  11E5  00C1               	movwf	___fldiv@a+3
 10193  11E6  3000               	movlw	0
 10194  11E7  00C0               	movwf	___fldiv@a+2
 10195  11E8  3000               	movlw	0
 10196  11E9  00BF               	movwf	___fldiv@a+1
 10197  11EA  3000               	movlw	0
 10198  11EB  00BE               	movwf	___fldiv@a
 10199  11EC                     l785:
 10200  11EC  0841               	movf	___fldiv@a+3,w
 10201  11ED  0440               	iorwf	___fldiv@a+2,w
 10202  11EE  043F               	iorwf	___fldiv@a+1,w
 10203  11EF  043E               	iorwf	___fldiv@a,w
 10204  11F0  1D03               	skipz
 10205  11F1  29F3               	goto	u5401
 10206  11F2  29F4               	goto	u5400
 10207  11F3                     u5401:
 10208  11F3  2A0D               	goto	l3379
 10209  11F4                     u5400:
 10210  11F4                     l3371:
 10211  11F4  3000               	movlw	0
 10212  11F5  00C5               	movwf	___fldiv@b+3
 10213  11F6  3000               	movlw	0
 10214  11F7  00C4               	movwf	___fldiv@b+2
 10215  11F8  3000               	movlw	0
 10216  11F9  00C3               	movwf	___fldiv@b+1
 10217  11FA  3000               	movlw	0
 10218  11FB  00C2               	movwf	___fldiv@b
 10219  11FC  3080               	movlw	128
 10220  11FD  04C4               	iorwf	___fldiv@b+2,f
 10221  11FE  307F               	movlw	127
 10222  11FF  04C5               	iorwf	___fldiv@b+3,f
 10223  1200                     l3373:
 10224  1200  084F               	movf	___fldiv@sign,w
 10225  1201  00C6               	movwf	??___fldiv
 10226  1202  0846               	movf	??___fldiv,w
 10227  1203  04C5               	iorwf	___fldiv@b+3,f
 10228  1204                     l3375:
 10229  1204  0845               	movf	___fldiv@b+3,w
 10230  1205  00C1               	movwf	?___fldiv+3
 10231  1206  0844               	movf	___fldiv@b+2,w
 10232  1207  00C0               	movwf	?___fldiv+2
 10233  1208  0843               	movf	___fldiv@b+1,w
 10234  1209  00BF               	movwf	?___fldiv+1
 10235  120A  0842               	movf	___fldiv@b,w
 10236  120B  00BE               	movwf	?___fldiv
 10237  120C  2B6C               	goto	l787
 10238  120D                     l3379:
 10239  120D  0856               	movf	___fldiv@bexp,w
 10240  120E  1D03               	btfss	3,2
 10241  120F  2A11               	goto	u5411
 10242  1210  2A12               	goto	u5410
 10243  1211                     u5411:
 10244  1211  2A1B               	goto	l3385
 10245  1212                     u5410:
 10246  1212                     l3381:
 10247  1212  3000               	movlw	0
 10248  1213  00C1               	movwf	?___fldiv+3
 10249  1214  3000               	movlw	0
 10250  1215  00C0               	movwf	?___fldiv+2
 10251  1216  3000               	movlw	0
 10252  1217  00BF               	movwf	?___fldiv+1
 10253  1218  3000               	movlw	0
 10254  1219  00BE               	movwf	?___fldiv
 10255  121A  2B6C               	goto	l787
 10256  121B                     l3385:
 10257  121B  0856               	movf	___fldiv@bexp,w
 10258  121C  00C6               	movwf	??___fldiv
 10259  121D  01C7               	clrf	??___fldiv+1
 10260  121E  0847               	movf	??___fldiv+1,w
 10261  121F  00C9               	movwf	??___fldiv+3
 10262  1220  0857               	movf	___fldiv@aexp,w
 10263  1221  0246               	subwf	??___fldiv,w
 10264  1222  00C8               	movwf	??___fldiv+2
 10265  1223  1C03               	skipc
 10266  1224  03C9               	decf	??___fldiv+3,f
 10267  1225  0848               	movf	??___fldiv+2,w
 10268  1226  3E7F               	addlw	127
 10269  1227  00D0               	movwf	___fldiv@new_exp
 10270  1228  0849               	movf	??___fldiv+3,w
 10271  1229  1803               	skipnc
 10272  122A  3E01               	addlw	1
 10273  122B  3E00               	addlw	0
 10274  122C  00D1               	movwf	___fldiv@new_exp+1
 10275  122D                     l3387:
 10276  122D  0845               	movf	___fldiv@b+3,w
 10277  122E  00CE               	movwf	___fldiv@rem+3
 10278  122F  0844               	movf	___fldiv@b+2,w
 10279  1230  00CD               	movwf	___fldiv@rem+2
 10280  1231  0843               	movf	___fldiv@b+1,w
 10281  1232  00CC               	movwf	___fldiv@rem+1
 10282  1233  0842               	movf	___fldiv@b,w
 10283  1234  00CB               	movwf	___fldiv@rem
 10284  1235                     l3389:
 10285  1235  3000               	movlw	0
 10286  1236  00C5               	movwf	___fldiv@b+3
 10287  1237  3000               	movlw	0
 10288  1238  00C4               	movwf	___fldiv@b+2
 10289  1239  3000               	movlw	0
 10290  123A  00C3               	movwf	___fldiv@b+1
 10291  123B  3000               	movlw	0
 10292  123C  00C2               	movwf	___fldiv@b
 10293  123D                     l3391:
 10294  123D  3000               	movlw	0
 10295  123E  00D5               	movwf	___fldiv@grs+3
 10296  123F  3000               	movlw	0
 10297  1240  00D4               	movwf	___fldiv@grs+2
 10298  1241  3000               	movlw	0
 10299  1242  00D3               	movwf	___fldiv@grs+1
 10300  1243  3000               	movlw	0
 10301  1244  00D2               	movwf	___fldiv@grs
 10302  1245                     l3393:
 10303  1245  01D7               	clrf	___fldiv@aexp
 10304  1246  2A91               	goto	l3413
 10305  1247                     l3395:
 10306  1247  0857               	movf	___fldiv@aexp,w
 10307  1248  1903               	btfsc	3,2
 10308  1249  2A4B               	goto	u5421
 10309  124A  2A4C               	goto	u5420
 10310  124B                     u5421:
 10311  124B  2A6C               	goto	l3405
 10312  124C                     u5420:
 10313  124C                     l3397:
 10314  124C  3001               	movlw	1
 10315  124D  00C6               	movwf	??___fldiv
 10316  124E                     u5435:
 10317  124E  1003               	clrc
 10318  124F  0DCB               	rlf	___fldiv@rem,f
 10319  1250  0DCC               	rlf	___fldiv@rem+1,f
 10320  1251  0DCD               	rlf	___fldiv@rem+2,f
 10321  1252  0DCE               	rlf	___fldiv@rem+3,f
 10322  1253  0BC6               	decfsz	??___fldiv,f
 10323  1254  2A4E               	goto	u5435
 10324  1255  3001               	movlw	1
 10325  1256  00C6               	movwf	??___fldiv
 10326  1257                     u5445:
 10327  1257  1003               	clrc
 10328  1258  0DC2               	rlf	___fldiv@b,f
 10329  1259  0DC3               	rlf	___fldiv@b+1,f
 10330  125A  0DC4               	rlf	___fldiv@b+2,f
 10331  125B  0DC5               	rlf	___fldiv@b+3,f
 10332  125C  0BC6               	decfsz	??___fldiv,f
 10333  125D  2A57               	goto	u5445
 10334  125E                     l3399:
 10335  125E  1FD5               	btfss	___fldiv@grs+3,7
 10336  125F  2A61               	goto	u5451
 10337  1260  2A62               	goto	u5450
 10338  1261                     u5451:
 10339  1261  2A63               	goto	l3403
 10340  1262                     u5450:
 10341  1262                     l3401:
 10342  1262  1442               	bsf	___fldiv@b,0
 10343  1263                     l3403:
 10344  1263  3001               	movlw	1
 10345  1264  00C6               	movwf	??___fldiv
 10346  1265                     u5465:
 10347  1265  1003               	clrc
 10348  1266  0DD2               	rlf	___fldiv@grs,f
 10349  1267  0DD3               	rlf	___fldiv@grs+1,f
 10350  1268  0DD4               	rlf	___fldiv@grs+2,f
 10351  1269  0DD5               	rlf	___fldiv@grs+3,f
 10352  126A  0BC6               	decfsz	??___fldiv,f
 10353  126B  2A65               	goto	u5465
 10354  126C                     l3405:
 10355  126C  0841               	movf	___fldiv@a+3,w
 10356  126D  024E               	subwf	___fldiv@rem+3,w
 10357  126E  1D03               	skipz
 10358  126F  2A7A               	goto	u5475
 10359  1270  0840               	movf	___fldiv@a+2,w
 10360  1271  024D               	subwf	___fldiv@rem+2,w
 10361  1272  1D03               	skipz
 10362  1273  2A7A               	goto	u5475
 10363  1274  083F               	movf	___fldiv@a+1,w
 10364  1275  024C               	subwf	___fldiv@rem+1,w
 10365  1276  1D03               	skipz
 10366  1277  2A7A               	goto	u5475
 10367  1278  083E               	movf	___fldiv@a,w
 10368  1279  024B               	subwf	___fldiv@rem,w
 10369  127A                     u5475:
 10370  127A  1C03               	skipc
 10371  127B  2A7D               	goto	u5471
 10372  127C  2A7E               	goto	u5470
 10373  127D                     u5471:
 10374  127D  2A8D               	goto	l3411
 10375  127E                     u5470:
 10376  127E                     l3407:
 10377  127E  1755               	bsf	___fldiv@grs+3,6
 10378  127F                     l3409:
 10379  127F  083E               	movf	___fldiv@a,w
 10380  1280  02CB               	subwf	___fldiv@rem,f
 10381  1281  083F               	movf	___fldiv@a+1,w
 10382  1282  1C03               	skipc
 10383  1283  0F3F               	incfsz	___fldiv@a+1,w
 10384  1284  02CC               	subwf	___fldiv@rem+1,f
 10385  1285  0840               	movf	___fldiv@a+2,w
 10386  1286  1C03               	skipc
 10387  1287  0F40               	incfsz	___fldiv@a+2,w
 10388  1288  02CD               	subwf	___fldiv@rem+2,f
 10389  1289  0841               	movf	___fldiv@a+3,w
 10390  128A  1C03               	skipc
 10391  128B  0F41               	incfsz	___fldiv@a+3,w
 10392  128C  02CE               	subwf	___fldiv@rem+3,f
 10393  128D                     l3411:
 10394  128D  3001               	movlw	1
 10395  128E  00C6               	movwf	??___fldiv
 10396  128F  0846               	movf	??___fldiv,w
 10397  1290  07D7               	addwf	___fldiv@aexp,f
 10398  1291                     l3413:
 10399  1291  301A               	movlw	26
 10400  1292  0257               	subwf	___fldiv@aexp,w
 10401  1293  1C03               	skipc
 10402  1294  2A96               	goto	u5481
 10403  1295  2A97               	goto	u5480
 10404  1296                     u5481:
 10405  1296  2A47               	goto	l3395
 10406  1297                     u5480:
 10407  1297                     l3415:
 10408  1297  084E               	movf	___fldiv@rem+3,w
 10409  1298  044D               	iorwf	___fldiv@rem+2,w
 10410  1299  044C               	iorwf	___fldiv@rem+1,w
 10411  129A  044B               	iorwf	___fldiv@rem,w
 10412  129B  1903               	skipnz
 10413  129C  2A9E               	goto	u5491
 10414  129D  2A9F               	goto	u5490
 10415  129E                     u5491:
 10416  129E  2ABE               	goto	l3429
 10417  129F                     u5490:
 10418  129F                     l3417:
 10419  129F  1452               	bsf	___fldiv@grs,0
 10420  12A0  2ABE               	goto	l3429
 10421  12A1                     l3419:
 10422  12A1  3001               	movlw	1
 10423  12A2  00C6               	movwf	??___fldiv
 10424  12A3                     u5505:
 10425  12A3  1003               	clrc
 10426  12A4  0DC2               	rlf	___fldiv@b,f
 10427  12A5  0DC3               	rlf	___fldiv@b+1,f
 10428  12A6  0DC4               	rlf	___fldiv@b+2,f
 10429  12A7  0DC5               	rlf	___fldiv@b+3,f
 10430  12A8  0BC6               	decfsz	??___fldiv,f
 10431  12A9  2AA3               	goto	u5505
 10432  12AA                     l3421:
 10433  12AA  1FD5               	btfss	___fldiv@grs+3,7
 10434  12AB  2AAD               	goto	u5511
 10435  12AC  2AAE               	goto	u5510
 10436  12AD                     u5511:
 10437  12AD  2AAF               	goto	l3425
 10438  12AE                     u5510:
 10439  12AE                     l3423:
 10440  12AE  1442               	bsf	___fldiv@b,0
 10441  12AF                     l3425:
 10442  12AF  3001               	movlw	1
 10443  12B0  00C6               	movwf	??___fldiv
 10444  12B1                     u5525:
 10445  12B1  1003               	clrc
 10446  12B2  0DD2               	rlf	___fldiv@grs,f
 10447  12B3  0DD3               	rlf	___fldiv@grs+1,f
 10448  12B4  0DD4               	rlf	___fldiv@grs+2,f
 10449  12B5  0DD5               	rlf	___fldiv@grs+3,f
 10450  12B6  0BC6               	decfsz	??___fldiv,f
 10451  12B7  2AB1               	goto	u5525
 10452  12B8                     l3427:
 10453  12B8  30FF               	movlw	255
 10454  12B9  07D0               	addwf	___fldiv@new_exp,f
 10455  12BA  1803               	skipnc
 10456  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 10457  12BC  30FF               	movlw	255
 10458  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 10459  12BE                     l3429:
 10460  12BE  1FC4               	btfss	___fldiv@b+2,7
 10461  12BF  2AC1               	goto	u5531
 10462  12C0  2AC2               	goto	u5530
 10463  12C1                     u5531:
 10464  12C1  2AA1               	goto	l3419
 10465  12C2                     u5530:
 10466  12C2                     l3431:
 10467  12C2  01D7               	clrf	___fldiv@aexp
 10468  12C3                     l3433:
 10469  12C3  1FD5               	btfss	___fldiv@grs+3,7
 10470  12C4  2AC6               	goto	u5541
 10471  12C5  2AC7               	goto	u5540
 10472  12C6                     u5541:
 10473  12C6  2AE3               	goto	l3441
 10474  12C7                     u5540:
 10475  12C7                     l3435:
 10476  12C7  30FF               	movlw	255
 10477  12C8  0552               	andwf	___fldiv@grs,w
 10478  12C9  00C6               	movwf	??___fldiv
 10479  12CA  30FF               	movlw	255
 10480  12CB  0553               	andwf	___fldiv@grs+1,w
 10481  12CC  00C7               	movwf	??___fldiv+1
 10482  12CD  30FF               	movlw	255
 10483  12CE  0554               	andwf	___fldiv@grs+2,w
 10484  12CF  00C8               	movwf	??___fldiv+2
 10485  12D0  307F               	movlw	127
 10486  12D1  0555               	andwf	___fldiv@grs+3,w
 10487  12D2  00C9               	movwf	??___fldiv+3
 10488  12D3  0849               	movf	??___fldiv+3,w
 10489  12D4  0448               	iorwf	??___fldiv+2,w
 10490  12D5  0447               	iorwf	??___fldiv+1,w
 10491  12D6  0446               	iorwf	??___fldiv,w
 10492  12D7  1903               	skipnz
 10493  12D8  2ADA               	goto	u5551
 10494  12D9  2ADB               	goto	u5550
 10495  12DA                     u5551:
 10496  12DA  2ADE               	goto	l801
 10497  12DB                     u5550:
 10498  12DB                     l3437:
 10499  12DB  01D7               	clrf	___fldiv@aexp
 10500  12DC  0AD7               	incf	___fldiv@aexp,f
 10501  12DD  2AE3               	goto	l3441
 10502  12DE                     l801:
 10503  12DE  1C42               	btfss	___fldiv@b,0
 10504  12DF  2AE1               	goto	u5561
 10505  12E0  2AE2               	goto	u5560
 10506  12E1                     u5561:
 10507  12E1  2AE3               	goto	l3441
 10508  12E2                     u5560:
 10509  12E2  2ADB               	goto	l3437
 10510  12E3                     l3441:
 10511  12E3  0857               	movf	___fldiv@aexp,w
 10512  12E4  1903               	btfsc	3,2
 10513  12E5  2AE7               	goto	u5571
 10514  12E6  2AE8               	goto	u5570
 10515  12E7                     u5571:
 10516  12E7  2B19               	goto	l3451
 10517  12E8                     u5570:
 10518  12E8                     l3443:
 10519  12E8  3001               	movlw	1
 10520  12E9  07C2               	addwf	___fldiv@b,f
 10521  12EA  3000               	movlw	0
 10522  12EB  1803               	skipnc
 10523  12EC  3001               	movlw	1
 10524  12ED  07C3               	addwf	___fldiv@b+1,f
 10525  12EE  3000               	movlw	0
 10526  12EF  1803               	skipnc
 10527  12F0  3001               	movlw	1
 10528  12F1  07C4               	addwf	___fldiv@b+2,f
 10529  12F2  3000               	movlw	0
 10530  12F3  1803               	skipnc
 10531  12F4  3001               	movlw	1
 10532  12F5  07C5               	addwf	___fldiv@b+3,f
 10533  12F6                     l3445:
 10534  12F6  1C45               	btfss	___fldiv@b+3,0
 10535  12F7  2AF9               	goto	u5581
 10536  12F8  2AFA               	goto	u5580
 10537  12F9                     u5581:
 10538  12F9  2B19               	goto	l3451
 10539  12FA                     u5580:
 10540  12FA                     l3447:
 10541  12FA  0842               	movf	___fldiv@b,w
 10542  12FB  00C6               	movwf	??___fldiv
 10543  12FC  0843               	movf	___fldiv@b+1,w
 10544  12FD  00C7               	movwf	??___fldiv+1
 10545  12FE  0844               	movf	___fldiv@b+2,w
 10546  12FF  00C8               	movwf	??___fldiv+2
 10547  1300  0845               	movf	___fldiv@b+3,w
 10548  1301  00C9               	movwf	??___fldiv+3
 10549  1302  3001               	movlw	1
 10550  1303  00CA               	movwf	??___fldiv+4
 10551  1304                     u5595:
 10552  1304  0D49               	rlf	??___fldiv+3,w
 10553  1305  0CC9               	rrf	??___fldiv+3,f
 10554  1306  0CC8               	rrf	??___fldiv+2,f
 10555  1307  0CC7               	rrf	??___fldiv+1,f
 10556  1308  0CC6               	rrf	??___fldiv,f
 10557  1309                     u5590:
 10558  1309  0BCA               	decfsz	??___fldiv+4,f
 10559  130A  2B04               	goto	u5595
 10560  130B  0849               	movf	??___fldiv+3,w
 10561  130C  00C5               	movwf	___fldiv@b+3
 10562  130D  0848               	movf	??___fldiv+2,w
 10563  130E  00C4               	movwf	___fldiv@b+2
 10564  130F  0847               	movf	??___fldiv+1,w
 10565  1310  00C3               	movwf	___fldiv@b+1
 10566  1311  0846               	movf	??___fldiv,w
 10567  1312  00C2               	movwf	___fldiv@b
 10568  1313                     l3449:
 10569  1313  3001               	movlw	1
 10570  1314  07D0               	addwf	___fldiv@new_exp,f
 10571  1315  1803               	skipnc
 10572  1316  0AD1               	incf	___fldiv@new_exp+1,f
 10573  1317  3000               	movlw	0
 10574  1318  07D1               	addwf	___fldiv@new_exp+1,f
 10575  1319                     l3451:
 10576  1319  0851               	movf	___fldiv@new_exp+1,w
 10577  131A  3A80               	xorlw	128
 10578  131B  00FF               	movwf	btemp+1
 10579  131C  3080               	movlw	128
 10580  131D  027F               	subwf	btemp+1,w
 10581  131E  1D03               	skipz
 10582  131F  2B22               	goto	u5605
 10583  1320  30FF               	movlw	255
 10584  1321  0250               	subwf	___fldiv@new_exp,w
 10585  1322                     u5605:
 10586  1322  1C03               	skipc
 10587  1323  2B25               	goto	u5601
 10588  1324  2B26               	goto	u5600
 10589  1325                     u5601:
 10590  1325  2B34               	goto	l3455
 10591  1326                     u5600:
 10592  1326                     l3453:
 10593  1326  30FF               	movlw	255
 10594  1327  1283               	bcf	3,5	;RP0=0, select bank0
 10595  1328  1303               	bcf	3,6	;RP1=0, select bank0
 10596  1329  00D0               	movwf	___fldiv@new_exp
 10597  132A  3000               	movlw	0
 10598  132B  00D1               	movwf	___fldiv@new_exp+1
 10599  132C  3000               	movlw	0
 10600  132D  00C5               	movwf	___fldiv@b+3
 10601  132E  3000               	movlw	0
 10602  132F  00C4               	movwf	___fldiv@b+2
 10603  1330  3000               	movlw	0
 10604  1331  00C3               	movwf	___fldiv@b+1
 10605  1332  3000               	movlw	0
 10606  1333  00C2               	movwf	___fldiv@b
 10607  1334                     l3455:
 10608  1334  1283               	bcf	3,5	;RP0=0, select bank0
 10609  1335  1303               	bcf	3,6	;RP1=0, select bank0
 10610  1336  0851               	movf	___fldiv@new_exp+1,w
 10611  1337  3A80               	xorlw	128
 10612  1338  00FF               	movwf	btemp+1
 10613  1339  3080               	movlw	128
 10614  133A  027F               	subwf	btemp+1,w
 10615  133B  1D03               	skipz
 10616  133C  2B3F               	goto	u5615
 10617  133D  3001               	movlw	1
 10618  133E  0250               	subwf	___fldiv@new_exp,w
 10619  133F                     u5615:
 10620  133F  1803               	skipnc
 10621  1340  2B42               	goto	u5611
 10622  1341  2B43               	goto	u5610
 10623  1342                     u5611:
 10624  1342  2B50               	goto	l807
 10625  1343                     u5610:
 10626  1343                     l3457:
 10627  1343  1283               	bcf	3,5	;RP0=0, select bank0
 10628  1344  1303               	bcf	3,6	;RP1=0, select bank0
 10629  1345  01D0               	clrf	___fldiv@new_exp
 10630  1346  01D1               	clrf	___fldiv@new_exp+1
 10631  1347                     l3459:
 10632  1347  3000               	movlw	0
 10633  1348  00C5               	movwf	___fldiv@b+3
 10634  1349  3000               	movlw	0
 10635  134A  00C4               	movwf	___fldiv@b+2
 10636  134B  3000               	movlw	0
 10637  134C  00C3               	movwf	___fldiv@b+1
 10638  134D  3000               	movlw	0
 10639  134E  00C2               	movwf	___fldiv@b
 10640  134F                     l3461:
 10641  134F  01CF               	clrf	___fldiv@sign
 10642  1350                     l807:
 10643  1350  1283               	bcf	3,5	;RP0=0, select bank0
 10644  1351  1303               	bcf	3,6	;RP1=0, select bank0
 10645  1352  0850               	movf	___fldiv@new_exp,w
 10646  1353  00C6               	movwf	??___fldiv
 10647  1354  0846               	movf	??___fldiv,w
 10648  1355  00D6               	movwf	___fldiv@bexp
 10649  1356                     l3463:
 10650  1356  1C56               	btfss	___fldiv@bexp,0
 10651  1357  2B59               	goto	u5621
 10652  1358  2B5A               	goto	u5620
 10653  1359                     u5621:
 10654  1359  2B5C               	goto	l3467
 10655  135A                     u5620:
 10656  135A                     l3465:
 10657  135A  17C4               	bsf	___fldiv@b+2,7
 10658  135B  2B60               	goto	l809
 10659  135C                     l3467:
 10660  135C  307F               	movlw	127
 10661  135D  00C6               	movwf	??___fldiv
 10662  135E  0846               	movf	??___fldiv,w
 10663  135F  05C4               	andwf	___fldiv@b+2,f
 10664  1360                     l809:
 10665  1360  0856               	movf	___fldiv@bexp,w
 10666  1361  00C6               	movwf	??___fldiv
 10667  1362  1003               	clrc
 10668  1363  0C46               	rrf	??___fldiv,w
 10669  1364  00C7               	movwf	??___fldiv+1
 10670  1365  0847               	movf	??___fldiv+1,w
 10671  1366  00C5               	movwf	___fldiv@b+3
 10672  1367  084F               	movf	___fldiv@sign,w
 10673  1368  00C6               	movwf	??___fldiv
 10674  1369  0846               	movf	??___fldiv,w
 10675  136A  04C5               	iorwf	___fldiv@b+3,f
 10676  136B  2A04               	goto	l3375
 10677  136C                     l787:
 10678  136C  0008               	return
 10679  136D                     __end_of___fldiv:
 10680                           
 10681                           	psect	text25
 10682  1A4F                     __ptext25:	
 10683 ;; *************** function _enviocadena *****************
 10684 ;; Defined at:
 10685 ;;		line 44 in file "usart.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  cadena          1    wreg     PTR unsigned char 
 10688 ;;		 -> volt(16), 
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;  cadena          1    2[COMMON] PTR unsigned char 
 10691 ;;		 -> volt(16), 
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10701 ;;      Params:         0       0       0       0       0
 10702 ;;      Locals:         1       0       0       0       0
 10703 ;;      Temps:          1       0       0       0       0
 10704 ;;      Totals:         2       0       0       0       0
 10705 ;;Total ram usage:        2 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:    1
 10708 ;; This function calls:
 10709 ;;		_enviocaracter
 10710 ;; This function is called by:
 10711 ;;		_main
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           
 10716                           ;psect for function _enviocadena
 10717  1A4F                     _enviocadena:
 10718                           
 10719                           ;incstack = 0
 10720                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10721                           ;enviocadena@cadena stored from wreg
 10722  1A4F  00F2               	movwf	enviocadena@cadena
 10723  1A50                     l3807:
 10724                           
 10725                           ;usart.c: 45:     while (*cadena != 0){
 10726  1A50  2A5D               	goto	l3813
 10727  1A51                     l3809:
 10728                           
 10729                           ;usart.c: 46:       enviocaracter(*cadena);
 10730  1A51  0872               	movf	enviocadena@cadena,w
 10731  1A52  0084               	movwf	4
 10732  1A53  0800               	movf	0,w
 10733  1A54  160A  118A  2005  160A  158A  	fcall	_enviocaracter
 10734  1A59                     l3811:
 10735                           
 10736                           ;usart.c: 47:       cadena++;
 10737  1A59  3001               	movlw	1
 10738  1A5A  00F1               	movwf	??_enviocadena
 10739  1A5B  0871               	movf	??_enviocadena,w
 10740  1A5C  07F2               	addwf	enviocadena@cadena,f
 10741  1A5D                     l3813:
 10742                           
 10743                           ;usart.c: 45:     while (*cadena != 0){
 10744  1A5D  0872               	movf	enviocadena@cadena,w
 10745  1A5E  0084               	movwf	4
 10746  1A5F  1383               	bcf	3,7	;select IRP bank0
 10747  1A60  0800               	movf	0,w
 10748  1A61  1D03               	btfss	3,2
 10749  1A62  2A64               	goto	u6231
 10750  1A63  2A65               	goto	u6230
 10751  1A64                     u6231:
 10752  1A64  2A51               	goto	l3809
 10753  1A65                     u6230:
 10754  1A65                     l212:
 10755                           
 10756                           ;usart.c: 49:     if (PIR1bits.TXIF){
 10757  1A65  1283               	bcf	3,5	;RP0=0, select bank0
 10758  1A66  1303               	bcf	3,6	;RP1=0, select bank0
 10759  1A67  1E0C               	btfss	12,4	;volatile
 10760  1A68  2A6A               	goto	u6241
 10761  1A69  2A6B               	goto	u6240
 10762  1A6A                     u6241:
 10763  1A6A  2A6D               	goto	l214
 10764  1A6B                     u6240:
 10765  1A6B                     l3815:
 10766                           
 10767                           ;usart.c: 50:             TXREG = 13;
 10768  1A6B  300D               	movlw	13
 10769  1A6C  0099               	movwf	25	;volatile
 10770  1A6D                     l214:
 10771  1A6D  0008               	return
 10772  1A6E                     __end_of_enviocadena:
 10773                           
 10774                           	psect	text26
 10775  1005                     __ptext26:	
 10776 ;; *************** function _enviocaracter *****************
 10777 ;; Defined at:
 10778 ;;		line 35 in file "usart.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;  a               1    wreg     unsigned char 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  a               1    0[COMMON] unsigned char 
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  1    wreg      void 
 10785 ;; Registers used:
 10786 ;;		wreg
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10792 ;;      Params:         0       0       0       0       0
 10793 ;;      Locals:         1       0       0       0       0
 10794 ;;      Temps:          0       0       0       0       0
 10795 ;;      Totals:         1       0       0       0       0
 10796 ;;Total ram usage:        1 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; This function calls:
 10799 ;;		Nothing
 10800 ;; This function is called by:
 10801 ;;		_enviocadena
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           
 10806                           ;psect for function _enviocaracter
 10807  1005                     _enviocaracter:
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _enviocaracter: [wreg]
 10811                           ;enviocaracter@a stored from wreg
 10812  1005  00F0               	movwf	enviocaracter@a
 10813  1006                     l3013:
 10814  1006                     l203:	
 10815                           ;usart.c: 38:     }
 10816                           
 10817                           
 10818                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
 10819  1006  1683               	bsf	3,5	;RP0=1, select bank1
 10820  1007  1303               	bcf	3,6	;RP1=0, select bank1
 10821  1008  1C98               	btfss	24,1	;volatile
 10822  1009  280B               	goto	u4411
 10823  100A  280C               	goto	u4410
 10824  100B                     u4411:
 10825  100B  2806               	goto	l203
 10826  100C                     u4410:
 10827  100C                     l205:
 10828                           
 10829                           ;usart.c: 39:     if (PIR1bits.TXIF){
 10830  100C  1283               	bcf	3,5	;RP0=0, select bank0
 10831  100D  1303               	bcf	3,6	;RP1=0, select bank0
 10832  100E  1E0C               	btfss	12,4	;volatile
 10833  100F  2811               	goto	u4421
 10834  1010  2812               	goto	u4420
 10835  1011                     u4421:
 10836  1011  2814               	goto	l207
 10837  1012                     u4420:
 10838  1012                     l3015:
 10839                           
 10840                           ;usart.c: 40:             TXREG = a;
 10841  1012  0870               	movf	enviocaracter@a,w
 10842  1013  0099               	movwf	25	;volatile
 10843  1014                     l207:
 10844  1014  0008               	return
 10845  1015                     __end_of_enviocaracter:
 10846                           
 10847                           	psect	text27
 10848  1A11                     __ptext27:	
 10849 ;; *************** function _adc_canal *****************
 10850 ;; Defined at:
 10851 ;;		line 11 in file "adc_canal.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  canal           1    wreg     unsigned char 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  canal           1    1[COMMON] unsigned char 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      unsigned char 
 10858 ;; Registers used:
 10859 ;;		wreg, status,2, status,0
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10865 ;;      Params:         0       0       0       0       0
 10866 ;;      Locals:         1       0       0       0       0
 10867 ;;      Temps:          1       0       0       0       0
 10868 ;;      Totals:         2       0       0       0       0
 10869 ;;Total ram usage:        2 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; This function calls:
 10872 ;;		Nothing
 10873 ;; This function is called by:
 10874 ;;		_main
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           
 10879                           ;psect for function _adc_canal
 10880  1A11                     _adc_canal:
 10881                           
 10882                           ;incstack = 0
 10883                           ; Regs used in _adc_canal: [wreg+status,2+status,0]
 10884                           ;adc_canal@canal stored from wreg
 10885  1A11  00F1               	movwf	adc_canal@canal
 10886  1A12                     l3563:
 10887                           
 10888                           ;adc_canal.c: 12:     ADCON0bits.CHS = canal;
 10889  1A12  0871               	movf	adc_canal@canal,w
 10890  1A13  00F0               	movwf	??_adc_canal
 10891  1A14  0DF0               	rlf	??_adc_canal,f
 10892  1A15  0DF0               	rlf	??_adc_canal,f
 10893  1A16  1283               	bcf	3,5	;RP0=0, select bank0
 10894  1A17  1303               	bcf	3,6	;RP1=0, select bank0
 10895  1A18  081F               	movf	31,w	;volatile
 10896  1A19  0670               	xorwf	??_adc_canal,w
 10897  1A1A  39C3               	andlw	-61
 10898  1A1B  0670               	xorwf	??_adc_canal,w
 10899  1A1C  009F               	movwf	31	;volatile
 10900  1A1D                     l3565:
 10901                           
 10902                           ;adc_canal.c: 13:     return ADRESH;
 10903  1A1D  081E               	movf	30,w	;volatile
 10904  1A1E                     l173:
 10905  1A1E  0008               	return
 10906  1A1F                     __end_of_adc_canal:
 10907                           
 10908                           	psect	text28
 10909  1A05                     __ptext28:	
 10910 ;; *************** function _adc_c *****************
 10911 ;; Defined at:
 10912 ;;		line 11 in file "adc_c.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10926 ;;      Params:         0       0       0       0       0
 10927 ;;      Locals:         0       0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0
 10929 ;;      Totals:         0       0       0       0       0
 10930 ;;Total ram usage:        0 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_main
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           
 10940                           ;psect for function _adc_c
 10941  1A05                     _adc_c:
 10942  1A05                     l3551:	
 10943                           ;incstack = 0
 10944                           ; Regs used in _adc_c: [wreg+status,2+status,0]
 10945                           
 10946                           
 10947                           ;adc_c.c: 13:     ADCON0bits.ADCS = 0;
 10948  1A05  303F               	movlw	-193
 10949  1A06  1283               	bcf	3,5	;RP0=0, select bank0
 10950  1A07  1303               	bcf	3,6	;RP1=0, select bank0
 10951  1A08  059F               	andwf	31,f	;volatile
 10952  1A09                     l3553:
 10953                           
 10954                           ;adc_c.c: 14:     ADCON0bits.CHS0 = 0;
 10955  1A09  111F               	bcf	31,2	;volatile
 10956  1A0A                     l3555:
 10957                           
 10958                           ;adc_c.c: 15:     ADCON0bits.ADON = 1;
 10959  1A0A  141F               	bsf	31,0	;volatile
 10960  1A0B                     l3557:
 10961                           
 10962                           ;adc_c.c: 16:     ADCON1bits.VCFG1 = 0;
 10963  1A0B  1683               	bsf	3,5	;RP0=1, select bank1
 10964  1A0C  1303               	bcf	3,6	;RP1=0, select bank1
 10965  1A0D  129F               	bcf	31,5	;volatile
 10966  1A0E                     l3559:
 10967                           
 10968                           ;adc_c.c: 17:     ADCON1bits.VCFG0 = 0;
 10969  1A0E  121F               	bcf	31,4	;volatile
 10970  1A0F                     l3561:
 10971                           
 10972                           ;adc_c.c: 18:     ADCON1bits.ADFM = 0;
 10973  1A0F  139F               	bcf	31,7	;volatile
 10974  1A10                     l166:
 10975  1A10  0008               	return
 10976  1A11                     __end_of_adc_c:
 10977                           
 10978                           	psect	text29
 10979  1B7A                     __ptext29:	
 10980 ;; *************** function _Lcd_Write_String *****************
 10981 ;; Defined at:
 10982 ;;		line 104 in file "LCD8bits.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  a               2    3[COMMON] PTR unsigned char 
 10985 ;;		 -> volt(16), STR_1(11), 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  i               2    8[COMMON] int 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      void 
 10990 ;; Registers used:
 10991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10997 ;;      Params:         2       0       0       0       0
 10998 ;;      Locals:         2       0       0       0       0
 10999 ;;      Temps:          3       0       0       0       0
 11000 ;;      Totals:         7       0       0       0       0
 11001 ;;Total ram usage:        7 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    2
 11004 ;; This function calls:
 11005 ;;		_Lcd_Write_Char
 11006 ;; This function is called by:
 11007 ;;		_main
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           
 11012                           ;psect for function _Lcd_Write_String
 11013  1B7A                     _Lcd_Write_String:
 11014  1B7A                     l3539:	
 11015                           ;incstack = 0
 11016                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11017                           
 11018                           
 11019                           ;LCD8bits.c: 105:     int i;;LCD8bits.c: 106:     for (i = 0; a[i] != '\0'; i++)
 11020  1B7A  01F8               	clrf	Lcd_Write_String@i
 11021  1B7B  01F9               	clrf	Lcd_Write_String@i+1
 11022  1B7C  2B9F               	goto	l3545
 11023  1B7D                     l3541:
 11024                           
 11025                           ;LCD8bits.c: 107:         Lcd_Write_Char(a[i]);
 11026  1B7D  0878               	movf	Lcd_Write_String@i,w
 11027  1B7E  0773               	addwf	Lcd_Write_String@a,w
 11028  1B7F  00F6               	movwf	??_Lcd_Write_String+1
 11029  1B80  0874               	movf	Lcd_Write_String@a+1,w
 11030  1B81  00F5               	movwf	??_Lcd_Write_String
 11031  1B82  1803               	skipnc
 11032  1B83  0AF5               	incf	??_Lcd_Write_String,f
 11033  1B84  1FF8               	btfss	Lcd_Write_String@i,7
 11034  1B85  2B87               	goto	u5790
 11035  1B86  03F5               	decf	??_Lcd_Write_String,f
 11036  1B87                     u5790:
 11037  1B87  0875               	movf	??_Lcd_Write_String,w
 11038  1B88  00F7               	movwf	??_Lcd_Write_String+2
 11039  1B89  0877               	movf	??_Lcd_Write_String+2,w
 11040  1B8A  1283               	bcf	3,5	;RP0=0, select bank0
 11041  1B8B  1303               	bcf	3,6	;RP1=0, select bank0
 11042  1B8C  00FF               	movwf	btemp+1
 11043  1B8D  0876               	movf	??_Lcd_Write_String+1,w
 11044  1B8E  0084               	movwf	4
 11045  1B8F  160A  158A  2000  160A  158A  	fcall	stringtab
 11046  1B94  160A  158A  221F  160A  158A  	fcall	_Lcd_Write_Char
 11047  1B99                     l3543:
 11048  1B99  3001               	movlw	1
 11049  1B9A  07F8               	addwf	Lcd_Write_String@i,f
 11050  1B9B  1803               	skipnc
 11051  1B9C  0AF9               	incf	Lcd_Write_String@i+1,f
 11052  1B9D  3000               	movlw	0
 11053  1B9E  07F9               	addwf	Lcd_Write_String@i+1,f
 11054  1B9F                     l3545:
 11055  1B9F  0878               	movf	Lcd_Write_String@i,w
 11056  1BA0  0773               	addwf	Lcd_Write_String@a,w
 11057  1BA1  00F6               	movwf	??_Lcd_Write_String+1
 11058  1BA2  0874               	movf	Lcd_Write_String@a+1,w
 11059  1BA3  00F5               	movwf	??_Lcd_Write_String
 11060  1BA4  1803               	skipnc
 11061  1BA5  0AF5               	incf	??_Lcd_Write_String,f
 11062  1BA6  1FF8               	btfss	Lcd_Write_String@i,7
 11063  1BA7  2BA9               	goto	u5800
 11064  1BA8  03F5               	decf	??_Lcd_Write_String,f
 11065  1BA9                     u5800:
 11066  1BA9  0875               	movf	??_Lcd_Write_String,w
 11067  1BAA  00F7               	movwf	??_Lcd_Write_String+2
 11068  1BAB  0877               	movf	??_Lcd_Write_String+2,w
 11069  1BAC  1283               	bcf	3,5	;RP0=0, select bank0
 11070  1BAD  1303               	bcf	3,6	;RP1=0, select bank0
 11071  1BAE  00FF               	movwf	btemp+1
 11072  1BAF  0876               	movf	??_Lcd_Write_String+1,w
 11073  1BB0  0084               	movwf	4
 11074  1BB1  160A  158A  2000  160A  158A  	fcall	stringtab
 11075  1BB6  3A00               	xorlw	0
 11076  1BB7  1D03               	skipz
 11077  1BB8  2BBA               	goto	u5811
 11078  1BB9  2BBB               	goto	u5810
 11079  1BBA                     u5811:
 11080  1BBA  2B7D               	goto	l3541
 11081  1BBB                     u5810:
 11082  1BBB                     l67:
 11083  1BBB  0008               	return
 11084  1BBC                     __end_of_Lcd_Write_String:
 11085                           
 11086                           	psect	text30
 11087  1A1F                     __ptext30:	
 11088 ;; *************** function _Lcd_Write_Char *****************
 11089 ;; Defined at:
 11090 ;;		line 96 in file "LCD8bits.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  a               1    wreg     unsigned char 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  a               1    2[COMMON] unsigned char 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		wreg, status,2, status,0, pclath, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11104 ;;      Params:         0       0       0       0       0
 11105 ;;      Locals:         1       0       0       0       0
 11106 ;;      Temps:          1       0       0       0       0
 11107 ;;      Totals:         2       0       0       0       0
 11108 ;;Total ram usage:        2 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:    1
 11111 ;; This function calls:
 11112 ;;		_Lcd_Port
 11113 ;; This function is called by:
 11114 ;;		_Lcd_Write_String
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118                           
 11119                           ;psect for function _Lcd_Write_Char
 11120  1A1F                     _Lcd_Write_Char:
 11121                           
 11122                           ;incstack = 0
 11123                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 11124                           ;Lcd_Write_Char@a stored from wreg
 11125  1A1F  00F2               	movwf	Lcd_Write_Char@a
 11126  1A20                     l3003:
 11127                           
 11128                           ;LCD8bits.c: 97:     RC0 = 1;
 11129  1A20  1283               	bcf	3,5	;RP0=0, select bank0
 11130  1A21  1303               	bcf	3,6	;RP1=0, select bank0
 11131  1A22  1407               	bsf	7,0	;volatile
 11132  1A23                     l3005:
 11133                           
 11134                           ;LCD8bits.c: 98:     Lcd_Port(a);
 11135  1A23  0872               	movf	Lcd_Write_Char@a,w
 11136  1A24  160A  158A  233C  160A  158A  	fcall	_Lcd_Port
 11137  1A29                     l3007:
 11138                           
 11139                           ;LCD8bits.c: 99:     RC1 = 1;
 11140  1A29  1283               	bcf	3,5	;RP0=0, select bank0
 11141  1A2A  1303               	bcf	3,6	;RP1=0, select bank0
 11142  1A2B  1487               	bsf	7,1	;volatile
 11143  1A2C                     l3009:
 11144                           
 11145                           ;LCD8bits.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 11146  1A2C  301A               	movlw	26
 11147  1A2D  00F1               	movwf	??_Lcd_Write_Char
 11148  1A2E                     u6317:
 11149  1A2E  0BF1               	decfsz	??_Lcd_Write_Char,f
 11150  1A2F  2A2E               	goto	u6317
 11151  1A30  0000               	nop
 11152  1A31                     l3011:
 11153                           
 11154                           ;LCD8bits.c: 101:     RC1 = 0;
 11155  1A31  1283               	bcf	3,5	;RP0=0, select bank0
 11156  1A32  1303               	bcf	3,6	;RP1=0, select bank0
 11157  1A33  1087               	bcf	7,1	;volatile
 11158  1A34                     l61:
 11159  1A34  0008               	return
 11160  1A35                     __end_of_Lcd_Write_Char:
 11161                           
 11162                           	psect	text31
 11163  1A6E                     __ptext31:	
 11164 ;; *************** function _Lcd_Set_Cursor *****************
 11165 ;; Defined at:
 11166 ;;		line 68 in file "LCD8bits.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  a               1    wreg     unsigned char 
 11169 ;;  b               1    4[COMMON] unsigned char 
 11170 ;; Auto vars:     Size  Location     Type
 11171 ;;  a               1    6[COMMON] unsigned char 
 11172 ;;  temp            1    7[COMMON] unsigned char 
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  1    wreg      void 
 11175 ;; Registers used:
 11176 ;;		wreg, status,2, status,0, pclath, cstack
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11182 ;;      Params:         1       0       0       0       0
 11183 ;;      Locals:         2       0       0       0       0
 11184 ;;      Temps:          1       0       0       0       0
 11185 ;;      Totals:         4       0       0       0       0
 11186 ;;Total ram usage:        4 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    2
 11189 ;; This function calls:
 11190 ;;		_Lcd_Cmd
 11191 ;; This function is called by:
 11192 ;;		_main
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           
 11197                           ;psect for function _Lcd_Set_Cursor
 11198  1A6E                     _Lcd_Set_Cursor:
 11199                           
 11200                           ;incstack = 0
 11201                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11202                           ;Lcd_Set_Cursor@a stored from wreg
 11203  1A6E  00F6               	movwf	Lcd_Set_Cursor@a
 11204  1A6F                     l3517:
 11205                           
 11206                           ;LCD8bits.c: 69:     unsigned char temp;;LCD8bits.c: 70:     if (a == 1) {
 11207  1A6F  0376               	decf	Lcd_Set_Cursor@a,w
 11208  1A70  1D03               	btfss	3,2
 11209  1A71  2A73               	goto	u5771
 11210  1A72  2A74               	goto	u5770
 11211  1A73                     u5771:
 11212  1A73  2A80               	goto	l3523
 11213  1A74                     u5770:
 11214  1A74                     l3519:
 11215                           
 11216                           ;LCD8bits.c: 71:         temp = 0x80 + b - 1;
 11217  1A74  0874               	movf	Lcd_Set_Cursor@b,w
 11218  1A75  3E7F               	addlw	127
 11219  1A76  00F5               	movwf	??_Lcd_Set_Cursor
 11220  1A77  0875               	movf	??_Lcd_Set_Cursor,w
 11221  1A78  00F7               	movwf	Lcd_Set_Cursor@temp
 11222  1A79                     l3521:
 11223                           
 11224                           ;LCD8bits.c: 72:         Lcd_Cmd(temp);
 11225  1A79  0877               	movf	Lcd_Set_Cursor@temp,w
 11226  1A7A  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11227                           
 11228                           ;LCD8bits.c: 74:     } else if (a == 2) {
 11229  1A7F  2A91               	goto	l55
 11230  1A80                     l3523:
 11231  1A80  3002               	movlw	2
 11232  1A81  0676               	xorwf	Lcd_Set_Cursor@a,w
 11233  1A82  1D03               	btfss	3,2
 11234  1A83  2A85               	goto	u5781
 11235  1A84  2A86               	goto	u5780
 11236  1A85                     u5781:
 11237  1A85  2A91               	goto	l55
 11238  1A86                     u5780:
 11239  1A86                     l3525:
 11240                           
 11241                           ;LCD8bits.c: 75:         temp = 0xC0 + b - 1;
 11242  1A86  0874               	movf	Lcd_Set_Cursor@b,w
 11243  1A87  3EBF               	addlw	191
 11244  1A88  00F5               	movwf	??_Lcd_Set_Cursor
 11245  1A89  0875               	movf	??_Lcd_Set_Cursor,w
 11246  1A8A  00F7               	movwf	Lcd_Set_Cursor@temp
 11247  1A8B                     l3527:
 11248                           
 11249                           ;LCD8bits.c: 76:         Lcd_Cmd(temp);
 11250  1A8B  0877               	movf	Lcd_Set_Cursor@temp,w
 11251  1A8C  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11252  1A91                     l55:
 11253  1A91  0008               	return
 11254  1A92                     __end_of_Lcd_Set_Cursor:
 11255                           
 11256                           	psect	text32
 11257  1C59                     __ptext32:	
 11258 ;; *************** function _Lcd_Init *****************
 11259 ;; Defined at:
 11260 ;;		line 80 in file "LCD8bits.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;		None
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;		None
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  1    wreg      void 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0, pclath, cstack
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11274 ;;      Params:         0       0       0       0       0
 11275 ;;      Locals:         0       0       0       0       0
 11276 ;;      Temps:          2       0       0       0       0
 11277 ;;      Totals:         2       0       0       0       0
 11278 ;;Total ram usage:        2 bytes
 11279 ;; Hardware stack levels used:    1
 11280 ;; Hardware stack levels required when called:    2
 11281 ;; This function calls:
 11282 ;;		_Lcd_Cmd
 11283 ;;		_Lcd_Port
 11284 ;; This function is called by:
 11285 ;;		_main
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           
 11290                           ;psect for function _Lcd_Init
 11291  1C59                     _Lcd_Init:
 11292  1C59                     l3529:	
 11293                           ;incstack = 0
 11294                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11295                           
 11296                           
 11297                           ;LCD8bits.c: 81:     Lcd_Port(0);
 11298  1C59  3000               	movlw	0
 11299  1C5A  160A  158A  233C  160A  158A  	fcall	_Lcd_Port
 11300  1C5F                     l3531:
 11301                           
 11302                           ;LCD8bits.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
 11303  1C5F  3034               	movlw	52
 11304  1C60  00F5               	movwf	??_Lcd_Init+1
 11305  1C61  30F1               	movlw	241
 11306  1C62  00F4               	movwf	??_Lcd_Init
 11307  1C63                     u6327:
 11308  1C63  0BF4               	decfsz	??_Lcd_Init,f
 11309  1C64  2C63               	goto	u6327
 11310  1C65  0BF5               	decfsz	??_Lcd_Init+1,f
 11311  1C66  2C63               	goto	u6327
 11312  1C67  2C68               	nop2
 11313  1C68                     l3533:
 11314                           
 11315                           ;LCD8bits.c: 83:     Lcd_Cmd(48);
 11316  1C68  3030               	movlw	48
 11317  1C69  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11318                           
 11319                           ;LCD8bits.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
 11320  1C6E  300D               	movlw	13
 11321  1C6F  00F5               	movwf	??_Lcd_Init+1
 11322  1C70  30FB               	movlw	251
 11323  1C71  00F4               	movwf	??_Lcd_Init
 11324  1C72                     u6337:
 11325  1C72  0BF4               	decfsz	??_Lcd_Init,f
 11326  1C73  2C72               	goto	u6337
 11327  1C74  0BF5               	decfsz	??_Lcd_Init+1,f
 11328  1C75  2C72               	goto	u6337
 11329  1C76  2C77               	nop2
 11330  1C77                     l3535:
 11331                           
 11332                           ;LCD8bits.c: 85:     Lcd_Cmd(48);
 11333  1C77  3030               	movlw	48
 11334  1C78  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11335  1C7D                     l3537:
 11336                           
 11337                           ;LCD8bits.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
 11338  1C7D  301D               	movlw	29
 11339  1C7E  00F5               	movwf	??_Lcd_Init+1
 11340  1C7F  3091               	movlw	145
 11341  1C80  00F4               	movwf	??_Lcd_Init
 11342  1C81                     u6347:
 11343  1C81  0BF4               	decfsz	??_Lcd_Init,f
 11344  1C82  2C81               	goto	u6347
 11345  1C83  0BF5               	decfsz	??_Lcd_Init+1,f
 11346  1C84  2C81               	goto	u6347
 11347                           
 11348                           ;LCD8bits.c: 87:     Lcd_Cmd(48);
 11349  1C85  3030               	movlw	48
 11350  1C86  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11351                           
 11352                           ;LCD8bits.c: 89:     Lcd_Cmd(56);
 11353  1C8B  3038               	movlw	56
 11354  1C8C  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11355                           
 11356                           ;LCD8bits.c: 90:     Lcd_Cmd(8);
 11357  1C91  3008               	movlw	8
 11358  1C92  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11359                           
 11360                           ;LCD8bits.c: 91:     Lcd_Cmd(1);
 11361  1C97  3001               	movlw	1
 11362  1C98  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11363                           
 11364                           ;LCD8bits.c: 92:     Lcd_Cmd(6);
 11365  1C9D  3006               	movlw	6
 11366  1C9E  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11367                           
 11368                           ;LCD8bits.c: 93:     Lcd_Cmd(12);
 11369  1CA3  300C               	movlw	12
 11370  1CA4  160A  158A  2235  160A  158A  	fcall	_Lcd_Cmd
 11371  1CA9                     l58:
 11372  1CA9  0008               	return
 11373  1CAA                     __end_of_Lcd_Init:
 11374                           
 11375                           	psect	text33
 11376  1A35                     __ptext33:	
 11377 ;; *************** function _Lcd_Cmd *****************
 11378 ;; Defined at:
 11379 ;;		line 55 in file "LCD8bits.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  a               1    wreg     unsigned char 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  a               1    3[COMMON] unsigned char 
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  1    wreg      void 
 11386 ;; Registers used:
 11387 ;;		wreg, status,2, status,0, pclath, cstack
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11393 ;;      Params:         0       0       0       0       0
 11394 ;;      Locals:         1       0       0       0       0
 11395 ;;      Temps:          2       0       0       0       0
 11396 ;;      Totals:         3       0       0       0       0
 11397 ;;Total ram usage:        3 bytes
 11398 ;; Hardware stack levels used:    1
 11399 ;; Hardware stack levels required when called:    1
 11400 ;; This function calls:
 11401 ;;		_Lcd_Port
 11402 ;; This function is called by:
 11403 ;;		_Lcd_Set_Cursor
 11404 ;;		_Lcd_Init
 11405 ;;		_Lcd_Clear
 11406 ;;		_Lcd_Shift_Right
 11407 ;;		_Lcd_Shift_Left
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           
 11412                           ;psect for function _Lcd_Cmd
 11413  1A35                     _Lcd_Cmd:
 11414                           
 11415                           ;incstack = 0
 11416                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11417                           ;Lcd_Cmd@a stored from wreg
 11418  1A35  00F3               	movwf	Lcd_Cmd@a
 11419  1A36                     l2993:
 11420                           
 11421                           ;LCD8bits.c: 56:     RC0 = 0;
 11422  1A36  1283               	bcf	3,5	;RP0=0, select bank0
 11423  1A37  1303               	bcf	3,6	;RP1=0, select bank0
 11424  1A38  1007               	bcf	7,0	;volatile
 11425  1A39                     l2995:
 11426                           
 11427                           ;LCD8bits.c: 57:     Lcd_Port(a);
 11428  1A39  0873               	movf	Lcd_Cmd@a,w
 11429  1A3A  160A  158A  233C  160A  158A  	fcall	_Lcd_Port
 11430  1A3F                     l2997:
 11431                           
 11432                           ;LCD8bits.c: 58:     RC1 = 1;
 11433  1A3F  1283               	bcf	3,5	;RP0=0, select bank0
 11434  1A40  1303               	bcf	3,6	;RP1=0, select bank0
 11435  1A41  1487               	bsf	7,1	;volatile
 11436  1A42                     l2999:
 11437                           
 11438                           ;LCD8bits.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11439  1A42  300B               	movlw	11
 11440  1A43  00F2               	movwf	??_Lcd_Cmd+1
 11441  1A44  3062               	movlw	98
 11442  1A45  00F1               	movwf	??_Lcd_Cmd
 11443  1A46                     u6357:
 11444  1A46  0BF1               	decfsz	??_Lcd_Cmd,f
 11445  1A47  2A46               	goto	u6357
 11446  1A48  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11447  1A49  2A46               	goto	u6357
 11448  1A4A  0000               	nop
 11449  1A4B                     l3001:
 11450                           
 11451                           ;LCD8bits.c: 60:     RC1 = 0;
 11452  1A4B  1283               	bcf	3,5	;RP0=0, select bank0
 11453  1A4C  1303               	bcf	3,6	;RP1=0, select bank0
 11454  1A4D  1087               	bcf	7,1	;volatile
 11455  1A4E                     l46:
 11456  1A4E  0008               	return
 11457  1A4F                     __end_of_Lcd_Cmd:
 11458                           
 11459                           	psect	text34
 11460  1B3C                     __ptext34:	
 11461 ;; *************** function _Lcd_Port *****************
 11462 ;; Defined at:
 11463 ;;		line 13 in file "LCD8bits.c"
 11464 ;; Parameters:    Size  Location     Type
 11465 ;;  a               1    wreg     unsigned char 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;  a               1    0[COMMON] unsigned char 
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      void 
 11470 ;; Registers used:
 11471 ;;		wreg
 11472 ;; Tracked objects:
 11473 ;;		On entry : 0/0
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11477 ;;      Params:         0       0       0       0       0
 11478 ;;      Locals:         1       0       0       0       0
 11479 ;;      Temps:          0       0       0       0       0
 11480 ;;      Totals:         1       0       0       0       0
 11481 ;;Total ram usage:        1 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; This function calls:
 11484 ;;		Nothing
 11485 ;; This function is called by:
 11486 ;;		_Lcd_Cmd
 11487 ;;		_Lcd_Init
 11488 ;;		_Lcd_Write_Char
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           
 11493                           ;psect for function _Lcd_Port
 11494  1B3C                     _Lcd_Port:
 11495                           
 11496                           ;incstack = 0
 11497                           ; Regs used in _Lcd_Port: [wreg]
 11498                           ;Lcd_Port@a stored from wreg
 11499  1B3C  00F0               	movwf	Lcd_Port@a
 11500  1B3D                     l2511:
 11501                           
 11502                           ;LCD8bits.c: 14:     if (a & 1)
 11503  1B3D  1C70               	btfss	Lcd_Port@a,0
 11504  1B3E  2B40               	goto	u3181
 11505  1B3F  2B41               	goto	u3180
 11506  1B40                     u3181:
 11507  1B40  2B45               	goto	l27
 11508  1B41                     u3180:
 11509  1B41                     l2513:
 11510                           
 11511                           ;LCD8bits.c: 15:         RD0 = 1;
 11512  1B41  1283               	bcf	3,5	;RP0=0, select bank0
 11513  1B42  1303               	bcf	3,6	;RP1=0, select bank0
 11514  1B43  1408               	bsf	8,0	;volatile
 11515  1B44  2B48               	goto	l28
 11516  1B45                     l27:	
 11517                           ;LCD8bits.c: 16:     else
 11518                           
 11519                           
 11520                           ;LCD8bits.c: 17:         RD0 = 0;
 11521  1B45  1283               	bcf	3,5	;RP0=0, select bank0
 11522  1B46  1303               	bcf	3,6	;RP1=0, select bank0
 11523  1B47  1008               	bcf	8,0	;volatile
 11524  1B48                     l28:
 11525                           
 11526                           ;LCD8bits.c: 19:     if (a & 2)
 11527  1B48  1CF0               	btfss	Lcd_Port@a,1
 11528  1B49  2B4B               	goto	u3191
 11529  1B4A  2B4C               	goto	u3190
 11530  1B4B                     u3191:
 11531  1B4B  2B4E               	goto	l29
 11532  1B4C                     u3190:
 11533  1B4C                     l2515:
 11534                           
 11535                           ;LCD8bits.c: 20:         RD1 = 1;
 11536  1B4C  1488               	bsf	8,1	;volatile
 11537  1B4D  2B4F               	goto	l30
 11538  1B4E                     l29:	
 11539                           ;LCD8bits.c: 21:     else
 11540                           
 11541                           
 11542                           ;LCD8bits.c: 22:         RD1 = 0;
 11543  1B4E  1088               	bcf	8,1	;volatile
 11544  1B4F                     l30:
 11545                           
 11546                           ;LCD8bits.c: 24:     if (a & 4)
 11547  1B4F  1D70               	btfss	Lcd_Port@a,2
 11548  1B50  2B52               	goto	u3201
 11549  1B51  2B53               	goto	u3200
 11550  1B52                     u3201:
 11551  1B52  2B55               	goto	l31
 11552  1B53                     u3200:
 11553  1B53                     l2517:
 11554                           
 11555                           ;LCD8bits.c: 25:         RD2 = 1;
 11556  1B53  1508               	bsf	8,2	;volatile
 11557  1B54  2B56               	goto	l32
 11558  1B55                     l31:	
 11559                           ;LCD8bits.c: 26:     else
 11560                           
 11561                           
 11562                           ;LCD8bits.c: 27:         RD2 = 0;
 11563  1B55  1108               	bcf	8,2	;volatile
 11564  1B56                     l32:
 11565                           
 11566                           ;LCD8bits.c: 29:     if (a & 8)
 11567  1B56  1DF0               	btfss	Lcd_Port@a,3
 11568  1B57  2B59               	goto	u3211
 11569  1B58  2B5A               	goto	u3210
 11570  1B59                     u3211:
 11571  1B59  2B5C               	goto	l33
 11572  1B5A                     u3210:
 11573  1B5A                     l2519:
 11574                           
 11575                           ;LCD8bits.c: 30:         RD3 = 1;
 11576  1B5A  1588               	bsf	8,3	;volatile
 11577  1B5B  2B5D               	goto	l34
 11578  1B5C                     l33:	
 11579                           ;LCD8bits.c: 31:     else
 11580                           
 11581                           
 11582                           ;LCD8bits.c: 32:         RD3 = 0;
 11583  1B5C  1188               	bcf	8,3	;volatile
 11584  1B5D                     l34:
 11585                           
 11586                           ;LCD8bits.c: 34:     if (a & 16)
 11587  1B5D  1E70               	btfss	Lcd_Port@a,4
 11588  1B5E  2B60               	goto	u3221
 11589  1B5F  2B61               	goto	u3220
 11590  1B60                     u3221:
 11591  1B60  2B63               	goto	l35
 11592  1B61                     u3220:
 11593  1B61                     l2521:
 11594                           
 11595                           ;LCD8bits.c: 35:         RD4 = 1;
 11596  1B61  1608               	bsf	8,4	;volatile
 11597  1B62  2B64               	goto	l36
 11598  1B63                     l35:	
 11599                           ;LCD8bits.c: 36:     else
 11600                           
 11601                           
 11602                           ;LCD8bits.c: 37:         RD4 = 0;
 11603  1B63  1208               	bcf	8,4	;volatile
 11604  1B64                     l36:
 11605                           
 11606                           ;LCD8bits.c: 39:     if (a & 32)
 11607  1B64  1EF0               	btfss	Lcd_Port@a,5
 11608  1B65  2B67               	goto	u3231
 11609  1B66  2B68               	goto	u3230
 11610  1B67                     u3231:
 11611  1B67  2B6A               	goto	l37
 11612  1B68                     u3230:
 11613  1B68                     l2523:
 11614                           
 11615                           ;LCD8bits.c: 40:         RD5 = 1;
 11616  1B68  1688               	bsf	8,5	;volatile
 11617  1B69  2B6B               	goto	l38
 11618  1B6A                     l37:	
 11619                           ;LCD8bits.c: 41:     else
 11620                           
 11621                           
 11622                           ;LCD8bits.c: 42:         RD5 = 0;
 11623  1B6A  1288               	bcf	8,5	;volatile
 11624  1B6B                     l38:
 11625                           
 11626                           ;LCD8bits.c: 44:     if (a & 64)
 11627  1B6B  1F70               	btfss	Lcd_Port@a,6
 11628  1B6C  2B6E               	goto	u3241
 11629  1B6D  2B6F               	goto	u3240
 11630  1B6E                     u3241:
 11631  1B6E  2B71               	goto	l39
 11632  1B6F                     u3240:
 11633  1B6F                     l2525:
 11634                           
 11635                           ;LCD8bits.c: 45:         RD6 = 1;
 11636  1B6F  1708               	bsf	8,6	;volatile
 11637  1B70  2B72               	goto	l40
 11638  1B71                     l39:	
 11639                           ;LCD8bits.c: 46:     else
 11640                           
 11641                           
 11642                           ;LCD8bits.c: 47:         RD6 = 0;
 11643  1B71  1308               	bcf	8,6	;volatile
 11644  1B72                     l40:
 11645                           
 11646                           ;LCD8bits.c: 49:     if (a & 128)
 11647  1B72  1FF0               	btfss	Lcd_Port@a,7
 11648  1B73  2B75               	goto	u3251
 11649  1B74  2B76               	goto	u3250
 11650  1B75                     u3251:
 11651  1B75  2B78               	goto	l41
 11652  1B76                     u3250:
 11653  1B76                     l2527:
 11654                           
 11655                           ;LCD8bits.c: 50:         RD7 = 1;
 11656  1B76  1788               	bsf	8,7	;volatile
 11657  1B77  2B79               	goto	l43
 11658  1B78                     l41:	
 11659                           ;LCD8bits.c: 51:     else
 11660                           
 11661                           
 11662                           ;LCD8bits.c: 52:         RD7 = 0;
 11663  1B78  1388               	bcf	8,7	;volatile
 11664  1B79                     l43:
 11665  1B79  0008               	return
 11666  1B7A                     __end_of_Lcd_Port:
 11667  007E                     btemp	set	126	;btemp
 11668  007E                     wtemp0	set	126
 11669                           
 11670                           	psect	config
 11671                           
 11672                           ;Config register CONFIG1 @ 0x2007
 11673                           ;	Oscillator Selection bits
 11674                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11675                           ;	Watchdog Timer Enable bit
 11676                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11677                           ;	Power-up Timer Enable bit
 11678                           ;	PWRTE = OFF, PWRT disabled
 11679                           ;	RE3/MCLR pin function select bit
 11680                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11681                           ;	Code Protection bit
 11682                           ;	CP = OFF, Program memory code protection is disabled
 11683                           ;	Data Code Protection bit
 11684                           ;	CPD = OFF, Data memory code protection is disabled
 11685                           ;	Brown Out Reset Selection bits
 11686                           ;	BOREN = OFF, BOR disabled
 11687                           ;	Internal External Switchover bit
 11688                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11689                           ;	Fail-Safe Clock Monitor Enabled bit
 11690                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11691                           ;	Low Voltage Programming Enable bit
 11692                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11693                           ;	In-Circuit Debugger Mode bit
 11694                           ;	DEBUG = 0x1, unprogrammed default
 11695  2007                     	org	8199
 11696  2007  20D4               	dw	8404
 11697                           
 11698                           ;Config register CONFIG2 @ 0x2008
 11699                           ;	Brown-out Reset Selection bit
 11700                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11701                           ;	Flash Program Memory Self Write Enable bits
 11702                           ;	WRT = OFF, Write protection off
 11703  2008                     	org	8200
 11704  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    144
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     44      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> volt(BANK1[16]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _mapear->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _enviocadena->_enviocaracter
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _mapear->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   39264
                                             41 BANK1      3     3      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _adc_c
                          _adc_canal
                        _enviocadena
                             _mapear
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   31530
                                              0 BANK1     41    30     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _mapear                                               9     5      4    6314
                                             56 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_canal                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_c                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _adc_c
   _adc_canal
   _enviocadena
     _enviocaracter
   _mapear
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 03 23:56:19 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          _a 006E  
                        pc 0002               ___fldiv@sign 004F                         l30 1B4F  
                       l31 1B55                         l40 1B72                         l32 1B56  
                       l41 1B78                         l33 1B5C                         l34 1B5D  
                       l43 1B79                         l35 1B63                         l27 1B45  
                       l36 1B64                         l28 1B48                         l37 1B6A  
                       l29 1B4E                         l61 1A34                         l38 1B6B  
                       l46 1A4E                         l39 1B71                         l55 1A91  
                       l58 1CA9                         l67 1BBB                         _S1 00D0  
                       _S2 00CC               ___awdiv@sign 0021                         _s1 00D6  
                       _s2 00D5                         _pc 00D4                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l203 1006  
                      l212 1A65                        l205 100C                        l214 1A6D  
                      l207 1014                        l144 1C58                        l402 1AC2  
                      l323 0C9E                        l404 1ADA                        l316 1577  
                      l173 1A1E                        l166 1A10                        l342 00C0  
                      l601 1A04                        l370 04DA                        l612 1E8E  
                      l620 1043                        l605 1EA3                        l438 1DBE  
                      l630 10C4                        l615 1EA3                        l623 1094  
                      l801 12DE                        l377 051E                        l619 10D1  
                      l555 1E27                        l572 118F                        l708 004E  
                      l733 1682                        l573 10F4                        l590 1C09  
                      l750 174D                        l742 17FF                        l718 1B3B  
                      l398 07EF                        l807 1350                        l831 0F6B  
                      l735 1659                        l583 1182                        l760 1793  
                      l576 1152                        l568 1D58                        l809 1360  
                      l825 0FFF                        l593 1EC0                        l729 15DB  
                      l754 1771                        l658 1CFF                        l771 17F3  
                      l763 17D1                        l844 1AEF                        l588 1BD8  
                      l596 1F2C                        l772 17FF                        l837 0FF3  
                      l589 1BF4                        l597 1F45                        l846 1B01  
                      l871 1FFF                        l775 1AB5                        l785 11EC  
                      l882 1FC9                        l787 136C                        l883 1FD5  
                      l875 1FAD                        l869 1F68                        l889 0813  
                      _RC0 0038                        _RC1 0039                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 0036               ___flmul@bexp 0037  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             ___fltol@exp1 005B                       l3001 1A4B                       l3011 1A31  
                     l3003 1A20                       l3005 1A23                       l3013 1006  
                     l3101 104A                       l3007 1A29                       l3015 1012  
                     l3111 107B                       l3103 1059                       l3031 1534  
                     l3009 1A2C                       l3201 1AD6                       l3113 1085  
                     l3105 105B                       l3025 1483                       l3017 1370  
                     l3041 0950                       l3211 1D79                       l3115 1086  
                     l3107 1064                       l3027 1489                       l3019 1376  
                     l3035 0943                       l2501 1AE5                       l3301 1E93  
                     l3221 1DA7                       l3213 1D7D                       l3205 1D59  
                     l3141 10DF                       l3133 10B9                       l3125 10A0  
                     l3117 108E                       l3109 106D                       l3053 0AC7  
                     l3037 0947                       l2511 1B3D                       l2503 1AE9  
                     l3231 1BD0                       l3303 1E98                       l3223 1DB0  
                     l3215 1D86                       l3207 1D69                       l3311 1CC4  
                     l3151 10F5                       l3135 10C9                       l3119 1098  
                     l3127 10B2                       l3071 0C72                       l3047 0A38  
                     l3039 0949                       l2521 1B61                       l2513 1B41  
                     l3401 1262                       l2505 1AF8                       l3233 1BEC  
                     l3241 1EA4                       l3217 1D98                       l3209 1D6C  
                     l3225 1DB6                       l3313 1CC8                       l3321 1CF7  
                     l3305 1CAA                       l3161 1122                       l3153 10FD  
                     l3145 10E8                       l3081 0810                       l2601 1D44  
                     l3065 0BE3                       l3049 0A3F                       l3057 0AF4  
                     l2523 1B68                       l2515 1B4C                       l3411 128D  
                     l3403 1263                       l3331 1190                       l2507 1AFD  
                     l3235 1C06                       l3251 1F04                       l3243 1EB8  
                     l3219 1DA6                       l3315 1CDA                       l3307 1CB4  
                     l3171 1156                       l3163 1134                       l3155 110E  
                     l3139 10D2                       l2611 000B                       l3083 0812  
                     l3075 0803                       l2531 1DC2                       l2603 1D4A  
                     l3067 0BEA                       l3059 0AFB                       l2525 1B6F  
                     l2517 1B53                       l3421 12AA                       l3405 126C  
                     l3413 1291                       l3341 11A7                       l3333 1197  
                     l3501 1FC3                       l3237 1C08                       l3229 1BBC  
                     l3253 1F08                       l3245 1ED4                       l3261 19FA  
                     l2701 15D3                       l3325 1A92                       l3317 1CE8  
                     l3309 1CB7                       l3165 1142                       l3157 1110  
                     l3093 1031                       l2621 0021                       l2613 000D  
                     l3077 0804                       l2541 1DD6                       l2533 1DC6  
                     l2605 1D4F                       l2527 1B76                       l2519 1B5A  
                     l3431 12C2                       l3423 12AE                       l3415 1297  
                     l3407 127E                       l3351 11BF                       l3343 11AC  
                     l3335 119D                       l3511 1FF6                       l3503 1FCD  
                     l3255 1F42                       l3247 1EDC                       l3263 1A02  
                     l2711 15F1                       l2703 15E1                       l3327 1A96  
                     l3271 1E35                       l3319 1CF1                       l3191 1AB6  
                     l3167 1143                       l3159 1119                       l3087 1015  
                     l2631 0044                       l2623 0025                       l2615 0013  
                     l3079 080A                       l2551 1DEC                       l2543 1DDA  
                     l2535 1DCB                       l2607 1D54                       l3521 1A79  
                     l3441 12E3                       l3433 12C3                       l3425 12AF  
                     l3417 129F                       l3409 127F                       l3361 11D4  
                     l3353 11C4                       l3345 11B4                       l3337 11A1  
                     l3513 1FF7                       l3505 1FD7                       l3257 1F44  
                     l3249 1EE0                       l3265 1A04                       l2801 176C  
                     l2721 1605                       l2713 15F5                       l2705 15E5  
                     l3281 1E5C                       l3193 1AB8                       l3185 1177  
                     l3177 115E                       l3169 114C                       l3089 1028  
                     l2625 0036                       l2617 0016                       l2633 004A  
                     l2641 1B0B                       l2561 1E0C                       l2553 1DF0  
                     l2545 1DDC                       l2537 1DCD                       l2529 1DBF  
                     l3601 00C2                       l3531 1C5F                       l3523 1A80  
                     l3443 12E8                       l3451 1319                       l3435 12C7  
                     l3427 12B8                       l3419 12A1                       l3371 11F4  
                     l3363 11D9                       l3355 11CA                       l3347 11B5  
                     l3339 11A2                       l3507 1FED                       l2811 177F  
                     l2803 1770                       l2731 1619                       l2723 1609  
                     l2715 15F9                       l2707 15E9                       l3291 1E6A  
                     l3283 1E5E                       l3275 1E3E                       l3195 1ABC  
                     l3187 1187                       l3179 1170                       l3099 1044  
                     l2627 003C                       l2619 001D                       l2651 1B2A  
                     l2643 1B12                       l2563 1E13                       l2555 1DF4  
                     l2547 1DE2                       l2539 1DD1                       l3611 0106  
                     l3603 00E4                       l3533 1C68                       l3525 1A86  
                     l3517 1A6F                       l3541 1B7D                       l3461 134F  
                     l3453 1326                       l3445 12F6                       l3437 12DB  
                     l3429 12BE                       l3381 1212                       l3373 1200  
                     l3365 11E1                       l3357 11CE                       l3349 11B7  
                     l2901 0D29                       l3509 1FF2                       l2821 1790  
                     l2805 1775                       l2813 1781                       l2741 163D  
                     l2733 161D                       l2725 160D                       l2717 15FD  
                     l2709 15ED                       l2661 157F                       l3285 1E62  
                     l3293 1E7C                       l3277 1E53                       l3269 1E28  
                     l3197 1AC9                       l2629 003D                       l2653 1B31  
                     l2645 1B16                       l2637 1B02                       l2557 1E05  
                     l2549 1DE5                       l2565 1E19                       l2581 1D0C  
                     l2573 1D00                       l3701 04CE                       l3621 0144  
                     l3613 010A                       l3605 00F0                       l3535 1C77  
                     l3527 1A8B                       l3519 1A74                       l3543 1B99  
                     l3551 1A05                       l3463 1356                       l3455 1334  
                     l3447 12FA                       l3391 123D                       l3375 1204  
                     l3367 11E2                       l3359 11CF                       l2911 0DC6  
                     l2903 0D46                       l2831 17AF                       l2807 1778  
                     l2815 1785                       l2751 166D                       l2743 165D  
                     l2735 1621                       l2727 1611                       l2719 1601  
                     l2671 1594                       l2663 1585                       l3279 1E54  
                     l3199 1AD0                       l2647 1B1A                       l2639 1B08  
                     l2655 1B37                       l2567 1E1E                       l2559 1E0B  
                     l2591 1D25                       l2583 1D10                       l2575 1D01  
                     l3711 0502                       l3703 04E2                       l3631 0194  
                     l3623 015D                       l3615 0123                       l3607 00F4  
                     l3537 1C7D                       l3529 1C59                       l3545 1B9F  
                     l3561 1A0F                       l3553 1A09                       l3465 135A  
                     l3457 1343                       l3449 1313                       l3393 1245  
                     l3385 121B                       l3369 11E4                       l2497 1ADC  
                     l2921 0E29                       l2913 0DCF                       l2905 0D62  
                     l3481 1F70                       l3473 1F47                       l2841 17E8  
                     l2833 17CD                       l2825 1798                       l2817 1786  
                     l2809 177A                       l2753 1676                       l2745 1666  
                     l2729 1615                       l2737 1625                       l2681 15AC  
                     l2673 159C                       l2665 1589                       l2649 1B24  
                     l2569 1E23                       l2593 1D29                       l2585 1D15  
                     l2577 1D05                       l3721 0533                       l3713 0511  
                     l3705 04EB                       l3641 0221                       l3633 0198  
                     l3625 0168                       l3617 013C                       l3609 00F8  
                     l3539 1B7A                       l3555 1A0A                       l3563 1A12  
                     l3811 1A59                       l3467 135C                       l3459 1347  
                     l3395 1247                       l3387 122D                       l3379 120D  
                     l2499 1ADE                       l2931 0EC9                       l2923 0E42  
                     l2915 0DDF                       l2907 0D8E                       l3491 1F92  
                     l3475 1F4C                       l3547 1C0D                       l2851 17FE  
                     l2843 17E9                       l2835 17D6                       l2827 179D  
                     l2819 178A                       l2771 16BC                       l2763 1694  
                     l2747 1668                       l2755 167A                       l2739 1626  
                     l2691 15BE                       l2683 15B2                       l2675 159D  
                     l2667 158A                       l2659 1578                       l3299 1E83  
                     l2595 1D2D                       l2587 1D1B                       l2579 1D0A  
                     l3731 062A                       l3723 0537                       l3715 0518  
                     l3707 04EF                       l3651 02A3                       l3643 022A  
                     l3635 019E                       l3627 016E                       l3619 0140  
                     l3571 0057                       l3557 1A0B                       l3565 1A1D  
                     l3813 1A5D                       l3397 124C                       l3389 1235  
                     l2941 0F37                       l2933 0EEF                       l2925 0E5F  
                     l2917 0DFC                       l2909 0DAA                       l2861 0CB1  
                     l2853 0C9F                       l3493 1F96                       l3485 1F79  
                     l3477 1F50                       l2845 17ED                       l2837 17DB  
                     l2829 17AB                       l2773 16BE                       l2765 16AB  
                     l2757 1686                       l2781 16D1                       l2749 166C  
                     l2693 15C3                       l2685 15B3                       l2669 158F  
                     l2677 159F                       l2597 1D37                       l2589 1D1E  
                     l3741 06A4                       l3733 0636                       l3725 0555  
                     l3717 0527                       l3709 04F5                       l3661 031E  
                     l3653 02B2                       l3645 0245                       l3637 01BD  
                     l3629 0181                       l3581 0077                       l3573 005D  
                     l3901 08E9                       l3559 1A0E                       l3815 1A6B  
                     l3807 1A50                       l3399 125E                       l2951 0F4F  
                     l2943 0F3B                       l2935 0F17                       l2927 0E8C  
                     l2919 0E0C                       l2871 0CCD                       l2863 0CB6  
                     l2855 0CA6                       l3495 1FA4                       l3487 1F7E  
                     l3479 1F60                       l2847 17EF                       l2839 17E3  
                     l2783 16E7                       l2791 173F                       l2775 16C2  
                     l2767 16AF                       l2759 168B                       l2695 15C8  
                     l2687 15B9                       l2679 15A7                       l2599 1D3D  
                     l3751 06CA                       l3743 06AA                       l3727 05B0  
                     l3735 0691                       l3719 052C                       l3671 036C  
                     l3663 0327                       l3655 02CD                       l3639 0208  
                     l3647 024D                       l3591 00A7                       l3583 0078  
                     l3575 0064                       l3911 090D                       l3903 08F2  
                     l3831 081D                       l3823 0814                       l3809 1A51  
                     l2961 0F70                       l2953 0F50                       l2945 0F3C  
                     l2937 0F20                       l2929 0E9C                       l2881 0CE2  
                     l2873 0CD2                       l2865 0CBB                       l2857 0CAC  
                     l3497 1FB4                       l3489 1F8B                       l2849 17FA  
                     l2793 1755                       l2785 1725                       l2777 16C3  
                     l2769 16B3                       l2697 15D0                       l2689 15BD  
                     l3761 06ED                       l3753 06CE                       l3737 0699  
                     l3729 05EB                       l3665 032F                       l3657 02F4  
                     l3673 0375                       l3649 025C                       l3745 06B1  
                     l3593 00AB                       l3585 007C                       l3577 0069  
                     l3569 0052                       l3905 08F8                       l3913 090E  
                     l3841 0828                       l3833 081E                       l3825 0818  
                     l2963 0F75                       l2971 0FA6                       l2955 0F54  
                     l2947 0F45                       l2939 0F2E                       l2891 0CFE  
                     l2883 0CE7                       l2875 0CD8                       l2867 0CC3  
                     l2859 0CB0                       l3499 1FBF                       l2795 175A  
                     l2787 172B                       l2779 16CC                       l2699 15D1  
                     l3771 0726                       l3755 06D9                       l3747 06C2  
                     l3739 06A0                       l3691 043C                       l3675 03AA  
                     l3667 034D                       l3659 0303                       l3587 007F  
                     l3595 00BC                       l3579 006B                       l3923 091B  
                     l3907 0903                       l3851 0837                       l3843 0829  
                     l3835 0822                       l3827 0819                       l2981 0FD9  
                     l2973 0FB3                       l2965 0F83                       l2957 0F68  
                     l2949 0F4B                       l2893 0D03                       l2885 0CEF  
                     l2877 0CDC                       l2869 0CC5                       l2789 1730  
                     l3781 0754                       l3773 0730                       l3757 06DF  
                     l3749 06C6                       l3693 0448                       l3685 03FB  
                     l3677 03F7                       l3597 00BE                       l3589 0094  
                     l3917 0913                       l3925 092D                       l3909 090A  
                     l3861 0843                       l3853 0838                       l3845 082A  
                     l3837 0824                       l3829 081C                       l2983 0FE7  
                     l2975 0FBE                       l2967 0F87                       l2887 0CF1  
                     l2879 0CDD                       l2799 1763                       l3783 0762  
                     l3775 073B                       l3767 06EF                       l3759 06E7  
                     l3695 044F                       l3679 03F9                       l3919 0918  
                     l3871 084A                       l3863 0844                       l3855 083B  
                     l3847 082F                       l3839 0825                       l2993 1A36  
                     l2985 0FEB                       l2977 0FCD                       l2969 0FA0  
                     l2897 0D0C                       l2889 0CF9                       l3785 0769  
                     l3793 07CB                       l3777 073C                       l3697 0454  
                     l3689 0432                       l3881 0860                       l3873 084B  
                     l3865 0845                       l3857 083F                       l3849 0834  
                     l2995 1A39                       l2987 0FEC                       l2979 0FD7  
                     l2899 0D1C                       l3787 076E                       l3779 074B  
                     l3699 048F                       l3795 07D9                       l3891 087C  
                     l3883 0867                       l3875 084C                       l3867 0848  
                     l3859 0840                       l2997 1A3F                       l2989 0FF7  
                     l3789 07C3                       l3797 07EB                       l3893 089C  
                     l3885 086A                       l3877 084F                       l3869 0849  
                     l2999 1A42                       l3895 08BA                       l3879 0855  
                     l3887 086B                       l3993 0925                       l3897 08DB  
                     l3889 0873                       l3995 00D6                       l3899 08E1  
                     STR_1 18AF                       STR_2 18A0                       u3200 1B53  
                     u4000 17DB                       u3201 1B52                       u4001 17DA  
                     u3210 1B5A                       u4010 17E8                       u3211 1B59  
                     u4011 17E7                       u3220 1B61                       u4100 0CFE  
                     u4020 17ED                       u3300 1DF4                       u3221 1B60  
                     u4101 0CFD                       u4021 17EC                       u3301 1DF3  
                     u3230 1B68                       u3150 1AE9                       u4110 0D03  
                     u4030 17FE                       u3231 1B67                       u3151 1AE8  
                     u4111 0D02                       u4031 17FD                       u3240 1B6F  
                     u4040 0CB0                       u5000 1D69                       u3320 1E05  
                     u3400 1D2D                       u3241 1B6E                       u4201 0E51  
                     u4121 0D54                       u4041 0CAF                       u5001 1D68  
                     u3321 1E04                       u3401 1D2C                       u3250 1B76  
                     u3170 1AFD                       u4202 0E58                       u4122 0D5B  
                     u4050 0CB6                       u3410 1D37                       u3251 1B75  
                     u3171 1AFC                       u4211 0E7E                       u4203 0E5F  
                     u4131 0D70                       u4123 0D62                       u4051 0CB5  
                     u3315 1DF5                       u3411 1D36                       u3180 1B41  
                     u4212 0E85                       u4132 0D77                       u4060 0CBB  
                     u5100 1EB8                       u5020 1D7D                       u3340 1E19  
                     u3260 1DC6                       u3181 1B40                       u3165 1AF0  
                     u4221 0EAB                       u4213 0E8C                       u4141 0D9C  
                     u4133 0D7E                       u4061 0CBA                       u5101 1EB7  
                     u5021 1D7C                       u3341 1E18                       u3325 1E01  
                     u3261 1DC5                       u3190 1B4C                       u4310 0F4F  
                     u4230 0ED5                       u4222 0EB2                       u4142 0DA3  
                     u4070 0CDC                       u5110 1ED4                       u3510 004A  
                     u3350 1E1E                       u3270 1DD1                       u3430 1D4A  
                     u3191 1B4B                       u4311 0F4E                       u4223 0EB9  
                     u4151 0DB8                       u4143 0DAA                       u4071 0CDB  
                     u5111 1ED3                       u5015 1D6E                       u3511 0049  
                     u3351 1E1D                       u3335 1E0D                       u3271 1DD0  
                     u3431 1D49                       u3415 1D33                       u4400 0FEB  
                     u4320 0F54                       u4152 0DBF                       u4080 0CE2  
                     u5120 1EE0                       u3600 1594                       u5200 1E62  
                     u5040 1D98                       u3520 1B08                       u3280 1DE2  
                     u3440 1D4F                       u3360 1D05                       u6000 043C  
                     u4401 0FEA                       u4321 0F53                       u4305 0F3E  
                     u4241 0EE1                       u4153 0DC6                       u4081 0CE1  
                     u5121 1EDF                       u3601 1593                       u5201 1E61  
                     u5041 1D97                       u3505 003E                       u3521 1B07  
                     u3281 1DE1                       u3441 1D4E                       u3425 1D3E  
                     u3361 1D04                       u6001 043B                       u4410 100C  
                     u4330 0F68                       u4250 0EFD                       u4242 0EE8  
                     u4090 0CE7                       u3610 15B2                       u5210 1E69  
                     u3450 0013                       u3370 1D10                       u6010 0448  
                     u4411 100B                       u4331 0F67                       u4243 0EEF  
                     u4235 0ED0                       u4171 0DEE                       u4091 0CE6  
                     u5131 1EEF                       u3611 15B1                       u5211 1E68  
                     u5035 1D7F                       u3451 0012                       u3371 1D0F  
                     u6011 0447                       u4420 1012                       u4340 0F6F  
                     u4172 0DF5                       u5140 1F08                       u5132 1EF0  
                     u3700 165D                       u3620 15BD                       u5060 1DB6  
                     u5300 1CC8                       u3540 1B1A                       u3380 1D1B  
                     u6100 06B0                       u4421 1011                       u4341 0F6E  
                     u4261 0F09                       u4181 0E1B                       u4173 0DFC  
                     u4165 0DC8                       u5141 1F07                       u5133 1EF5  
                     u3701 165C                       u3621 15BC                       u5061 1DB5  
                     u5045 1D94                       u5301 1CC7                       u3541 1B19  
                     u3381 1D1A                       u6101 06AF                       u4350 0F75  
                     u4262 0F10                       u4182 0E22                       u5070 1BD0  
                     u5134 1EF6                       u3710 166C                       u3630 15C3  
                     u5230 1E7B                       u5310 1CDA                       u3470 0025  
                     u3550 1B24                       u4430 1376                       u4510 0947  
                     u6110 06CA                       u6030 04E1                       u4351 0F74  
                     u4263 0F17                       u4255 0EF8                       u4183 0E29  
                     u5071 1BCF                       u5151 1F17                       u5135 1EFB  
                     u3711 166B                       u3631 15C2                       u5231 1E7A  
                     u5055 1DA8                       u5311 1CD9                       u3471 0024  
                     u3551 1B23                       u3535 1B0C                       u4431 1375  
                     u3295 1DE6                       u4511 0946                       u6111 06C9  
                     u6031 04E0                       u5400 11F4                       u4360 0F87  
                     u5080 1BEC                       u5160 1F42                       u5152 1F18  
                     u5136 1EFC                       u3640 15C8                       u5240 1E82  
                     u4600 0AFB                       u4520 0950                       u6120 06DF  
                     u6040 0502                       u5401 11F3                       u4361 0F86  
                     u5081 1BEB                       u5161 1F41                       u5153 1F1D  
                     u3641 15C7                       u5241 1E81                       u5225 1E6B  
                     u3465 0017                       u4505 153F                       u4601 0AFA  
                     u4521 094F                       u6121 06DE                       u6041 0501  
                     u6025 0457                       u5410 1212                       u4370 0F96  
                     u4290 0F3B                       u5090 1C06                       u5154 1F1E  
                     u5170 1A02                       u3810 16E7                       u3730 1682  
                     u3650 15E1                       u5330 1CF7                       u3490 0036  
                     u3570 1B37                       u6210 07D9                       u6130 06E7  
                     u6050 0511                       u5411 1211                       u4291 0F3A  
                     u4275 0F19                       u4195 0E2B                       u5091 1C05  
                     u5155 1F23                       u5171 1A01                       u3811 16E6  
                     u3731 1681                       u3651 15E0                       u5331 1CF6  
                     u5315 1CD6                       u3491 0035                       u3571 1B36  
                     u3555 1B20                       u3395 1D1F                       u6211 07D8  
                     u6131 06E6                       u6051 0510                       u5420 124C  
                     u5340 11A1                       u4380 0FB3                       u5156 1F24  
                     u3900 177F                       u3740 1686                       u3660 15E5  
                     u3580 1589                       u5260 1E93                       u5180 1E35  
                     u4700 1028                       u6220 07EB                       u6060 052C  
                     u5421 124B                       u5341 11A0                       u4381 0FB2  
                     u4285 0F30                       u5165 1F3E                       u3901 177E  
                     u3821 16FE                       u3813 16E3                       u3805 16C5  
                     u3741 1685                       u3725 166F                       u3661 15E4  
                     u3581 1588                       u5261 1E92                       u5181 1E34  
                     u5325 1CE9                       u4701 1027                       u3485 0026  
                     u3565 1B2B                       u4445 1393                       u6221 07EA  
                     u6205 077D                       u6061 052B                       u6045 04FE  
                     u6230 1A65                       u5510 12AE                       u5350 11A7  
                     u4390 0FCD                       u3910 1785                       u3830 1712  
                     u3822 16FF                       u3750 168B                       u3670 163D  
                     u3590 158F                       u5270 1E98                       u5190 1E4C  
                     u4710 1042                       u4470 1489                       u6150 0725  
                     u6231 1A64                       u5511 12AD                       u5351 11A6  
                     u4391 0FCC                       u4375 0F91                       u5095 1C02  
                     u3911 1784                       u3831 1713                       u3823 1704  
                     u3751 168A                       u3671 163C                       u3591 158E  
                     u5271 1E97                       u5255 1E85                       u4711 1041  
                     u3495 0032                       u4471 1488                       u4455 13ED  
                     u4615 0B1B                       u4535 0970                       u6151 0724  
                     u6055 050D                       u6240 1A6B                       u5600 1326  
                     u5360 11AC                       u3920 178A                       u3840 1730  
                     u3832 1718                       u3824 1705                       u3680 1648  
                     u5280 1CB4                       u4800 10B8                       u4640 0BEA  
                     u4560 0A3F                       u6160 0730                       u6241 1A6A  
                     u5601 1325                       u5505 12A3                       u5361 11AB  
                     u4385 0FAF                       u3921 1789                       u3841 172F  
                     u3833 1719                       u3825 170A                       u3761 169D  
                     u3681 1646                       u5281 1CB3                       u4801 10B7  
                     u4465 1442                       u4641 0BE9                       u4625 0B57  
                     u4561 0A3E                       u4545 09AC                       u6161 072F  
                     u6145 06F2                       u5610 1343                       u5530 12C2  
                     u5450 1262                       u5370 11CE                       u3930 1790  
                     u3850 1755                       u3826 170B                       u3770 16AF  
                     u3762 16A4                       u3690 1649                       u4730 107B  
                     u6170 073B                       u6090 0698                       u6250 0855  
                     u5611 1342                       u5531 12C1                       u5451 1261  
                     u5435 124E                       u5371 11CD                       u4395 0FC9  
                     u3931 178F                       u3851 1754                       u3771 16AE  
                     u3763 16AB                       u3675 1639                       u5195 1E47  
                     u4731 107A                       u4635 0BA2                       u4555 09F7  
                     u6171 073A                       u6155 0721                       u6091 0697  
                     u6075 05B3                       u6307 0935                       u6251 0854  
                     u5620 135A                       u5540 12C7                       u5380 11D4  
                     u3940 1797                       u3860 175A                       u3780 16B3  
                     u4900 115D                       u4820 10C9                       u6180 074B  
                     u6260 08F8                       u6317 1A2E                       u5621 1359  
                     u5605 1322                       u5541 12C6                       u5525 12B1  
                     u5445 1257                       u5381 11D3                       u3941 1796  
                     u3861 1759                       u3781 16B2                       u4901 115C  
                     u4821 10C8                       u4725 1066                       u4485 14A6  
                     u6181 074A                       u6085 0639                       u6261 08F7  
                     u5550 12DB                       u5470 127E                       u5390 11D9  
                     u5710 1FC3                       u5630 1F4C                       u3950 179D  
                     u3790 16C2                       u4830 10DF                       u4750 1094  
                     u6190 0762                       u6270 0912                       u6327 1C63  
                     u5615 133F                       u5551 12DA                       u5471 127D  
                     u5391 11D8                       u5711 1FC2                       u5631 1F4B  
                     u3951 179C                       u3791 16C1                       u5295 1CB9  
                     u4831 10DE                       u4815 10BB                       u4751 1093  
                     u4735 1077                       u4495 14F3                       u4655 0BFD  
                     u4575 0A52                       u6191 0761                       u6175 0737  
                     u6271 0911                       u5800 1BA9                       u5560 12E2  
                     u5480 1297                       u5720 1FC9                       u5640 1F50  
                     u3960 17AF                       u3880 1770                       u4920 116F  
                     u4840 10F3                       u4760 1098                       u4680 080A  
                     u6337 1C72                       u5561 12E1                       u5481 1296  
                     u5465 1265                       u5721 1FC8                       u5705 1FB8  
                     u5641 1F4F                       u3961 17AE                       u3881 176F  
                     u4921 116E                       u4841 10F2                       u4761 1097  
                     u4745 1087                       u4681 0809                       u4665 0C39  
                     u4585 0A8E                       u6185 0747                       u5810 1BBB  
                     u5570 12E8                       u5490 129F                       u5730 1FCD  
                     u5650 1F70                       u3970 17BE                       u3890 1775  
                     u4930 1176                       u4770 109F                       u4690 0810  
                     u6347 1C81                       u5811 1BBA                       u5571 12E7  
                     u5491 129E                       u5475 127A                       u5731 1FCC  
                     u5651 1F6F                       u3891 1774                       u3875 1765  
                     u4931 1175                       u4915 115F                       u4771 109E  
                     u4691 080F                       u4675 0C75                       u4595 0ACA  
                     u5580 12FA                       u5740 1FE2                       u3980 17CD  
                     u4860 1134                       u5900 0221                       u5820 005D  
                     u6357 1A46                       u5581 12F9                       u3981 17CC  
                     u4861 1133                       u5901 0220                       u5821 005C  
                     u5590 1309                       u5750 1FF2                       u5670 1F91  
                     u3990 17D6                       u4950 1187                       u4790 10B1  
                     u5910 0245                       u5830 0077                       u5751 1FF1  
                     u5671 1F90                       u3991 17D5                       u3975 17B9  
                     u4951 1186                       u4855 111B                       u4791 10B0  
                     u5911 0244                       u5831 0076                       u6287 0864  
                     u5760 1FF6                       u4960 1ABC                       u4880 1152  
                     u5920 025C                       u5840 00BB                       u5761 1FF5  
                     u5745 1FDD                       u5665 1F83                       u4961 1ABB  
                     u4945 1179                       u4881 1151                       u4865 1130  
                     u4785 10A1                       u5921 025B                       u5841 00BA  
                     u6297 0907                       u5770 1A74                       u5690 1FB3  
                     u4890 1156                       u5930 02B2                       u5850 00F0  
                     u5771 1A73                       u5595 1304                       u5691 1FB2  
                     u4891 1155                       u4875 1145                       u5931 02B1  
                     u5851 00EF                       u5780 1A86                       u5940 02CD  
                     u5860 00F4                       u5781 1A85                       u5685 1FA5  
                     u5941 02CC                       u5925 0258                       u5861 00F3  
                     u5790 1B87                       u4990 1AD6                       u5950 02F4  
                     u5870 0123                       u4991 1AD5                       u4975 1AC3  
                     u5951 02F3                       u5935 02AE                       u5871 0122  
                     u5960 0303                       u5880 015D                       u4985 1ACA  
                     u5961 0302                       u5881 015C                       u5970 031E  
                     u5890 0198                       u5971 031D                       u5891 0197  
                     u5965 02FF                       u5990 0431                       u5991 0430  
                     u5985 03FE                       u5995 042D          ?_Lcd_Write_String 0073  
                     _main 0814                       btemp 007E                       _volt 00D7  
                     start 0000         ??_Lcd_Write_String 0075            ___fldiv@new_exp 0050  
             _sprintf$1318 00B0            __end_of_Lcd_Cmd 1A4F               ?_enviocadena 0070  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 136D            __end_of___awdiv 1E28            __end_of___flneg 1A05  
                    _EEADR 010D                      _EEDAT 010C            __end_of___awmod 1D59  
          __end_of___flmul 1000            __end_of___flsub 1AB6            __end_of___fltol 1EA4  
          __end_of___lldiv 1DBF            ___awdiv@divisor 0077            __end_of___llmod 1D00  
          __end_of___lwdiv 004F            __end_of___lwmod 1B3C            ___awdiv@counter 0020  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTC 0007                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    _TXREG 0019             adc_canal@canal 0071                      _adc_c 1A05  
          __end_of_dpowers 18A0                      _scale 0940            __end_of_isdigit 0814  
   __size_of_enviocaracter 0010                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F0           __end_of_Lcd_Init 1CAA  
         __end_of_Lcd_Port 1B7A            __initialization 07F0               __end_of_main 0940  
                   ??_main 00C9       __size_of__tdiv_to_l_ 00BD                     ?_adc_c 0070  
         ___llmod@dividend 0024                     ?_scale 003E                     _ADRESH 001E  
                   _EECON2 018D           ___awdiv@dividend 0079                     _ANSELH 0189  
                ??_Lcd_Cmd 0071                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
         __end_of___xxtofl 2000           __end_of__powers_ 1844                     ___flge 1EA4  
                   ___fleq 1BBC                  ??___fladd 005A                     ___wmul 1AB6  
                ??___fldiv 0046                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0028  
            _enviocaracter 1005                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _mapear 1C0A                     _fround 136D           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075                  ??_isdigit 0070  
       __size_of__Umul8_16 0027                  ??_sprintf 00AB            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070         __size_of_adc_canal 000E                 ___fltol@f1 0051  
           __pcstackCOMMON 0070              __end_of_adc_c 1A11             ?_enviocaracter 0070  
     __size_of_enviocadena 001F              __end_of_scale 0C9F             _Lcd_Set_Cursor 1A6E  
               __div_to_l_ 10D2                    ??_adc_c 0070                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020                 __pbssBANK0 006E  
               __pbssBANK1 00CC              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
        __end_of__Umul8_16 1B02                 __pmaintext 0814                    ?___flge 0070  
                  ?___fleq 0070                    ?___wmul 0070                    ?_mapear 0058  
                  ?_fround 003E  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1A92  
        __end_of_adc_canal 1A1F                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070             enviocaracter@a 0070                 __stringtab 1800  
           _Lcd_Write_Char 1A1F                    _Lcd_Cmd 1A35          __end_of__npowers_ 1878  
               _scale$1317 004C            ??_enviocaracter 0070            __size_of___flge 00A2  
          __size_of___fleq 004E                    ___fladd 1578                    ___fldiv 1190  
                  ___awdiv 1DBF                    ___flneg 19FA                    ___awmod 1D00  
                  ___flmul 0C9F                    ___flsub 1A92                    ___fltol 1E28  
                  ___lldiv 1D59            __size_of___wmul 0025                    ___llmod 1CAA  
                  ___lwdiv 000B                    ___lwmod 1B02            __size_of_mapear 004F  
                _ANSELbits 0188            __size_of_fround 020B            ?_Lcd_Set_Cursor 0074  
                  __ptext1 004F                    __ptext2 0940                    __ptext3 1D00  
                  __ptext4 1DBF                    __ptext5 0802                    __ptext6 136D  
                  __ptext7 1B02                    __ptext8 000B                    __ptext9 1015  
              ?__div_to_l_ 0070                    _dpowers 1878                    _isdigit 0802  
               ??___xxtofl 0074           ___awmod@dividend 0072                    _sprintf 004F  
                  clrloop0 0004     __end_of_Lcd_Write_Char 1A35       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
                Lcd_Port@a 0070             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
            ??__tdiv_to_l_ 0078                ___fladd@grs 0065              ___xxtofl@sign 0078  
              ___fldiv@grs 0052                ___fldiv@rem 004B            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                ___flmul@grs 0032  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE             __end_of___flge 1F46  
           __end_of___fleq 1C0A             __end_of___wmul 1ADB           _Lcd_Write_String 1B7A  
              _BAUDCTLbits 0187             __end_of_mapear 1C59             __end_of_fround 1578  
      start_initialization 07F0        __end_of__tdiv_to_l_ 10D2          __size_of_Lcd_Init 0051  
        __size_of_Lcd_Port 003E            ___llmod@divisor 0020            ___llmod@counter 0029  
            ??_enviocadena 0071                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1ADB                   ??_mapear 005C  
          Lcd_Write_Char@a 0072                   ??_fround 0042              sprintf@tmpval 00B9  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___fldiv@a 003E                  ___fldiv@b 0042                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
                _adc_canal 1A11          __size_of___xxtofl 00BA               _isdigit$1118 0070  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B5                sprintf@eexp 00B7  
              sprintf@fval 00C2                sprintf@prec 00C6           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 0052                   ?___fldiv 003E  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0020                  __npowers_ 1844  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
      __end_of_enviocadena 1A6E                  __pstrings 1800                __tdiv_to_l_ 1015  
             ??__div_to_l_ 0078                   ?_isdigit 0070                 ?_adc_canal 0070  
           __size_of_adc_c 000C           ___lwdiv@quotient 007B                   ?_sprintf 00A0  
           __size_of_scale 035F             ___wmul@product 0074                  clear_ram0 0003  
                 _PIE1bits 008C                   Lcd_Cmd@a 0073                   _PIR1bits 000C  
       __end_of__div_to_l_ 1190                   _PIR2bits 000D      __end_of_enviocaracter 1015  
               _ADCON0bits 001F                __stringbase 180F                 _ADCON1bits 009F  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 1C59  
                 _Lcd_Port 1B3C          enviocadena@cadena 0072   __end_of_Lcd_Write_String 1BBC  
         __size_of_Lcd_Cmd 001A                 _EECON1bits 018C                _enviocadena 1A4F  
              ??__Umul8_16 0072           __size_of___fladd 0288           __size_of___fldiv 01DD  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0056           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1315 004D                _fround$1316 0049  
       __end_of__stringtab 1810                 sprintf@val 00BD                   ___xxtofl 1F46  
         __size_of_isdigit 0012                ??_adc_canal 0070            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 10D2                   __ptext11 1AB6  
                 __ptext20 1C0A                   __ptext12 1CAA                   __ptext21 1F46  
                 __ptext13 1D59                   __ptext30 1A1F                   __ptext22 0C9F  
                 __ptext14 1E28                   __ptext31 1A6E                   __ptext23 1ADB  
                 __ptext15 1A92                   __ptext32 1C59                   __ptext24 1190  
                 __ptext16 1578                   __ptext33 1A35                   __ptext25 1A4F  
                 __ptext17 19FA                   __ptext34 1B3C                   __ptext26 1005  
                 __ptext18 1EA4                   __ptext27 1A11                   __ptext19 1BBC  
                 __ptext28 1A05                   __ptext29 1B7A                   __powers_ 1810  
         __size_of_sprintf 07A1              __size_of_main 012C                 _INTCONbits 000B  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00B4  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 180A                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0077  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00C8  
                 sprintf@f 00A0           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 180A                   stringtab 1800  
           mapear@adresval 0060              ___fladd@signs 0062               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
