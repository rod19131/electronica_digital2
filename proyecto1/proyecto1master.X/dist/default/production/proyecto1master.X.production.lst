

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 10 16:06:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:
   460  0003                     stringtab:
   461  0003                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0003  1BFF               	btfsc	btemp+1,7
   465  0004  280D               	ljmp	stringcode
   466  0005  1383               	bcf	3,7
   467  0006  187F               	btfsc	btemp+1,0
   468  0007  1783               	bsf	3,7
   469  0008  0800               	movf	0,w
   470  0009  0A84               	incf	4,f
   471  000A  1903               	skipnz
   472  000B  0AFF               	incf	btemp+1,f
   473  000C  0008               	return
   474  000D                     stringcode:
   475  000D                     stringdir:
   476  000D  3000               	movlw	high stringdir
   477  000E  008A               	movwf	10
   478  000F  0804               	movf	4,w
   479  0010  0A84               	incf	4,f
   480  0011  0782               	addwf	2,f
   481  0012                     __stringbase:
   482  0012  3400               	retlw	0
   483  0013                     __end_of__stringtab:
   484  0013                     _dpowers:
   485  0013  3401               	retlw	1
   486  0014  3400               	retlw	0
   487  0015  340A               	retlw	10
   488  0016  3400               	retlw	0
   489  0017  3464               	retlw	100
   490  0018  3400               	retlw	0
   491  0019  34E8               	retlw	232
   492  001A  3403               	retlw	3
   493  001B  3410               	retlw	16
   494  001C  3427               	retlw	39
   495  001D                     __end_of_dpowers:
   496  0019                     _TXREG	set	25
   497  000C                     _PIR1bits	set	12
   498  000D                     _PIR2bits	set	13
   499  000B                     _INTCONbits	set	11
   500  0013                     _SSPBUF	set	19
   501  0014                     _SSPCON	set	20
   502  0018                     _RCSTAbits	set	24
   503  0008                     _PORTD	set	8
   504  0006                     _PORTB	set	6
   505  0006                     _PORTBbits	set	6
   506  0039                     _RC1	set	57
   507  0038                     _RC0	set	56
   508  0063                     _SSPIF	set	99
   509  005E                     _PEIE	set	94
   510  005F                     _GIE	set	95
   511  0091                     _SSPCON2bits	set	145
   512  0094                     _SSPSTAT	set	148
   513  0093                     _SSPADD	set	147
   514  0091                     _SSPCON2	set	145
   515  009A                     _SPBRGH	set	154
   516  0099                     _SPBRG	set	153
   517  0098                     _TXSTAbits	set	152
   518  0095                     _WPUBbits	set	149
   519  0081                     _OPTION_REGbits	set	129
   520  0089                     _TRISE	set	137
   521  0088                     _TRISD	set	136
   522  0086                     _TRISB	set	134
   523  0087                     _TRISCbits	set	135
   524  0085                     _TRISA	set	133
   525  008F                     _OSCCONbits	set	143
   526  0463                     _SSPIE	set	1123
   527  043C                     _TRISC4	set	1084
   528  043B                     _TRISC3	set	1083
   529  010C                     _EEDAT	set	268
   530  010D                     _EEADR	set	269
   531  018D                     _EECON2	set	397
   532  018C                     _EECON1bits	set	396
   533  0187                     _BAUDCTLbits	set	391
   534  0188                     _ANSEL	set	392
   535  0189                     _ANSELH	set	393
   536  001D                     STR_1:
   537  001D  3425               	retlw	37	;'%'
   538  001E  3464               	retlw	100	;'d'
   539  001F  3420               	retlw	32	;' '
   540  0020  3425               	retlw	37	;'%'
   541  0021  3463               	retlw	99	;'c'
   542  0022  3425               	retlw	37	;'%'
   543  0023  3463               	retlw	99	;'c'
   544  0024  3420               	retlw	32	;' '
   545  0025  3425               	retlw	37	;'%'
   546  0026  3464               	retlw	100	;'d'
   547  0027  3420               	retlw	32	;' '
   548  0028  3425               	retlw	37	;'%'
   549  0029  3464               	retlw	100	;'d'
   550  002A  340A               	retlw	10
   551  002B  3400               	retlw	0
   552  002C                     STR_2:
   553  002C  3449               	retlw	73	;'I'
   554  002D  345F               	retlw	95	;'_'
   555  002E  344C               	retlw	76	;'L'
   556  002F  3452               	retlw	82	;'R'
   557  0030  345F               	retlw	95	;'_'
   558  0031  344D               	retlw	77	;'M'
   559  0032  345F               	retlw	95	;'_'
   560  0033  344D               	retlw	77	;'M'
   561  0034  3461               	retlw	97	;'a'
   562  0035  3467               	retlw	103	;'g'
   563  0036  346E               	retlw	110	;'n'
   564  0037  3465               	retlw	101	;'e'
   565  0038  3474               	retlw	116	;'t'
   566  0039  3459               	retlw	89	;'Y'
   567  003A  3400               	retlw	0
   568                           
   569                           	psect	cinit
   570  07F3                     start_initialization:	
   571                           ; #config settings
   572                           
   573  07F3                     __initialization:
   574                           
   575                           ; Clear objects allocated to BANK0
   576  07F3  1383               	bcf	3,7	;select IRP bank0
   577  07F4  3020               	movlw	low __pbssBANK0
   578  07F5  0084               	movwf	4
   579  07F6  3046               	movlw	low (__pbssBANK0+38)
   580  07F7  120A  118A  20FA  120A  118A  	fcall	clear_ram0
   581  07FC                     end_of_initialization:	
   582                           ;End of C runtime variable initialization code
   583                           
   584  07FC                     __end_of__initialization:
   585  07FC  0183               	clrf	3
   586  07FD  120A  118A  2D73   	ljmp	_main	;jump to C main() function
   587                           
   588                           	psect	bssBANK0
   589  0020                     __pbssBANK0:
   590  0020                     _Heading:
   591  0020                     	ds	2
   592  0022                     _arct:
   593  0022                     	ds	2
   594  0024                     _yms:
   595  0024                     	ds	2
   596  0026                     _xms:
   597  0026                     	ds	2
   598  0028                     _y:
   599  0028                     	ds	2
   600  002A                     _x:
   601  002A                     	ds	2
   602  002C                     _mapping:
   603  002C                     	ds	1
   604  002D                     _z1:
   605  002D                     	ds	1
   606  002E                     _yls:
   607  002E                     	ds	1
   608  002F                     _xls:
   609  002F                     	ds	1
   610  0030                     _M:
   611  0030                     	ds	1
   612  0031                     _R:
   613  0031                     	ds	1
   614  0032                     _L:
   615  0032                     	ds	1
   616  0033                     _s2:
   617  0033                     	ds	1
   618  0034                     _s1:
   619  0034                     	ds	1
   620  0035                     _a:
   621  0035                     	ds	1
   622  0036                     _volt:
   623  0036                     	ds	16
   624                           
   625                           	psect	clrtext
   626  00FA                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  00FA  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  00FB                     clrloop0:
   632  00FB  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  00FC  0A84               	incf	4,f	;increment pointer
   634  00FD  0604               	xorwf	4,w	;XOR with final address
   635  00FE  1903               	btfsc	3,2	;have we reached the end yet?
   636  00FF  3400               	retlw	0	;all done for this memory range, return
   637  0100  0604               	xorwf	4,w	;XOR again to restore value
   638  0101  28FB               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackCOMMON
   641  0070                     __pcstackCOMMON:
   642  0070                     ?_setup:
   643  0070                     ?_I2C_Master_Start:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ??_I2C_Master_Start:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_I2C_Master_Write:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_I2C_Master_Stop:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_I2C_Master_Stop:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_enviocadena:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Lcd_Init:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_main:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_I2C_Master_Wait:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_I2C_Master_Wait:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Lcd_Port:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_Lcd_Port:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Lcd_Cmd:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_Lcd_Write_Char:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_enviocaracter:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_enviocaracter:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_Master_Read:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?___lwdiv:	
   695                           ; 2 bytes @ 0x0
   696                           
   697  0070                     ?___lldiv:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  0070                     Lcd_Port@a:	
   701                           ; 4 bytes @ 0x0
   702                           
   703  0070                     enviocaracter@a:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     I2C_Master_Write@d:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     I2C_Master_Read@a:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0070                     ___lwdiv@divisor:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     ___lldiv@divisor:	
   716                           ; 2 bytes @ 0x0
   717                           
   718                           
   719                           ; 4 bytes @ 0x0
   720  0070                     	ds	1
   721  0071                     ??_enviocadena:
   722  0071                     ??_Lcd_Cmd:	
   723                           ; 1 bytes @ 0x1
   724                           
   725  0071                     ??_Lcd_Write_Char:	
   726                           ; 1 bytes @ 0x1
   727                           
   728                           
   729                           ; 1 bytes @ 0x1
   730  0071                     	ds	1
   731  0072                     ??_I2C_Master_Write:
   732  0072                     ??_I2C_Master_Read:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0072                     Lcd_Write_Char@a:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0072                     enviocadena@cadena:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     ___lwdiv@dividend:	
   742                           ; 1 bytes @ 0x2
   743                           
   744                           
   745                           ; 2 bytes @ 0x2
   746  0072                     	ds	1
   747  0073                     ?_Lcd_Write_String:
   748  0073                     Lcd_Cmd@a:	
   749                           ; 1 bytes @ 0x3
   750                           
   751  0073                     Lcd_Write_String@a:	
   752                           ; 1 bytes @ 0x3
   753                           
   754                           
   755                           ; 2 bytes @ 0x3
   756  0073                     	ds	1
   757  0074                     ?_Lcd_Set_Cursor:
   758  0074                     ??_Lcd_Init:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0074                     ??___lwdiv:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     Lcd_Set_Cursor@b:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     I2C_Master_Read@temp:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ___lldiv@dividend:	
   771                           ; 2 bytes @ 0x4
   772                           
   773                           
   774                           ; 4 bytes @ 0x4
   775  0074                     	ds	1
   776  0075                     ??_Lcd_Set_Cursor:
   777  0075                     ??_Lcd_Write_String:	
   778                           ; 1 bytes @ 0x5
   779                           
   780  0075                     ___lwdiv@quotient:	
   781                           ; 1 bytes @ 0x5
   782                           
   783                           
   784                           ; 2 bytes @ 0x5
   785  0075                     	ds	1
   786  0076                     Lcd_Set_Cursor@a:
   787                           
   788                           ; 1 bytes @ 0x6
   789  0076                     	ds	1
   790  0077                     Lcd_Set_Cursor@temp:
   791  0077                     ___lwdiv@counter:	
   792                           ; 1 bytes @ 0x7
   793                           
   794                           
   795                           ; 1 bytes @ 0x7
   796  0077                     	ds	1
   797  0078                     ??___lldiv:
   798  0078                     ?___lwmod:	
   799                           ; 1 bytes @ 0x8
   800                           
   801  0078                     Lcd_Write_String@i:	
   802                           ; 2 bytes @ 0x8
   803                           
   804  0078                     ___lwmod@divisor:	
   805                           ; 2 bytes @ 0x8
   806                           
   807                           
   808                           ; 2 bytes @ 0x8
   809  0078                     	ds	1
   810  0079                     ___lldiv@quotient:
   811                           
   812                           ; 4 bytes @ 0x9
   813  0079                     	ds	1
   814  007A                     ___lwmod@dividend:
   815                           
   816                           ; 2 bytes @ 0xA
   817  007A                     	ds	2
   818  007C                     ??___lwmod:
   819                           
   820                           ; 1 bytes @ 0xC
   821  007C                     	ds	1
   822  007D                     ___lldiv@counter:
   823  007D                     ___lwmod@counter:	
   824                           ; 1 bytes @ 0xD
   825                           
   826                           
   827                           ; 1 bytes @ 0xD
   828  007D                     	ds	1
   829                           
   830                           	psect	cstackBANK0
   831  0046                     __pcstackBANK0:
   832  0046                     ?_I2C_Master_Init:
   833  0046                     ?_sprintf:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0046                     sprintf@f:	
   837                           ; 2 bytes @ 0x0
   838                           
   839  0046                     I2C_Master_Init@c:	
   840                           ; 1 bytes @ 0x0
   841                           
   842                           
   843                           ; 4 bytes @ 0x0
   844  0046                     	ds	4
   845  004A                     ??_I2C_Master_Init:
   846                           
   847                           ; 1 bytes @ 0x4
   848  004A                     	ds	4
   849  004E                     ??_setup:
   850                           
   851                           ; 1 bytes @ 0x8
   852  004E                     	ds	3
   853  0051                     ??_sprintf:
   854                           
   855                           ; 1 bytes @ 0xB
   856  0051                     	ds	3
   857  0054                     sprintf@flag:
   858                           
   859                           ; 1 bytes @ 0xE
   860  0054                     	ds	1
   861  0055                     sprintf@prec:
   862                           
   863                           ; 1 bytes @ 0xF
   864  0055                     	ds	1
   865  0056                     sprintf@ap:
   866                           
   867                           ; 1 bytes @ 0x10
   868  0056                     	ds	1
   869  0057                     sprintf@val:
   870                           
   871                           ; 2 bytes @ 0x11
   872  0057                     	ds	2
   873  0059                     sprintf@sp:
   874                           
   875                           ; 1 bytes @ 0x13
   876  0059                     	ds	1
   877  005A                     sprintf@c:
   878                           
   879                           ; 1 bytes @ 0x14
   880  005A                     	ds	1
   881  005B                     ??_main:
   882                           
   883                           ; 1 bytes @ 0x15
   884  005B                     	ds	9
   885                           
   886                           	psect	maintext
   887  0573                     __pmaintext:	
   888 ;;
   889 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   890 ;;
   891 ;; *************** function _main *****************
   892 ;; Defined at:
   893 ;;		line 71 in file "proyecto1master.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : B00/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       9       0       0       0
   910 ;;      Totals:         0       9       0       0       0
   911 ;;Total ram usage:        9 bytes
   912 ;; Hardware stack levels required when called:    4
   913 ;; This function calls:
   914 ;;		_I2C_Master_Read
   915 ;;		_I2C_Master_Start
   916 ;;		_I2C_Master_Stop
   917 ;;		_I2C_Master_Write
   918 ;;		_Lcd_Set_Cursor
   919 ;;		_Lcd_Write_String
   920 ;;		_enviocadena
   921 ;;		_setup
   922 ;;		_sprintf
   923 ;; This function is called by:
   924 ;;		Startup code after reset
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _main
   930  0573                     _main:
   931  0573                     l1745:	
   932                           ;incstack = 0
   933                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   934                           
   935                           
   936                           ;proyecto1master.c: 72:     setup();
   937  0573  120A  118A  238B  120A  118A  	fcall	_setup
   938  0578  2D9D               	goto	l1757
   939  0579                     l1747:
   940                           
   941                           ;proyecto1master.c: 78:                 L = 45;
   942  0579  302D               	movlw	45
   943  057A  00DB               	movwf	??_main
   944  057B  085B               	movf	??_main,w
   945  057C  00B2               	movwf	_L
   946                           
   947                           ;proyecto1master.c: 79:                 R = 45;
   948  057D  302D               	movlw	45
   949  057E  00DB               	movwf	??_main
   950  057F  085B               	movf	??_main,w
   951  0580  00B1               	movwf	_R
   952                           
   953                           ;proyecto1master.c: 80:                 break;
   954  0581  2DB5               	goto	l102
   955  0582                     l1749:
   956                           
   957                           ;proyecto1master.c: 83:                 L = 94;
   958  0582  305E               	movlw	94
   959  0583  00DB               	movwf	??_main
   960  0584  085B               	movf	??_main,w
   961  0585  00B2               	movwf	_L
   962                           
   963                           ;proyecto1master.c: 84:                 R = 94;
   964  0586  305E               	movlw	94
   965  0587  00DB               	movwf	??_main
   966  0588  085B               	movf	??_main,w
   967  0589  00B1               	movwf	_R
   968                           
   969                           ;proyecto1master.c: 85:                 break;
   970  058A  2DB5               	goto	l102
   971  058B                     l1751:
   972                           
   973                           ;proyecto1master.c: 88:                 L = 60;
   974  058B  303C               	movlw	60
   975  058C  00DB               	movwf	??_main
   976  058D  085B               	movf	??_main,w
   977  058E  00B2               	movwf	_L
   978                           
   979                           ;proyecto1master.c: 89:                 R = 60;
   980  058F  303C               	movlw	60
   981  0590  00DB               	movwf	??_main
   982  0591  085B               	movf	??_main,w
   983  0592  00B1               	movwf	_R
   984                           
   985                           ;proyecto1master.c: 90:                 break;
   986  0593  2DB5               	goto	l102
   987  0594                     l1753:
   988                           
   989                           ;proyecto1master.c: 93:                 L = 62;
   990  0594  303E               	movlw	62
   991  0595  00DB               	movwf	??_main
   992  0596  085B               	movf	??_main,w
   993  0597  00B2               	movwf	_L
   994                           
   995                           ;proyecto1master.c: 94:                 R = 62;
   996  0598  303E               	movlw	62
   997  0599  00DB               	movwf	??_main
   998  059A  085B               	movf	??_main,w
   999  059B  00B1               	movwf	_R
  1000                           
  1001                           ;proyecto1master.c: 95:                 break;
  1002  059C  2DB5               	goto	l102
  1003  059D                     l1757:
  1004  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1005  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1006  059F  0833               	movf	_s2,w
  1007  05A0  00DB               	movwf	??_main
  1008  05A1  01DC               	clrf	??_main+1
  1009                           
  1010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 1, Range of values is 0 to 0
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            4     3 (average)
  1016                           ; direct_byte           11     8 (fixed)
  1017                           ; jumptable            260     6 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  05A2  085C               	movf	??_main+1,w
  1020  05A3  3A00               	xorlw	0	; case 0
  1021  05A4  1903               	skipnz
  1022  05A5  2DA7               	goto	l1897
  1023  05A6  2DB5               	goto	l102
  1024  05A7                     l1897:
  1025                           
  1026                           ; Switch size 1, requested type "simple"
  1027                           ; Number of cases is 4, Range of values is 0 to 45
  1028                           ; switch strategies available:
  1029                           ; Name         Instructions Cycles
  1030                           ; simple_byte           13     7 (average)
  1031                           ; direct_byte          146     8 (fixed)
  1032                           ; jumptable            260     6 (fixed)
  1033                           ;	Chosen strategy is simple_byte
  1034  05A7  085B               	movf	??_main,w
  1035  05A8  3A00               	xorlw	0	; case 0
  1036  05A9  1903               	skipnz
  1037  05AA  2D79               	goto	l1747
  1038  05AB  3A05               	xorlw	5	; case 5
  1039  05AC  1903               	skipnz
  1040  05AD  2D8B               	goto	l1751
  1041  05AE  3A2D               	xorlw	45	; case 40
  1042  05AF  1903               	skipnz
  1043  05B0  2D94               	goto	l1753
  1044  05B1  3A05               	xorlw	5	; case 45
  1045  05B2  1903               	skipnz
  1046  05B3  2D82               	goto	l1749
  1047  05B4  2DB5               	goto	l102
  1048  05B5                     l102:
  1049                           
  1050                           ;proyecto1master.c: 98:     if ((PORTBbits.RB0 == 1) && (s1 >= 4)){
  1051  05B5  1C06               	btfss	6,0	;volatile
  1052  05B6  2DB8               	goto	u951
  1053  05B7  2DB9               	goto	u950
  1054  05B8                     u951:
  1055  05B8  2DC1               	goto	l106
  1056  05B9                     u950:
  1057  05B9                     l1759:
  1058  05B9  3004               	movlw	4
  1059  05BA  0234               	subwf	_s1,w
  1060  05BB  1C03               	skipc
  1061  05BC  2DBE               	goto	u961
  1062  05BD  2DBF               	goto	u960
  1063  05BE                     u961:
  1064  05BE  2DC1               	goto	l106
  1065  05BF                     u960:
  1066  05BF                     l1761:
  1067                           
  1068                           ;proyecto1master.c: 99:             M = 0;
  1069  05BF  01B0               	clrf	_M
  1070                           
  1071                           ;proyecto1master.c: 100:             }
  1072  05C0  2DCD               	goto	l1765
  1073  05C1                     l106:	
  1074                           ;proyecto1master.c: 102:     else if ((PORTBbits.RB0 == 0) || (s1 < 4)){
  1075                           
  1076  05C1  1C06               	btfss	6,0	;volatile
  1077  05C2  2DC4               	goto	u971
  1078  05C3  2DC5               	goto	u970
  1079  05C4                     u971:
  1080  05C4  2DCB               	goto	l110
  1081  05C5                     u970:
  1082  05C5                     l1763:
  1083  05C5  3004               	movlw	4
  1084  05C6  0234               	subwf	_s1,w
  1085  05C7  1803               	skipnc
  1086  05C8  2DCA               	goto	u981
  1087  05C9  2DCB               	goto	u980
  1088  05CA                     u981:
  1089  05CA  2DCD               	goto	l1765
  1090  05CB                     u980:
  1091  05CB                     l110:
  1092                           
  1093                           ;proyecto1master.c: 103:             M = 1;}
  1094  05CB  01B0               	clrf	_M
  1095  05CC  0AB0               	incf	_M,f
  1096  05CD                     l1765:
  1097                           
  1098                           ;proyecto1master.c: 106:         I2C_Master_Start();
  1099  05CD  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  1100                           
  1101                           ;proyecto1master.c: 107:         I2C_Master_Write(0x51);
  1102  05D2  3051               	movlw	81
  1103  05D3  00F0               	movwf	I2C_Master_Write@d
  1104  05D4  3000               	movlw	0
  1105  05D5  00F1               	movwf	I2C_Master_Write@d+1
  1106  05D6  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1107                           
  1108                           ;proyecto1master.c: 108:         s1 = I2C_Master_Read(0);
  1109  05DB  3000               	movlw	0
  1110  05DC  00F0               	movwf	I2C_Master_Read@a
  1111  05DD  00F1               	movwf	I2C_Master_Read@a+1
  1112  05DE  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1113  05E3  0870               	movf	?_I2C_Master_Read,w
  1114  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1115  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1116  05E6  00DB               	movwf	??_main
  1117  05E7  085B               	movf	??_main,w
  1118  05E8  00B4               	movwf	_s1
  1119                           
  1120                           ;proyecto1master.c: 109:         I2C_Master_Stop();
  1121  05E9  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  1122  05EE                     l1767:
  1123                           
  1124                           ;proyecto1master.c: 110:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1125  05EE  301A               	movlw	26
  1126  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1127  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1128  05F1  00DC               	movwf	??_main+1
  1129  05F2  30F7               	movlw	247
  1130  05F3  00DB               	movwf	??_main
  1131  05F4                     u1087:
  1132  05F4  0BDB               	decfsz	??_main,f
  1133  05F5  2DF4               	goto	u1087
  1134  05F6  0BDC               	decfsz	??_main+1,f
  1135  05F7  2DF4               	goto	u1087
  1136  05F8  2DF9               	nop2
  1137  05F9                     l1769:
  1138                           
  1139                           ;proyecto1master.c: 112:         I2C_Master_Start();
  1140  05F9  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  1141  05FE                     l1771:
  1142                           
  1143                           ;proyecto1master.c: 113:         I2C_Master_Write(0x60);
  1144  05FE  3060               	movlw	96
  1145  05FF  00F0               	movwf	I2C_Master_Write@d
  1146  0600  3000               	movlw	0
  1147  0601  00F1               	movwf	I2C_Master_Write@d+1
  1148  0602  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1149  0607                     l1773:
  1150                           
  1151                           ;proyecto1master.c: 114:         I2C_Master_Write(M);
  1152  0607  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0608  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0609  0830               	movf	_M,w
  1155  060A  00DB               	movwf	??_main
  1156  060B  01DC               	clrf	??_main+1
  1157  060C  085B               	movf	??_main,w
  1158  060D  00F0               	movwf	I2C_Master_Write@d
  1159  060E  085C               	movf	??_main+1,w
  1160  060F  00F1               	movwf	I2C_Master_Write@d+1
  1161  0610  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1162  0615                     l1775:
  1163                           
  1164                           ;proyecto1master.c: 115:         I2C_Master_Stop();
  1165  0615  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  1166  061A                     l1777:
  1167                           
  1168                           ;proyecto1master.c: 116:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1169  061A  301A               	movlw	26
  1170  061B  1283               	bcf	3,5	;RP0=0, select bank0
  1171  061C  1303               	bcf	3,6	;RP1=0, select bank0
  1172  061D  00DC               	movwf	??_main+1
  1173  061E  30F7               	movlw	247
  1174  061F  00DB               	movwf	??_main
  1175  0620                     u1097:
  1176  0620  0BDB               	decfsz	??_main,f
  1177  0621  2E20               	goto	u1097
  1178  0622  0BDC               	decfsz	??_main+1,f
  1179  0623  2E20               	goto	u1097
  1180  0624  2E25               	nop2
  1181                           
  1182                           ;proyecto1master.c: 118:         I2C_Master_Start();
  1183  0625  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  1184                           
  1185                           ;proyecto1master.c: 119:         I2C_Master_Write(0x61);
  1186  062A  3061               	movlw	97
  1187  062B  00F0               	movwf	I2C_Master_Write@d
  1188  062C  3000               	movlw	0
  1189  062D  00F1               	movwf	I2C_Master_Write@d+1
  1190  062E  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1191                           
  1192                           ;proyecto1master.c: 120:         s2 = I2C_Master_Read(0);
  1193  0633  3000               	movlw	0
  1194  0634  00F0               	movwf	I2C_Master_Read@a
  1195  0635  00F1               	movwf	I2C_Master_Read@a+1
  1196  0636  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1197  063B  0870               	movf	?_I2C_Master_Read,w
  1198  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1199  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1200  063E  00DB               	movwf	??_main
  1201  063F  085B               	movf	??_main,w
  1202  0640  00B3               	movwf	_s2
  1203                           
  1204                           ;proyecto1master.c: 121:         I2C_Master_Stop();
  1205  0641  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  1206  0646                     l1779:
  1207                           
  1208                           ;proyecto1master.c: 122:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1209  0646  301A               	movlw	26
  1210  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0649  00DC               	movwf	??_main+1
  1213  064A  30F7               	movlw	247
  1214  064B  00DB               	movwf	??_main
  1215  064C                     u1107:
  1216  064C  0BDB               	decfsz	??_main,f
  1217  064D  2E4C               	goto	u1107
  1218  064E  0BDC               	decfsz	??_main+1,f
  1219  064F  2E4C               	goto	u1107
  1220  0650  2E51               	nop2
  1221  0651                     l1781:
  1222                           
  1223                           ;proyecto1master.c: 124:         I2C_Master_Start();
  1224  0651  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  1225  0656                     l1783:
  1226                           
  1227                           ;proyecto1master.c: 125:         I2C_Master_Write(0x1A);
  1228  0656  301A               	movlw	26
  1229  0657  00F0               	movwf	I2C_Master_Write@d
  1230  0658  3000               	movlw	0
  1231  0659  00F1               	movwf	I2C_Master_Write@d+1
  1232  065A  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1233  065F                     l1785:
  1234                           
  1235                           ;proyecto1master.c: 126:         I2C_Master_Write(0x00);
  1236  065F  3000               	movlw	0
  1237  0660  00F0               	movwf	I2C_Master_Write@d
  1238  0661  00F1               	movwf	I2C_Master_Write@d+1
  1239  0662  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1240  0667                     l1787:
  1241                           
  1242                           ;proyecto1master.c: 127:         I2C_Master_Stop();
  1243  0667  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  1244  066C                     l1789:
  1245                           
  1246                           ;proyecto1master.c: 128:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1247  066C  301A               	movlw	26
  1248  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1249  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1250  066F  00DC               	movwf	??_main+1
  1251  0670  30F7               	movlw	247
  1252  0671  00DB               	movwf	??_main
  1253  0672                     u1117:
  1254  0672  0BDB               	decfsz	??_main,f
  1255  0673  2E72               	goto	u1117
  1256  0674  0BDC               	decfsz	??_main+1,f
  1257  0675  2E72               	goto	u1117
  1258  0676  2E77               	nop2
  1259                           
  1260                           ;proyecto1master.c: 130:         I2C_Master_Start();
  1261  0677  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  1262                           
  1263                           ;proyecto1master.c: 131:         I2C_Master_Write(0x1B);
  1264  067C  301B               	movlw	27
  1265  067D  00F0               	movwf	I2C_Master_Write@d
  1266  067E  3000               	movlw	0
  1267  067F  00F1               	movwf	I2C_Master_Write@d+1
  1268  0680  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1269                           
  1270                           ;proyecto1master.c: 132:         xls = I2C_Master_Read(1);
  1271  0685  3001               	movlw	1
  1272  0686  00F0               	movwf	I2C_Master_Read@a
  1273  0687  3000               	movlw	0
  1274  0688  00F1               	movwf	I2C_Master_Read@a+1
  1275  0689  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1276  068E  0870               	movf	?_I2C_Master_Read,w
  1277  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0691  00DB               	movwf	??_main
  1280  0692  085B               	movf	??_main,w
  1281  0693  00AF               	movwf	_xls
  1282                           
  1283                           ;proyecto1master.c: 133:         xms = I2C_Master_Read(1)<<8;
  1284  0694  3001               	movlw	1
  1285  0695  00F0               	movwf	I2C_Master_Read@a
  1286  0696  3000               	movlw	0
  1287  0697  00F1               	movwf	I2C_Master_Read@a+1
  1288  0698  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1289  069D  0870               	movf	?_I2C_Master_Read,w
  1290  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1291  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1292  06A0  00DC               	movwf	??_main+1
  1293  06A1  01DB               	clrf	??_main
  1294  06A2  085B               	movf	??_main,w
  1295  06A3  00A6               	movwf	_xms
  1296  06A4  085C               	movf	??_main+1,w
  1297  06A5  00A7               	movwf	_xms+1
  1298                           
  1299                           ;proyecto1master.c: 134:         yls = I2C_Master_Read(1);
  1300  06A6  3001               	movlw	1
  1301  06A7  00F0               	movwf	I2C_Master_Read@a
  1302  06A8  3000               	movlw	0
  1303  06A9  00F1               	movwf	I2C_Master_Read@a+1
  1304  06AA  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1305  06AF  0870               	movf	?_I2C_Master_Read,w
  1306  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1307  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1308  06B2  00DB               	movwf	??_main
  1309  06B3  085B               	movf	??_main,w
  1310  06B4  00AE               	movwf	_yls
  1311                           
  1312                           ;proyecto1master.c: 135:         yms = I2C_Master_Read(1)<<8;
  1313  06B5  3001               	movlw	1
  1314  06B6  00F0               	movwf	I2C_Master_Read@a
  1315  06B7  3000               	movlw	0
  1316  06B8  00F1               	movwf	I2C_Master_Read@a+1
  1317  06B9  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1318  06BE  0870               	movf	?_I2C_Master_Read,w
  1319  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1320  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1321  06C1  00DC               	movwf	??_main+1
  1322  06C2  01DB               	clrf	??_main
  1323  06C3  085B               	movf	??_main,w
  1324  06C4  00A4               	movwf	_yms
  1325  06C5  085C               	movf	??_main+1,w
  1326  06C6  00A5               	movwf	_yms+1
  1327                           
  1328                           ;proyecto1master.c: 136:         z1 = I2C_Master_Read(1);
  1329  06C7  3001               	movlw	1
  1330  06C8  00F0               	movwf	I2C_Master_Read@a
  1331  06C9  3000               	movlw	0
  1332  06CA  00F1               	movwf	I2C_Master_Read@a+1
  1333  06CB  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1334  06D0  0870               	movf	?_I2C_Master_Read,w
  1335  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1336  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1337  06D3  00DB               	movwf	??_main
  1338  06D4  085B               	movf	??_main,w
  1339  06D5  00AD               	movwf	_z1
  1340                           
  1341                           ;proyecto1master.c: 137:         z1 = I2C_Master_Read(1);
  1342  06D6  3001               	movlw	1
  1343  06D7  00F0               	movwf	I2C_Master_Read@a
  1344  06D8  3000               	movlw	0
  1345  06D9  00F1               	movwf	I2C_Master_Read@a+1
  1346  06DA  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1347  06DF  0870               	movf	?_I2C_Master_Read,w
  1348  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1349  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1350  06E2  00DB               	movwf	??_main
  1351  06E3  085B               	movf	??_main,w
  1352  06E4  00AD               	movwf	_z1
  1353                           
  1354                           ;proyecto1master.c: 138:         z1 = I2C_Master_Read(0);
  1355  06E5  3000               	movlw	0
  1356  06E6  00F0               	movwf	I2C_Master_Read@a
  1357  06E7  00F1               	movwf	I2C_Master_Read@a+1
  1358  06E8  120A  118A  21AE  120A  118A  	fcall	_I2C_Master_Read
  1359  06ED  0870               	movf	?_I2C_Master_Read,w
  1360  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1361  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1362  06F0  00DB               	movwf	??_main
  1363  06F1  085B               	movf	??_main,w
  1364  06F2  00AD               	movwf	_z1
  1365                           
  1366                           ;proyecto1master.c: 139:         I2C_Master_Stop();
  1367  06F3  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  1368  06F8                     l1791:
  1369                           
  1370                           ;proyecto1master.c: 140:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1371  06F8  3082               	movlw	130
  1372  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1373  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1374  06FB  00DC               	movwf	??_main+1
  1375  06FC  30DD               	movlw	221
  1376  06FD  00DB               	movwf	??_main
  1377  06FE                     u1127:
  1378  06FE  0BDB               	decfsz	??_main,f
  1379  06FF  2EFE               	goto	u1127
  1380  0700  0BDC               	decfsz	??_main+1,f
  1381  0701  2EFE               	goto	u1127
  1382  0702                     l1793:
  1383                           
  1384                           ;proyecto1master.c: 141:         x = xms | xls;
  1385  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0704  0826               	movf	_xms,w
  1388  0705  042F               	iorwf	_xls,w
  1389  0706  00AA               	movwf	_x
  1390  0707  0827               	movf	_xms+1,w
  1391  0708  00AB               	movwf	_x+1
  1392  0709                     l1795:
  1393                           
  1394                           ;proyecto1master.c: 142:         y = yms | yls;
  1395  0709  0824               	movf	_yms,w
  1396  070A  042E               	iorwf	_yls,w
  1397  070B  00A8               	movwf	_y
  1398  070C  0825               	movf	_yms+1,w
  1399  070D  00A9               	movwf	_y+1
  1400  070E                     l1797:
  1401                           
  1402                           ;proyecto1master.c: 145:         if (y <= 700 && x > 0){
  1403  070E  0829               	movf	_y+1,w
  1404  070F  3A80               	xorlw	128
  1405  0710  00FF               	movwf	btemp+1
  1406  0711  3082               	movlw	130
  1407  0712  027F               	subwf	btemp+1,w
  1408  0713  1D03               	skipz
  1409  0714  2F17               	goto	u995
  1410  0715  30BD               	movlw	189
  1411  0716  0228               	subwf	_y,w
  1412  0717                     u995:
  1413  0717  1803               	skipnc
  1414  0718  2F1A               	goto	u991
  1415  0719  2F1B               	goto	u990
  1416  071A                     u991:
  1417  071A  2F30               	goto	l1803
  1418  071B                     u990:
  1419  071B                     l1799:
  1420  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1421  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1422  071D  082B               	movf	_x+1,w
  1423  071E  3A80               	xorlw	128
  1424  071F  00FF               	movwf	btemp+1
  1425  0720  3080               	movlw	128
  1426  0721  027F               	subwf	btemp+1,w
  1427  0722  1D03               	skipz
  1428  0723  2F26               	goto	u1005
  1429  0724  3001               	movlw	1
  1430  0725  022A               	subwf	_x,w
  1431  0726                     u1005:
  1432  0726  1C03               	skipc
  1433  0727  2F29               	goto	u1001
  1434  0728  2F2A               	goto	u1000
  1435  0729                     u1001:
  1436  0729  2F30               	goto	l1803
  1437  072A                     u1000:
  1438  072A                     l1801:
  1439                           
  1440                           ;proyecto1master.c: 146:             mapping = 64;
  1441  072A  3040               	movlw	64
  1442  072B  1283               	bcf	3,5	;RP0=0, select bank0
  1443  072C  1303               	bcf	3,6	;RP1=0, select bank0
  1444  072D  00DB               	movwf	??_main
  1445  072E  085B               	movf	??_main,w
  1446  072F  00AC               	movwf	_mapping
  1447  0730                     l1803:
  1448                           
  1449                           ;proyecto1master.c: 148:         if (y > 700){
  1450  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0732  0829               	movf	_y+1,w
  1453  0733  3A80               	xorlw	128
  1454  0734  00FF               	movwf	btemp+1
  1455  0735  3082               	movlw	130
  1456  0736  027F               	subwf	btemp+1,w
  1457  0737  1D03               	skipz
  1458  0738  2F3B               	goto	u1015
  1459  0739  30BD               	movlw	189
  1460  073A  0228               	subwf	_y,w
  1461  073B                     u1015:
  1462  073B  1C03               	skipc
  1463  073C  2F3E               	goto	u1011
  1464  073D  2F3F               	goto	u1010
  1465  073E                     u1011:
  1466  073E  2F45               	goto	l1807
  1467  073F                     u1010:
  1468  073F                     l1805:
  1469                           
  1470                           ;proyecto1master.c: 149:             mapping = 128;}
  1471  073F  3080               	movlw	128
  1472  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0742  00DB               	movwf	??_main
  1475  0743  085B               	movf	??_main,w
  1476  0744  00AC               	movwf	_mapping
  1477  0745                     l1807:
  1478                           
  1479                           ;proyecto1master.c: 150:         if (y <= 700 && x < 0){
  1480  0745  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0746  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0747  0829               	movf	_y+1,w
  1483  0748  3A80               	xorlw	128
  1484  0749  00FF               	movwf	btemp+1
  1485  074A  3082               	movlw	130
  1486  074B  027F               	subwf	btemp+1,w
  1487  074C  1D03               	skipz
  1488  074D  2F50               	goto	u1025
  1489  074E  30BD               	movlw	189
  1490  074F  0228               	subwf	_y,w
  1491  0750                     u1025:
  1492  0750  1803               	skipnc
  1493  0751  2F53               	goto	u1021
  1494  0752  2F54               	goto	u1020
  1495  0753                     u1021:
  1496  0753  2F5E               	goto	l1813
  1497  0754                     u1020:
  1498  0754                     l1809:
  1499  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0756  1FAB               	btfss	_x+1,7
  1502  0757  2F59               	goto	u1031
  1503  0758  2F5A               	goto	u1030
  1504  0759                     u1031:
  1505  0759  2F5E               	goto	l1813
  1506  075A                     u1030:
  1507  075A                     l1811:
  1508                           
  1509                           ;proyecto1master.c: 151:             mapping = 192;
  1510  075A  30C0               	movlw	192
  1511  075B  00DB               	movwf	??_main
  1512  075C  085B               	movf	??_main,w
  1513  075D  00AC               	movwf	_mapping
  1514  075E                     l1813:
  1515                           
  1516                           ;proyecto1master.c: 153:         if (y < 0 && x < 0){
  1517  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1518  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0760  1FA9               	btfss	_y+1,7
  1520  0761  2F63               	goto	u1041
  1521  0762  2F64               	goto	u1040
  1522  0763                     u1041:
  1523  0763  2F6C               	goto	l1819
  1524  0764                     u1040:
  1525  0764                     l1815:
  1526  0764  1FAB               	btfss	_x+1,7
  1527  0765  2F67               	goto	u1051
  1528  0766  2F68               	goto	u1050
  1529  0767                     u1051:
  1530  0767  2F6C               	goto	l1819
  1531  0768                     u1050:
  1532  0768                     l1817:
  1533                           
  1534                           ;proyecto1master.c: 154:             mapping = 240;
  1535  0768  30F0               	movlw	240
  1536  0769  00DB               	movwf	??_main
  1537  076A  085B               	movf	??_main,w
  1538  076B  00AC               	movwf	_mapping
  1539  076C                     l1819:
  1540                           
  1541                           ;proyecto1master.c: 156:         if (y < 0 && x > 0){
  1542  076C  1FA9               	btfss	_y+1,7
  1543  076D  2F6F               	goto	u1061
  1544  076E  2F70               	goto	u1060
  1545  076F                     u1061:
  1546  076F  2F80               	goto	l1825
  1547  0770                     u1060:
  1548  0770                     l1821:
  1549  0770  082B               	movf	_x+1,w
  1550  0771  3A80               	xorlw	128
  1551  0772  00FF               	movwf	btemp+1
  1552  0773  3080               	movlw	128
  1553  0774  027F               	subwf	btemp+1,w
  1554  0775  1D03               	skipz
  1555  0776  2F79               	goto	u1075
  1556  0777  3001               	movlw	1
  1557  0778  022A               	subwf	_x,w
  1558  0779                     u1075:
  1559  0779  1C03               	skipc
  1560  077A  2F7C               	goto	u1071
  1561  077B  2F7D               	goto	u1070
  1562  077C                     u1071:
  1563  077C  2F80               	goto	l1825
  1564  077D                     u1070:
  1565  077D                     l1823:
  1566                           
  1567                           ;proyecto1master.c: 157:             mapping = 0;
  1568  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1569  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1570  077F  01AC               	clrf	_mapping
  1571  0780                     l1825:
  1572                           
  1573                           ;proyecto1master.c: 161:         I2C_Master_Start();
  1574  0780  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  1575  0785                     l1827:
  1576                           
  1577                           ;proyecto1master.c: 162:         I2C_Master_Write(0x50);
  1578  0785  3050               	movlw	80
  1579  0786  00F0               	movwf	I2C_Master_Write@d
  1580  0787  3000               	movlw	0
  1581  0788  00F1               	movwf	I2C_Master_Write@d+1
  1582  0789  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1583  078E                     l1829:
  1584                           
  1585                           ;proyecto1master.c: 163:         I2C_Master_Write(mapping);
  1586  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1587  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0790  082C               	movf	_mapping,w
  1589  0791  00DB               	movwf	??_main
  1590  0792  01DC               	clrf	??_main+1
  1591  0793  085B               	movf	??_main,w
  1592  0794  00F0               	movwf	I2C_Master_Write@d
  1593  0795  085C               	movf	??_main+1,w
  1594  0796  00F1               	movwf	I2C_Master_Write@d+1
  1595  0797  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  1596  079C                     l1831:
  1597                           
  1598                           ;proyecto1master.c: 164:         I2C_Master_Stop();
  1599  079C  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  1600  07A1                     l1833:
  1601                           
  1602                           ;proyecto1master.c: 165:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1603  07A1  301A               	movlw	26
  1604  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1605  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1606  07A4  00DC               	movwf	??_main+1
  1607  07A5  30F7               	movlw	247
  1608  07A6  00DB               	movwf	??_main
  1609  07A7                     u1137:
  1610  07A7  0BDB               	decfsz	??_main,f
  1611  07A8  2FA7               	goto	u1137
  1612  07A9  0BDC               	decfsz	??_main+1,f
  1613  07AA  2FA7               	goto	u1137
  1614  07AB  2FAC               	nop2
  1615  07AC                     l1835:
  1616                           
  1617                           ;proyecto1master.c: 167:         sprintf(volt, "%d %c%c %d %d\n", s1, L, R, M, y);
  1618  07AC  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1619  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1620  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1621  07AF  00DB               	movwf	??_main
  1622  07B0  085B               	movf	??_main,w
  1623  07B1  00C6               	movwf	sprintf@f
  1624  07B2  0834               	movf	_s1,w
  1625  07B3  00DC               	movwf	??_main+1
  1626  07B4  01DD               	clrf	??_main+2
  1627  07B5  085C               	movf	??_main+1,w
  1628  07B6  00C7               	movwf	?_sprintf+1
  1629  07B7  085D               	movf	??_main+2,w
  1630  07B8  00C8               	movwf	?_sprintf+2
  1631  07B9  0832               	movf	_L,w
  1632  07BA  00DE               	movwf	??_main+3
  1633  07BB  01DF               	clrf	??_main+4
  1634  07BC  085E               	movf	??_main+3,w
  1635  07BD  00C9               	movwf	?_sprintf+3
  1636  07BE  085F               	movf	??_main+4,w
  1637  07BF  00CA               	movwf	?_sprintf+4
  1638  07C0  0831               	movf	_R,w
  1639  07C1  00E0               	movwf	??_main+5
  1640  07C2  01E1               	clrf	??_main+6
  1641  07C3  0860               	movf	??_main+5,w
  1642  07C4  00CB               	movwf	?_sprintf+5
  1643  07C5  0861               	movf	??_main+6,w
  1644  07C6  00CC               	movwf	?_sprintf+6
  1645  07C7  0830               	movf	_M,w
  1646  07C8  00E2               	movwf	??_main+7
  1647  07C9  01E3               	clrf	??_main+8
  1648  07CA  0862               	movf	??_main+7,w
  1649  07CB  00CD               	movwf	?_sprintf+7
  1650  07CC  0863               	movf	??_main+8,w
  1651  07CD  00CE               	movwf	?_sprintf+8
  1652  07CE  0829               	movf	_y+1,w
  1653  07CF  00D0               	movwf	?_sprintf+10
  1654  07D0  0828               	movf	_y,w
  1655  07D1  00CF               	movwf	?_sprintf+9
  1656  07D2  3036               	movlw	(low (_volt| 0))& (0+255)
  1657  07D3  120A  118A  2470  120A  118A  	fcall	_sprintf
  1658  07D8                     l1837:
  1659                           
  1660                           ;proyecto1master.c: 168:         enviocadena(volt);
  1661  07D8  3036               	movlw	(low (_volt| 0))& (0+255)
  1662  07D9  120A  118A  216B  120A  118A  	fcall	_enviocadena
  1663  07DE                     l1839:
  1664                           
  1665                           ;proyecto1master.c: 169:         Lcd_Set_Cursor(2,1);
  1666  07DE  01F4               	clrf	Lcd_Set_Cursor@b
  1667  07DF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1668  07E0  3002               	movlw	2
  1669  07E1  120A  118A  218A  120A  118A  	fcall	_Lcd_Set_Cursor
  1670  07E6                     l1841:
  1671                           
  1672                           ;proyecto1master.c: 170:         Lcd_Write_String(volt);
  1673  07E6  3036               	movlw	(low (_volt| 0))& (0+255)
  1674  07E7  00F3               	movwf	Lcd_Write_String@a
  1675  07E8  3000               	movlw	0
  1676  07E9  00F4               	movwf	Lcd_Write_String@a+1
  1677  07EA  120A  118A  224E  120A  118A  	fcall	_Lcd_Write_String
  1678  07EF  2D9D               	goto	l1757
  1679  07F0  120A  118A  2800   	ljmp	start
  1680  07F3                     __end_of_main:
  1681                           
  1682                           	psect	text1
  1683  0470                     __ptext1:	
  1684 ;; *************** function _sprintf *****************
  1685 ;; Defined at:
  1686 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  sp              1    wreg     PTR unsigned char 
  1689 ;;		 -> volt(16), 
  1690 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1691 ;;		 -> STR_1(15), 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1694 ;;		 -> volt(16), 
  1695 ;;  tmpval          4    0        struct .
  1696 ;;  val             2   17[BANK0 ] unsigned int 
  1697 ;;  cp              2    0        PTR const unsigned char 
  1698 ;;  len             2    0        unsigned int 
  1699 ;;  c               1   20[BANK0 ] unsigned char 
  1700 ;;  ap              1   16[BANK0 ] PTR void [1]
  1701 ;;		 -> ?_sprintf(2), 
  1702 ;;  prec            1   15[BANK0 ] char 
  1703 ;;  flag            1   14[BANK0 ] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    0[BANK0 ] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0      11       0       0       0
  1714 ;;      Locals:         0       7       0       0       0
  1715 ;;      Temps:          0       3       0       0       0
  1716 ;;      Totals:         0      21       0       0       0
  1717 ;;Total ram usage:       21 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    1
  1720 ;; This function calls:
  1721 ;;		___lwdiv
  1722 ;;		___lwmod
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _sprintf
  1730  0470                     _sprintf:
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1734                           ;sprintf@sp stored from wreg
  1735  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0472  00D9               	movwf	sprintf@sp
  1738  0473                     l1667:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1741  0473  3047               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1742  0474  00D1               	movwf	??_sprintf
  1743  0475  0851               	movf	??_sprintf,w
  1744  0476  00D6               	movwf	sprintf@ap
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1747  0477  2D5C               	goto	l1725
  1748  0478                     l1669:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1751  0478  3025               	movlw	37
  1752  0479  065A               	xorwf	sprintf@c,w
  1753  047A  1903               	btfsc	3,2
  1754  047B  2C7D               	goto	u861
  1755  047C  2C7E               	goto	u860
  1756  047D                     u861:
  1757  047D  2C8A               	goto	l1675
  1758  047E                     u860:
  1759  047E                     l1671:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1762  047E  085A               	movf	sprintf@c,w
  1763  047F  00D1               	movwf	??_sprintf
  1764  0480  0859               	movf	sprintf@sp,w
  1765  0481  0084               	movwf	4
  1766  0482  0851               	movf	??_sprintf,w
  1767  0483  1383               	bcf	3,7	;select IRP bank0
  1768  0484  0080               	movwf	0
  1769  0485                     l1673:
  1770  0485  3001               	movlw	1
  1771  0486  00D1               	movwf	??_sprintf
  1772  0487  0851               	movf	??_sprintf,w
  1773  0488  07D9               	addwf	sprintf@sp,f
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1776  0489  2D5C               	goto	l1725
  1777  048A                     l1675:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1780  048A  01D4               	clrf	sprintf@flag
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1783  048B  2CA3               	goto	l1685
  1784  048C                     l1677:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1787  048C  0856               	movf	sprintf@ap,w
  1788  048D  0084               	movwf	4
  1789  048E  1383               	bcf	3,7	;select IRP bank0
  1790  048F  0800               	movf	0,w
  1791  0490  00D1               	movwf	??_sprintf
  1792  0491  0851               	movf	??_sprintf,w
  1793  0492  00DA               	movwf	sprintf@c
  1794  0493                     l1679:
  1795  0493  3002               	movlw	2
  1796  0494  00D1               	movwf	??_sprintf
  1797  0495  0851               	movf	??_sprintf,w
  1798  0496  07D6               	addwf	sprintf@ap,f
  1799  0497                     l1681:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1802  0497  085A               	movf	sprintf@c,w
  1803  0498  00D1               	movwf	??_sprintf
  1804  0499  0859               	movf	sprintf@sp,w
  1805  049A  0084               	movwf	4
  1806  049B  0851               	movf	??_sprintf,w
  1807  049C  1383               	bcf	3,7	;select IRP bank0
  1808  049D  0080               	movwf	0
  1809  049E  3001               	movlw	1
  1810  049F  00D1               	movwf	??_sprintf
  1811  04A0  0851               	movf	??_sprintf,w
  1812  04A1  07D9               	addwf	sprintf@sp,f
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 836:    continue;
  1815  04A2  2D5C               	goto	l1725
  1816  04A3                     l1685:
  1817  04A3  3001               	movlw	1
  1818  04A4  07C6               	addwf	sprintf@f,f
  1819  04A5  30FF               	movlw	-1
  1820  04A6  0746               	addwf	sprintf@f,w
  1821  04A7  0084               	movwf	4
  1822  04A8  120A  118A  200D  120A  118A  	fcall	stringdir
  1823  04AD  00DA               	movwf	sprintf@c
  1824  04AE  00D1               	movwf	??_sprintf
  1825  04AF  01D2               	clrf	??_sprintf+1
  1826                           
  1827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1828                           ; Switch size 1, requested type "simple"
  1829                           ; Number of cases is 1, Range of values is 0 to 0
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte            4     3 (average)
  1833                           ; direct_byte           11     8 (fixed)
  1834                           ; jumptable            260     6 (fixed)
  1835                           ;	Chosen strategy is simple_byte
  1836  04B0  0852               	movf	??_sprintf+1,w
  1837  04B1  3A00               	xorlw	0	; case 0
  1838  04B2  1903               	skipnz
  1839  04B3  2CB5               	goto	l1899
  1840  04B4  2C97               	goto	l1681
  1841  04B5                     l1899:
  1842                           
  1843                           ; Switch size 1, requested type "simple"
  1844                           ; Number of cases is 4, Range of values is 0 to 105
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte           13     7 (average)
  1848                           ; jumptable            260     6 (fixed)
  1849                           ;	Chosen strategy is simple_byte
  1850  04B5  0851               	movf	??_sprintf,w
  1851  04B6  3A00               	xorlw	0	; case 0
  1852  04B7  1903               	skipnz
  1853  04B8  2D6E               	goto	l1727
  1854  04B9  3A63               	xorlw	99	; case 99
  1855  04BA  1903               	skipnz
  1856  04BB  2C8C               	goto	l1677
  1857  04BC  3A07               	xorlw	7	; case 100
  1858  04BD  1903               	skipnz
  1859  04BE  2CC3               	goto	l1687
  1860  04BF  3A0D               	xorlw	13	; case 105
  1861  04C0  1903               	skipnz
  1862  04C1  2CC3               	goto	l1687
  1863  04C2  2C97               	goto	l1681
  1864  04C3                     l1687:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1867  04C3  0856               	movf	sprintf@ap,w
  1868  04C4  0084               	movwf	4
  1869  04C5  1383               	bcf	3,7	;select IRP bank0
  1870  04C6  0800               	movf	0,w
  1871  04C7  00D7               	movwf	sprintf@val
  1872  04C8  0A84               	incf	4,f
  1873  04C9  0800               	movf	0,w
  1874  04CA  00D8               	movwf	sprintf@val+1
  1875  04CB                     l1689:
  1876  04CB  3002               	movlw	2
  1877  04CC  00D1               	movwf	??_sprintf
  1878  04CD  0851               	movf	??_sprintf,w
  1879  04CE  07D6               	addwf	sprintf@ap,f
  1880  04CF                     l1691:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1883  04CF  1FD8               	btfss	sprintf@val+1,7
  1884  04D0  2CD2               	goto	u871
  1885  04D1  2CD3               	goto	u870
  1886  04D2                     u871:
  1887  04D2  2CDC               	goto	l1697
  1888  04D3                     u870:
  1889  04D3                     l1693:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1892  04D3  3003               	movlw	3
  1893  04D4  00D1               	movwf	??_sprintf
  1894  04D5  0851               	movf	??_sprintf,w
  1895  04D6  04D4               	iorwf	sprintf@flag,f
  1896  04D7                     l1695:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1899  04D7  09D7               	comf	sprintf@val,f
  1900  04D8  09D8               	comf	sprintf@val+1,f
  1901  04D9  0AD7               	incf	sprintf@val,f
  1902  04DA  1903               	skipnz
  1903  04DB  0AD8               	incf	sprintf@val+1,f
  1904  04DC                     l1697:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1907  04DC  01DA               	clrf	sprintf@c
  1908  04DD  0ADA               	incf	sprintf@c,f
  1909  04DE                     l1703:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1912  04DE  085A               	movf	sprintf@c,w
  1913  04DF  00D1               	movwf	??_sprintf
  1914  04E0  0751               	addwf	??_sprintf,w
  1915  04E1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1916  04E2  0084               	movwf	4
  1917  04E3  120A  118A  200D  120A  118A  	fcall	stringdir
  1918  04E8  00D2               	movwf	??_sprintf+1
  1919  04E9  120A  118A  200D  120A  118A  	fcall	stringdir
  1920  04EE  00D3               	movwf	??_sprintf+2
  1921  04EF  0853               	movf	??_sprintf+2,w
  1922  04F0  0258               	subwf	sprintf@val+1,w
  1923  04F1  1D03               	skipz
  1924  04F2  2CF5               	goto	u885
  1925  04F3  0852               	movf	??_sprintf+1,w
  1926  04F4  0257               	subwf	sprintf@val,w
  1927  04F5                     u885:
  1928  04F5  1803               	skipnc
  1929  04F6  2CF8               	goto	u881
  1930  04F7  2CF9               	goto	u880
  1931  04F8                     u881:
  1932  04F8  2CFA               	goto	l1707
  1933  04F9                     u880:
  1934  04F9  2D04               	goto	l1709
  1935  04FA                     l1707:
  1936  04FA  3001               	movlw	1
  1937  04FB  00D1               	movwf	??_sprintf
  1938  04FC  0851               	movf	??_sprintf,w
  1939  04FD  07DA               	addwf	sprintf@c,f
  1940  04FE  3005               	movlw	5
  1941  04FF  065A               	xorwf	sprintf@c,w
  1942  0500  1D03               	btfss	3,2
  1943  0501  2D03               	goto	u891
  1944  0502  2D04               	goto	u890
  1945  0503                     u891:
  1946  0503  2CDE               	goto	l1703
  1947  0504                     u890:
  1948  0504                     l1709:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1951  0504  0854               	movf	sprintf@flag,w
  1952  0505  3903               	andlw	3
  1953  0506  1903               	btfsc	3,2
  1954  0507  2D09               	goto	u901
  1955  0508  2D0A               	goto	u900
  1956  0509                     u901:
  1957  0509  2D15               	goto	l1715
  1958  050A                     u900:
  1959  050A                     l1711:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1962  050A  302D               	movlw	45
  1963  050B  00D1               	movwf	??_sprintf
  1964  050C  0859               	movf	sprintf@sp,w
  1965  050D  0084               	movwf	4
  1966  050E  0851               	movf	??_sprintf,w
  1967  050F  1383               	bcf	3,7	;select IRP bank0
  1968  0510  0080               	movwf	0
  1969  0511                     l1713:
  1970  0511  3001               	movlw	1
  1971  0512  00D1               	movwf	??_sprintf
  1972  0513  0851               	movf	??_sprintf,w
  1973  0514  07D9               	addwf	sprintf@sp,f
  1974  0515                     l1715:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1977  0515  085A               	movf	sprintf@c,w
  1978  0516  00D1               	movwf	??_sprintf
  1979  0517  0851               	movf	??_sprintf,w
  1980  0518  00D5               	movwf	sprintf@prec
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1983  0519  2D53               	goto	l1723
  1984  051A                     l1717:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1987  051A  300A               	movlw	10
  1988  051B  00F8               	movwf	___lwmod@divisor
  1989  051C  3000               	movlw	0
  1990  051D  00F9               	movwf	___lwmod@divisor+1
  1991  051E  0855               	movf	sprintf@prec,w
  1992  051F  00D1               	movwf	??_sprintf
  1993  0520  0751               	addwf	??_sprintf,w
  1994  0521  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1995  0522  0084               	movwf	4
  1996  0523  120A  118A  200D  120A  118A  	fcall	stringdir
  1997  0528  00F0               	movwf	___lwdiv@divisor
  1998  0529  120A  118A  200D  120A  118A  	fcall	stringdir
  1999  052E  00F1               	movwf	___lwdiv@divisor+1
  2000  052F  0858               	movf	sprintf@val+1,w
  2001  0530  00F3               	movwf	___lwdiv@dividend+1
  2002  0531  0857               	movf	sprintf@val,w
  2003  0532  00F2               	movwf	___lwdiv@dividend
  2004  0533  120A  118A  2290  120A  118A  	fcall	___lwdiv
  2005  0538  0871               	movf	?___lwdiv+1,w
  2006  0539  00FB               	movwf	___lwmod@dividend+1
  2007  053A  0870               	movf	?___lwdiv,w
  2008  053B  00FA               	movwf	___lwmod@dividend
  2009  053C  120A  118A  2214  120A  118A  	fcall	___lwmod
  2010  0541  0878               	movf	?___lwmod,w
  2011  0542  3E30               	addlw	48
  2012  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0545  00D2               	movwf	??_sprintf+1
  2015  0546  0852               	movf	??_sprintf+1,w
  2016  0547  00DA               	movwf	sprintf@c
  2017  0548                     l1719:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2020  0548  085A               	movf	sprintf@c,w
  2021  0549  00D1               	movwf	??_sprintf
  2022  054A  0859               	movf	sprintf@sp,w
  2023  054B  0084               	movwf	4
  2024  054C  0851               	movf	??_sprintf,w
  2025  054D  1383               	bcf	3,7	;select IRP bank0
  2026  054E  0080               	movwf	0
  2027  054F                     l1721:
  2028  054F  3001               	movlw	1
  2029  0550  00D1               	movwf	??_sprintf
  2030  0551  0851               	movf	??_sprintf,w
  2031  0552  07D9               	addwf	sprintf@sp,f
  2032  0553                     l1723:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2035  0553  30FF               	movlw	255
  2036  0554  00D1               	movwf	??_sprintf
  2037  0555  0851               	movf	??_sprintf,w
  2038  0556  07D5               	addwf	sprintf@prec,f
  2039  0557  0A55               	incf	sprintf@prec,w
  2040  0558  1D03               	btfss	3,2
  2041  0559  2D5B               	goto	u911
  2042  055A  2D5C               	goto	u910
  2043  055B                     u911:
  2044  055B  2D1A               	goto	l1717
  2045  055C                     u910:
  2046  055C                     l1725:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2049  055C  3001               	movlw	1
  2050  055D  07C6               	addwf	sprintf@f,f
  2051  055E  30FF               	movlw	-1
  2052  055F  0746               	addwf	sprintf@f,w
  2053  0560  0084               	movwf	4
  2054  0561  120A  118A  200D  120A  118A  	fcall	stringdir
  2055  0566  00D1               	movwf	??_sprintf
  2056  0567  0851               	movf	??_sprintf,w
  2057  0568  00DA               	movwf	sprintf@c
  2058  0569  085A               	movf	sprintf@c,w
  2059  056A  1D03               	btfss	3,2
  2060  056B  2D6D               	goto	u921
  2061  056C  2D6E               	goto	u920
  2062  056D                     u921:
  2063  056D  2C78               	goto	l1669
  2064  056E                     u920:
  2065  056E                     l1727:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2068  056E  0859               	movf	sprintf@sp,w
  2069  056F  0084               	movwf	4
  2070  0570  1383               	bcf	3,7	;select IRP bank0
  2071  0571  0180               	clrf	0
  2072  0572                     l371:
  2073  0572  0008               	return
  2074  0573                     __end_of_sprintf:
  2075                           
  2076                           	psect	text2
  2077  0214                     __ptext2:	
  2078 ;; *************** function ___lwmod *****************
  2079 ;; Defined at:
  2080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  divisor         2    8[COMMON] unsigned int 
  2083 ;;  dividend        2   10[COMMON] unsigned int 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  counter         1   13[COMMON] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2    8[COMMON] unsigned int 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         4       0       0       0       0
  2096 ;;      Locals:         1       0       0       0       0
  2097 ;;      Temps:          1       0       0       0       0
  2098 ;;      Totals:         6       0       0       0       0
  2099 ;;Total ram usage:        6 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_sprintf
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function ___lwmod
  2110  0214                     ___lwmod:
  2111  0214                     l1539:	
  2112                           ;incstack = 0
  2113                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2114                           
  2115  0214  0878               	movf	___lwmod@divisor,w
  2116  0215  0479               	iorwf	___lwmod@divisor+1,w
  2117  0216  1903               	btfsc	3,2
  2118  0217  2A19               	goto	u791
  2119  0218  2A1A               	goto	u790
  2120  0219                     u791:
  2121  0219  2A49               	goto	l1557
  2122  021A                     u790:
  2123  021A                     l1541:
  2124  021A  01FD               	clrf	___lwmod@counter
  2125  021B  0AFD               	incf	___lwmod@counter,f
  2126  021C  2A28               	goto	l1547
  2127  021D                     l1543:
  2128  021D  3001               	movlw	1
  2129  021E                     u805:
  2130  021E  1003               	clrc
  2131  021F  0DF8               	rlf	___lwmod@divisor,f
  2132  0220  0DF9               	rlf	___lwmod@divisor+1,f
  2133  0221  3EFF               	addlw	-1
  2134  0222  1D03               	skipz
  2135  0223  2A1E               	goto	u805
  2136  0224                     l1545:
  2137  0224  3001               	movlw	1
  2138  0225  00FC               	movwf	??___lwmod
  2139  0226  087C               	movf	??___lwmod,w
  2140  0227  07FD               	addwf	___lwmod@counter,f
  2141  0228                     l1547:
  2142  0228  1FF9               	btfss	___lwmod@divisor+1,7
  2143  0229  2A2B               	goto	u811
  2144  022A  2A2C               	goto	u810
  2145  022B                     u811:
  2146  022B  2A1D               	goto	l1543
  2147  022C                     u810:
  2148  022C                     l1549:
  2149  022C  0879               	movf	___lwmod@divisor+1,w
  2150  022D  027B               	subwf	___lwmod@dividend+1,w
  2151  022E  1D03               	skipz
  2152  022F  2A32               	goto	u825
  2153  0230  0878               	movf	___lwmod@divisor,w
  2154  0231  027A               	subwf	___lwmod@dividend,w
  2155  0232                     u825:
  2156  0232  1C03               	skipc
  2157  0233  2A35               	goto	u821
  2158  0234  2A36               	goto	u820
  2159  0235                     u821:
  2160  0235  2A3C               	goto	l1553
  2161  0236                     u820:
  2162  0236                     l1551:
  2163  0236  0878               	movf	___lwmod@divisor,w
  2164  0237  02FA               	subwf	___lwmod@dividend,f
  2165  0238  0879               	movf	___lwmod@divisor+1,w
  2166  0239  1C03               	skipc
  2167  023A  03FB               	decf	___lwmod@dividend+1,f
  2168  023B  02FB               	subwf	___lwmod@dividend+1,f
  2169  023C                     l1553:
  2170  023C  3001               	movlw	1
  2171  023D                     u835:
  2172  023D  1003               	clrc
  2173  023E  0CF9               	rrf	___lwmod@divisor+1,f
  2174  023F  0CF8               	rrf	___lwmod@divisor,f
  2175  0240  3EFF               	addlw	-1
  2176  0241  1D03               	skipz
  2177  0242  2A3D               	goto	u835
  2178  0243                     l1555:
  2179  0243  3001               	movlw	1
  2180  0244  02FD               	subwf	___lwmod@counter,f
  2181  0245  1D03               	btfss	3,2
  2182  0246  2A48               	goto	u841
  2183  0247  2A49               	goto	u840
  2184  0248                     u841:
  2185  0248  2A2C               	goto	l1549
  2186  0249                     u840:
  2187  0249                     l1557:
  2188  0249  087B               	movf	___lwmod@dividend+1,w
  2189  024A  00F9               	movwf	?___lwmod+1
  2190  024B  087A               	movf	___lwmod@dividend,w
  2191  024C  00F8               	movwf	?___lwmod
  2192  024D                     l657:
  2193  024D  0008               	return
  2194  024E                     __end_of___lwmod:
  2195                           
  2196                           	psect	text3
  2197  0290                     __ptext3:	
  2198 ;; *************** function ___lwdiv *****************
  2199 ;; Defined at:
  2200 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  divisor         2    0[COMMON] unsigned int 
  2203 ;;  dividend        2    2[COMMON] unsigned int 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  quotient        2    5[COMMON] unsigned int 
  2206 ;;  counter         1    7[COMMON] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2    0[COMMON] unsigned int 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         4       0       0       0       0
  2217 ;;      Locals:         3       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0
  2219 ;;      Totals:         8       0       0       0       0
  2220 ;;Total ram usage:        8 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_sprintf
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function ___lwdiv
  2231  0290                     ___lwdiv:
  2232  0290                     l1513:	
  2233                           ;incstack = 0
  2234                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2235                           
  2236  0290  01F5               	clrf	___lwdiv@quotient
  2237  0291  01F6               	clrf	___lwdiv@quotient+1
  2238  0292                     l1515:
  2239  0292  0870               	movf	___lwdiv@divisor,w
  2240  0293  0471               	iorwf	___lwdiv@divisor+1,w
  2241  0294  1903               	btfsc	3,2
  2242  0295  2A97               	goto	u721
  2243  0296  2A98               	goto	u720
  2244  0297                     u721:
  2245  0297  2ACF               	goto	l1535
  2246  0298                     u720:
  2247  0298                     l1517:
  2248  0298  01F7               	clrf	___lwdiv@counter
  2249  0299  0AF7               	incf	___lwdiv@counter,f
  2250  029A  2AA6               	goto	l1523
  2251  029B                     l1519:
  2252  029B  3001               	movlw	1
  2253  029C                     u735:
  2254  029C  1003               	clrc
  2255  029D  0DF0               	rlf	___lwdiv@divisor,f
  2256  029E  0DF1               	rlf	___lwdiv@divisor+1,f
  2257  029F  3EFF               	addlw	-1
  2258  02A0  1D03               	skipz
  2259  02A1  2A9C               	goto	u735
  2260  02A2                     l1521:
  2261  02A2  3001               	movlw	1
  2262  02A3  00F4               	movwf	??___lwdiv
  2263  02A4  0874               	movf	??___lwdiv,w
  2264  02A5  07F7               	addwf	___lwdiv@counter,f
  2265  02A6                     l1523:
  2266  02A6  1FF1               	btfss	___lwdiv@divisor+1,7
  2267  02A7  2AA9               	goto	u741
  2268  02A8  2AAA               	goto	u740
  2269  02A9                     u741:
  2270  02A9  2A9B               	goto	l1519
  2271  02AA                     u740:
  2272  02AA                     l1525:
  2273  02AA  3001               	movlw	1
  2274  02AB                     u755:
  2275  02AB  1003               	clrc
  2276  02AC  0DF5               	rlf	___lwdiv@quotient,f
  2277  02AD  0DF6               	rlf	___lwdiv@quotient+1,f
  2278  02AE  3EFF               	addlw	-1
  2279  02AF  1D03               	skipz
  2280  02B0  2AAB               	goto	u755
  2281  02B1  0871               	movf	___lwdiv@divisor+1,w
  2282  02B2  0273               	subwf	___lwdiv@dividend+1,w
  2283  02B3  1D03               	skipz
  2284  02B4  2AB7               	goto	u765
  2285  02B5  0870               	movf	___lwdiv@divisor,w
  2286  02B6  0272               	subwf	___lwdiv@dividend,w
  2287  02B7                     u765:
  2288  02B7  1C03               	skipc
  2289  02B8  2ABA               	goto	u761
  2290  02B9  2ABB               	goto	u760
  2291  02BA                     u761:
  2292  02BA  2AC2               	goto	l1531
  2293  02BB                     u760:
  2294  02BB                     l1527:
  2295  02BB  0870               	movf	___lwdiv@divisor,w
  2296  02BC  02F2               	subwf	___lwdiv@dividend,f
  2297  02BD  0871               	movf	___lwdiv@divisor+1,w
  2298  02BE  1C03               	skipc
  2299  02BF  03F3               	decf	___lwdiv@dividend+1,f
  2300  02C0  02F3               	subwf	___lwdiv@dividend+1,f
  2301  02C1                     l1529:
  2302  02C1  1475               	bsf	___lwdiv@quotient,0
  2303  02C2                     l1531:
  2304  02C2  3001               	movlw	1
  2305  02C3                     u775:
  2306  02C3  1003               	clrc
  2307  02C4  0CF1               	rrf	___lwdiv@divisor+1,f
  2308  02C5  0CF0               	rrf	___lwdiv@divisor,f
  2309  02C6  3EFF               	addlw	-1
  2310  02C7  1D03               	skipz
  2311  02C8  2AC3               	goto	u775
  2312  02C9                     l1533:
  2313  02C9  3001               	movlw	1
  2314  02CA  02F7               	subwf	___lwdiv@counter,f
  2315  02CB  1D03               	btfss	3,2
  2316  02CC  2ACE               	goto	u781
  2317  02CD  2ACF               	goto	u780
  2318  02CE                     u781:
  2319  02CE  2AAA               	goto	l1525
  2320  02CF                     u780:
  2321  02CF                     l1535:
  2322  02CF  0876               	movf	___lwdiv@quotient+1,w
  2323  02D0  00F1               	movwf	?___lwdiv+1
  2324  02D1  0875               	movf	___lwdiv@quotient,w
  2325  02D2  00F0               	movwf	?___lwdiv
  2326  02D3                     l647:
  2327  02D3  0008               	return
  2328  02D4                     __end_of___lwdiv:
  2329                           
  2330                           	psect	text4
  2331  038B                     __ptext4:	
  2332 ;; *************** function _setup *****************
  2333 ;; Defined at:
  2334 ;;		line 176 in file "proyecto1master.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0
  2350 ;;      Temps:          0       2       0       0       0
  2351 ;;      Totals:         0       2       0       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    3
  2355 ;; This function calls:
  2356 ;;		_I2C_Master_Init
  2357 ;;		_I2C_Master_Start
  2358 ;;		_I2C_Master_Stop
  2359 ;;		_I2C_Master_Write
  2360 ;;		_Lcd_Init
  2361 ;;		_Lcd_Set_Cursor
  2362 ;;		_Lcd_Write_String
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _setup
  2370  038B                     _setup:
  2371  038B                     l1561:	
  2372                           ;incstack = 0
  2373                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2374                           
  2375                           
  2376                           ;proyecto1master.c: 179:     OSCCONbits.IRCF = 7;
  2377  038B  3070               	movlw	112
  2378  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2379  038D  1303               	bcf	3,6	;RP1=0, select bank1
  2380  038E  048F               	iorwf	15,f	;volatile
  2381  038F                     l1563:
  2382                           
  2383                           ;proyecto1master.c: 180:     OSCCONbits.SCS = 1;
  2384  038F  140F               	bsf	15,0	;volatile
  2385  0390                     l1565:
  2386                           
  2387                           ;proyecto1master.c: 182:     ANSELH = 0;
  2388  0390  1683               	bsf	3,5	;RP0=1, select bank3
  2389  0391  1703               	bsf	3,6	;RP1=1, select bank3
  2390  0392  0189               	clrf	9	;volatile
  2391  0393                     l1567:
  2392                           
  2393                           ;proyecto1master.c: 183:     ANSEL = 0;
  2394  0393  0188               	clrf	8	;volatile
  2395  0394                     l1569:
  2396                           
  2397                           ;proyecto1master.c: 184:     TRISA = 0;
  2398  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2399  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2400  0396  0185               	clrf	5	;volatile
  2401  0397                     l1571:
  2402                           
  2403                           ;proyecto1master.c: 186:     TRISCbits.TRISC0 = 0;
  2404  0397  1007               	bcf	7,0	;volatile
  2405  0398                     l1573:
  2406                           
  2407                           ;proyecto1master.c: 187:     TRISCbits.TRISC1 = 0;
  2408  0398  1087               	bcf	7,1	;volatile
  2409  0399                     l1575:
  2410                           
  2411                           ;proyecto1master.c: 188:     TRISB = 1;
  2412  0399  3001               	movlw	1
  2413  039A  0086               	movwf	6	;volatile
  2414  039B                     l1577:
  2415                           
  2416                           ;proyecto1master.c: 189:     PORTB = 0;
  2417  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2418  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2419  039D  0186               	clrf	6	;volatile
  2420  039E                     l1579:
  2421                           
  2422                           ;proyecto1master.c: 190:     TRISD = 0;
  2423  039E  1683               	bsf	3,5	;RP0=1, select bank1
  2424  039F  1303               	bcf	3,6	;RP1=0, select bank1
  2425  03A0  0188               	clrf	8	;volatile
  2426  03A1                     l1581:
  2427                           
  2428                           ;proyecto1master.c: 191:     TRISE = 0;
  2429  03A1  0189               	clrf	9	;volatile
  2430  03A2                     l1583:
  2431                           
  2432                           ;proyecto1master.c: 192:     PORTD = 0;
  2433  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2434  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2435  03A4  0188               	clrf	8	;volatile
  2436  03A5                     l1585:
  2437                           
  2438                           ;proyecto1master.c: 194:     OPTION_REGbits.nRBPU = 0;
  2439  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2440  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2441  03A7  1381               	bcf	1,7	;volatile
  2442  03A8                     l1587:
  2443                           
  2444                           ;proyecto1master.c: 195:     WPUBbits.WPUB0 = 1;
  2445  03A8  1415               	bsf	21,0	;volatile
  2446  03A9                     l1589:
  2447                           
  2448                           ;proyecto1master.c: 197:     TXSTAbits.SYNC = 0;
  2449  03A9  1218               	bcf	24,4	;volatile
  2450  03AA                     l1591:
  2451                           
  2452                           ;proyecto1master.c: 198:     TXSTAbits.BRGH = 1;
  2453  03AA  1518               	bsf	24,2	;volatile
  2454  03AB                     l1593:
  2455                           
  2456                           ;proyecto1master.c: 200:     BAUDCTLbits.BRG16 = 1;
  2457  03AB  1683               	bsf	3,5	;RP0=1, select bank3
  2458  03AC  1703               	bsf	3,6	;RP1=1, select bank3
  2459  03AD  1587               	bsf	7,3	;volatile
  2460  03AE                     l1595:
  2461                           
  2462                           ;proyecto1master.c: 202:     SPBRG = 207;
  2463  03AE  30CF               	movlw	207
  2464  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2465  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2466  03B1  0099               	movwf	25	;volatile
  2467  03B2                     l1597:
  2468                           
  2469                           ;proyecto1master.c: 203:     SPBRGH = 0;
  2470  03B2  019A               	clrf	26	;volatile
  2471  03B3                     l1599:
  2472                           
  2473                           ;proyecto1master.c: 205:     RCSTAbits.SPEN = 1;
  2474  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2475  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2476  03B5  1798               	bsf	24,7	;volatile
  2477  03B6                     l1601:
  2478                           
  2479                           ;proyecto1master.c: 206:     RCSTAbits.RX9 = 0;
  2480  03B6  1318               	bcf	24,6	;volatile
  2481  03B7                     l1603:
  2482                           
  2483                           ;proyecto1master.c: 207:     RCSTAbits.CREN = 1;
  2484  03B7  1618               	bsf	24,4	;volatile
  2485  03B8                     l1605:
  2486                           
  2487                           ;proyecto1master.c: 208:     TXSTAbits.TXEN = 1;
  2488  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2489  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  2490  03BA  1698               	bsf	24,5	;volatile
  2491  03BB                     l1607:
  2492                           
  2493                           ;proyecto1master.c: 210:     Lcd_Init();
  2494  03BB  120A  118A  22D4  120A  118A  	fcall	_Lcd_Init
  2495  03C0                     l1609:
  2496                           
  2497                           ;proyecto1master.c: 211:     Lcd_Set_Cursor(1,1);
  2498  03C0  01F4               	clrf	Lcd_Set_Cursor@b
  2499  03C1  0AF4               	incf	Lcd_Set_Cursor@b,f
  2500  03C2  3001               	movlw	1
  2501  03C3  120A  118A  218A  120A  118A  	fcall	_Lcd_Set_Cursor
  2502  03C8                     l1611:
  2503                           
  2504                           ;proyecto1master.c: 213:     Lcd_Write_String("I_LR_M_MagnetY");
  2505  03C8  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2506  03C9  00F3               	movwf	Lcd_Write_String@a
  2507  03CA  3080               	movlw	128
  2508  03CB  00F4               	movwf	Lcd_Write_String@a+1
  2509  03CC  120A  118A  224E  120A  118A  	fcall	_Lcd_Write_String
  2510  03D1                     l1613:
  2511                           
  2512                           ;proyecto1master.c: 214:     I2C_Master_Init(100000);
  2513  03D1  3000               	movlw	0
  2514  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2515  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2516  03D4  00C9               	movwf	I2C_Master_Init@c+3
  2517  03D5  3001               	movlw	1
  2518  03D6  00C8               	movwf	I2C_Master_Init@c+2
  2519  03D7  3086               	movlw	134
  2520  03D8  00C7               	movwf	I2C_Master_Init@c+1
  2521  03D9  30A0               	movlw	160
  2522  03DA  00C6               	movwf	I2C_Master_Init@c
  2523  03DB  120A  118A  21DC  120A  118A  	fcall	_I2C_Master_Init
  2524  03E0                     l1615:
  2525                           
  2526                           ;proyecto1master.c: 216:     I2C_Master_Start();
  2527  03E0  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  2528  03E5                     l1617:
  2529                           
  2530                           ;proyecto1master.c: 217:     I2C_Master_Write(0x1A);
  2531  03E5  301A               	movlw	26
  2532  03E6  00F0               	movwf	I2C_Master_Write@d
  2533  03E7  3000               	movlw	0
  2534  03E8  00F1               	movwf	I2C_Master_Write@d+1
  2535  03E9  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2536  03EE                     l1619:
  2537                           
  2538                           ;proyecto1master.c: 218:     I2C_Master_Write(0x0B);
  2539  03EE  300B               	movlw	11
  2540  03EF  00F0               	movwf	I2C_Master_Write@d
  2541  03F0  3000               	movlw	0
  2542  03F1  00F1               	movwf	I2C_Master_Write@d+1
  2543  03F2  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2544  03F7                     l1621:
  2545                           
  2546                           ;proyecto1master.c: 219:     I2C_Master_Write(0x01);
  2547  03F7  3001               	movlw	1
  2548  03F8  00F0               	movwf	I2C_Master_Write@d
  2549  03F9  3000               	movlw	0
  2550  03FA  00F1               	movwf	I2C_Master_Write@d+1
  2551  03FB  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2552  0400                     l1623:
  2553                           
  2554                           ;proyecto1master.c: 220:     I2C_Master_Stop();
  2555  0400  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  2556  0405                     l1625:
  2557                           
  2558                           ;proyecto1master.c: 221:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2559  0405  301A               	movlw	26
  2560  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0408  00CF               	movwf	??_setup+1
  2563  0409  30F7               	movlw	247
  2564  040A  00CE               	movwf	??_setup
  2565  040B                     u1147:
  2566  040B  0BCE               	decfsz	??_setup,f
  2567  040C  2C0B               	goto	u1147
  2568  040D  0BCF               	decfsz	??_setup+1,f
  2569  040E  2C0B               	goto	u1147
  2570  040F  2C10               	nop2
  2571  0410                     l1627:
  2572                           
  2573                           ;proyecto1master.c: 223:     I2C_Master_Start();
  2574  0410  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  2575  0415                     l1629:
  2576                           
  2577                           ;proyecto1master.c: 224:     I2C_Master_Write(0x1A);
  2578  0415  301A               	movlw	26
  2579  0416  00F0               	movwf	I2C_Master_Write@d
  2580  0417  3000               	movlw	0
  2581  0418  00F1               	movwf	I2C_Master_Write@d+1
  2582  0419  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2583  041E                     l1631:
  2584                           
  2585                           ;proyecto1master.c: 225:     I2C_Master_Write(0x09);
  2586  041E  3009               	movlw	9
  2587  041F  00F0               	movwf	I2C_Master_Write@d
  2588  0420  3000               	movlw	0
  2589  0421  00F1               	movwf	I2C_Master_Write@d+1
  2590  0422  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2591  0427                     l1633:
  2592                           
  2593                           ;proyecto1master.c: 226:     I2C_Master_Write(0x1D);
  2594  0427  301D               	movlw	29
  2595  0428  00F0               	movwf	I2C_Master_Write@d
  2596  0429  3000               	movlw	0
  2597  042A  00F1               	movwf	I2C_Master_Write@d+1
  2598  042B  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2599  0430                     l1635:
  2600                           
  2601                           ;proyecto1master.c: 227:     I2C_Master_Stop();
  2602  0430  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  2603  0435                     l1637:
  2604                           
  2605                           ;proyecto1master.c: 228:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2606  0435  301A               	movlw	26
  2607  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0438  00CF               	movwf	??_setup+1
  2610  0439  30F7               	movlw	247
  2611  043A  00CE               	movwf	??_setup
  2612  043B                     u1157:
  2613  043B  0BCE               	decfsz	??_setup,f
  2614  043C  2C3B               	goto	u1157
  2615  043D  0BCF               	decfsz	??_setup+1,f
  2616  043E  2C3B               	goto	u1157
  2617  043F  2C40               	nop2
  2618  0440                     l1639:
  2619                           
  2620                           ;proyecto1master.c: 230:     I2C_Master_Start();
  2621  0440  120A  118A  2102  120A  118A  	fcall	_I2C_Master_Start
  2622  0445                     l1641:
  2623                           
  2624                           ;proyecto1master.c: 231:     I2C_Master_Write(0x1A);
  2625  0445  301A               	movlw	26
  2626  0446  00F0               	movwf	I2C_Master_Write@d
  2627  0447  3000               	movlw	0
  2628  0448  00F1               	movwf	I2C_Master_Write@d+1
  2629  0449  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2630  044E                     l1643:
  2631                           
  2632                           ;proyecto1master.c: 232:     I2C_Master_Write(0x0A);
  2633  044E  300A               	movlw	10
  2634  044F  00F0               	movwf	I2C_Master_Write@d
  2635  0450  3000               	movlw	0
  2636  0451  00F1               	movwf	I2C_Master_Write@d+1
  2637  0452  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2638  0457                     l1645:
  2639                           
  2640                           ;proyecto1master.c: 233:     I2C_Master_Write(0x00);
  2641  0457  3000               	movlw	0
  2642  0458  00F0               	movwf	I2C_Master_Write@d
  2643  0459  00F1               	movwf	I2C_Master_Write@d+1
  2644  045A  120A  118A  2114  120A  118A  	fcall	_I2C_Master_Write
  2645  045F                     l1647:
  2646                           
  2647                           ;proyecto1master.c: 234:     I2C_Master_Stop();
  2648  045F  120A  118A  210B  120A  118A  	fcall	_I2C_Master_Stop
  2649  0464                     l1649:
  2650                           
  2651                           ;proyecto1master.c: 235:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2652  0464  301A               	movlw	26
  2653  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0467  00CF               	movwf	??_setup+1
  2656  0468  30F7               	movlw	247
  2657  0469  00CE               	movwf	??_setup
  2658  046A                     u1167:
  2659  046A  0BCE               	decfsz	??_setup,f
  2660  046B  2C6A               	goto	u1167
  2661  046C  0BCF               	decfsz	??_setup+1,f
  2662  046D  2C6A               	goto	u1167
  2663  046E  2C6F               	nop2
  2664  046F                     l121:
  2665  046F  0008               	return
  2666  0470                     __end_of_setup:
  2667                           
  2668                           	psect	text5
  2669  024E                     __ptext5:	
  2670 ;; *************** function _Lcd_Write_String *****************
  2671 ;; Defined at:
  2672 ;;		line 66 in file "LCD8bits.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  a               2    3[COMMON] PTR unsigned char 
  2675 ;;		 -> STR_2(15), volt(16), 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  i               2    8[COMMON] int 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         2       0       0       0       0
  2688 ;;      Locals:         2       0       0       0       0
  2689 ;;      Temps:          3       0       0       0       0
  2690 ;;      Totals:         7       0       0       0       0
  2691 ;;Total ram usage:        7 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    2
  2694 ;; This function calls:
  2695 ;;		_Lcd_Write_Char
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;;		_setup
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function _Lcd_Write_String
  2704  024E                     _Lcd_Write_String:
  2705  024E                     l1479:	
  2706                           ;incstack = 0
  2707                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2708                           
  2709                           
  2710                           ;LCD8bits.c: 67:     int i;;LCD8bits.c: 68:     for (i = 0; a[i] != '\0'; i++)
  2711  024E  01F8               	clrf	Lcd_Write_String@i
  2712  024F  01F9               	clrf	Lcd_Write_String@i+1
  2713  0250  2A73               	goto	l1485
  2714  0251                     l1481:
  2715                           
  2716                           ;LCD8bits.c: 69:         Lcd_Write_Char(a[i]);
  2717  0251  0878               	movf	Lcd_Write_String@i,w
  2718  0252  0773               	addwf	Lcd_Write_String@a,w
  2719  0253  00F6               	movwf	??_Lcd_Write_String+1
  2720  0254  0874               	movf	Lcd_Write_String@a+1,w
  2721  0255  00F5               	movwf	??_Lcd_Write_String
  2722  0256  1803               	skipnc
  2723  0257  0AF5               	incf	??_Lcd_Write_String,f
  2724  0258  1FF8               	btfss	Lcd_Write_String@i,7
  2725  0259  2A5B               	goto	u660
  2726  025A  03F5               	decf	??_Lcd_Write_String,f
  2727  025B                     u660:
  2728  025B  0875               	movf	??_Lcd_Write_String,w
  2729  025C  00F7               	movwf	??_Lcd_Write_String+2
  2730  025D  0877               	movf	??_Lcd_Write_String+2,w
  2731  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2732  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0260  00FF               	movwf	btemp+1
  2734  0261  0876               	movf	??_Lcd_Write_String+1,w
  2735  0262  0084               	movwf	4
  2736  0263  120A  118A  2003  120A  118A  	fcall	stringtab
  2737  0268  120A  118A  213B  120A  118A  	fcall	_Lcd_Write_Char
  2738  026D                     l1483:
  2739  026D  3001               	movlw	1
  2740  026E  07F8               	addwf	Lcd_Write_String@i,f
  2741  026F  1803               	skipnc
  2742  0270  0AF9               	incf	Lcd_Write_String@i+1,f
  2743  0271  3000               	movlw	0
  2744  0272  07F9               	addwf	Lcd_Write_String@i+1,f
  2745  0273                     l1485:
  2746  0273  0878               	movf	Lcd_Write_String@i,w
  2747  0274  0773               	addwf	Lcd_Write_String@a,w
  2748  0275  00F6               	movwf	??_Lcd_Write_String+1
  2749  0276  0874               	movf	Lcd_Write_String@a+1,w
  2750  0277  00F5               	movwf	??_Lcd_Write_String
  2751  0278  1803               	skipnc
  2752  0279  0AF5               	incf	??_Lcd_Write_String,f
  2753  027A  1FF8               	btfss	Lcd_Write_String@i,7
  2754  027B  2A7D               	goto	u670
  2755  027C  03F5               	decf	??_Lcd_Write_String,f
  2756  027D                     u670:
  2757  027D  0875               	movf	??_Lcd_Write_String,w
  2758  027E  00F7               	movwf	??_Lcd_Write_String+2
  2759  027F  0877               	movf	??_Lcd_Write_String+2,w
  2760  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0282  00FF               	movwf	btemp+1
  2763  0283  0876               	movf	??_Lcd_Write_String+1,w
  2764  0284  0084               	movwf	4
  2765  0285  120A  118A  2003  120A  118A  	fcall	stringtab
  2766  028A  3A00               	xorlw	0
  2767  028B  1D03               	skipz
  2768  028C  2A8E               	goto	u681
  2769  028D  2A8F               	goto	u680
  2770  028E                     u681:
  2771  028E  2A51               	goto	l1481
  2772  028F                     u680:
  2773  028F                     l213:
  2774  028F  0008               	return
  2775  0290                     __end_of_Lcd_Write_String:
  2776                           
  2777                           	psect	text6
  2778  013B                     __ptext6:	
  2779 ;; *************** function _Lcd_Write_Char *****************
  2780 ;; Defined at:
  2781 ;;		line 58 in file "LCD8bits.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  a               1    wreg     unsigned char 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  a               1    2[COMMON] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0, pclath, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         1       0       0       0       0
  2797 ;;      Temps:          1       0       0       0       0
  2798 ;;      Totals:         2       0       0       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    1
  2802 ;; This function calls:
  2803 ;;		_Lcd_Port
  2804 ;; This function is called by:
  2805 ;;		_Lcd_Write_String
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _Lcd_Write_Char
  2811  013B                     _Lcd_Write_Char:
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2815                           ;Lcd_Write_Char@a stored from wreg
  2816  013B  00F2               	movwf	Lcd_Write_Char@a
  2817  013C                     l1421:
  2818                           
  2819                           ;LCD8bits.c: 59:     RC0 = 1;
  2820  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2821  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2822  013E  1407               	bsf	7,0	;volatile
  2823  013F                     l1423:
  2824                           
  2825                           ;LCD8bits.c: 60:     Lcd_Port(a);
  2826  013F  0872               	movf	Lcd_Write_Char@a,w
  2827  0140  120A  118A  20F4  120A  118A  	fcall	_Lcd_Port
  2828  0145                     l1425:
  2829                           
  2830                           ;LCD8bits.c: 61:     RC1 = 1;
  2831  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0147  1487               	bsf	7,1	;volatile
  2834  0148                     l1427:
  2835                           
  2836                           ;LCD8bits.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2837  0148  301A               	movlw	26
  2838  0149  00F1               	movwf	??_Lcd_Write_Char
  2839  014A                     u1177:
  2840  014A  0BF1               	decfsz	??_Lcd_Write_Char,f
  2841  014B  294A               	goto	u1177
  2842  014C  0000               	nop
  2843  014D                     l1429:
  2844                           
  2845                           ;LCD8bits.c: 63:     RC1 = 0;
  2846  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2847  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2848  014F  1087               	bcf	7,1	;volatile
  2849  0150                     l207:
  2850  0150  0008               	return
  2851  0151                     __end_of_Lcd_Write_Char:
  2852                           
  2853                           	psect	text7
  2854  018A                     __ptext7:	
  2855 ;; *************** function _Lcd_Set_Cursor *****************
  2856 ;; Defined at:
  2857 ;;		line 30 in file "LCD8bits.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  a               1    wreg     unsigned char 
  2860 ;;  b               1    4[COMMON] unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  a               1    6[COMMON] unsigned char 
  2863 ;;  temp            1    7[COMMON] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         1       0       0       0       0
  2874 ;;      Locals:         2       0       0       0       0
  2875 ;;      Temps:          1       0       0       0       0
  2876 ;;      Totals:         4       0       0       0       0
  2877 ;;Total ram usage:        4 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    2
  2880 ;; This function calls:
  2881 ;;		_Lcd_Cmd
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;;		_setup
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _Lcd_Set_Cursor
  2890  018A                     _Lcd_Set_Cursor:
  2891                           
  2892                           ;incstack = 0
  2893                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2894                           ;Lcd_Set_Cursor@a stored from wreg
  2895  018A  00F6               	movwf	Lcd_Set_Cursor@a
  2896  018B                     l1467:
  2897                           
  2898                           ;LCD8bits.c: 31:     unsigned char temp;;LCD8bits.c: 32:     if (a == 1) {
  2899  018B  0376               	decf	Lcd_Set_Cursor@a,w
  2900  018C  1D03               	btfss	3,2
  2901  018D  298F               	goto	u641
  2902  018E  2990               	goto	u640
  2903  018F                     u641:
  2904  018F  299C               	goto	l1473
  2905  0190                     u640:
  2906  0190                     l1469:
  2907                           
  2908                           ;LCD8bits.c: 33:         temp = 0x80 + b - 1;
  2909  0190  0874               	movf	Lcd_Set_Cursor@b,w
  2910  0191  3E7F               	addlw	127
  2911  0192  00F5               	movwf	??_Lcd_Set_Cursor
  2912  0193  0875               	movf	??_Lcd_Set_Cursor,w
  2913  0194  00F7               	movwf	Lcd_Set_Cursor@temp
  2914  0195                     l1471:
  2915                           
  2916                           ;LCD8bits.c: 34:         Lcd_Cmd(temp);
  2917  0195  0877               	movf	Lcd_Set_Cursor@temp,w
  2918  0196  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  2919                           
  2920                           ;LCD8bits.c: 36:     } else if (a == 2) {
  2921  019B  29AD               	goto	l201
  2922  019C                     l1473:
  2923  019C  3002               	movlw	2
  2924  019D  0676               	xorwf	Lcd_Set_Cursor@a,w
  2925  019E  1D03               	btfss	3,2
  2926  019F  29A1               	goto	u651
  2927  01A0  29A2               	goto	u650
  2928  01A1                     u651:
  2929  01A1  29AD               	goto	l201
  2930  01A2                     u650:
  2931  01A2                     l1475:
  2932                           
  2933                           ;LCD8bits.c: 37:         temp = 0xC0 + b - 1;
  2934  01A2  0874               	movf	Lcd_Set_Cursor@b,w
  2935  01A3  3EBF               	addlw	191
  2936  01A4  00F5               	movwf	??_Lcd_Set_Cursor
  2937  01A5  0875               	movf	??_Lcd_Set_Cursor,w
  2938  01A6  00F7               	movwf	Lcd_Set_Cursor@temp
  2939  01A7                     l1477:
  2940                           
  2941                           ;LCD8bits.c: 38:         Lcd_Cmd(temp);
  2942  01A7  0877               	movf	Lcd_Set_Cursor@temp,w
  2943  01A8  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  2944  01AD                     l201:
  2945  01AD  0008               	return
  2946  01AE                     __end_of_Lcd_Set_Cursor:
  2947                           
  2948                           	psect	text8
  2949  02D4                     __ptext8:	
  2950 ;; *************** function _Lcd_Init *****************
  2951 ;; Defined at:
  2952 ;;		line 42 in file "LCD8bits.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          2       0       0       0       0
  2969 ;;      Totals:         2       0       0       0       0
  2970 ;;Total ram usage:        2 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    2
  2973 ;; This function calls:
  2974 ;;		_Lcd_Cmd
  2975 ;;		_Lcd_Port
  2976 ;; This function is called by:
  2977 ;;		_setup
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _Lcd_Init
  2983  02D4                     _Lcd_Init:
  2984  02D4                     l1487:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2987                           
  2988                           
  2989                           ;LCD8bits.c: 43:     Lcd_Port(0);
  2990  02D4  3000               	movlw	0
  2991  02D5  120A  118A  20F4  120A  118A  	fcall	_Lcd_Port
  2992  02DA                     l1489:
  2993                           
  2994                           ;LCD8bits.c: 44:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2995  02DA  3034               	movlw	52
  2996  02DB  00F5               	movwf	??_Lcd_Init+1
  2997  02DC  30F1               	movlw	241
  2998  02DD  00F4               	movwf	??_Lcd_Init
  2999  02DE                     u1187:
  3000  02DE  0BF4               	decfsz	??_Lcd_Init,f
  3001  02DF  2ADE               	goto	u1187
  3002  02E0  0BF5               	decfsz	??_Lcd_Init+1,f
  3003  02E1  2ADE               	goto	u1187
  3004  02E2  2AE3               	nop2
  3005  02E3                     l1491:
  3006                           
  3007                           ;LCD8bits.c: 45:     Lcd_Cmd(48);
  3008  02E3  3030               	movlw	48
  3009  02E4  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3010                           
  3011                           ;LCD8bits.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3012  02E9  300D               	movlw	13
  3013  02EA  00F5               	movwf	??_Lcd_Init+1
  3014  02EB  30FB               	movlw	251
  3015  02EC  00F4               	movwf	??_Lcd_Init
  3016  02ED                     u1197:
  3017  02ED  0BF4               	decfsz	??_Lcd_Init,f
  3018  02EE  2AED               	goto	u1197
  3019  02EF  0BF5               	decfsz	??_Lcd_Init+1,f
  3020  02F0  2AED               	goto	u1197
  3021  02F1  2AF2               	nop2
  3022  02F2                     l1493:
  3023                           
  3024                           ;LCD8bits.c: 47:     Lcd_Cmd(48);
  3025  02F2  3030               	movlw	48
  3026  02F3  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3027  02F8                     l1495:
  3028                           
  3029                           ;LCD8bits.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3030  02F8  301D               	movlw	29
  3031  02F9  00F5               	movwf	??_Lcd_Init+1
  3032  02FA  3091               	movlw	145
  3033  02FB  00F4               	movwf	??_Lcd_Init
  3034  02FC                     u1207:
  3035  02FC  0BF4               	decfsz	??_Lcd_Init,f
  3036  02FD  2AFC               	goto	u1207
  3037  02FE  0BF5               	decfsz	??_Lcd_Init+1,f
  3038  02FF  2AFC               	goto	u1207
  3039                           
  3040                           ;LCD8bits.c: 49:     Lcd_Cmd(48);
  3041  0300  3030               	movlw	48
  3042  0301  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3043                           
  3044                           ;LCD8bits.c: 51:     Lcd_Cmd(56);
  3045  0306  3038               	movlw	56
  3046  0307  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3047                           
  3048                           ;LCD8bits.c: 52:     Lcd_Cmd(8);
  3049  030C  3008               	movlw	8
  3050  030D  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3051                           
  3052                           ;LCD8bits.c: 53:     Lcd_Cmd(1);
  3053  0312  3001               	movlw	1
  3054  0313  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3055                           
  3056                           ;LCD8bits.c: 54:     Lcd_Cmd(6);
  3057  0318  3006               	movlw	6
  3058  0319  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3059                           
  3060                           ;LCD8bits.c: 55:     Lcd_Cmd(12);
  3061  031E  300C               	movlw	12
  3062  031F  120A  118A  2151  120A  118A  	fcall	_Lcd_Cmd
  3063  0324                     l204:
  3064  0324  0008               	return
  3065  0325                     __end_of_Lcd_Init:
  3066                           
  3067                           	psect	text9
  3068  0151                     __ptext9:	
  3069 ;; *************** function _Lcd_Cmd *****************
  3070 ;; Defined at:
  3071 ;;		line 17 in file "LCD8bits.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  a               1    wreg     unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  a               1    3[COMMON] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       0       0       0
  3086 ;;      Locals:         1       0       0       0       0
  3087 ;;      Temps:          2       0       0       0       0
  3088 ;;      Totals:         3       0       0       0       0
  3089 ;;Total ram usage:        3 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    1
  3092 ;; This function calls:
  3093 ;;		_Lcd_Port
  3094 ;; This function is called by:
  3095 ;;		_Lcd_Set_Cursor
  3096 ;;		_Lcd_Init
  3097 ;;		_Lcd_Clear
  3098 ;;		_Lcd_Shift_Right
  3099 ;;		_Lcd_Shift_Left
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function _Lcd_Cmd
  3105  0151                     _Lcd_Cmd:
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3109                           ;Lcd_Cmd@a stored from wreg
  3110  0151  00F3               	movwf	Lcd_Cmd@a
  3111  0152                     l1411:
  3112                           
  3113                           ;LCD8bits.c: 18:     RC0 = 0;
  3114  0152  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0153  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0154  1007               	bcf	7,0	;volatile
  3117  0155                     l1413:
  3118                           
  3119                           ;LCD8bits.c: 19:     Lcd_Port(a);
  3120  0155  0873               	movf	Lcd_Cmd@a,w
  3121  0156  120A  118A  20F4  120A  118A  	fcall	_Lcd_Port
  3122  015B                     l1415:
  3123                           
  3124                           ;LCD8bits.c: 20:     RC1 = 1;
  3125  015B  1283               	bcf	3,5	;RP0=0, select bank0
  3126  015C  1303               	bcf	3,6	;RP1=0, select bank0
  3127  015D  1487               	bsf	7,1	;volatile
  3128  015E                     l1417:
  3129                           
  3130                           ;LCD8bits.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3131  015E  300B               	movlw	11
  3132  015F  00F2               	movwf	??_Lcd_Cmd+1
  3133  0160  3062               	movlw	98
  3134  0161  00F1               	movwf	??_Lcd_Cmd
  3135  0162                     u1217:
  3136  0162  0BF1               	decfsz	??_Lcd_Cmd,f
  3137  0163  2962               	goto	u1217
  3138  0164  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3139  0165  2962               	goto	u1217
  3140  0166  0000               	nop
  3141  0167                     l1419:
  3142                           
  3143                           ;LCD8bits.c: 22:     RC1 = 0;
  3144  0167  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0168  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0169  1087               	bcf	7,1	;volatile
  3147  016A                     l192:
  3148  016A  0008               	return
  3149  016B                     __end_of_Lcd_Cmd:
  3150                           
  3151                           	psect	text10
  3152  00F4                     __ptext10:	
  3153 ;; *************** function _Lcd_Port *****************
  3154 ;; Defined at:
  3155 ;;		line 13 in file "LCD8bits.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  a               1    wreg     unsigned char 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  a               1    0[COMMON] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         1       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0
  3172 ;;      Totals:         1       0       0       0       0
  3173 ;;Total ram usage:        1 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_Lcd_Cmd
  3179 ;;		_Lcd_Init
  3180 ;;		_Lcd_Write_Char
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _Lcd_Port
  3186  00F4                     _Lcd_Port:
  3187                           
  3188                           ;incstack = 0
  3189                           ; Regs used in _Lcd_Port: [wreg]
  3190                           ;Lcd_Port@a stored from wreg
  3191  00F4  00F0               	movwf	Lcd_Port@a
  3192  00F5                     l1405:
  3193                           
  3194                           ;LCD8bits.c: 14:     PORTD = a;
  3195  00F5  0870               	movf	Lcd_Port@a,w
  3196  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3197  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3198  00F8  0088               	movwf	8	;volatile
  3199  00F9                     l189:
  3200  00F9  0008               	return
  3201  00FA                     __end_of_Lcd_Port:
  3202                           
  3203                           	psect	text11
  3204  0114                     __ptext11:	
  3205 ;; *************** function _I2C_Master_Write *****************
  3206 ;; Defined at:
  3207 ;;		line 65 in file "I2C.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  d               2    0[COMMON] unsigned int 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0, pclath, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         2       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0
  3224 ;;      Totals:         2       0       0       0       0
  3225 ;;Total ram usage:        2 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    1
  3228 ;; This function calls:
  3229 ;;		_I2C_Master_Wait
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;;		_setup
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _I2C_Master_Write
  3238  0114                     _I2C_Master_Write:
  3239  0114                     l1459:	
  3240                           ;incstack = 0
  3241                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3242                           
  3243                           
  3244                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3245  0114  120A  118A  211E  120A  118A  	fcall	_I2C_Master_Wait
  3246  0119                     l1461:
  3247                           
  3248                           ;I2C.c: 68:     SSPBUF = d;
  3249  0119  0870               	movf	I2C_Master_Write@d,w
  3250  011A  1283               	bcf	3,5	;RP0=0, select bank0
  3251  011B  1303               	bcf	3,6	;RP1=0, select bank0
  3252  011C  0093               	movwf	19	;volatile
  3253  011D                     l168:
  3254  011D  0008               	return
  3255  011E                     __end_of_I2C_Master_Write:
  3256                           
  3257                           	psect	text12
  3258  010B                     __ptext12:	
  3259 ;; *************** function _I2C_Master_Stop *****************
  3260 ;; Defined at:
  3261 ;;		line 55 in file "I2C.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    1
  3282 ;; This function calls:
  3283 ;;		_I2C_Master_Wait
  3284 ;; This function is called by:
  3285 ;;		_main
  3286 ;;		_setup
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _I2C_Master_Stop
  3292  010B                     _I2C_Master_Stop:
  3293  010B                     l1463:	
  3294                           ;incstack = 0
  3295                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3296                           
  3297                           
  3298                           ;I2C.c: 57:     I2C_Master_Wait();
  3299  010B  120A  118A  211E  120A  118A  	fcall	_I2C_Master_Wait
  3300  0110                     l1465:
  3301                           
  3302                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3303  0110  1683               	bsf	3,5	;RP0=1, select bank1
  3304  0111  1303               	bcf	3,6	;RP1=0, select bank1
  3305  0112  1511               	bsf	17,2	;volatile
  3306  0113                     l165:
  3307  0113  0008               	return
  3308  0114                     __end_of_I2C_Master_Stop:
  3309                           
  3310                           	psect	text13
  3311  0102                     __ptext13:	
  3312 ;; *************** function _I2C_Master_Start *****************
  3313 ;; Defined at:
  3314 ;;		line 39 in file "I2C.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, pclath, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    1
  3335 ;; This function calls:
  3336 ;;		_I2C_Master_Wait
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;;		_setup
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _I2C_Master_Start
  3345  0102                     _I2C_Master_Start:
  3346  0102                     l1455:	
  3347                           ;incstack = 0
  3348                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3349                           
  3350                           
  3351                           ;I2C.c: 41:     I2C_Master_Wait();
  3352  0102  120A  118A  211E  120A  118A  	fcall	_I2C_Master_Wait
  3353  0107                     l1457:
  3354                           
  3355                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3356  0107  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0108  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0109  1411               	bsf	17,0	;volatile
  3359  010A                     l159:
  3360  010A  0008               	return
  3361  010B                     __end_of_I2C_Master_Start:
  3362                           
  3363                           	psect	text14
  3364  01DC                     __ptext14:	
  3365 ;; *************** function _I2C_Master_Init *****************
  3366 ;; Defined at:
  3367 ;;		line 16 in file "I2C.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  c               4    0[BANK0 ] const unsigned long 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, pclath, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       4       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          0       4       0       0       0
  3384 ;;      Totals:         0       8       0       0       0
  3385 ;;Total ram usage:        8 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    1
  3388 ;; This function calls:
  3389 ;;		___lldiv
  3390 ;; This function is called by:
  3391 ;;		_setup
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _I2C_Master_Init
  3397  01DC                     _I2C_Master_Init:
  3398  01DC                     l1497:	
  3399                           ;incstack = 0
  3400                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3401                           
  3402                           
  3403                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3404  01DC  3028               	movlw	40
  3405  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3406  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  3407  01DF  0094               	movwf	20	;volatile
  3408  01E0                     l1499:
  3409                           
  3410                           ;I2C.c: 19:     SSPCON2 = 0;
  3411  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  3412  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  3413  01E2  0191               	clrf	17	;volatile
  3414  01E3                     l1501:
  3415                           
  3416                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3417  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  3418  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  3419  01E5  0846               	movf	I2C_Master_Init@c,w
  3420  01E6  00CA               	movwf	??_I2C_Master_Init
  3421  01E7  0847               	movf	I2C_Master_Init@c+1,w
  3422  01E8  00CB               	movwf	??_I2C_Master_Init+1
  3423  01E9  0848               	movf	I2C_Master_Init@c+2,w
  3424  01EA  00CC               	movwf	??_I2C_Master_Init+2
  3425  01EB  0849               	movf	I2C_Master_Init@c+3,w
  3426  01EC  00CD               	movwf	??_I2C_Master_Init+3
  3427  01ED  3002               	movlw	2
  3428  01EE                     u695:
  3429  01EE  1003               	clrc
  3430  01EF  0DCA               	rlf	??_I2C_Master_Init,f
  3431  01F0  0DCB               	rlf	??_I2C_Master_Init+1,f
  3432  01F1  0DCC               	rlf	??_I2C_Master_Init+2,f
  3433  01F2  0DCD               	rlf	??_I2C_Master_Init+3,f
  3434  01F3                     u690:
  3435  01F3  3EFF               	addlw	-1
  3436  01F4  1D03               	skipz
  3437  01F5  29EE               	goto	u695
  3438  01F6  084D               	movf	??_I2C_Master_Init+3,w
  3439  01F7  00F3               	movwf	___lldiv@divisor+3
  3440  01F8  084C               	movf	??_I2C_Master_Init+2,w
  3441  01F9  00F2               	movwf	___lldiv@divisor+2
  3442  01FA  084B               	movf	??_I2C_Master_Init+1,w
  3443  01FB  00F1               	movwf	___lldiv@divisor+1
  3444  01FC  084A               	movf	??_I2C_Master_Init,w
  3445  01FD  00F0               	movwf	___lldiv@divisor
  3446  01FE  3000               	movlw	0
  3447  01FF  00F7               	movwf	___lldiv@dividend+3
  3448  0200  307A               	movlw	122
  3449  0201  00F6               	movwf	___lldiv@dividend+2
  3450  0202  3012               	movlw	18
  3451  0203  00F5               	movwf	___lldiv@dividend+1
  3452  0204  3000               	movlw	0
  3453  0205  00F4               	movwf	___lldiv@dividend
  3454  0206  120A  118A  2325  120A  118A  	fcall	___lldiv
  3455  020B  0870               	movf	?___lldiv,w
  3456  020C  3EFF               	addlw	255
  3457  020D  1683               	bsf	3,5	;RP0=1, select bank1
  3458  020E  1303               	bcf	3,6	;RP1=0, select bank1
  3459  020F  0093               	movwf	19	;volatile
  3460  0210                     l1503:
  3461                           
  3462                           ;I2C.c: 21:     SSPSTAT = 0;
  3463  0210  0194               	clrf	20	;volatile
  3464  0211                     l1505:
  3465                           
  3466                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3467  0211  1587               	bsf	7,3	;volatile
  3468  0212                     l1507:
  3469                           
  3470                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3471  0212  1607               	bsf	7,4	;volatile
  3472  0213                     l150:
  3473  0213  0008               	return
  3474  0214                     __end_of_I2C_Master_Init:
  3475                           
  3476                           	psect	text15
  3477  0325                     __ptext15:	
  3478 ;; *************** function ___lldiv *****************
  3479 ;; Defined at:
  3480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  divisor         4    0[COMMON] unsigned long 
  3483 ;;  dividend        4    4[COMMON] unsigned long 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  quotient        4    9[COMMON] unsigned long 
  3486 ;;  counter         1   13[COMMON] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  4    0[COMMON] unsigned long 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         8       0       0       0       0
  3497 ;;      Locals:         5       0       0       0       0
  3498 ;;      Temps:          1       0       0       0       0
  3499 ;;      Totals:        14       0       0       0       0
  3500 ;;Total ram usage:       14 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_I2C_Master_Init
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function ___lldiv
  3511  0325                     ___lldiv:
  3512  0325                     l1431:	
  3513                           ;incstack = 0
  3514                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3515                           
  3516  0325  3000               	movlw	0
  3517  0326  00FC               	movwf	___lldiv@quotient+3
  3518  0327  3000               	movlw	0
  3519  0328  00FB               	movwf	___lldiv@quotient+2
  3520  0329  3000               	movlw	0
  3521  032A  00FA               	movwf	___lldiv@quotient+1
  3522  032B  3000               	movlw	0
  3523  032C  00F9               	movwf	___lldiv@quotient
  3524  032D  0873               	movf	___lldiv@divisor+3,w
  3525  032E  0472               	iorwf	___lldiv@divisor+2,w
  3526  032F  0471               	iorwf	___lldiv@divisor+1,w
  3527  0330  0470               	iorwf	___lldiv@divisor,w
  3528  0331  1903               	skipnz
  3529  0332  2B34               	goto	u571
  3530  0333  2B35               	goto	u570
  3531  0334                     u571:
  3532  0334  2B82               	goto	l1451
  3533  0335                     u570:
  3534  0335                     l1433:
  3535  0335  01FD               	clrf	___lldiv@counter
  3536  0336  0AFD               	incf	___lldiv@counter,f
  3537  0337  2B45               	goto	l1437
  3538  0338                     l1435:
  3539  0338  3001               	movlw	1
  3540  0339  00F8               	movwf	??___lldiv
  3541  033A                     u585:
  3542  033A  1003               	clrc
  3543  033B  0DF0               	rlf	___lldiv@divisor,f
  3544  033C  0DF1               	rlf	___lldiv@divisor+1,f
  3545  033D  0DF2               	rlf	___lldiv@divisor+2,f
  3546  033E  0DF3               	rlf	___lldiv@divisor+3,f
  3547  033F  0BF8               	decfsz	??___lldiv,f
  3548  0340  2B3A               	goto	u585
  3549  0341  3001               	movlw	1
  3550  0342  00F8               	movwf	??___lldiv
  3551  0343  0878               	movf	??___lldiv,w
  3552  0344  07FD               	addwf	___lldiv@counter,f
  3553  0345                     l1437:
  3554  0345  1FF3               	btfss	___lldiv@divisor+3,7
  3555  0346  2B48               	goto	u591
  3556  0347  2B49               	goto	u590
  3557  0348                     u591:
  3558  0348  2B38               	goto	l1435
  3559  0349                     u590:
  3560  0349                     l1439:
  3561  0349  3001               	movlw	1
  3562  034A  00F8               	movwf	??___lldiv
  3563  034B                     u605:
  3564  034B  1003               	clrc
  3565  034C  0DF9               	rlf	___lldiv@quotient,f
  3566  034D  0DFA               	rlf	___lldiv@quotient+1,f
  3567  034E  0DFB               	rlf	___lldiv@quotient+2,f
  3568  034F  0DFC               	rlf	___lldiv@quotient+3,f
  3569  0350  0BF8               	decfsz	??___lldiv,f
  3570  0351  2B4B               	goto	u605
  3571  0352                     l1441:
  3572  0352  0873               	movf	___lldiv@divisor+3,w
  3573  0353  0277               	subwf	___lldiv@dividend+3,w
  3574  0354  1D03               	skipz
  3575  0355  2B60               	goto	u615
  3576  0356  0872               	movf	___lldiv@divisor+2,w
  3577  0357  0276               	subwf	___lldiv@dividend+2,w
  3578  0358  1D03               	skipz
  3579  0359  2B60               	goto	u615
  3580  035A  0871               	movf	___lldiv@divisor+1,w
  3581  035B  0275               	subwf	___lldiv@dividend+1,w
  3582  035C  1D03               	skipz
  3583  035D  2B60               	goto	u615
  3584  035E  0870               	movf	___lldiv@divisor,w
  3585  035F  0274               	subwf	___lldiv@dividend,w
  3586  0360                     u615:
  3587  0360  1C03               	skipc
  3588  0361  2B63               	goto	u611
  3589  0362  2B64               	goto	u610
  3590  0363                     u611:
  3591  0363  2B73               	goto	l1447
  3592  0364                     u610:
  3593  0364                     l1443:
  3594  0364  0870               	movf	___lldiv@divisor,w
  3595  0365  02F4               	subwf	___lldiv@dividend,f
  3596  0366  0871               	movf	___lldiv@divisor+1,w
  3597  0367  1C03               	skipc
  3598  0368  0F71               	incfsz	___lldiv@divisor+1,w
  3599  0369  02F5               	subwf	___lldiv@dividend+1,f
  3600  036A  0872               	movf	___lldiv@divisor+2,w
  3601  036B  1C03               	skipc
  3602  036C  0F72               	incfsz	___lldiv@divisor+2,w
  3603  036D  02F6               	subwf	___lldiv@dividend+2,f
  3604  036E  0873               	movf	___lldiv@divisor+3,w
  3605  036F  1C03               	skipc
  3606  0370  0F73               	incfsz	___lldiv@divisor+3,w
  3607  0371  02F7               	subwf	___lldiv@dividend+3,f
  3608  0372                     l1445:
  3609  0372  1479               	bsf	___lldiv@quotient,0
  3610  0373                     l1447:
  3611  0373  3001               	movlw	1
  3612  0374                     u625:
  3613  0374  1003               	clrc
  3614  0375  0CF3               	rrf	___lldiv@divisor+3,f
  3615  0376  0CF2               	rrf	___lldiv@divisor+2,f
  3616  0377  0CF1               	rrf	___lldiv@divisor+1,f
  3617  0378  0CF0               	rrf	___lldiv@divisor,f
  3618  0379  3EFF               	addlw	-1
  3619  037A  1D03               	skipz
  3620  037B  2B74               	goto	u625
  3621  037C                     l1449:
  3622  037C  3001               	movlw	1
  3623  037D  02FD               	subwf	___lldiv@counter,f
  3624  037E  1D03               	btfss	3,2
  3625  037F  2B81               	goto	u631
  3626  0380  2B82               	goto	u630
  3627  0381                     u631:
  3628  0381  2B49               	goto	l1439
  3629  0382                     u630:
  3630  0382                     l1451:
  3631  0382  087C               	movf	___lldiv@quotient+3,w
  3632  0383  00F3               	movwf	?___lldiv+3
  3633  0384  087B               	movf	___lldiv@quotient+2,w
  3634  0385  00F2               	movwf	?___lldiv+2
  3635  0386  087A               	movf	___lldiv@quotient+1,w
  3636  0387  00F1               	movwf	?___lldiv+1
  3637  0388  0879               	movf	___lldiv@quotient,w
  3638  0389  00F0               	movwf	?___lldiv
  3639  038A                     l411:
  3640  038A  0008               	return
  3641  038B                     __end_of___lldiv:
  3642                           
  3643                           	psect	text16
  3644  016B                     __ptext16:	
  3645 ;; *************** function _enviocadena *****************
  3646 ;; Defined at:
  3647 ;;		line 44 in file "usart.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  cadena          1    wreg     PTR unsigned char 
  3650 ;;		 -> volt(16), 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  cadena          1    2[COMMON] PTR unsigned char 
  3653 ;;		 -> volt(16), 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3663 ;;      Params:         0       0       0       0       0
  3664 ;;      Locals:         1       0       0       0       0
  3665 ;;      Temps:          1       0       0       0       0
  3666 ;;      Totals:         2       0       0       0       0
  3667 ;;Total ram usage:        2 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		_enviocaracter
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _enviocadena
  3679  016B                     _enviocadena:
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3683                           ;enviocadena@cadena stored from wreg
  3684  016B  00F2               	movwf	enviocadena@cadena
  3685  016C                     l1735:
  3686                           
  3687                           ;usart.c: 45:     while (*cadena != 0){
  3688  016C  2979               	goto	l1741
  3689  016D                     l1737:
  3690                           
  3691                           ;usart.c: 46:       enviocaracter(*cadena);
  3692  016D  0872               	movf	enviocadena@cadena,w
  3693  016E  0084               	movwf	4
  3694  016F  0800               	movf	0,w
  3695  0170  120A  118A  212B  120A  118A  	fcall	_enviocaracter
  3696  0175                     l1739:
  3697                           
  3698                           ;usart.c: 47:       cadena++;
  3699  0175  3001               	movlw	1
  3700  0176  00F1               	movwf	??_enviocadena
  3701  0177  0871               	movf	??_enviocadena,w
  3702  0178  07F2               	addwf	enviocadena@cadena,f
  3703  0179                     l1741:
  3704                           
  3705                           ;usart.c: 45:     while (*cadena != 0){
  3706  0179  0872               	movf	enviocadena@cadena,w
  3707  017A  0084               	movwf	4
  3708  017B  1383               	bcf	3,7	;select IRP bank0
  3709  017C  0800               	movf	0,w
  3710  017D  1D03               	btfss	3,2
  3711  017E  2980               	goto	u931
  3712  017F  2981               	goto	u930
  3713  0180                     u931:
  3714  0180  296D               	goto	l1737
  3715  0181                     u930:
  3716  0181                     l258:
  3717                           
  3718                           ;usart.c: 49:     if (PIR1bits.TXIF){
  3719  0181  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0182  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0183  1E0C               	btfss	12,4	;volatile
  3722  0184  2986               	goto	u941
  3723  0185  2987               	goto	u940
  3724  0186                     u941:
  3725  0186  2989               	goto	l260
  3726  0187                     u940:
  3727  0187                     l1743:
  3728                           
  3729                           ;usart.c: 50:             TXREG = 13;
  3730  0187  300D               	movlw	13
  3731  0188  0099               	movwf	25	;volatile
  3732  0189                     l260:
  3733  0189  0008               	return
  3734  018A                     __end_of_enviocadena:
  3735                           
  3736                           	psect	text17
  3737  012B                     __ptext17:	
  3738 ;; *************** function _enviocaracter *****************
  3739 ;; Defined at:
  3740 ;;		line 35 in file "usart.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  a               1    wreg     unsigned char 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  a               1    0[COMMON] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         0       0       0       0       0
  3755 ;;      Locals:         1       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0
  3757 ;;      Totals:         1       0       0       0       0
  3758 ;;Total ram usage:        1 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_enviocadena
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _enviocaracter
  3769  012B                     _enviocaracter:
  3770                           
  3771                           ;incstack = 0
  3772                           ; Regs used in _enviocaracter: [wreg]
  3773                           ;enviocaracter@a stored from wreg
  3774  012B  00F0               	movwf	enviocaracter@a
  3775  012C                     l1509:
  3776  012C                     l249:	
  3777                           ;usart.c: 38:     }
  3778                           
  3779                           
  3780                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  3781  012C  1683               	bsf	3,5	;RP0=1, select bank1
  3782  012D  1303               	bcf	3,6	;RP1=0, select bank1
  3783  012E  1C98               	btfss	24,1	;volatile
  3784  012F  2931               	goto	u701
  3785  0130  2932               	goto	u700
  3786  0131                     u701:
  3787  0131  292C               	goto	l249
  3788  0132                     u700:
  3789  0132                     l251:
  3790                           
  3791                           ;usart.c: 39:     if (PIR1bits.TXIF){
  3792  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0134  1E0C               	btfss	12,4	;volatile
  3795  0135  2937               	goto	u711
  3796  0136  2938               	goto	u710
  3797  0137                     u711:
  3798  0137  293A               	goto	l253
  3799  0138                     u710:
  3800  0138                     l1511:
  3801                           
  3802                           ;usart.c: 40:             TXREG = a;
  3803  0138  0870               	movf	enviocaracter@a,w
  3804  0139  0099               	movwf	25	;volatile
  3805  013A                     l253:
  3806  013A  0008               	return
  3807  013B                     __end_of_enviocaracter:
  3808                           
  3809                           	psect	text18
  3810  01AE                     __ptext18:	
  3811 ;; *************** function _I2C_Master_Read *****************
  3812 ;; Defined at:
  3813 ;;		line 74 in file "I2C.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  a               2    0[COMMON] unsigned short 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  temp            2    4[COMMON] unsigned short 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2    0[COMMON] unsigned short 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         2       0       0       0       0
  3828 ;;      Locals:         2       0       0       0       0
  3829 ;;      Temps:          2       0       0       0       0
  3830 ;;      Totals:         6       0       0       0       0
  3831 ;;Total ram usage:        6 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    1
  3834 ;; This function calls:
  3835 ;;		_I2C_Master_Wait
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           
  3842                           ;psect for function _I2C_Master_Read
  3843  01AE                     _I2C_Master_Read:
  3844  01AE                     l1651:	
  3845                           ;incstack = 0
  3846                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3847                           
  3848                           
  3849                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3850  01AE  120A  118A  211E  120A  118A  	fcall	_I2C_Master_Wait
  3851  01B3                     l1653:
  3852                           
  3853                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3854  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  3855  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  3856  01B5  1591               	bsf	17,3	;volatile
  3857                           
  3858                           ;I2C.c: 79:     I2C_Master_Wait();
  3859  01B6  120A  118A  211E  120A  118A  	fcall	_I2C_Master_Wait
  3860  01BB                     l1655:
  3861                           
  3862                           ;I2C.c: 80:     temp = SSPBUF;
  3863  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3864  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3865  01BD  0813               	movf	19,w	;volatile
  3866  01BE  00F2               	movwf	??_I2C_Master_Read
  3867  01BF  01F3               	clrf	??_I2C_Master_Read+1
  3868  01C0  0872               	movf	??_I2C_Master_Read,w
  3869  01C1  00F4               	movwf	I2C_Master_Read@temp
  3870  01C2  0873               	movf	??_I2C_Master_Read+1,w
  3871  01C3  00F5               	movwf	I2C_Master_Read@temp+1
  3872  01C4                     l1657:
  3873                           
  3874                           ;I2C.c: 81:     I2C_Master_Wait();
  3875  01C4  120A  118A  211E  120A  118A  	fcall	_I2C_Master_Wait
  3876  01C9                     l1659:
  3877                           
  3878                           ;I2C.c: 82:     if(a == 1){
  3879  01C9  0370               	decf	I2C_Master_Read@a,w
  3880  01CA  0471               	iorwf	I2C_Master_Read@a+1,w
  3881  01CB  1D03               	btfss	3,2
  3882  01CC  29CE               	goto	u851
  3883  01CD  29CF               	goto	u850
  3884  01CE                     u851:
  3885  01CE  29D3               	goto	l171
  3886  01CF                     u850:
  3887  01CF                     l1661:
  3888                           
  3889                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3890  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  3891  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  3892  01D1  1291               	bcf	17,5	;volatile
  3893                           
  3894                           ;I2C.c: 84:     }else{
  3895  01D2  29D6               	goto	l172
  3896  01D3                     l171:
  3897                           
  3898                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3899  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  3900  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  3901  01D5  1691               	bsf	17,5	;volatile
  3902  01D6                     l172:	
  3903                           ;I2C.c: 86:     }
  3904                           
  3905                           
  3906                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3907  01D6  1611               	bsf	17,4	;volatile
  3908  01D7                     l1663:
  3909                           
  3910                           ;I2C.c: 88:     return temp;
  3911  01D7  0875               	movf	I2C_Master_Read@temp+1,w
  3912  01D8  00F1               	movwf	?_I2C_Master_Read+1
  3913  01D9  0874               	movf	I2C_Master_Read@temp,w
  3914  01DA  00F0               	movwf	?_I2C_Master_Read
  3915  01DB                     l173:
  3916  01DB  0008               	return
  3917  01DC                     __end_of_I2C_Master_Read:
  3918                           
  3919                           	psect	text19
  3920  011E                     __ptext19:	
  3921 ;; *************** function _I2C_Master_Wait *****************
  3922 ;; Defined at:
  3923 ;;		line 32 in file "I2C.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3937 ;;      Params:         0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0
  3940 ;;      Totals:         0       0       0       0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_I2C_Master_Start
  3947 ;;		_I2C_Master_Stop
  3948 ;;		_I2C_Master_Write
  3949 ;;		_I2C_Master_Read
  3950 ;;		_I2C_Master_RepeatedStart
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _I2C_Master_Wait
  3956  011E                     _I2C_Master_Wait:
  3957  011E                     l1407:	
  3958                           ;incstack = 0
  3959                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3960                           
  3961  011E                     l153:	
  3962                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3963                           
  3964  011E  1683               	bsf	3,5	;RP0=1, select bank1
  3965  011F  1303               	bcf	3,6	;RP1=0, select bank1
  3966  0120  1914               	btfsc	20,2	;volatile
  3967  0121  2923               	goto	u551
  3968  0122  2924               	goto	u550
  3969  0123                     u551:
  3970  0123  291E               	goto	l153
  3971  0124                     u550:
  3972  0124                     l1409:
  3973  0124  0811               	movf	17,w	;volatile
  3974  0125  391F               	andlw	31
  3975  0126  1D03               	btfss	3,2
  3976  0127  2929               	goto	u561
  3977  0128  292A               	goto	u560
  3978  0129                     u561:
  3979  0129  291E               	goto	l153
  3980  012A                     u560:
  3981  012A                     l156:
  3982  012A  0008               	return
  3983  012B                     __end_of_I2C_Master_Wait:
  3984  007E                     btemp	set	126	;btemp
  3985  007E                     wtemp0	set	126
  3986                           
  3987                           	psect	config
  3988                           
  3989                           ;Config register CONFIG1 @ 0x2007
  3990                           ;	Oscillator Selection bits
  3991                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3992                           ;	Watchdog Timer Enable bit
  3993                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3994                           ;	Power-up Timer Enable bit
  3995                           ;	PWRTE = OFF, PWRT disabled
  3996                           ;	RE3/MCLR pin function select bit
  3997                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3998                           ;	Code Protection bit
  3999                           ;	CP = OFF, Program memory code protection is disabled
  4000                           ;	Data Code Protection bit
  4001                           ;	CPD = OFF, Data memory code protection is disabled
  4002                           ;	Brown Out Reset Selection bits
  4003                           ;	BOREN = OFF, BOR disabled
  4004                           ;	Internal External Switchover bit
  4005                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4006                           ;	Fail-Safe Clock Monitor Enabled bit
  4007                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4008                           ;	Low Voltage Programming Enable bit
  4009                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4010                           ;	In-Circuit Debugger Mode bit
  4011                           ;	DEBUG = 0x1, unprogrammed default
  4012  2007                     	org	8199
  4013  2007  20D4               	dw	8404
  4014                           
  4015                           ;Config register CONFIG2 @ 0x2008
  4016                           ;	Brown-out Reset Selection bit
  4017                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4018                           ;	Flash Program Memory Self Write Enable bits
  4019                           ;	WRT = OFF, Write protection off
  4020  2008                     	org	8200
  4021  2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    10
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[15]), volt(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    _enviocadena->_enviocaracter

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    6599
                                             21 BANK0      9     9      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _enviocadena
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    18     11    1280
                                              0 BANK0     21    10     11
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    2484
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1390
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _enviocadena
     _enviocaracter
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      52       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      52      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 10 16:06:01 2021

                        _L 0032                          _M 0030                          _R 0031  
                        _a 0035                          _x 002A                          _y 0028  
                        pc 0002                         _s1 0034                         _s2 0033  
                       _z1 002D                         fsr 0004                        l110 05CB  
                      l102 05B5                        l201 01AD                        l121 046F  
                      l106 05C1                        l204 0324                        l213 028F  
                      l150 0213                        l207 0150                        l153 011E  
                      l171 01D3                        l251 0132                        l411 038A  
                      l156 012A                        l172 01D6                        l260 0189  
                      l173 01DB                        l253 013A                        l165 0113  
                      l159 010A                        l168 011D                        l192 016A  
                      l249 012C                        l258 0181                        l371 0572  
                      l189 00F9                        l647 02D3                        l657 024D  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      u610 0364                        u611 0363                        u700 0132  
                      u701 0131                        u605 034B                        u550 0124  
                      u710 0138                        u630 0382                        u551 0123  
                      u711 0137                        u631 0381                        u615 0360  
                      u560 012A                        u640 0190                        u720 0298  
                      u561 0129                        u625 0374                        u641 018F  
                      u721 0297                        u570 0335                        u650 01A2  
                      u810 022C                        u571 0334                        u651 01A1  
                      u811 022B                        u660 025B                        u740 02AA  
                      u820 0236                        u900 050A                        u741 02A9  
                      u821 0235                        u805 021E                        u901 0509  
                      u590 0349                        u670 027D                        u910 055C  
                      u591 0348                        u735 029C                        u911 055B  
                      u680 028F                        u760 02BB                        u840 0249  
                      u920 056E                        u585 033A                        u681 028E  
                      u761 02BA                        u841 0248                        u825 0232  
                      u921 056D                        u850 01CF                        u930 0181  
                      u690 01F3                        u851 01CE                        u931 0180  
                      u755 02AB                        u835 023D                        u940 0187  
                      u780 02CF                        u860 047E                        u941 0186  
                      u781 02CE                        u765 02B7                        u861 047D  
                      u790 021A                        u870 04D3                        u950 05B9  
                      u695 01EE                        u775 02C3                        u791 0219  
                      u871 04D2                        u951 05B8                        u880 04F9  
                      u960 05BF                        u881 04F8                        u961 05BE  
                      u890 0504                        u970 05C5                        u891 0503  
                      u971 05C4                        u980 05CB                        u885 04F5  
                      u981 05CA                        u990 071B                        u991 071A  
                      u995 0717                        fsr0 0004                        _xls 002F  
                      _xms 0026                        _yls 002E                        _yms 0024  
                      indf 0000                       l1411 0152                       l1501 01E3  
                     l1405 00F5                       l1413 0155                       l1421 013C  
                     l1407 011E                       l1511 0138                       l1431 0325  
                     l1503 0210                       l1415 015B                       l1423 013F  
                     l1409 0124                       l1441 0352                       l1433 0335  
                     l1505 0211                       l1417 015E                       l1425 0145  
                     l1601 03B6                       l1521 02A2                       l1513 0290  
                     l1443 0364                       l1435 0338                       l1451 0382  
                     l1507 0212                       l1419 0167                       l1427 0148  
                     l1611 03C8                       l1603 03B7                       l1531 02C2  
                     l1523 02A6                       l1515 0292                       l1509 012C  
                     l1445 0372                       l1437 0345                       l1461 0119  
                     l1429 014D                       l1621 03F7                       l1613 03D1  
                     l1605 03B8                       l1533 02C9                       l1525 02AA  
                     l1517 0298                       l1541 021A                       l1447 0373  
                     l1439 0349                       l1455 0102                       l1463 010B  
                     l1471 0195                       l1631 041E                       l1623 0400  
                     l1615 03E0                       l1607 03BB                       l1527 02BB  
                     l1519 029B                       l1535 02CF                       l1551 0236  
                     l1543 021D                       l1711 050A                       l1703 04DE  
                     l1449 037C                       l1457 0107                       l1465 0110  
                     l1473 019C                       l1481 0251                       l1641 0445  
                     l1633 0427                       l1625 0405                       l1617 03E5  
                     l1609 03C0                       l1561 038B                       l1529 02C1  
                     l1553 023C                       l1545 0224                       l1721 054F  
                     l1713 0511                       l1801 072A                       l1651 01AE  
                     l1459 0114                       l1491 02E3                       l1475 01A2  
                     l1467 018B                       l1483 026D                       l1643 044E  
                     l1635 0430                       l1627 0410                       l1619 03EE  
                     l1571 0397                       l1563 038F                       l1555 0243  
                     l1547 0228                       l1539 0214                       l1723 0553  
                     l1715 0515                       l1707 04FA                       l1811 075A  
                     l1803 0730                       l1661 01CF                       l1653 01B3  
                     l1741 0179                       l1493 02F2                       l1477 01A7  
                     l1469 0190                       l1485 0273                       l1645 0457  
                     l1637 0435                       l1629 0415                       l1581 03A1  
                     l1573 0398                       l1565 0390                       l1549 022C  
                     l1557 0249                       l1717 051A                       l1709 0504  
                     l1725 055C                       l1821 0770                       l1813 075E  
                     l1805 073F                       l1663 01D7                       l1655 01BB  
                     l1743 0187                       l1735 016C                       l1495 02F8  
                     l1487 02D4                       l1479 024E                       l1647 045F  
                     l1639 0440                       l1591 03AA                       l1583 03A2  
                     l1575 0399                       l1567 0393                       l1719 0548  
                     l1727 056E                       l1671 047E                       l1831 079C  
                     l1823 077D                       l1815 0764                       l1807 0745  
                     l1751 058B                       l1657 01C4                       l1737 016D  
                     l1497 01DC                       l1489 02DA                       l1649 0464  
                     l1593 03AB                       l1585 03A5                       l1577 039B  
                     l1569 0394                       l1681 0497                       l1673 0485  
                     l1841 07E6                       l1833 07A1                       l1825 0780  
                     l1817 0768                       l1809 0754                       l1761 05BF  
                     l1753 0594                       l1745 0573                       l1659 01C9  
                     l1739 0175                       l1499 01E0                       l1595 03AE  
                     l1587 03A8                       l1579 039E                       l1691 04CF  
                     l1675 048A                       l1667 0473                       l1835 07AC  
                     l1827 0785                       l1819 076C                       l1771 05FE  
                     l1763 05C5                       l1747 0579                       l1597 03B2  
                     l1589 03A9                       l1693 04D3                       l1677 048C  
                     l1685 04A3                       l1669 0478                       l1837 07D8  
                     l1829 078E                       l1781 0651                       l1773 0607  
                     l1765 05CD                       l1749 0582                       l1757 059D  
                     l1599 03B3                       l1695 04D7                       l1687 04C3  
                     l1679 0493                       l1839 07DE                       l1791 06F8  
                     l1783 0656                       l1775 0615                       l1767 05EE  
                     l1759 05B9                       l1697 04DC                       l1689 04CB  
                     l1793 0702                       l1785 065F                       l1777 061A  
                     l1769 05F9                       l1795 0709                       l1787 0667  
                     l1779 0646                       l1797 070E                       l1789 066C  
                     l1799 071B                       l1897 05A7                       l1899 04B5  
                     STR_1 001D                       STR_2 002C                       u1000 072A  
                     u1001 0729                       u1010 073F                       u1011 073E  
                     u1020 0754                       u1021 0753                       u1005 0726  
                     u1030 075A                       u1031 0759                       u1015 073B  
                     u1040 0764                       u1041 0763                       u1025 0750  
                     u1050 0768                       u1051 0767                       u1107 064C  
                     u1060 0770                       u1061 076F                       u1117 0672  
                     u1070 077D                       u1207 02FC                       u1071 077C  
                     u1127 06FE                       u1217 0162                       u1137 07A7  
                     u1147 040B                       u1075 0779                       u1157 043B  
                     u1167 046A                       u1087 05F4                       u1177 014A  
                     u1097 0620                       u1187 02DE                       u1197 02ED  
                     _PEIE 005E          ?_Lcd_Write_String 0073                       _arct 0022  
                     _main 0573                       btemp 007E                       _volt 0036  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 016B  
             ?_enviocadena 0070           ?_I2C_Master_Init 0046           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _EEADR 010D                      _EEDAT 010C                      _ANSEL 0188  
          __end_of___lldiv 038B            __end_of___lwdiv 02D4            __end_of___lwmod 024E  
                    _SPBRG 0099                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019            __end_of_dpowers 001D  
                    _setup 038B     __size_of_enviocaracter 0010                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0573  
         __end_of_Lcd_Init 0325           __end_of_Lcd_Port 00FA            __initialization 07F3  
             __end_of_main 07F3                     ??_main 005B          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _EECON2 018D                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0071                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___lldiv 0078  
            _enviocaracter 012B                  ??___lwdiv 0074                  ??___lwmod 007C  
                ??_sprintf 0051            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC             __pcstackCOMMON 0070             ?_enviocaracter 0070  
     __size_of_enviocadena 001F              __end_of_setup 0470             _Lcd_Set_Cursor 018A  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 004E                 __pbssBANK0 0020                 __pmaintext 0573  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 01AE                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
           enviocaracter@a 0070                 __stringtab 0003                    _Heading 0020  
           _Lcd_Write_Char 013B                    _Lcd_Cmd 0151            ??_enviocaracter 0070  
                  ___lldiv 0325                    ___lwdiv 0290                    ___lwmod 0214  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0470                    __ptext2 0214  
                  __ptext3 0290                    __ptext4 038B                    __ptext5 024E  
                  __ptext6 013B                    __ptext7 018A                    __ptext8 02D4  
                  __ptext9 0151                    _dpowers 0013                    _mapping 002C  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 0470                    clrloop0 00FB  
   __end_of_Lcd_Write_Char 0151       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018           I2C_Master_Init@c 0046           I2C_Master_Read@a 0070  
                Lcd_Port@a 0070                  _PORTBbits 0006                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
                _TXSTAbits 0098           _Lcd_Write_String 024E                _BAUDCTLbits 0187  
      start_initialization 07F3          __size_of_Lcd_Init 0051          __size_of_Lcd_Port 0006  
        ??_I2C_Master_Init 004A          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070              ??_enviocadena 0071            Lcd_Write_Char@a 0072  
                ___latbits 0002              __pcstackBANK0 0046                   ?_Lcd_Cmd 0070  
              sprintf@flag 0054                sprintf@prec 0055           _I2C_Master_Start 0102  
         _I2C_Master_Write 0114           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075  
                 ?___lldiv 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
      __end_of_enviocadena 018A                  __pstrings 0003           ___lwdiv@quotient 0075  
                 ?_sprintf 0046             __size_of_setup 00E5                  clear_ram0 00FA  
                 Lcd_Cmd@a 0073                   _PIR1bits 000C                   _PIR2bits 000D  
    __end_of_enviocaracter 013B                __stringbase 0012                   _WPUBbits 0095  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 02D4                   _Lcd_Port 00F4  
      I2C_Master_Read@temp 0074          enviocadena@cadena 0072   __end_of_Lcd_Write_String 0290  
         __size_of_Lcd_Cmd 001A                 _EECON1bits 018C                _enviocadena 016B  
         __size_of___lldiv 0066           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0013                 sprintf@val 0057            _I2C_Master_Init 01DC  
          _I2C_Master_Read 01AE            _I2C_Master_Wait 011E            _I2C_Master_Stop 010B  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 00F4  
                 __ptext11 0114                   __ptext12 010B                   __ptext13 0102  
                 __ptext14 01DC                   __ptext15 0325                   __ptext16 016B  
                 __ptext17 012B                   __ptext18 01AE                   __ptext19 011E  
         __size_of_sprintf 0103              __size_of_main 0280   __end_of_I2C_Master_Start 010B  
 __end_of_I2C_Master_Write 011E                 _INTCONbits 000B                  sprintf@ap 0056  
                sprintf@sp 0059           ___lwmod@dividend 007A           ___lldiv@dividend 0074  
                stringcode 000D                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0214  
  __end_of_I2C_Master_Read 01DC    __end_of_I2C_Master_Wait 012B    __end_of_I2C_Master_Stop 0114  
       Lcd_Set_Cursor@temp 0077                   sprintf@c 005A                   sprintf@f 0046  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091  
