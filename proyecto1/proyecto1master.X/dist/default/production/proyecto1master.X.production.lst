

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Sep 05 00:33:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:
   460  0003                     stringtab:
   461  0003                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0003  1BFF               	btfsc	btemp+1,7
   465  0004  280D               	ljmp	stringcode
   466  0005  1383               	bcf	3,7
   467  0006  187F               	btfsc	btemp+1,0
   468  0007  1783               	bsf	3,7
   469  0008  0800               	movf	0,w
   470  0009  0A84               	incf	4,f
   471  000A  1903               	skipnz
   472  000B  0AFF               	incf	btemp+1,f
   473  000C  0008               	return
   474  000D                     stringcode:
   475  000D                     stringdir:
   476  000D  3000               	movlw	high stringdir
   477  000E  008A               	movwf	10
   478  000F  0804               	movf	4,w
   479  0010  0A84               	incf	4,f
   480  0011  0782               	addwf	2,f
   481  0012                     __stringbase:
   482  0012  3400               	retlw	0
   483  0013                     __end_of__stringtab:
   484  0013                     _dpowers:
   485  0013  3401               	retlw	1
   486  0014  3400               	retlw	0
   487  0015  340A               	retlw	10
   488  0016  3400               	retlw	0
   489  0017  3464               	retlw	100
   490  0018  3400               	retlw	0
   491  0019  34E8               	retlw	232
   492  001A  3403               	retlw	3
   493  001B  3410               	retlw	16
   494  001C  3427               	retlw	39
   495  001D                     __end_of_dpowers:
   496  0019                     _TXREG	set	25
   497  000C                     _PIR1bits	set	12
   498  000D                     _PIR2bits	set	13
   499  000B                     _INTCONbits	set	11
   500  0013                     _SSPBUF	set	19
   501  0014                     _SSPCON	set	20
   502  0018                     _RCSTAbits	set	24
   503  0008                     _PORTD	set	8
   504  0006                     _PORTB	set	6
   505  0006                     _PORTBbits	set	6
   506  0039                     _RC1	set	57
   507  0038                     _RC0	set	56
   508  0063                     _SSPIF	set	99
   509  005E                     _PEIE	set	94
   510  005F                     _GIE	set	95
   511  0091                     _SSPCON2bits	set	145
   512  0094                     _SSPSTAT	set	148
   513  0093                     _SSPADD	set	147
   514  0091                     _SSPCON2	set	145
   515  009A                     _SPBRGH	set	154
   516  0099                     _SPBRG	set	153
   517  0098                     _TXSTAbits	set	152
   518  0095                     _WPUBbits	set	149
   519  0081                     _OPTION_REGbits	set	129
   520  0089                     _TRISE	set	137
   521  0088                     _TRISD	set	136
   522  0086                     _TRISB	set	134
   523  0087                     _TRISCbits	set	135
   524  0085                     _TRISA	set	133
   525  008F                     _OSCCONbits	set	143
   526  0463                     _SSPIE	set	1123
   527  043C                     _TRISC4	set	1084
   528  043B                     _TRISC3	set	1083
   529  010C                     _EEDAT	set	268
   530  010D                     _EEADR	set	269
   531  018D                     _EECON2	set	397
   532  018C                     _EECON1bits	set	396
   533  0187                     _BAUDCTLbits	set	391
   534  0188                     _ANSEL	set	392
   535  0189                     _ANSELH	set	393
   536  001D                     STR_2:
   537  001D  3449               	retlw	73	;'I'
   538  001E  345F               	retlw	95	;'_'
   539  001F  344C               	retlw	76	;'L'
   540  0020  3452               	retlw	82	;'R'
   541  0021  345F               	retlw	95	;'_'
   542  0022  344D               	retlw	77	;'M'
   543  0023  345F               	retlw	95	;'_'
   544  0024  345F               	retlw	95	;'_'
   545  0025  3420               	retlw	32	;' '
   546  0026  3458               	retlw	88	;'X'
   547  0027  345F               	retlw	95	;'_'
   548  0028  345F               	retlw	95	;'_'
   549  0029  345F               	retlw	95	;'_'
   550  002A  3459               	retlw	89	;'Y'
   551  002B  345F               	retlw	95	;'_'
   552  002C  345F               	retlw	95	;'_'
   553  002D  345F               	retlw	95	;'_'
   554  002E  3400               	retlw	0
   555  002F                     STR_1:
   556  002F  3425               	retlw	37	;'%'
   557  0030  3464               	retlw	100	;'d'
   558  0031  3420               	retlw	32	;' '
   559  0032  3425               	retlw	37	;'%'
   560  0033  3463               	retlw	99	;'c'
   561  0034  3425               	retlw	37	;'%'
   562  0035  3463               	retlw	99	;'c'
   563  0036  3420               	retlw	32	;' '
   564  0037  3425               	retlw	37	;'%'
   565  0038  3464               	retlw	100	;'d'
   566  0039  340A               	retlw	10
   567  003A  3400               	retlw	0
   568                           
   569                           	psect	cinit
   570  07F3                     start_initialization:	
   571                           ; #config settings
   572                           
   573  07F3                     __initialization:
   574                           
   575                           ; Clear objects allocated to BANK0
   576  07F3  1383               	bcf	3,7	;select IRP bank0
   577  07F4  303C               	movlw	low __pbssBANK0
   578  07F5  0084               	movwf	4
   579  07F6  3052               	movlw	low (__pbssBANK0+22)
   580  07F7  120A  118A  22E8  120A  118A  	fcall	clear_ram0
   581  07FC                     end_of_initialization:	
   582                           ;End of C runtime variable initialization code
   583                           
   584  07FC                     __end_of__initialization:
   585  07FC  0183               	clrf	3
   586  07FD  120A  118A  2ED2   	ljmp	_main	;jump to C main() function
   587                           
   588                           	psect	bssBANK0
   589  003C                     __pbssBANK0:
   590  003C                     _M:
   591  003C                     	ds	1
   592  003D                     _R:
   593  003D                     	ds	1
   594  003E                     _L:
   595  003E                     	ds	1
   596  003F                     _s2:
   597  003F                     	ds	1
   598  0040                     _s1:
   599  0040                     	ds	1
   600  0041                     _a:
   601  0041                     	ds	1
   602  0042                     _volt:
   603  0042                     	ds	16
   604                           
   605                           	psect	clrtext
   606  02E8                     clear_ram0:	
   607                           ;	Called with FSR containing the base address, and
   608                           ;	W with the last address+1
   609                           
   610  02E8  0064               	clrwdt	;clear the watchdog before getting into this loop
   611  02E9                     clrloop0:
   612  02E9  0180               	clrf	0	;clear RAM location pointed to by FSR
   613  02EA  0A84               	incf	4,f	;increment pointer
   614  02EB  0604               	xorwf	4,w	;XOR with final address
   615  02EC  1903               	btfsc	3,2	;have we reached the end yet?
   616  02ED  3400               	retlw	0	;all done for this memory range, return
   617  02EE  0604               	xorwf	4,w	;XOR again to restore value
   618  02EF  2AE9               	goto	clrloop0	;do the next byte
   619                           
   620                           	psect	cstackCOMMON
   621  0070                     __pcstackCOMMON:
   622  0070                     ?_setup:
   623  0070                     ?_I2C_Master_Start:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ??_I2C_Master_Start:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_I2C_Master_Write:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_Master_Stop:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ??_I2C_Master_Stop:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_enviocadena:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_Lcd_Init:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Wait:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_I2C_Master_Wait:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_Lcd_Port:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_Lcd_Port:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_Lcd_Cmd:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Write_Char:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_enviocaracter:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_enviocaracter:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_Master_Read:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?___lwdiv:	
   675                           ; 2 bytes @ 0x0
   676                           
   677  0070                     ?___lldiv:	
   678                           ; 2 bytes @ 0x0
   679                           
   680  0070                     Lcd_Port@a:	
   681                           ; 4 bytes @ 0x0
   682                           
   683  0070                     enviocaracter@a:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     I2C_Master_Write@d:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     I2C_Master_Read@a:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0070                     ___lwdiv@divisor:	
   693                           ; 2 bytes @ 0x0
   694                           
   695  0070                     ___lldiv@divisor:	
   696                           ; 2 bytes @ 0x0
   697                           
   698                           
   699                           ; 4 bytes @ 0x0
   700  0070                     	ds	1
   701  0071                     ??_enviocadena:
   702  0071                     ??_Lcd_Cmd:	
   703                           ; 1 bytes @ 0x1
   704                           
   705  0071                     ??_Lcd_Write_Char:	
   706                           ; 1 bytes @ 0x1
   707                           
   708                           
   709                           ; 1 bytes @ 0x1
   710  0071                     	ds	1
   711  0072                     ??_I2C_Master_Write:
   712  0072                     ??_I2C_Master_Read:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     Lcd_Write_Char@a:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     enviocadena@cadena:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ___lwdiv@dividend:	
   722                           ; 1 bytes @ 0x2
   723                           
   724                           
   725                           ; 2 bytes @ 0x2
   726  0072                     	ds	1
   727  0073                     ?_Lcd_Write_String:
   728  0073                     Lcd_Cmd@a:	
   729                           ; 1 bytes @ 0x3
   730                           
   731  0073                     Lcd_Write_String@a:	
   732                           ; 1 bytes @ 0x3
   733                           
   734                           
   735                           ; 2 bytes @ 0x3
   736  0073                     	ds	1
   737  0074                     ?_Lcd_Set_Cursor:
   738  0074                     ??_Lcd_Init:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     ??___lwdiv:	
   742                           ; 1 bytes @ 0x4
   743                           
   744  0074                     Lcd_Set_Cursor@b:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     I2C_Master_Read@temp:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     ___lldiv@dividend:	
   751                           ; 2 bytes @ 0x4
   752                           
   753                           
   754                           ; 4 bytes @ 0x4
   755  0074                     	ds	1
   756  0075                     ??_Lcd_Set_Cursor:
   757  0075                     ??_Lcd_Write_String:	
   758                           ; 1 bytes @ 0x5
   759                           
   760  0075                     ___lwdiv@quotient:	
   761                           ; 1 bytes @ 0x5
   762                           
   763                           
   764                           ; 2 bytes @ 0x5
   765  0075                     	ds	1
   766  0076                     Lcd_Set_Cursor@a:
   767                           
   768                           ; 1 bytes @ 0x6
   769  0076                     	ds	1
   770  0077                     Lcd_Set_Cursor@temp:
   771  0077                     ___lwdiv@counter:	
   772                           ; 1 bytes @ 0x7
   773                           
   774                           
   775                           ; 1 bytes @ 0x7
   776  0077                     	ds	1
   777  0078                     ??___lldiv:
   778  0078                     ?___lwmod:	
   779                           ; 1 bytes @ 0x8
   780                           
   781  0078                     Lcd_Write_String@i:	
   782                           ; 2 bytes @ 0x8
   783                           
   784  0078                     ___lwmod@divisor:	
   785                           ; 2 bytes @ 0x8
   786                           
   787                           
   788                           ; 2 bytes @ 0x8
   789  0078                     	ds	1
   790  0079                     ___lldiv@quotient:
   791                           
   792                           ; 4 bytes @ 0x9
   793  0079                     	ds	1
   794  007A                     ___lwmod@dividend:
   795                           
   796                           ; 2 bytes @ 0xA
   797  007A                     	ds	2
   798  007C                     ??___lwmod:
   799                           
   800                           ; 1 bytes @ 0xC
   801  007C                     	ds	1
   802  007D                     ___lldiv@counter:
   803  007D                     ___lwmod@counter:	
   804                           ; 1 bytes @ 0xD
   805                           
   806                           
   807                           ; 1 bytes @ 0xD
   808  007D                     	ds	1
   809  007E                     ??_setup:
   810                           
   811                           	psect	cstackBANK0
   812  0020                     __pcstackBANK0:	
   813                           ; 1 bytes @ 0xE
   814                           
   815  0020                     ?_I2C_Master_Init:
   816  0020                     ?_sprintf:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0020                     sprintf@f:	
   820                           ; 2 bytes @ 0x0
   821                           
   822  0020                     I2C_Master_Init@c:	
   823                           ; 1 bytes @ 0x0
   824                           
   825                           
   826                           ; 4 bytes @ 0x0
   827  0020                     	ds	4
   828  0024                     ??_I2C_Master_Init:
   829                           
   830                           ; 1 bytes @ 0x4
   831  0024                     	ds	5
   832  0029                     ??_sprintf:
   833                           
   834                           ; 1 bytes @ 0x9
   835  0029                     	ds	3
   836  002C                     sprintf@flag:
   837                           
   838                           ; 1 bytes @ 0xC
   839  002C                     	ds	1
   840  002D                     sprintf@prec:
   841                           
   842                           ; 1 bytes @ 0xD
   843  002D                     	ds	1
   844  002E                     sprintf@ap:
   845                           
   846                           ; 1 bytes @ 0xE
   847  002E                     	ds	1
   848  002F                     sprintf@val:
   849                           
   850                           ; 2 bytes @ 0xF
   851  002F                     	ds	2
   852  0031                     sprintf@sp:
   853                           
   854                           ; 1 bytes @ 0x11
   855  0031                     	ds	1
   856  0032                     sprintf@c:
   857                           
   858                           ; 1 bytes @ 0x12
   859  0032                     	ds	1
   860  0033                     ??_main:
   861                           
   862                           ; 1 bytes @ 0x13
   863  0033                     	ds	9
   864                           
   865                           	psect	maintext
   866  06D2                     __pmaintext:	
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   869 ;;
   870 ;; *************** function _main *****************
   871 ;; Defined at:
   872 ;;		line 65 in file "proyecto1master.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : B00/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          0       9       0       0       0
   889 ;;      Totals:         0       9       0       0       0
   890 ;;Total ram usage:        9 bytes
   891 ;; Hardware stack levels required when called:    4
   892 ;; This function calls:
   893 ;;		_I2C_Master_Read
   894 ;;		_I2C_Master_Start
   895 ;;		_I2C_Master_Stop
   896 ;;		_I2C_Master_Write
   897 ;;		_Lcd_Set_Cursor
   898 ;;		_Lcd_Write_String
   899 ;;		_enviocadena
   900 ;;		_setup
   901 ;;		_sprintf
   902 ;; This function is called by:
   903 ;;		Startup code after reset
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _main
   909  06D2                     _main:
   910  06D2                     l1594:	
   911                           ;incstack = 0
   912                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   913                           
   914                           
   915                           ;proyecto1master.c: 66:     setup();
   916  06D2  120A  118A  2513  120A  118A  	fcall	_setup
   917  06D7  2EFC               	goto	l1606
   918  06D8                     l1596:
   919                           
   920                           ;proyecto1master.c: 71:                 L = 45;
   921  06D8  302D               	movlw	45
   922  06D9  00B3               	movwf	??_main
   923  06DA  0833               	movf	??_main,w
   924  06DB  00BE               	movwf	_L
   925                           
   926                           ;proyecto1master.c: 72:                 R = 45;
   927  06DC  302D               	movlw	45
   928  06DD  00B3               	movwf	??_main
   929  06DE  0833               	movf	??_main,w
   930  06DF  00BD               	movwf	_R
   931                           
   932                           ;proyecto1master.c: 73:                 break;
   933  06E0  2F14               	goto	l82
   934  06E1                     l1598:
   935                           
   936                           ;proyecto1master.c: 76:                 L = 94;
   937  06E1  305E               	movlw	94
   938  06E2  00B3               	movwf	??_main
   939  06E3  0833               	movf	??_main,w
   940  06E4  00BE               	movwf	_L
   941                           
   942                           ;proyecto1master.c: 77:                 R = 94;
   943  06E5  305E               	movlw	94
   944  06E6  00B3               	movwf	??_main
   945  06E7  0833               	movf	??_main,w
   946  06E8  00BD               	movwf	_R
   947                           
   948                           ;proyecto1master.c: 78:                 break;
   949  06E9  2F14               	goto	l82
   950  06EA                     l1600:
   951                           
   952                           ;proyecto1master.c: 81:                 L = 60;
   953  06EA  303C               	movlw	60
   954  06EB  00B3               	movwf	??_main
   955  06EC  0833               	movf	??_main,w
   956  06ED  00BE               	movwf	_L
   957                           
   958                           ;proyecto1master.c: 82:                 R = 60;
   959  06EE  303C               	movlw	60
   960  06EF  00B3               	movwf	??_main
   961  06F0  0833               	movf	??_main,w
   962  06F1  00BD               	movwf	_R
   963                           
   964                           ;proyecto1master.c: 83:                 break;
   965  06F2  2F14               	goto	l82
   966  06F3                     l1602:
   967                           
   968                           ;proyecto1master.c: 86:                 L = 62;
   969  06F3  303E               	movlw	62
   970  06F4  00B3               	movwf	??_main
   971  06F5  0833               	movf	??_main,w
   972  06F6  00BE               	movwf	_L
   973                           
   974                           ;proyecto1master.c: 87:                 R = 62;
   975  06F7  303E               	movlw	62
   976  06F8  00B3               	movwf	??_main
   977  06F9  0833               	movf	??_main,w
   978  06FA  00BD               	movwf	_R
   979                           
   980                           ;proyecto1master.c: 88:                 break;
   981  06FB  2F14               	goto	l82
   982  06FC                     l1606:
   983  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   984  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   985  06FE  083F               	movf	_s2,w
   986  06FF  00B3               	movwf	??_main
   987  0700  01B4               	clrf	??_main+1
   988                           
   989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   990                           ; Switch size 1, requested type "simple"
   991                           ; Number of cases is 1, Range of values is 0 to 0
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte            4     3 (average)
   995                           ; direct_byte           11     8 (fixed)
   996                           ; jumptable            260     6 (fixed)
   997                           ;	Chosen strategy is simple_byte
   998  0701  0834               	movf	??_main+1,w
   999  0702  3A00               	xorlw	0	; case 0
  1000  0703  1903               	skipnz
  1001  0704  2F06               	goto	l1692
  1002  0705  2F14               	goto	l82
  1003  0706                     l1692:
  1004                           
  1005                           ; Switch size 1, requested type "simple"
  1006                           ; Number of cases is 4, Range of values is 0 to 45
  1007                           ; switch strategies available:
  1008                           ; Name         Instructions Cycles
  1009                           ; simple_byte           13     7 (average)
  1010                           ; direct_byte          146     8 (fixed)
  1011                           ; jumptable            260     6 (fixed)
  1012                           ;	Chosen strategy is simple_byte
  1013  0706  0833               	movf	??_main,w
  1014  0707  3A00               	xorlw	0	; case 0
  1015  0708  1903               	skipnz
  1016  0709  2ED8               	goto	l1596
  1017  070A  3A05               	xorlw	5	; case 5
  1018  070B  1903               	skipnz
  1019  070C  2EEA               	goto	l1600
  1020  070D  3A2D               	xorlw	45	; case 40
  1021  070E  1903               	skipnz
  1022  070F  2EF3               	goto	l1602
  1023  0710  3A05               	xorlw	5	; case 45
  1024  0711  1903               	skipnz
  1025  0712  2EE1               	goto	l1598
  1026  0713  2F14               	goto	l82
  1027  0714                     l82:
  1028                           
  1029                           ;proyecto1master.c: 90:     if ((PORTBbits.RB0 == 1) && (s1 >= 4)){
  1030  0714  1C06               	btfss	6,0	;volatile
  1031  0715  2F17               	goto	u861
  1032  0716  2F18               	goto	u860
  1033  0717                     u861:
  1034  0717  2F20               	goto	l86
  1035  0718                     u860:
  1036  0718                     l1608:
  1037  0718  3004               	movlw	4
  1038  0719  0240               	subwf	_s1,w
  1039  071A  1C03               	skipc
  1040  071B  2F1D               	goto	u871
  1041  071C  2F1E               	goto	u870
  1042  071D                     u871:
  1043  071D  2F20               	goto	l86
  1044  071E                     u870:
  1045  071E                     l1610:
  1046                           
  1047                           ;proyecto1master.c: 91:             M = 0;
  1048  071E  01BC               	clrf	_M
  1049                           
  1050                           ;proyecto1master.c: 92:             }
  1051  071F  2F2C               	goto	l1614
  1052  0720                     l86:	
  1053                           ;proyecto1master.c: 93:     else if ((PORTBbits.RB0 == 0) || (s1 < 4)){
  1054                           
  1055  0720  1C06               	btfss	6,0	;volatile
  1056  0721  2F23               	goto	u881
  1057  0722  2F24               	goto	u880
  1058  0723                     u881:
  1059  0723  2F2A               	goto	l90
  1060  0724                     u880:
  1061  0724                     l1612:
  1062  0724  3004               	movlw	4
  1063  0725  0240               	subwf	_s1,w
  1064  0726  1803               	skipnc
  1065  0727  2F29               	goto	u891
  1066  0728  2F2A               	goto	u890
  1067  0729                     u891:
  1068  0729  2F2C               	goto	l1614
  1069  072A                     u890:
  1070  072A                     l90:
  1071                           
  1072                           ;proyecto1master.c: 94:             M = 1;}
  1073  072A  01BC               	clrf	_M
  1074  072B  0ABC               	incf	_M,f
  1075  072C                     l1614:
  1076                           
  1077                           ;proyecto1master.c: 102:         I2C_Master_Start();
  1078  072C  120A  118A  22F0  120A  118A  	fcall	_I2C_Master_Start
  1079                           
  1080                           ;proyecto1master.c: 103:         I2C_Master_Write(0x51);
  1081  0731  3051               	movlw	81
  1082  0732  00F0               	movwf	I2C_Master_Write@d
  1083  0733  3000               	movlw	0
  1084  0734  00F1               	movwf	I2C_Master_Write@d+1
  1085  0735  120A  118A  2302  120A  118A  	fcall	_I2C_Master_Write
  1086                           
  1087                           ;proyecto1master.c: 104:         s1 = I2C_Master_Read(0);
  1088  073A  3000               	movlw	0
  1089  073B  00F0               	movwf	I2C_Master_Read@a
  1090  073C  00F1               	movwf	I2C_Master_Read@a+1
  1091  073D  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Read
  1092  0742  0870               	movf	?_I2C_Master_Read,w
  1093  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0745  00B3               	movwf	??_main
  1096  0746  0833               	movf	??_main,w
  1097  0747  00C0               	movwf	_s1
  1098                           
  1099                           ;proyecto1master.c: 105:         I2C_Master_Stop();
  1100  0748  120A  118A  22F9  120A  118A  	fcall	_I2C_Master_Stop
  1101  074D                     l1616:
  1102                           
  1103                           ;proyecto1master.c: 106:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1104  074D  301A               	movlw	26
  1105  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1106  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0750  00B4               	movwf	??_main+1
  1108  0751  30F7               	movlw	247
  1109  0752  00B3               	movwf	??_main
  1110  0753                     u907:
  1111  0753  0BB3               	decfsz	??_main,f
  1112  0754  2F53               	goto	u907
  1113  0755  0BB4               	decfsz	??_main+1,f
  1114  0756  2F53               	goto	u907
  1115  0757  2F58               	nop2
  1116  0758                     l1618:
  1117                           
  1118                           ;proyecto1master.c: 108:         I2C_Master_Start();
  1119  0758  120A  118A  22F0  120A  118A  	fcall	_I2C_Master_Start
  1120  075D                     l1620:
  1121                           
  1122                           ;proyecto1master.c: 109:         I2C_Master_Write(0x60);
  1123  075D  3060               	movlw	96
  1124  075E  00F0               	movwf	I2C_Master_Write@d
  1125  075F  3000               	movlw	0
  1126  0760  00F1               	movwf	I2C_Master_Write@d+1
  1127  0761  120A  118A  2302  120A  118A  	fcall	_I2C_Master_Write
  1128  0766                     l1622:
  1129                           
  1130                           ;proyecto1master.c: 110:         I2C_Master_Write(M);
  1131  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0768  083C               	movf	_M,w
  1134  0769  00B3               	movwf	??_main
  1135  076A  01B4               	clrf	??_main+1
  1136  076B  0833               	movf	??_main,w
  1137  076C  00F0               	movwf	I2C_Master_Write@d
  1138  076D  0834               	movf	??_main+1,w
  1139  076E  00F1               	movwf	I2C_Master_Write@d+1
  1140  076F  120A  118A  2302  120A  118A  	fcall	_I2C_Master_Write
  1141  0774                     l1624:
  1142                           
  1143                           ;proyecto1master.c: 111:         I2C_Master_Stop();
  1144  0774  120A  118A  22F9  120A  118A  	fcall	_I2C_Master_Stop
  1145  0779                     l1626:
  1146                           
  1147                           ;proyecto1master.c: 112:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1148  0779  301A               	movlw	26
  1149  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1150  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1151  077C  00B4               	movwf	??_main+1
  1152  077D  30F7               	movlw	247
  1153  077E  00B3               	movwf	??_main
  1154  077F                     u917:
  1155  077F  0BB3               	decfsz	??_main,f
  1156  0780  2F7F               	goto	u917
  1157  0781  0BB4               	decfsz	??_main+1,f
  1158  0782  2F7F               	goto	u917
  1159  0783  2F84               	nop2
  1160                           
  1161                           ;proyecto1master.c: 114:         I2C_Master_Start();
  1162  0784  120A  118A  22F0  120A  118A  	fcall	_I2C_Master_Start
  1163                           
  1164                           ;proyecto1master.c: 115:         I2C_Master_Write(0x61);
  1165  0789  3061               	movlw	97
  1166  078A  00F0               	movwf	I2C_Master_Write@d
  1167  078B  3000               	movlw	0
  1168  078C  00F1               	movwf	I2C_Master_Write@d+1
  1169  078D  120A  118A  2302  120A  118A  	fcall	_I2C_Master_Write
  1170                           
  1171                           ;proyecto1master.c: 116:         s2 = I2C_Master_Read(0);
  1172  0792  3000               	movlw	0
  1173  0793  00F0               	movwf	I2C_Master_Read@a
  1174  0794  00F1               	movwf	I2C_Master_Read@a+1
  1175  0795  120A  118A  239C  120A  118A  	fcall	_I2C_Master_Read
  1176  079A  0870               	movf	?_I2C_Master_Read,w
  1177  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1178  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1179  079D  00B3               	movwf	??_main
  1180  079E  0833               	movf	??_main,w
  1181  079F  00BF               	movwf	_s2
  1182                           
  1183                           ;proyecto1master.c: 117:         I2C_Master_Stop();
  1184  07A0  120A  118A  22F9  120A  118A  	fcall	_I2C_Master_Stop
  1185  07A5                     l1628:
  1186                           
  1187                           ;proyecto1master.c: 118:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1188  07A5  301A               	movlw	26
  1189  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1190  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1191  07A8  00B4               	movwf	??_main+1
  1192  07A9  30F7               	movlw	247
  1193  07AA  00B3               	movwf	??_main
  1194  07AB                     u927:
  1195  07AB  0BB3               	decfsz	??_main,f
  1196  07AC  2FAB               	goto	u927
  1197  07AD  0BB4               	decfsz	??_main+1,f
  1198  07AE  2FAB               	goto	u927
  1199  07AF  2FB0               	nop2
  1200  07B0                     l1630:
  1201                           
  1202                           ;proyecto1master.c: 121:         sprintf(volt, "%d %c%c %d\n", s1, L, R, M);
  1203  07B0  301D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1204  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1205  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1206  07B3  00B3               	movwf	??_main
  1207  07B4  0833               	movf	??_main,w
  1208  07B5  00A0               	movwf	sprintf@f
  1209  07B6  0840               	movf	_s1,w
  1210  07B7  00B4               	movwf	??_main+1
  1211  07B8  01B5               	clrf	??_main+2
  1212  07B9  0834               	movf	??_main+1,w
  1213  07BA  00A1               	movwf	?_sprintf+1
  1214  07BB  0835               	movf	??_main+2,w
  1215  07BC  00A2               	movwf	?_sprintf+2
  1216  07BD  083E               	movf	_L,w
  1217  07BE  00B6               	movwf	??_main+3
  1218  07BF  01B7               	clrf	??_main+4
  1219  07C0  0836               	movf	??_main+3,w
  1220  07C1  00A3               	movwf	?_sprintf+3
  1221  07C2  0837               	movf	??_main+4,w
  1222  07C3  00A4               	movwf	?_sprintf+4
  1223  07C4  083D               	movf	_R,w
  1224  07C5  00B8               	movwf	??_main+5
  1225  07C6  01B9               	clrf	??_main+6
  1226  07C7  0838               	movf	??_main+5,w
  1227  07C8  00A5               	movwf	?_sprintf+5
  1228  07C9  0839               	movf	??_main+6,w
  1229  07CA  00A6               	movwf	?_sprintf+6
  1230  07CB  083C               	movf	_M,w
  1231  07CC  00BA               	movwf	??_main+7
  1232  07CD  01BB               	clrf	??_main+8
  1233  07CE  083A               	movf	??_main+7,w
  1234  07CF  00A7               	movwf	?_sprintf+7
  1235  07D0  083B               	movf	??_main+8,w
  1236  07D1  00A8               	movwf	?_sprintf+8
  1237  07D2  3042               	movlw	(low (_volt| 0))& (0+255)
  1238  07D3  120A  118A  25CF  120A  118A  	fcall	_sprintf
  1239  07D8                     l1632:
  1240                           
  1241                           ;proyecto1master.c: 122:         enviocadena(volt);
  1242  07D8  3042               	movlw	(low (_volt| 0))& (0+255)
  1243  07D9  120A  118A  2359  120A  118A  	fcall	_enviocadena
  1244  07DE                     l1634:
  1245                           
  1246                           ;proyecto1master.c: 123:         Lcd_Set_Cursor(2,1);
  1247  07DE  01F4               	clrf	Lcd_Set_Cursor@b
  1248  07DF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1249  07E0  3002               	movlw	2
  1250  07E1  120A  118A  2378  120A  118A  	fcall	_Lcd_Set_Cursor
  1251  07E6                     l1636:
  1252                           
  1253                           ;proyecto1master.c: 124:         Lcd_Write_String(volt);
  1254  07E6  3042               	movlw	(low (_volt| 0))& (0+255)
  1255  07E7  00F3               	movwf	Lcd_Write_String@a
  1256  07E8  3000               	movlw	0
  1257  07E9  00F4               	movwf	Lcd_Write_String@a+1
  1258  07EA  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_String
  1259  07EF  2EFC               	goto	l1606
  1260  07F0  120A  118A  2800   	ljmp	start
  1261  07F3                     __end_of_main:
  1262                           
  1263                           	psect	text1
  1264  05CF                     __ptext1:	
  1265 ;; *************** function _sprintf *****************
  1266 ;; Defined at:
  1267 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  sp              1    wreg     PTR unsigned char 
  1270 ;;		 -> volt(16), 
  1271 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1272 ;;		 -> STR_1(12), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1275 ;;		 -> volt(16), 
  1276 ;;  tmpval          4    0        struct .
  1277 ;;  val             2   15[BANK0 ] unsigned int 
  1278 ;;  cp              2    0        PTR const unsigned char 
  1279 ;;  len             2    0        unsigned int 
  1280 ;;  c               1   18[BANK0 ] unsigned char 
  1281 ;;  ap              1   14[BANK0 ] PTR void [1]
  1282 ;;		 -> ?_sprintf(2), 
  1283 ;;  prec            1   13[BANK0 ] char 
  1284 ;;  flag            1   12[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2    0[BANK0 ] int 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       9       0       0       0
  1295 ;;      Locals:         0       7       0       0       0
  1296 ;;      Temps:          0       3       0       0       0
  1297 ;;      Totals:         0      19       0       0       0
  1298 ;;Total ram usage:       19 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		___lwdiv
  1303 ;;		___lwmod
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _sprintf
  1311  05CF                     _sprintf:
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1315                           ;sprintf@sp stored from wreg
  1316  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1317  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1318  05D1  00B1               	movwf	sprintf@sp
  1319  05D2                     l1516:
  1320                           
  1321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1322  05D2  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1323  05D3  00A9               	movwf	??_sprintf
  1324  05D4  0829               	movf	??_sprintf,w
  1325  05D5  00AE               	movwf	sprintf@ap
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1328  05D6  2EBB               	goto	l1574
  1329  05D7                     l1518:
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1332  05D7  3025               	movlw	37
  1333  05D8  0632               	xorwf	sprintf@c,w
  1334  05D9  1903               	btfsc	3,2
  1335  05DA  2DDC               	goto	u771
  1336  05DB  2DDD               	goto	u770
  1337  05DC                     u771:
  1338  05DC  2DE9               	goto	l1524
  1339  05DD                     u770:
  1340  05DD                     l1520:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1343  05DD  0832               	movf	sprintf@c,w
  1344  05DE  00A9               	movwf	??_sprintf
  1345  05DF  0831               	movf	sprintf@sp,w
  1346  05E0  0084               	movwf	4
  1347  05E1  0829               	movf	??_sprintf,w
  1348  05E2  1383               	bcf	3,7	;select IRP bank0
  1349  05E3  0080               	movwf	0
  1350  05E4                     l1522:
  1351  05E4  3001               	movlw	1
  1352  05E5  00A9               	movwf	??_sprintf
  1353  05E6  0829               	movf	??_sprintf,w
  1354  05E7  07B1               	addwf	sprintf@sp,f
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1357  05E8  2EBB               	goto	l1574
  1358  05E9                     l1524:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1361  05E9  01AC               	clrf	sprintf@flag
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1364  05EA  2E02               	goto	l1534
  1365  05EB                     l1526:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1368  05EB  082E               	movf	sprintf@ap,w
  1369  05EC  0084               	movwf	4
  1370  05ED  1383               	bcf	3,7	;select IRP bank0
  1371  05EE  0800               	movf	0,w
  1372  05EF  00A9               	movwf	??_sprintf
  1373  05F0  0829               	movf	??_sprintf,w
  1374  05F1  00B2               	movwf	sprintf@c
  1375  05F2                     l1528:
  1376  05F2  3002               	movlw	2
  1377  05F3  00A9               	movwf	??_sprintf
  1378  05F4  0829               	movf	??_sprintf,w
  1379  05F5  07AE               	addwf	sprintf@ap,f
  1380  05F6                     l1530:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1383  05F6  0832               	movf	sprintf@c,w
  1384  05F7  00A9               	movwf	??_sprintf
  1385  05F8  0831               	movf	sprintf@sp,w
  1386  05F9  0084               	movwf	4
  1387  05FA  0829               	movf	??_sprintf,w
  1388  05FB  1383               	bcf	3,7	;select IRP bank0
  1389  05FC  0080               	movwf	0
  1390  05FD  3001               	movlw	1
  1391  05FE  00A9               	movwf	??_sprintf
  1392  05FF  0829               	movf	??_sprintf,w
  1393  0600  07B1               	addwf	sprintf@sp,f
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 836:    continue;
  1396  0601  2EBB               	goto	l1574
  1397  0602                     l1534:
  1398  0602  3001               	movlw	1
  1399  0603  07A0               	addwf	sprintf@f,f
  1400  0604  30FF               	movlw	-1
  1401  0605  0720               	addwf	sprintf@f,w
  1402  0606  0084               	movwf	4
  1403  0607  120A  118A  200D  120A  118A  	fcall	stringdir
  1404  060C  00B2               	movwf	sprintf@c
  1405  060D  00A9               	movwf	??_sprintf
  1406  060E  01AA               	clrf	??_sprintf+1
  1407                           
  1408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1409                           ; Switch size 1, requested type "simple"
  1410                           ; Number of cases is 1, Range of values is 0 to 0
  1411                           ; switch strategies available:
  1412                           ; Name         Instructions Cycles
  1413                           ; simple_byte            4     3 (average)
  1414                           ; direct_byte           11     8 (fixed)
  1415                           ; jumptable            260     6 (fixed)
  1416                           ;	Chosen strategy is simple_byte
  1417  060F  082A               	movf	??_sprintf+1,w
  1418  0610  3A00               	xorlw	0	; case 0
  1419  0611  1903               	skipnz
  1420  0612  2E14               	goto	l1694
  1421  0613  2DF6               	goto	l1530
  1422  0614                     l1694:
  1423                           
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 4, Range of values is 0 to 105
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte           13     7 (average)
  1429                           ; jumptable            260     6 (fixed)
  1430                           ;	Chosen strategy is simple_byte
  1431  0614  0829               	movf	??_sprintf,w
  1432  0615  3A00               	xorlw	0	; case 0
  1433  0616  1903               	skipnz
  1434  0617  2ECD               	goto	l1576
  1435  0618  3A63               	xorlw	99	; case 99
  1436  0619  1903               	skipnz
  1437  061A  2DEB               	goto	l1526
  1438  061B  3A07               	xorlw	7	; case 100
  1439  061C  1903               	skipnz
  1440  061D  2E22               	goto	l1536
  1441  061E  3A0D               	xorlw	13	; case 105
  1442  061F  1903               	skipnz
  1443  0620  2E22               	goto	l1536
  1444  0621  2DF6               	goto	l1530
  1445  0622                     l1536:
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1448  0622  082E               	movf	sprintf@ap,w
  1449  0623  0084               	movwf	4
  1450  0624  1383               	bcf	3,7	;select IRP bank0
  1451  0625  0800               	movf	0,w
  1452  0626  00AF               	movwf	sprintf@val
  1453  0627  0A84               	incf	4,f
  1454  0628  0800               	movf	0,w
  1455  0629  00B0               	movwf	sprintf@val+1
  1456  062A                     l1538:
  1457  062A  3002               	movlw	2
  1458  062B  00A9               	movwf	??_sprintf
  1459  062C  0829               	movf	??_sprintf,w
  1460  062D  07AE               	addwf	sprintf@ap,f
  1461  062E                     l1540:
  1462                           
  1463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1464  062E  1FB0               	btfss	sprintf@val+1,7
  1465  062F  2E31               	goto	u781
  1466  0630  2E32               	goto	u780
  1467  0631                     u781:
  1468  0631  2E3B               	goto	l1546
  1469  0632                     u780:
  1470  0632                     l1542:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1473  0632  3003               	movlw	3
  1474  0633  00A9               	movwf	??_sprintf
  1475  0634  0829               	movf	??_sprintf,w
  1476  0635  04AC               	iorwf	sprintf@flag,f
  1477  0636                     l1544:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1480  0636  09AF               	comf	sprintf@val,f
  1481  0637  09B0               	comf	sprintf@val+1,f
  1482  0638  0AAF               	incf	sprintf@val,f
  1483  0639  1903               	skipnz
  1484  063A  0AB0               	incf	sprintf@val+1,f
  1485  063B                     l1546:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1488  063B  01B2               	clrf	sprintf@c
  1489  063C  0AB2               	incf	sprintf@c,f
  1490  063D                     l1552:
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1493  063D  0832               	movf	sprintf@c,w
  1494  063E  00A9               	movwf	??_sprintf
  1495  063F  0729               	addwf	??_sprintf,w
  1496  0640  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1497  0641  0084               	movwf	4
  1498  0642  120A  118A  200D  120A  118A  	fcall	stringdir
  1499  0647  00AA               	movwf	??_sprintf+1
  1500  0648  120A  118A  200D  120A  118A  	fcall	stringdir
  1501  064D  00AB               	movwf	??_sprintf+2
  1502  064E  082B               	movf	??_sprintf+2,w
  1503  064F  0230               	subwf	sprintf@val+1,w
  1504  0650  1D03               	skipz
  1505  0651  2E54               	goto	u795
  1506  0652  082A               	movf	??_sprintf+1,w
  1507  0653  022F               	subwf	sprintf@val,w
  1508  0654                     u795:
  1509  0654  1803               	skipnc
  1510  0655  2E57               	goto	u791
  1511  0656  2E58               	goto	u790
  1512  0657                     u791:
  1513  0657  2E59               	goto	l1556
  1514  0658                     u790:
  1515  0658  2E63               	goto	l1558
  1516  0659                     l1556:
  1517  0659  3001               	movlw	1
  1518  065A  00A9               	movwf	??_sprintf
  1519  065B  0829               	movf	??_sprintf,w
  1520  065C  07B2               	addwf	sprintf@c,f
  1521  065D  3005               	movlw	5
  1522  065E  0632               	xorwf	sprintf@c,w
  1523  065F  1D03               	btfss	3,2
  1524  0660  2E62               	goto	u801
  1525  0661  2E63               	goto	u800
  1526  0662                     u801:
  1527  0662  2E3D               	goto	l1552
  1528  0663                     u800:
  1529  0663                     l1558:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1532  0663  082C               	movf	sprintf@flag,w
  1533  0664  3903               	andlw	3
  1534  0665  1903               	btfsc	3,2
  1535  0666  2E68               	goto	u811
  1536  0667  2E69               	goto	u810
  1537  0668                     u811:
  1538  0668  2E74               	goto	l1564
  1539  0669                     u810:
  1540  0669                     l1560:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1543  0669  302D               	movlw	45
  1544  066A  00A9               	movwf	??_sprintf
  1545  066B  0831               	movf	sprintf@sp,w
  1546  066C  0084               	movwf	4
  1547  066D  0829               	movf	??_sprintf,w
  1548  066E  1383               	bcf	3,7	;select IRP bank0
  1549  066F  0080               	movwf	0
  1550  0670                     l1562:
  1551  0670  3001               	movlw	1
  1552  0671  00A9               	movwf	??_sprintf
  1553  0672  0829               	movf	??_sprintf,w
  1554  0673  07B1               	addwf	sprintf@sp,f
  1555  0674                     l1564:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1558  0674  0832               	movf	sprintf@c,w
  1559  0675  00A9               	movwf	??_sprintf
  1560  0676  0829               	movf	??_sprintf,w
  1561  0677  00AD               	movwf	sprintf@prec
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1564  0678  2EB2               	goto	l1572
  1565  0679                     l1566:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1568  0679  300A               	movlw	10
  1569  067A  00F8               	movwf	___lwmod@divisor
  1570  067B  3000               	movlw	0
  1571  067C  00F9               	movwf	___lwmod@divisor+1
  1572  067D  082D               	movf	sprintf@prec,w
  1573  067E  00A9               	movwf	??_sprintf
  1574  067F  0729               	addwf	??_sprintf,w
  1575  0680  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1576  0681  0084               	movwf	4
  1577  0682  120A  118A  200D  120A  118A  	fcall	stringdir
  1578  0687  00F0               	movwf	___lwdiv@divisor
  1579  0688  120A  118A  200D  120A  118A  	fcall	stringdir
  1580  068D  00F1               	movwf	___lwdiv@divisor+1
  1581  068E  0830               	movf	sprintf@val+1,w
  1582  068F  00F3               	movwf	___lwdiv@dividend+1
  1583  0690  082F               	movf	sprintf@val,w
  1584  0691  00F2               	movwf	___lwdiv@dividend
  1585  0692  120A  118A  247E  120A  118A  	fcall	___lwdiv
  1586  0697  0871               	movf	?___lwdiv+1,w
  1587  0698  00FB               	movwf	___lwmod@dividend+1
  1588  0699  0870               	movf	?___lwdiv,w
  1589  069A  00FA               	movwf	___lwmod@dividend
  1590  069B  120A  118A  2402  120A  118A  	fcall	___lwmod
  1591  06A0  0878               	movf	?___lwmod,w
  1592  06A1  3E30               	addlw	48
  1593  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1594  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1595  06A4  00AA               	movwf	??_sprintf+1
  1596  06A5  082A               	movf	??_sprintf+1,w
  1597  06A6  00B2               	movwf	sprintf@c
  1598  06A7                     l1568:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1601  06A7  0832               	movf	sprintf@c,w
  1602  06A8  00A9               	movwf	??_sprintf
  1603  06A9  0831               	movf	sprintf@sp,w
  1604  06AA  0084               	movwf	4
  1605  06AB  0829               	movf	??_sprintf,w
  1606  06AC  1383               	bcf	3,7	;select IRP bank0
  1607  06AD  0080               	movwf	0
  1608  06AE                     l1570:
  1609  06AE  3001               	movlw	1
  1610  06AF  00A9               	movwf	??_sprintf
  1611  06B0  0829               	movf	??_sprintf,w
  1612  06B1  07B1               	addwf	sprintf@sp,f
  1613  06B2                     l1572:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1616  06B2  30FF               	movlw	255
  1617  06B3  00A9               	movwf	??_sprintf
  1618  06B4  0829               	movf	??_sprintf,w
  1619  06B5  07AD               	addwf	sprintf@prec,f
  1620  06B6  0A2D               	incf	sprintf@prec,w
  1621  06B7  1D03               	btfss	3,2
  1622  06B8  2EBA               	goto	u821
  1623  06B9  2EBB               	goto	u820
  1624  06BA                     u821:
  1625  06BA  2E79               	goto	l1566
  1626  06BB                     u820:
  1627  06BB                     l1574:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1630  06BB  3001               	movlw	1
  1631  06BC  07A0               	addwf	sprintf@f,f
  1632  06BD  30FF               	movlw	-1
  1633  06BE  0720               	addwf	sprintf@f,w
  1634  06BF  0084               	movwf	4
  1635  06C0  120A  118A  200D  120A  118A  	fcall	stringdir
  1636  06C5  00A9               	movwf	??_sprintf
  1637  06C6  0829               	movf	??_sprintf,w
  1638  06C7  00B2               	movwf	sprintf@c
  1639  06C8  0832               	movf	sprintf@c,w
  1640  06C9  1D03               	btfss	3,2
  1641  06CA  2ECC               	goto	u831
  1642  06CB  2ECD               	goto	u830
  1643  06CC                     u831:
  1644  06CC  2DD7               	goto	l1518
  1645  06CD                     u830:
  1646  06CD                     l1576:
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1649  06CD  0831               	movf	sprintf@sp,w
  1650  06CE  0084               	movwf	4
  1651  06CF  1383               	bcf	3,7	;select IRP bank0
  1652  06D0  0180               	clrf	0
  1653  06D1                     l346:
  1654  06D1  0008               	return
  1655  06D2                     __end_of_sprintf:
  1656                           
  1657                           	psect	text2
  1658  0402                     __ptext2:	
  1659 ;; *************** function ___lwmod *****************
  1660 ;; Defined at:
  1661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  divisor         2    8[COMMON] unsigned int 
  1664 ;;  dividend        2   10[COMMON] unsigned int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  counter         1   13[COMMON] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2    8[COMMON] unsigned int 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         4       0       0       0       0
  1677 ;;      Locals:         1       0       0       0       0
  1678 ;;      Temps:          1       0       0       0       0
  1679 ;;      Totals:         6       0       0       0       0
  1680 ;;Total ram usage:        6 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_sprintf
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function ___lwmod
  1691  0402                     ___lwmod:
  1692  0402                     l1412:	
  1693                           ;incstack = 0
  1694                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1695                           
  1696  0402  0878               	movf	___lwmod@divisor,w
  1697  0403  0479               	iorwf	___lwmod@divisor+1,w
  1698  0404  1903               	btfsc	3,2
  1699  0405  2C07               	goto	u701
  1700  0406  2C08               	goto	u700
  1701  0407                     u701:
  1702  0407  2C37               	goto	l1430
  1703  0408                     u700:
  1704  0408                     l1414:
  1705  0408  01FD               	clrf	___lwmod@counter
  1706  0409  0AFD               	incf	___lwmod@counter,f
  1707  040A  2C16               	goto	l1420
  1708  040B                     l1416:
  1709  040B  3001               	movlw	1
  1710  040C                     u715:
  1711  040C  1003               	clrc
  1712  040D  0DF8               	rlf	___lwmod@divisor,f
  1713  040E  0DF9               	rlf	___lwmod@divisor+1,f
  1714  040F  3EFF               	addlw	-1
  1715  0410  1D03               	skipz
  1716  0411  2C0C               	goto	u715
  1717  0412                     l1418:
  1718  0412  3001               	movlw	1
  1719  0413  00FC               	movwf	??___lwmod
  1720  0414  087C               	movf	??___lwmod,w
  1721  0415  07FD               	addwf	___lwmod@counter,f
  1722  0416                     l1420:
  1723  0416  1FF9               	btfss	___lwmod@divisor+1,7
  1724  0417  2C19               	goto	u721
  1725  0418  2C1A               	goto	u720
  1726  0419                     u721:
  1727  0419  2C0B               	goto	l1416
  1728  041A                     u720:
  1729  041A                     l1422:
  1730  041A  0879               	movf	___lwmod@divisor+1,w
  1731  041B  027B               	subwf	___lwmod@dividend+1,w
  1732  041C  1D03               	skipz
  1733  041D  2C20               	goto	u735
  1734  041E  0878               	movf	___lwmod@divisor,w
  1735  041F  027A               	subwf	___lwmod@dividend,w
  1736  0420                     u735:
  1737  0420  1C03               	skipc
  1738  0421  2C23               	goto	u731
  1739  0422  2C24               	goto	u730
  1740  0423                     u731:
  1741  0423  2C2A               	goto	l1426
  1742  0424                     u730:
  1743  0424                     l1424:
  1744  0424  0878               	movf	___lwmod@divisor,w
  1745  0425  02FA               	subwf	___lwmod@dividend,f
  1746  0426  0879               	movf	___lwmod@divisor+1,w
  1747  0427  1C03               	skipc
  1748  0428  03FB               	decf	___lwmod@dividend+1,f
  1749  0429  02FB               	subwf	___lwmod@dividend+1,f
  1750  042A                     l1426:
  1751  042A  3001               	movlw	1
  1752  042B                     u745:
  1753  042B  1003               	clrc
  1754  042C  0CF9               	rrf	___lwmod@divisor+1,f
  1755  042D  0CF8               	rrf	___lwmod@divisor,f
  1756  042E  3EFF               	addlw	-1
  1757  042F  1D03               	skipz
  1758  0430  2C2B               	goto	u745
  1759  0431                     l1428:
  1760  0431  3001               	movlw	1
  1761  0432  02FD               	subwf	___lwmod@counter,f
  1762  0433  1D03               	btfss	3,2
  1763  0434  2C36               	goto	u751
  1764  0435  2C37               	goto	u750
  1765  0436                     u751:
  1766  0436  2C1A               	goto	l1422
  1767  0437                     u750:
  1768  0437                     l1430:
  1769  0437  087B               	movf	___lwmod@dividend+1,w
  1770  0438  00F9               	movwf	?___lwmod+1
  1771  0439  087A               	movf	___lwmod@dividend,w
  1772  043A  00F8               	movwf	?___lwmod
  1773  043B                     l632:
  1774  043B  0008               	return
  1775  043C                     __end_of___lwmod:
  1776                           
  1777                           	psect	text3
  1778  047E                     __ptext3:	
  1779 ;; *************** function ___lwdiv *****************
  1780 ;; Defined at:
  1781 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  divisor         2    0[COMMON] unsigned int 
  1784 ;;  dividend        2    2[COMMON] unsigned int 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  quotient        2    5[COMMON] unsigned int 
  1787 ;;  counter         1    7[COMMON] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2    0[COMMON] unsigned int 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         4       0       0       0       0
  1798 ;;      Locals:         3       0       0       0       0
  1799 ;;      Temps:          1       0       0       0       0
  1800 ;;      Totals:         8       0       0       0       0
  1801 ;;Total ram usage:        8 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_sprintf
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function ___lwdiv
  1812  047E                     ___lwdiv:
  1813  047E                     l1386:	
  1814                           ;incstack = 0
  1815                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1816                           
  1817  047E  01F5               	clrf	___lwdiv@quotient
  1818  047F  01F6               	clrf	___lwdiv@quotient+1
  1819  0480                     l1388:
  1820  0480  0870               	movf	___lwdiv@divisor,w
  1821  0481  0471               	iorwf	___lwdiv@divisor+1,w
  1822  0482  1903               	btfsc	3,2
  1823  0483  2C85               	goto	u631
  1824  0484  2C86               	goto	u630
  1825  0485                     u631:
  1826  0485  2CBD               	goto	l1408
  1827  0486                     u630:
  1828  0486                     l1390:
  1829  0486  01F7               	clrf	___lwdiv@counter
  1830  0487  0AF7               	incf	___lwdiv@counter,f
  1831  0488  2C94               	goto	l1396
  1832  0489                     l1392:
  1833  0489  3001               	movlw	1
  1834  048A                     u645:
  1835  048A  1003               	clrc
  1836  048B  0DF0               	rlf	___lwdiv@divisor,f
  1837  048C  0DF1               	rlf	___lwdiv@divisor+1,f
  1838  048D  3EFF               	addlw	-1
  1839  048E  1D03               	skipz
  1840  048F  2C8A               	goto	u645
  1841  0490                     l1394:
  1842  0490  3001               	movlw	1
  1843  0491  00F4               	movwf	??___lwdiv
  1844  0492  0874               	movf	??___lwdiv,w
  1845  0493  07F7               	addwf	___lwdiv@counter,f
  1846  0494                     l1396:
  1847  0494  1FF1               	btfss	___lwdiv@divisor+1,7
  1848  0495  2C97               	goto	u651
  1849  0496  2C98               	goto	u650
  1850  0497                     u651:
  1851  0497  2C89               	goto	l1392
  1852  0498                     u650:
  1853  0498                     l1398:
  1854  0498  3001               	movlw	1
  1855  0499                     u665:
  1856  0499  1003               	clrc
  1857  049A  0DF5               	rlf	___lwdiv@quotient,f
  1858  049B  0DF6               	rlf	___lwdiv@quotient+1,f
  1859  049C  3EFF               	addlw	-1
  1860  049D  1D03               	skipz
  1861  049E  2C99               	goto	u665
  1862  049F  0871               	movf	___lwdiv@divisor+1,w
  1863  04A0  0273               	subwf	___lwdiv@dividend+1,w
  1864  04A1  1D03               	skipz
  1865  04A2  2CA5               	goto	u675
  1866  04A3  0870               	movf	___lwdiv@divisor,w
  1867  04A4  0272               	subwf	___lwdiv@dividend,w
  1868  04A5                     u675:
  1869  04A5  1C03               	skipc
  1870  04A6  2CA8               	goto	u671
  1871  04A7  2CA9               	goto	u670
  1872  04A8                     u671:
  1873  04A8  2CB0               	goto	l1404
  1874  04A9                     u670:
  1875  04A9                     l1400:
  1876  04A9  0870               	movf	___lwdiv@divisor,w
  1877  04AA  02F2               	subwf	___lwdiv@dividend,f
  1878  04AB  0871               	movf	___lwdiv@divisor+1,w
  1879  04AC  1C03               	skipc
  1880  04AD  03F3               	decf	___lwdiv@dividend+1,f
  1881  04AE  02F3               	subwf	___lwdiv@dividend+1,f
  1882  04AF                     l1402:
  1883  04AF  1475               	bsf	___lwdiv@quotient,0
  1884  04B0                     l1404:
  1885  04B0  3001               	movlw	1
  1886  04B1                     u685:
  1887  04B1  1003               	clrc
  1888  04B2  0CF1               	rrf	___lwdiv@divisor+1,f
  1889  04B3  0CF0               	rrf	___lwdiv@divisor,f
  1890  04B4  3EFF               	addlw	-1
  1891  04B5  1D03               	skipz
  1892  04B6  2CB1               	goto	u685
  1893  04B7                     l1406:
  1894  04B7  3001               	movlw	1
  1895  04B8  02F7               	subwf	___lwdiv@counter,f
  1896  04B9  1D03               	btfss	3,2
  1897  04BA  2CBC               	goto	u691
  1898  04BB  2CBD               	goto	u690
  1899  04BC                     u691:
  1900  04BC  2C98               	goto	l1398
  1901  04BD                     u690:
  1902  04BD                     l1408:
  1903  04BD  0876               	movf	___lwdiv@quotient+1,w
  1904  04BE  00F1               	movwf	?___lwdiv+1
  1905  04BF  0875               	movf	___lwdiv@quotient,w
  1906  04C0  00F0               	movwf	?___lwdiv
  1907  04C1                     l622:
  1908  04C1  0008               	return
  1909  04C2                     __end_of___lwdiv:
  1910                           
  1911                           	psect	text4
  1912  0513                     __ptext4:	
  1913 ;; *************** function _setup *****************
  1914 ;; Defined at:
  1915 ;;		line 130 in file "proyecto1master.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1929 ;;      Params:         0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    3
  1936 ;; This function calls:
  1937 ;;		_I2C_Master_Init
  1938 ;;		_Lcd_Init
  1939 ;;		_Lcd_Set_Cursor
  1940 ;;		_Lcd_Write_String
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function _setup
  1948  0513                     _setup:
  1949  0513                     l1434:	
  1950                           ;incstack = 0
  1951                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1952                           
  1953                           
  1954                           ;proyecto1master.c: 133:     OSCCONbits.IRCF = 7;
  1955  0513  3070               	movlw	112
  1956  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1958  0516  048F               	iorwf	15,f	;volatile
  1959  0517                     l1436:
  1960                           
  1961                           ;proyecto1master.c: 134:     OSCCONbits.SCS = 1;
  1962  0517  140F               	bsf	15,0	;volatile
  1963  0518                     l1438:
  1964                           
  1965                           ;proyecto1master.c: 136:     ANSELH = 0;
  1966  0518  1683               	bsf	3,5	;RP0=1, select bank3
  1967  0519  1703               	bsf	3,6	;RP1=1, select bank3
  1968  051A  0189               	clrf	9	;volatile
  1969  051B                     l1440:
  1970                           
  1971                           ;proyecto1master.c: 137:     ANSEL = 0;
  1972  051B  0188               	clrf	8	;volatile
  1973  051C                     l1442:
  1974                           
  1975                           ;proyecto1master.c: 138:     TRISA = 0;
  1976  051C  1683               	bsf	3,5	;RP0=1, select bank1
  1977  051D  1303               	bcf	3,6	;RP1=0, select bank1
  1978  051E  0185               	clrf	5	;volatile
  1979  051F                     l1444:
  1980                           
  1981                           ;proyecto1master.c: 140:     TRISCbits.TRISC0 = 0;
  1982  051F  1007               	bcf	7,0	;volatile
  1983  0520                     l1446:
  1984                           
  1985                           ;proyecto1master.c: 141:     TRISCbits.TRISC1 = 0;
  1986  0520  1087               	bcf	7,1	;volatile
  1987  0521                     l1448:
  1988                           
  1989                           ;proyecto1master.c: 142:     TRISB = 1;
  1990  0521  3001               	movlw	1
  1991  0522  0086               	movwf	6	;volatile
  1992  0523                     l1450:
  1993                           
  1994                           ;proyecto1master.c: 143:     PORTB = 0;
  1995  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0525  0186               	clrf	6	;volatile
  1998  0526                     l1452:
  1999                           
  2000                           ;proyecto1master.c: 144:     TRISD = 0;
  2001  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0528  0188               	clrf	8	;volatile
  2004  0529                     l1454:
  2005                           
  2006                           ;proyecto1master.c: 145:     TRISE = 0;
  2007  0529  0189               	clrf	9	;volatile
  2008  052A                     l1456:
  2009                           
  2010                           ;proyecto1master.c: 146:     PORTD = 0;
  2011  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2012  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2013  052C  0188               	clrf	8	;volatile
  2014  052D                     l1458:
  2015                           
  2016                           ;proyecto1master.c: 148:     OPTION_REGbits.nRBPU = 0;
  2017  052D  1683               	bsf	3,5	;RP0=1, select bank1
  2018  052E  1303               	bcf	3,6	;RP1=0, select bank1
  2019  052F  1381               	bcf	1,7	;volatile
  2020  0530                     l1460:
  2021                           
  2022                           ;proyecto1master.c: 149:     WPUBbits.WPUB0 = 1;
  2023  0530  1415               	bsf	21,0	;volatile
  2024  0531                     l1462:
  2025                           
  2026                           ;proyecto1master.c: 151:     TXSTAbits.SYNC = 0;
  2027  0531  1218               	bcf	24,4	;volatile
  2028  0532                     l1464:
  2029                           
  2030                           ;proyecto1master.c: 152:     TXSTAbits.BRGH = 1;
  2031  0532  1518               	bsf	24,2	;volatile
  2032  0533                     l1466:
  2033                           
  2034                           ;proyecto1master.c: 154:     BAUDCTLbits.BRG16 = 1;
  2035  0533  1683               	bsf	3,5	;RP0=1, select bank3
  2036  0534  1703               	bsf	3,6	;RP1=1, select bank3
  2037  0535  1587               	bsf	7,3	;volatile
  2038  0536                     l1468:
  2039                           
  2040                           ;proyecto1master.c: 156:     SPBRG = 207;
  2041  0536  30CF               	movlw	207
  2042  0537  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0538  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0539  0099               	movwf	25	;volatile
  2045  053A                     l1470:
  2046                           
  2047                           ;proyecto1master.c: 157:     SPBRGH = 0;
  2048  053A  019A               	clrf	26	;volatile
  2049  053B                     l1472:
  2050                           
  2051                           ;proyecto1master.c: 159:     RCSTAbits.SPEN = 1;
  2052  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2053  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2054  053D  1798               	bsf	24,7	;volatile
  2055  053E                     l1474:
  2056                           
  2057                           ;proyecto1master.c: 160:     RCSTAbits.RX9 = 0;
  2058  053E  1318               	bcf	24,6	;volatile
  2059  053F                     l1476:
  2060                           
  2061                           ;proyecto1master.c: 161:     RCSTAbits.CREN = 1;
  2062  053F  1618               	bsf	24,4	;volatile
  2063  0540                     l1478:
  2064                           
  2065                           ;proyecto1master.c: 162:     TXSTAbits.TXEN = 1;
  2066  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0541  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0542  1698               	bsf	24,5	;volatile
  2069  0543                     l1480:
  2070                           
  2071                           ;proyecto1master.c: 164:     Lcd_Init();
  2072  0543  120A  118A  24C2  120A  118A  	fcall	_Lcd_Init
  2073  0548                     l1482:
  2074                           
  2075                           ;proyecto1master.c: 165:     Lcd_Set_Cursor(1,1);
  2076  0548  01F4               	clrf	Lcd_Set_Cursor@b
  2077  0549  0AF4               	incf	Lcd_Set_Cursor@b,f
  2078  054A  3001               	movlw	1
  2079  054B  120A  118A  2378  120A  118A  	fcall	_Lcd_Set_Cursor
  2080  0550                     l1484:
  2081                           
  2082                           ;proyecto1master.c: 166:     Lcd_Write_String("I_LR_M__ X___Y___");
  2083  0550  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2084  0551  00F3               	movwf	Lcd_Write_String@a
  2085  0552  3080               	movlw	128
  2086  0553  00F4               	movwf	Lcd_Write_String@a+1
  2087  0554  120A  118A  243C  120A  118A  	fcall	_Lcd_Write_String
  2088  0559                     l1486:
  2089                           
  2090                           ;proyecto1master.c: 167:     I2C_Master_Init(100000);
  2091  0559  3000               	movlw	0
  2092  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2093  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2094  055C  00A3               	movwf	I2C_Master_Init@c+3
  2095  055D  3001               	movlw	1
  2096  055E  00A2               	movwf	I2C_Master_Init@c+2
  2097  055F  3086               	movlw	134
  2098  0560  00A1               	movwf	I2C_Master_Init@c+1
  2099  0561  30A0               	movlw	160
  2100  0562  00A0               	movwf	I2C_Master_Init@c
  2101  0563  120A  118A  23CA  120A  118A  	fcall	_I2C_Master_Init
  2102  0568                     l96:
  2103  0568  0008               	return
  2104  0569                     __end_of_setup:
  2105                           
  2106                           	psect	text5
  2107  043C                     __ptext5:	
  2108 ;; *************** function _Lcd_Write_String *****************
  2109 ;; Defined at:
  2110 ;;		line 66 in file "LCD8bits.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  a               2    3[COMMON] PTR unsigned char 
  2113 ;;		 -> STR_2(18), volt(16), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  i               2    8[COMMON] int 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         2       0       0       0       0
  2126 ;;      Locals:         2       0       0       0       0
  2127 ;;      Temps:          3       0       0       0       0
  2128 ;;      Totals:         7       0       0       0       0
  2129 ;;Total ram usage:        7 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    2
  2132 ;; This function calls:
  2133 ;;		_Lcd_Write_Char
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;;		_setup
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _Lcd_Write_String
  2142  043C                     _Lcd_Write_String:
  2143  043C                     l1348:	
  2144                           ;incstack = 0
  2145                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2146                           
  2147                           
  2148                           ;LCD8bits.c: 67:     int i;;LCD8bits.c: 68:     for (i = 0; a[i] != '\0'; i++)
  2149  043C  01F8               	clrf	Lcd_Write_String@i
  2150  043D  01F9               	clrf	Lcd_Write_String@i+1
  2151  043E  2C61               	goto	l1354
  2152  043F                     l1350:
  2153                           
  2154                           ;LCD8bits.c: 69:         Lcd_Write_Char(a[i]);
  2155  043F  0878               	movf	Lcd_Write_String@i,w
  2156  0440  0773               	addwf	Lcd_Write_String@a,w
  2157  0441  00F6               	movwf	??_Lcd_Write_String+1
  2158  0442  0874               	movf	Lcd_Write_String@a+1,w
  2159  0443  00F5               	movwf	??_Lcd_Write_String
  2160  0444  1803               	skipnc
  2161  0445  0AF5               	incf	??_Lcd_Write_String,f
  2162  0446  1FF8               	btfss	Lcd_Write_String@i,7
  2163  0447  2C49               	goto	u550
  2164  0448  03F5               	decf	??_Lcd_Write_String,f
  2165  0449                     u550:
  2166  0449  0875               	movf	??_Lcd_Write_String,w
  2167  044A  00F7               	movwf	??_Lcd_Write_String+2
  2168  044B  0877               	movf	??_Lcd_Write_String+2,w
  2169  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2170  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2171  044E  00FF               	movwf	btemp+1
  2172  044F  0876               	movf	??_Lcd_Write_String+1,w
  2173  0450  0084               	movwf	4
  2174  0451  120A  118A  2003  120A  118A  	fcall	stringtab
  2175  0456  120A  118A  2329  120A  118A  	fcall	_Lcd_Write_Char
  2176  045B                     l1352:
  2177  045B  3001               	movlw	1
  2178  045C  07F8               	addwf	Lcd_Write_String@i,f
  2179  045D  1803               	skipnc
  2180  045E  0AF9               	incf	Lcd_Write_String@i+1,f
  2181  045F  3000               	movlw	0
  2182  0460  07F9               	addwf	Lcd_Write_String@i+1,f
  2183  0461                     l1354:
  2184  0461  0878               	movf	Lcd_Write_String@i,w
  2185  0462  0773               	addwf	Lcd_Write_String@a,w
  2186  0463  00F6               	movwf	??_Lcd_Write_String+1
  2187  0464  0874               	movf	Lcd_Write_String@a+1,w
  2188  0465  00F5               	movwf	??_Lcd_Write_String
  2189  0466  1803               	skipnc
  2190  0467  0AF5               	incf	??_Lcd_Write_String,f
  2191  0468  1FF8               	btfss	Lcd_Write_String@i,7
  2192  0469  2C6B               	goto	u560
  2193  046A  03F5               	decf	??_Lcd_Write_String,f
  2194  046B                     u560:
  2195  046B  0875               	movf	??_Lcd_Write_String,w
  2196  046C  00F7               	movwf	??_Lcd_Write_String+2
  2197  046D  0877               	movf	??_Lcd_Write_String+2,w
  2198  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2199  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0470  00FF               	movwf	btemp+1
  2201  0471  0876               	movf	??_Lcd_Write_String+1,w
  2202  0472  0084               	movwf	4
  2203  0473  120A  118A  2003  120A  118A  	fcall	stringtab
  2204  0478  3A00               	xorlw	0
  2205  0479  1D03               	skipz
  2206  047A  2C7C               	goto	u571
  2207  047B  2C7D               	goto	u570
  2208  047C                     u571:
  2209  047C  2C3F               	goto	l1350
  2210  047D                     u570:
  2211  047D                     l188:
  2212  047D  0008               	return
  2213  047E                     __end_of_Lcd_Write_String:
  2214                           
  2215                           	psect	text6
  2216  0329                     __ptext6:	
  2217 ;; *************** function _Lcd_Write_Char *****************
  2218 ;; Defined at:
  2219 ;;		line 58 in file "LCD8bits.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  a               1    wreg     unsigned char 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  a               1    2[COMMON] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, pclath, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         0       0       0       0       0
  2234 ;;      Locals:         1       0       0       0       0
  2235 ;;      Temps:          1       0       0       0       0
  2236 ;;      Totals:         2       0       0       0       0
  2237 ;;Total ram usage:        2 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    1
  2240 ;; This function calls:
  2241 ;;		_Lcd_Port
  2242 ;; This function is called by:
  2243 ;;		_Lcd_Write_String
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _Lcd_Write_Char
  2249  0329                     _Lcd_Write_Char:
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2253                           ;Lcd_Write_Char@a stored from wreg
  2254  0329  00F2               	movwf	Lcd_Write_Char@a
  2255  032A                     l1302:
  2256                           
  2257                           ;LCD8bits.c: 59:     RC0 = 1;
  2258  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2259  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2260  032C  1407               	bsf	7,0	;volatile
  2261  032D                     l1304:
  2262                           
  2263                           ;LCD8bits.c: 60:     Lcd_Port(a);
  2264  032D  0872               	movf	Lcd_Write_Char@a,w
  2265  032E  120A  118A  22E2  120A  118A  	fcall	_Lcd_Port
  2266  0333                     l1306:
  2267                           
  2268                           ;LCD8bits.c: 61:     RC1 = 1;
  2269  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2270  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2271  0335  1487               	bsf	7,1	;volatile
  2272  0336                     l1308:
  2273                           
  2274                           ;LCD8bits.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2275  0336  301A               	movlw	26
  2276  0337  00F1               	movwf	??_Lcd_Write_Char
  2277  0338                     u937:
  2278  0338  0BF1               	decfsz	??_Lcd_Write_Char,f
  2279  0339  2B38               	goto	u937
  2280  033A  0000               	nop
  2281  033B                     l1310:
  2282                           
  2283                           ;LCD8bits.c: 63:     RC1 = 0;
  2284  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2285  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2286  033D  1087               	bcf	7,1	;volatile
  2287  033E                     l182:
  2288  033E  0008               	return
  2289  033F                     __end_of_Lcd_Write_Char:
  2290                           
  2291                           	psect	text7
  2292  0378                     __ptext7:	
  2293 ;; *************** function _Lcd_Set_Cursor *****************
  2294 ;; Defined at:
  2295 ;;		line 30 in file "LCD8bits.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  a               1    wreg     unsigned char 
  2298 ;;  b               1    4[COMMON] unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  a               1    6[COMMON] unsigned char 
  2301 ;;  temp            1    7[COMMON] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         1       0       0       0       0
  2312 ;;      Locals:         2       0       0       0       0
  2313 ;;      Temps:          1       0       0       0       0
  2314 ;;      Totals:         4       0       0       0       0
  2315 ;;Total ram usage:        4 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    2
  2318 ;; This function calls:
  2319 ;;		_Lcd_Cmd
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;;		_setup
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _Lcd_Set_Cursor
  2328  0378                     _Lcd_Set_Cursor:
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2332                           ;Lcd_Set_Cursor@a stored from wreg
  2333  0378  00F6               	movwf	Lcd_Set_Cursor@a
  2334  0379                     l1336:
  2335                           
  2336                           ;LCD8bits.c: 31:     unsigned char temp;;LCD8bits.c: 32:     if (a == 1) {
  2337  0379  0376               	decf	Lcd_Set_Cursor@a,w
  2338  037A  1D03               	btfss	3,2
  2339  037B  2B7D               	goto	u531
  2340  037C  2B7E               	goto	u530
  2341  037D                     u531:
  2342  037D  2B8A               	goto	l1342
  2343  037E                     u530:
  2344  037E                     l1338:
  2345                           
  2346                           ;LCD8bits.c: 33:         temp = 0x80 + b - 1;
  2347  037E  0874               	movf	Lcd_Set_Cursor@b,w
  2348  037F  3E7F               	addlw	127
  2349  0380  00F5               	movwf	??_Lcd_Set_Cursor
  2350  0381  0875               	movf	??_Lcd_Set_Cursor,w
  2351  0382  00F7               	movwf	Lcd_Set_Cursor@temp
  2352  0383                     l1340:
  2353                           
  2354                           ;LCD8bits.c: 34:         Lcd_Cmd(temp);
  2355  0383  0877               	movf	Lcd_Set_Cursor@temp,w
  2356  0384  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2357                           
  2358                           ;LCD8bits.c: 36:     } else if (a == 2) {
  2359  0389  2B9B               	goto	l176
  2360  038A                     l1342:
  2361  038A  3002               	movlw	2
  2362  038B  0676               	xorwf	Lcd_Set_Cursor@a,w
  2363  038C  1D03               	btfss	3,2
  2364  038D  2B8F               	goto	u541
  2365  038E  2B90               	goto	u540
  2366  038F                     u541:
  2367  038F  2B9B               	goto	l176
  2368  0390                     u540:
  2369  0390                     l1344:
  2370                           
  2371                           ;LCD8bits.c: 37:         temp = 0xC0 + b - 1;
  2372  0390  0874               	movf	Lcd_Set_Cursor@b,w
  2373  0391  3EBF               	addlw	191
  2374  0392  00F5               	movwf	??_Lcd_Set_Cursor
  2375  0393  0875               	movf	??_Lcd_Set_Cursor,w
  2376  0394  00F7               	movwf	Lcd_Set_Cursor@temp
  2377  0395                     l1346:
  2378                           
  2379                           ;LCD8bits.c: 38:         Lcd_Cmd(temp);
  2380  0395  0877               	movf	Lcd_Set_Cursor@temp,w
  2381  0396  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2382  039B                     l176:
  2383  039B  0008               	return
  2384  039C                     __end_of_Lcd_Set_Cursor:
  2385                           
  2386                           	psect	text8
  2387  04C2                     __ptext8:	
  2388 ;; *************** function _Lcd_Init *****************
  2389 ;; Defined at:
  2390 ;;		line 42 in file "LCD8bits.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0
  2406 ;;      Temps:          2       0       0       0       0
  2407 ;;      Totals:         2       0       0       0       0
  2408 ;;Total ram usage:        2 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    2
  2411 ;; This function calls:
  2412 ;;		_Lcd_Cmd
  2413 ;;		_Lcd_Port
  2414 ;; This function is called by:
  2415 ;;		_setup
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _Lcd_Init
  2421  04C2                     _Lcd_Init:
  2422  04C2                     l1356:	
  2423                           ;incstack = 0
  2424                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2425                           
  2426                           
  2427                           ;LCD8bits.c: 43:     Lcd_Port(0);
  2428  04C2  3000               	movlw	0
  2429  04C3  120A  118A  22E2  120A  118A  	fcall	_Lcd_Port
  2430  04C8                     l1358:
  2431                           
  2432                           ;LCD8bits.c: 44:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2433  04C8  3034               	movlw	52
  2434  04C9  00F5               	movwf	??_Lcd_Init+1
  2435  04CA  30F1               	movlw	241
  2436  04CB  00F4               	movwf	??_Lcd_Init
  2437  04CC                     u947:
  2438  04CC  0BF4               	decfsz	??_Lcd_Init,f
  2439  04CD  2CCC               	goto	u947
  2440  04CE  0BF5               	decfsz	??_Lcd_Init+1,f
  2441  04CF  2CCC               	goto	u947
  2442  04D0  2CD1               	nop2
  2443  04D1                     l1360:
  2444                           
  2445                           ;LCD8bits.c: 45:     Lcd_Cmd(48);
  2446  04D1  3030               	movlw	48
  2447  04D2  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2448                           
  2449                           ;LCD8bits.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2450  04D7  300D               	movlw	13
  2451  04D8  00F5               	movwf	??_Lcd_Init+1
  2452  04D9  30FB               	movlw	251
  2453  04DA  00F4               	movwf	??_Lcd_Init
  2454  04DB                     u957:
  2455  04DB  0BF4               	decfsz	??_Lcd_Init,f
  2456  04DC  2CDB               	goto	u957
  2457  04DD  0BF5               	decfsz	??_Lcd_Init+1,f
  2458  04DE  2CDB               	goto	u957
  2459  04DF  2CE0               	nop2
  2460  04E0                     l1362:
  2461                           
  2462                           ;LCD8bits.c: 47:     Lcd_Cmd(48);
  2463  04E0  3030               	movlw	48
  2464  04E1  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2465  04E6                     l1364:
  2466                           
  2467                           ;LCD8bits.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2468  04E6  301D               	movlw	29
  2469  04E7  00F5               	movwf	??_Lcd_Init+1
  2470  04E8  3091               	movlw	145
  2471  04E9  00F4               	movwf	??_Lcd_Init
  2472  04EA                     u967:
  2473  04EA  0BF4               	decfsz	??_Lcd_Init,f
  2474  04EB  2CEA               	goto	u967
  2475  04EC  0BF5               	decfsz	??_Lcd_Init+1,f
  2476  04ED  2CEA               	goto	u967
  2477                           
  2478                           ;LCD8bits.c: 49:     Lcd_Cmd(48);
  2479  04EE  3030               	movlw	48
  2480  04EF  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2481                           
  2482                           ;LCD8bits.c: 51:     Lcd_Cmd(56);
  2483  04F4  3038               	movlw	56
  2484  04F5  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2485                           
  2486                           ;LCD8bits.c: 52:     Lcd_Cmd(8);
  2487  04FA  3008               	movlw	8
  2488  04FB  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2489                           
  2490                           ;LCD8bits.c: 53:     Lcd_Cmd(1);
  2491  0500  3001               	movlw	1
  2492  0501  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2493                           
  2494                           ;LCD8bits.c: 54:     Lcd_Cmd(6);
  2495  0506  3006               	movlw	6
  2496  0507  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2497                           
  2498                           ;LCD8bits.c: 55:     Lcd_Cmd(12);
  2499  050C  300C               	movlw	12
  2500  050D  120A  118A  233F  120A  118A  	fcall	_Lcd_Cmd
  2501  0512                     l179:
  2502  0512  0008               	return
  2503  0513                     __end_of_Lcd_Init:
  2504                           
  2505                           	psect	text9
  2506  033F                     __ptext9:	
  2507 ;; *************** function _Lcd_Cmd *****************
  2508 ;; Defined at:
  2509 ;;		line 17 in file "LCD8bits.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  a               1    wreg     unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  a               1    3[COMMON] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         1       0       0       0       0
  2525 ;;      Temps:          2       0       0       0       0
  2526 ;;      Totals:         3       0       0       0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    1
  2530 ;; This function calls:
  2531 ;;		_Lcd_Port
  2532 ;; This function is called by:
  2533 ;;		_Lcd_Set_Cursor
  2534 ;;		_Lcd_Init
  2535 ;;		_Lcd_Clear
  2536 ;;		_Lcd_Shift_Right
  2537 ;;		_Lcd_Shift_Left
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _Lcd_Cmd
  2543  033F                     _Lcd_Cmd:
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2547                           ;Lcd_Cmd@a stored from wreg
  2548  033F  00F3               	movwf	Lcd_Cmd@a
  2549  0340                     l1292:
  2550                           
  2551                           ;LCD8bits.c: 18:     RC0 = 0;
  2552  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0342  1007               	bcf	7,0	;volatile
  2555  0343                     l1294:
  2556                           
  2557                           ;LCD8bits.c: 19:     Lcd_Port(a);
  2558  0343  0873               	movf	Lcd_Cmd@a,w
  2559  0344  120A  118A  22E2  120A  118A  	fcall	_Lcd_Port
  2560  0349                     l1296:
  2561                           
  2562                           ;LCD8bits.c: 20:     RC1 = 1;
  2563  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2564  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2565  034B  1487               	bsf	7,1	;volatile
  2566  034C                     l1298:
  2567                           
  2568                           ;LCD8bits.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2569  034C  300B               	movlw	11
  2570  034D  00F2               	movwf	??_Lcd_Cmd+1
  2571  034E  3062               	movlw	98
  2572  034F  00F1               	movwf	??_Lcd_Cmd
  2573  0350                     u977:
  2574  0350  0BF1               	decfsz	??_Lcd_Cmd,f
  2575  0351  2B50               	goto	u977
  2576  0352  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2577  0353  2B50               	goto	u977
  2578  0354  0000               	nop
  2579  0355                     l1300:
  2580                           
  2581                           ;LCD8bits.c: 22:     RC1 = 0;
  2582  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0357  1087               	bcf	7,1	;volatile
  2585  0358                     l167:
  2586  0358  0008               	return
  2587  0359                     __end_of_Lcd_Cmd:
  2588                           
  2589                           	psect	text10
  2590  02E2                     __ptext10:	
  2591 ;; *************** function _Lcd_Port *****************
  2592 ;; Defined at:
  2593 ;;		line 13 in file "LCD8bits.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  a               1    wreg     unsigned char 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  a               1    0[COMMON] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         1       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0
  2610 ;;      Totals:         1       0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_Lcd_Cmd
  2617 ;;		_Lcd_Init
  2618 ;;		_Lcd_Write_Char
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           
  2623                           ;psect for function _Lcd_Port
  2624  02E2                     _Lcd_Port:
  2625                           
  2626                           ;incstack = 0
  2627                           ; Regs used in _Lcd_Port: [wreg]
  2628                           ;Lcd_Port@a stored from wreg
  2629  02E2  00F0               	movwf	Lcd_Port@a
  2630  02E3                     l1290:
  2631                           
  2632                           ;LCD8bits.c: 14:     PORTD = a;
  2633  02E3  0870               	movf	Lcd_Port@a,w
  2634  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2635  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2636  02E6  0088               	movwf	8	;volatile
  2637  02E7                     l164:
  2638  02E7  0008               	return
  2639  02E8                     __end_of_Lcd_Port:
  2640                           
  2641                           	psect	text11
  2642  03CA                     __ptext11:	
  2643 ;; *************** function _I2C_Master_Init *****************
  2644 ;; Defined at:
  2645 ;;		line 16 in file "I2C.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  c               4    0[BANK0 ] const unsigned long 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, pclath, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       4       0       0       0
  2660 ;;      Locals:         0       0       0       0       0
  2661 ;;      Temps:          0       4       0       0       0
  2662 ;;      Totals:         0       8       0       0       0
  2663 ;;Total ram usage:        8 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    1
  2666 ;; This function calls:
  2667 ;;		___lldiv
  2668 ;; This function is called by:
  2669 ;;		_setup
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _I2C_Master_Init
  2675  03CA                     _I2C_Master_Init:
  2676  03CA                     l1366:	
  2677                           ;incstack = 0
  2678                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2679                           
  2680                           
  2681                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2682  03CA  3028               	movlw	40
  2683  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2684  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2685  03CD  0094               	movwf	20	;volatile
  2686  03CE                     l1368:
  2687                           
  2688                           ;I2C.c: 19:     SSPCON2 = 0;
  2689  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2690  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2691  03D0  0191               	clrf	17	;volatile
  2692  03D1                     l1370:
  2693                           
  2694                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2695  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2696  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2697  03D3  0820               	movf	I2C_Master_Init@c,w
  2698  03D4  00A4               	movwf	??_I2C_Master_Init
  2699  03D5  0821               	movf	I2C_Master_Init@c+1,w
  2700  03D6  00A5               	movwf	??_I2C_Master_Init+1
  2701  03D7  0822               	movf	I2C_Master_Init@c+2,w
  2702  03D8  00A6               	movwf	??_I2C_Master_Init+2
  2703  03D9  0823               	movf	I2C_Master_Init@c+3,w
  2704  03DA  00A7               	movwf	??_I2C_Master_Init+3
  2705  03DB  3002               	movlw	2
  2706  03DC                     u585:
  2707  03DC  1003               	clrc
  2708  03DD  0DA4               	rlf	??_I2C_Master_Init,f
  2709  03DE  0DA5               	rlf	??_I2C_Master_Init+1,f
  2710  03DF  0DA6               	rlf	??_I2C_Master_Init+2,f
  2711  03E0  0DA7               	rlf	??_I2C_Master_Init+3,f
  2712  03E1                     u580:
  2713  03E1  3EFF               	addlw	-1
  2714  03E2  1D03               	skipz
  2715  03E3  2BDC               	goto	u585
  2716  03E4  0827               	movf	??_I2C_Master_Init+3,w
  2717  03E5  00F3               	movwf	___lldiv@divisor+3
  2718  03E6  0826               	movf	??_I2C_Master_Init+2,w
  2719  03E7  00F2               	movwf	___lldiv@divisor+2
  2720  03E8  0825               	movf	??_I2C_Master_Init+1,w
  2721  03E9  00F1               	movwf	___lldiv@divisor+1
  2722  03EA  0824               	movf	??_I2C_Master_Init,w
  2723  03EB  00F0               	movwf	___lldiv@divisor
  2724  03EC  3000               	movlw	0
  2725  03ED  00F7               	movwf	___lldiv@dividend+3
  2726  03EE  307A               	movlw	122
  2727  03EF  00F6               	movwf	___lldiv@dividend+2
  2728  03F0  3012               	movlw	18
  2729  03F1  00F5               	movwf	___lldiv@dividend+1
  2730  03F2  3000               	movlw	0
  2731  03F3  00F4               	movwf	___lldiv@dividend
  2732  03F4  120A  118A  2569  120A  118A  	fcall	___lldiv
  2733  03F9  0870               	movf	?___lldiv,w
  2734  03FA  3EFF               	addlw	255
  2735  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2736  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2737  03FD  0093               	movwf	19	;volatile
  2738  03FE                     l1372:
  2739                           
  2740                           ;I2C.c: 21:     SSPSTAT = 0;
  2741  03FE  0194               	clrf	20	;volatile
  2742  03FF                     l1374:
  2743                           
  2744                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2745  03FF  1587               	bsf	7,3	;volatile
  2746  0400                     l1376:
  2747                           
  2748                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2749  0400  1607               	bsf	7,4	;volatile
  2750  0401                     l125:
  2751  0401  0008               	return
  2752  0402                     __end_of_I2C_Master_Init:
  2753                           
  2754                           	psect	text12
  2755  0569                     __ptext12:	
  2756 ;; *************** function ___lldiv *****************
  2757 ;; Defined at:
  2758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  divisor         4    0[COMMON] unsigned long 
  2761 ;;  dividend        4    4[COMMON] unsigned long 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  quotient        4    9[COMMON] unsigned long 
  2764 ;;  counter         1   13[COMMON] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  4    0[COMMON] unsigned long 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         8       0       0       0       0
  2775 ;;      Locals:         5       0       0       0       0
  2776 ;;      Temps:          1       0       0       0       0
  2777 ;;      Totals:        14       0       0       0       0
  2778 ;;Total ram usage:       14 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_I2C_Master_Init
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function ___lldiv
  2789  0569                     ___lldiv:
  2790  0569                     l1312:	
  2791                           ;incstack = 0
  2792                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2793                           
  2794  0569  3000               	movlw	0
  2795  056A  00FC               	movwf	___lldiv@quotient+3
  2796  056B  3000               	movlw	0
  2797  056C  00FB               	movwf	___lldiv@quotient+2
  2798  056D  3000               	movlw	0
  2799  056E  00FA               	movwf	___lldiv@quotient+1
  2800  056F  3000               	movlw	0
  2801  0570  00F9               	movwf	___lldiv@quotient
  2802  0571  0873               	movf	___lldiv@divisor+3,w
  2803  0572  0472               	iorwf	___lldiv@divisor+2,w
  2804  0573  0471               	iorwf	___lldiv@divisor+1,w
  2805  0574  0470               	iorwf	___lldiv@divisor,w
  2806  0575  1903               	skipnz
  2807  0576  2D78               	goto	u461
  2808  0577  2D79               	goto	u460
  2809  0578                     u461:
  2810  0578  2DC6               	goto	l1332
  2811  0579                     u460:
  2812  0579                     l1314:
  2813  0579  01FD               	clrf	___lldiv@counter
  2814  057A  0AFD               	incf	___lldiv@counter,f
  2815  057B  2D89               	goto	l1318
  2816  057C                     l1316:
  2817  057C  3001               	movlw	1
  2818  057D  00F8               	movwf	??___lldiv
  2819  057E                     u475:
  2820  057E  1003               	clrc
  2821  057F  0DF0               	rlf	___lldiv@divisor,f
  2822  0580  0DF1               	rlf	___lldiv@divisor+1,f
  2823  0581  0DF2               	rlf	___lldiv@divisor+2,f
  2824  0582  0DF3               	rlf	___lldiv@divisor+3,f
  2825  0583  0BF8               	decfsz	??___lldiv,f
  2826  0584  2D7E               	goto	u475
  2827  0585  3001               	movlw	1
  2828  0586  00F8               	movwf	??___lldiv
  2829  0587  0878               	movf	??___lldiv,w
  2830  0588  07FD               	addwf	___lldiv@counter,f
  2831  0589                     l1318:
  2832  0589  1FF3               	btfss	___lldiv@divisor+3,7
  2833  058A  2D8C               	goto	u481
  2834  058B  2D8D               	goto	u480
  2835  058C                     u481:
  2836  058C  2D7C               	goto	l1316
  2837  058D                     u480:
  2838  058D                     l1320:
  2839  058D  3001               	movlw	1
  2840  058E  00F8               	movwf	??___lldiv
  2841  058F                     u495:
  2842  058F  1003               	clrc
  2843  0590  0DF9               	rlf	___lldiv@quotient,f
  2844  0591  0DFA               	rlf	___lldiv@quotient+1,f
  2845  0592  0DFB               	rlf	___lldiv@quotient+2,f
  2846  0593  0DFC               	rlf	___lldiv@quotient+3,f
  2847  0594  0BF8               	decfsz	??___lldiv,f
  2848  0595  2D8F               	goto	u495
  2849  0596                     l1322:
  2850  0596  0873               	movf	___lldiv@divisor+3,w
  2851  0597  0277               	subwf	___lldiv@dividend+3,w
  2852  0598  1D03               	skipz
  2853  0599  2DA4               	goto	u505
  2854  059A  0872               	movf	___lldiv@divisor+2,w
  2855  059B  0276               	subwf	___lldiv@dividend+2,w
  2856  059C  1D03               	skipz
  2857  059D  2DA4               	goto	u505
  2858  059E  0871               	movf	___lldiv@divisor+1,w
  2859  059F  0275               	subwf	___lldiv@dividend+1,w
  2860  05A0  1D03               	skipz
  2861  05A1  2DA4               	goto	u505
  2862  05A2  0870               	movf	___lldiv@divisor,w
  2863  05A3  0274               	subwf	___lldiv@dividend,w
  2864  05A4                     u505:
  2865  05A4  1C03               	skipc
  2866  05A5  2DA7               	goto	u501
  2867  05A6  2DA8               	goto	u500
  2868  05A7                     u501:
  2869  05A7  2DB7               	goto	l1328
  2870  05A8                     u500:
  2871  05A8                     l1324:
  2872  05A8  0870               	movf	___lldiv@divisor,w
  2873  05A9  02F4               	subwf	___lldiv@dividend,f
  2874  05AA  0871               	movf	___lldiv@divisor+1,w
  2875  05AB  1C03               	skipc
  2876  05AC  0F71               	incfsz	___lldiv@divisor+1,w
  2877  05AD  02F5               	subwf	___lldiv@dividend+1,f
  2878  05AE  0872               	movf	___lldiv@divisor+2,w
  2879  05AF  1C03               	skipc
  2880  05B0  0F72               	incfsz	___lldiv@divisor+2,w
  2881  05B1  02F6               	subwf	___lldiv@dividend+2,f
  2882  05B2  0873               	movf	___lldiv@divisor+3,w
  2883  05B3  1C03               	skipc
  2884  05B4  0F73               	incfsz	___lldiv@divisor+3,w
  2885  05B5  02F7               	subwf	___lldiv@dividend+3,f
  2886  05B6                     l1326:
  2887  05B6  1479               	bsf	___lldiv@quotient,0
  2888  05B7                     l1328:
  2889  05B7  3001               	movlw	1
  2890  05B8                     u515:
  2891  05B8  1003               	clrc
  2892  05B9  0CF3               	rrf	___lldiv@divisor+3,f
  2893  05BA  0CF2               	rrf	___lldiv@divisor+2,f
  2894  05BB  0CF1               	rrf	___lldiv@divisor+1,f
  2895  05BC  0CF0               	rrf	___lldiv@divisor,f
  2896  05BD  3EFF               	addlw	-1
  2897  05BE  1D03               	skipz
  2898  05BF  2DB8               	goto	u515
  2899  05C0                     l1330:
  2900  05C0  3001               	movlw	1
  2901  05C1  02FD               	subwf	___lldiv@counter,f
  2902  05C2  1D03               	btfss	3,2
  2903  05C3  2DC5               	goto	u521
  2904  05C4  2DC6               	goto	u520
  2905  05C5                     u521:
  2906  05C5  2D8D               	goto	l1320
  2907  05C6                     u520:
  2908  05C6                     l1332:
  2909  05C6  087C               	movf	___lldiv@quotient+3,w
  2910  05C7  00F3               	movwf	?___lldiv+3
  2911  05C8  087B               	movf	___lldiv@quotient+2,w
  2912  05C9  00F2               	movwf	?___lldiv+2
  2913  05CA  087A               	movf	___lldiv@quotient+1,w
  2914  05CB  00F1               	movwf	?___lldiv+1
  2915  05CC  0879               	movf	___lldiv@quotient,w
  2916  05CD  00F0               	movwf	?___lldiv
  2917  05CE                     l386:
  2918  05CE  0008               	return
  2919  05CF                     __end_of___lldiv:
  2920                           
  2921                           	psect	text13
  2922  0359                     __ptext13:	
  2923 ;; *************** function _enviocadena *****************
  2924 ;; Defined at:
  2925 ;;		line 44 in file "usart.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  cadena          1    wreg     PTR unsigned char 
  2928 ;;		 -> volt(16), 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  cadena          1    2[COMMON] PTR unsigned char 
  2931 ;;		 -> volt(16), 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         1       0       0       0       0
  2943 ;;      Temps:          1       0       0       0       0
  2944 ;;      Totals:         2       0       0       0       0
  2945 ;;Total ram usage:        2 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    1
  2948 ;; This function calls:
  2949 ;;		_enviocaracter
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _enviocadena
  2957  0359                     _enviocadena:
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2961                           ;enviocadena@cadena stored from wreg
  2962  0359  00F2               	movwf	enviocadena@cadena
  2963  035A                     l1584:
  2964                           
  2965                           ;usart.c: 45:     while (*cadena != 0){
  2966  035A  2B67               	goto	l1590
  2967  035B                     l1586:
  2968                           
  2969                           ;usart.c: 46:       enviocaracter(*cadena);
  2970  035B  0872               	movf	enviocadena@cadena,w
  2971  035C  0084               	movwf	4
  2972  035D  0800               	movf	0,w
  2973  035E  120A  118A  2319  120A  118A  	fcall	_enviocaracter
  2974  0363                     l1588:
  2975                           
  2976                           ;usart.c: 47:       cadena++;
  2977  0363  3001               	movlw	1
  2978  0364  00F1               	movwf	??_enviocadena
  2979  0365  0871               	movf	??_enviocadena,w
  2980  0366  07F2               	addwf	enviocadena@cadena,f
  2981  0367                     l1590:
  2982                           
  2983                           ;usart.c: 45:     while (*cadena != 0){
  2984  0367  0872               	movf	enviocadena@cadena,w
  2985  0368  0084               	movwf	4
  2986  0369  1383               	bcf	3,7	;select IRP bank0
  2987  036A  0800               	movf	0,w
  2988  036B  1D03               	btfss	3,2
  2989  036C  2B6E               	goto	u841
  2990  036D  2B6F               	goto	u840
  2991  036E                     u841:
  2992  036E  2B5B               	goto	l1586
  2993  036F                     u840:
  2994  036F                     l233:
  2995                           
  2996                           ;usart.c: 49:     if (PIR1bits.TXIF){
  2997  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0371  1E0C               	btfss	12,4	;volatile
  3000  0372  2B74               	goto	u851
  3001  0373  2B75               	goto	u850
  3002  0374                     u851:
  3003  0374  2B77               	goto	l235
  3004  0375                     u850:
  3005  0375                     l1592:
  3006                           
  3007                           ;usart.c: 50:             TXREG = 13;
  3008  0375  300D               	movlw	13
  3009  0376  0099               	movwf	25	;volatile
  3010  0377                     l235:
  3011  0377  0008               	return
  3012  0378                     __end_of_enviocadena:
  3013                           
  3014                           	psect	text14
  3015  0319                     __ptext14:	
  3016 ;; *************** function _enviocaracter *****************
  3017 ;; Defined at:
  3018 ;;		line 35 in file "usart.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  a               1    wreg     unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  a               1    0[COMMON] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         0       0       0       0       0
  3033 ;;      Locals:         1       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0
  3035 ;;      Totals:         1       0       0       0       0
  3036 ;;Total ram usage:        1 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_enviocadena
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _enviocaracter
  3047  0319                     _enviocaracter:
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in _enviocaracter: [wreg]
  3051                           ;enviocaracter@a stored from wreg
  3052  0319  00F0               	movwf	enviocaracter@a
  3053  031A                     l1382:
  3054  031A                     l224:	
  3055                           ;usart.c: 38:     }
  3056                           
  3057                           
  3058                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  3059  031A  1683               	bsf	3,5	;RP0=1, select bank1
  3060  031B  1303               	bcf	3,6	;RP1=0, select bank1
  3061  031C  1C98               	btfss	24,1	;volatile
  3062  031D  2B1F               	goto	u611
  3063  031E  2B20               	goto	u610
  3064  031F                     u611:
  3065  031F  2B1A               	goto	l224
  3066  0320                     u610:
  3067  0320                     l226:
  3068                           
  3069                           ;usart.c: 39:     if (PIR1bits.TXIF){
  3070  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0321  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0322  1E0C               	btfss	12,4	;volatile
  3073  0323  2B25               	goto	u621
  3074  0324  2B26               	goto	u620
  3075  0325                     u621:
  3076  0325  2B28               	goto	l228
  3077  0326                     u620:
  3078  0326                     l1384:
  3079                           
  3080                           ;usart.c: 40:             TXREG = a;
  3081  0326  0870               	movf	enviocaracter@a,w
  3082  0327  0099               	movwf	25	;volatile
  3083  0328                     l228:
  3084  0328  0008               	return
  3085  0329                     __end_of_enviocaracter:
  3086                           
  3087                           	psect	text15
  3088  0302                     __ptext15:	
  3089 ;; *************** function _I2C_Master_Write *****************
  3090 ;; Defined at:
  3091 ;;		line 65 in file "I2C.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  d               2    0[COMMON] unsigned int 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0, pclath, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         2       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0
  3108 ;;      Totals:         2       0       0       0       0
  3109 ;;Total ram usage:        2 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    1
  3112 ;; This function calls:
  3113 ;;		_I2C_Master_Wait
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _I2C_Master_Write
  3121  0302                     _I2C_Master_Write:
  3122  0302                     l1492:	
  3123                           ;incstack = 0
  3124                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3125                           
  3126                           
  3127                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3128  0302  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Wait
  3129  0307                     l1494:
  3130                           
  3131                           ;I2C.c: 68:     SSPBUF = d;
  3132  0307  0870               	movf	I2C_Master_Write@d,w
  3133  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3135  030A  0093               	movwf	19	;volatile
  3136  030B                     l143:
  3137  030B  0008               	return
  3138  030C                     __end_of_I2C_Master_Write:
  3139                           
  3140                           	psect	text16
  3141  02F9                     __ptext16:	
  3142 ;; *************** function _I2C_Master_Stop *****************
  3143 ;; Defined at:
  3144 ;;		line 55 in file "I2C.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, pclath, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3158 ;;      Params:         0       0       0       0       0
  3159 ;;      Locals:         0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0
  3161 ;;      Totals:         0       0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    1
  3165 ;; This function calls:
  3166 ;;		_I2C_Master_Wait
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _I2C_Master_Stop
  3174  02F9                     _I2C_Master_Stop:
  3175  02F9                     l1512:	
  3176                           ;incstack = 0
  3177                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3178                           
  3179                           
  3180                           ;I2C.c: 57:     I2C_Master_Wait();
  3181  02F9  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Wait
  3182  02FE                     l1514:
  3183                           
  3184                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3185  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3186  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0300  1511               	bsf	17,2	;volatile
  3188  0301                     l140:
  3189  0301  0008               	return
  3190  0302                     __end_of_I2C_Master_Stop:
  3191                           
  3192                           	psect	text17
  3193  02F0                     __ptext17:	
  3194 ;; *************** function _I2C_Master_Start *****************
  3195 ;; Defined at:
  3196 ;;		line 39 in file "I2C.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, pclath, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    1
  3217 ;; This function calls:
  3218 ;;		_I2C_Master_Wait
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function _I2C_Master_Start
  3226  02F0                     _I2C_Master_Start:
  3227  02F0                     l1488:	
  3228                           ;incstack = 0
  3229                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3230                           
  3231                           
  3232                           ;I2C.c: 41:     I2C_Master_Wait();
  3233  02F0  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Wait
  3234  02F5                     l1490:
  3235                           
  3236                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3237  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  3238  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  3239  02F7  1411               	bsf	17,0	;volatile
  3240  02F8                     l134:
  3241  02F8  0008               	return
  3242  02F9                     __end_of_I2C_Master_Start:
  3243                           
  3244                           	psect	text18
  3245  039C                     __ptext18:	
  3246 ;; *************** function _I2C_Master_Read *****************
  3247 ;; Defined at:
  3248 ;;		line 74 in file "I2C.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  a               2    0[COMMON] unsigned short 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  temp            2    4[COMMON] unsigned short 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2    0[COMMON] unsigned short 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0, pclath, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         2       0       0       0       0
  3263 ;;      Locals:         2       0       0       0       0
  3264 ;;      Temps:          2       0       0       0       0
  3265 ;;      Totals:         6       0       0       0       0
  3266 ;;Total ram usage:        6 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    1
  3269 ;; This function calls:
  3270 ;;		_I2C_Master_Wait
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function _I2C_Master_Read
  3278  039C                     _I2C_Master_Read:
  3279  039C                     l1496:	
  3280                           ;incstack = 0
  3281                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3282                           
  3283                           
  3284                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3285  039C  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Wait
  3286  03A1                     l1498:
  3287                           
  3288                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3289  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  3290  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  3291  03A3  1591               	bsf	17,3	;volatile
  3292                           
  3293                           ;I2C.c: 79:     I2C_Master_Wait();
  3294  03A4  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Wait
  3295  03A9                     l1500:
  3296                           
  3297                           ;I2C.c: 80:     temp = SSPBUF;
  3298  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3299  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3300  03AB  0813               	movf	19,w	;volatile
  3301  03AC  00F2               	movwf	??_I2C_Master_Read
  3302  03AD  01F3               	clrf	??_I2C_Master_Read+1
  3303  03AE  0872               	movf	??_I2C_Master_Read,w
  3304  03AF  00F4               	movwf	I2C_Master_Read@temp
  3305  03B0  0873               	movf	??_I2C_Master_Read+1,w
  3306  03B1  00F5               	movwf	I2C_Master_Read@temp+1
  3307  03B2                     l1502:
  3308                           
  3309                           ;I2C.c: 81:     I2C_Master_Wait();
  3310  03B2  120A  118A  230C  120A  118A  	fcall	_I2C_Master_Wait
  3311  03B7                     l1504:
  3312                           
  3313                           ;I2C.c: 82:     if(a == 1){
  3314  03B7  0370               	decf	I2C_Master_Read@a,w
  3315  03B8  0471               	iorwf	I2C_Master_Read@a+1,w
  3316  03B9  1D03               	btfss	3,2
  3317  03BA  2BBC               	goto	u761
  3318  03BB  2BBD               	goto	u760
  3319  03BC                     u761:
  3320  03BC  2BC1               	goto	l146
  3321  03BD                     u760:
  3322  03BD                     l1506:
  3323                           
  3324                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3325  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  3326  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  3327  03BF  1291               	bcf	17,5	;volatile
  3328                           
  3329                           ;I2C.c: 84:     }else{
  3330  03C0  2BC4               	goto	l147
  3331  03C1                     l146:
  3332                           
  3333                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3334  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  3335  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  3336  03C3  1691               	bsf	17,5	;volatile
  3337  03C4                     l147:	
  3338                           ;I2C.c: 86:     }
  3339                           
  3340                           
  3341                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3342  03C4  1611               	bsf	17,4	;volatile
  3343  03C5                     l1508:
  3344                           
  3345                           ;I2C.c: 88:     return temp;
  3346  03C5  0875               	movf	I2C_Master_Read@temp+1,w
  3347  03C6  00F1               	movwf	?_I2C_Master_Read+1
  3348  03C7  0874               	movf	I2C_Master_Read@temp,w
  3349  03C8  00F0               	movwf	?_I2C_Master_Read
  3350  03C9                     l148:
  3351  03C9  0008               	return
  3352  03CA                     __end_of_I2C_Master_Read:
  3353                           
  3354                           	psect	text19
  3355  030C                     __ptext19:	
  3356 ;; *************** function _I2C_Master_Wait *****************
  3357 ;; Defined at:
  3358 ;;		line 32 in file "I2C.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0
  3375 ;;      Totals:         0       0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_I2C_Master_Start
  3382 ;;		_I2C_Master_Stop
  3383 ;;		_I2C_Master_Write
  3384 ;;		_I2C_Master_Read
  3385 ;;		_I2C_Master_RepeatedStart
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function _I2C_Master_Wait
  3391  030C                     _I2C_Master_Wait:
  3392  030C                     l1378:	
  3393                           ;incstack = 0
  3394                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3395                           
  3396  030C                     l128:	
  3397                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3398                           
  3399  030C  1683               	bsf	3,5	;RP0=1, select bank1
  3400  030D  1303               	bcf	3,6	;RP1=0, select bank1
  3401  030E  1914               	btfsc	20,2	;volatile
  3402  030F  2B11               	goto	u591
  3403  0310  2B12               	goto	u590
  3404  0311                     u591:
  3405  0311  2B0C               	goto	l128
  3406  0312                     u590:
  3407  0312                     l1380:
  3408  0312  0811               	movf	17,w	;volatile
  3409  0313  391F               	andlw	31
  3410  0314  1D03               	btfss	3,2
  3411  0315  2B17               	goto	u601
  3412  0316  2B18               	goto	u600
  3413  0317                     u601:
  3414  0317  2B0C               	goto	l128
  3415  0318                     u600:
  3416  0318                     l131:
  3417  0318  0008               	return
  3418  0319                     __end_of_I2C_Master_Wait:
  3419  007E                     btemp	set	126	;btemp
  3420  007E                     wtemp0	set	126
  3421                           
  3422                           	psect	config
  3423                           
  3424                           ;Config register CONFIG1 @ 0x2007
  3425                           ;	Oscillator Selection bits
  3426                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3427                           ;	Watchdog Timer Enable bit
  3428                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3429                           ;	Power-up Timer Enable bit
  3430                           ;	PWRTE = OFF, PWRT disabled
  3431                           ;	RE3/MCLR pin function select bit
  3432                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3433                           ;	Code Protection bit
  3434                           ;	CP = OFF, Program memory code protection is disabled
  3435                           ;	Data Code Protection bit
  3436                           ;	CPD = OFF, Data memory code protection is disabled
  3437                           ;	Brown Out Reset Selection bits
  3438                           ;	BOREN = OFF, BOR disabled
  3439                           ;	Internal External Switchover bit
  3440                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3441                           ;	Fail-Safe Clock Monitor Enabled bit
  3442                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3443                           ;	Low Voltage Programming Enable bit
  3444                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3445                           ;	In-Circuit Debugger Mode bit
  3446                           ;	DEBUG = 0x1, unprogrammed default
  3447  2007                     	org	8199
  3448  2007  20D4               	dw	8404
  3449                           
  3450                           ;Config register CONFIG2 @ 0x2008
  3451                           ;	Brown-out Reset Selection bit
  3452                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3453                           ;	Flash Program Memory Self Write Enable bits
  3454                           ;	WRT = OFF, Write protection off
  3455  2008                     	org	8200
  3456  2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    10
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), volt(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    _enviocadena->_enviocaracter

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    3613
                                             19 BANK0      9     9      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _enviocadena
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    18      9    1280
                                              0 BANK0     19    10      9
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1094
                    _I2C_Master_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     326
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _enviocadena
     _enviocaracter
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      40       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      32       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      40      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Sep 05 00:33:54 2021

                        _L 003E                          _M 003C                          _R 003D  
                        _a 0041                          pc 0002                         l90 072A  
                       l82 0714                         l86 0720                         l96 0568  
                       _s1 0040                         _s2 003F                         fsr 0004  
                      l131 0318                        l140 0301                        l125 0401  
                      l134 02F8                        l143 030B                        l128 030C  
                      l224 031A                        l233 036F                        l146 03C1  
                      l226 0320                        l147 03C4                        l235 0377  
                      l148 03C9                        l228 0328                        l164 02E7  
                      l182 033E                        l167 0358                        l176 039B  
                      l346 06D1                        l179 0512                        l188 047D  
                      l622 04C1                        l632 043B                        l386 05CE  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      u500 05A8                        u501 05A7                        u600 0318  
                      u520 05C6                        u601 0317                        u521 05C5  
                      u505 05A4                        u610 0320                        u530 037E  
                      u611 031F                        u515 05B8                        u531 037D  
                      u620 0326                        u460 0579                        u540 0390  
                      u700 0408                        u621 0325                        u461 0578  
                      u541 038F                        u701 0407                        u550 0449  
                      u630 0486                        u631 0485                        u480 058D  
                      u560 046B                        u720 041A                        u800 0663  
                      u481 058C                        u721 0419                        u801 0662  
                      u570 047D                        u650 0498                        u730 0424  
                      u810 0669                        u475 057E                        u571 047C  
                      u651 0497                        u731 0423                        u715 040C  
                      u811 0668                        u580 03E1                        u820 06BB  
                      u645 048A                        u821 06BA                        u590 0312  
                      u670 04A9                        u750 0437                        u830 06CD  
                      u591 0311                        u495 058F                        u671 04A8  
                      u751 0436                        u735 0420                        u831 06CC  
                      u760 03BD                        u840 036F                        u761 03BC  
                      u841 036E                        u585 03DC                        u665 0499  
                      u745 042B                        u850 0375                        u690 04BD  
                      u770 05DD                        u851 0374                        u691 04BC  
                      u675 04A5                        u771 05DC                        u907 0753  
                      u780 0632                        u860 0718                        u685 04B1  
                      u781 0631                        u917 077F                        u861 0717  
                      u790 0658                        u870 071E                        u791 0657  
                      u927 07AB                        u871 071D                        u880 0724  
                      u937 0338                        u881 0723                        u890 072A  
                      u947 04CC                        u795 0654                        u891 0729  
                      u957 04DB                        u967 04EA                        u977 0350  
                      fsr0 0004                        indf 0000                       l1300 0355  
                     l1310 033B                       l1302 032A                       l1320 058D  
                     l1312 0569                       l1304 032D                       l1400 04A9  
                     l1330 05C0                       l1322 0596                       l1314 0579  
                     l1306 0333                       l1402 04AF                       l1500 03A9  
                     l1324 05A8                       l1316 057C                       l1332 05C6  
                     l1340 0383                       l1308 0336                       l1404 04B0  
                     l1420 0416                       l1412 0402                       l1502 03B2  
                     l1326 05B6                       l1318 0589                       l1342 038A  
                     l1350 043F                       l1406 04B7                       l1422 041A  
                     l1414 0408                       l1430 0437                       l1504 03B7  
                     l1512 02F9                       l1328 05B7                       l1360 04D1  
                     l1344 0390                       l1336 0379                       l1352 045B  
                     l1440 051B                       l1408 04BD                       l1424 0424  
                     l1416 040B                       l1520 05DD                       l1600 06EA  
                     l1506 03BD                       l1514 02FE                       l1370 03D1  
                     l1290 02E3                       l1362 04E0                       l1346 0395  
                     l1338 037E                       l1354 0461                       l1450 0523  
                     l1442 051C                       l1434 0513                       l1426 042A  
                     l1418 0412                       l1530 05F6                       l1522 05E4  
                     l1610 071E                       l1602 06F3                       l1380 0312  
                     l1508 03C5                       l1372 03FE                       l1292 0340  
                     l1364 04E6                       l1356 04C2                       l1348 043C  
                     l1460 0530                       l1452 0526                       l1444 051F  
                     l1436 0517                       l1428 0431                       l1540 062E  
                     l1524 05E9                       l1516 05D2                       l1620 075D  
                     l1612 0724                       l1382 031A                       l1374 03FF  
                     l1366 03CA                       l1294 0343                       l1358 04C8  
                     l1470 053A                       l1462 0531                       l1454 0529  
                     l1446 0520                       l1438 0518                       l1390 0486  
                     l1542 0632                       l1526 05EB                       l1534 0602  
                     l1518 05D7                       l1630 07B0                       l1622 0766  
                     l1614 072C                       l1606 06FC                       l1384 0326  
                     l1376 0400                       l1368 03CE                       l1296 0349  
                     l1480 0543                       l1472 053B                       l1464 0532  
                     l1456 052A                       l1448 0521                       l1392 0489  
                     l1560 0669                       l1552 063D                       l1544 0636  
                     l1536 0622                       l1528 05F2                       l1632 07D8  
                     l1624 0774                       l1616 074D                       l1608 0718  
                     l1378 030C                       l1490 02F5                       l1298 034C  
                     l1482 0548                       l1474 053E                       l1466 0533  
                     l1458 052D                       l1394 0490                       l1386 047E  
                     l1570 06AE                       l1562 0670                       l1546 063B  
                     l1538 062A                       l1634 07DE                       l1626 0779  
                     l1618 0758                       l1492 0302                       l1484 0550  
                     l1476 053F                       l1468 0536                       l1396 0494  
                     l1388 0480                       l1572 06B2                       l1564 0674  
                     l1556 0659                       l1636 07E6                       l1628 07A5  
                     l1494 0307                       l1590 0367                       l1486 0559  
                     l1478 0540                       l1398 0498                       l1566 0679  
                     l1558 0663                       l1574 06BB                       l1496 039C  
                     l1488 02F0                       l1592 0375                       l1584 035A  
                     l1568 06A7                       l1576 06CD                       l1498 03A1  
                     l1586 035B                       l1594 06D2                       l1588 0363  
                     l1692 0706                       l1596 06D8                       l1694 0614  
                     l1598 06E1                       STR_1 002F                       STR_2 001D  
                     _PEIE 005E          ?_Lcd_Write_String 0073                       _main 06D2  
                     btemp 007E                       _volt 0042                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0359               ?_enviocadena 0070  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      _EEADR 010D  
                    _EEDAT 010C                      _ANSEL 0188            __end_of___lldiv 05CF  
          __end_of___lwdiv 04C2            __end_of___lwmod 043C                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019            __end_of_dpowers 001D                      _setup 0513  
   __size_of_enviocaracter 0010                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 06D2           __end_of_Lcd_Init 0513  
         __end_of_Lcd_Port 02E8            __initialization 07F3               __end_of_main 07F3  
                   ??_main 0033          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     _EECON2 018D  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lldiv 0078              _enviocaracter 0319  
                ??___lwdiv 0074                  ??___lwmod 007C                  ??_sprintf 0029  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC  
           __pcstackCOMMON 0070             ?_enviocaracter 0070       __size_of_enviocadena 001F  
            __end_of_setup 0569             _Lcd_Set_Cursor 0378             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 007E  
               __pbssBANK0 003C                 __pmaintext 06D2  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 039C                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094             enviocaracter@a 0070  
               __stringtab 0003             _Lcd_Write_Char 0329                    _Lcd_Cmd 033F  
          ??_enviocaracter 0070                    ___lldiv 0569                    ___lwdiv 047E  
                  ___lwmod 0402            ?_Lcd_Set_Cursor 0074                    __ptext1 05CF  
                  __ptext2 0402                    __ptext3 047E                    __ptext4 0513  
                  __ptext5 043C                    __ptext6 0329                    __ptext7 0378  
                  __ptext8 04C2                    __ptext9 033F                    _dpowers 0013  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 05CF                    clrloop0 02E9  
   __end_of_Lcd_Write_Char 033F       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                Lcd_Port@a 0070                  _PORTBbits 0006                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
                _TXSTAbits 0098           _Lcd_Write_String 043C                _BAUDCTLbits 0187  
      start_initialization 07F3          __size_of_Lcd_Init 0051          __size_of_Lcd_Port 0006  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070              ??_enviocadena 0071            Lcd_Write_Char@a 0072  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
              sprintf@flag 002C                sprintf@prec 002D           _I2C_Master_Start 02F0  
         _I2C_Master_Write 0302           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075  
                 ?___lldiv 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
      __end_of_enviocadena 0378                  __pstrings 0003           ___lwdiv@quotient 0075  
                 ?_sprintf 0020             __size_of_setup 0056                  clear_ram0 02E8  
                 Lcd_Cmd@a 0073                   _PIR1bits 000C                   _PIR2bits 000D  
    __end_of_enviocaracter 0329                __stringbase 0012                   _WPUBbits 0095  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 04C2                   _Lcd_Port 02E2  
      I2C_Master_Read@temp 0074          enviocadena@cadena 0072   __end_of_Lcd_Write_String 047E  
         __size_of_Lcd_Cmd 001A                 _EECON1bits 018C                _enviocadena 0359  
         __size_of___lldiv 0066           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0013                 sprintf@val 002F            _I2C_Master_Init 03CA  
          _I2C_Master_Read 039C            _I2C_Master_Wait 030C            _I2C_Master_Stop 02F9  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 02E2  
                 __ptext11 03CA                   __ptext12 0569                   __ptext13 0359  
                 __ptext14 0319                   __ptext15 0302                   __ptext16 02F9  
                 __ptext17 02F0                   __ptext18 039C                   __ptext19 030C  
         __size_of_sprintf 0103              __size_of_main 0121   __end_of_I2C_Master_Start 02F9  
 __end_of_I2C_Master_Write 030C                 _INTCONbits 000B                  sprintf@ap 002E  
                sprintf@sp 0031           ___lwmod@dividend 007A           ___lldiv@dividend 0074  
                stringcode 000D                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0402  
  __end_of_I2C_Master_Read 03CA    __end_of_I2C_Master_Wait 0319    __end_of_I2C_Master_Stop 0302  
       Lcd_Set_Cursor@temp 0077                   sprintf@c 0032                   sprintf@f 0020  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091  
