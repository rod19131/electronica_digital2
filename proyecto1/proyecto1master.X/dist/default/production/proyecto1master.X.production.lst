

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Sep 06 21:00:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:
   460  0003                     stringtab:
   461  0003                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0003  1BFF               	btfsc	btemp+1,7
   465  0004  280D               	ljmp	stringcode
   466  0005  1383               	bcf	3,7
   467  0006  187F               	btfsc	btemp+1,0
   468  0007  1783               	bsf	3,7
   469  0008  0800               	movf	0,w
   470  0009  0A84               	incf	4,f
   471  000A  1903               	skipnz
   472  000B  0AFF               	incf	btemp+1,f
   473  000C  0008               	return
   474  000D                     stringcode:
   475  000D                     stringdir:
   476  000D  3000               	movlw	high stringdir
   477  000E  008A               	movwf	10
   478  000F  0804               	movf	4,w
   479  0010  0A84               	incf	4,f
   480  0011  0782               	addwf	2,f
   481  0012                     __stringbase:
   482  0012  3400               	retlw	0
   483  0013                     __end_of__stringtab:
   484  0013                     _dpowers:
   485  0013  3401               	retlw	1
   486  0014  3400               	retlw	0
   487  0015  340A               	retlw	10
   488  0016  3400               	retlw	0
   489  0017  3464               	retlw	100
   490  0018  3400               	retlw	0
   491  0019  34E8               	retlw	232
   492  001A  3403               	retlw	3
   493  001B  3410               	retlw	16
   494  001C  3427               	retlw	39
   495  001D                     __end_of_dpowers:
   496  0019                     _TXREG	set	25
   497  000C                     _PIR1bits	set	12
   498  000D                     _PIR2bits	set	13
   499  000B                     _INTCONbits	set	11
   500  0013                     _SSPBUF	set	19
   501  0014                     _SSPCON	set	20
   502  0018                     _RCSTAbits	set	24
   503  0008                     _PORTD	set	8
   504  0006                     _PORTB	set	6
   505  0006                     _PORTBbits	set	6
   506  0039                     _RC1	set	57
   507  0038                     _RC0	set	56
   508  0063                     _SSPIF	set	99
   509  005E                     _PEIE	set	94
   510  005F                     _GIE	set	95
   511  0091                     _SSPCON2bits	set	145
   512  0094                     _SSPSTAT	set	148
   513  0093                     _SSPADD	set	147
   514  0091                     _SSPCON2	set	145
   515  009A                     _SPBRGH	set	154
   516  0099                     _SPBRG	set	153
   517  0098                     _TXSTAbits	set	152
   518  0095                     _WPUBbits	set	149
   519  0081                     _OPTION_REGbits	set	129
   520  0089                     _TRISE	set	137
   521  0088                     _TRISD	set	136
   522  0086                     _TRISB	set	134
   523  0087                     _TRISCbits	set	135
   524  0085                     _TRISA	set	133
   525  008F                     _OSCCONbits	set	143
   526  0463                     _SSPIE	set	1123
   527  043C                     _TRISC4	set	1084
   528  043B                     _TRISC3	set	1083
   529  010C                     _EEDAT	set	268
   530  010D                     _EEADR	set	269
   531  018D                     _EECON2	set	397
   532  018C                     _EECON1bits	set	396
   533  0187                     _BAUDCTLbits	set	391
   534  0188                     _ANSEL	set	392
   535  0189                     _ANSELH	set	393
   536  001D                     STR_1:
   537  001D  3425               	retlw	37	;'%'
   538  001E  3464               	retlw	100	;'d'
   539  001F  3420               	retlw	32	;' '
   540  0020  3425               	retlw	37	;'%'
   541  0021  3463               	retlw	99	;'c'
   542  0022  3425               	retlw	37	;'%'
   543  0023  3463               	retlw	99	;'c'
   544  0024  3420               	retlw	32	;' '
   545  0025  3425               	retlw	37	;'%'
   546  0026  3464               	retlw	100	;'d'
   547  0027  3420               	retlw	32	;' '
   548  0028  3425               	retlw	37	;'%'
   549  0029  3464               	retlw	100	;'d'
   550  002A  3420               	retlw	32	;' '
   551  002B  3425               	retlw	37	;'%'
   552  002C  3464               	retlw	100	;'d'
   553  002D  340A               	retlw	10
   554  002E  3400               	retlw	0
   555  002F                     STR_2:
   556  002F  3449               	retlw	73	;'I'
   557  0030  345F               	retlw	95	;'_'
   558  0031  344C               	retlw	76	;'L'
   559  0032  3452               	retlw	82	;'R'
   560  0033  345F               	retlw	95	;'_'
   561  0034  344D               	retlw	77	;'M'
   562  0035  345F               	retlw	95	;'_'
   563  0036  344D               	retlw	77	;'M'
   564  0037  3461               	retlw	97	;'a'
   565  0038  3467               	retlw	103	;'g'
   566  0039  346E               	retlw	110	;'n'
   567  003A  3465               	retlw	101	;'e'
   568  003B  3474               	retlw	116	;'t'
   569  003C  3459               	retlw	89	;'Y'
   570  003D  3400               	retlw	0
   571                           
   572                           	psect	cinit
   573  07F3                     start_initialization:	
   574                           ; #config settings
   575                           
   576  07F3                     __initialization:
   577                           
   578                           ; Clear objects allocated to BANK0
   579  07F3  1383               	bcf	3,7	;select IRP bank0
   580  07F4  3020               	movlw	low __pbssBANK0
   581  07F5  0084               	movwf	4
   582  07F6  3046               	movlw	low (__pbssBANK0+38)
   583  07F7  120A  118A  20FB  120A  118A  	fcall	clear_ram0
   584  07FC                     end_of_initialization:	
   585                           ;End of C runtime variable initialization code
   586                           
   587  07FC                     __end_of__initialization:
   588  07FC  0183               	clrf	3
   589  07FD  120A  118A  2D74   	ljmp	_main	;jump to C main() function
   590                           
   591                           	psect	bssBANK0
   592  0020                     __pbssBANK0:
   593  0020                     _Heading:
   594  0020                     	ds	2
   595  0022                     _arct:
   596  0022                     	ds	2
   597  0024                     _yms:
   598  0024                     	ds	2
   599  0026                     _xms:
   600  0026                     	ds	2
   601  0028                     _y:
   602  0028                     	ds	2
   603  002A                     _x:
   604  002A                     	ds	2
   605  002C                     _mapping:
   606  002C                     	ds	1
   607  002D                     _z1:
   608  002D                     	ds	1
   609  002E                     _yls:
   610  002E                     	ds	1
   611  002F                     _xls:
   612  002F                     	ds	1
   613  0030                     _M:
   614  0030                     	ds	1
   615  0031                     _R:
   616  0031                     	ds	1
   617  0032                     _L:
   618  0032                     	ds	1
   619  0033                     _s2:
   620  0033                     	ds	1
   621  0034                     _s1:
   622  0034                     	ds	1
   623  0035                     _a:
   624  0035                     	ds	1
   625  0036                     _volt:
   626  0036                     	ds	16
   627                           
   628                           	psect	clrtext
   629  00FB                     clear_ram0:	
   630                           ;	Called with FSR containing the base address, and
   631                           ;	W with the last address+1
   632                           
   633  00FB  0064               	clrwdt	;clear the watchdog before getting into this loop
   634  00FC                     clrloop0:
   635  00FC  0180               	clrf	0	;clear RAM location pointed to by FSR
   636  00FD  0A84               	incf	4,f	;increment pointer
   637  00FE  0604               	xorwf	4,w	;XOR with final address
   638  00FF  1903               	btfsc	3,2	;have we reached the end yet?
   639  0100  3400               	retlw	0	;all done for this memory range, return
   640  0101  0604               	xorwf	4,w	;XOR again to restore value
   641  0102  28FC               	goto	clrloop0	;do the next byte
   642                           
   643                           	psect	cstackCOMMON
   644  0070                     __pcstackCOMMON:
   645  0070                     ?_setup:
   646  0070                     ?_I2C_Master_Start:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ??_I2C_Master_Start:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_I2C_Master_Write:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_I2C_Master_Stop:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_I2C_Master_Stop:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_enviocadena:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Lcd_Init:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_main:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_I2C_Master_Wait:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_I2C_Master_Wait:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_Lcd_Port:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_Lcd_Port:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_Lcd_Cmd:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_Lcd_Write_Char:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_enviocaracter:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_enviocaracter:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_I2C_Master_Read:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?___lwdiv:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  0070                     ?___lldiv:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0070                     Lcd_Port@a:	
   704                           ; 4 bytes @ 0x0
   705                           
   706  0070                     enviocaracter@a:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     I2C_Master_Write@d:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     I2C_Master_Read@a:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     ___lwdiv@divisor:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     ___lldiv@divisor:	
   719                           ; 2 bytes @ 0x0
   720                           
   721                           
   722                           ; 4 bytes @ 0x0
   723  0070                     	ds	1
   724  0071                     ??_enviocadena:
   725  0071                     ??_Lcd_Cmd:	
   726                           ; 1 bytes @ 0x1
   727                           
   728  0071                     ??_Lcd_Write_Char:	
   729                           ; 1 bytes @ 0x1
   730                           
   731                           
   732                           ; 1 bytes @ 0x1
   733  0071                     	ds	1
   734  0072                     ??_I2C_Master_Write:
   735  0072                     ??_I2C_Master_Read:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0072                     Lcd_Write_Char@a:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     enviocadena@cadena:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     ___lwdiv@dividend:	
   745                           ; 1 bytes @ 0x2
   746                           
   747                           
   748                           ; 2 bytes @ 0x2
   749  0072                     	ds	1
   750  0073                     ?_Lcd_Write_String:
   751  0073                     Lcd_Cmd@a:	
   752                           ; 1 bytes @ 0x3
   753                           
   754  0073                     Lcd_Write_String@a:	
   755                           ; 1 bytes @ 0x3
   756                           
   757                           
   758                           ; 2 bytes @ 0x3
   759  0073                     	ds	1
   760  0074                     ?_Lcd_Set_Cursor:
   761  0074                     ??_Lcd_Init:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     ??___lwdiv:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     Lcd_Set_Cursor@b:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     I2C_Master_Read@temp:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     ___lldiv@dividend:	
   774                           ; 2 bytes @ 0x4
   775                           
   776                           
   777                           ; 4 bytes @ 0x4
   778  0074                     	ds	1
   779  0075                     ??_Lcd_Set_Cursor:
   780  0075                     ??_Lcd_Write_String:	
   781                           ; 1 bytes @ 0x5
   782                           
   783  0075                     ___lwdiv@quotient:	
   784                           ; 1 bytes @ 0x5
   785                           
   786                           
   787                           ; 2 bytes @ 0x5
   788  0075                     	ds	1
   789  0076                     Lcd_Set_Cursor@a:
   790                           
   791                           ; 1 bytes @ 0x6
   792  0076                     	ds	1
   793  0077                     Lcd_Set_Cursor@temp:
   794  0077                     ___lwdiv@counter:	
   795                           ; 1 bytes @ 0x7
   796                           
   797                           
   798                           ; 1 bytes @ 0x7
   799  0077                     	ds	1
   800  0078                     ??___lldiv:
   801  0078                     ?___lwmod:	
   802                           ; 1 bytes @ 0x8
   803                           
   804  0078                     Lcd_Write_String@i:	
   805                           ; 2 bytes @ 0x8
   806                           
   807  0078                     ___lwmod@divisor:	
   808                           ; 2 bytes @ 0x8
   809                           
   810                           
   811                           ; 2 bytes @ 0x8
   812  0078                     	ds	1
   813  0079                     ___lldiv@quotient:
   814                           
   815                           ; 4 bytes @ 0x9
   816  0079                     	ds	1
   817  007A                     ___lwmod@dividend:
   818                           
   819                           ; 2 bytes @ 0xA
   820  007A                     	ds	2
   821  007C                     ??___lwmod:
   822                           
   823                           ; 1 bytes @ 0xC
   824  007C                     	ds	1
   825  007D                     ___lldiv@counter:
   826  007D                     ___lwmod@counter:	
   827                           ; 1 bytes @ 0xD
   828                           
   829                           
   830                           ; 1 bytes @ 0xD
   831  007D                     	ds	1
   832                           
   833                           	psect	cstackBANK0
   834  0046                     __pcstackBANK0:
   835  0046                     ?_I2C_Master_Init:
   836  0046                     ?_sprintf:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0046                     sprintf@f:	
   840                           ; 2 bytes @ 0x0
   841                           
   842  0046                     I2C_Master_Init@c:	
   843                           ; 1 bytes @ 0x0
   844                           
   845                           
   846                           ; 4 bytes @ 0x0
   847  0046                     	ds	4
   848  004A                     ??_I2C_Master_Init:
   849                           
   850                           ; 1 bytes @ 0x4
   851  004A                     	ds	4
   852  004E                     ??_setup:
   853                           
   854                           ; 1 bytes @ 0x8
   855  004E                     	ds	5
   856  0053                     ??_sprintf:
   857                           
   858                           ; 1 bytes @ 0xD
   859  0053                     	ds	3
   860  0056                     sprintf@flag:
   861                           
   862                           ; 1 bytes @ 0x10
   863  0056                     	ds	1
   864  0057                     sprintf@prec:
   865                           
   866                           ; 1 bytes @ 0x11
   867  0057                     	ds	1
   868  0058                     sprintf@ap:
   869                           
   870                           ; 1 bytes @ 0x12
   871  0058                     	ds	1
   872  0059                     sprintf@val:
   873                           
   874                           ; 2 bytes @ 0x13
   875  0059                     	ds	2
   876  005B                     sprintf@sp:
   877                           
   878                           ; 1 bytes @ 0x15
   879  005B                     	ds	1
   880  005C                     sprintf@c:
   881                           
   882                           ; 1 bytes @ 0x16
   883  005C                     	ds	1
   884  005D                     ??_main:
   885                           
   886                           ; 1 bytes @ 0x17
   887  005D                     	ds	11
   888                           
   889                           	psect	maintext
   890  0574                     __pmaintext:	
   891 ;;
   892 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
   893 ;;
   894 ;; *************** function _main *****************
   895 ;; Defined at:
   896 ;;		line 71 in file "proyecto1master.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : B00/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0      11       0       0       0
   913 ;;      Totals:         0      11       0       0       0
   914 ;;Total ram usage:       11 bytes
   915 ;; Hardware stack levels required when called:    4
   916 ;; This function calls:
   917 ;;		_I2C_Master_Read
   918 ;;		_I2C_Master_Start
   919 ;;		_I2C_Master_Stop
   920 ;;		_I2C_Master_Write
   921 ;;		_Lcd_Set_Cursor
   922 ;;		_Lcd_Write_String
   923 ;;		_enviocadena
   924 ;;		_setup
   925 ;;		_sprintf
   926 ;; This function is called by:
   927 ;;		Startup code after reset
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _main
   933  0574                     _main:
   934  0574                     l1745:	
   935                           ;incstack = 0
   936                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   937                           
   938                           
   939                           ;proyecto1master.c: 72:     setup();
   940  0574  120A  118A  238C  120A  118A  	fcall	_setup
   941  0579  2D9E               	goto	l1757
   942  057A                     l1747:
   943                           
   944                           ;proyecto1master.c: 77:                 L = 45;
   945  057A  302D               	movlw	45
   946  057B  00DD               	movwf	??_main
   947  057C  085D               	movf	??_main,w
   948  057D  00B2               	movwf	_L
   949                           
   950                           ;proyecto1master.c: 78:                 R = 45;
   951  057E  302D               	movlw	45
   952  057F  00DD               	movwf	??_main
   953  0580  085D               	movf	??_main,w
   954  0581  00B1               	movwf	_R
   955                           
   956                           ;proyecto1master.c: 79:                 break;
   957  0582  2DB6               	goto	l102
   958  0583                     l1749:
   959                           
   960                           ;proyecto1master.c: 82:                 L = 94;
   961  0583  305E               	movlw	94
   962  0584  00DD               	movwf	??_main
   963  0585  085D               	movf	??_main,w
   964  0586  00B2               	movwf	_L
   965                           
   966                           ;proyecto1master.c: 83:                 R = 94;
   967  0587  305E               	movlw	94
   968  0588  00DD               	movwf	??_main
   969  0589  085D               	movf	??_main,w
   970  058A  00B1               	movwf	_R
   971                           
   972                           ;proyecto1master.c: 84:                 break;
   973  058B  2DB6               	goto	l102
   974  058C                     l1751:
   975                           
   976                           ;proyecto1master.c: 87:                 L = 60;
   977  058C  303C               	movlw	60
   978  058D  00DD               	movwf	??_main
   979  058E  085D               	movf	??_main,w
   980  058F  00B2               	movwf	_L
   981                           
   982                           ;proyecto1master.c: 88:                 R = 60;
   983  0590  303C               	movlw	60
   984  0591  00DD               	movwf	??_main
   985  0592  085D               	movf	??_main,w
   986  0593  00B1               	movwf	_R
   987                           
   988                           ;proyecto1master.c: 89:                 break;
   989  0594  2DB6               	goto	l102
   990  0595                     l1753:
   991                           
   992                           ;proyecto1master.c: 92:                 L = 62;
   993  0595  303E               	movlw	62
   994  0596  00DD               	movwf	??_main
   995  0597  085D               	movf	??_main,w
   996  0598  00B2               	movwf	_L
   997                           
   998                           ;proyecto1master.c: 93:                 R = 62;
   999  0599  303E               	movlw	62
  1000  059A  00DD               	movwf	??_main
  1001  059B  085D               	movf	??_main,w
  1002  059C  00B1               	movwf	_R
  1003                           
  1004                           ;proyecto1master.c: 94:                 break;
  1005  059D  2DB6               	goto	l102
  1006  059E                     l1757:
  1007  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1008  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1009  05A0  0833               	movf	_s2,w
  1010  05A1  00DD               	movwf	??_main
  1011  05A2  01DE               	clrf	??_main+1
  1012                           
  1013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1014                           ; Switch size 1, requested type "simple"
  1015                           ; Number of cases is 1, Range of values is 0 to 0
  1016                           ; switch strategies available:
  1017                           ; Name         Instructions Cycles
  1018                           ; simple_byte            4     3 (average)
  1019                           ; direct_byte           11     8 (fixed)
  1020                           ; jumptable            260     6 (fixed)
  1021                           ;	Chosen strategy is simple_byte
  1022  05A3  085E               	movf	??_main+1,w
  1023  05A4  3A00               	xorlw	0	; case 0
  1024  05A5  1903               	skipnz
  1025  05A6  2DA8               	goto	l1893
  1026  05A7  2DB6               	goto	l102
  1027  05A8                     l1893:
  1028                           
  1029                           ; Switch size 1, requested type "simple"
  1030                           ; Number of cases is 4, Range of values is 0 to 45
  1031                           ; switch strategies available:
  1032                           ; Name         Instructions Cycles
  1033                           ; simple_byte           13     7 (average)
  1034                           ; direct_byte          146     8 (fixed)
  1035                           ; jumptable            260     6 (fixed)
  1036                           ;	Chosen strategy is simple_byte
  1037  05A8  085D               	movf	??_main,w
  1038  05A9  3A00               	xorlw	0	; case 0
  1039  05AA  1903               	skipnz
  1040  05AB  2D7A               	goto	l1747
  1041  05AC  3A05               	xorlw	5	; case 5
  1042  05AD  1903               	skipnz
  1043  05AE  2D8C               	goto	l1751
  1044  05AF  3A2D               	xorlw	45	; case 40
  1045  05B0  1903               	skipnz
  1046  05B1  2D95               	goto	l1753
  1047  05B2  3A05               	xorlw	5	; case 45
  1048  05B3  1903               	skipnz
  1049  05B4  2D83               	goto	l1749
  1050  05B5  2DB6               	goto	l102
  1051  05B6                     l102:
  1052                           
  1053                           ;proyecto1master.c: 96:     if ((PORTBbits.RB0 == 1) && (s1 >= 4)){
  1054  05B6  1C06               	btfss	6,0	;volatile
  1055  05B7  2DB9               	goto	u981
  1056  05B8  2DBA               	goto	u980
  1057  05B9                     u981:
  1058  05B9  2DC2               	goto	l106
  1059  05BA                     u980:
  1060  05BA                     l1759:
  1061  05BA  3004               	movlw	4
  1062  05BB  0234               	subwf	_s1,w
  1063  05BC  1C03               	skipc
  1064  05BD  2DBF               	goto	u991
  1065  05BE  2DC0               	goto	u990
  1066  05BF                     u991:
  1067  05BF  2DC2               	goto	l106
  1068  05C0                     u990:
  1069  05C0                     l1761:
  1070                           
  1071                           ;proyecto1master.c: 97:             M = 0;
  1072  05C0  01B0               	clrf	_M
  1073                           
  1074                           ;proyecto1master.c: 98:             }
  1075  05C1  2DCE               	goto	l1765
  1076  05C2                     l106:	
  1077                           ;proyecto1master.c: 100:     else if ((PORTBbits.RB0 == 0) || (s1 < 4)){
  1078                           
  1079  05C2  1C06               	btfss	6,0	;volatile
  1080  05C3  2DC5               	goto	u1001
  1081  05C4  2DC6               	goto	u1000
  1082  05C5                     u1001:
  1083  05C5  2DCC               	goto	l110
  1084  05C6                     u1000:
  1085  05C6                     l1763:
  1086  05C6  3004               	movlw	4
  1087  05C7  0234               	subwf	_s1,w
  1088  05C8  1803               	skipnc
  1089  05C9  2DCB               	goto	u1011
  1090  05CA  2DCC               	goto	u1010
  1091  05CB                     u1011:
  1092  05CB  2DCE               	goto	l1765
  1093  05CC                     u1010:
  1094  05CC                     l110:
  1095                           
  1096                           ;proyecto1master.c: 101:             M = 1;}
  1097  05CC  01B0               	clrf	_M
  1098  05CD  0AB0               	incf	_M,f
  1099  05CE                     l1765:
  1100                           
  1101                           ;proyecto1master.c: 109:         I2C_Master_Start();
  1102  05CE  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  1103                           
  1104                           ;proyecto1master.c: 110:         I2C_Master_Write(0x51);
  1105  05D3  3051               	movlw	81
  1106  05D4  00F0               	movwf	I2C_Master_Write@d
  1107  05D5  3000               	movlw	0
  1108  05D6  00F1               	movwf	I2C_Master_Write@d+1
  1109  05D7  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  1110                           
  1111                           ;proyecto1master.c: 111:         s1 = I2C_Master_Read(0);
  1112  05DC  3000               	movlw	0
  1113  05DD  00F0               	movwf	I2C_Master_Read@a
  1114  05DE  00F1               	movwf	I2C_Master_Read@a+1
  1115  05DF  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1116  05E4  0870               	movf	?_I2C_Master_Read,w
  1117  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1118  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1119  05E7  00DD               	movwf	??_main
  1120  05E8  085D               	movf	??_main,w
  1121  05E9  00B4               	movwf	_s1
  1122                           
  1123                           ;proyecto1master.c: 112:         I2C_Master_Stop();
  1124  05EA  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  1125  05EF                     l1767:
  1126                           
  1127                           ;proyecto1master.c: 113:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1128  05EF  301A               	movlw	26
  1129  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1130  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1131  05F2  00DE               	movwf	??_main+1
  1132  05F3  30F7               	movlw	247
  1133  05F4  00DD               	movwf	??_main
  1134  05F5                     u1147:
  1135  05F5  0BDD               	decfsz	??_main,f
  1136  05F6  2DF5               	goto	u1147
  1137  05F7  0BDE               	decfsz	??_main+1,f
  1138  05F8  2DF5               	goto	u1147
  1139  05F9  2DFA               	nop2
  1140  05FA                     l1769:
  1141                           
  1142                           ;proyecto1master.c: 115:         I2C_Master_Start();
  1143  05FA  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  1144  05FF                     l1771:
  1145                           
  1146                           ;proyecto1master.c: 116:         I2C_Master_Write(0x60);
  1147  05FF  3060               	movlw	96
  1148  0600  00F0               	movwf	I2C_Master_Write@d
  1149  0601  3000               	movlw	0
  1150  0602  00F1               	movwf	I2C_Master_Write@d+1
  1151  0603  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  1152  0608                     l1773:
  1153                           
  1154                           ;proyecto1master.c: 117:         I2C_Master_Write(M);
  1155  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1157  060A  0830               	movf	_M,w
  1158  060B  00DD               	movwf	??_main
  1159  060C  01DE               	clrf	??_main+1
  1160  060D  085D               	movf	??_main,w
  1161  060E  00F0               	movwf	I2C_Master_Write@d
  1162  060F  085E               	movf	??_main+1,w
  1163  0610  00F1               	movwf	I2C_Master_Write@d+1
  1164  0611  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  1165  0616                     l1775:
  1166                           
  1167                           ;proyecto1master.c: 118:         I2C_Master_Stop();
  1168  0616  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  1169  061B                     l1777:
  1170                           
  1171                           ;proyecto1master.c: 119:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1172  061B  301A               	movlw	26
  1173  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1174  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1175  061E  00DE               	movwf	??_main+1
  1176  061F  30F7               	movlw	247
  1177  0620  00DD               	movwf	??_main
  1178  0621                     u1157:
  1179  0621  0BDD               	decfsz	??_main,f
  1180  0622  2E21               	goto	u1157
  1181  0623  0BDE               	decfsz	??_main+1,f
  1182  0624  2E21               	goto	u1157
  1183  0625  2E26               	nop2
  1184                           
  1185                           ;proyecto1master.c: 121:         I2C_Master_Start();
  1186  0626  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  1187                           
  1188                           ;proyecto1master.c: 122:         I2C_Master_Write(0x61);
  1189  062B  3061               	movlw	97
  1190  062C  00F0               	movwf	I2C_Master_Write@d
  1191  062D  3000               	movlw	0
  1192  062E  00F1               	movwf	I2C_Master_Write@d+1
  1193  062F  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  1194                           
  1195                           ;proyecto1master.c: 123:         s2 = I2C_Master_Read(0);
  1196  0634  3000               	movlw	0
  1197  0635  00F0               	movwf	I2C_Master_Read@a
  1198  0636  00F1               	movwf	I2C_Master_Read@a+1
  1199  0637  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1200  063C  0870               	movf	?_I2C_Master_Read,w
  1201  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1202  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1203  063F  00DD               	movwf	??_main
  1204  0640  085D               	movf	??_main,w
  1205  0641  00B3               	movwf	_s2
  1206                           
  1207                           ;proyecto1master.c: 124:         I2C_Master_Stop();
  1208  0642  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  1209  0647                     l1779:
  1210                           
  1211                           ;proyecto1master.c: 125:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1212  0647  301A               	movlw	26
  1213  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1215  064A  00DE               	movwf	??_main+1
  1216  064B  30F7               	movlw	247
  1217  064C  00DD               	movwf	??_main
  1218  064D                     u1167:
  1219  064D  0BDD               	decfsz	??_main,f
  1220  064E  2E4D               	goto	u1167
  1221  064F  0BDE               	decfsz	??_main+1,f
  1222  0650  2E4D               	goto	u1167
  1223  0651  2E52               	nop2
  1224  0652                     l1781:
  1225                           
  1226                           ;proyecto1master.c: 127:         I2C_Master_Start();
  1227  0652  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  1228  0657                     l1783:
  1229                           
  1230                           ;proyecto1master.c: 128:         I2C_Master_Write(0x1A);
  1231  0657  301A               	movlw	26
  1232  0658  00F0               	movwf	I2C_Master_Write@d
  1233  0659  3000               	movlw	0
  1234  065A  00F1               	movwf	I2C_Master_Write@d+1
  1235  065B  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  1236  0660                     l1785:
  1237                           
  1238                           ;proyecto1master.c: 129:         I2C_Master_Write(0x00);
  1239  0660  3000               	movlw	0
  1240  0661  00F0               	movwf	I2C_Master_Write@d
  1241  0662  00F1               	movwf	I2C_Master_Write@d+1
  1242  0663  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  1243  0668                     l1787:
  1244                           
  1245                           ;proyecto1master.c: 130:         I2C_Master_Stop();
  1246  0668  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  1247  066D                     l1789:
  1248                           
  1249                           ;proyecto1master.c: 131:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1250  066D  301A               	movlw	26
  1251  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1252  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0670  00DE               	movwf	??_main+1
  1254  0671  30F7               	movlw	247
  1255  0672  00DD               	movwf	??_main
  1256  0673                     u1177:
  1257  0673  0BDD               	decfsz	??_main,f
  1258  0674  2E73               	goto	u1177
  1259  0675  0BDE               	decfsz	??_main+1,f
  1260  0676  2E73               	goto	u1177
  1261  0677  2E78               	nop2
  1262                           
  1263                           ;proyecto1master.c: 133:         I2C_Master_Start();
  1264  0678  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  1265                           
  1266                           ;proyecto1master.c: 134:         I2C_Master_Write(0x1B);
  1267  067D  301B               	movlw	27
  1268  067E  00F0               	movwf	I2C_Master_Write@d
  1269  067F  3000               	movlw	0
  1270  0680  00F1               	movwf	I2C_Master_Write@d+1
  1271  0681  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  1272                           
  1273                           ;proyecto1master.c: 135:         xls = I2C_Master_Read(1);
  1274  0686  3001               	movlw	1
  1275  0687  00F0               	movwf	I2C_Master_Read@a
  1276  0688  3000               	movlw	0
  1277  0689  00F1               	movwf	I2C_Master_Read@a+1
  1278  068A  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1279  068F  0870               	movf	?_I2C_Master_Read,w
  1280  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0692  00DD               	movwf	??_main
  1283  0693  085D               	movf	??_main,w
  1284  0694  00AF               	movwf	_xls
  1285                           
  1286                           ;proyecto1master.c: 136:         xms = I2C_Master_Read(1)<<8;
  1287  0695  3001               	movlw	1
  1288  0696  00F0               	movwf	I2C_Master_Read@a
  1289  0697  3000               	movlw	0
  1290  0698  00F1               	movwf	I2C_Master_Read@a+1
  1291  0699  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1292  069E  0870               	movf	?_I2C_Master_Read,w
  1293  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1294  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1295  06A1  00DE               	movwf	??_main+1
  1296  06A2  01DD               	clrf	??_main
  1297  06A3  085D               	movf	??_main,w
  1298  06A4  00A6               	movwf	_xms
  1299  06A5  085E               	movf	??_main+1,w
  1300  06A6  00A7               	movwf	_xms+1
  1301                           
  1302                           ;proyecto1master.c: 137:         yls = I2C_Master_Read(1);
  1303  06A7  3001               	movlw	1
  1304  06A8  00F0               	movwf	I2C_Master_Read@a
  1305  06A9  3000               	movlw	0
  1306  06AA  00F1               	movwf	I2C_Master_Read@a+1
  1307  06AB  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1308  06B0  0870               	movf	?_I2C_Master_Read,w
  1309  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1310  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1311  06B3  00DD               	movwf	??_main
  1312  06B4  085D               	movf	??_main,w
  1313  06B5  00AE               	movwf	_yls
  1314                           
  1315                           ;proyecto1master.c: 138:         yms = I2C_Master_Read(1)<<8;
  1316  06B6  3001               	movlw	1
  1317  06B7  00F0               	movwf	I2C_Master_Read@a
  1318  06B8  3000               	movlw	0
  1319  06B9  00F1               	movwf	I2C_Master_Read@a+1
  1320  06BA  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1321  06BF  0870               	movf	?_I2C_Master_Read,w
  1322  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1323  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1324  06C2  00DE               	movwf	??_main+1
  1325  06C3  01DD               	clrf	??_main
  1326  06C4  085D               	movf	??_main,w
  1327  06C5  00A4               	movwf	_yms
  1328  06C6  085E               	movf	??_main+1,w
  1329  06C7  00A5               	movwf	_yms+1
  1330                           
  1331                           ;proyecto1master.c: 139:         z1 = I2C_Master_Read(1);
  1332  06C8  3001               	movlw	1
  1333  06C9  00F0               	movwf	I2C_Master_Read@a
  1334  06CA  3000               	movlw	0
  1335  06CB  00F1               	movwf	I2C_Master_Read@a+1
  1336  06CC  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1337  06D1  0870               	movf	?_I2C_Master_Read,w
  1338  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1339  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1340  06D4  00DD               	movwf	??_main
  1341  06D5  085D               	movf	??_main,w
  1342  06D6  00AD               	movwf	_z1
  1343                           
  1344                           ;proyecto1master.c: 140:         z1 = I2C_Master_Read(1);
  1345  06D7  3001               	movlw	1
  1346  06D8  00F0               	movwf	I2C_Master_Read@a
  1347  06D9  3000               	movlw	0
  1348  06DA  00F1               	movwf	I2C_Master_Read@a+1
  1349  06DB  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1350  06E0  0870               	movf	?_I2C_Master_Read,w
  1351  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1352  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1353  06E3  00DD               	movwf	??_main
  1354  06E4  085D               	movf	??_main,w
  1355  06E5  00AD               	movwf	_z1
  1356                           
  1357                           ;proyecto1master.c: 141:         z1 = I2C_Master_Read(0);
  1358  06E6  3000               	movlw	0
  1359  06E7  00F0               	movwf	I2C_Master_Read@a
  1360  06E8  00F1               	movwf	I2C_Master_Read@a+1
  1361  06E9  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Read
  1362  06EE  0870               	movf	?_I2C_Master_Read,w
  1363  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1364  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1365  06F1  00DD               	movwf	??_main
  1366  06F2  085D               	movf	??_main,w
  1367  06F3  00AD               	movwf	_z1
  1368                           
  1369                           ;proyecto1master.c: 142:         I2C_Master_Stop();
  1370  06F4  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  1371  06F9                     l1791:
  1372                           
  1373                           ;proyecto1master.c: 143:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1374  06F9  3082               	movlw	130
  1375  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1376  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1377  06FC  00DE               	movwf	??_main+1
  1378  06FD  30DD               	movlw	221
  1379  06FE  00DD               	movwf	??_main
  1380  06FF                     u1187:
  1381  06FF  0BDD               	decfsz	??_main,f
  1382  0700  2EFF               	goto	u1187
  1383  0701  0BDE               	decfsz	??_main+1,f
  1384  0702  2EFF               	goto	u1187
  1385  0703                     l1793:
  1386                           
  1387                           ;proyecto1master.c: 144:         x = xms | xls;
  1388  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0705  0826               	movf	_xms,w
  1391  0706  042F               	iorwf	_xls,w
  1392  0707  00AA               	movwf	_x
  1393  0708  0827               	movf	_xms+1,w
  1394  0709  00AB               	movwf	_x+1
  1395  070A                     l1795:
  1396                           
  1397                           ;proyecto1master.c: 145:         y = yms | yls;
  1398  070A  0824               	movf	_yms,w
  1399  070B  042E               	iorwf	_yls,w
  1400  070C  00A8               	movwf	_y
  1401  070D  0825               	movf	_yms+1,w
  1402  070E  00A9               	movwf	_y+1
  1403  070F                     l1797:
  1404                           
  1405                           ;proyecto1master.c: 146:         if (y <= 900 && x > 0){
  1406  070F  0829               	movf	_y+1,w
  1407  0710  3A80               	xorlw	128
  1408  0711  00FF               	movwf	btemp+1
  1409  0712  3083               	movlw	131
  1410  0713  027F               	subwf	btemp+1,w
  1411  0714  1D03               	skipz
  1412  0715  2F18               	goto	u1025
  1413  0716  3085               	movlw	133
  1414  0717  0228               	subwf	_y,w
  1415  0718                     u1025:
  1416  0718  1803               	skipnc
  1417  0719  2F1B               	goto	u1021
  1418  071A  2F1C               	goto	u1020
  1419  071B                     u1021:
  1420  071B  2F31               	goto	l1803
  1421  071C                     u1020:
  1422  071C                     l1799:
  1423  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1424  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1425  071E  082B               	movf	_x+1,w
  1426  071F  3A80               	xorlw	128
  1427  0720  00FF               	movwf	btemp+1
  1428  0721  3080               	movlw	128
  1429  0722  027F               	subwf	btemp+1,w
  1430  0723  1D03               	skipz
  1431  0724  2F27               	goto	u1035
  1432  0725  3001               	movlw	1
  1433  0726  022A               	subwf	_x,w
  1434  0727                     u1035:
  1435  0727  1C03               	skipc
  1436  0728  2F2A               	goto	u1031
  1437  0729  2F2B               	goto	u1030
  1438  072A                     u1031:
  1439  072A  2F31               	goto	l1803
  1440  072B                     u1030:
  1441  072B                     l1801:
  1442                           
  1443                           ;proyecto1master.c: 147:             mapping = 192;
  1444  072B  30C0               	movlw	192
  1445  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1446  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1447  072E  00DD               	movwf	??_main
  1448  072F  085D               	movf	??_main,w
  1449  0730  00AC               	movwf	_mapping
  1450  0731                     l1803:
  1451                           
  1452                           ;proyecto1master.c: 149:         if ((y > 900 && x > 0) || (y > 900 && x < 0)){
  1453  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0733  0829               	movf	_y+1,w
  1456  0734  3A80               	xorlw	128
  1457  0735  00FF               	movwf	btemp+1
  1458  0736  3083               	movlw	131
  1459  0737  027F               	subwf	btemp+1,w
  1460  0738  1D03               	skipz
  1461  0739  2F3C               	goto	u1045
  1462  073A  3085               	movlw	133
  1463  073B  0228               	subwf	_y,w
  1464  073C                     u1045:
  1465  073C  1C03               	skipc
  1466  073D  2F3F               	goto	u1041
  1467  073E  2F40               	goto	u1040
  1468  073F                     u1041:
  1469  073F  2F4F               	goto	l1807
  1470  0740                     u1040:
  1471  0740                     l1805:
  1472  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0742  082B               	movf	_x+1,w
  1475  0743  3A80               	xorlw	128
  1476  0744  00FF               	movwf	btemp+1
  1477  0745  3080               	movlw	128
  1478  0746  027F               	subwf	btemp+1,w
  1479  0747  1D03               	skipz
  1480  0748  2F4B               	goto	u1055
  1481  0749  3001               	movlw	1
  1482  074A  022A               	subwf	_x,w
  1483  074B                     u1055:
  1484  074B  1803               	skipnc
  1485  074C  2F4E               	goto	u1051
  1486  074D  2F4F               	goto	u1050
  1487  074E                     u1051:
  1488  074E  2F64               	goto	l1811
  1489  074F                     u1050:
  1490  074F                     l1807:
  1491  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0751  0829               	movf	_y+1,w
  1494  0752  3A80               	xorlw	128
  1495  0753  00FF               	movwf	btemp+1
  1496  0754  3083               	movlw	131
  1497  0755  027F               	subwf	btemp+1,w
  1498  0756  1D03               	skipz
  1499  0757  2F5A               	goto	u1065
  1500  0758  3085               	movlw	133
  1501  0759  0228               	subwf	_y,w
  1502  075A                     u1065:
  1503  075A  1C03               	skipc
  1504  075B  2F5D               	goto	u1061
  1505  075C  2F5E               	goto	u1060
  1506  075D                     u1061:
  1507  075D  2F6A               	goto	l1813
  1508  075E                     u1060:
  1509  075E                     l1809:
  1510  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1511  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0760  1FAB               	btfss	_x+1,7
  1513  0761  2F63               	goto	u1071
  1514  0762  2F64               	goto	u1070
  1515  0763                     u1071:
  1516  0763  2F6A               	goto	l1813
  1517  0764                     u1070:
  1518  0764                     l1811:
  1519                           
  1520                           ;proyecto1master.c: 150:             mapping = 128;}
  1521  0764  3080               	movlw	128
  1522  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0767  00DD               	movwf	??_main
  1525  0768  085D               	movf	??_main,w
  1526  0769  00AC               	movwf	_mapping
  1527  076A                     l1813:
  1528                           
  1529                           ;proyecto1master.c: 151:         if (y <= 900 && x < 0){
  1530  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1531  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1532  076C  0829               	movf	_y+1,w
  1533  076D  3A80               	xorlw	128
  1534  076E  00FF               	movwf	btemp+1
  1535  076F  3083               	movlw	131
  1536  0770  027F               	subwf	btemp+1,w
  1537  0771  1D03               	skipz
  1538  0772  2F75               	goto	u1085
  1539  0773  3085               	movlw	133
  1540  0774  0228               	subwf	_y,w
  1541  0775                     u1085:
  1542  0775  1803               	skipnc
  1543  0776  2F78               	goto	u1081
  1544  0777  2F79               	goto	u1080
  1545  0778                     u1081:
  1546  0778  2F83               	goto	l1819
  1547  0779                     u1080:
  1548  0779                     l1815:
  1549  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1550  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1551  077B  1FAB               	btfss	_x+1,7
  1552  077C  2F7E               	goto	u1091
  1553  077D  2F7F               	goto	u1090
  1554  077E                     u1091:
  1555  077E  2F83               	goto	l1819
  1556  077F                     u1090:
  1557  077F                     l1817:
  1558                           
  1559                           ;proyecto1master.c: 152:             mapping = 64;
  1560  077F  3040               	movlw	64
  1561  0780  00DD               	movwf	??_main
  1562  0781  085D               	movf	??_main,w
  1563  0782  00AC               	movwf	_mapping
  1564  0783                     l1819:
  1565                           
  1566                           ;proyecto1master.c: 154:         if (y < 0 && x < 0){
  1567  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0785  1FA9               	btfss	_y+1,7
  1570  0786  2F88               	goto	u1101
  1571  0787  2F89               	goto	u1100
  1572  0788                     u1101:
  1573  0788  2F8E               	goto	l1825
  1574  0789                     u1100:
  1575  0789                     l1821:
  1576  0789  1FAB               	btfss	_x+1,7
  1577  078A  2F8C               	goto	u1111
  1578  078B  2F8D               	goto	u1110
  1579  078C                     u1111:
  1580  078C  2F8E               	goto	l1825
  1581  078D                     u1110:
  1582  078D                     l1823:
  1583                           
  1584                           ;proyecto1master.c: 155:             mapping = 0;
  1585  078D  01AC               	clrf	_mapping
  1586  078E                     l1825:
  1587                           
  1588                           ;proyecto1master.c: 157:         if (y < 0 && x > 0){
  1589  078E  1FA9               	btfss	_y+1,7
  1590  078F  2F91               	goto	u1121
  1591  0790  2F92               	goto	u1120
  1592  0791                     u1121:
  1593  0791  2FA5               	goto	l1831
  1594  0792                     u1120:
  1595  0792                     l1827:
  1596  0792  082B               	movf	_x+1,w
  1597  0793  3A80               	xorlw	128
  1598  0794  00FF               	movwf	btemp+1
  1599  0795  3080               	movlw	128
  1600  0796  027F               	subwf	btemp+1,w
  1601  0797  1D03               	skipz
  1602  0798  2F9B               	goto	u1135
  1603  0799  3001               	movlw	1
  1604  079A  022A               	subwf	_x,w
  1605  079B                     u1135:
  1606  079B  1C03               	skipc
  1607  079C  2F9E               	goto	u1131
  1608  079D  2F9F               	goto	u1130
  1609  079E                     u1131:
  1610  079E  2FA5               	goto	l1831
  1611  079F                     u1130:
  1612  079F                     l1829:
  1613                           
  1614                           ;proyecto1master.c: 158:             mapping = 255;
  1615  079F  30FF               	movlw	255
  1616  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1617  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1618  07A2  00DD               	movwf	??_main
  1619  07A3  085D               	movf	??_main,w
  1620  07A4  00AC               	movwf	_mapping
  1621  07A5                     l1831:
  1622                           
  1623                           ;proyecto1master.c: 161:         sprintf(volt, "%d %c%c %d %d %d\n", s1, L, R, M, y, map
      +                          ping);
  1624  07A5  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1625  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1626  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1627  07A8  00DD               	movwf	??_main
  1628  07A9  085D               	movf	??_main,w
  1629  07AA  00C6               	movwf	sprintf@f
  1630  07AB  0834               	movf	_s1,w
  1631  07AC  00DE               	movwf	??_main+1
  1632  07AD  01DF               	clrf	??_main+2
  1633  07AE  085E               	movf	??_main+1,w
  1634  07AF  00C7               	movwf	?_sprintf+1
  1635  07B0  085F               	movf	??_main+2,w
  1636  07B1  00C8               	movwf	?_sprintf+2
  1637  07B2  0832               	movf	_L,w
  1638  07B3  00E0               	movwf	??_main+3
  1639  07B4  01E1               	clrf	??_main+4
  1640  07B5  0860               	movf	??_main+3,w
  1641  07B6  00C9               	movwf	?_sprintf+3
  1642  07B7  0861               	movf	??_main+4,w
  1643  07B8  00CA               	movwf	?_sprintf+4
  1644  07B9  0831               	movf	_R,w
  1645  07BA  00E2               	movwf	??_main+5
  1646  07BB  01E3               	clrf	??_main+6
  1647  07BC  0862               	movf	??_main+5,w
  1648  07BD  00CB               	movwf	?_sprintf+5
  1649  07BE  0863               	movf	??_main+6,w
  1650  07BF  00CC               	movwf	?_sprintf+6
  1651  07C0  0830               	movf	_M,w
  1652  07C1  00E4               	movwf	??_main+7
  1653  07C2  01E5               	clrf	??_main+8
  1654  07C3  0864               	movf	??_main+7,w
  1655  07C4  00CD               	movwf	?_sprintf+7
  1656  07C5  0865               	movf	??_main+8,w
  1657  07C6  00CE               	movwf	?_sprintf+8
  1658  07C7  0829               	movf	_y+1,w
  1659  07C8  00D0               	movwf	?_sprintf+10
  1660  07C9  0828               	movf	_y,w
  1661  07CA  00CF               	movwf	?_sprintf+9
  1662  07CB  082C               	movf	_mapping,w
  1663  07CC  00E6               	movwf	??_main+9
  1664  07CD  01E7               	clrf	??_main+10
  1665  07CE  0866               	movf	??_main+9,w
  1666  07CF  00D1               	movwf	?_sprintf+11
  1667  07D0  0867               	movf	??_main+10,w
  1668  07D1  00D2               	movwf	?_sprintf+12
  1669  07D2  3036               	movlw	(low (_volt| 0))& (0+255)
  1670  07D3  120A  118A  2471  120A  118A  	fcall	_sprintf
  1671  07D8                     l1833:
  1672                           
  1673                           ;proyecto1master.c: 162:         enviocadena(volt);
  1674  07D8  3036               	movlw	(low (_volt| 0))& (0+255)
  1675  07D9  120A  118A  216C  120A  118A  	fcall	_enviocadena
  1676  07DE                     l1835:
  1677                           
  1678                           ;proyecto1master.c: 163:         Lcd_Set_Cursor(2,1);
  1679  07DE  01F4               	clrf	Lcd_Set_Cursor@b
  1680  07DF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1681  07E0  3002               	movlw	2
  1682  07E1  120A  118A  218B  120A  118A  	fcall	_Lcd_Set_Cursor
  1683  07E6                     l1837:
  1684                           
  1685                           ;proyecto1master.c: 164:         Lcd_Write_String(volt);
  1686  07E6  3036               	movlw	(low (_volt| 0))& (0+255)
  1687  07E7  00F3               	movwf	Lcd_Write_String@a
  1688  07E8  3000               	movlw	0
  1689  07E9  00F4               	movwf	Lcd_Write_String@a+1
  1690  07EA  120A  118A  224F  120A  118A  	fcall	_Lcd_Write_String
  1691  07EF  2D9E               	goto	l1757
  1692  07F0  120A  118A  2800   	ljmp	start
  1693  07F3                     __end_of_main:
  1694                           
  1695                           	psect	text1
  1696  0471                     __ptext1:	
  1697 ;; *************** function _sprintf *****************
  1698 ;; Defined at:
  1699 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  sp              1    wreg     PTR unsigned char 
  1702 ;;		 -> volt(16), 
  1703 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1704 ;;		 -> STR_1(18), 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1707 ;;		 -> volt(16), 
  1708 ;;  tmpval          4    0        struct .
  1709 ;;  val             2   19[BANK0 ] unsigned int 
  1710 ;;  cp              2    0        PTR const unsigned char 
  1711 ;;  len             2    0        unsigned int 
  1712 ;;  c               1   22[BANK0 ] unsigned char 
  1713 ;;  ap              1   18[BANK0 ] PTR void [1]
  1714 ;;		 -> ?_sprintf(2), 
  1715 ;;  prec            1   17[BANK0 ] char 
  1716 ;;  flag            1   16[BANK0 ] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    0[BANK0 ] int 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0      13       0       0       0
  1727 ;;      Locals:         0       7       0       0       0
  1728 ;;      Temps:          0       3       0       0       0
  1729 ;;      Totals:         0      23       0       0       0
  1730 ;;Total ram usage:       23 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    1
  1733 ;; This function calls:
  1734 ;;		___lwdiv
  1735 ;;		___lwmod
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _sprintf
  1743  0471                     _sprintf:
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1747                           ;sprintf@sp stored from wreg
  1748  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0473  00DB               	movwf	sprintf@sp
  1751  0474                     l1667:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1754  0474  3047               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1755  0475  00D3               	movwf	??_sprintf
  1756  0476  0853               	movf	??_sprintf,w
  1757  0477  00D8               	movwf	sprintf@ap
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1760  0478  2D5D               	goto	l1725
  1761  0479                     l1669:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1764  0479  3025               	movlw	37
  1765  047A  065C               	xorwf	sprintf@c,w
  1766  047B  1903               	btfsc	3,2
  1767  047C  2C7E               	goto	u891
  1768  047D  2C7F               	goto	u890
  1769  047E                     u891:
  1770  047E  2C8B               	goto	l1675
  1771  047F                     u890:
  1772  047F                     l1671:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1775  047F  085C               	movf	sprintf@c,w
  1776  0480  00D3               	movwf	??_sprintf
  1777  0481  085B               	movf	sprintf@sp,w
  1778  0482  0084               	movwf	4
  1779  0483  0853               	movf	??_sprintf,w
  1780  0484  1383               	bcf	3,7	;select IRP bank0
  1781  0485  0080               	movwf	0
  1782  0486                     l1673:
  1783  0486  3001               	movlw	1
  1784  0487  00D3               	movwf	??_sprintf
  1785  0488  0853               	movf	??_sprintf,w
  1786  0489  07DB               	addwf	sprintf@sp,f
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1789  048A  2D5D               	goto	l1725
  1790  048B                     l1675:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1793  048B  01D6               	clrf	sprintf@flag
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1796  048C  2CA4               	goto	l1685
  1797  048D                     l1677:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1800  048D  0858               	movf	sprintf@ap,w
  1801  048E  0084               	movwf	4
  1802  048F  1383               	bcf	3,7	;select IRP bank0
  1803  0490  0800               	movf	0,w
  1804  0491  00D3               	movwf	??_sprintf
  1805  0492  0853               	movf	??_sprintf,w
  1806  0493  00DC               	movwf	sprintf@c
  1807  0494                     l1679:
  1808  0494  3002               	movlw	2
  1809  0495  00D3               	movwf	??_sprintf
  1810  0496  0853               	movf	??_sprintf,w
  1811  0497  07D8               	addwf	sprintf@ap,f
  1812  0498                     l1681:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1815  0498  085C               	movf	sprintf@c,w
  1816  0499  00D3               	movwf	??_sprintf
  1817  049A  085B               	movf	sprintf@sp,w
  1818  049B  0084               	movwf	4
  1819  049C  0853               	movf	??_sprintf,w
  1820  049D  1383               	bcf	3,7	;select IRP bank0
  1821  049E  0080               	movwf	0
  1822  049F  3001               	movlw	1
  1823  04A0  00D3               	movwf	??_sprintf
  1824  04A1  0853               	movf	??_sprintf,w
  1825  04A2  07DB               	addwf	sprintf@sp,f
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 836:    continue;
  1828  04A3  2D5D               	goto	l1725
  1829  04A4                     l1685:
  1830  04A4  3001               	movlw	1
  1831  04A5  07C6               	addwf	sprintf@f,f
  1832  04A6  30FF               	movlw	-1
  1833  04A7  0746               	addwf	sprintf@f,w
  1834  04A8  0084               	movwf	4
  1835  04A9  120A  118A  200D  120A  118A  	fcall	stringdir
  1836  04AE  00DC               	movwf	sprintf@c
  1837  04AF  00D3               	movwf	??_sprintf
  1838  04B0  01D4               	clrf	??_sprintf+1
  1839                           
  1840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1841                           ; Switch size 1, requested type "simple"
  1842                           ; Number of cases is 1, Range of values is 0 to 0
  1843                           ; switch strategies available:
  1844                           ; Name         Instructions Cycles
  1845                           ; simple_byte            4     3 (average)
  1846                           ; direct_byte           11     8 (fixed)
  1847                           ; jumptable            260     6 (fixed)
  1848                           ;	Chosen strategy is simple_byte
  1849  04B1  0854               	movf	??_sprintf+1,w
  1850  04B2  3A00               	xorlw	0	; case 0
  1851  04B3  1903               	skipnz
  1852  04B4  2CB6               	goto	l1895
  1853  04B5  2C98               	goto	l1681
  1854  04B6                     l1895:
  1855                           
  1856                           ; Switch size 1, requested type "simple"
  1857                           ; Number of cases is 4, Range of values is 0 to 105
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; simple_byte           13     7 (average)
  1861                           ; jumptable            260     6 (fixed)
  1862                           ;	Chosen strategy is simple_byte
  1863  04B6  0853               	movf	??_sprintf,w
  1864  04B7  3A00               	xorlw	0	; case 0
  1865  04B8  1903               	skipnz
  1866  04B9  2D6F               	goto	l1727
  1867  04BA  3A63               	xorlw	99	; case 99
  1868  04BB  1903               	skipnz
  1869  04BC  2C8D               	goto	l1677
  1870  04BD  3A07               	xorlw	7	; case 100
  1871  04BE  1903               	skipnz
  1872  04BF  2CC4               	goto	l1687
  1873  04C0  3A0D               	xorlw	13	; case 105
  1874  04C1  1903               	skipnz
  1875  04C2  2CC4               	goto	l1687
  1876  04C3  2C98               	goto	l1681
  1877  04C4                     l1687:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1880  04C4  0858               	movf	sprintf@ap,w
  1881  04C5  0084               	movwf	4
  1882  04C6  1383               	bcf	3,7	;select IRP bank0
  1883  04C7  0800               	movf	0,w
  1884  04C8  00D9               	movwf	sprintf@val
  1885  04C9  0A84               	incf	4,f
  1886  04CA  0800               	movf	0,w
  1887  04CB  00DA               	movwf	sprintf@val+1
  1888  04CC                     l1689:
  1889  04CC  3002               	movlw	2
  1890  04CD  00D3               	movwf	??_sprintf
  1891  04CE  0853               	movf	??_sprintf,w
  1892  04CF  07D8               	addwf	sprintf@ap,f
  1893  04D0                     l1691:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1896  04D0  1FDA               	btfss	sprintf@val+1,7
  1897  04D1  2CD3               	goto	u901
  1898  04D2  2CD4               	goto	u900
  1899  04D3                     u901:
  1900  04D3  2CDD               	goto	l1697
  1901  04D4                     u900:
  1902  04D4                     l1693:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1905  04D4  3003               	movlw	3
  1906  04D5  00D3               	movwf	??_sprintf
  1907  04D6  0853               	movf	??_sprintf,w
  1908  04D7  04D6               	iorwf	sprintf@flag,f
  1909  04D8                     l1695:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1912  04D8  09D9               	comf	sprintf@val,f
  1913  04D9  09DA               	comf	sprintf@val+1,f
  1914  04DA  0AD9               	incf	sprintf@val,f
  1915  04DB  1903               	skipnz
  1916  04DC  0ADA               	incf	sprintf@val+1,f
  1917  04DD                     l1697:
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1920  04DD  01DC               	clrf	sprintf@c
  1921  04DE  0ADC               	incf	sprintf@c,f
  1922  04DF                     l1703:
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1925  04DF  085C               	movf	sprintf@c,w
  1926  04E0  00D3               	movwf	??_sprintf
  1927  04E1  0753               	addwf	??_sprintf,w
  1928  04E2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1929  04E3  0084               	movwf	4
  1930  04E4  120A  118A  200D  120A  118A  	fcall	stringdir
  1931  04E9  00D4               	movwf	??_sprintf+1
  1932  04EA  120A  118A  200D  120A  118A  	fcall	stringdir
  1933  04EF  00D5               	movwf	??_sprintf+2
  1934  04F0  0855               	movf	??_sprintf+2,w
  1935  04F1  025A               	subwf	sprintf@val+1,w
  1936  04F2  1D03               	skipz
  1937  04F3  2CF6               	goto	u915
  1938  04F4  0854               	movf	??_sprintf+1,w
  1939  04F5  0259               	subwf	sprintf@val,w
  1940  04F6                     u915:
  1941  04F6  1803               	skipnc
  1942  04F7  2CF9               	goto	u911
  1943  04F8  2CFA               	goto	u910
  1944  04F9                     u911:
  1945  04F9  2CFB               	goto	l1707
  1946  04FA                     u910:
  1947  04FA  2D05               	goto	l1709
  1948  04FB                     l1707:
  1949  04FB  3001               	movlw	1
  1950  04FC  00D3               	movwf	??_sprintf
  1951  04FD  0853               	movf	??_sprintf,w
  1952  04FE  07DC               	addwf	sprintf@c,f
  1953  04FF  3005               	movlw	5
  1954  0500  065C               	xorwf	sprintf@c,w
  1955  0501  1D03               	btfss	3,2
  1956  0502  2D04               	goto	u921
  1957  0503  2D05               	goto	u920
  1958  0504                     u921:
  1959  0504  2CDF               	goto	l1703
  1960  0505                     u920:
  1961  0505                     l1709:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1964  0505  0856               	movf	sprintf@flag,w
  1965  0506  3903               	andlw	3
  1966  0507  1903               	btfsc	3,2
  1967  0508  2D0A               	goto	u931
  1968  0509  2D0B               	goto	u930
  1969  050A                     u931:
  1970  050A  2D16               	goto	l1715
  1971  050B                     u930:
  1972  050B                     l1711:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1975  050B  302D               	movlw	45
  1976  050C  00D3               	movwf	??_sprintf
  1977  050D  085B               	movf	sprintf@sp,w
  1978  050E  0084               	movwf	4
  1979  050F  0853               	movf	??_sprintf,w
  1980  0510  1383               	bcf	3,7	;select IRP bank0
  1981  0511  0080               	movwf	0
  1982  0512                     l1713:
  1983  0512  3001               	movlw	1
  1984  0513  00D3               	movwf	??_sprintf
  1985  0514  0853               	movf	??_sprintf,w
  1986  0515  07DB               	addwf	sprintf@sp,f
  1987  0516                     l1715:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1990  0516  085C               	movf	sprintf@c,w
  1991  0517  00D3               	movwf	??_sprintf
  1992  0518  0853               	movf	??_sprintf,w
  1993  0519  00D7               	movwf	sprintf@prec
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1996  051A  2D54               	goto	l1723
  1997  051B                     l1717:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2000  051B  300A               	movlw	10
  2001  051C  00F8               	movwf	___lwmod@divisor
  2002  051D  3000               	movlw	0
  2003  051E  00F9               	movwf	___lwmod@divisor+1
  2004  051F  0857               	movf	sprintf@prec,w
  2005  0520  00D3               	movwf	??_sprintf
  2006  0521  0753               	addwf	??_sprintf,w
  2007  0522  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2008  0523  0084               	movwf	4
  2009  0524  120A  118A  200D  120A  118A  	fcall	stringdir
  2010  0529  00F0               	movwf	___lwdiv@divisor
  2011  052A  120A  118A  200D  120A  118A  	fcall	stringdir
  2012  052F  00F1               	movwf	___lwdiv@divisor+1
  2013  0530  085A               	movf	sprintf@val+1,w
  2014  0531  00F3               	movwf	___lwdiv@dividend+1
  2015  0532  0859               	movf	sprintf@val,w
  2016  0533  00F2               	movwf	___lwdiv@dividend
  2017  0534  120A  118A  2291  120A  118A  	fcall	___lwdiv
  2018  0539  0871               	movf	?___lwdiv+1,w
  2019  053A  00FB               	movwf	___lwmod@dividend+1
  2020  053B  0870               	movf	?___lwdiv,w
  2021  053C  00FA               	movwf	___lwmod@dividend
  2022  053D  120A  118A  2215  120A  118A  	fcall	___lwmod
  2023  0542  0878               	movf	?___lwmod,w
  2024  0543  3E30               	addlw	48
  2025  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0546  00D4               	movwf	??_sprintf+1
  2028  0547  0854               	movf	??_sprintf+1,w
  2029  0548  00DC               	movwf	sprintf@c
  2030  0549                     l1719:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2033  0549  085C               	movf	sprintf@c,w
  2034  054A  00D3               	movwf	??_sprintf
  2035  054B  085B               	movf	sprintf@sp,w
  2036  054C  0084               	movwf	4
  2037  054D  0853               	movf	??_sprintf,w
  2038  054E  1383               	bcf	3,7	;select IRP bank0
  2039  054F  0080               	movwf	0
  2040  0550                     l1721:
  2041  0550  3001               	movlw	1
  2042  0551  00D3               	movwf	??_sprintf
  2043  0552  0853               	movf	??_sprintf,w
  2044  0553  07DB               	addwf	sprintf@sp,f
  2045  0554                     l1723:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2048  0554  30FF               	movlw	255
  2049  0555  00D3               	movwf	??_sprintf
  2050  0556  0853               	movf	??_sprintf,w
  2051  0557  07D7               	addwf	sprintf@prec,f
  2052  0558  0A57               	incf	sprintf@prec,w
  2053  0559  1D03               	btfss	3,2
  2054  055A  2D5C               	goto	u941
  2055  055B  2D5D               	goto	u940
  2056  055C                     u941:
  2057  055C  2D1B               	goto	l1717
  2058  055D                     u940:
  2059  055D                     l1725:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2062  055D  3001               	movlw	1
  2063  055E  07C6               	addwf	sprintf@f,f
  2064  055F  30FF               	movlw	-1
  2065  0560  0746               	addwf	sprintf@f,w
  2066  0561  0084               	movwf	4
  2067  0562  120A  118A  200D  120A  118A  	fcall	stringdir
  2068  0567  00D3               	movwf	??_sprintf
  2069  0568  0853               	movf	??_sprintf,w
  2070  0569  00DC               	movwf	sprintf@c
  2071  056A  085C               	movf	sprintf@c,w
  2072  056B  1D03               	btfss	3,2
  2073  056C  2D6E               	goto	u951
  2074  056D  2D6F               	goto	u950
  2075  056E                     u951:
  2076  056E  2C79               	goto	l1669
  2077  056F                     u950:
  2078  056F                     l1727:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2081  056F  085B               	movf	sprintf@sp,w
  2082  0570  0084               	movwf	4
  2083  0571  1383               	bcf	3,7	;select IRP bank0
  2084  0572  0180               	clrf	0
  2085  0573                     l375:
  2086  0573  0008               	return
  2087  0574                     __end_of_sprintf:
  2088                           
  2089                           	psect	text2
  2090  0215                     __ptext2:	
  2091 ;; *************** function ___lwmod *****************
  2092 ;; Defined at:
  2093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  divisor         2    8[COMMON] unsigned int 
  2096 ;;  dividend        2   10[COMMON] unsigned int 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  counter         1   13[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    8[COMMON] unsigned int 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         4       0       0       0       0
  2109 ;;      Locals:         1       0       0       0       0
  2110 ;;      Temps:          1       0       0       0       0
  2111 ;;      Totals:         6       0       0       0       0
  2112 ;;Total ram usage:        6 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_sprintf
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function ___lwmod
  2123  0215                     ___lwmod:
  2124  0215                     l1539:	
  2125                           ;incstack = 0
  2126                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2127                           
  2128  0215  0878               	movf	___lwmod@divisor,w
  2129  0216  0479               	iorwf	___lwmod@divisor+1,w
  2130  0217  1903               	btfsc	3,2
  2131  0218  2A1A               	goto	u821
  2132  0219  2A1B               	goto	u820
  2133  021A                     u821:
  2134  021A  2A4A               	goto	l1557
  2135  021B                     u820:
  2136  021B                     l1541:
  2137  021B  01FD               	clrf	___lwmod@counter
  2138  021C  0AFD               	incf	___lwmod@counter,f
  2139  021D  2A29               	goto	l1547
  2140  021E                     l1543:
  2141  021E  3001               	movlw	1
  2142  021F                     u835:
  2143  021F  1003               	clrc
  2144  0220  0DF8               	rlf	___lwmod@divisor,f
  2145  0221  0DF9               	rlf	___lwmod@divisor+1,f
  2146  0222  3EFF               	addlw	-1
  2147  0223  1D03               	skipz
  2148  0224  2A1F               	goto	u835
  2149  0225                     l1545:
  2150  0225  3001               	movlw	1
  2151  0226  00FC               	movwf	??___lwmod
  2152  0227  087C               	movf	??___lwmod,w
  2153  0228  07FD               	addwf	___lwmod@counter,f
  2154  0229                     l1547:
  2155  0229  1FF9               	btfss	___lwmod@divisor+1,7
  2156  022A  2A2C               	goto	u841
  2157  022B  2A2D               	goto	u840
  2158  022C                     u841:
  2159  022C  2A1E               	goto	l1543
  2160  022D                     u840:
  2161  022D                     l1549:
  2162  022D  0879               	movf	___lwmod@divisor+1,w
  2163  022E  027B               	subwf	___lwmod@dividend+1,w
  2164  022F  1D03               	skipz
  2165  0230  2A33               	goto	u855
  2166  0231  0878               	movf	___lwmod@divisor,w
  2167  0232  027A               	subwf	___lwmod@dividend,w
  2168  0233                     u855:
  2169  0233  1C03               	skipc
  2170  0234  2A36               	goto	u851
  2171  0235  2A37               	goto	u850
  2172  0236                     u851:
  2173  0236  2A3D               	goto	l1553
  2174  0237                     u850:
  2175  0237                     l1551:
  2176  0237  0878               	movf	___lwmod@divisor,w
  2177  0238  02FA               	subwf	___lwmod@dividend,f
  2178  0239  0879               	movf	___lwmod@divisor+1,w
  2179  023A  1C03               	skipc
  2180  023B  03FB               	decf	___lwmod@dividend+1,f
  2181  023C  02FB               	subwf	___lwmod@dividend+1,f
  2182  023D                     l1553:
  2183  023D  3001               	movlw	1
  2184  023E                     u865:
  2185  023E  1003               	clrc
  2186  023F  0CF9               	rrf	___lwmod@divisor+1,f
  2187  0240  0CF8               	rrf	___lwmod@divisor,f
  2188  0241  3EFF               	addlw	-1
  2189  0242  1D03               	skipz
  2190  0243  2A3E               	goto	u865
  2191  0244                     l1555:
  2192  0244  3001               	movlw	1
  2193  0245  02FD               	subwf	___lwmod@counter,f
  2194  0246  1D03               	btfss	3,2
  2195  0247  2A49               	goto	u871
  2196  0248  2A4A               	goto	u870
  2197  0249                     u871:
  2198  0249  2A2D               	goto	l1549
  2199  024A                     u870:
  2200  024A                     l1557:
  2201  024A  087B               	movf	___lwmod@dividend+1,w
  2202  024B  00F9               	movwf	?___lwmod+1
  2203  024C  087A               	movf	___lwmod@dividend,w
  2204  024D  00F8               	movwf	?___lwmod
  2205  024E                     l661:
  2206  024E  0008               	return
  2207  024F                     __end_of___lwmod:
  2208                           
  2209                           	psect	text3
  2210  0291                     __ptext3:	
  2211 ;; *************** function ___lwdiv *****************
  2212 ;; Defined at:
  2213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  divisor         2    0[COMMON] unsigned int 
  2216 ;;  dividend        2    2[COMMON] unsigned int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  quotient        2    5[COMMON] unsigned int 
  2219 ;;  counter         1    7[COMMON] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2    0[COMMON] unsigned int 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         4       0       0       0       0
  2230 ;;      Locals:         3       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0
  2232 ;;      Totals:         8       0       0       0       0
  2233 ;;Total ram usage:        8 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_sprintf
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function ___lwdiv
  2244  0291                     ___lwdiv:
  2245  0291                     l1513:	
  2246                           ;incstack = 0
  2247                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2248                           
  2249  0291  01F5               	clrf	___lwdiv@quotient
  2250  0292  01F6               	clrf	___lwdiv@quotient+1
  2251  0293                     l1515:
  2252  0293  0870               	movf	___lwdiv@divisor,w
  2253  0294  0471               	iorwf	___lwdiv@divisor+1,w
  2254  0295  1903               	btfsc	3,2
  2255  0296  2A98               	goto	u751
  2256  0297  2A99               	goto	u750
  2257  0298                     u751:
  2258  0298  2AD0               	goto	l1535
  2259  0299                     u750:
  2260  0299                     l1517:
  2261  0299  01F7               	clrf	___lwdiv@counter
  2262  029A  0AF7               	incf	___lwdiv@counter,f
  2263  029B  2AA7               	goto	l1523
  2264  029C                     l1519:
  2265  029C  3001               	movlw	1
  2266  029D                     u765:
  2267  029D  1003               	clrc
  2268  029E  0DF0               	rlf	___lwdiv@divisor,f
  2269  029F  0DF1               	rlf	___lwdiv@divisor+1,f
  2270  02A0  3EFF               	addlw	-1
  2271  02A1  1D03               	skipz
  2272  02A2  2A9D               	goto	u765
  2273  02A3                     l1521:
  2274  02A3  3001               	movlw	1
  2275  02A4  00F4               	movwf	??___lwdiv
  2276  02A5  0874               	movf	??___lwdiv,w
  2277  02A6  07F7               	addwf	___lwdiv@counter,f
  2278  02A7                     l1523:
  2279  02A7  1FF1               	btfss	___lwdiv@divisor+1,7
  2280  02A8  2AAA               	goto	u771
  2281  02A9  2AAB               	goto	u770
  2282  02AA                     u771:
  2283  02AA  2A9C               	goto	l1519
  2284  02AB                     u770:
  2285  02AB                     l1525:
  2286  02AB  3001               	movlw	1
  2287  02AC                     u785:
  2288  02AC  1003               	clrc
  2289  02AD  0DF5               	rlf	___lwdiv@quotient,f
  2290  02AE  0DF6               	rlf	___lwdiv@quotient+1,f
  2291  02AF  3EFF               	addlw	-1
  2292  02B0  1D03               	skipz
  2293  02B1  2AAC               	goto	u785
  2294  02B2  0871               	movf	___lwdiv@divisor+1,w
  2295  02B3  0273               	subwf	___lwdiv@dividend+1,w
  2296  02B4  1D03               	skipz
  2297  02B5  2AB8               	goto	u795
  2298  02B6  0870               	movf	___lwdiv@divisor,w
  2299  02B7  0272               	subwf	___lwdiv@dividend,w
  2300  02B8                     u795:
  2301  02B8  1C03               	skipc
  2302  02B9  2ABB               	goto	u791
  2303  02BA  2ABC               	goto	u790
  2304  02BB                     u791:
  2305  02BB  2AC3               	goto	l1531
  2306  02BC                     u790:
  2307  02BC                     l1527:
  2308  02BC  0870               	movf	___lwdiv@divisor,w
  2309  02BD  02F2               	subwf	___lwdiv@dividend,f
  2310  02BE  0871               	movf	___lwdiv@divisor+1,w
  2311  02BF  1C03               	skipc
  2312  02C0  03F3               	decf	___lwdiv@dividend+1,f
  2313  02C1  02F3               	subwf	___lwdiv@dividend+1,f
  2314  02C2                     l1529:
  2315  02C2  1475               	bsf	___lwdiv@quotient,0
  2316  02C3                     l1531:
  2317  02C3  3001               	movlw	1
  2318  02C4                     u805:
  2319  02C4  1003               	clrc
  2320  02C5  0CF1               	rrf	___lwdiv@divisor+1,f
  2321  02C6  0CF0               	rrf	___lwdiv@divisor,f
  2322  02C7  3EFF               	addlw	-1
  2323  02C8  1D03               	skipz
  2324  02C9  2AC4               	goto	u805
  2325  02CA                     l1533:
  2326  02CA  3001               	movlw	1
  2327  02CB  02F7               	subwf	___lwdiv@counter,f
  2328  02CC  1D03               	btfss	3,2
  2329  02CD  2ACF               	goto	u811
  2330  02CE  2AD0               	goto	u810
  2331  02CF                     u811:
  2332  02CF  2AAB               	goto	l1525
  2333  02D0                     u810:
  2334  02D0                     l1535:
  2335  02D0  0876               	movf	___lwdiv@quotient+1,w
  2336  02D1  00F1               	movwf	?___lwdiv+1
  2337  02D2  0875               	movf	___lwdiv@quotient,w
  2338  02D3  00F0               	movwf	?___lwdiv
  2339  02D4                     l651:
  2340  02D4  0008               	return
  2341  02D5                     __end_of___lwdiv:
  2342                           
  2343                           	psect	text4
  2344  038C                     __ptext4:	
  2345 ;; *************** function _setup *****************
  2346 ;; Defined at:
  2347 ;;		line 170 in file "proyecto1master.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0
  2363 ;;      Temps:          0       2       0       0       0
  2364 ;;      Totals:         0       2       0       0       0
  2365 ;;Total ram usage:        2 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    3
  2368 ;; This function calls:
  2369 ;;		_I2C_Master_Init
  2370 ;;		_I2C_Master_Start
  2371 ;;		_I2C_Master_Stop
  2372 ;;		_I2C_Master_Write
  2373 ;;		_Lcd_Init
  2374 ;;		_Lcd_Set_Cursor
  2375 ;;		_Lcd_Write_String
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _setup
  2383  038C                     _setup:
  2384  038C                     l1561:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2387                           
  2388                           
  2389                           ;proyecto1master.c: 173:     OSCCONbits.IRCF = 7;
  2390  038C  3070               	movlw	112
  2391  038D  1683               	bsf	3,5	;RP0=1, select bank1
  2392  038E  1303               	bcf	3,6	;RP1=0, select bank1
  2393  038F  048F               	iorwf	15,f	;volatile
  2394  0390                     l1563:
  2395                           
  2396                           ;proyecto1master.c: 174:     OSCCONbits.SCS = 1;
  2397  0390  140F               	bsf	15,0	;volatile
  2398  0391                     l1565:
  2399                           
  2400                           ;proyecto1master.c: 176:     ANSELH = 0;
  2401  0391  1683               	bsf	3,5	;RP0=1, select bank3
  2402  0392  1703               	bsf	3,6	;RP1=1, select bank3
  2403  0393  0189               	clrf	9	;volatile
  2404  0394                     l1567:
  2405                           
  2406                           ;proyecto1master.c: 177:     ANSEL = 0;
  2407  0394  0188               	clrf	8	;volatile
  2408  0395                     l1569:
  2409                           
  2410                           ;proyecto1master.c: 178:     TRISA = 0;
  2411  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2412  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2413  0397  0185               	clrf	5	;volatile
  2414  0398                     l1571:
  2415                           
  2416                           ;proyecto1master.c: 180:     TRISCbits.TRISC0 = 0;
  2417  0398  1007               	bcf	7,0	;volatile
  2418  0399                     l1573:
  2419                           
  2420                           ;proyecto1master.c: 181:     TRISCbits.TRISC1 = 0;
  2421  0399  1087               	bcf	7,1	;volatile
  2422  039A                     l1575:
  2423                           
  2424                           ;proyecto1master.c: 182:     TRISB = 1;
  2425  039A  3001               	movlw	1
  2426  039B  0086               	movwf	6	;volatile
  2427  039C                     l1577:
  2428                           
  2429                           ;proyecto1master.c: 183:     PORTB = 0;
  2430  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2431  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2432  039E  0186               	clrf	6	;volatile
  2433  039F                     l1579:
  2434                           
  2435                           ;proyecto1master.c: 184:     TRISD = 0;
  2436  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2437  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2438  03A1  0188               	clrf	8	;volatile
  2439  03A2                     l1581:
  2440                           
  2441                           ;proyecto1master.c: 185:     TRISE = 0;
  2442  03A2  0189               	clrf	9	;volatile
  2443  03A3                     l1583:
  2444                           
  2445                           ;proyecto1master.c: 186:     PORTD = 0;
  2446  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2447  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2448  03A5  0188               	clrf	8	;volatile
  2449  03A6                     l1585:
  2450                           
  2451                           ;proyecto1master.c: 188:     OPTION_REGbits.nRBPU = 0;
  2452  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2453  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2454  03A8  1381               	bcf	1,7	;volatile
  2455  03A9                     l1587:
  2456                           
  2457                           ;proyecto1master.c: 189:     WPUBbits.WPUB0 = 1;
  2458  03A9  1415               	bsf	21,0	;volatile
  2459  03AA                     l1589:
  2460                           
  2461                           ;proyecto1master.c: 191:     TXSTAbits.SYNC = 0;
  2462  03AA  1218               	bcf	24,4	;volatile
  2463  03AB                     l1591:
  2464                           
  2465                           ;proyecto1master.c: 192:     TXSTAbits.BRGH = 1;
  2466  03AB  1518               	bsf	24,2	;volatile
  2467  03AC                     l1593:
  2468                           
  2469                           ;proyecto1master.c: 194:     BAUDCTLbits.BRG16 = 1;
  2470  03AC  1683               	bsf	3,5	;RP0=1, select bank3
  2471  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  2472  03AE  1587               	bsf	7,3	;volatile
  2473  03AF                     l1595:
  2474                           
  2475                           ;proyecto1master.c: 196:     SPBRG = 207;
  2476  03AF  30CF               	movlw	207
  2477  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2478  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2479  03B2  0099               	movwf	25	;volatile
  2480  03B3                     l1597:
  2481                           
  2482                           ;proyecto1master.c: 197:     SPBRGH = 0;
  2483  03B3  019A               	clrf	26	;volatile
  2484  03B4                     l1599:
  2485                           
  2486                           ;proyecto1master.c: 199:     RCSTAbits.SPEN = 1;
  2487  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2488  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2489  03B6  1798               	bsf	24,7	;volatile
  2490  03B7                     l1601:
  2491                           
  2492                           ;proyecto1master.c: 200:     RCSTAbits.RX9 = 0;
  2493  03B7  1318               	bcf	24,6	;volatile
  2494  03B8                     l1603:
  2495                           
  2496                           ;proyecto1master.c: 201:     RCSTAbits.CREN = 1;
  2497  03B8  1618               	bsf	24,4	;volatile
  2498  03B9                     l1605:
  2499                           
  2500                           ;proyecto1master.c: 202:     TXSTAbits.TXEN = 1;
  2501  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2502  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2503  03BB  1698               	bsf	24,5	;volatile
  2504  03BC                     l1607:
  2505                           
  2506                           ;proyecto1master.c: 204:     Lcd_Init();
  2507  03BC  120A  118A  22D5  120A  118A  	fcall	_Lcd_Init
  2508  03C1                     l1609:
  2509                           
  2510                           ;proyecto1master.c: 205:     Lcd_Set_Cursor(1,1);
  2511  03C1  01F4               	clrf	Lcd_Set_Cursor@b
  2512  03C2  0AF4               	incf	Lcd_Set_Cursor@b,f
  2513  03C3  3001               	movlw	1
  2514  03C4  120A  118A  218B  120A  118A  	fcall	_Lcd_Set_Cursor
  2515  03C9                     l1611:
  2516                           
  2517                           ;proyecto1master.c: 206:     Lcd_Write_String("I_LR_M_MagnetY");
  2518  03C9  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2519  03CA  00F3               	movwf	Lcd_Write_String@a
  2520  03CB  3080               	movlw	128
  2521  03CC  00F4               	movwf	Lcd_Write_String@a+1
  2522  03CD  120A  118A  224F  120A  118A  	fcall	_Lcd_Write_String
  2523  03D2                     l1613:
  2524                           
  2525                           ;proyecto1master.c: 207:     I2C_Master_Init(100000);
  2526  03D2  3000               	movlw	0
  2527  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2528  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2529  03D5  00C9               	movwf	I2C_Master_Init@c+3
  2530  03D6  3001               	movlw	1
  2531  03D7  00C8               	movwf	I2C_Master_Init@c+2
  2532  03D8  3086               	movlw	134
  2533  03D9  00C7               	movwf	I2C_Master_Init@c+1
  2534  03DA  30A0               	movlw	160
  2535  03DB  00C6               	movwf	I2C_Master_Init@c
  2536  03DC  120A  118A  21DD  120A  118A  	fcall	_I2C_Master_Init
  2537  03E1                     l1615:
  2538                           
  2539                           ;proyecto1master.c: 209:     I2C_Master_Start();
  2540  03E1  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  2541  03E6                     l1617:
  2542                           
  2543                           ;proyecto1master.c: 210:     I2C_Master_Write(0x1A);
  2544  03E6  301A               	movlw	26
  2545  03E7  00F0               	movwf	I2C_Master_Write@d
  2546  03E8  3000               	movlw	0
  2547  03E9  00F1               	movwf	I2C_Master_Write@d+1
  2548  03EA  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2549  03EF                     l1619:
  2550                           
  2551                           ;proyecto1master.c: 211:     I2C_Master_Write(0x0B);
  2552  03EF  300B               	movlw	11
  2553  03F0  00F0               	movwf	I2C_Master_Write@d
  2554  03F1  3000               	movlw	0
  2555  03F2  00F1               	movwf	I2C_Master_Write@d+1
  2556  03F3  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2557  03F8                     l1621:
  2558                           
  2559                           ;proyecto1master.c: 212:     I2C_Master_Write(0x01);
  2560  03F8  3001               	movlw	1
  2561  03F9  00F0               	movwf	I2C_Master_Write@d
  2562  03FA  3000               	movlw	0
  2563  03FB  00F1               	movwf	I2C_Master_Write@d+1
  2564  03FC  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2565  0401                     l1623:
  2566                           
  2567                           ;proyecto1master.c: 213:     I2C_Master_Stop();
  2568  0401  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  2569  0406                     l1625:
  2570                           
  2571                           ;proyecto1master.c: 214:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2572  0406  301A               	movlw	26
  2573  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0409  00CF               	movwf	??_setup+1
  2576  040A  30F7               	movlw	247
  2577  040B  00CE               	movwf	??_setup
  2578  040C                     u1197:
  2579  040C  0BCE               	decfsz	??_setup,f
  2580  040D  2C0C               	goto	u1197
  2581  040E  0BCF               	decfsz	??_setup+1,f
  2582  040F  2C0C               	goto	u1197
  2583  0410  2C11               	nop2
  2584  0411                     l1627:
  2585                           
  2586                           ;proyecto1master.c: 216:     I2C_Master_Start();
  2587  0411  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  2588  0416                     l1629:
  2589                           
  2590                           ;proyecto1master.c: 217:     I2C_Master_Write(0x1A);
  2591  0416  301A               	movlw	26
  2592  0417  00F0               	movwf	I2C_Master_Write@d
  2593  0418  3000               	movlw	0
  2594  0419  00F1               	movwf	I2C_Master_Write@d+1
  2595  041A  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2596  041F                     l1631:
  2597                           
  2598                           ;proyecto1master.c: 218:     I2C_Master_Write(0x09);
  2599  041F  3009               	movlw	9
  2600  0420  00F0               	movwf	I2C_Master_Write@d
  2601  0421  3000               	movlw	0
  2602  0422  00F1               	movwf	I2C_Master_Write@d+1
  2603  0423  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2604  0428                     l1633:
  2605                           
  2606                           ;proyecto1master.c: 219:     I2C_Master_Write(0x1D);
  2607  0428  301D               	movlw	29
  2608  0429  00F0               	movwf	I2C_Master_Write@d
  2609  042A  3000               	movlw	0
  2610  042B  00F1               	movwf	I2C_Master_Write@d+1
  2611  042C  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2612  0431                     l1635:
  2613                           
  2614                           ;proyecto1master.c: 220:     I2C_Master_Stop();
  2615  0431  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  2616  0436                     l1637:
  2617                           
  2618                           ;proyecto1master.c: 221:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2619  0436  301A               	movlw	26
  2620  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0439  00CF               	movwf	??_setup+1
  2623  043A  30F7               	movlw	247
  2624  043B  00CE               	movwf	??_setup
  2625  043C                     u1207:
  2626  043C  0BCE               	decfsz	??_setup,f
  2627  043D  2C3C               	goto	u1207
  2628  043E  0BCF               	decfsz	??_setup+1,f
  2629  043F  2C3C               	goto	u1207
  2630  0440  2C41               	nop2
  2631  0441                     l1639:
  2632                           
  2633                           ;proyecto1master.c: 223:     I2C_Master_Start();
  2634  0441  120A  118A  2103  120A  118A  	fcall	_I2C_Master_Start
  2635  0446                     l1641:
  2636                           
  2637                           ;proyecto1master.c: 224:     I2C_Master_Write(0x1A);
  2638  0446  301A               	movlw	26
  2639  0447  00F0               	movwf	I2C_Master_Write@d
  2640  0448  3000               	movlw	0
  2641  0449  00F1               	movwf	I2C_Master_Write@d+1
  2642  044A  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2643  044F                     l1643:
  2644                           
  2645                           ;proyecto1master.c: 225:     I2C_Master_Write(0x0A);
  2646  044F  300A               	movlw	10
  2647  0450  00F0               	movwf	I2C_Master_Write@d
  2648  0451  3000               	movlw	0
  2649  0452  00F1               	movwf	I2C_Master_Write@d+1
  2650  0453  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2651  0458                     l1645:
  2652                           
  2653                           ;proyecto1master.c: 226:     I2C_Master_Write(0x00);
  2654  0458  3000               	movlw	0
  2655  0459  00F0               	movwf	I2C_Master_Write@d
  2656  045A  00F1               	movwf	I2C_Master_Write@d+1
  2657  045B  120A  118A  2115  120A  118A  	fcall	_I2C_Master_Write
  2658  0460                     l1647:
  2659                           
  2660                           ;proyecto1master.c: 227:     I2C_Master_Stop();
  2661  0460  120A  118A  210C  120A  118A  	fcall	_I2C_Master_Stop
  2662  0465                     l1649:
  2663                           
  2664                           ;proyecto1master.c: 228:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2665  0465  301A               	movlw	26
  2666  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0468  00CF               	movwf	??_setup+1
  2669  0469  30F7               	movlw	247
  2670  046A  00CE               	movwf	??_setup
  2671  046B                     u1217:
  2672  046B  0BCE               	decfsz	??_setup,f
  2673  046C  2C6B               	goto	u1217
  2674  046D  0BCF               	decfsz	??_setup+1,f
  2675  046E  2C6B               	goto	u1217
  2676  046F  2C70               	nop2
  2677  0470                     l125:
  2678  0470  0008               	return
  2679  0471                     __end_of_setup:
  2680                           
  2681                           	psect	text5
  2682  024F                     __ptext5:	
  2683 ;; *************** function _Lcd_Write_String *****************
  2684 ;; Defined at:
  2685 ;;		line 66 in file "LCD8bits.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  a               2    3[COMMON] PTR unsigned char 
  2688 ;;		 -> STR_2(15), volt(16), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  i               2    8[COMMON] int 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         2       0       0       0       0
  2701 ;;      Locals:         2       0       0       0       0
  2702 ;;      Temps:          3       0       0       0       0
  2703 ;;      Totals:         7       0       0       0       0
  2704 ;;Total ram usage:        7 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		_Lcd_Write_Char
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;;		_setup
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _Lcd_Write_String
  2717  024F                     _Lcd_Write_String:
  2718  024F                     l1479:	
  2719                           ;incstack = 0
  2720                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2721                           
  2722                           
  2723                           ;LCD8bits.c: 67:     int i;;LCD8bits.c: 68:     for (i = 0; a[i] != '\0'; i++)
  2724  024F  01F8               	clrf	Lcd_Write_String@i
  2725  0250  01F9               	clrf	Lcd_Write_String@i+1
  2726  0251  2A74               	goto	l1485
  2727  0252                     l1481:
  2728                           
  2729                           ;LCD8bits.c: 69:         Lcd_Write_Char(a[i]);
  2730  0252  0878               	movf	Lcd_Write_String@i,w
  2731  0253  0773               	addwf	Lcd_Write_String@a,w
  2732  0254  00F6               	movwf	??_Lcd_Write_String+1
  2733  0255  0874               	movf	Lcd_Write_String@a+1,w
  2734  0256  00F5               	movwf	??_Lcd_Write_String
  2735  0257  1803               	skipnc
  2736  0258  0AF5               	incf	??_Lcd_Write_String,f
  2737  0259  1FF8               	btfss	Lcd_Write_String@i,7
  2738  025A  2A5C               	goto	u690
  2739  025B  03F5               	decf	??_Lcd_Write_String,f
  2740  025C                     u690:
  2741  025C  0875               	movf	??_Lcd_Write_String,w
  2742  025D  00F7               	movwf	??_Lcd_Write_String+2
  2743  025E  0877               	movf	??_Lcd_Write_String+2,w
  2744  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2745  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2746  0261  00FF               	movwf	btemp+1
  2747  0262  0876               	movf	??_Lcd_Write_String+1,w
  2748  0263  0084               	movwf	4
  2749  0264  120A  118A  2003  120A  118A  	fcall	stringtab
  2750  0269  120A  118A  213C  120A  118A  	fcall	_Lcd_Write_Char
  2751  026E                     l1483:
  2752  026E  3001               	movlw	1
  2753  026F  07F8               	addwf	Lcd_Write_String@i,f
  2754  0270  1803               	skipnc
  2755  0271  0AF9               	incf	Lcd_Write_String@i+1,f
  2756  0272  3000               	movlw	0
  2757  0273  07F9               	addwf	Lcd_Write_String@i+1,f
  2758  0274                     l1485:
  2759  0274  0878               	movf	Lcd_Write_String@i,w
  2760  0275  0773               	addwf	Lcd_Write_String@a,w
  2761  0276  00F6               	movwf	??_Lcd_Write_String+1
  2762  0277  0874               	movf	Lcd_Write_String@a+1,w
  2763  0278  00F5               	movwf	??_Lcd_Write_String
  2764  0279  1803               	skipnc
  2765  027A  0AF5               	incf	??_Lcd_Write_String,f
  2766  027B  1FF8               	btfss	Lcd_Write_String@i,7
  2767  027C  2A7E               	goto	u700
  2768  027D  03F5               	decf	??_Lcd_Write_String,f
  2769  027E                     u700:
  2770  027E  0875               	movf	??_Lcd_Write_String,w
  2771  027F  00F7               	movwf	??_Lcd_Write_String+2
  2772  0280  0877               	movf	??_Lcd_Write_String+2,w
  2773  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0283  00FF               	movwf	btemp+1
  2776  0284  0876               	movf	??_Lcd_Write_String+1,w
  2777  0285  0084               	movwf	4
  2778  0286  120A  118A  2003  120A  118A  	fcall	stringtab
  2779  028B  3A00               	xorlw	0
  2780  028C  1D03               	skipz
  2781  028D  2A8F               	goto	u711
  2782  028E  2A90               	goto	u710
  2783  028F                     u711:
  2784  028F  2A52               	goto	l1481
  2785  0290                     u710:
  2786  0290                     l217:
  2787  0290  0008               	return
  2788  0291                     __end_of_Lcd_Write_String:
  2789                           
  2790                           	psect	text6
  2791  013C                     __ptext6:	
  2792 ;; *************** function _Lcd_Write_Char *****************
  2793 ;; Defined at:
  2794 ;;		line 58 in file "LCD8bits.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  a               1    wreg     unsigned char 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  a               1    2[COMMON] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       0       0       0       0
  2809 ;;      Locals:         1       0       0       0       0
  2810 ;;      Temps:          1       0       0       0       0
  2811 ;;      Totals:         2       0       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    1
  2815 ;; This function calls:
  2816 ;;		_Lcd_Port
  2817 ;; This function is called by:
  2818 ;;		_Lcd_Write_String
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _Lcd_Write_Char
  2824  013C                     _Lcd_Write_Char:
  2825                           
  2826                           ;incstack = 0
  2827                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2828                           ;Lcd_Write_Char@a stored from wreg
  2829  013C  00F2               	movwf	Lcd_Write_Char@a
  2830  013D                     l1421:
  2831                           
  2832                           ;LCD8bits.c: 59:     RC0 = 1;
  2833  013D  1283               	bcf	3,5	;RP0=0, select bank0
  2834  013E  1303               	bcf	3,6	;RP1=0, select bank0
  2835  013F  1407               	bsf	7,0	;volatile
  2836  0140                     l1423:
  2837                           
  2838                           ;LCD8bits.c: 60:     Lcd_Port(a);
  2839  0140  0872               	movf	Lcd_Write_Char@a,w
  2840  0141  120A  118A  20F5  120A  118A  	fcall	_Lcd_Port
  2841  0146                     l1425:
  2842                           
  2843                           ;LCD8bits.c: 61:     RC1 = 1;
  2844  0146  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0147  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0148  1487               	bsf	7,1	;volatile
  2847  0149                     l1427:
  2848                           
  2849                           ;LCD8bits.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2850  0149  301A               	movlw	26
  2851  014A  00F1               	movwf	??_Lcd_Write_Char
  2852  014B                     u1227:
  2853  014B  0BF1               	decfsz	??_Lcd_Write_Char,f
  2854  014C  294B               	goto	u1227
  2855  014D  0000               	nop
  2856  014E                     l1429:
  2857                           
  2858                           ;LCD8bits.c: 63:     RC1 = 0;
  2859  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2860  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0150  1087               	bcf	7,1	;volatile
  2862  0151                     l211:
  2863  0151  0008               	return
  2864  0152                     __end_of_Lcd_Write_Char:
  2865                           
  2866                           	psect	text7
  2867  018B                     __ptext7:	
  2868 ;; *************** function _Lcd_Set_Cursor *****************
  2869 ;; Defined at:
  2870 ;;		line 30 in file "LCD8bits.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  a               1    wreg     unsigned char 
  2873 ;;  b               1    4[COMMON] unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  a               1    6[COMMON] unsigned char 
  2876 ;;  temp            1    7[COMMON] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         1       0       0       0       0
  2887 ;;      Locals:         2       0       0       0       0
  2888 ;;      Temps:          1       0       0       0       0
  2889 ;;      Totals:         4       0       0       0       0
  2890 ;;Total ram usage:        4 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    2
  2893 ;; This function calls:
  2894 ;;		_Lcd_Cmd
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;;		_setup
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function _Lcd_Set_Cursor
  2903  018B                     _Lcd_Set_Cursor:
  2904                           
  2905                           ;incstack = 0
  2906                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2907                           ;Lcd_Set_Cursor@a stored from wreg
  2908  018B  00F6               	movwf	Lcd_Set_Cursor@a
  2909  018C                     l1467:
  2910                           
  2911                           ;LCD8bits.c: 31:     unsigned char temp;;LCD8bits.c: 32:     if (a == 1) {
  2912  018C  0376               	decf	Lcd_Set_Cursor@a,w
  2913  018D  1D03               	btfss	3,2
  2914  018E  2990               	goto	u671
  2915  018F  2991               	goto	u670
  2916  0190                     u671:
  2917  0190  299D               	goto	l1473
  2918  0191                     u670:
  2919  0191                     l1469:
  2920                           
  2921                           ;LCD8bits.c: 33:         temp = 0x80 + b - 1;
  2922  0191  0874               	movf	Lcd_Set_Cursor@b,w
  2923  0192  3E7F               	addlw	127
  2924  0193  00F5               	movwf	??_Lcd_Set_Cursor
  2925  0194  0875               	movf	??_Lcd_Set_Cursor,w
  2926  0195  00F7               	movwf	Lcd_Set_Cursor@temp
  2927  0196                     l1471:
  2928                           
  2929                           ;LCD8bits.c: 34:         Lcd_Cmd(temp);
  2930  0196  0877               	movf	Lcd_Set_Cursor@temp,w
  2931  0197  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  2932                           
  2933                           ;LCD8bits.c: 36:     } else if (a == 2) {
  2934  019C  29AE               	goto	l205
  2935  019D                     l1473:
  2936  019D  3002               	movlw	2
  2937  019E  0676               	xorwf	Lcd_Set_Cursor@a,w
  2938  019F  1D03               	btfss	3,2
  2939  01A0  29A2               	goto	u681
  2940  01A1  29A3               	goto	u680
  2941  01A2                     u681:
  2942  01A2  29AE               	goto	l205
  2943  01A3                     u680:
  2944  01A3                     l1475:
  2945                           
  2946                           ;LCD8bits.c: 37:         temp = 0xC0 + b - 1;
  2947  01A3  0874               	movf	Lcd_Set_Cursor@b,w
  2948  01A4  3EBF               	addlw	191
  2949  01A5  00F5               	movwf	??_Lcd_Set_Cursor
  2950  01A6  0875               	movf	??_Lcd_Set_Cursor,w
  2951  01A7  00F7               	movwf	Lcd_Set_Cursor@temp
  2952  01A8                     l1477:
  2953                           
  2954                           ;LCD8bits.c: 38:         Lcd_Cmd(temp);
  2955  01A8  0877               	movf	Lcd_Set_Cursor@temp,w
  2956  01A9  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  2957  01AE                     l205:
  2958  01AE  0008               	return
  2959  01AF                     __end_of_Lcd_Set_Cursor:
  2960                           
  2961                           	psect	text8
  2962  02D5                     __ptext8:	
  2963 ;; *************** function _Lcd_Init *****************
  2964 ;; Defined at:
  2965 ;;		line 42 in file "LCD8bits.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0
  2981 ;;      Temps:          2       0       0       0       0
  2982 ;;      Totals:         2       0       0       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    2
  2986 ;; This function calls:
  2987 ;;		_Lcd_Cmd
  2988 ;;		_Lcd_Port
  2989 ;; This function is called by:
  2990 ;;		_setup
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _Lcd_Init
  2996  02D5                     _Lcd_Init:
  2997  02D5                     l1487:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3000                           
  3001                           
  3002                           ;LCD8bits.c: 43:     Lcd_Port(0);
  3003  02D5  3000               	movlw	0
  3004  02D6  120A  118A  20F5  120A  118A  	fcall	_Lcd_Port
  3005  02DB                     l1489:
  3006                           
  3007                           ;LCD8bits.c: 44:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3008  02DB  3034               	movlw	52
  3009  02DC  00F5               	movwf	??_Lcd_Init+1
  3010  02DD  30F1               	movlw	241
  3011  02DE  00F4               	movwf	??_Lcd_Init
  3012  02DF                     u1237:
  3013  02DF  0BF4               	decfsz	??_Lcd_Init,f
  3014  02E0  2ADF               	goto	u1237
  3015  02E1  0BF5               	decfsz	??_Lcd_Init+1,f
  3016  02E2  2ADF               	goto	u1237
  3017  02E3  2AE4               	nop2
  3018  02E4                     l1491:
  3019                           
  3020                           ;LCD8bits.c: 45:     Lcd_Cmd(48);
  3021  02E4  3030               	movlw	48
  3022  02E5  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3023                           
  3024                           ;LCD8bits.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3025  02EA  300D               	movlw	13
  3026  02EB  00F5               	movwf	??_Lcd_Init+1
  3027  02EC  30FB               	movlw	251
  3028  02ED  00F4               	movwf	??_Lcd_Init
  3029  02EE                     u1247:
  3030  02EE  0BF4               	decfsz	??_Lcd_Init,f
  3031  02EF  2AEE               	goto	u1247
  3032  02F0  0BF5               	decfsz	??_Lcd_Init+1,f
  3033  02F1  2AEE               	goto	u1247
  3034  02F2  2AF3               	nop2
  3035  02F3                     l1493:
  3036                           
  3037                           ;LCD8bits.c: 47:     Lcd_Cmd(48);
  3038  02F3  3030               	movlw	48
  3039  02F4  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3040  02F9                     l1495:
  3041                           
  3042                           ;LCD8bits.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3043  02F9  301D               	movlw	29
  3044  02FA  00F5               	movwf	??_Lcd_Init+1
  3045  02FB  3091               	movlw	145
  3046  02FC  00F4               	movwf	??_Lcd_Init
  3047  02FD                     u1257:
  3048  02FD  0BF4               	decfsz	??_Lcd_Init,f
  3049  02FE  2AFD               	goto	u1257
  3050  02FF  0BF5               	decfsz	??_Lcd_Init+1,f
  3051  0300  2AFD               	goto	u1257
  3052                           
  3053                           ;LCD8bits.c: 49:     Lcd_Cmd(48);
  3054  0301  3030               	movlw	48
  3055  0302  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3056                           
  3057                           ;LCD8bits.c: 51:     Lcd_Cmd(56);
  3058  0307  3038               	movlw	56
  3059  0308  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3060                           
  3061                           ;LCD8bits.c: 52:     Lcd_Cmd(8);
  3062  030D  3008               	movlw	8
  3063  030E  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3064                           
  3065                           ;LCD8bits.c: 53:     Lcd_Cmd(1);
  3066  0313  3001               	movlw	1
  3067  0314  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3068                           
  3069                           ;LCD8bits.c: 54:     Lcd_Cmd(6);
  3070  0319  3006               	movlw	6
  3071  031A  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3072                           
  3073                           ;LCD8bits.c: 55:     Lcd_Cmd(12);
  3074  031F  300C               	movlw	12
  3075  0320  120A  118A  2152  120A  118A  	fcall	_Lcd_Cmd
  3076  0325                     l208:
  3077  0325  0008               	return
  3078  0326                     __end_of_Lcd_Init:
  3079                           
  3080                           	psect	text9
  3081  0152                     __ptext9:	
  3082 ;; *************** function _Lcd_Cmd *****************
  3083 ;; Defined at:
  3084 ;;		line 17 in file "LCD8bits.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  a               1    wreg     unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  a               1    3[COMMON] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       0       0       0       0
  3099 ;;      Locals:         1       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0
  3101 ;;      Totals:         3       0       0       0       0
  3102 ;;Total ram usage:        3 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    1
  3105 ;; This function calls:
  3106 ;;		_Lcd_Port
  3107 ;; This function is called by:
  3108 ;;		_Lcd_Set_Cursor
  3109 ;;		_Lcd_Init
  3110 ;;		_Lcd_Clear
  3111 ;;		_Lcd_Shift_Right
  3112 ;;		_Lcd_Shift_Left
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _Lcd_Cmd
  3118  0152                     _Lcd_Cmd:
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3122                           ;Lcd_Cmd@a stored from wreg
  3123  0152  00F3               	movwf	Lcd_Cmd@a
  3124  0153                     l1411:
  3125                           
  3126                           ;LCD8bits.c: 18:     RC0 = 0;
  3127  0153  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0154  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0155  1007               	bcf	7,0	;volatile
  3130  0156                     l1413:
  3131                           
  3132                           ;LCD8bits.c: 19:     Lcd_Port(a);
  3133  0156  0873               	movf	Lcd_Cmd@a,w
  3134  0157  120A  118A  20F5  120A  118A  	fcall	_Lcd_Port
  3135  015C                     l1415:
  3136                           
  3137                           ;LCD8bits.c: 20:     RC1 = 1;
  3138  015C  1283               	bcf	3,5	;RP0=0, select bank0
  3139  015D  1303               	bcf	3,6	;RP1=0, select bank0
  3140  015E  1487               	bsf	7,1	;volatile
  3141  015F                     l1417:
  3142                           
  3143                           ;LCD8bits.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3144  015F  300B               	movlw	11
  3145  0160  00F2               	movwf	??_Lcd_Cmd+1
  3146  0161  3062               	movlw	98
  3147  0162  00F1               	movwf	??_Lcd_Cmd
  3148  0163                     u1267:
  3149  0163  0BF1               	decfsz	??_Lcd_Cmd,f
  3150  0164  2963               	goto	u1267
  3151  0165  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3152  0166  2963               	goto	u1267
  3153  0167  0000               	nop
  3154  0168                     l1419:
  3155                           
  3156                           ;LCD8bits.c: 22:     RC1 = 0;
  3157  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0169  1303               	bcf	3,6	;RP1=0, select bank0
  3159  016A  1087               	bcf	7,1	;volatile
  3160  016B                     l196:
  3161  016B  0008               	return
  3162  016C                     __end_of_Lcd_Cmd:
  3163                           
  3164                           	psect	text10
  3165  00F5                     __ptext10:	
  3166 ;; *************** function _Lcd_Port *****************
  3167 ;; Defined at:
  3168 ;;		line 13 in file "LCD8bits.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  a               1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  a               1    0[COMMON] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         1       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0
  3185 ;;      Totals:         1       0       0       0       0
  3186 ;;Total ram usage:        1 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_Lcd_Cmd
  3192 ;;		_Lcd_Init
  3193 ;;		_Lcd_Write_Char
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _Lcd_Port
  3199  00F5                     _Lcd_Port:
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _Lcd_Port: [wreg]
  3203                           ;Lcd_Port@a stored from wreg
  3204  00F5  00F0               	movwf	Lcd_Port@a
  3205  00F6                     l1405:
  3206                           
  3207                           ;LCD8bits.c: 14:     PORTD = a;
  3208  00F6  0870               	movf	Lcd_Port@a,w
  3209  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3210  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  3211  00F9  0088               	movwf	8	;volatile
  3212  00FA                     l193:
  3213  00FA  0008               	return
  3214  00FB                     __end_of_Lcd_Port:
  3215                           
  3216                           	psect	text11
  3217  0115                     __ptext11:	
  3218 ;; *************** function _I2C_Master_Write *****************
  3219 ;; Defined at:
  3220 ;;		line 65 in file "I2C.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  d               2    0[COMMON] unsigned int 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         2       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         2       0       0       0       0
  3238 ;;Total ram usage:        2 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    1
  3241 ;; This function calls:
  3242 ;;		_I2C_Master_Wait
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;;		_setup
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _I2C_Master_Write
  3251  0115                     _I2C_Master_Write:
  3252  0115                     l1459:	
  3253                           ;incstack = 0
  3254                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3255                           
  3256                           
  3257                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3258  0115  120A  118A  211F  120A  118A  	fcall	_I2C_Master_Wait
  3259  011A                     l1461:
  3260                           
  3261                           ;I2C.c: 68:     SSPBUF = d;
  3262  011A  0870               	movf	I2C_Master_Write@d,w
  3263  011B  1283               	bcf	3,5	;RP0=0, select bank0
  3264  011C  1303               	bcf	3,6	;RP1=0, select bank0
  3265  011D  0093               	movwf	19	;volatile
  3266  011E                     l172:
  3267  011E  0008               	return
  3268  011F                     __end_of_I2C_Master_Write:
  3269                           
  3270                           	psect	text12
  3271  010C                     __ptext12:	
  3272 ;; *************** function _I2C_Master_Stop *****************
  3273 ;; Defined at:
  3274 ;;		line 55 in file "I2C.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, pclath, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0
  3291 ;;      Totals:         0       0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    1
  3295 ;; This function calls:
  3296 ;;		_I2C_Master_Wait
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;;		_setup
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           
  3304                           ;psect for function _I2C_Master_Stop
  3305  010C                     _I2C_Master_Stop:
  3306  010C                     l1463:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3309                           
  3310                           
  3311                           ;I2C.c: 57:     I2C_Master_Wait();
  3312  010C  120A  118A  211F  120A  118A  	fcall	_I2C_Master_Wait
  3313  0111                     l1465:
  3314                           
  3315                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3316  0111  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0112  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0113  1511               	bsf	17,2	;volatile
  3319  0114                     l169:
  3320  0114  0008               	return
  3321  0115                     __end_of_I2C_Master_Stop:
  3322                           
  3323                           	psect	text13
  3324  0103                     __ptext13:	
  3325 ;; *************** function _I2C_Master_Start *****************
  3326 ;; Defined at:
  3327 ;;		line 39 in file "I2C.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		_I2C_Master_Wait
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;;		_setup
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _I2C_Master_Start
  3358  0103                     _I2C_Master_Start:
  3359  0103                     l1455:	
  3360                           ;incstack = 0
  3361                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3362                           
  3363                           
  3364                           ;I2C.c: 41:     I2C_Master_Wait();
  3365  0103  120A  118A  211F  120A  118A  	fcall	_I2C_Master_Wait
  3366  0108                     l1457:
  3367                           
  3368                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3369  0108  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0109  1303               	bcf	3,6	;RP1=0, select bank1
  3371  010A  1411               	bsf	17,0	;volatile
  3372  010B                     l163:
  3373  010B  0008               	return
  3374  010C                     __end_of_I2C_Master_Start:
  3375                           
  3376                           	psect	text14
  3377  01DD                     __ptext14:	
  3378 ;; *************** function _I2C_Master_Init *****************
  3379 ;; Defined at:
  3380 ;;		line 16 in file "I2C.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  c               4    0[BANK0 ] const unsigned long 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, pclath, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3394 ;;      Params:         0       4       0       0       0
  3395 ;;      Locals:         0       0       0       0       0
  3396 ;;      Temps:          0       4       0       0       0
  3397 ;;      Totals:         0       8       0       0       0
  3398 ;;Total ram usage:        8 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    1
  3401 ;; This function calls:
  3402 ;;		___lldiv
  3403 ;; This function is called by:
  3404 ;;		_setup
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _I2C_Master_Init
  3410  01DD                     _I2C_Master_Init:
  3411  01DD                     l1497:	
  3412                           ;incstack = 0
  3413                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3414                           
  3415                           
  3416                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3417  01DD  3028               	movlw	40
  3418  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  3419  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  3420  01E0  0094               	movwf	20	;volatile
  3421  01E1                     l1499:
  3422                           
  3423                           ;I2C.c: 19:     SSPCON2 = 0;
  3424  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  3425  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  3426  01E3  0191               	clrf	17	;volatile
  3427  01E4                     l1501:
  3428                           
  3429                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3430  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3431  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3432  01E6  0846               	movf	I2C_Master_Init@c,w
  3433  01E7  00CA               	movwf	??_I2C_Master_Init
  3434  01E8  0847               	movf	I2C_Master_Init@c+1,w
  3435  01E9  00CB               	movwf	??_I2C_Master_Init+1
  3436  01EA  0848               	movf	I2C_Master_Init@c+2,w
  3437  01EB  00CC               	movwf	??_I2C_Master_Init+2
  3438  01EC  0849               	movf	I2C_Master_Init@c+3,w
  3439  01ED  00CD               	movwf	??_I2C_Master_Init+3
  3440  01EE  3002               	movlw	2
  3441  01EF                     u725:
  3442  01EF  1003               	clrc
  3443  01F0  0DCA               	rlf	??_I2C_Master_Init,f
  3444  01F1  0DCB               	rlf	??_I2C_Master_Init+1,f
  3445  01F2  0DCC               	rlf	??_I2C_Master_Init+2,f
  3446  01F3  0DCD               	rlf	??_I2C_Master_Init+3,f
  3447  01F4                     u720:
  3448  01F4  3EFF               	addlw	-1
  3449  01F5  1D03               	skipz
  3450  01F6  29EF               	goto	u725
  3451  01F7  084D               	movf	??_I2C_Master_Init+3,w
  3452  01F8  00F3               	movwf	___lldiv@divisor+3
  3453  01F9  084C               	movf	??_I2C_Master_Init+2,w
  3454  01FA  00F2               	movwf	___lldiv@divisor+2
  3455  01FB  084B               	movf	??_I2C_Master_Init+1,w
  3456  01FC  00F1               	movwf	___lldiv@divisor+1
  3457  01FD  084A               	movf	??_I2C_Master_Init,w
  3458  01FE  00F0               	movwf	___lldiv@divisor
  3459  01FF  3000               	movlw	0
  3460  0200  00F7               	movwf	___lldiv@dividend+3
  3461  0201  307A               	movlw	122
  3462  0202  00F6               	movwf	___lldiv@dividend+2
  3463  0203  3012               	movlw	18
  3464  0204  00F5               	movwf	___lldiv@dividend+1
  3465  0205  3000               	movlw	0
  3466  0206  00F4               	movwf	___lldiv@dividend
  3467  0207  120A  118A  2326  120A  118A  	fcall	___lldiv
  3468  020C  0870               	movf	?___lldiv,w
  3469  020D  3EFF               	addlw	255
  3470  020E  1683               	bsf	3,5	;RP0=1, select bank1
  3471  020F  1303               	bcf	3,6	;RP1=0, select bank1
  3472  0210  0093               	movwf	19	;volatile
  3473  0211                     l1503:
  3474                           
  3475                           ;I2C.c: 21:     SSPSTAT = 0;
  3476  0211  0194               	clrf	20	;volatile
  3477  0212                     l1505:
  3478                           
  3479                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3480  0212  1587               	bsf	7,3	;volatile
  3481  0213                     l1507:
  3482                           
  3483                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3484  0213  1607               	bsf	7,4	;volatile
  3485  0214                     l154:
  3486  0214  0008               	return
  3487  0215                     __end_of_I2C_Master_Init:
  3488                           
  3489                           	psect	text15
  3490  0326                     __ptext15:	
  3491 ;; *************** function ___lldiv *****************
  3492 ;; Defined at:
  3493 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  divisor         4    0[COMMON] unsigned long 
  3496 ;;  dividend        4    4[COMMON] unsigned long 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  quotient        4    9[COMMON] unsigned long 
  3499 ;;  counter         1   13[COMMON] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  4    0[COMMON] unsigned long 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         8       0       0       0       0
  3510 ;;      Locals:         5       0       0       0       0
  3511 ;;      Temps:          1       0       0       0       0
  3512 ;;      Totals:        14       0       0       0       0
  3513 ;;Total ram usage:       14 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_I2C_Master_Init
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function ___lldiv
  3524  0326                     ___lldiv:
  3525  0326                     l1431:	
  3526                           ;incstack = 0
  3527                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3528                           
  3529  0326  3000               	movlw	0
  3530  0327  00FC               	movwf	___lldiv@quotient+3
  3531  0328  3000               	movlw	0
  3532  0329  00FB               	movwf	___lldiv@quotient+2
  3533  032A  3000               	movlw	0
  3534  032B  00FA               	movwf	___lldiv@quotient+1
  3535  032C  3000               	movlw	0
  3536  032D  00F9               	movwf	___lldiv@quotient
  3537  032E  0873               	movf	___lldiv@divisor+3,w
  3538  032F  0472               	iorwf	___lldiv@divisor+2,w
  3539  0330  0471               	iorwf	___lldiv@divisor+1,w
  3540  0331  0470               	iorwf	___lldiv@divisor,w
  3541  0332  1903               	skipnz
  3542  0333  2B35               	goto	u601
  3543  0334  2B36               	goto	u600
  3544  0335                     u601:
  3545  0335  2B83               	goto	l1451
  3546  0336                     u600:
  3547  0336                     l1433:
  3548  0336  01FD               	clrf	___lldiv@counter
  3549  0337  0AFD               	incf	___lldiv@counter,f
  3550  0338  2B46               	goto	l1437
  3551  0339                     l1435:
  3552  0339  3001               	movlw	1
  3553  033A  00F8               	movwf	??___lldiv
  3554  033B                     u615:
  3555  033B  1003               	clrc
  3556  033C  0DF0               	rlf	___lldiv@divisor,f
  3557  033D  0DF1               	rlf	___lldiv@divisor+1,f
  3558  033E  0DF2               	rlf	___lldiv@divisor+2,f
  3559  033F  0DF3               	rlf	___lldiv@divisor+3,f
  3560  0340  0BF8               	decfsz	??___lldiv,f
  3561  0341  2B3B               	goto	u615
  3562  0342  3001               	movlw	1
  3563  0343  00F8               	movwf	??___lldiv
  3564  0344  0878               	movf	??___lldiv,w
  3565  0345  07FD               	addwf	___lldiv@counter,f
  3566  0346                     l1437:
  3567  0346  1FF3               	btfss	___lldiv@divisor+3,7
  3568  0347  2B49               	goto	u621
  3569  0348  2B4A               	goto	u620
  3570  0349                     u621:
  3571  0349  2B39               	goto	l1435
  3572  034A                     u620:
  3573  034A                     l1439:
  3574  034A  3001               	movlw	1
  3575  034B  00F8               	movwf	??___lldiv
  3576  034C                     u635:
  3577  034C  1003               	clrc
  3578  034D  0DF9               	rlf	___lldiv@quotient,f
  3579  034E  0DFA               	rlf	___lldiv@quotient+1,f
  3580  034F  0DFB               	rlf	___lldiv@quotient+2,f
  3581  0350  0DFC               	rlf	___lldiv@quotient+3,f
  3582  0351  0BF8               	decfsz	??___lldiv,f
  3583  0352  2B4C               	goto	u635
  3584  0353                     l1441:
  3585  0353  0873               	movf	___lldiv@divisor+3,w
  3586  0354  0277               	subwf	___lldiv@dividend+3,w
  3587  0355  1D03               	skipz
  3588  0356  2B61               	goto	u645
  3589  0357  0872               	movf	___lldiv@divisor+2,w
  3590  0358  0276               	subwf	___lldiv@dividend+2,w
  3591  0359  1D03               	skipz
  3592  035A  2B61               	goto	u645
  3593  035B  0871               	movf	___lldiv@divisor+1,w
  3594  035C  0275               	subwf	___lldiv@dividend+1,w
  3595  035D  1D03               	skipz
  3596  035E  2B61               	goto	u645
  3597  035F  0870               	movf	___lldiv@divisor,w
  3598  0360  0274               	subwf	___lldiv@dividend,w
  3599  0361                     u645:
  3600  0361  1C03               	skipc
  3601  0362  2B64               	goto	u641
  3602  0363  2B65               	goto	u640
  3603  0364                     u641:
  3604  0364  2B74               	goto	l1447
  3605  0365                     u640:
  3606  0365                     l1443:
  3607  0365  0870               	movf	___lldiv@divisor,w
  3608  0366  02F4               	subwf	___lldiv@dividend,f
  3609  0367  0871               	movf	___lldiv@divisor+1,w
  3610  0368  1C03               	skipc
  3611  0369  0F71               	incfsz	___lldiv@divisor+1,w
  3612  036A  02F5               	subwf	___lldiv@dividend+1,f
  3613  036B  0872               	movf	___lldiv@divisor+2,w
  3614  036C  1C03               	skipc
  3615  036D  0F72               	incfsz	___lldiv@divisor+2,w
  3616  036E  02F6               	subwf	___lldiv@dividend+2,f
  3617  036F  0873               	movf	___lldiv@divisor+3,w
  3618  0370  1C03               	skipc
  3619  0371  0F73               	incfsz	___lldiv@divisor+3,w
  3620  0372  02F7               	subwf	___lldiv@dividend+3,f
  3621  0373                     l1445:
  3622  0373  1479               	bsf	___lldiv@quotient,0
  3623  0374                     l1447:
  3624  0374  3001               	movlw	1
  3625  0375                     u655:
  3626  0375  1003               	clrc
  3627  0376  0CF3               	rrf	___lldiv@divisor+3,f
  3628  0377  0CF2               	rrf	___lldiv@divisor+2,f
  3629  0378  0CF1               	rrf	___lldiv@divisor+1,f
  3630  0379  0CF0               	rrf	___lldiv@divisor,f
  3631  037A  3EFF               	addlw	-1
  3632  037B  1D03               	skipz
  3633  037C  2B75               	goto	u655
  3634  037D                     l1449:
  3635  037D  3001               	movlw	1
  3636  037E  02FD               	subwf	___lldiv@counter,f
  3637  037F  1D03               	btfss	3,2
  3638  0380  2B82               	goto	u661
  3639  0381  2B83               	goto	u660
  3640  0382                     u661:
  3641  0382  2B4A               	goto	l1439
  3642  0383                     u660:
  3643  0383                     l1451:
  3644  0383  087C               	movf	___lldiv@quotient+3,w
  3645  0384  00F3               	movwf	?___lldiv+3
  3646  0385  087B               	movf	___lldiv@quotient+2,w
  3647  0386  00F2               	movwf	?___lldiv+2
  3648  0387  087A               	movf	___lldiv@quotient+1,w
  3649  0388  00F1               	movwf	?___lldiv+1
  3650  0389  0879               	movf	___lldiv@quotient,w
  3651  038A  00F0               	movwf	?___lldiv
  3652  038B                     l415:
  3653  038B  0008               	return
  3654  038C                     __end_of___lldiv:
  3655                           
  3656                           	psect	text16
  3657  016C                     __ptext16:	
  3658 ;; *************** function _enviocadena *****************
  3659 ;; Defined at:
  3660 ;;		line 44 in file "usart.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  cadena          1    wreg     PTR unsigned char 
  3663 ;;		 -> volt(16), 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  cadena          1    2[COMMON] PTR unsigned char 
  3666 ;;		 -> volt(16), 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         1       0       0       0       0
  3678 ;;      Temps:          1       0       0       0       0
  3679 ;;      Totals:         2       0       0       0       0
  3680 ;;Total ram usage:        2 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    1
  3683 ;; This function calls:
  3684 ;;		_enviocaracter
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _enviocadena
  3692  016C                     _enviocadena:
  3693                           
  3694                           ;incstack = 0
  3695                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3696                           ;enviocadena@cadena stored from wreg
  3697  016C  00F2               	movwf	enviocadena@cadena
  3698  016D                     l1735:
  3699                           
  3700                           ;usart.c: 45:     while (*cadena != 0){
  3701  016D  297A               	goto	l1741
  3702  016E                     l1737:
  3703                           
  3704                           ;usart.c: 46:       enviocaracter(*cadena);
  3705  016E  0872               	movf	enviocadena@cadena,w
  3706  016F  0084               	movwf	4
  3707  0170  0800               	movf	0,w
  3708  0171  120A  118A  212C  120A  118A  	fcall	_enviocaracter
  3709  0176                     l1739:
  3710                           
  3711                           ;usart.c: 47:       cadena++;
  3712  0176  3001               	movlw	1
  3713  0177  00F1               	movwf	??_enviocadena
  3714  0178  0871               	movf	??_enviocadena,w
  3715  0179  07F2               	addwf	enviocadena@cadena,f
  3716  017A                     l1741:
  3717                           
  3718                           ;usart.c: 45:     while (*cadena != 0){
  3719  017A  0872               	movf	enviocadena@cadena,w
  3720  017B  0084               	movwf	4
  3721  017C  1383               	bcf	3,7	;select IRP bank0
  3722  017D  0800               	movf	0,w
  3723  017E  1D03               	btfss	3,2
  3724  017F  2981               	goto	u961
  3725  0180  2982               	goto	u960
  3726  0181                     u961:
  3727  0181  296E               	goto	l1737
  3728  0182                     u960:
  3729  0182                     l262:
  3730                           
  3731                           ;usart.c: 49:     if (PIR1bits.TXIF){
  3732  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0184  1E0C               	btfss	12,4	;volatile
  3735  0185  2987               	goto	u971
  3736  0186  2988               	goto	u970
  3737  0187                     u971:
  3738  0187  298A               	goto	l264
  3739  0188                     u970:
  3740  0188                     l1743:
  3741                           
  3742                           ;usart.c: 50:             TXREG = 13;
  3743  0188  300D               	movlw	13
  3744  0189  0099               	movwf	25	;volatile
  3745  018A                     l264:
  3746  018A  0008               	return
  3747  018B                     __end_of_enviocadena:
  3748                           
  3749                           	psect	text17
  3750  012C                     __ptext17:	
  3751 ;; *************** function _enviocaracter *****************
  3752 ;; Defined at:
  3753 ;;		line 35 in file "usart.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  a               1    wreg     unsigned char 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  a               1    0[COMMON] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         0       0       0       0       0
  3768 ;;      Locals:         1       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0
  3770 ;;      Totals:         1       0       0       0       0
  3771 ;;Total ram usage:        1 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_enviocadena
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _enviocaracter
  3782  012C                     _enviocaracter:
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in _enviocaracter: [wreg]
  3786                           ;enviocaracter@a stored from wreg
  3787  012C  00F0               	movwf	enviocaracter@a
  3788  012D                     l1509:
  3789  012D                     l253:	
  3790                           ;usart.c: 38:     }
  3791                           
  3792                           
  3793                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  3794  012D  1683               	bsf	3,5	;RP0=1, select bank1
  3795  012E  1303               	bcf	3,6	;RP1=0, select bank1
  3796  012F  1C98               	btfss	24,1	;volatile
  3797  0130  2932               	goto	u731
  3798  0131  2933               	goto	u730
  3799  0132                     u731:
  3800  0132  292D               	goto	l253
  3801  0133                     u730:
  3802  0133                     l255:
  3803                           
  3804                           ;usart.c: 39:     if (PIR1bits.TXIF){
  3805  0133  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0134  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0135  1E0C               	btfss	12,4	;volatile
  3808  0136  2938               	goto	u741
  3809  0137  2939               	goto	u740
  3810  0138                     u741:
  3811  0138  293B               	goto	l257
  3812  0139                     u740:
  3813  0139                     l1511:
  3814                           
  3815                           ;usart.c: 40:             TXREG = a;
  3816  0139  0870               	movf	enviocaracter@a,w
  3817  013A  0099               	movwf	25	;volatile
  3818  013B                     l257:
  3819  013B  0008               	return
  3820  013C                     __end_of_enviocaracter:
  3821                           
  3822                           	psect	text18
  3823  01AF                     __ptext18:	
  3824 ;; *************** function _I2C_Master_Read *****************
  3825 ;; Defined at:
  3826 ;;		line 74 in file "I2C.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  a               2    0[COMMON] unsigned short 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  temp            2    4[COMMON] unsigned short 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2    0[COMMON] unsigned short 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         2       0       0       0       0
  3841 ;;      Locals:         2       0       0       0       0
  3842 ;;      Temps:          2       0       0       0       0
  3843 ;;      Totals:         6       0       0       0       0
  3844 ;;Total ram usage:        6 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    1
  3847 ;; This function calls:
  3848 ;;		_I2C_Master_Wait
  3849 ;; This function is called by:
  3850 ;;		_main
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _I2C_Master_Read
  3856  01AF                     _I2C_Master_Read:
  3857  01AF                     l1651:	
  3858                           ;incstack = 0
  3859                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3860                           
  3861                           
  3862                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3863  01AF  120A  118A  211F  120A  118A  	fcall	_I2C_Master_Wait
  3864  01B4                     l1653:
  3865                           
  3866                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3867  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  3868  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  3869  01B6  1591               	bsf	17,3	;volatile
  3870                           
  3871                           ;I2C.c: 79:     I2C_Master_Wait();
  3872  01B7  120A  118A  211F  120A  118A  	fcall	_I2C_Master_Wait
  3873  01BC                     l1655:
  3874                           
  3875                           ;I2C.c: 80:     temp = SSPBUF;
  3876  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  3877  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  3878  01BE  0813               	movf	19,w	;volatile
  3879  01BF  00F2               	movwf	??_I2C_Master_Read
  3880  01C0  01F3               	clrf	??_I2C_Master_Read+1
  3881  01C1  0872               	movf	??_I2C_Master_Read,w
  3882  01C2  00F4               	movwf	I2C_Master_Read@temp
  3883  01C3  0873               	movf	??_I2C_Master_Read+1,w
  3884  01C4  00F5               	movwf	I2C_Master_Read@temp+1
  3885  01C5                     l1657:
  3886                           
  3887                           ;I2C.c: 81:     I2C_Master_Wait();
  3888  01C5  120A  118A  211F  120A  118A  	fcall	_I2C_Master_Wait
  3889  01CA                     l1659:
  3890                           
  3891                           ;I2C.c: 82:     if(a == 1){
  3892  01CA  0370               	decf	I2C_Master_Read@a,w
  3893  01CB  0471               	iorwf	I2C_Master_Read@a+1,w
  3894  01CC  1D03               	btfss	3,2
  3895  01CD  29CF               	goto	u881
  3896  01CE  29D0               	goto	u880
  3897  01CF                     u881:
  3898  01CF  29D4               	goto	l175
  3899  01D0                     u880:
  3900  01D0                     l1661:
  3901                           
  3902                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3903  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  3904  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  3905  01D2  1291               	bcf	17,5	;volatile
  3906                           
  3907                           ;I2C.c: 84:     }else{
  3908  01D3  29D7               	goto	l176
  3909  01D4                     l175:
  3910                           
  3911                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3912  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  3913  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  3914  01D6  1691               	bsf	17,5	;volatile
  3915  01D7                     l176:	
  3916                           ;I2C.c: 86:     }
  3917                           
  3918                           
  3919                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3920  01D7  1611               	bsf	17,4	;volatile
  3921  01D8                     l1663:
  3922                           
  3923                           ;I2C.c: 88:     return temp;
  3924  01D8  0875               	movf	I2C_Master_Read@temp+1,w
  3925  01D9  00F1               	movwf	?_I2C_Master_Read+1
  3926  01DA  0874               	movf	I2C_Master_Read@temp,w
  3927  01DB  00F0               	movwf	?_I2C_Master_Read
  3928  01DC                     l177:
  3929  01DC  0008               	return
  3930  01DD                     __end_of_I2C_Master_Read:
  3931                           
  3932                           	psect	text19
  3933  011F                     __ptext19:	
  3934 ;; *************** function _I2C_Master_Wait *****************
  3935 ;; Defined at:
  3936 ;;		line 32 in file "I2C.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      void 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3950 ;;      Params:         0       0       0       0       0
  3951 ;;      Locals:         0       0       0       0       0
  3952 ;;      Temps:          0       0       0       0       0
  3953 ;;      Totals:         0       0       0       0       0
  3954 ;;Total ram usage:        0 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_I2C_Master_Start
  3960 ;;		_I2C_Master_Stop
  3961 ;;		_I2C_Master_Write
  3962 ;;		_I2C_Master_Read
  3963 ;;		_I2C_Master_RepeatedStart
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           
  3968                           ;psect for function _I2C_Master_Wait
  3969  011F                     _I2C_Master_Wait:
  3970  011F                     l1407:	
  3971                           ;incstack = 0
  3972                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3973                           
  3974  011F                     l157:	
  3975                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3976                           
  3977  011F  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0120  1303               	bcf	3,6	;RP1=0, select bank1
  3979  0121  1914               	btfsc	20,2	;volatile
  3980  0122  2924               	goto	u581
  3981  0123  2925               	goto	u580
  3982  0124                     u581:
  3983  0124  291F               	goto	l157
  3984  0125                     u580:
  3985  0125                     l1409:
  3986  0125  0811               	movf	17,w	;volatile
  3987  0126  391F               	andlw	31
  3988  0127  1D03               	btfss	3,2
  3989  0128  292A               	goto	u591
  3990  0129  292B               	goto	u590
  3991  012A                     u591:
  3992  012A  291F               	goto	l157
  3993  012B                     u590:
  3994  012B                     l160:
  3995  012B  0008               	return
  3996  012C                     __end_of_I2C_Master_Wait:
  3997  007E                     btemp	set	126	;btemp
  3998  007E                     wtemp0	set	126
  3999                           
  4000                           	psect	config
  4001                           
  4002                           ;Config register CONFIG1 @ 0x2007
  4003                           ;	Oscillator Selection bits
  4004                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4005                           ;	Watchdog Timer Enable bit
  4006                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4007                           ;	Power-up Timer Enable bit
  4008                           ;	PWRTE = OFF, PWRT disabled
  4009                           ;	RE3/MCLR pin function select bit
  4010                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4011                           ;	Code Protection bit
  4012                           ;	CP = OFF, Program memory code protection is disabled
  4013                           ;	Data Code Protection bit
  4014                           ;	CPD = OFF, Data memory code protection is disabled
  4015                           ;	Brown Out Reset Selection bits
  4016                           ;	BOREN = OFF, BOR disabled
  4017                           ;	Internal External Switchover bit
  4018                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4019                           ;	Fail-Safe Clock Monitor Enabled bit
  4020                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4021                           ;	Low Voltage Programming Enable bit
  4022                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4023                           ;	In-Circuit Debugger Mode bit
  4024                           ;	DEBUG = 0x1, unprogrammed default
  4025  2007                     	org	8199
  4026  2007  20D4               	dw	8404
  4027                           
  4028                           ;Config register CONFIG2 @ 0x2008
  4029                           ;	Brown-out Reset Selection bit
  4030                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4031                           ;	Flash Program Memory Self Write Enable bits
  4032                           ;	WRT = OFF, Write protection off
  4033  2008                     	org	8200
  4034  2008  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[15]), volt(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    _enviocadena->_enviocaracter

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    6295
                                             23 BANK0     11    11      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _enviocadena
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    18     13    1280
                                              0 BANK0     23    10     13
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    2332
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1238
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _enviocadena
     _enviocaracter
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      56       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      56      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Sep 06 21:00:55 2021

                        _L 0032                          _M 0030                          _R 0031  
                        _a 0035                          _x 002A                          _y 0028  
                        pc 0002                         _s1 0034                         _s2 0033  
                       _z1 002D                         fsr 0004                        l110 05CC  
                      l102 05B6                        l106 05C2                        l211 0151  
                      l205 01AE                        l125 0470                        l160 012B  
                      l208 0325                        l217 0290                        l154 0214  
                      l163 010B                        l172 011E                        l157 011F  
                      l253 012D                        l262 0182                        l175 01D4  
                      l255 0133                        l415 038B                        l176 01D7  
                      l264 018A                        l177 01DC                        l257 013B  
                      l169 0114                        l193 00FA                        l196 016B  
                      l375 0573                        l651 02D4                        l661 024E  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      u600 0336                        u601 0335                        u620 034A  
                      u700 027E                        u621 0349                        u710 0290  
                      u615 033B                        u711 028F                        u640 0365  
                      u720 01F4                        u641 0364                        u730 0133  
                      u810 02D0                        u731 0132                        u635 034C  
                      u811 02CF                        u580 0125                        u740 0139  
                      u660 0383                        u820 021B                        u900 04D4  
                      u581 0124                        u741 0138                        u661 0382  
                      u645 0361                        u725 01EF                        u805 02C4  
                      u821 021A                        u901 04D3                        u590 012B  
                      u670 0191                        u750 0299                        u910 04FA  
                      u591 012A                        u655 0375                        u671 0190  
                      u751 0298                        u911 04F9                        u680 01A3  
                      u840 022D                        u920 0505                        u681 01A2  
                      u841 022C                        u921 0504                        u690 025C  
                      u770 02AB                        u850 0237                        u930 050B  
                      u771 02AA                        u851 0236                        u835 021F  
                      u931 050A                        u915 04F6                        u940 055D  
                      u765 029D                        u941 055C                        u790 02BC  
                      u870 024A                        u950 056F                        u791 02BB  
                      u871 0249                        u855 0233                        u951 056E  
                      u880 01D0                        u960 0182                        u881 01CF  
                      u961 0181                        u785 02AC                        u865 023E  
                      u970 0188                        u890 047F                        u971 0187  
                      u795 02B8                        u891 047E                        u980 05BA  
                      u981 05B9                        u990 05C0                        u991 05BF  
                      fsr0 0004                        _xls 002F                        _xms 0026  
                      _yls 002E                        _yms 0024                        indf 0000  
                     l1411 0153                       l1501 01E4                       l1405 00F6  
                     l1413 0156                       l1421 013D                       l1407 011F  
                     l1511 0139                       l1431 0326                       l1503 0211  
                     l1415 015C                       l1423 0140                       l1409 0125  
                     l1441 0353                       l1433 0336                       l1505 0212  
                     l1417 015F                       l1425 0146                       l1601 03B7  
                     l1521 02A3                       l1513 0291                       l1443 0365  
                     l1435 0339                       l1451 0383                       l1507 0213  
                     l1419 0168                       l1427 0149                       l1611 03C9  
                     l1603 03B8                       l1531 02C3                       l1523 02A7  
                     l1515 0293                       l1509 012D                       l1445 0373  
                     l1437 0346                       l1461 011A                       l1429 014E  
                     l1621 03F8                       l1613 03D2                       l1605 03B9  
                     l1533 02CA                       l1525 02AB                       l1517 0299  
                     l1541 021B                       l1447 0374                       l1439 034A  
                     l1455 0103                       l1463 010C                       l1471 0196  
                     l1631 041F                       l1623 0401                       l1615 03E1  
                     l1607 03BC                       l1527 02BC                       l1519 029C  
                     l1535 02D0                       l1551 0237                       l1543 021E  
                     l1711 050B                       l1703 04DF                       l1449 037D  
                     l1457 0108                       l1465 0111                       l1473 019D  
                     l1481 0252                       l1641 0446                       l1633 0428  
                     l1625 0406                       l1617 03E6                       l1609 03C1  
                     l1561 038C                       l1529 02C2                       l1553 023D  
                     l1545 0225                       l1721 0550                       l1713 0512  
                     l1801 072B                       l1651 01AF                       l1459 0115  
                     l1491 02E4                       l1475 01A3                       l1467 018C  
                     l1483 026E                       l1643 044F                       l1635 0431  
                     l1627 0411                       l1619 03EF                       l1571 0398  
                     l1563 0390                       l1555 0244                       l1547 0229  
                     l1539 0215                       l1723 0554                       l1715 0516  
                     l1707 04FB                       l1811 0764                       l1803 0731  
                     l1661 01D0                       l1653 01B4                       l1741 017A  
                     l1493 02F3                       l1477 01A8                       l1469 0191  
                     l1485 0274                       l1645 0458                       l1637 0436  
                     l1629 0416                       l1581 03A2                       l1573 0399  
                     l1565 0391                       l1549 022D                       l1557 024A  
                     l1717 051B                       l1709 0505                       l1725 055D  
                     l1821 0789                       l1813 076A                       l1805 0740  
                     l1663 01D8                       l1655 01BC                       l1743 0188  
                     l1735 016D                       l1495 02F9                       l1487 02D5  
                     l1479 024F                       l1647 0460                       l1639 0441  
                     l1591 03AB                       l1583 03A3                       l1575 039A  
                     l1567 0394                       l1719 0549                       l1727 056F  
                     l1671 047F                       l1831 07A5                       l1823 078D  
                     l1815 0779                       l1807 074F                       l1751 058C  
                     l1657 01C5                       l1737 016E                       l1497 01DD  
                     l1489 02DB                       l1649 0465                       l1593 03AC  
                     l1585 03A6                       l1577 039C                       l1569 0395  
                     l1681 0498                       l1673 0486                       l1833 07D8  
                     l1825 078E                       l1817 077F                       l1809 075E  
                     l1761 05C0                       l1753 0595                       l1745 0574  
                     l1659 01CA                       l1739 0176                       l1499 01E1  
                     l1595 03AF                       l1587 03A9                       l1579 039F  
                     l1691 04D0                       l1675 048B                       l1667 0474  
                     l1835 07DE                       l1827 0792                       l1819 0783  
                     l1771 05FF                       l1763 05C6                       l1747 057A  
                     l1597 03B3                       l1589 03AA                       l1693 04D4  
                     l1677 048D                       l1685 04A4                       l1669 0479  
                     l1837 07E6                       l1829 079F                       l1781 0652  
                     l1773 0608                       l1765 05CE                       l1749 0583  
                     l1757 059E                       l1599 03B4                       l1695 04D8  
                     l1687 04C4                       l1679 0494                       l1791 06F9  
                     l1783 0657                       l1775 0616                       l1767 05EF  
                     l1759 05BA                       l1697 04DD                       l1689 04CC  
                     l1793 0703                       l1785 0660                       l1777 061B  
                     l1769 05FA                       l1795 070A                       l1787 0668  
                     l1779 0647                       l1797 070F                       l1789 066D  
                     l1893 05A8                       l1895 04B6                       l1799 071C  
                     STR_1 001D                       STR_2 002F                       u1000 05C6  
                     u1001 05C5                       u1010 05CC                       u1011 05CB  
                     u1100 0789                       u1020 071C                       u1101 0788  
                     u1021 071B                       u1110 078D                       u1030 072B  
                     u1111 078C                       u1031 072A                       u1120 0792  
                     u1040 0740                       u1121 0791                       u1041 073F  
                     u1025 0718                       u1130 079F                       u1050 074F  
                     u1131 079E                       u1051 074E                       u1035 0727  
                     u1060 075E                       u1061 075D                       u1045 073C  
                     u1070 0764                       u1207 043C                       u1135 079B  
                     u1071 0763                       u1055 074B                       u1080 0779  
                     u1217 046B                       u1081 0778                       u1065 075A  
                     u1090 077F                       u1227 014B                       u1091 077E  
                     u1147 05F5                       u1237 02DF                       u1085 0775  
                     u1157 0621                       u1247 02EE                       u1167 064D  
                     u1257 02FD                       u1177 0673                       u1267 0163  
                     u1187 06FF                       u1197 040C                       _PEIE 005E  
        ?_Lcd_Write_String 0073                       _arct 0022                       _main 0574  
                     btemp 007E                       _volt 0036                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 016C               ?_enviocadena 0070  
         ?_I2C_Master_Init 0046           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      _EEADR 010D  
                    _EEDAT 010C                      _ANSEL 0188            __end_of___lldiv 038C  
          __end_of___lwdiv 02D5            __end_of___lwmod 024F                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019            __end_of_dpowers 001D                      _setup 038C  
   __size_of_enviocaracter 0010                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0574           __end_of_Lcd_Init 0326  
         __end_of_Lcd_Port 00FB            __initialization 07F3               __end_of_main 07F3  
                   ??_main 005D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     _EECON2 018D  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lldiv 0078              _enviocaracter 012C  
                ??___lwdiv 0074                  ??___lwmod 007C                  ??_sprintf 0053  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC  
           __pcstackCOMMON 0070             ?_enviocaracter 0070       __size_of_enviocadena 001F  
            __end_of_setup 0471             _Lcd_Set_Cursor 018B             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 004E  
               __pbssBANK0 0020                 __pmaintext 0574  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 01AF                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094             enviocaracter@a 0070  
               __stringtab 0003                    _Heading 0020             _Lcd_Write_Char 013C  
                  _Lcd_Cmd 0152            ??_enviocaracter 0070                    ___lldiv 0326  
                  ___lwdiv 0291                    ___lwmod 0215            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0471                    __ptext2 0215                    __ptext3 0291  
                  __ptext4 038C                    __ptext5 024F                    __ptext6 013C  
                  __ptext7 018B                    __ptext8 02D5                    __ptext9 0152  
                  _dpowers 0013                    _mapping 002C   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 0471                    clrloop0 00FC     __end_of_Lcd_Write_Char 0152  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
         I2C_Master_Init@c 0046           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
                _PORTBbits 0006                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                  _TXSTAbits 0098  
         _Lcd_Write_String 024F                _BAUDCTLbits 0187        start_initialization 07F3  
        __size_of_Lcd_Init 0051          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 004A  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
            ??_enviocadena 0071            Lcd_Write_Char@a 0072                  ___latbits 0002  
            __pcstackBANK0 0046                   ?_Lcd_Cmd 0070                sprintf@flag 0056  
              sprintf@prec 0057           _I2C_Master_Start 0103           _I2C_Master_Write 0115  
         ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078        __end_of_enviocadena 018B  
                __pstrings 0003           ___lwdiv@quotient 0075                   ?_sprintf 0046  
           __size_of_setup 00E5                  clear_ram0 00FB                   Lcd_Cmd@a 0073  
                 _PIR1bits 000C                   _PIR2bits 000D      __end_of_enviocaracter 013C  
              __stringbase 0012                   _WPUBbits 0095           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 02D5                   _Lcd_Port 00F5        I2C_Master_Read@temp 0074  
        enviocadena@cadena 0072   __end_of_Lcd_Write_String 0291           __size_of_Lcd_Cmd 001A  
               _EECON1bits 018C                _enviocadena 016C           __size_of___lldiv 0066  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
               sprintf@val 0059            _I2C_Master_Init 01DD            _I2C_Master_Read 01AF  
          _I2C_Master_Wait 011F            _I2C_Master_Stop 010C            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 00F5                   __ptext11 0115  
                 __ptext12 010C                   __ptext13 0103                   __ptext14 01DD  
                 __ptext15 0326                   __ptext16 016C                   __ptext17 012C  
                 __ptext18 01AF                   __ptext19 011F           __size_of_sprintf 0103  
            __size_of_main 027F   __end_of_I2C_Master_Start 010C   __end_of_I2C_Master_Write 011F  
               _INTCONbits 000B                  sprintf@ap 0058                  sprintf@sp 005B  
         ___lwmod@dividend 007A           ___lldiv@dividend 0074                  stringcode 000D  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0215    __end_of_I2C_Master_Read 01DD  
  __end_of_I2C_Master_Wait 012C    __end_of_I2C_Master_Stop 0115         Lcd_Set_Cursor@temp 0077  
                 sprintf@c 005C                   sprintf@f 0046           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003                _SSPCON2bits 0091  
