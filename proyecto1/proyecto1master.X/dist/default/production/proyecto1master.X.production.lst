

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Sep 06 04:16:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:
   460  0003                     stringtab:
   461  0003                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0003  1BFF               	btfsc	btemp+1,7
   465  0004  280D               	ljmp	stringcode
   466  0005  1383               	bcf	3,7
   467  0006  187F               	btfsc	btemp+1,0
   468  0007  1783               	bsf	3,7
   469  0008  0800               	movf	0,w
   470  0009  0A84               	incf	4,f
   471  000A  1903               	skipnz
   472  000B  0AFF               	incf	btemp+1,f
   473  000C  0008               	return
   474  000D                     stringcode:
   475  000D                     stringdir:
   476  000D  3000               	movlw	high stringdir
   477  000E  008A               	movwf	10
   478  000F  0804               	movf	4,w
   479  0010  0A84               	incf	4,f
   480  0011  0782               	addwf	2,f
   481  0012                     __stringbase:
   482  0012  3400               	retlw	0
   483  0013                     __end_of__stringtab:
   484  0013                     _dpowers:
   485  0013  3401               	retlw	1
   486  0014  3400               	retlw	0
   487  0015  340A               	retlw	10
   488  0016  3400               	retlw	0
   489  0017  3464               	retlw	100
   490  0018  3400               	retlw	0
   491  0019  34E8               	retlw	232
   492  001A  3403               	retlw	3
   493  001B  3410               	retlw	16
   494  001C  3427               	retlw	39
   495  001D                     __end_of_dpowers:
   496  0019                     _TXREG	set	25
   497  000C                     _PIR1bits	set	12
   498  000D                     _PIR2bits	set	13
   499  000B                     _INTCONbits	set	11
   500  0013                     _SSPBUF	set	19
   501  0014                     _SSPCON	set	20
   502  0018                     _RCSTAbits	set	24
   503  0008                     _PORTD	set	8
   504  0006                     _PORTB	set	6
   505  0006                     _PORTBbits	set	6
   506  0039                     _RC1	set	57
   507  0038                     _RC0	set	56
   508  0063                     _SSPIF	set	99
   509  005E                     _PEIE	set	94
   510  005F                     _GIE	set	95
   511  0091                     _SSPCON2bits	set	145
   512  0094                     _SSPSTAT	set	148
   513  0093                     _SSPADD	set	147
   514  0091                     _SSPCON2	set	145
   515  009A                     _SPBRGH	set	154
   516  0099                     _SPBRG	set	153
   517  0098                     _TXSTAbits	set	152
   518  0095                     _WPUBbits	set	149
   519  0081                     _OPTION_REGbits	set	129
   520  0089                     _TRISE	set	137
   521  0088                     _TRISD	set	136
   522  0086                     _TRISB	set	134
   523  0087                     _TRISCbits	set	135
   524  0085                     _TRISA	set	133
   525  008F                     _OSCCONbits	set	143
   526  0463                     _SSPIE	set	1123
   527  043C                     _TRISC4	set	1084
   528  043B                     _TRISC3	set	1083
   529  010C                     _EEDAT	set	268
   530  010D                     _EEADR	set	269
   531  018D                     _EECON2	set	397
   532  018C                     _EECON1bits	set	396
   533  0187                     _BAUDCTLbits	set	391
   534  0188                     _ANSEL	set	392
   535  0189                     _ANSELH	set	393
   536  001D                     STR_1:
   537  001D  3425               	retlw	37	;'%'
   538  001E  3464               	retlw	100	;'d'
   539  001F  3420               	retlw	32	;' '
   540  0020  3425               	retlw	37	;'%'
   541  0021  3463               	retlw	99	;'c'
   542  0022  3425               	retlw	37	;'%'
   543  0023  3463               	retlw	99	;'c'
   544  0024  3420               	retlw	32	;' '
   545  0025  3425               	retlw	37	;'%'
   546  0026  3464               	retlw	100	;'d'
   547  0027  3420               	retlw	32	;' '
   548  0028  3425               	retlw	37	;'%'
   549  0029  3464               	retlw	100	;'d'
   550  002A  3420               	retlw	32	;' '
   551  002B  3425               	retlw	37	;'%'
   552  002C  3464               	retlw	100	;'d'
   553  002D  340A               	retlw	10
   554  002E  3400               	retlw	0
   555  002F                     STR_2:
   556  002F  3449               	retlw	73	;'I'
   557  0030  345F               	retlw	95	;'_'
   558  0031  344C               	retlw	76	;'L'
   559  0032  3452               	retlw	82	;'R'
   560  0033  345F               	retlw	95	;'_'
   561  0034  344D               	retlw	77	;'M'
   562  0035  345F               	retlw	95	;'_'
   563  0036  3458               	retlw	88	;'X'
   564  0037  345F               	retlw	95	;'_'
   565  0038  345F               	retlw	95	;'_'
   566  0039  345F               	retlw	95	;'_'
   567  003A  345F               	retlw	95	;'_'
   568  003B  3459               	retlw	89	;'Y'
   569  003C  345F               	retlw	95	;'_'
   570  003D  345F               	retlw	95	;'_'
   571  003E  345F               	retlw	95	;'_'
   572  003F  3400               	retlw	0
   573                           
   574                           	psect	cinit
   575  07F3                     start_initialization:	
   576                           ; #config settings
   577                           
   578  07F3                     __initialization:
   579                           
   580                           ; Clear objects allocated to BANK0
   581  07F3  1383               	bcf	3,7	;select IRP bank0
   582  07F4  3020               	movlw	low __pbssBANK0
   583  07F5  0084               	movwf	4
   584  07F6  3046               	movlw	low (__pbssBANK0+38)
   585  07F7  120A  118A  2253  120A  118A  	fcall	clear_ram0
   586  07FC                     end_of_initialization:	
   587                           ;End of C runtime variable initialization code
   588                           
   589  07FC                     __end_of__initialization:
   590  07FC  0183               	clrf	3
   591  07FD  120A  118A  2ECC   	ljmp	_main	;jump to C main() function
   592                           
   593                           	psect	bssBANK0
   594  0020                     __pbssBANK0:
   595  0020                     _Heading:
   596  0020                     	ds	2
   597  0022                     _arct:
   598  0022                     	ds	2
   599  0024                     _yms:
   600  0024                     	ds	2
   601  0026                     _xms:
   602  0026                     	ds	2
   603  0028                     _y:
   604  0028                     	ds	2
   605  002A                     _x:
   606  002A                     	ds	2
   607  002C                     _mapping:
   608  002C                     	ds	1
   609  002D                     _z1:
   610  002D                     	ds	1
   611  002E                     _yls:
   612  002E                     	ds	1
   613  002F                     _xls:
   614  002F                     	ds	1
   615  0030                     _M:
   616  0030                     	ds	1
   617  0031                     _R:
   618  0031                     	ds	1
   619  0032                     _L:
   620  0032                     	ds	1
   621  0033                     _s2:
   622  0033                     	ds	1
   623  0034                     _s1:
   624  0034                     	ds	1
   625  0035                     _a:
   626  0035                     	ds	1
   627  0036                     _volt:
   628  0036                     	ds	16
   629                           
   630                           	psect	clrtext
   631  0253                     clear_ram0:	
   632                           ;	Called with FSR containing the base address, and
   633                           ;	W with the last address+1
   634                           
   635  0253  0064               	clrwdt	;clear the watchdog before getting into this loop
   636  0254                     clrloop0:
   637  0254  0180               	clrf	0	;clear RAM location pointed to by FSR
   638  0255  0A84               	incf	4,f	;increment pointer
   639  0256  0604               	xorwf	4,w	;XOR with final address
   640  0257  1903               	btfsc	3,2	;have we reached the end yet?
   641  0258  3400               	retlw	0	;all done for this memory range, return
   642  0259  0604               	xorwf	4,w	;XOR again to restore value
   643  025A  2A54               	goto	clrloop0	;do the next byte
   644                           
   645                           	psect	cstackCOMMON
   646  0070                     __pcstackCOMMON:
   647  0070                     ?_setup:
   648  0070                     ?_I2C_Master_Start:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ??_I2C_Master_Start:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_I2C_Master_Write:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_I2C_Master_Stop:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ??_I2C_Master_Stop:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_enviocadena:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_Lcd_Init:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_main:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_I2C_Master_Wait:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ??_I2C_Master_Wait:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Lcd_Port:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ??_Lcd_Port:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_Lcd_Cmd:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_Lcd_Write_Char:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_enviocaracter:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_enviocaracter:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_I2C_Master_Read:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?___lwdiv:	
   700                           ; 2 bytes @ 0x0
   701                           
   702  0070                     ?___lldiv:	
   703                           ; 2 bytes @ 0x0
   704                           
   705  0070                     Lcd_Port@a:	
   706                           ; 4 bytes @ 0x0
   707                           
   708  0070                     enviocaracter@a:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     I2C_Master_Write@d:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     I2C_Master_Read@a:	
   715                           ; 2 bytes @ 0x0
   716                           
   717  0070                     ___lwdiv@divisor:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0070                     ___lldiv@divisor:	
   721                           ; 2 bytes @ 0x0
   722                           
   723                           
   724                           ; 4 bytes @ 0x0
   725  0070                     	ds	1
   726  0071                     ??_enviocadena:
   727  0071                     ??_Lcd_Cmd:	
   728                           ; 1 bytes @ 0x1
   729                           
   730  0071                     ??_Lcd_Write_Char:	
   731                           ; 1 bytes @ 0x1
   732                           
   733                           
   734                           ; 1 bytes @ 0x1
   735  0071                     	ds	1
   736  0072                     ??_I2C_Master_Write:
   737  0072                     ??_I2C_Master_Read:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     Lcd_Write_Char@a:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     enviocadena@cadena:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0072                     ___lwdiv@dividend:	
   747                           ; 1 bytes @ 0x2
   748                           
   749                           
   750                           ; 2 bytes @ 0x2
   751  0072                     	ds	1
   752  0073                     ?_Lcd_Write_String:
   753  0073                     Lcd_Cmd@a:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     Lcd_Write_String@a:	
   757                           ; 1 bytes @ 0x3
   758                           
   759                           
   760                           ; 2 bytes @ 0x3
   761  0073                     	ds	1
   762  0074                     ?_Lcd_Set_Cursor:
   763  0074                     ??_Lcd_Init:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ??___lwdiv:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     Lcd_Set_Cursor@b:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     I2C_Master_Read@temp:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     ___lldiv@dividend:	
   776                           ; 2 bytes @ 0x4
   777                           
   778                           
   779                           ; 4 bytes @ 0x4
   780  0074                     	ds	1
   781  0075                     ??_Lcd_Set_Cursor:
   782  0075                     ??_Lcd_Write_String:	
   783                           ; 1 bytes @ 0x5
   784                           
   785  0075                     ___lwdiv@quotient:	
   786                           ; 1 bytes @ 0x5
   787                           
   788                           
   789                           ; 2 bytes @ 0x5
   790  0075                     	ds	1
   791  0076                     Lcd_Set_Cursor@a:
   792                           
   793                           ; 1 bytes @ 0x6
   794  0076                     	ds	1
   795  0077                     Lcd_Set_Cursor@temp:
   796  0077                     ___lwdiv@counter:	
   797                           ; 1 bytes @ 0x7
   798                           
   799                           
   800                           ; 1 bytes @ 0x7
   801  0077                     	ds	1
   802  0078                     ??___lldiv:
   803  0078                     ?___lwmod:	
   804                           ; 1 bytes @ 0x8
   805                           
   806  0078                     Lcd_Write_String@i:	
   807                           ; 2 bytes @ 0x8
   808                           
   809  0078                     ___lwmod@divisor:	
   810                           ; 2 bytes @ 0x8
   811                           
   812                           
   813                           ; 2 bytes @ 0x8
   814  0078                     	ds	1
   815  0079                     ___lldiv@quotient:
   816                           
   817                           ; 4 bytes @ 0x9
   818  0079                     	ds	1
   819  007A                     ___lwmod@dividend:
   820                           
   821                           ; 2 bytes @ 0xA
   822  007A                     	ds	2
   823  007C                     ??___lwmod:
   824                           
   825                           ; 1 bytes @ 0xC
   826  007C                     	ds	1
   827  007D                     ___lldiv@counter:
   828  007D                     ___lwmod@counter:	
   829                           ; 1 bytes @ 0xD
   830                           
   831                           
   832                           ; 1 bytes @ 0xD
   833  007D                     	ds	1
   834                           
   835                           	psect	cstackBANK0
   836  0046                     __pcstackBANK0:
   837  0046                     ?_I2C_Master_Init:
   838  0046                     ?_sprintf:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0046                     sprintf@f:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0046                     I2C_Master_Init@c:	
   845                           ; 1 bytes @ 0x0
   846                           
   847                           
   848                           ; 4 bytes @ 0x0
   849  0046                     	ds	4
   850  004A                     ??_I2C_Master_Init:
   851                           
   852                           ; 1 bytes @ 0x4
   853  004A                     	ds	4
   854  004E                     ??_setup:
   855                           
   856                           ; 1 bytes @ 0x8
   857  004E                     	ds	5
   858  0053                     ??_sprintf:
   859                           
   860                           ; 1 bytes @ 0xD
   861  0053                     	ds	3
   862  0056                     sprintf@flag:
   863                           
   864                           ; 1 bytes @ 0x10
   865  0056                     	ds	1
   866  0057                     sprintf@prec:
   867                           
   868                           ; 1 bytes @ 0x11
   869  0057                     	ds	1
   870  0058                     sprintf@ap:
   871                           
   872                           ; 1 bytes @ 0x12
   873  0058                     	ds	1
   874  0059                     sprintf@val:
   875                           
   876                           ; 2 bytes @ 0x13
   877  0059                     	ds	2
   878  005B                     sprintf@sp:
   879                           
   880                           ; 1 bytes @ 0x15
   881  005B                     	ds	1
   882  005C                     sprintf@c:
   883                           
   884                           ; 1 bytes @ 0x16
   885  005C                     	ds	1
   886  005D                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x17
   889  005D                     	ds	9
   890                           
   891                           	psect	maintext
   892  06CC                     __pmaintext:	
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 71 in file "proyecto1master.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : B00/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       9       0       0       0
   915 ;;      Totals:         0       9       0       0       0
   916 ;;Total ram usage:        9 bytes
   917 ;; Hardware stack levels required when called:    4
   918 ;; This function calls:
   919 ;;		_I2C_Master_Read
   920 ;;		_I2C_Master_Start
   921 ;;		_I2C_Master_Stop
   922 ;;		_I2C_Master_Write
   923 ;;		_Lcd_Set_Cursor
   924 ;;		_Lcd_Write_String
   925 ;;		_enviocadena
   926 ;;		_setup
   927 ;;		_sprintf
   928 ;; This function is called by:
   929 ;;		Startup code after reset
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _main
   935  06CC                     _main:
   936  06CC                     l1686:	
   937                           ;incstack = 0
   938                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   939                           
   940                           
   941                           ;proyecto1master.c: 72:     setup();
   942  06CC  120A  118A  24E4  120A  118A  	fcall	_setup
   943  06D1  2EF6               	goto	l1698
   944  06D2                     l1688:
   945                           
   946                           ;proyecto1master.c: 77:                 L = 45;
   947  06D2  302D               	movlw	45
   948  06D3  00DD               	movwf	??_main
   949  06D4  085D               	movf	??_main,w
   950  06D5  00B2               	movwf	_L
   951                           
   952                           ;proyecto1master.c: 78:                 R = 45;
   953  06D6  302D               	movlw	45
   954  06D7  00DD               	movwf	??_main
   955  06D8  085D               	movf	??_main,w
   956  06D9  00B1               	movwf	_R
   957                           
   958                           ;proyecto1master.c: 79:                 break;
   959  06DA  2F0E               	goto	l102
   960  06DB                     l1690:
   961                           
   962                           ;proyecto1master.c: 82:                 L = 94;
   963  06DB  305E               	movlw	94
   964  06DC  00DD               	movwf	??_main
   965  06DD  085D               	movf	??_main,w
   966  06DE  00B2               	movwf	_L
   967                           
   968                           ;proyecto1master.c: 83:                 R = 94;
   969  06DF  305E               	movlw	94
   970  06E0  00DD               	movwf	??_main
   971  06E1  085D               	movf	??_main,w
   972  06E2  00B1               	movwf	_R
   973                           
   974                           ;proyecto1master.c: 84:                 break;
   975  06E3  2F0E               	goto	l102
   976  06E4                     l1692:
   977                           
   978                           ;proyecto1master.c: 87:                 L = 60;
   979  06E4  303C               	movlw	60
   980  06E5  00DD               	movwf	??_main
   981  06E6  085D               	movf	??_main,w
   982  06E7  00B2               	movwf	_L
   983                           
   984                           ;proyecto1master.c: 88:                 R = 60;
   985  06E8  303C               	movlw	60
   986  06E9  00DD               	movwf	??_main
   987  06EA  085D               	movf	??_main,w
   988  06EB  00B1               	movwf	_R
   989                           
   990                           ;proyecto1master.c: 89:                 break;
   991  06EC  2F0E               	goto	l102
   992  06ED                     l1694:
   993                           
   994                           ;proyecto1master.c: 92:                 L = 62;
   995  06ED  303E               	movlw	62
   996  06EE  00DD               	movwf	??_main
   997  06EF  085D               	movf	??_main,w
   998  06F0  00B2               	movwf	_L
   999                           
  1000                           ;proyecto1master.c: 93:                 R = 62;
  1001  06F1  303E               	movlw	62
  1002  06F2  00DD               	movwf	??_main
  1003  06F3  085D               	movf	??_main,w
  1004  06F4  00B1               	movwf	_R
  1005                           
  1006                           ;proyecto1master.c: 94:                 break;
  1007  06F5  2F0E               	goto	l102
  1008  06F6                     l1698:
  1009  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1010  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1011  06F8  0833               	movf	_s2,w
  1012  06F9  00DD               	movwf	??_main
  1013  06FA  01DE               	clrf	??_main+1
  1014                           
  1015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1016                           ; Switch size 1, requested type "simple"
  1017                           ; Number of cases is 1, Range of values is 0 to 0
  1018                           ; switch strategies available:
  1019                           ; Name         Instructions Cycles
  1020                           ; simple_byte            4     3 (average)
  1021                           ; direct_byte           11     8 (fixed)
  1022                           ; jumptable            260     6 (fixed)
  1023                           ;	Chosen strategy is simple_byte
  1024  06FB  085E               	movf	??_main+1,w
  1025  06FC  3A00               	xorlw	0	; case 0
  1026  06FD  1903               	skipnz
  1027  06FE  2F00               	goto	l1784
  1028  06FF  2F0E               	goto	l102
  1029  0700                     l1784:
  1030                           
  1031                           ; Switch size 1, requested type "simple"
  1032                           ; Number of cases is 4, Range of values is 0 to 45
  1033                           ; switch strategies available:
  1034                           ; Name         Instructions Cycles
  1035                           ; simple_byte           13     7 (average)
  1036                           ; direct_byte          146     8 (fixed)
  1037                           ; jumptable            260     6 (fixed)
  1038                           ;	Chosen strategy is simple_byte
  1039  0700  085D               	movf	??_main,w
  1040  0701  3A00               	xorlw	0	; case 0
  1041  0702  1903               	skipnz
  1042  0703  2ED2               	goto	l1688
  1043  0704  3A05               	xorlw	5	; case 5
  1044  0705  1903               	skipnz
  1045  0706  2EE4               	goto	l1692
  1046  0707  3A2D               	xorlw	45	; case 40
  1047  0708  1903               	skipnz
  1048  0709  2EED               	goto	l1694
  1049  070A  3A05               	xorlw	5	; case 45
  1050  070B  1903               	skipnz
  1051  070C  2EDB               	goto	l1690
  1052  070D  2F0E               	goto	l102
  1053  070E                     l102:
  1054                           
  1055                           ;proyecto1master.c: 96:     if ((PORTBbits.RB0 == 1) && (s1 >= 4)){
  1056  070E  1C06               	btfss	6,0	;volatile
  1057  070F  2F11               	goto	u861
  1058  0710  2F12               	goto	u860
  1059  0711                     u861:
  1060  0711  2F1A               	goto	l106
  1061  0712                     u860:
  1062  0712                     l1700:
  1063  0712  3004               	movlw	4
  1064  0713  0234               	subwf	_s1,w
  1065  0714  1C03               	skipc
  1066  0715  2F17               	goto	u871
  1067  0716  2F18               	goto	u870
  1068  0717                     u871:
  1069  0717  2F1A               	goto	l106
  1070  0718                     u870:
  1071  0718                     l1702:
  1072                           
  1073                           ;proyecto1master.c: 97:             M = 0;
  1074  0718  01B0               	clrf	_M
  1075                           
  1076                           ;proyecto1master.c: 98:             }
  1077  0719  2F26               	goto	l1706
  1078  071A                     l106:	
  1079                           ;proyecto1master.c: 99:     else if ((PORTBbits.RB0 == 0) || (s1 < 4)){
  1080                           
  1081  071A  1C06               	btfss	6,0	;volatile
  1082  071B  2F1D               	goto	u881
  1083  071C  2F1E               	goto	u880
  1084  071D                     u881:
  1085  071D  2F24               	goto	l110
  1086  071E                     u880:
  1087  071E                     l1704:
  1088  071E  3004               	movlw	4
  1089  071F  0234               	subwf	_s1,w
  1090  0720  1803               	skipnc
  1091  0721  2F23               	goto	u891
  1092  0722  2F24               	goto	u890
  1093  0723                     u891:
  1094  0723  2F26               	goto	l1706
  1095  0724                     u890:
  1096  0724                     l110:
  1097                           
  1098                           ;proyecto1master.c: 100:             M = 1;}
  1099  0724  01B0               	clrf	_M
  1100  0725  0AB0               	incf	_M,f
  1101  0726                     l1706:
  1102                           
  1103                           ;proyecto1master.c: 108:         I2C_Master_Start();
  1104  0726  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  1105                           
  1106                           ;proyecto1master.c: 109:         I2C_Master_Write(0x51);
  1107  072B  3051               	movlw	81
  1108  072C  00F0               	movwf	I2C_Master_Write@d
  1109  072D  3000               	movlw	0
  1110  072E  00F1               	movwf	I2C_Master_Write@d+1
  1111  072F  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  1112                           
  1113                           ;proyecto1master.c: 110:         s1 = I2C_Master_Read(0);
  1114  0734  3000               	movlw	0
  1115  0735  00F0               	movwf	I2C_Master_Read@a
  1116  0736  00F1               	movwf	I2C_Master_Read@a+1
  1117  0737  120A  118A  2307  120A  118A  	fcall	_I2C_Master_Read
  1118  073C  0870               	movf	?_I2C_Master_Read,w
  1119  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1120  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1121  073F  00DD               	movwf	??_main
  1122  0740  085D               	movf	??_main,w
  1123  0741  00B4               	movwf	_s1
  1124                           
  1125                           ;proyecto1master.c: 111:         I2C_Master_Stop();
  1126  0742  120A  118A  2264  120A  118A  	fcall	_I2C_Master_Stop
  1127  0747                     l1708:
  1128                           
  1129                           ;proyecto1master.c: 112:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1130  0747  301A               	movlw	26
  1131  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1133  074A  00DE               	movwf	??_main+1
  1134  074B  30F7               	movlw	247
  1135  074C  00DD               	movwf	??_main
  1136  074D                     u907:
  1137  074D  0BDD               	decfsz	??_main,f
  1138  074E  2F4D               	goto	u907
  1139  074F  0BDE               	decfsz	??_main+1,f
  1140  0750  2F4D               	goto	u907
  1141  0751  2F52               	nop2
  1142  0752                     l1710:
  1143                           
  1144                           ;proyecto1master.c: 114:         I2C_Master_Start();
  1145  0752  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  1146  0757                     l1712:
  1147                           
  1148                           ;proyecto1master.c: 115:         I2C_Master_Write(0x60);
  1149  0757  3060               	movlw	96
  1150  0758  00F0               	movwf	I2C_Master_Write@d
  1151  0759  3000               	movlw	0
  1152  075A  00F1               	movwf	I2C_Master_Write@d+1
  1153  075B  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  1154  0760                     l1714:
  1155                           
  1156                           ;proyecto1master.c: 116:         I2C_Master_Write(M);
  1157  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0762  0830               	movf	_M,w
  1160  0763  00DD               	movwf	??_main
  1161  0764  01DE               	clrf	??_main+1
  1162  0765  085D               	movf	??_main,w
  1163  0766  00F0               	movwf	I2C_Master_Write@d
  1164  0767  085E               	movf	??_main+1,w
  1165  0768  00F1               	movwf	I2C_Master_Write@d+1
  1166  0769  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  1167  076E                     l1716:
  1168                           
  1169                           ;proyecto1master.c: 117:         I2C_Master_Stop();
  1170  076E  120A  118A  2264  120A  118A  	fcall	_I2C_Master_Stop
  1171  0773                     l1718:
  1172                           
  1173                           ;proyecto1master.c: 118:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1174  0773  301A               	movlw	26
  1175  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0776  00DE               	movwf	??_main+1
  1178  0777  30F7               	movlw	247
  1179  0778  00DD               	movwf	??_main
  1180  0779                     u917:
  1181  0779  0BDD               	decfsz	??_main,f
  1182  077A  2F79               	goto	u917
  1183  077B  0BDE               	decfsz	??_main+1,f
  1184  077C  2F79               	goto	u917
  1185  077D  2F7E               	nop2
  1186                           
  1187                           ;proyecto1master.c: 120:         I2C_Master_Start();
  1188  077E  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  1189                           
  1190                           ;proyecto1master.c: 121:         I2C_Master_Write(0x61);
  1191  0783  3061               	movlw	97
  1192  0784  00F0               	movwf	I2C_Master_Write@d
  1193  0785  3000               	movlw	0
  1194  0786  00F1               	movwf	I2C_Master_Write@d+1
  1195  0787  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  1196                           
  1197                           ;proyecto1master.c: 122:         s2 = I2C_Master_Read(0);
  1198  078C  3000               	movlw	0
  1199  078D  00F0               	movwf	I2C_Master_Read@a
  1200  078E  00F1               	movwf	I2C_Master_Read@a+1
  1201  078F  120A  118A  2307  120A  118A  	fcall	_I2C_Master_Read
  1202  0794  0870               	movf	?_I2C_Master_Read,w
  1203  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0797  00DD               	movwf	??_main
  1206  0798  085D               	movf	??_main,w
  1207  0799  00B3               	movwf	_s2
  1208                           
  1209                           ;proyecto1master.c: 123:         I2C_Master_Stop();
  1210  079A  120A  118A  2264  120A  118A  	fcall	_I2C_Master_Stop
  1211  079F                     l1720:
  1212                           
  1213                           ;proyecto1master.c: 124:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1214  079F  301A               	movlw	26
  1215  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1216  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1217  07A2  00DE               	movwf	??_main+1
  1218  07A3  30F7               	movlw	247
  1219  07A4  00DD               	movwf	??_main
  1220  07A5                     u927:
  1221  07A5  0BDD               	decfsz	??_main,f
  1222  07A6  2FA5               	goto	u927
  1223  07A7  0BDE               	decfsz	??_main+1,f
  1224  07A8  2FA5               	goto	u927
  1225  07A9  2FAA               	nop2
  1226  07AA                     l1722:
  1227                           
  1228                           ;proyecto1master.c: 160:         sprintf(volt, "%d %c%c %d %d %d\n", s1, L, R, M, y, map
      +                          ping);
  1229  07AA  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1230  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1231  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1232  07AD  00DD               	movwf	??_main
  1233  07AE  085D               	movf	??_main,w
  1234  07AF  00C6               	movwf	sprintf@f
  1235  07B0  0834               	movf	_s1,w
  1236  07B1  00DE               	movwf	??_main+1
  1237  07B2  01DF               	clrf	??_main+2
  1238  07B3  085E               	movf	??_main+1,w
  1239  07B4  00C7               	movwf	?_sprintf+1
  1240  07B5  085F               	movf	??_main+2,w
  1241  07B6  00C8               	movwf	?_sprintf+2
  1242  07B7  0832               	movf	_L,w
  1243  07B8  00E0               	movwf	??_main+3
  1244  07B9  01E1               	clrf	??_main+4
  1245  07BA  0860               	movf	??_main+3,w
  1246  07BB  00C9               	movwf	?_sprintf+3
  1247  07BC  0861               	movf	??_main+4,w
  1248  07BD  00CA               	movwf	?_sprintf+4
  1249  07BE  0831               	movf	_R,w
  1250  07BF  00E2               	movwf	??_main+5
  1251  07C0  01E3               	clrf	??_main+6
  1252  07C1  0862               	movf	??_main+5,w
  1253  07C2  00CB               	movwf	?_sprintf+5
  1254  07C3  0863               	movf	??_main+6,w
  1255  07C4  00CC               	movwf	?_sprintf+6
  1256  07C5  0830               	movf	_M,w
  1257  07C6  00E4               	movwf	??_main+7
  1258  07C7  01E5               	clrf	??_main+8
  1259  07C8  0864               	movf	??_main+7,w
  1260  07C9  00CD               	movwf	?_sprintf+7
  1261  07CA  0865               	movf	??_main+8,w
  1262  07CB  00CE               	movwf	?_sprintf+8
  1263  07CC  3000               	movlw	0
  1264  07CD  00CF               	movwf	?_sprintf+9
  1265  07CE  00D0               	movwf	?_sprintf+10
  1266  07CF  3000               	movlw	0
  1267  07D0  00D1               	movwf	?_sprintf+11
  1268  07D1  00D2               	movwf	?_sprintf+12
  1269  07D2  3036               	movlw	(low (_volt| 0))& (0+255)
  1270  07D3  120A  118A  25C9  120A  118A  	fcall	_sprintf
  1271  07D8                     l1724:
  1272                           
  1273                           ;proyecto1master.c: 161:         enviocadena(volt);
  1274  07D8  3036               	movlw	(low (_volt| 0))& (0+255)
  1275  07D9  120A  118A  22C4  120A  118A  	fcall	_enviocadena
  1276  07DE                     l1726:
  1277                           
  1278                           ;proyecto1master.c: 162:         Lcd_Set_Cursor(2,1);
  1279  07DE  01F4               	clrf	Lcd_Set_Cursor@b
  1280  07DF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1281  07E0  3002               	movlw	2
  1282  07E1  120A  118A  22E3  120A  118A  	fcall	_Lcd_Set_Cursor
  1283  07E6                     l1728:
  1284                           
  1285                           ;proyecto1master.c: 163:         Lcd_Write_String(volt);
  1286  07E6  3036               	movlw	(low (_volt| 0))& (0+255)
  1287  07E7  00F3               	movwf	Lcd_Write_String@a
  1288  07E8  3000               	movlw	0
  1289  07E9  00F4               	movwf	Lcd_Write_String@a+1
  1290  07EA  120A  118A  23A7  120A  118A  	fcall	_Lcd_Write_String
  1291  07EF  2EF6               	goto	l1698
  1292  07F0  120A  118A  2800   	ljmp	start
  1293  07F3                     __end_of_main:
  1294                           
  1295                           	psect	text1
  1296  05C9                     __ptext1:	
  1297 ;; *************** function _sprintf *****************
  1298 ;; Defined at:
  1299 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  sp              1    wreg     PTR unsigned char 
  1302 ;;		 -> volt(16), 
  1303 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1304 ;;		 -> STR_1(18), 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1307 ;;		 -> volt(16), 
  1308 ;;  tmpval          4    0        struct .
  1309 ;;  val             2   19[BANK0 ] unsigned int 
  1310 ;;  cp              2    0        PTR const unsigned char 
  1311 ;;  len             2    0        unsigned int 
  1312 ;;  c               1   22[BANK0 ] unsigned char 
  1313 ;;  ap              1   18[BANK0 ] PTR void [1]
  1314 ;;		 -> ?_sprintf(2), 
  1315 ;;  prec            1   17[BANK0 ] char 
  1316 ;;  flag            1   16[BANK0 ] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  2    0[BANK0 ] int 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0      13       0       0       0
  1327 ;;      Locals:         0       7       0       0       0
  1328 ;;      Temps:          0       3       0       0       0
  1329 ;;      Totals:         0      23       0       0       0
  1330 ;;Total ram usage:       23 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    1
  1333 ;; This function calls:
  1334 ;;		___lwdiv
  1335 ;;		___lwmod
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _sprintf
  1343  05C9                     _sprintf:
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1347                           ;sprintf@sp stored from wreg
  1348  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1349  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1350  05CB  00DB               	movwf	sprintf@sp
  1351  05CC                     l1608:
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1354  05CC  3047               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1355  05CD  00D3               	movwf	??_sprintf
  1356  05CE  0853               	movf	??_sprintf,w
  1357  05CF  00D8               	movwf	sprintf@ap
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1360  05D0  2EB5               	goto	l1666
  1361  05D1                     l1610:
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1364  05D1  3025               	movlw	37
  1365  05D2  065C               	xorwf	sprintf@c,w
  1366  05D3  1903               	btfsc	3,2
  1367  05D4  2DD6               	goto	u771
  1368  05D5  2DD7               	goto	u770
  1369  05D6                     u771:
  1370  05D6  2DE3               	goto	l1616
  1371  05D7                     u770:
  1372  05D7                     l1612:
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1375  05D7  085C               	movf	sprintf@c,w
  1376  05D8  00D3               	movwf	??_sprintf
  1377  05D9  085B               	movf	sprintf@sp,w
  1378  05DA  0084               	movwf	4
  1379  05DB  0853               	movf	??_sprintf,w
  1380  05DC  1383               	bcf	3,7	;select IRP bank0
  1381  05DD  0080               	movwf	0
  1382  05DE                     l1614:
  1383  05DE  3001               	movlw	1
  1384  05DF  00D3               	movwf	??_sprintf
  1385  05E0  0853               	movf	??_sprintf,w
  1386  05E1  07DB               	addwf	sprintf@sp,f
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1389  05E2  2EB5               	goto	l1666
  1390  05E3                     l1616:
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1393  05E3  01D6               	clrf	sprintf@flag
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1396  05E4  2DFC               	goto	l1626
  1397  05E5                     l1618:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1400  05E5  0858               	movf	sprintf@ap,w
  1401  05E6  0084               	movwf	4
  1402  05E7  1383               	bcf	3,7	;select IRP bank0
  1403  05E8  0800               	movf	0,w
  1404  05E9  00D3               	movwf	??_sprintf
  1405  05EA  0853               	movf	??_sprintf,w
  1406  05EB  00DC               	movwf	sprintf@c
  1407  05EC                     l1620:
  1408  05EC  3002               	movlw	2
  1409  05ED  00D3               	movwf	??_sprintf
  1410  05EE  0853               	movf	??_sprintf,w
  1411  05EF  07D8               	addwf	sprintf@ap,f
  1412  05F0                     l1622:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1415  05F0  085C               	movf	sprintf@c,w
  1416  05F1  00D3               	movwf	??_sprintf
  1417  05F2  085B               	movf	sprintf@sp,w
  1418  05F3  0084               	movwf	4
  1419  05F4  0853               	movf	??_sprintf,w
  1420  05F5  1383               	bcf	3,7	;select IRP bank0
  1421  05F6  0080               	movwf	0
  1422  05F7  3001               	movlw	1
  1423  05F8  00D3               	movwf	??_sprintf
  1424  05F9  0853               	movf	??_sprintf,w
  1425  05FA  07DB               	addwf	sprintf@sp,f
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 836:    continue;
  1428  05FB  2EB5               	goto	l1666
  1429  05FC                     l1626:
  1430  05FC  3001               	movlw	1
  1431  05FD  07C6               	addwf	sprintf@f,f
  1432  05FE  30FF               	movlw	-1
  1433  05FF  0746               	addwf	sprintf@f,w
  1434  0600  0084               	movwf	4
  1435  0601  120A  118A  200D  120A  118A  	fcall	stringdir
  1436  0606  00DC               	movwf	sprintf@c
  1437  0607  00D3               	movwf	??_sprintf
  1438  0608  01D4               	clrf	??_sprintf+1
  1439                           
  1440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1441                           ; Switch size 1, requested type "simple"
  1442                           ; Number of cases is 1, Range of values is 0 to 0
  1443                           ; switch strategies available:
  1444                           ; Name         Instructions Cycles
  1445                           ; simple_byte            4     3 (average)
  1446                           ; direct_byte           11     8 (fixed)
  1447                           ; jumptable            260     6 (fixed)
  1448                           ;	Chosen strategy is simple_byte
  1449  0609  0854               	movf	??_sprintf+1,w
  1450  060A  3A00               	xorlw	0	; case 0
  1451  060B  1903               	skipnz
  1452  060C  2E0E               	goto	l1786
  1453  060D  2DF0               	goto	l1622
  1454  060E                     l1786:
  1455                           
  1456                           ; Switch size 1, requested type "simple"
  1457                           ; Number of cases is 4, Range of values is 0 to 105
  1458                           ; switch strategies available:
  1459                           ; Name         Instructions Cycles
  1460                           ; simple_byte           13     7 (average)
  1461                           ; jumptable            260     6 (fixed)
  1462                           ;	Chosen strategy is simple_byte
  1463  060E  0853               	movf	??_sprintf,w
  1464  060F  3A00               	xorlw	0	; case 0
  1465  0610  1903               	skipnz
  1466  0611  2EC7               	goto	l1668
  1467  0612  3A63               	xorlw	99	; case 99
  1468  0613  1903               	skipnz
  1469  0614  2DE5               	goto	l1618
  1470  0615  3A07               	xorlw	7	; case 100
  1471  0616  1903               	skipnz
  1472  0617  2E1C               	goto	l1628
  1473  0618  3A0D               	xorlw	13	; case 105
  1474  0619  1903               	skipnz
  1475  061A  2E1C               	goto	l1628
  1476  061B  2DF0               	goto	l1622
  1477  061C                     l1628:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1480  061C  0858               	movf	sprintf@ap,w
  1481  061D  0084               	movwf	4
  1482  061E  1383               	bcf	3,7	;select IRP bank0
  1483  061F  0800               	movf	0,w
  1484  0620  00D9               	movwf	sprintf@val
  1485  0621  0A84               	incf	4,f
  1486  0622  0800               	movf	0,w
  1487  0623  00DA               	movwf	sprintf@val+1
  1488  0624                     l1630:
  1489  0624  3002               	movlw	2
  1490  0625  00D3               	movwf	??_sprintf
  1491  0626  0853               	movf	??_sprintf,w
  1492  0627  07D8               	addwf	sprintf@ap,f
  1493  0628                     l1632:
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1496  0628  1FDA               	btfss	sprintf@val+1,7
  1497  0629  2E2B               	goto	u781
  1498  062A  2E2C               	goto	u780
  1499  062B                     u781:
  1500  062B  2E35               	goto	l1638
  1501  062C                     u780:
  1502  062C                     l1634:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1505  062C  3003               	movlw	3
  1506  062D  00D3               	movwf	??_sprintf
  1507  062E  0853               	movf	??_sprintf,w
  1508  062F  04D6               	iorwf	sprintf@flag,f
  1509  0630                     l1636:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1512  0630  09D9               	comf	sprintf@val,f
  1513  0631  09DA               	comf	sprintf@val+1,f
  1514  0632  0AD9               	incf	sprintf@val,f
  1515  0633  1903               	skipnz
  1516  0634  0ADA               	incf	sprintf@val+1,f
  1517  0635                     l1638:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1520  0635  01DC               	clrf	sprintf@c
  1521  0636  0ADC               	incf	sprintf@c,f
  1522  0637                     l1644:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1525  0637  085C               	movf	sprintf@c,w
  1526  0638  00D3               	movwf	??_sprintf
  1527  0639  0753               	addwf	??_sprintf,w
  1528  063A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1529  063B  0084               	movwf	4
  1530  063C  120A  118A  200D  120A  118A  	fcall	stringdir
  1531  0641  00D4               	movwf	??_sprintf+1
  1532  0642  120A  118A  200D  120A  118A  	fcall	stringdir
  1533  0647  00D5               	movwf	??_sprintf+2
  1534  0648  0855               	movf	??_sprintf+2,w
  1535  0649  025A               	subwf	sprintf@val+1,w
  1536  064A  1D03               	skipz
  1537  064B  2E4E               	goto	u795
  1538  064C  0854               	movf	??_sprintf+1,w
  1539  064D  0259               	subwf	sprintf@val,w
  1540  064E                     u795:
  1541  064E  1803               	skipnc
  1542  064F  2E51               	goto	u791
  1543  0650  2E52               	goto	u790
  1544  0651                     u791:
  1545  0651  2E53               	goto	l1648
  1546  0652                     u790:
  1547  0652  2E5D               	goto	l1650
  1548  0653                     l1648:
  1549  0653  3001               	movlw	1
  1550  0654  00D3               	movwf	??_sprintf
  1551  0655  0853               	movf	??_sprintf,w
  1552  0656  07DC               	addwf	sprintf@c,f
  1553  0657  3005               	movlw	5
  1554  0658  065C               	xorwf	sprintf@c,w
  1555  0659  1D03               	btfss	3,2
  1556  065A  2E5C               	goto	u801
  1557  065B  2E5D               	goto	u800
  1558  065C                     u801:
  1559  065C  2E37               	goto	l1644
  1560  065D                     u800:
  1561  065D                     l1650:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1564  065D  0856               	movf	sprintf@flag,w
  1565  065E  3903               	andlw	3
  1566  065F  1903               	btfsc	3,2
  1567  0660  2E62               	goto	u811
  1568  0661  2E63               	goto	u810
  1569  0662                     u811:
  1570  0662  2E6E               	goto	l1656
  1571  0663                     u810:
  1572  0663                     l1652:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1575  0663  302D               	movlw	45
  1576  0664  00D3               	movwf	??_sprintf
  1577  0665  085B               	movf	sprintf@sp,w
  1578  0666  0084               	movwf	4
  1579  0667  0853               	movf	??_sprintf,w
  1580  0668  1383               	bcf	3,7	;select IRP bank0
  1581  0669  0080               	movwf	0
  1582  066A                     l1654:
  1583  066A  3001               	movlw	1
  1584  066B  00D3               	movwf	??_sprintf
  1585  066C  0853               	movf	??_sprintf,w
  1586  066D  07DB               	addwf	sprintf@sp,f
  1587  066E                     l1656:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1590  066E  085C               	movf	sprintf@c,w
  1591  066F  00D3               	movwf	??_sprintf
  1592  0670  0853               	movf	??_sprintf,w
  1593  0671  00D7               	movwf	sprintf@prec
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1596  0672  2EAC               	goto	l1664
  1597  0673                     l1658:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1600  0673  300A               	movlw	10
  1601  0674  00F8               	movwf	___lwmod@divisor
  1602  0675  3000               	movlw	0
  1603  0676  00F9               	movwf	___lwmod@divisor+1
  1604  0677  0857               	movf	sprintf@prec,w
  1605  0678  00D3               	movwf	??_sprintf
  1606  0679  0753               	addwf	??_sprintf,w
  1607  067A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1608  067B  0084               	movwf	4
  1609  067C  120A  118A  200D  120A  118A  	fcall	stringdir
  1610  0681  00F0               	movwf	___lwdiv@divisor
  1611  0682  120A  118A  200D  120A  118A  	fcall	stringdir
  1612  0687  00F1               	movwf	___lwdiv@divisor+1
  1613  0688  085A               	movf	sprintf@val+1,w
  1614  0689  00F3               	movwf	___lwdiv@dividend+1
  1615  068A  0859               	movf	sprintf@val,w
  1616  068B  00F2               	movwf	___lwdiv@dividend
  1617  068C  120A  118A  23E9  120A  118A  	fcall	___lwdiv
  1618  0691  0871               	movf	?___lwdiv+1,w
  1619  0692  00FB               	movwf	___lwmod@dividend+1
  1620  0693  0870               	movf	?___lwdiv,w
  1621  0694  00FA               	movwf	___lwmod@dividend
  1622  0695  120A  118A  236D  120A  118A  	fcall	___lwmod
  1623  069A  0878               	movf	?___lwmod,w
  1624  069B  3E30               	addlw	48
  1625  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1626  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1627  069E  00D4               	movwf	??_sprintf+1
  1628  069F  0854               	movf	??_sprintf+1,w
  1629  06A0  00DC               	movwf	sprintf@c
  1630  06A1                     l1660:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1633  06A1  085C               	movf	sprintf@c,w
  1634  06A2  00D3               	movwf	??_sprintf
  1635  06A3  085B               	movf	sprintf@sp,w
  1636  06A4  0084               	movwf	4
  1637  06A5  0853               	movf	??_sprintf,w
  1638  06A6  1383               	bcf	3,7	;select IRP bank0
  1639  06A7  0080               	movwf	0
  1640  06A8                     l1662:
  1641  06A8  3001               	movlw	1
  1642  06A9  00D3               	movwf	??_sprintf
  1643  06AA  0853               	movf	??_sprintf,w
  1644  06AB  07DB               	addwf	sprintf@sp,f
  1645  06AC                     l1664:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1648  06AC  30FF               	movlw	255
  1649  06AD  00D3               	movwf	??_sprintf
  1650  06AE  0853               	movf	??_sprintf,w
  1651  06AF  07D7               	addwf	sprintf@prec,f
  1652  06B0  0A57               	incf	sprintf@prec,w
  1653  06B1  1D03               	btfss	3,2
  1654  06B2  2EB4               	goto	u821
  1655  06B3  2EB5               	goto	u820
  1656  06B4                     u821:
  1657  06B4  2E73               	goto	l1658
  1658  06B5                     u820:
  1659  06B5                     l1666:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1662  06B5  3001               	movlw	1
  1663  06B6  07C6               	addwf	sprintf@f,f
  1664  06B7  30FF               	movlw	-1
  1665  06B8  0746               	addwf	sprintf@f,w
  1666  06B9  0084               	movwf	4
  1667  06BA  120A  118A  200D  120A  118A  	fcall	stringdir
  1668  06BF  00D3               	movwf	??_sprintf
  1669  06C0  0853               	movf	??_sprintf,w
  1670  06C1  00DC               	movwf	sprintf@c
  1671  06C2  085C               	movf	sprintf@c,w
  1672  06C3  1D03               	btfss	3,2
  1673  06C4  2EC6               	goto	u831
  1674  06C5  2EC7               	goto	u830
  1675  06C6                     u831:
  1676  06C6  2DD1               	goto	l1610
  1677  06C7                     u830:
  1678  06C7                     l1668:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1681  06C7  085B               	movf	sprintf@sp,w
  1682  06C8  0084               	movwf	4
  1683  06C9  1383               	bcf	3,7	;select IRP bank0
  1684  06CA  0180               	clrf	0
  1685  06CB                     l366:
  1686  06CB  0008               	return
  1687  06CC                     __end_of_sprintf:
  1688                           
  1689                           	psect	text2
  1690  036D                     __ptext2:	
  1691 ;; *************** function ___lwmod *****************
  1692 ;; Defined at:
  1693 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  divisor         2    8[COMMON] unsigned int 
  1696 ;;  dividend        2   10[COMMON] unsigned int 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  counter         1   13[COMMON] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2    8[COMMON] unsigned int 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1708 ;;      Params:         4       0       0       0       0
  1709 ;;      Locals:         1       0       0       0       0
  1710 ;;      Temps:          1       0       0       0       0
  1711 ;;      Totals:         6       0       0       0       0
  1712 ;;Total ram usage:        6 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_sprintf
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function ___lwmod
  1723  036D                     ___lwmod:
  1724  036D                     l1480:	
  1725                           ;incstack = 0
  1726                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1727                           
  1728  036D  0878               	movf	___lwmod@divisor,w
  1729  036E  0479               	iorwf	___lwmod@divisor+1,w
  1730  036F  1903               	btfsc	3,2
  1731  0370  2B72               	goto	u701
  1732  0371  2B73               	goto	u700
  1733  0372                     u701:
  1734  0372  2BA2               	goto	l1498
  1735  0373                     u700:
  1736  0373                     l1482:
  1737  0373  01FD               	clrf	___lwmod@counter
  1738  0374  0AFD               	incf	___lwmod@counter,f
  1739  0375  2B81               	goto	l1488
  1740  0376                     l1484:
  1741  0376  3001               	movlw	1
  1742  0377                     u715:
  1743  0377  1003               	clrc
  1744  0378  0DF8               	rlf	___lwmod@divisor,f
  1745  0379  0DF9               	rlf	___lwmod@divisor+1,f
  1746  037A  3EFF               	addlw	-1
  1747  037B  1D03               	skipz
  1748  037C  2B77               	goto	u715
  1749  037D                     l1486:
  1750  037D  3001               	movlw	1
  1751  037E  00FC               	movwf	??___lwmod
  1752  037F  087C               	movf	??___lwmod,w
  1753  0380  07FD               	addwf	___lwmod@counter,f
  1754  0381                     l1488:
  1755  0381  1FF9               	btfss	___lwmod@divisor+1,7
  1756  0382  2B84               	goto	u721
  1757  0383  2B85               	goto	u720
  1758  0384                     u721:
  1759  0384  2B76               	goto	l1484
  1760  0385                     u720:
  1761  0385                     l1490:
  1762  0385  0879               	movf	___lwmod@divisor+1,w
  1763  0386  027B               	subwf	___lwmod@dividend+1,w
  1764  0387  1D03               	skipz
  1765  0388  2B8B               	goto	u735
  1766  0389  0878               	movf	___lwmod@divisor,w
  1767  038A  027A               	subwf	___lwmod@dividend,w
  1768  038B                     u735:
  1769  038B  1C03               	skipc
  1770  038C  2B8E               	goto	u731
  1771  038D  2B8F               	goto	u730
  1772  038E                     u731:
  1773  038E  2B95               	goto	l1494
  1774  038F                     u730:
  1775  038F                     l1492:
  1776  038F  0878               	movf	___lwmod@divisor,w
  1777  0390  02FA               	subwf	___lwmod@dividend,f
  1778  0391  0879               	movf	___lwmod@divisor+1,w
  1779  0392  1C03               	skipc
  1780  0393  03FB               	decf	___lwmod@dividend+1,f
  1781  0394  02FB               	subwf	___lwmod@dividend+1,f
  1782  0395                     l1494:
  1783  0395  3001               	movlw	1
  1784  0396                     u745:
  1785  0396  1003               	clrc
  1786  0397  0CF9               	rrf	___lwmod@divisor+1,f
  1787  0398  0CF8               	rrf	___lwmod@divisor,f
  1788  0399  3EFF               	addlw	-1
  1789  039A  1D03               	skipz
  1790  039B  2B96               	goto	u745
  1791  039C                     l1496:
  1792  039C  3001               	movlw	1
  1793  039D  02FD               	subwf	___lwmod@counter,f
  1794  039E  1D03               	btfss	3,2
  1795  039F  2BA1               	goto	u751
  1796  03A0  2BA2               	goto	u750
  1797  03A1                     u751:
  1798  03A1  2B85               	goto	l1490
  1799  03A2                     u750:
  1800  03A2                     l1498:
  1801  03A2  087B               	movf	___lwmod@dividend+1,w
  1802  03A3  00F9               	movwf	?___lwmod+1
  1803  03A4  087A               	movf	___lwmod@dividend,w
  1804  03A5  00F8               	movwf	?___lwmod
  1805  03A6                     l652:
  1806  03A6  0008               	return
  1807  03A7                     __end_of___lwmod:
  1808                           
  1809                           	psect	text3
  1810  03E9                     __ptext3:	
  1811 ;; *************** function ___lwdiv *****************
  1812 ;; Defined at:
  1813 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  divisor         2    0[COMMON] unsigned int 
  1816 ;;  dividend        2    2[COMMON] unsigned int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  quotient        2    5[COMMON] unsigned int 
  1819 ;;  counter         1    7[COMMON] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  2    0[COMMON] unsigned int 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         4       0       0       0       0
  1830 ;;      Locals:         3       0       0       0       0
  1831 ;;      Temps:          1       0       0       0       0
  1832 ;;      Totals:         8       0       0       0       0
  1833 ;;Total ram usage:        8 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_sprintf
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           
  1843                           ;psect for function ___lwdiv
  1844  03E9                     ___lwdiv:
  1845  03E9                     l1454:	
  1846                           ;incstack = 0
  1847                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1848                           
  1849  03E9  01F5               	clrf	___lwdiv@quotient
  1850  03EA  01F6               	clrf	___lwdiv@quotient+1
  1851  03EB                     l1456:
  1852  03EB  0870               	movf	___lwdiv@divisor,w
  1853  03EC  0471               	iorwf	___lwdiv@divisor+1,w
  1854  03ED  1903               	btfsc	3,2
  1855  03EE  2BF0               	goto	u631
  1856  03EF  2BF1               	goto	u630
  1857  03F0                     u631:
  1858  03F0  2C28               	goto	l1476
  1859  03F1                     u630:
  1860  03F1                     l1458:
  1861  03F1  01F7               	clrf	___lwdiv@counter
  1862  03F2  0AF7               	incf	___lwdiv@counter,f
  1863  03F3  2BFF               	goto	l1464
  1864  03F4                     l1460:
  1865  03F4  3001               	movlw	1
  1866  03F5                     u645:
  1867  03F5  1003               	clrc
  1868  03F6  0DF0               	rlf	___lwdiv@divisor,f
  1869  03F7  0DF1               	rlf	___lwdiv@divisor+1,f
  1870  03F8  3EFF               	addlw	-1
  1871  03F9  1D03               	skipz
  1872  03FA  2BF5               	goto	u645
  1873  03FB                     l1462:
  1874  03FB  3001               	movlw	1
  1875  03FC  00F4               	movwf	??___lwdiv
  1876  03FD  0874               	movf	??___lwdiv,w
  1877  03FE  07F7               	addwf	___lwdiv@counter,f
  1878  03FF                     l1464:
  1879  03FF  1FF1               	btfss	___lwdiv@divisor+1,7
  1880  0400  2C02               	goto	u651
  1881  0401  2C03               	goto	u650
  1882  0402                     u651:
  1883  0402  2BF4               	goto	l1460
  1884  0403                     u650:
  1885  0403                     l1466:
  1886  0403  3001               	movlw	1
  1887  0404                     u665:
  1888  0404  1003               	clrc
  1889  0405  0DF5               	rlf	___lwdiv@quotient,f
  1890  0406  0DF6               	rlf	___lwdiv@quotient+1,f
  1891  0407  3EFF               	addlw	-1
  1892  0408  1D03               	skipz
  1893  0409  2C04               	goto	u665
  1894  040A  0871               	movf	___lwdiv@divisor+1,w
  1895  040B  0273               	subwf	___lwdiv@dividend+1,w
  1896  040C  1D03               	skipz
  1897  040D  2C10               	goto	u675
  1898  040E  0870               	movf	___lwdiv@divisor,w
  1899  040F  0272               	subwf	___lwdiv@dividend,w
  1900  0410                     u675:
  1901  0410  1C03               	skipc
  1902  0411  2C13               	goto	u671
  1903  0412  2C14               	goto	u670
  1904  0413                     u671:
  1905  0413  2C1B               	goto	l1472
  1906  0414                     u670:
  1907  0414                     l1468:
  1908  0414  0870               	movf	___lwdiv@divisor,w
  1909  0415  02F2               	subwf	___lwdiv@dividend,f
  1910  0416  0871               	movf	___lwdiv@divisor+1,w
  1911  0417  1C03               	skipc
  1912  0418  03F3               	decf	___lwdiv@dividend+1,f
  1913  0419  02F3               	subwf	___lwdiv@dividend+1,f
  1914  041A                     l1470:
  1915  041A  1475               	bsf	___lwdiv@quotient,0
  1916  041B                     l1472:
  1917  041B  3001               	movlw	1
  1918  041C                     u685:
  1919  041C  1003               	clrc
  1920  041D  0CF1               	rrf	___lwdiv@divisor+1,f
  1921  041E  0CF0               	rrf	___lwdiv@divisor,f
  1922  041F  3EFF               	addlw	-1
  1923  0420  1D03               	skipz
  1924  0421  2C1C               	goto	u685
  1925  0422                     l1474:
  1926  0422  3001               	movlw	1
  1927  0423  02F7               	subwf	___lwdiv@counter,f
  1928  0424  1D03               	btfss	3,2
  1929  0425  2C27               	goto	u691
  1930  0426  2C28               	goto	u690
  1931  0427                     u691:
  1932  0427  2C03               	goto	l1466
  1933  0428                     u690:
  1934  0428                     l1476:
  1935  0428  0876               	movf	___lwdiv@quotient+1,w
  1936  0429  00F1               	movwf	?___lwdiv+1
  1937  042A  0875               	movf	___lwdiv@quotient,w
  1938  042B  00F0               	movwf	?___lwdiv
  1939  042C                     l642:
  1940  042C  0008               	return
  1941  042D                     __end_of___lwdiv:
  1942                           
  1943                           	psect	text4
  1944  04E4                     __ptext4:	
  1945 ;; *************** function _setup *****************
  1946 ;; Defined at:
  1947 ;;		line 169 in file "proyecto1master.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0
  1963 ;;      Temps:          0       2       0       0       0
  1964 ;;      Totals:         0       2       0       0       0
  1965 ;;Total ram usage:        2 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    3
  1968 ;; This function calls:
  1969 ;;		_I2C_Master_Init
  1970 ;;		_I2C_Master_Start
  1971 ;;		_I2C_Master_Stop
  1972 ;;		_I2C_Master_Write
  1973 ;;		_Lcd_Init
  1974 ;;		_Lcd_Set_Cursor
  1975 ;;		_Lcd_Write_String
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function _setup
  1983  04E4                     _setup:
  1984  04E4                     l1502:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1987                           
  1988                           
  1989                           ;proyecto1master.c: 172:     OSCCONbits.IRCF = 7;
  1990  04E4  3070               	movlw	112
  1991  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  1992  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  1993  04E7  048F               	iorwf	15,f	;volatile
  1994  04E8                     l1504:
  1995                           
  1996                           ;proyecto1master.c: 173:     OSCCONbits.SCS = 1;
  1997  04E8  140F               	bsf	15,0	;volatile
  1998  04E9                     l1506:
  1999                           
  2000                           ;proyecto1master.c: 175:     ANSELH = 0;
  2001  04E9  1683               	bsf	3,5	;RP0=1, select bank3
  2002  04EA  1703               	bsf	3,6	;RP1=1, select bank3
  2003  04EB  0189               	clrf	9	;volatile
  2004  04EC                     l1508:
  2005                           
  2006                           ;proyecto1master.c: 176:     ANSEL = 0;
  2007  04EC  0188               	clrf	8	;volatile
  2008  04ED                     l1510:
  2009                           
  2010                           ;proyecto1master.c: 177:     TRISA = 0;
  2011  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  2012  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  2013  04EF  0185               	clrf	5	;volatile
  2014  04F0                     l1512:
  2015                           
  2016                           ;proyecto1master.c: 179:     TRISCbits.TRISC0 = 0;
  2017  04F0  1007               	bcf	7,0	;volatile
  2018  04F1                     l1514:
  2019                           
  2020                           ;proyecto1master.c: 180:     TRISCbits.TRISC1 = 0;
  2021  04F1  1087               	bcf	7,1	;volatile
  2022  04F2                     l1516:
  2023                           
  2024                           ;proyecto1master.c: 181:     TRISB = 1;
  2025  04F2  3001               	movlw	1
  2026  04F3  0086               	movwf	6	;volatile
  2027  04F4                     l1518:
  2028                           
  2029                           ;proyecto1master.c: 182:     PORTB = 0;
  2030  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2031  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2032  04F6  0186               	clrf	6	;volatile
  2033  04F7                     l1520:
  2034                           
  2035                           ;proyecto1master.c: 183:     TRISD = 0;
  2036  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2037  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2038  04F9  0188               	clrf	8	;volatile
  2039  04FA                     l1522:
  2040                           
  2041                           ;proyecto1master.c: 184:     TRISE = 0;
  2042  04FA  0189               	clrf	9	;volatile
  2043  04FB                     l1524:
  2044                           
  2045                           ;proyecto1master.c: 185:     PORTD = 0;
  2046  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2047  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2048  04FD  0188               	clrf	8	;volatile
  2049  04FE                     l1526:
  2050                           
  2051                           ;proyecto1master.c: 187:     OPTION_REGbits.nRBPU = 0;
  2052  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2053  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2054  0500  1381               	bcf	1,7	;volatile
  2055  0501                     l1528:
  2056                           
  2057                           ;proyecto1master.c: 188:     WPUBbits.WPUB0 = 1;
  2058  0501  1415               	bsf	21,0	;volatile
  2059  0502                     l1530:
  2060                           
  2061                           ;proyecto1master.c: 190:     TXSTAbits.SYNC = 0;
  2062  0502  1218               	bcf	24,4	;volatile
  2063  0503                     l1532:
  2064                           
  2065                           ;proyecto1master.c: 191:     TXSTAbits.BRGH = 1;
  2066  0503  1518               	bsf	24,2	;volatile
  2067  0504                     l1534:
  2068                           
  2069                           ;proyecto1master.c: 193:     BAUDCTLbits.BRG16 = 1;
  2070  0504  1683               	bsf	3,5	;RP0=1, select bank3
  2071  0505  1703               	bsf	3,6	;RP1=1, select bank3
  2072  0506  1587               	bsf	7,3	;volatile
  2073  0507                     l1536:
  2074                           
  2075                           ;proyecto1master.c: 195:     SPBRG = 207;
  2076  0507  30CF               	movlw	207
  2077  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2078  0509  1303               	bcf	3,6	;RP1=0, select bank1
  2079  050A  0099               	movwf	25	;volatile
  2080  050B                     l1538:
  2081                           
  2082                           ;proyecto1master.c: 196:     SPBRGH = 0;
  2083  050B  019A               	clrf	26	;volatile
  2084  050C                     l1540:
  2085                           
  2086                           ;proyecto1master.c: 198:     RCSTAbits.SPEN = 1;
  2087  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2088  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2089  050E  1798               	bsf	24,7	;volatile
  2090  050F                     l1542:
  2091                           
  2092                           ;proyecto1master.c: 199:     RCSTAbits.RX9 = 0;
  2093  050F  1318               	bcf	24,6	;volatile
  2094  0510                     l1544:
  2095                           
  2096                           ;proyecto1master.c: 200:     RCSTAbits.CREN = 1;
  2097  0510  1618               	bsf	24,4	;volatile
  2098  0511                     l1546:
  2099                           
  2100                           ;proyecto1master.c: 201:     TXSTAbits.TXEN = 1;
  2101  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0512  1303               	bcf	3,6	;RP1=0, select bank1
  2103  0513  1698               	bsf	24,5	;volatile
  2104  0514                     l1548:
  2105                           
  2106                           ;proyecto1master.c: 203:     Lcd_Init();
  2107  0514  120A  118A  242D  120A  118A  	fcall	_Lcd_Init
  2108  0519                     l1550:
  2109                           
  2110                           ;proyecto1master.c: 204:     Lcd_Set_Cursor(1,1);
  2111  0519  01F4               	clrf	Lcd_Set_Cursor@b
  2112  051A  0AF4               	incf	Lcd_Set_Cursor@b,f
  2113  051B  3001               	movlw	1
  2114  051C  120A  118A  22E3  120A  118A  	fcall	_Lcd_Set_Cursor
  2115  0521                     l1552:
  2116                           
  2117                           ;proyecto1master.c: 205:     Lcd_Write_String("I_LR_M_X____Y___");
  2118  0521  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2119  0522  00F3               	movwf	Lcd_Write_String@a
  2120  0523  3080               	movlw	128
  2121  0524  00F4               	movwf	Lcd_Write_String@a+1
  2122  0525  120A  118A  23A7  120A  118A  	fcall	_Lcd_Write_String
  2123  052A                     l1554:
  2124                           
  2125                           ;proyecto1master.c: 206:     I2C_Master_Init(100000);
  2126  052A  3000               	movlw	0
  2127  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2128  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2129  052D  00C9               	movwf	I2C_Master_Init@c+3
  2130  052E  3001               	movlw	1
  2131  052F  00C8               	movwf	I2C_Master_Init@c+2
  2132  0530  3086               	movlw	134
  2133  0531  00C7               	movwf	I2C_Master_Init@c+1
  2134  0532  30A0               	movlw	160
  2135  0533  00C6               	movwf	I2C_Master_Init@c
  2136  0534  120A  118A  2335  120A  118A  	fcall	_I2C_Master_Init
  2137  0539                     l1556:
  2138                           
  2139                           ;proyecto1master.c: 208:     I2C_Master_Start();
  2140  0539  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  2141  053E                     l1558:
  2142                           
  2143                           ;proyecto1master.c: 209:     I2C_Master_Write(0x1A);
  2144  053E  301A               	movlw	26
  2145  053F  00F0               	movwf	I2C_Master_Write@d
  2146  0540  3000               	movlw	0
  2147  0541  00F1               	movwf	I2C_Master_Write@d+1
  2148  0542  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2149  0547                     l1560:
  2150                           
  2151                           ;proyecto1master.c: 210:     I2C_Master_Write(0x0B);
  2152  0547  300B               	movlw	11
  2153  0548  00F0               	movwf	I2C_Master_Write@d
  2154  0549  3000               	movlw	0
  2155  054A  00F1               	movwf	I2C_Master_Write@d+1
  2156  054B  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2157  0550                     l1562:
  2158                           
  2159                           ;proyecto1master.c: 211:     I2C_Master_Write(0x01);
  2160  0550  3001               	movlw	1
  2161  0551  00F0               	movwf	I2C_Master_Write@d
  2162  0552  3000               	movlw	0
  2163  0553  00F1               	movwf	I2C_Master_Write@d+1
  2164  0554  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2165  0559                     l1564:
  2166                           
  2167                           ;proyecto1master.c: 212:     I2C_Master_Stop();
  2168  0559  120A  118A  2264  120A  118A  	fcall	_I2C_Master_Stop
  2169  055E                     l1566:
  2170                           
  2171                           ;proyecto1master.c: 213:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2172  055E  301A               	movlw	26
  2173  055F  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0560  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0561  00CF               	movwf	??_setup+1
  2176  0562  30F7               	movlw	247
  2177  0563  00CE               	movwf	??_setup
  2178  0564                     u937:
  2179  0564  0BCE               	decfsz	??_setup,f
  2180  0565  2D64               	goto	u937
  2181  0566  0BCF               	decfsz	??_setup+1,f
  2182  0567  2D64               	goto	u937
  2183  0568  2D69               	nop2
  2184  0569                     l1568:
  2185                           
  2186                           ;proyecto1master.c: 215:     I2C_Master_Start();
  2187  0569  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  2188  056E                     l1570:
  2189                           
  2190                           ;proyecto1master.c: 216:     I2C_Master_Write(0x1A);
  2191  056E  301A               	movlw	26
  2192  056F  00F0               	movwf	I2C_Master_Write@d
  2193  0570  3000               	movlw	0
  2194  0571  00F1               	movwf	I2C_Master_Write@d+1
  2195  0572  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2196  0577                     l1572:
  2197                           
  2198                           ;proyecto1master.c: 217:     I2C_Master_Write(0x09);
  2199  0577  3009               	movlw	9
  2200  0578  00F0               	movwf	I2C_Master_Write@d
  2201  0579  3000               	movlw	0
  2202  057A  00F1               	movwf	I2C_Master_Write@d+1
  2203  057B  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2204  0580                     l1574:
  2205                           
  2206                           ;proyecto1master.c: 218:     I2C_Master_Write(0x1D);
  2207  0580  301D               	movlw	29
  2208  0581  00F0               	movwf	I2C_Master_Write@d
  2209  0582  3000               	movlw	0
  2210  0583  00F1               	movwf	I2C_Master_Write@d+1
  2211  0584  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2212  0589                     l1576:
  2213                           
  2214                           ;proyecto1master.c: 219:     I2C_Master_Stop();
  2215  0589  120A  118A  2264  120A  118A  	fcall	_I2C_Master_Stop
  2216  058E                     l1578:
  2217                           
  2218                           ;proyecto1master.c: 220:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2219  058E  301A               	movlw	26
  2220  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0591  00CF               	movwf	??_setup+1
  2223  0592  30F7               	movlw	247
  2224  0593  00CE               	movwf	??_setup
  2225  0594                     u947:
  2226  0594  0BCE               	decfsz	??_setup,f
  2227  0595  2D94               	goto	u947
  2228  0596  0BCF               	decfsz	??_setup+1,f
  2229  0597  2D94               	goto	u947
  2230  0598  2D99               	nop2
  2231  0599                     l1580:
  2232                           
  2233                           ;proyecto1master.c: 222:     I2C_Master_Start();
  2234  0599  120A  118A  225B  120A  118A  	fcall	_I2C_Master_Start
  2235  059E                     l1582:
  2236                           
  2237                           ;proyecto1master.c: 223:     I2C_Master_Write(0x1A);
  2238  059E  301A               	movlw	26
  2239  059F  00F0               	movwf	I2C_Master_Write@d
  2240  05A0  3000               	movlw	0
  2241  05A1  00F1               	movwf	I2C_Master_Write@d+1
  2242  05A2  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2243  05A7                     l1584:
  2244                           
  2245                           ;proyecto1master.c: 224:     I2C_Master_Write(0x0A);
  2246  05A7  300A               	movlw	10
  2247  05A8  00F0               	movwf	I2C_Master_Write@d
  2248  05A9  3000               	movlw	0
  2249  05AA  00F1               	movwf	I2C_Master_Write@d+1
  2250  05AB  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2251  05B0                     l1586:
  2252                           
  2253                           ;proyecto1master.c: 225:     I2C_Master_Write(0x00);
  2254  05B0  3000               	movlw	0
  2255  05B1  00F0               	movwf	I2C_Master_Write@d
  2256  05B2  00F1               	movwf	I2C_Master_Write@d+1
  2257  05B3  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Write
  2258  05B8                     l1588:
  2259                           
  2260                           ;proyecto1master.c: 226:     I2C_Master_Stop();
  2261  05B8  120A  118A  2264  120A  118A  	fcall	_I2C_Master_Stop
  2262  05BD                     l1590:
  2263                           
  2264                           ;proyecto1master.c: 227:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2265  05BD  301A               	movlw	26
  2266  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2267  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2268  05C0  00CF               	movwf	??_setup+1
  2269  05C1  30F7               	movlw	247
  2270  05C2  00CE               	movwf	??_setup
  2271  05C3                     u957:
  2272  05C3  0BCE               	decfsz	??_setup,f
  2273  05C4  2DC3               	goto	u957
  2274  05C5  0BCF               	decfsz	??_setup+1,f
  2275  05C6  2DC3               	goto	u957
  2276  05C7  2DC8               	nop2
  2277  05C8                     l116:
  2278  05C8  0008               	return
  2279  05C9                     __end_of_setup:
  2280                           
  2281                           	psect	text5
  2282  03A7                     __ptext5:	
  2283 ;; *************** function _Lcd_Write_String *****************
  2284 ;; Defined at:
  2285 ;;		line 66 in file "LCD8bits.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  a               2    3[COMMON] PTR unsigned char 
  2288 ;;		 -> STR_2(17), volt(16), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  i               2    8[COMMON] int 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2300 ;;      Params:         2       0       0       0       0
  2301 ;;      Locals:         2       0       0       0       0
  2302 ;;      Temps:          3       0       0       0       0
  2303 ;;      Totals:         7       0       0       0       0
  2304 ;;Total ram usage:        7 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    2
  2307 ;; This function calls:
  2308 ;;		_Lcd_Write_Char
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;;		_setup
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _Lcd_Write_String
  2317  03A7                     _Lcd_Write_String:
  2318  03A7                     l1420:	
  2319                           ;incstack = 0
  2320                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2321                           
  2322                           
  2323                           ;LCD8bits.c: 67:     int i;;LCD8bits.c: 68:     for (i = 0; a[i] != '\0'; i++)
  2324  03A7  01F8               	clrf	Lcd_Write_String@i
  2325  03A8  01F9               	clrf	Lcd_Write_String@i+1
  2326  03A9  2BCC               	goto	l1426
  2327  03AA                     l1422:
  2328                           
  2329                           ;LCD8bits.c: 69:         Lcd_Write_Char(a[i]);
  2330  03AA  0878               	movf	Lcd_Write_String@i,w
  2331  03AB  0773               	addwf	Lcd_Write_String@a,w
  2332  03AC  00F6               	movwf	??_Lcd_Write_String+1
  2333  03AD  0874               	movf	Lcd_Write_String@a+1,w
  2334  03AE  00F5               	movwf	??_Lcd_Write_String
  2335  03AF  1803               	skipnc
  2336  03B0  0AF5               	incf	??_Lcd_Write_String,f
  2337  03B1  1FF8               	btfss	Lcd_Write_String@i,7
  2338  03B2  2BB4               	goto	u570
  2339  03B3  03F5               	decf	??_Lcd_Write_String,f
  2340  03B4                     u570:
  2341  03B4  0875               	movf	??_Lcd_Write_String,w
  2342  03B5  00F7               	movwf	??_Lcd_Write_String+2
  2343  03B6  0877               	movf	??_Lcd_Write_String+2,w
  2344  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2345  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2346  03B9  00FF               	movwf	btemp+1
  2347  03BA  0876               	movf	??_Lcd_Write_String+1,w
  2348  03BB  0084               	movwf	4
  2349  03BC  120A  118A  2003  120A  118A  	fcall	stringtab
  2350  03C1  120A  118A  2294  120A  118A  	fcall	_Lcd_Write_Char
  2351  03C6                     l1424:
  2352  03C6  3001               	movlw	1
  2353  03C7  07F8               	addwf	Lcd_Write_String@i,f
  2354  03C8  1803               	skipnc
  2355  03C9  0AF9               	incf	Lcd_Write_String@i+1,f
  2356  03CA  3000               	movlw	0
  2357  03CB  07F9               	addwf	Lcd_Write_String@i+1,f
  2358  03CC                     l1426:
  2359  03CC  0878               	movf	Lcd_Write_String@i,w
  2360  03CD  0773               	addwf	Lcd_Write_String@a,w
  2361  03CE  00F6               	movwf	??_Lcd_Write_String+1
  2362  03CF  0874               	movf	Lcd_Write_String@a+1,w
  2363  03D0  00F5               	movwf	??_Lcd_Write_String
  2364  03D1  1803               	skipnc
  2365  03D2  0AF5               	incf	??_Lcd_Write_String,f
  2366  03D3  1FF8               	btfss	Lcd_Write_String@i,7
  2367  03D4  2BD6               	goto	u580
  2368  03D5  03F5               	decf	??_Lcd_Write_String,f
  2369  03D6                     u580:
  2370  03D6  0875               	movf	??_Lcd_Write_String,w
  2371  03D7  00F7               	movwf	??_Lcd_Write_String+2
  2372  03D8  0877               	movf	??_Lcd_Write_String+2,w
  2373  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2374  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2375  03DB  00FF               	movwf	btemp+1
  2376  03DC  0876               	movf	??_Lcd_Write_String+1,w
  2377  03DD  0084               	movwf	4
  2378  03DE  120A  118A  2003  120A  118A  	fcall	stringtab
  2379  03E3  3A00               	xorlw	0
  2380  03E4  1D03               	skipz
  2381  03E5  2BE7               	goto	u591
  2382  03E6  2BE8               	goto	u590
  2383  03E7                     u591:
  2384  03E7  2BAA               	goto	l1422
  2385  03E8                     u590:
  2386  03E8                     l208:
  2387  03E8  0008               	return
  2388  03E9                     __end_of_Lcd_Write_String:
  2389                           
  2390                           	psect	text6
  2391  0294                     __ptext6:	
  2392 ;; *************** function _Lcd_Write_Char *****************
  2393 ;; Defined at:
  2394 ;;		line 58 in file "LCD8bits.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  a               1    wreg     unsigned char 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  a               1    2[COMMON] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         1       0       0       0       0
  2410 ;;      Temps:          1       0       0       0       0
  2411 ;;      Totals:         2       0       0       0       0
  2412 ;;Total ram usage:        2 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		_Lcd_Port
  2417 ;; This function is called by:
  2418 ;;		_Lcd_Write_String
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           
  2423                           ;psect for function _Lcd_Write_Char
  2424  0294                     _Lcd_Write_Char:
  2425                           
  2426                           ;incstack = 0
  2427                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2428                           ;Lcd_Write_Char@a stored from wreg
  2429  0294  00F2               	movwf	Lcd_Write_Char@a
  2430  0295                     l1362:
  2431                           
  2432                           ;LCD8bits.c: 59:     RC0 = 1;
  2433  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0297  1407               	bsf	7,0	;volatile
  2436  0298                     l1364:
  2437                           
  2438                           ;LCD8bits.c: 60:     Lcd_Port(a);
  2439  0298  0872               	movf	Lcd_Write_Char@a,w
  2440  0299  120A  118A  224D  120A  118A  	fcall	_Lcd_Port
  2441  029E                     l1366:
  2442                           
  2443                           ;LCD8bits.c: 61:     RC1 = 1;
  2444  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2445  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2446  02A0  1487               	bsf	7,1	;volatile
  2447  02A1                     l1368:
  2448                           
  2449                           ;LCD8bits.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2450  02A1  301A               	movlw	26
  2451  02A2  00F1               	movwf	??_Lcd_Write_Char
  2452  02A3                     u967:
  2453  02A3  0BF1               	decfsz	??_Lcd_Write_Char,f
  2454  02A4  2AA3               	goto	u967
  2455  02A5  0000               	nop
  2456  02A6                     l1370:
  2457                           
  2458                           ;LCD8bits.c: 63:     RC1 = 0;
  2459  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2460  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2461  02A8  1087               	bcf	7,1	;volatile
  2462  02A9                     l202:
  2463  02A9  0008               	return
  2464  02AA                     __end_of_Lcd_Write_Char:
  2465                           
  2466                           	psect	text7
  2467  02E3                     __ptext7:	
  2468 ;; *************** function _Lcd_Set_Cursor *****************
  2469 ;; Defined at:
  2470 ;;		line 30 in file "LCD8bits.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  a               1    wreg     unsigned char 
  2473 ;;  b               1    4[COMMON] unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  a               1    6[COMMON] unsigned char 
  2476 ;;  temp            1    7[COMMON] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         1       0       0       0       0
  2487 ;;      Locals:         2       0       0       0       0
  2488 ;;      Temps:          1       0       0       0       0
  2489 ;;      Totals:         4       0       0       0       0
  2490 ;;Total ram usage:        4 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    2
  2493 ;; This function calls:
  2494 ;;		_Lcd_Cmd
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;;		_setup
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _Lcd_Set_Cursor
  2503  02E3                     _Lcd_Set_Cursor:
  2504                           
  2505                           ;incstack = 0
  2506                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2507                           ;Lcd_Set_Cursor@a stored from wreg
  2508  02E3  00F6               	movwf	Lcd_Set_Cursor@a
  2509  02E4                     l1408:
  2510                           
  2511                           ;LCD8bits.c: 31:     unsigned char temp;;LCD8bits.c: 32:     if (a == 1) {
  2512  02E4  0376               	decf	Lcd_Set_Cursor@a,w
  2513  02E5  1D03               	btfss	3,2
  2514  02E6  2AE8               	goto	u551
  2515  02E7  2AE9               	goto	u550
  2516  02E8                     u551:
  2517  02E8  2AF5               	goto	l1414
  2518  02E9                     u550:
  2519  02E9                     l1410:
  2520                           
  2521                           ;LCD8bits.c: 33:         temp = 0x80 + b - 1;
  2522  02E9  0874               	movf	Lcd_Set_Cursor@b,w
  2523  02EA  3E7F               	addlw	127
  2524  02EB  00F5               	movwf	??_Lcd_Set_Cursor
  2525  02EC  0875               	movf	??_Lcd_Set_Cursor,w
  2526  02ED  00F7               	movwf	Lcd_Set_Cursor@temp
  2527  02EE                     l1412:
  2528                           
  2529                           ;LCD8bits.c: 34:         Lcd_Cmd(temp);
  2530  02EE  0877               	movf	Lcd_Set_Cursor@temp,w
  2531  02EF  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2532                           
  2533                           ;LCD8bits.c: 36:     } else if (a == 2) {
  2534  02F4  2B06               	goto	l196
  2535  02F5                     l1414:
  2536  02F5  3002               	movlw	2
  2537  02F6  0676               	xorwf	Lcd_Set_Cursor@a,w
  2538  02F7  1D03               	btfss	3,2
  2539  02F8  2AFA               	goto	u561
  2540  02F9  2AFB               	goto	u560
  2541  02FA                     u561:
  2542  02FA  2B06               	goto	l196
  2543  02FB                     u560:
  2544  02FB                     l1416:
  2545                           
  2546                           ;LCD8bits.c: 37:         temp = 0xC0 + b - 1;
  2547  02FB  0874               	movf	Lcd_Set_Cursor@b,w
  2548  02FC  3EBF               	addlw	191
  2549  02FD  00F5               	movwf	??_Lcd_Set_Cursor
  2550  02FE  0875               	movf	??_Lcd_Set_Cursor,w
  2551  02FF  00F7               	movwf	Lcd_Set_Cursor@temp
  2552  0300                     l1418:
  2553                           
  2554                           ;LCD8bits.c: 38:         Lcd_Cmd(temp);
  2555  0300  0877               	movf	Lcd_Set_Cursor@temp,w
  2556  0301  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2557  0306                     l196:
  2558  0306  0008               	return
  2559  0307                     __end_of_Lcd_Set_Cursor:
  2560                           
  2561                           	psect	text8
  2562  042D                     __ptext8:	
  2563 ;; *************** function _Lcd_Init *****************
  2564 ;; Defined at:
  2565 ;;		line 42 in file "LCD8bits.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, pclath, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0
  2581 ;;      Temps:          2       0       0       0       0
  2582 ;;      Totals:         2       0       0       0       0
  2583 ;;Total ram usage:        2 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    2
  2586 ;; This function calls:
  2587 ;;		_Lcd_Cmd
  2588 ;;		_Lcd_Port
  2589 ;; This function is called by:
  2590 ;;		_setup
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _Lcd_Init
  2596  042D                     _Lcd_Init:
  2597  042D                     l1428:	
  2598                           ;incstack = 0
  2599                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2600                           
  2601                           
  2602                           ;LCD8bits.c: 43:     Lcd_Port(0);
  2603  042D  3000               	movlw	0
  2604  042E  120A  118A  224D  120A  118A  	fcall	_Lcd_Port
  2605  0433                     l1430:
  2606                           
  2607                           ;LCD8bits.c: 44:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2608  0433  3034               	movlw	52
  2609  0434  00F5               	movwf	??_Lcd_Init+1
  2610  0435  30F1               	movlw	241
  2611  0436  00F4               	movwf	??_Lcd_Init
  2612  0437                     u977:
  2613  0437  0BF4               	decfsz	??_Lcd_Init,f
  2614  0438  2C37               	goto	u977
  2615  0439  0BF5               	decfsz	??_Lcd_Init+1,f
  2616  043A  2C37               	goto	u977
  2617  043B  2C3C               	nop2
  2618  043C                     l1432:
  2619                           
  2620                           ;LCD8bits.c: 45:     Lcd_Cmd(48);
  2621  043C  3030               	movlw	48
  2622  043D  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2623                           
  2624                           ;LCD8bits.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2625  0442  300D               	movlw	13
  2626  0443  00F5               	movwf	??_Lcd_Init+1
  2627  0444  30FB               	movlw	251
  2628  0445  00F4               	movwf	??_Lcd_Init
  2629  0446                     u987:
  2630  0446  0BF4               	decfsz	??_Lcd_Init,f
  2631  0447  2C46               	goto	u987
  2632  0448  0BF5               	decfsz	??_Lcd_Init+1,f
  2633  0449  2C46               	goto	u987
  2634  044A  2C4B               	nop2
  2635  044B                     l1434:
  2636                           
  2637                           ;LCD8bits.c: 47:     Lcd_Cmd(48);
  2638  044B  3030               	movlw	48
  2639  044C  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2640  0451                     l1436:
  2641                           
  2642                           ;LCD8bits.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2643  0451  301D               	movlw	29
  2644  0452  00F5               	movwf	??_Lcd_Init+1
  2645  0453  3091               	movlw	145
  2646  0454  00F4               	movwf	??_Lcd_Init
  2647  0455                     u997:
  2648  0455  0BF4               	decfsz	??_Lcd_Init,f
  2649  0456  2C55               	goto	u997
  2650  0457  0BF5               	decfsz	??_Lcd_Init+1,f
  2651  0458  2C55               	goto	u997
  2652                           
  2653                           ;LCD8bits.c: 49:     Lcd_Cmd(48);
  2654  0459  3030               	movlw	48
  2655  045A  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2656                           
  2657                           ;LCD8bits.c: 51:     Lcd_Cmd(56);
  2658  045F  3038               	movlw	56
  2659  0460  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2660                           
  2661                           ;LCD8bits.c: 52:     Lcd_Cmd(8);
  2662  0465  3008               	movlw	8
  2663  0466  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2664                           
  2665                           ;LCD8bits.c: 53:     Lcd_Cmd(1);
  2666  046B  3001               	movlw	1
  2667  046C  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2668                           
  2669                           ;LCD8bits.c: 54:     Lcd_Cmd(6);
  2670  0471  3006               	movlw	6
  2671  0472  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2672                           
  2673                           ;LCD8bits.c: 55:     Lcd_Cmd(12);
  2674  0477  300C               	movlw	12
  2675  0478  120A  118A  22AA  120A  118A  	fcall	_Lcd_Cmd
  2676  047D                     l199:
  2677  047D  0008               	return
  2678  047E                     __end_of_Lcd_Init:
  2679                           
  2680                           	psect	text9
  2681  02AA                     __ptext9:	
  2682 ;; *************** function _Lcd_Cmd *****************
  2683 ;; Defined at:
  2684 ;;		line 17 in file "LCD8bits.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  a               1    wreg     unsigned char 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  a               1    3[COMMON] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         1       0       0       0       0
  2700 ;;      Temps:          2       0       0       0       0
  2701 ;;      Totals:         3       0       0       0       0
  2702 ;;Total ram usage:        3 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    1
  2705 ;; This function calls:
  2706 ;;		_Lcd_Port
  2707 ;; This function is called by:
  2708 ;;		_Lcd_Set_Cursor
  2709 ;;		_Lcd_Init
  2710 ;;		_Lcd_Clear
  2711 ;;		_Lcd_Shift_Right
  2712 ;;		_Lcd_Shift_Left
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _Lcd_Cmd
  2718  02AA                     _Lcd_Cmd:
  2719                           
  2720                           ;incstack = 0
  2721                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2722                           ;Lcd_Cmd@a stored from wreg
  2723  02AA  00F3               	movwf	Lcd_Cmd@a
  2724  02AB                     l1352:
  2725                           
  2726                           ;LCD8bits.c: 18:     RC0 = 0;
  2727  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2728  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2729  02AD  1007               	bcf	7,0	;volatile
  2730  02AE                     l1354:
  2731                           
  2732                           ;LCD8bits.c: 19:     Lcd_Port(a);
  2733  02AE  0873               	movf	Lcd_Cmd@a,w
  2734  02AF  120A  118A  224D  120A  118A  	fcall	_Lcd_Port
  2735  02B4                     l1356:
  2736                           
  2737                           ;LCD8bits.c: 20:     RC1 = 1;
  2738  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2739  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2740  02B6  1487               	bsf	7,1	;volatile
  2741  02B7                     l1358:
  2742                           
  2743                           ;LCD8bits.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2744  02B7  300B               	movlw	11
  2745  02B8  00F2               	movwf	??_Lcd_Cmd+1
  2746  02B9  3062               	movlw	98
  2747  02BA  00F1               	movwf	??_Lcd_Cmd
  2748  02BB                     u1007:
  2749  02BB  0BF1               	decfsz	??_Lcd_Cmd,f
  2750  02BC  2ABB               	goto	u1007
  2751  02BD  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2752  02BE  2ABB               	goto	u1007
  2753  02BF  0000               	nop
  2754  02C0                     l1360:
  2755                           
  2756                           ;LCD8bits.c: 22:     RC1 = 0;
  2757  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2758  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2759  02C2  1087               	bcf	7,1	;volatile
  2760  02C3                     l187:
  2761  02C3  0008               	return
  2762  02C4                     __end_of_Lcd_Cmd:
  2763                           
  2764                           	psect	text10
  2765  024D                     __ptext10:	
  2766 ;; *************** function _Lcd_Port *****************
  2767 ;; Defined at:
  2768 ;;		line 13 in file "LCD8bits.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  a               1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  a               1    0[COMMON] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         1       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0
  2785 ;;      Totals:         1       0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_Lcd_Cmd
  2792 ;;		_Lcd_Init
  2793 ;;		_Lcd_Write_Char
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _Lcd_Port
  2799  024D                     _Lcd_Port:
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _Lcd_Port: [wreg]
  2803                           ;Lcd_Port@a stored from wreg
  2804  024D  00F0               	movwf	Lcd_Port@a
  2805  024E                     l1346:
  2806                           
  2807                           ;LCD8bits.c: 14:     PORTD = a;
  2808  024E  0870               	movf	Lcd_Port@a,w
  2809  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0251  0088               	movwf	8	;volatile
  2812  0252                     l184:
  2813  0252  0008               	return
  2814  0253                     __end_of_Lcd_Port:
  2815                           
  2816                           	psect	text11
  2817  026D                     __ptext11:	
  2818 ;; *************** function _I2C_Master_Write *****************
  2819 ;; Defined at:
  2820 ;;		line 65 in file "I2C.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  d               2    0[COMMON] unsigned int 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, pclath, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         2       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0
  2837 ;;      Totals:         2       0       0       0       0
  2838 ;;Total ram usage:        2 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    1
  2841 ;; This function calls:
  2842 ;;		_I2C_Master_Wait
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;;		_setup
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function _I2C_Master_Write
  2851  026D                     _I2C_Master_Write:
  2852  026D                     l1400:	
  2853                           ;incstack = 0
  2854                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2855                           
  2856                           
  2857                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2858  026D  120A  118A  2277  120A  118A  	fcall	_I2C_Master_Wait
  2859  0272                     l1402:
  2860                           
  2861                           ;I2C.c: 68:     SSPBUF = d;
  2862  0272  0870               	movf	I2C_Master_Write@d,w
  2863  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0275  0093               	movwf	19	;volatile
  2866  0276                     l163:
  2867  0276  0008               	return
  2868  0277                     __end_of_I2C_Master_Write:
  2869                           
  2870                           	psect	text12
  2871  0264                     __ptext12:	
  2872 ;; *************** function _I2C_Master_Stop *****************
  2873 ;; Defined at:
  2874 ;;		line 55 in file "I2C.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0, pclath, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2888 ;;      Params:         0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0
  2891 ;;      Totals:         0       0       0       0       0
  2892 ;;Total ram usage:        0 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    1
  2895 ;; This function calls:
  2896 ;;		_I2C_Master_Wait
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;;		_setup
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _I2C_Master_Stop
  2905  0264                     _I2C_Master_Stop:
  2906  0264                     l1404:	
  2907                           ;incstack = 0
  2908                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2909                           
  2910                           
  2911                           ;I2C.c: 57:     I2C_Master_Wait();
  2912  0264  120A  118A  2277  120A  118A  	fcall	_I2C_Master_Wait
  2913  0269                     l1406:
  2914                           
  2915                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2916  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2917  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2918  026B  1511               	bsf	17,2	;volatile
  2919  026C                     l160:
  2920  026C  0008               	return
  2921  026D                     __end_of_I2C_Master_Stop:
  2922                           
  2923                           	psect	text13
  2924  025B                     __ptext13:	
  2925 ;; *************** function _I2C_Master_Start *****************
  2926 ;; Defined at:
  2927 ;;		line 39 in file "I2C.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    1
  2948 ;; This function calls:
  2949 ;;		_I2C_Master_Wait
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;;		_setup
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           
  2957                           ;psect for function _I2C_Master_Start
  2958  025B                     _I2C_Master_Start:
  2959  025B                     l1396:	
  2960                           ;incstack = 0
  2961                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2962                           
  2963                           
  2964                           ;I2C.c: 41:     I2C_Master_Wait();
  2965  025B  120A  118A  2277  120A  118A  	fcall	_I2C_Master_Wait
  2966  0260                     l1398:
  2967                           
  2968                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2969  0260  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0261  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0262  1411               	bsf	17,0	;volatile
  2972  0263                     l154:
  2973  0263  0008               	return
  2974  0264                     __end_of_I2C_Master_Start:
  2975                           
  2976                           	psect	text14
  2977  0335                     __ptext14:	
  2978 ;; *************** function _I2C_Master_Init *****************
  2979 ;; Defined at:
  2980 ;;		line 16 in file "I2C.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  c               4    0[BANK0 ] const unsigned long 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       4       0       0       0
  2995 ;;      Locals:         0       0       0       0       0
  2996 ;;      Temps:          0       4       0       0       0
  2997 ;;      Totals:         0       8       0       0       0
  2998 ;;Total ram usage:        8 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		___lldiv
  3003 ;; This function is called by:
  3004 ;;		_setup
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _I2C_Master_Init
  3010  0335                     _I2C_Master_Init:
  3011  0335                     l1438:	
  3012                           ;incstack = 0
  3013                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3014                           
  3015                           
  3016                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3017  0335  3028               	movlw	40
  3018  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0338  0094               	movwf	20	;volatile
  3021  0339                     l1440:
  3022                           
  3023                           ;I2C.c: 19:     SSPCON2 = 0;
  3024  0339  1683               	bsf	3,5	;RP0=1, select bank1
  3025  033A  1303               	bcf	3,6	;RP1=0, select bank1
  3026  033B  0191               	clrf	17	;volatile
  3027  033C                     l1442:
  3028                           
  3029                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3030  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3031  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3032  033E  0846               	movf	I2C_Master_Init@c,w
  3033  033F  00CA               	movwf	??_I2C_Master_Init
  3034  0340  0847               	movf	I2C_Master_Init@c+1,w
  3035  0341  00CB               	movwf	??_I2C_Master_Init+1
  3036  0342  0848               	movf	I2C_Master_Init@c+2,w
  3037  0343  00CC               	movwf	??_I2C_Master_Init+2
  3038  0344  0849               	movf	I2C_Master_Init@c+3,w
  3039  0345  00CD               	movwf	??_I2C_Master_Init+3
  3040  0346  3002               	movlw	2
  3041  0347                     u605:
  3042  0347  1003               	clrc
  3043  0348  0DCA               	rlf	??_I2C_Master_Init,f
  3044  0349  0DCB               	rlf	??_I2C_Master_Init+1,f
  3045  034A  0DCC               	rlf	??_I2C_Master_Init+2,f
  3046  034B  0DCD               	rlf	??_I2C_Master_Init+3,f
  3047  034C                     u600:
  3048  034C  3EFF               	addlw	-1
  3049  034D  1D03               	skipz
  3050  034E  2B47               	goto	u605
  3051  034F  084D               	movf	??_I2C_Master_Init+3,w
  3052  0350  00F3               	movwf	___lldiv@divisor+3
  3053  0351  084C               	movf	??_I2C_Master_Init+2,w
  3054  0352  00F2               	movwf	___lldiv@divisor+2
  3055  0353  084B               	movf	??_I2C_Master_Init+1,w
  3056  0354  00F1               	movwf	___lldiv@divisor+1
  3057  0355  084A               	movf	??_I2C_Master_Init,w
  3058  0356  00F0               	movwf	___lldiv@divisor
  3059  0357  3000               	movlw	0
  3060  0358  00F7               	movwf	___lldiv@dividend+3
  3061  0359  307A               	movlw	122
  3062  035A  00F6               	movwf	___lldiv@dividend+2
  3063  035B  3012               	movlw	18
  3064  035C  00F5               	movwf	___lldiv@dividend+1
  3065  035D  3000               	movlw	0
  3066  035E  00F4               	movwf	___lldiv@dividend
  3067  035F  120A  118A  247E  120A  118A  	fcall	___lldiv
  3068  0364  0870               	movf	?___lldiv,w
  3069  0365  3EFF               	addlw	255
  3070  0366  1683               	bsf	3,5	;RP0=1, select bank1
  3071  0367  1303               	bcf	3,6	;RP1=0, select bank1
  3072  0368  0093               	movwf	19	;volatile
  3073  0369                     l1444:
  3074                           
  3075                           ;I2C.c: 21:     SSPSTAT = 0;
  3076  0369  0194               	clrf	20	;volatile
  3077  036A                     l1446:
  3078                           
  3079                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3080  036A  1587               	bsf	7,3	;volatile
  3081  036B                     l1448:
  3082                           
  3083                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3084  036B  1607               	bsf	7,4	;volatile
  3085  036C                     l145:
  3086  036C  0008               	return
  3087  036D                     __end_of_I2C_Master_Init:
  3088                           
  3089                           	psect	text15
  3090  047E                     __ptext15:	
  3091 ;; *************** function ___lldiv *****************
  3092 ;; Defined at:
  3093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  divisor         4    0[COMMON] unsigned long 
  3096 ;;  dividend        4    4[COMMON] unsigned long 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  quotient        4    9[COMMON] unsigned long 
  3099 ;;  counter         1   13[COMMON] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  4    0[COMMON] unsigned long 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3109 ;;      Params:         8       0       0       0       0
  3110 ;;      Locals:         5       0       0       0       0
  3111 ;;      Temps:          1       0       0       0       0
  3112 ;;      Totals:        14       0       0       0       0
  3113 ;;Total ram usage:       14 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_I2C_Master_Init
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function ___lldiv
  3124  047E                     ___lldiv:
  3125  047E                     l1372:	
  3126                           ;incstack = 0
  3127                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3128                           
  3129  047E  3000               	movlw	0
  3130  047F  00FC               	movwf	___lldiv@quotient+3
  3131  0480  3000               	movlw	0
  3132  0481  00FB               	movwf	___lldiv@quotient+2
  3133  0482  3000               	movlw	0
  3134  0483  00FA               	movwf	___lldiv@quotient+1
  3135  0484  3000               	movlw	0
  3136  0485  00F9               	movwf	___lldiv@quotient
  3137  0486  0873               	movf	___lldiv@divisor+3,w
  3138  0487  0472               	iorwf	___lldiv@divisor+2,w
  3139  0488  0471               	iorwf	___lldiv@divisor+1,w
  3140  0489  0470               	iorwf	___lldiv@divisor,w
  3141  048A  1903               	skipnz
  3142  048B  2C8D               	goto	u481
  3143  048C  2C8E               	goto	u480
  3144  048D                     u481:
  3145  048D  2CDB               	goto	l1392
  3146  048E                     u480:
  3147  048E                     l1374:
  3148  048E  01FD               	clrf	___lldiv@counter
  3149  048F  0AFD               	incf	___lldiv@counter,f
  3150  0490  2C9E               	goto	l1378
  3151  0491                     l1376:
  3152  0491  3001               	movlw	1
  3153  0492  00F8               	movwf	??___lldiv
  3154  0493                     u495:
  3155  0493  1003               	clrc
  3156  0494  0DF0               	rlf	___lldiv@divisor,f
  3157  0495  0DF1               	rlf	___lldiv@divisor+1,f
  3158  0496  0DF2               	rlf	___lldiv@divisor+2,f
  3159  0497  0DF3               	rlf	___lldiv@divisor+3,f
  3160  0498  0BF8               	decfsz	??___lldiv,f
  3161  0499  2C93               	goto	u495
  3162  049A  3001               	movlw	1
  3163  049B  00F8               	movwf	??___lldiv
  3164  049C  0878               	movf	??___lldiv,w
  3165  049D  07FD               	addwf	___lldiv@counter,f
  3166  049E                     l1378:
  3167  049E  1FF3               	btfss	___lldiv@divisor+3,7
  3168  049F  2CA1               	goto	u501
  3169  04A0  2CA2               	goto	u500
  3170  04A1                     u501:
  3171  04A1  2C91               	goto	l1376
  3172  04A2                     u500:
  3173  04A2                     l1380:
  3174  04A2  3001               	movlw	1
  3175  04A3  00F8               	movwf	??___lldiv
  3176  04A4                     u515:
  3177  04A4  1003               	clrc
  3178  04A5  0DF9               	rlf	___lldiv@quotient,f
  3179  04A6  0DFA               	rlf	___lldiv@quotient+1,f
  3180  04A7  0DFB               	rlf	___lldiv@quotient+2,f
  3181  04A8  0DFC               	rlf	___lldiv@quotient+3,f
  3182  04A9  0BF8               	decfsz	??___lldiv,f
  3183  04AA  2CA4               	goto	u515
  3184  04AB                     l1382:
  3185  04AB  0873               	movf	___lldiv@divisor+3,w
  3186  04AC  0277               	subwf	___lldiv@dividend+3,w
  3187  04AD  1D03               	skipz
  3188  04AE  2CB9               	goto	u525
  3189  04AF  0872               	movf	___lldiv@divisor+2,w
  3190  04B0  0276               	subwf	___lldiv@dividend+2,w
  3191  04B1  1D03               	skipz
  3192  04B2  2CB9               	goto	u525
  3193  04B3  0871               	movf	___lldiv@divisor+1,w
  3194  04B4  0275               	subwf	___lldiv@dividend+1,w
  3195  04B5  1D03               	skipz
  3196  04B6  2CB9               	goto	u525
  3197  04B7  0870               	movf	___lldiv@divisor,w
  3198  04B8  0274               	subwf	___lldiv@dividend,w
  3199  04B9                     u525:
  3200  04B9  1C03               	skipc
  3201  04BA  2CBC               	goto	u521
  3202  04BB  2CBD               	goto	u520
  3203  04BC                     u521:
  3204  04BC  2CCC               	goto	l1388
  3205  04BD                     u520:
  3206  04BD                     l1384:
  3207  04BD  0870               	movf	___lldiv@divisor,w
  3208  04BE  02F4               	subwf	___lldiv@dividend,f
  3209  04BF  0871               	movf	___lldiv@divisor+1,w
  3210  04C0  1C03               	skipc
  3211  04C1  0F71               	incfsz	___lldiv@divisor+1,w
  3212  04C2  02F5               	subwf	___lldiv@dividend+1,f
  3213  04C3  0872               	movf	___lldiv@divisor+2,w
  3214  04C4  1C03               	skipc
  3215  04C5  0F72               	incfsz	___lldiv@divisor+2,w
  3216  04C6  02F6               	subwf	___lldiv@dividend+2,f
  3217  04C7  0873               	movf	___lldiv@divisor+3,w
  3218  04C8  1C03               	skipc
  3219  04C9  0F73               	incfsz	___lldiv@divisor+3,w
  3220  04CA  02F7               	subwf	___lldiv@dividend+3,f
  3221  04CB                     l1386:
  3222  04CB  1479               	bsf	___lldiv@quotient,0
  3223  04CC                     l1388:
  3224  04CC  3001               	movlw	1
  3225  04CD                     u535:
  3226  04CD  1003               	clrc
  3227  04CE  0CF3               	rrf	___lldiv@divisor+3,f
  3228  04CF  0CF2               	rrf	___lldiv@divisor+2,f
  3229  04D0  0CF1               	rrf	___lldiv@divisor+1,f
  3230  04D1  0CF0               	rrf	___lldiv@divisor,f
  3231  04D2  3EFF               	addlw	-1
  3232  04D3  1D03               	skipz
  3233  04D4  2CCD               	goto	u535
  3234  04D5                     l1390:
  3235  04D5  3001               	movlw	1
  3236  04D6  02FD               	subwf	___lldiv@counter,f
  3237  04D7  1D03               	btfss	3,2
  3238  04D8  2CDA               	goto	u541
  3239  04D9  2CDB               	goto	u540
  3240  04DA                     u541:
  3241  04DA  2CA2               	goto	l1380
  3242  04DB                     u540:
  3243  04DB                     l1392:
  3244  04DB  087C               	movf	___lldiv@quotient+3,w
  3245  04DC  00F3               	movwf	?___lldiv+3
  3246  04DD  087B               	movf	___lldiv@quotient+2,w
  3247  04DE  00F2               	movwf	?___lldiv+2
  3248  04DF  087A               	movf	___lldiv@quotient+1,w
  3249  04E0  00F1               	movwf	?___lldiv+1
  3250  04E1  0879               	movf	___lldiv@quotient,w
  3251  04E2  00F0               	movwf	?___lldiv
  3252  04E3                     l406:
  3253  04E3  0008               	return
  3254  04E4                     __end_of___lldiv:
  3255                           
  3256                           	psect	text16
  3257  02C4                     __ptext16:	
  3258 ;; *************** function _enviocadena *****************
  3259 ;; Defined at:
  3260 ;;		line 44 in file "usart.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  cadena          1    wreg     PTR unsigned char 
  3263 ;;		 -> volt(16), 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  cadena          1    2[COMMON] PTR unsigned char 
  3266 ;;		 -> volt(16), 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3276 ;;      Params:         0       0       0       0       0
  3277 ;;      Locals:         1       0       0       0       0
  3278 ;;      Temps:          1       0       0       0       0
  3279 ;;      Totals:         2       0       0       0       0
  3280 ;;Total ram usage:        2 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    1
  3283 ;; This function calls:
  3284 ;;		_enviocaracter
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _enviocadena
  3292  02C4                     _enviocadena:
  3293                           
  3294                           ;incstack = 0
  3295                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3296                           ;enviocadena@cadena stored from wreg
  3297  02C4  00F2               	movwf	enviocadena@cadena
  3298  02C5                     l1676:
  3299                           
  3300                           ;usart.c: 45:     while (*cadena != 0){
  3301  02C5  2AD2               	goto	l1682
  3302  02C6                     l1678:
  3303                           
  3304                           ;usart.c: 46:       enviocaracter(*cadena);
  3305  02C6  0872               	movf	enviocadena@cadena,w
  3306  02C7  0084               	movwf	4
  3307  02C8  0800               	movf	0,w
  3308  02C9  120A  118A  2284  120A  118A  	fcall	_enviocaracter
  3309  02CE                     l1680:
  3310                           
  3311                           ;usart.c: 47:       cadena++;
  3312  02CE  3001               	movlw	1
  3313  02CF  00F1               	movwf	??_enviocadena
  3314  02D0  0871               	movf	??_enviocadena,w
  3315  02D1  07F2               	addwf	enviocadena@cadena,f
  3316  02D2                     l1682:
  3317                           
  3318                           ;usart.c: 45:     while (*cadena != 0){
  3319  02D2  0872               	movf	enviocadena@cadena,w
  3320  02D3  0084               	movwf	4
  3321  02D4  1383               	bcf	3,7	;select IRP bank0
  3322  02D5  0800               	movf	0,w
  3323  02D6  1D03               	btfss	3,2
  3324  02D7  2AD9               	goto	u841
  3325  02D8  2ADA               	goto	u840
  3326  02D9                     u841:
  3327  02D9  2AC6               	goto	l1678
  3328  02DA                     u840:
  3329  02DA                     l253:
  3330                           
  3331                           ;usart.c: 49:     if (PIR1bits.TXIF){
  3332  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3333  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3334  02DC  1E0C               	btfss	12,4	;volatile
  3335  02DD  2ADF               	goto	u851
  3336  02DE  2AE0               	goto	u850
  3337  02DF                     u851:
  3338  02DF  2AE2               	goto	l255
  3339  02E0                     u850:
  3340  02E0                     l1684:
  3341                           
  3342                           ;usart.c: 50:             TXREG = 13;
  3343  02E0  300D               	movlw	13
  3344  02E1  0099               	movwf	25	;volatile
  3345  02E2                     l255:
  3346  02E2  0008               	return
  3347  02E3                     __end_of_enviocadena:
  3348                           
  3349                           	psect	text17
  3350  0284                     __ptext17:	
  3351 ;; *************** function _enviocaracter *****************
  3352 ;; Defined at:
  3353 ;;		line 35 in file "usart.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  a               1    wreg     unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  a               1    0[COMMON] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       0       0       0       0
  3368 ;;      Locals:         1       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0
  3370 ;;      Totals:         1       0       0       0       0
  3371 ;;Total ram usage:        1 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_enviocadena
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _enviocaracter
  3382  0284                     _enviocaracter:
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _enviocaracter: [wreg]
  3386                           ;enviocaracter@a stored from wreg
  3387  0284  00F0               	movwf	enviocaracter@a
  3388  0285                     l1450:
  3389  0285                     l244:	
  3390                           ;usart.c: 38:     }
  3391                           
  3392                           
  3393                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  3394  0285  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0286  1303               	bcf	3,6	;RP1=0, select bank1
  3396  0287  1C98               	btfss	24,1	;volatile
  3397  0288  2A8A               	goto	u611
  3398  0289  2A8B               	goto	u610
  3399  028A                     u611:
  3400  028A  2A85               	goto	l244
  3401  028B                     u610:
  3402  028B                     l246:
  3403                           
  3404                           ;usart.c: 39:     if (PIR1bits.TXIF){
  3405  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3406  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3407  028D  1E0C               	btfss	12,4	;volatile
  3408  028E  2A90               	goto	u621
  3409  028F  2A91               	goto	u620
  3410  0290                     u621:
  3411  0290  2A93               	goto	l248
  3412  0291                     u620:
  3413  0291                     l1452:
  3414                           
  3415                           ;usart.c: 40:             TXREG = a;
  3416  0291  0870               	movf	enviocaracter@a,w
  3417  0292  0099               	movwf	25	;volatile
  3418  0293                     l248:
  3419  0293  0008               	return
  3420  0294                     __end_of_enviocaracter:
  3421                           
  3422                           	psect	text18
  3423  0307                     __ptext18:	
  3424 ;; *************** function _I2C_Master_Read *****************
  3425 ;; Defined at:
  3426 ;;		line 74 in file "I2C.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  a               2    0[COMMON] unsigned short 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  temp            2    4[COMMON] unsigned short 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  2    0[COMMON] unsigned short 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, pclath, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         2       0       0       0       0
  3441 ;;      Locals:         2       0       0       0       0
  3442 ;;      Temps:          2       0       0       0       0
  3443 ;;      Totals:         6       0       0       0       0
  3444 ;;Total ram usage:        6 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    1
  3447 ;; This function calls:
  3448 ;;		_I2C_Master_Wait
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _I2C_Master_Read
  3456  0307                     _I2C_Master_Read:
  3457  0307                     l1592:	
  3458                           ;incstack = 0
  3459                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3460                           
  3461                           
  3462                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3463  0307  120A  118A  2277  120A  118A  	fcall	_I2C_Master_Wait
  3464  030C                     l1594:
  3465                           
  3466                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3467  030C  1683               	bsf	3,5	;RP0=1, select bank1
  3468  030D  1303               	bcf	3,6	;RP1=0, select bank1
  3469  030E  1591               	bsf	17,3	;volatile
  3470                           
  3471                           ;I2C.c: 79:     I2C_Master_Wait();
  3472  030F  120A  118A  2277  120A  118A  	fcall	_I2C_Master_Wait
  3473  0314                     l1596:
  3474                           
  3475                           ;I2C.c: 80:     temp = SSPBUF;
  3476  0314  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0315  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0316  0813               	movf	19,w	;volatile
  3479  0317  00F2               	movwf	??_I2C_Master_Read
  3480  0318  01F3               	clrf	??_I2C_Master_Read+1
  3481  0319  0872               	movf	??_I2C_Master_Read,w
  3482  031A  00F4               	movwf	I2C_Master_Read@temp
  3483  031B  0873               	movf	??_I2C_Master_Read+1,w
  3484  031C  00F5               	movwf	I2C_Master_Read@temp+1
  3485  031D                     l1598:
  3486                           
  3487                           ;I2C.c: 81:     I2C_Master_Wait();
  3488  031D  120A  118A  2277  120A  118A  	fcall	_I2C_Master_Wait
  3489  0322                     l1600:
  3490                           
  3491                           ;I2C.c: 82:     if(a == 1){
  3492  0322  0370               	decf	I2C_Master_Read@a,w
  3493  0323  0471               	iorwf	I2C_Master_Read@a+1,w
  3494  0324  1D03               	btfss	3,2
  3495  0325  2B27               	goto	u761
  3496  0326  2B28               	goto	u760
  3497  0327                     u761:
  3498  0327  2B2C               	goto	l166
  3499  0328                     u760:
  3500  0328                     l1602:
  3501                           
  3502                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3503  0328  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0329  1303               	bcf	3,6	;RP1=0, select bank1
  3505  032A  1291               	bcf	17,5	;volatile
  3506                           
  3507                           ;I2C.c: 84:     }else{
  3508  032B  2B2F               	goto	l167
  3509  032C                     l166:
  3510                           
  3511                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3512  032C  1683               	bsf	3,5	;RP0=1, select bank1
  3513  032D  1303               	bcf	3,6	;RP1=0, select bank1
  3514  032E  1691               	bsf	17,5	;volatile
  3515  032F                     l167:	
  3516                           ;I2C.c: 86:     }
  3517                           
  3518                           
  3519                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3520  032F  1611               	bsf	17,4	;volatile
  3521  0330                     l1604:
  3522                           
  3523                           ;I2C.c: 88:     return temp;
  3524  0330  0875               	movf	I2C_Master_Read@temp+1,w
  3525  0331  00F1               	movwf	?_I2C_Master_Read+1
  3526  0332  0874               	movf	I2C_Master_Read@temp,w
  3527  0333  00F0               	movwf	?_I2C_Master_Read
  3528  0334                     l168:
  3529  0334  0008               	return
  3530  0335                     __end_of_I2C_Master_Read:
  3531                           
  3532                           	psect	text19
  3533  0277                     __ptext19:	
  3534 ;; *************** function _I2C_Master_Wait *****************
  3535 ;; Defined at:
  3536 ;;		line 32 in file "I2C.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0
  3553 ;;      Totals:         0       0       0       0       0
  3554 ;;Total ram usage:        0 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_I2C_Master_Start
  3560 ;;		_I2C_Master_Stop
  3561 ;;		_I2C_Master_Write
  3562 ;;		_I2C_Master_Read
  3563 ;;		_I2C_Master_RepeatedStart
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _I2C_Master_Wait
  3569  0277                     _I2C_Master_Wait:
  3570  0277                     l1348:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3573                           
  3574  0277                     l148:	
  3575                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3576                           
  3577  0277  1683               	bsf	3,5	;RP0=1, select bank1
  3578  0278  1303               	bcf	3,6	;RP1=0, select bank1
  3579  0279  1914               	btfsc	20,2	;volatile
  3580  027A  2A7C               	goto	u461
  3581  027B  2A7D               	goto	u460
  3582  027C                     u461:
  3583  027C  2A77               	goto	l148
  3584  027D                     u460:
  3585  027D                     l1350:
  3586  027D  0811               	movf	17,w	;volatile
  3587  027E  391F               	andlw	31
  3588  027F  1D03               	btfss	3,2
  3589  0280  2A82               	goto	u471
  3590  0281  2A83               	goto	u470
  3591  0282                     u471:
  3592  0282  2A77               	goto	l148
  3593  0283                     u470:
  3594  0283                     l151:
  3595  0283  0008               	return
  3596  0284                     __end_of_I2C_Master_Wait:
  3597  007E                     btemp	set	126	;btemp
  3598  007E                     wtemp0	set	126
  3599                           
  3600                           	psect	config
  3601                           
  3602                           ;Config register CONFIG1 @ 0x2007
  3603                           ;	Oscillator Selection bits
  3604                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3605                           ;	Watchdog Timer Enable bit
  3606                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3607                           ;	Power-up Timer Enable bit
  3608                           ;	PWRTE = OFF, PWRT disabled
  3609                           ;	RE3/MCLR pin function select bit
  3610                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3611                           ;	Code Protection bit
  3612                           ;	CP = OFF, Program memory code protection is disabled
  3613                           ;	Data Code Protection bit
  3614                           ;	CPD = OFF, Data memory code protection is disabled
  3615                           ;	Brown Out Reset Selection bits
  3616                           ;	BOREN = OFF, BOR disabled
  3617                           ;	Internal External Switchover bit
  3618                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3619                           ;	Fail-Safe Clock Monitor Enabled bit
  3620                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3621                           ;	Low Voltage Programming Enable bit
  3622                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3623                           ;	In-Circuit Debugger Mode bit
  3624                           ;	DEBUG = 0x1, unprogrammed default
  3625  2007                     	org	8199
  3626  2007  20D4               	dw	8404
  3627                           
  3628                           ;Config register CONFIG2 @ 0x2008
  3629                           ;	Brown-out Reset Selection bit
  3630                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3631                           ;	Flash Program Memory Self Write Enable bits
  3632                           ;	WRT = OFF, Write protection off
  3633  2008                     	org	8200
  3634  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    10
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), volt(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    _enviocadena->_enviocaracter

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    5307
                                             23 BANK0      9     9      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _enviocadena
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    18     13    1280
                                              0 BANK0     23    10     13
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    2104
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1010
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _enviocadena
     _enviocaracter
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      54       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      46       5       87.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      54      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Sep 06 04:16:26 2021

                        _L 0032                          _M 0030                          _R 0031  
                        _a 0035                          _x 002A                          _y 0028  
                        pc 0002                         _s1 0034                         _s2 0033  
                       _z1 002D                         fsr 0004                        l110 0724  
                      l102 070E                        l202 02A9                        l106 071A  
                      l116 05C8                        l151 0283                        l160 026C  
                      l208 03E8                        l145 036C                        l154 0263  
                      l163 0276                        l148 0277                        l244 0285  
                      l253 02DA                        l166 032C                        l246 028B  
                      l406 04E3                        l167 032F                        l255 02E2  
                      l168 0334                        l248 0293                        l184 0252  
                      l187 02C3                        l196 0306                        l366 06CB  
                      l199 047D                        l642 042C                        l652 03A6  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      u500 04A2                        u501 04A1                        u520 04BD  
                      u600 034C                        u521 04BC                        u610 028B  
                      u611 028A                        u515 04A4                        u460 027D  
                      u620 0291                        u540 04DB                        u700 0373  
                      u461 027C                        u621 0290                        u541 04DA  
                      u525 04B9                        u605 0347                        u701 0372  
                      u470 0283                        u550 02E9                        u630 03F1  
                      u471 0282                        u535 04CD                        u551 02E8  
                      u631 03F0                        u480 048E                        u560 02FB  
                      u720 0385                        u800 065D                        u481 048D  
                      u561 02FA                        u721 0384                        u801 065C  
                      u570 03B4                        u650 0403                        u730 038F  
                      u810 0663                        u651 0402                        u731 038E  
                      u715 0377                        u811 0662                        u580 03D6  
                      u820 06B5                        u645 03F5                        u821 06B4  
                      u590 03E8                        u670 0414                        u750 03A2  
                      u830 06C7                        u495 0493                        u591 03E7  
                      u671 0413                        u751 03A1                        u735 038B  
                      u831 06C6                        u760 0328                        u840 02DA  
                      u761 0327                        u841 02D9                        u665 0404  
                      u745 0396                        u850 02E0                        u690 0428  
                      u770 05D7                        u851 02DF                        u691 0427  
                      u675 0410                        u771 05D6                        u907 074D  
                      u780 062C                        u860 0712                        u685 041C  
                      u781 062B                        u917 0779                        u861 0711  
                      u790 0652                        u870 0718                        u791 0651  
                      u927 07A5                        u871 0717                        u880 071E  
                      u937 0564                        u881 071D                        u890 0724  
                      u947 0594                        u795 064E                        u891 0723  
                      u957 05C3                        u967 02A3                        u977 0437  
                      u987 0446                        u997 0455                        fsr0 0004  
                      _xls 002F                        _xms 0026                        _yls 002E  
                      _yms 0024                        indf 0000                       l1400 026D  
                     l1402 0272                       l1410 02E9                       l1404 0264  
                     l1412 02EE                       l1420 03A7                       l1350 027D  
                     l1406 0269                       l1430 0433                       l1414 02F5  
                     l1422 03AA                       l1510 04ED                       l1502 04E4  
                     l1600 0322                       l1440 0339                       l1360 02C0  
                     l1352 02AB                       l1432 043C                       l1416 02FB  
                     l1408 02E4                       l1424 03C6                       l1520 04F7  
                     l1512 04F0                       l1504 04E8                       l1602 0328  
                     l1450 0285                       l1442 033C                       l1346 024E  
                     l1354 02AE                       l1434 044B                       l1418 0300  
                     l1370 02A6                       l1362 0295                       l1426 03CC  
                     l1530 0502                       l1522 04FA                       l1514 04F1  
                     l1506 04E9                       l1610 05D1                       l1348 0277  
                     l1604 0330                       l1452 0291                       l1380 04A2  
                     l1372 047E                       l1444 0369                       l1356 02B4  
                     l1436 0451                       l1428 042D                       l1364 0298  
                     l1540 050C                       l1532 0503                       l1524 04FB  
                     l1516 04F2                       l1508 04EC                       l1460 03F4  
                     l1620 05EC                       l1612 05D7                       l1700 0712  
                     l1390 04D5                       l1382 04AB                       l1374 048E  
                     l1446 036A                       l1438 0335                       l1358 02B7  
                     l1366 029E                       l1550 0519                       l1542 050F  
                     l1534 0504                       l1526 04FE                       l1518 04F4  
                     l1470 041A                       l1462 03FB                       l1454 03E9  
                     l1630 0624                       l1622 05F0                       l1614 05DE  
                     l1710 0752                       l1702 0718                       l1384 04BD  
                     l1376 0491                       l1392 04DB                       l1448 036B  
                     l1368 02A1                       l1560 0547                       l1552 0521  
                     l1544 0510                       l1536 0507                       l1528 0501  
                     l1472 041B                       l1464 03FF                       l1456 03EB  
                     l1480 036D                       l1632 0628                       l1616 05E3  
                     l1608 05CC                       l1720 079F                       l1712 0757  
                     l1704 071E                       l1386 04CB                       l1378 049E  
                     l1570 056E                       l1562 0550                       l1554 052A  
                     l1546 0511                       l1538 050B                       l1474 0422  
                     l1466 0403                       l1458 03F1                       l1490 0385  
                     l1482 0373                       l1650 065D                       l1634 062C  
                     l1618 05E5                       l1626 05FC                       l1722 07AA  
                     l1714 0760                       l1706 0726                       l1388 04CC  
                     l1396 025B                       l1580 0599                       l1572 0577  
                     l1564 0559                       l1556 0539                       l1548 0514  
                     l1468 0414                       l1476 0428                       l1492 038F  
                     l1484 0376                       l1660 06A1                       l1652 0663  
                     l1644 0637                       l1636 0630                       l1628 061C  
                     l1724 07D8                       l1716 076E                       l1708 0747  
                     l1398 0260                       l1590 05BD                       l1582 059E  
                     l1574 0580                       l1566 055E                       l1558 053E  
                     l1494 0395                       l1486 037D                       l1662 06A8  
                     l1654 066A                       l1638 0635                       l1726 07DE  
                     l1718 0773                       l1592 0307                       l1680 02CE  
                     l1584 05A7                       l1576 0589                       l1568 0569  
                     l1496 039C                       l1488 0381                       l1664 06AC  
                     l1656 066E                       l1648 0653                       l1728 07E6  
                     l1594 030C                       l1682 02D2                       l1586 05B0  
                     l1578 058E                       l1498 03A2                       l1658 0673  
                     l1666 06B5                       l1690 06DB                       l1596 0314  
                     l1684 02E0                       l1676 02C5                       l1588 05B8  
                     l1668 06C7                       l1692 06E4                       l1598 031D  
                     l1678 02C6                       l1694 06ED                       l1686 06CC  
                     l1784 0700                       l1688 06D2                       l1786 060E  
                     l1698 06F6                       STR_1 001D                       STR_2 002F  
                     u1007 02BB                       _PEIE 005E          ?_Lcd_Write_String 0073  
                     _arct 0022                       _main 06CC                       btemp 007E  
                     _volt 0036                       start 0000         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 02C4               ?_enviocadena 0070           ?_I2C_Master_Init 0046  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _EEADR 010D                      _EEDAT 010C  
                    _ANSEL 0188            __end_of___lldiv 04E4            __end_of___lwdiv 042D  
          __end_of___lwmod 03A7                      _SPBRG 0099                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      _TXREG 0019  
          __end_of_dpowers 001D                      _setup 04E4     __size_of_enviocaracter 0010  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 06CC           __end_of_Lcd_Init 047E           __end_of_Lcd_Port 0253  
          __initialization 07F3               __end_of_main 07F3                     ??_main 005D  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     _EECON2 018D                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0016                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0078              _enviocaracter 0284                  ??___lwdiv 0074  
                ??___lwmod 007C                  ??_sprintf 0053            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC             __pcstackCOMMON 0070  
           ?_enviocaracter 0070       __size_of_enviocadena 001F              __end_of_setup 05C9  
           _Lcd_Set_Cursor 02E3             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 004E                 __pbssBANK0 0020  
               __pmaintext 06CC  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 0307  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094             enviocaracter@a 0070                 __stringtab 0003  
                  _Heading 0020             _Lcd_Write_Char 0294                    _Lcd_Cmd 02AA  
          ??_enviocaracter 0070                    ___lldiv 047E                    ___lwdiv 03E9  
                  ___lwmod 036D            ?_Lcd_Set_Cursor 0074                    __ptext1 05C9  
                  __ptext2 036D                    __ptext3 03E9                    __ptext4 04E4  
                  __ptext5 03A7                    __ptext6 0294                    __ptext7 02E3  
                  __ptext8 042D                    __ptext9 02AA                    _dpowers 0013  
                  _mapping 002C   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 05C9  
                  clrloop0 0254     __end_of_Lcd_Write_Char 02AA       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018           I2C_Master_Init@c 0046  
         I2C_Master_Read@a 0070                  Lcd_Port@a 0070                  _PORTBbits 0006  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                  _TXSTAbits 0098           _Lcd_Write_String 03A7  
              _BAUDCTLbits 0187        start_initialization 07F3          __size_of_Lcd_Init 0051  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 004A          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070              ??_enviocadena 0071  
          Lcd_Write_Char@a 0072                  ___latbits 0002              __pcstackBANK0 0046  
                 ?_Lcd_Cmd 0070                sprintf@flag 0056                sprintf@prec 0057  
         _I2C_Master_Start 025B           _I2C_Master_Write 026D           ___lwdiv@dividend 0072  
         ??_Lcd_Set_Cursor 0075                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078        __end_of_enviocadena 02E3                  __pstrings 0003  
         ___lwdiv@quotient 0075                   ?_sprintf 0046             __size_of_setup 00E5  
                clear_ram0 0253                   Lcd_Cmd@a 0073                   _PIR1bits 000C  
                 _PIR2bits 000D      __end_of_enviocaracter 0294                __stringbase 0012  
                 _WPUBbits 0095           ??_Lcd_Write_Char 0071                   _Lcd_Init 042D  
                 _Lcd_Port 024D        I2C_Master_Read@temp 0074          enviocadena@cadena 0072  
 __end_of_Lcd_Write_String 03E9           __size_of_Lcd_Cmd 001A                 _EECON1bits 018C  
              _enviocadena 02C4           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013                 sprintf@val 0059  
          _I2C_Master_Init 0335            _I2C_Master_Read 0307            _I2C_Master_Wait 0277  
          _I2C_Master_Stop 0264            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 024D                   __ptext11 026D                   __ptext12 0264  
                 __ptext13 025B                   __ptext14 0335                   __ptext15 047E  
                 __ptext16 02C4                   __ptext17 0284                   __ptext18 0307  
                 __ptext19 0277           __size_of_sprintf 0103              __size_of_main 0127  
 __end_of_I2C_Master_Start 0264   __end_of_I2C_Master_Write 0277                 _INTCONbits 000B  
                sprintf@ap 0058                  sprintf@sp 005B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 000D                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 036D    __end_of_I2C_Master_Read 0335    __end_of_I2C_Master_Wait 0284  
  __end_of_I2C_Master_Stop 026D         Lcd_Set_Cursor@temp 0077                   sprintf@c 005C  
                 sprintf@f 0046           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 000D  
                 stringtab 0003                _SSPCON2bits 0091  
