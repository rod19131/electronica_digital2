

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 11 12:30:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  000B                     _INTCONbits	set	11
   368  0008                     _PORTD	set	8
   369  0006                     _PORTB	set	6
   370  001E                     _ADRESH	set	30
   371  000C                     _PIR1bits	set	12
   372  001F                     _ADCON0bits	set	31
   373  0013                     _SSPBUF	set	19
   374  0014                     _SSPCON	set	20
   375  0063                     _SSPIF	set	99
   376  008F                     _OSCCONbits	set	143
   377  008C                     _PIE1bits	set	140
   378  0088                     _TRISD	set	136
   379  0086                     _TRISB	set	134
   380  0085                     _TRISAbits	set	133
   381  009F                     _ADCON1bits	set	159
   382  0094                     _SSPSTATbits	set	148
   383  0094                     _SSPSTAT	set	148
   384  043B                     _TRISC3	set	1083
   385  043D                     _TRISC5	set	1085
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   397  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   398  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   399  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   400                           
   401                           ; Clear objects allocated to BANK0
   402  0013  1283               	bcf	3,5	;RP0=0, select bank0
   403  0014  1303               	bcf	3,6	;RP1=0, select bank0
   404  0015  01A0               	clrf	__pbssBANK0& (0+127)
   405  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   406  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   407  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   408  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   409  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   410  001B  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   411  001C  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   412  001D                     end_of_initialization:	
   413                           ;End of C runtime variable initialization code
   414                           
   415  001D                     __end_of__initialization:
   416  001D  0183               	clrf	3
   417  001E  120A  118A  293A   	ljmp	_main	;jump to C main() function
   418                           
   419                           	psect	bssCOMMON
   420  0075                     __pbssCOMMON:
   421  0075                     _ADC2:
   422  0075                     	ds	2
   423  0077                     _ADC:
   424  0077                     	ds	2
   425                           
   426                           	psect	bssBANK0
   427  0020                     __pbssBANK0:
   428  0020                     _contador:
   429  0020                     	ds	2
   430  0022                     _trash03:
   431  0022                     	ds	2
   432  0024                     _trash02:
   433  0024                     	ds	2
   434  0026                     _trash01:
   435  0026                     	ds	2
   436                           
   437                           	psect	cstackCOMMON
   438  0070                     __pcstackCOMMON:
   439  0070                     ?_setup:
   440  0070                     ?_spiReceiveWait:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_spiReceiveWait:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_spiWrite:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_spiWrite:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_spiRead:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_spiRead:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_ADC_config:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_isr:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_main:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     spiWrite@dat:	
   468                           ; 1 bytes @ 0x0
   469                           
   470                           
   471                           ; 1 bytes @ 0x0
   472  0070                     	ds	1
   473  0071                     ??_isr:
   474                           
   475                           ; 1 bytes @ 0x1
   476  0071                     	ds	4
   477  0075                     ??_setup:
   478  0075                     ??_spiInit:	
   479                           ; 1 bytes @ 0x5
   480                           
   481                           
   482                           	psect	cstackBANK0
   483  0028                     __pcstackBANK0:	
   484                           ; 1 bytes @ 0x5
   485                           
   486  0028                     ?_spiInit:
   487  0028                     ??_ADC_config:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0028                     spiInit@sDataSample:	
   491                           ; 1 bytes @ 0x0
   492                           
   493                           
   494                           ; 1 bytes @ 0x0
   495  0028                     	ds	1
   496  0029                     spiInit@sClockIdle:
   497                           
   498                           ; 1 bytes @ 0x1
   499  0029                     	ds	1
   500  002A                     spiInit@sTransmitEdge:
   501  002A                     ADC_config@frec:	
   502                           ; 1 bytes @ 0x2
   503                           
   504                           
   505                           ; 1 bytes @ 0x2
   506  002A                     	ds	1
   507  002B                     spiInit@sType:
   508                           
   509                           ; 1 bytes @ 0x3
   510  002B                     	ds	1
   511  002C                     ??_main:
   512                           
   513                           ; 1 bytes @ 0x4
   514  002C                     	ds	1
   515                           
   516                           	psect	maintext
   517  013A                     __pmaintext:	
   518 ;;
   519 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   520 ;;
   521 ;; *************** function _main *****************
   522 ;; Defined at:
   523 ;;		line 76 in file "esclab3.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : B00/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          0       1       0       0       0
   540 ;;      Totals:         0       1       0       0       0
   541 ;;Total ram usage:        1 bytes
   542 ;; Hardware stack levels required when called: 5
   543 ;; This function calls:
   544 ;;		_setup
   545 ;; This function is called by:
   546 ;;		Startup code after reset
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _main
   552  013A                     _main:
   553  013A                     l1135:	
   554                           ;incstack = 0
   555                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   556                           
   557                           
   558                           ;esclab3.c: 78:     OSCCONbits.IRCF2 = 1;
   559  013A  120A  118A  20EE  120A  118A  	fcall	_setup
   560  013F                     l1137:
   561                           
   562                           ;esclab3.c: 80: ;esclab3.c: 81:     ADC_config(2);
   563  013F  1283               	bcf	3,5	;RP0=0, select bank0
   564  0140  1303               	bcf	3,6	;RP1=0, select bank0
   565  0141  189F               	btfsc	31,1	;volatile
   566  0142  2944               	goto	u161
   567  0143  2945               	goto	u160
   568  0144                     u161:
   569  0144  293F               	goto	l1137
   570  0145                     u160:
   571  0145                     l1139:
   572                           
   573                           ;esclab3.c: 82: }
   574  0145  3020               	movlw	32
   575  0146  1283               	bcf	3,5	;RP0=0, select bank0
   576  0147  1303               	bcf	3,6	;RP1=0, select bank0
   577  0148  00AC               	movwf	??_main
   578  0149                     u177:
   579  0149  0BAC               	decfsz	??_main,f
   580  014A  2949               	goto	u177
   581  014B  0000               	nop
   582  014C                     l1141:
   583  014C  1283               	bcf	3,5	;RP0=0, select bank0
   584  014D  1303               	bcf	3,6	;RP1=0, select bank0
   585  014E  149F               	bsf	31,1	;volatile
   586  014F  293F               	goto	l1137
   587  0150  120A  118A  280C   	ljmp	start
   588  0153                     __end_of_main:
   589                           
   590                           	psect	text1
   591  00EE                     __ptext1:	
   592 ;; *************** function _setup *****************
   593 ;; Defined at:
   594 ;;		line 89 in file "esclab3.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; Hardware stack levels required when called: 4
   615 ;; This function calls:
   616 ;;		_ADC_config
   617 ;;		_spiInit
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _setup
   625  00EE                     _setup:
   626  00EE                     l1097:	
   627                           ;incstack = 0
   628                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   629                           
   630  00EE  3003               	movlw	3
   631  00EF  1683               	bsf	3,5	;RP0=1, select bank3
   632  00F0  1703               	bsf	3,6	;RP1=1, select bank3
   633  00F1  0088               	movwf	8	;volatile
   634  00F2                     l1099:
   635  00F2  0189               	clrf	9	;volatile
   636  00F3                     l1101:
   637  00F3  1683               	bsf	3,5	;RP0=1, select bank1
   638  00F4  1303               	bcf	3,6	;RP1=0, select bank1
   639  00F5  1405               	bsf	5,0	;volatile
   640  00F6                     l1103:
   641  00F6  1485               	bsf	5,1	;volatile
   642  00F7                     l1105:
   643  00F7  0186               	clrf	6	;volatile
   644  00F8                     l1107:
   645  00F8  0188               	clrf	8	;volatile
   646  00F9                     l1109:
   647  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   648  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   649  00FB  0186               	clrf	6	;volatile
   650  00FC                     l1111:
   651  00FC  0188               	clrf	8	;volatile
   652  00FD                     l1113:
   653  00FD  178B               	bsf	11,7	;volatile
   654  00FE                     l1115:
   655  00FE  170B               	bsf	11,6	;volatile
   656  00FF                     l1117:
   657  00FF  118C               	bcf	12,3	;volatile
   658  0100                     l1119:
   659  0100  1683               	bsf	3,5	;RP0=1, select bank1
   660  0101  1303               	bcf	3,6	;RP1=0, select bank1
   661  0102  158C               	bsf	12,3	;volatile
   662  0103                     l1121:
   663  0103  1685               	bsf	5,5	;volatile
   664  0104                     l1123:
   665  0104  1283               	bcf	3,5	;RP0=0, select bank0
   666  0105  1303               	bcf	3,6	;RP1=0, select bank0
   667  0106  01A8               	clrf	spiInit@sDataSample
   668  0107  01A9               	clrf	spiInit@sClockIdle
   669  0108  01AA               	clrf	spiInit@sTransmitEdge
   670  0109  3024               	movlw	36
   671  010A  120A  118A  211C  120A  118A  	fcall	_spiInit
   672  010F                     l1125:
   673  010F  1683               	bsf	3,5	;RP0=1, select bank1
   674  0110  1303               	bcf	3,6	;RP1=0, select bank1
   675  0111  120F               	bcf	15,4	;volatile
   676  0112                     l1127:
   677  0112  168F               	bsf	15,5	;volatile
   678  0113                     l1129:
   679  0113  170F               	bsf	15,6	;volatile
   680  0114                     l1131:
   681  0114  140F               	bsf	15,0	;volatile
   682  0115                     l1133:
   683  0115  3002               	movlw	2
   684  0116  120A  118A  2021  120A  118A  	fcall	_ADC_config
   685  011B                     l123:
   686  011B  0008               	return
   687  011C                     __end_of_setup:
   688                           
   689                           	psect	text2
   690  011C                     __ptext2:	
   691 ;; *************** function _spiInit *****************
   692 ;; Defined at:
   693 ;;		line 10 in file "spi.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  sType           1    wreg     enum E1264
   696 ;;  sDataSample     1    0[BANK0 ] enum E1272
   697 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   698 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  sType           1    3[BANK0 ] enum E1264
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       3       0       0       0
   711 ;;      Locals:         0       1       0       0       0
   712 ;;      Temps:          0       0       0       0       0
   713 ;;      Totals:         0       4       0       0       0
   714 ;;Total ram usage:        4 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 3
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_setup
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _spiInit
   726  011C                     _spiInit:
   727                           
   728                           ;incstack = 0
   729                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   730                           ;spiInit@sType stored from wreg
   731  011C  1283               	bcf	3,5	;RP0=0, select bank0
   732  011D  1303               	bcf	3,6	;RP1=0, select bank0
   733  011E  00AB               	movwf	spiInit@sType
   734  011F                     l1011:
   735                           
   736                           ;spi.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 11: {;spi.c: 12:     TRISC5 = 0;
   737  011F  1683               	bsf	3,5	;RP0=1, select bank1
   738  0120  1303               	bcf	3,6	;RP1=0, select bank1
   739  0121  1287               	bcf	7,5	;volatile
   740                           
   741                           ;spi.c: 13:     if(sType & 0b00000100)
   742  0122  1283               	bcf	3,5	;RP0=0, select bank0
   743  0123  1303               	bcf	3,6	;RP1=0, select bank0
   744  0124  1D2B               	btfss	spiInit@sType,2
   745  0125  2927               	goto	u151
   746  0126  2928               	goto	u150
   747  0127                     u151:
   748  0127  292E               	goto	l1017
   749  0128                     u150:
   750  0128                     l1013:
   751                           
   752                           ;spi.c: 14:     {;spi.c: 15:         SSPSTAT = sTransmitEdge;
   753  0128  082A               	movf	spiInit@sTransmitEdge,w
   754  0129  1683               	bsf	3,5	;RP0=1, select bank1
   755  012A  1303               	bcf	3,6	;RP1=0, select bank1
   756  012B  0094               	movwf	20	;volatile
   757  012C                     l1015:
   758                           
   759                           ;spi.c: 16:         TRISC3 = 1;
   760  012C  1587               	bsf	7,3	;volatile
   761                           
   762                           ;spi.c: 17:     }
   763  012D  2934               	goto	l16
   764  012E                     l1017:
   765                           
   766                           ;spi.c: 19:     {;spi.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   767  012E  0828               	movf	spiInit@sDataSample,w
   768  012F  042A               	iorwf	spiInit@sTransmitEdge,w
   769  0130  1683               	bsf	3,5	;RP0=1, select bank1
   770  0131  1303               	bcf	3,6	;RP1=0, select bank1
   771  0132  0094               	movwf	20	;volatile
   772  0133                     l1019:
   773                           
   774                           ;spi.c: 21:         TRISC3 = 0;
   775  0133  1187               	bcf	7,3	;volatile
   776  0134                     l16:	
   777                           ;spi.c: 22:     }
   778                           
   779                           
   780                           ;spi.c: 24:     SSPCON = sType | sClockIdle;
   781  0134  1283               	bcf	3,5	;RP0=0, select bank0
   782  0135  1303               	bcf	3,6	;RP1=0, select bank0
   783  0136  082B               	movf	spiInit@sType,w
   784  0137  0429               	iorwf	spiInit@sClockIdle,w
   785  0138  0094               	movwf	20	;volatile
   786  0139                     l17:
   787  0139  0008               	return
   788  013A                     __end_of_spiInit:
   789                           
   790                           	psect	text3
   791  0021                     __ptext3:	
   792 ;; *************** function _ADC_config *****************
   793 ;; Defined at:
   794 ;;		line 21 in file "adc.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  frec            1    wreg     unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  frec            1    2[BANK0 ] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         0       1       0       0       0
   810 ;;      Temps:          0       2       0       0       0
   811 ;;      Totals:         0       3       0       0       0
   812 ;;Total ram usage:        3 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; Hardware stack levels required when called: 3
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_setup
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _ADC_config
   824  0021                     _ADC_config:
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _ADC_config: [wreg-fsr0h+status,2+status,0]
   828                           ;ADC_config@frec stored from wreg
   829  0021  1283               	bcf	3,5	;RP0=0, select bank0
   830  0022  1303               	bcf	3,6	;RP1=0, select bank0
   831  0023  00AA               	movwf	ADC_config@frec
   832  0024                     l1021:
   833                           
   834                           ;adc.c: 22:     switch(frec){
   835  0024  2875               	goto	l1089
   836  0025                     l1023:
   837                           
   838                           ;adc.c: 24:             ADCON0bits.CHS = 0;
   839  0025  30C3               	movlw	-61
   840  0026  059F               	andwf	31,f	;volatile
   841  0027                     l1025:
   842                           
   843                           ;adc.c: 25:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   844  0027  3020               	movlw	32
   845  0028  1283               	bcf	3,5	;RP0=0, select bank0
   846  0029  1303               	bcf	3,6	;RP1=0, select bank0
   847  002A  00A8               	movwf	??_ADC_config
   848  002B                     u187:
   849  002B  0BA8               	decfsz	??_ADC_config,f
   850  002C  282B               	goto	u187
   851  002D  0000               	nop
   852  002E                     l1027:
   853                           
   854                           ;adc.c: 26:             ADCON0bits.ADCS0 = 0;
   855  002E  1283               	bcf	3,5	;RP0=0, select bank0
   856  002F  1303               	bcf	3,6	;RP1=0, select bank0
   857  0030  131F               	bcf	31,6	;volatile
   858  0031                     l1029:
   859                           
   860                           ;adc.c: 27:             ADCON0bits.ADCS1 = 0;
   861  0031  139F               	bcf	31,7	;volatile
   862  0032                     l1031:
   863                           
   864                           ;adc.c: 28:             ADCON0bits.ADON = 1;
   865  0032  141F               	bsf	31,0	;volatile
   866  0033                     l1033:
   867                           
   868                           ;adc.c: 29:             ADCON1bits.ADFM = 0;
   869  0033  1683               	bsf	3,5	;RP0=1, select bank1
   870  0034  1303               	bcf	3,6	;RP1=0, select bank1
   871  0035  139F               	bcf	31,7	;volatile
   872  0036                     l1035:
   873                           
   874                           ;adc.c: 30:             ADCON1bits.VCFG1 = 0;
   875  0036  129F               	bcf	31,5	;volatile
   876  0037                     l1037:
   877                           
   878                           ;adc.c: 31:             ADCON1bits.VCFG0 = 0;
   879  0037  121F               	bcf	31,4	;volatile
   880                           
   881                           ;adc.c: 32:             break;
   882  0038  288B               	goto	l49
   883  0039                     l1039:
   884                           
   885                           ;adc.c: 34:             ADCON0bits.CHS = 0;
   886  0039  30C3               	movlw	-61
   887  003A  059F               	andwf	31,f	;volatile
   888  003B                     l1041:
   889                           
   890                           ;adc.c: 35:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   891  003B  3020               	movlw	32
   892  003C  1283               	bcf	3,5	;RP0=0, select bank0
   893  003D  1303               	bcf	3,6	;RP1=0, select bank0
   894  003E  00A8               	movwf	??_ADC_config
   895  003F                     u197:
   896  003F  0BA8               	decfsz	??_ADC_config,f
   897  0040  283F               	goto	u197
   898  0041  0000               	nop
   899  0042                     l1043:
   900                           
   901                           ;adc.c: 36:             ADCON0bits.ADCS0 = 1;
   902  0042  1283               	bcf	3,5	;RP0=0, select bank0
   903  0043  1303               	bcf	3,6	;RP1=0, select bank0
   904  0044  171F               	bsf	31,6	;volatile
   905  0045                     l1045:
   906                           
   907                           ;adc.c: 37:             ADCON0bits.ADCS1 = 0;
   908  0045  139F               	bcf	31,7	;volatile
   909  0046                     l1047:
   910                           
   911                           ;adc.c: 38:             ADCON0bits.ADON = 1;
   912  0046  141F               	bsf	31,0	;volatile
   913  0047                     l1049:
   914                           
   915                           ;adc.c: 39:             ADCON1bits.ADFM = 0;
   916  0047  1683               	bsf	3,5	;RP0=1, select bank1
   917  0048  1303               	bcf	3,6	;RP1=0, select bank1
   918  0049  139F               	bcf	31,7	;volatile
   919  004A                     l1051:
   920                           
   921                           ;adc.c: 40:             ADCON1bits.VCFG1 = 0;
   922  004A  129F               	bcf	31,5	;volatile
   923  004B                     l1053:
   924                           
   925                           ;adc.c: 41:             ADCON1bits.VCFG0 = 0;
   926  004B  121F               	bcf	31,4	;volatile
   927                           
   928                           ;adc.c: 42:             break;
   929  004C  288B               	goto	l49
   930  004D                     l1055:
   931                           
   932                           ;adc.c: 44:             ADCON0bits.CHS = 0;
   933  004D  30C3               	movlw	-61
   934  004E  059F               	andwf	31,f	;volatile
   935  004F                     l1057:
   936                           
   937                           ;adc.c: 45:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   938  004F  3020               	movlw	32
   939  0050  1283               	bcf	3,5	;RP0=0, select bank0
   940  0051  1303               	bcf	3,6	;RP1=0, select bank0
   941  0052  00A8               	movwf	??_ADC_config
   942  0053                     u207:
   943  0053  0BA8               	decfsz	??_ADC_config,f
   944  0054  2853               	goto	u207
   945  0055  0000               	nop
   946  0056                     l1059:
   947                           
   948                           ;adc.c: 46:             ADCON0bits.ADCS0 = 0;
   949  0056  1283               	bcf	3,5	;RP0=0, select bank0
   950  0057  1303               	bcf	3,6	;RP1=0, select bank0
   951  0058  131F               	bcf	31,6	;volatile
   952  0059                     l1061:
   953                           
   954                           ;adc.c: 47:             ADCON0bits.ADCS1 = 1;
   955  0059  179F               	bsf	31,7	;volatile
   956  005A                     l1063:
   957                           
   958                           ;adc.c: 48:             ADCON0bits.ADON = 1;
   959  005A  141F               	bsf	31,0	;volatile
   960  005B                     l1065:
   961                           
   962                           ;adc.c: 49:             ADCON1bits.ADFM = 0;
   963  005B  1683               	bsf	3,5	;RP0=1, select bank1
   964  005C  1303               	bcf	3,6	;RP1=0, select bank1
   965  005D  139F               	bcf	31,7	;volatile
   966  005E                     l1067:
   967                           
   968                           ;adc.c: 50:             ADCON1bits.VCFG1 = 0;
   969  005E  129F               	bcf	31,5	;volatile
   970  005F                     l1069:
   971                           
   972                           ;adc.c: 51:             ADCON1bits.VCFG0 = 0;
   973  005F  121F               	bcf	31,4	;volatile
   974                           
   975                           ;adc.c: 52:             break;
   976  0060  288B               	goto	l49
   977  0061                     l1071:
   978                           
   979                           ;adc.c: 54:             ADCON0bits.CHS = 0;
   980  0061  30C3               	movlw	-61
   981  0062  059F               	andwf	31,f	;volatile
   982  0063                     l1073:
   983                           
   984                           ;adc.c: 55:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   985  0063  3020               	movlw	32
   986  0064  1283               	bcf	3,5	;RP0=0, select bank0
   987  0065  1303               	bcf	3,6	;RP1=0, select bank0
   988  0066  00A8               	movwf	??_ADC_config
   989  0067                     u217:
   990  0067  0BA8               	decfsz	??_ADC_config,f
   991  0068  2867               	goto	u217
   992  0069  0000               	nop
   993  006A                     l1075:
   994                           
   995                           ;adc.c: 56:             ADCON0bits.ADCS0 = 1;
   996  006A  1283               	bcf	3,5	;RP0=0, select bank0
   997  006B  1303               	bcf	3,6	;RP1=0, select bank0
   998  006C  171F               	bsf	31,6	;volatile
   999  006D                     l1077:
  1000                           
  1001                           ;adc.c: 57:             ADCON0bits.ADCS1 = 1;
  1002  006D  179F               	bsf	31,7	;volatile
  1003  006E                     l1079:
  1004                           
  1005                           ;adc.c: 58:             ADCON0bits.ADON = 1;
  1006  006E  141F               	bsf	31,0	;volatile
  1007  006F                     l1081:
  1008                           
  1009                           ;adc.c: 59:             ADCON1bits.ADFM = 0;
  1010  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1011  0070  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0071  139F               	bcf	31,7	;volatile
  1013  0072                     l1083:
  1014                           
  1015                           ;adc.c: 60:             ADCON1bits.VCFG1 = 0;
  1016  0072  129F               	bcf	31,5	;volatile
  1017  0073                     l1085:
  1018                           
  1019                           ;adc.c: 61:             ADCON1bits.VCFG0 = 0;
  1020  0073  121F               	bcf	31,4	;volatile
  1021                           
  1022                           ;adc.c: 62:             break;
  1023  0074  288B               	goto	l49
  1024  0075                     l1089:
  1025  0075  082A               	movf	ADC_config@frec,w
  1026  0076  00A8               	movwf	??_ADC_config
  1027  0077  01A9               	clrf	??_ADC_config+1
  1028                           
  1029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1030                           ; Switch size 1, requested type "simple"
  1031                           ; Number of cases is 1, Range of values is 0 to 0
  1032                           ; switch strategies available:
  1033                           ; Name         Instructions Cycles
  1034                           ; simple_byte            4     3 (average)
  1035                           ; direct_byte           11     8 (fixed)
  1036                           ; jumptable            260     6 (fixed)
  1037                           ;	Chosen strategy is simple_byte
  1038  0078  0829               	movf	??_ADC_config+1,w
  1039  0079  3A00               	xorlw	0	; case 0
  1040  007A  1903               	skipnz
  1041  007B  287D               	goto	l1173
  1042  007C  288B               	goto	l49
  1043  007D                     l1173:
  1044                           
  1045                           ; Switch size 1, requested type "simple"
  1046                           ; Number of cases is 4, Range of values is 0 to 3
  1047                           ; switch strategies available:
  1048                           ; Name         Instructions Cycles
  1049                           ; simple_byte           13     7 (average)
  1050                           ; direct_byte           20     8 (fixed)
  1051                           ; jumptable            260     6 (fixed)
  1052                           ;	Chosen strategy is simple_byte
  1053  007D  0828               	movf	??_ADC_config,w
  1054  007E  3A00               	xorlw	0	; case 0
  1055  007F  1903               	skipnz
  1056  0080  2825               	goto	l1023
  1057  0081  3A01               	xorlw	1	; case 1
  1058  0082  1903               	skipnz
  1059  0083  2839               	goto	l1039
  1060  0084  3A03               	xorlw	3	; case 2
  1061  0085  1903               	skipnz
  1062  0086  284D               	goto	l1055
  1063  0087  3A01               	xorlw	1	; case 3
  1064  0088  1903               	skipnz
  1065  0089  2861               	goto	l1071
  1066  008A  288B               	goto	l49
  1067  008B                     l49:
  1068  008B  0008               	return
  1069  008C                     __end_of_ADC_config:
  1070                           
  1071                           	psect	text4
  1072  008C                     __ptext4:	
  1073 ;; *************** function _isr *****************
  1074 ;; Defined at:
  1075 ;;		line 52 in file "esclab3.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          4       0       0       0       0
  1092 ;;      Totals:         4       0       0       0       0
  1093 ;;Total ram usage:        4 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 2
  1096 ;; This function calls:
  1097 ;;		_spiRead
  1098 ;;		_spiWrite
  1099 ;; This function is called by:
  1100 ;;		Interrupt level 1
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _isr
  1106  008C                     _isr:
  1107  008C                     i1l961:
  1108                           
  1109                           ;esclab3.c: 56:     ANSEL = 0b00000011;
  1110  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1111  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1112  008E  1F0C               	btfss	12,6	;volatile
  1113  008F  2891               	goto	u10_21
  1114  0090  2892               	goto	u10_20
  1115  0091                     u10_21:
  1116  0091  28BA               	goto	i1l977
  1117  0092                     u10_20:
  1118  0092                     i1l963:
  1119                           
  1120                           ;esclab3.c: 57:     ANSELH = 0;;esclab3.c: 58:     TRISAbits.TRISA0 = 1;
  1121  0092  0C1F               	rrf	31,w	;volatile
  1122  0093  00F1               	movwf	??_isr
  1123  0094  0C71               	rrf	??_isr,w
  1124  0095  390F               	andlw	15
  1125  0096  3A00               	xorlw	0
  1126  0097  1D03               	skipz
  1127  0098  289A               	goto	u11_21
  1128  0099  289B               	goto	u11_20
  1129  009A                     u11_21:
  1130  009A  28A7               	goto	i1l969
  1131  009B                     u11_20:
  1132  009B                     i1l965:
  1133                           
  1134                           ;esclab3.c: 59:     TRISAbits.TRISA1 = 1;
  1135  009B  081E               	movf	30,w	;volatile
  1136  009C  00F1               	movwf	??_isr
  1137  009D  01F2               	clrf	??_isr+1
  1138  009E  0871               	movf	??_isr,w
  1139  009F  00F7               	movwf	_ADC
  1140  00A0  0872               	movf	??_isr+1,w
  1141  00A1  00F8               	movwf	_ADC+1
  1142  00A2                     i1l967:
  1143                           
  1144                           ;esclab3.c: 60: 
  1145  00A2  081F               	movf	31,w	;volatile
  1146  00A3  39C3               	andlw	-61
  1147  00A4  3804               	iorlw	4
  1148  00A5  009F               	movwf	31	;volatile
  1149  00A6  28B9               	goto	i1l975
  1150  00A7                     i1l969:
  1151  00A7  0C1F               	rrf	31,w	;volatile
  1152  00A8  00F1               	movwf	??_isr
  1153  00A9  0C71               	rrf	??_isr,w
  1154  00AA  390F               	andlw	15
  1155  00AB  3A01               	xorlw	1
  1156  00AC  1D03               	skipz
  1157  00AD  28AF               	goto	u12_21
  1158  00AE  28B0               	goto	u12_20
  1159  00AF                     u12_21:
  1160  00AF  28B9               	goto	i1l975
  1161  00B0                     u12_20:
  1162  00B0                     i1l971:
  1163                           
  1164                           ;esclab3.c: 62:     TRISD = 0;
  1165  00B0  30C3               	movlw	-61
  1166  00B1  059F               	andwf	31,f	;volatile
  1167  00B2                     i1l973:
  1168                           
  1169                           ;esclab3.c: 63: 
  1170  00B2  081E               	movf	30,w	;volatile
  1171  00B3  00F1               	movwf	??_isr
  1172  00B4  01F2               	clrf	??_isr+1
  1173  00B5  0871               	movf	??_isr,w
  1174  00B6  00F5               	movwf	_ADC2
  1175  00B7  0872               	movf	??_isr+1,w
  1176  00B8  00F6               	movwf	_ADC2+1
  1177  00B9                     i1l975:
  1178                           
  1179                           ;esclab3.c: 64:     PORTB = 0;
  1180  00B9  130C               	bcf	12,6	;volatile
  1181  00BA                     i1l977:
  1182                           
  1183                           ;esclab3.c: 66: 
  1184  00BA  1D8C               	btfss	12,3	;volatile
  1185  00BB  28BD               	goto	u13_21
  1186  00BC  28BE               	goto	u13_20
  1187  00BD                     u13_21:
  1188  00BD  28E7               	goto	i1l111
  1189  00BE                     u13_20:
  1190  00BE                     i1l979:
  1191                           
  1192                           ;esclab3.c: 67:     INTCONbits.GIE = 1;
  1193  00BE  120A  118A  2153  120A  118A  	fcall	_spiRead
  1194  00C3  00F1               	movwf	??_isr
  1195  00C4  01F2               	clrf	??_isr+1
  1196  00C5  0871               	movf	??_isr,w
  1197  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1198  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1199  00C8  00A6               	movwf	_trash01
  1200  00C9  0872               	movf	??_isr+1,w
  1201  00CA  00A7               	movwf	_trash01+1
  1202                           
  1203                           ;esclab3.c: 68:     INTCONbits.PEIE = 1;
  1204  00CB  0875               	movf	_ADC2,w
  1205  00CC  120A  118A  2163  120A  118A  	fcall	_spiWrite
  1206                           
  1207                           ;esclab3.c: 69:     PIR1bits.SSPIF = 0;
  1208  00D1  120A  118A  2153  120A  118A  	fcall	_spiRead
  1209  00D6  00F1               	movwf	??_isr
  1210  00D7  01F2               	clrf	??_isr+1
  1211  00D8  0871               	movf	??_isr,w
  1212  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1213  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1214  00DB  00A4               	movwf	_trash02
  1215  00DC  0872               	movf	??_isr+1,w
  1216  00DD  00A5               	movwf	_trash02+1
  1217                           
  1218                           ;esclab3.c: 70:     PIE1bits.SSPIE = 1;
  1219  00DE  0877               	movf	_ADC,w
  1220  00DF  120A  118A  2163  120A  118A  	fcall	_spiWrite
  1221  00E4                     i1l981:
  1222                           
  1223                           ;esclab3.c: 71:     TRISAbits.TRISA5 = 1;
  1224  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00E6  118C               	bcf	12,3	;volatile
  1227  00E7                     i1l111:
  1228  00E7  0874               	movf	??_isr+3,w
  1229  00E8  008A               	movwf	10
  1230  00E9  0E73               	swapf	??_isr+2,w
  1231  00EA  0083               	movwf	3
  1232  00EB  0EFE               	swapf	btemp,f
  1233  00EC  0E7E               	swapf	btemp,w
  1234  00ED  0009               	retfie
  1235  00EE                     __end_of_isr:
  1236                           
  1237                           	psect	intentry
  1238  0004                     __pintentry:	
  1239                           ;incstack = 0
  1240                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1241                           
  1242  0004                     interrupt_function:
  1243  007E                     saved_w	set	btemp
  1244  0004  00FE               	movwf	btemp
  1245  0005  0E03               	swapf	3,w
  1246  0006  00F3               	movwf	??_isr+2
  1247  0007  080A               	movf	10,w
  1248  0008  00F4               	movwf	??_isr+3
  1249  0009  120A  118A  288C   	ljmp	_isr
  1250                           
  1251                           	psect	text5
  1252  0163                     __ptext5:	
  1253 ;; *************** function _spiWrite *****************
  1254 ;; Defined at:
  1255 ;;		line 32 in file "spi.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  dat             1    wreg     unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  dat             1    0[COMMON] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         1       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         1       0       0       0       0
  1273 ;;Total ram usage:        1 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_isr
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           
  1283                           ;psect for function _spiWrite
  1284  0163                     _spiWrite:
  1285                           
  1286                           ;incstack = 0
  1287                           ; Regs used in _spiWrite: [wreg]
  1288                           ;spiWrite@dat stored from wreg
  1289  0163  00F0               	movwf	spiWrite@dat
  1290  0164                     i1l915:
  1291                           
  1292                           ;spi.c: 32: void spiWrite(char dat);spi.c: 33: {;spi.c: 34:     SSPBUF = dat;
  1293  0164  0870               	movf	spiWrite@dat,w
  1294  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0167  0093               	movwf	19	;volatile
  1297  0168                     i1l26:
  1298  0168  0008               	return
  1299  0169                     __end_of_spiWrite:
  1300                           
  1301                           	psect	text6
  1302  0153                     __ptext6:	
  1303 ;; *************** function _spiRead *****************
  1304 ;; Defined at:
  1305 ;;		line 45 in file "spi.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      unsigned char 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0, pclath, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 1
  1326 ;; This function calls:
  1327 ;;		_spiReceiveWait
  1328 ;; This function is called by:
  1329 ;;		_isr
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _spiRead
  1335  0153                     _spiRead:
  1336  0153                     i1l917:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1339                           
  1340                           
  1341                           ;spi.c: 47:     spiReceiveWait();
  1342  0153  120A  118A  215C  120A  118A  	fcall	_spiReceiveWait
  1343  0158                     i1l919:
  1344                           
  1345                           ;spi.c: 48:     return(SSPBUF);
  1346  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1348  015A  0813               	movf	19,w	;volatile
  1349  015B                     i1l34:
  1350  015B  0008               	return
  1351  015C                     __end_of_spiRead:
  1352                           
  1353                           	psect	text7
  1354  015C                     __ptext7:	
  1355 ;; *************** function _spiReceiveWait *****************
  1356 ;; Defined at:
  1357 ;;		line 27 in file "spi.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		None
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_spiRead
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _spiReceiveWait
  1386  015C                     _spiReceiveWait:
  1387  015C                     i1l913:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _spiReceiveWait: []
  1390                           
  1391  015C                     i1l20:	
  1392                           ;spi.c: 29:     while ( !SSPSTATbits.BF );
  1393                           
  1394  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1395  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1396  015E  1C14               	btfss	20,0	;volatile
  1397  015F  2961               	goto	u9_21
  1398  0160  2962               	goto	u9_20
  1399  0161                     u9_21:
  1400  0161  295C               	goto	i1l20
  1401  0162                     u9_20:
  1402  0162                     i1l23:
  1403  0162  0008               	return
  1404  0163                     __end_of_spiReceiveWait:
  1405  007E                     btemp	set	126	;btemp
  1406  007E                     wtemp0	set	126
  1407                           
  1408                           	psect	config
  1409                           
  1410                           ;Config register CONFIG1 @ 0x2007
  1411                           ;	Oscillator Selection bits
  1412                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1413                           ;	Watchdog Timer Enable bit
  1414                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1415                           ;	Power-up Timer Enable bit
  1416                           ;	PWRTE = OFF, PWRT disabled
  1417                           ;	RE3/MCLR pin function select bit
  1418                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1419                           ;	Code Protection bit
  1420                           ;	CP = OFF, Program memory code protection is disabled
  1421                           ;	Data Code Protection bit
  1422                           ;	CPD = OFF, Data memory code protection is disabled
  1423                           ;	Brown Out Reset Selection bits
  1424                           ;	BOREN = OFF, BOR disabled
  1425                           ;	Internal External Switchover bit
  1426                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1427                           ;	Fail-Safe Clock Monitor Enabled bit
  1428                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1429                           ;	Low Voltage Programming Enable bit
  1430                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1431                           ;	In-Circuit Debugger Mode bit
  1432                           ;	DEBUG = 0x1, unprogrammed default
  1433  2007                     	org	8199
  1434  2007  20D4               	dw	8404
  1435                           
  1436                           ;Config register CONFIG2 @ 0x2008
  1437                           ;	Brown-out Reset Selection bit
  1438                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1439                           ;	Flash Program Memory Self Write Enable bits
  1440                           ;	WRT = OFF, Write protection off
  1441  2008                     	org	8200
  1442  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      5      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     478
                                              4 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     478
                         _ADC_config
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ADC_config                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      22
                                              1 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _ADC_config
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 11 12:30:56 2021

            _SSPSTATbits 0094                       l16 0134                       l17 0139  
                     l49 008B                      l123 011B                      _ADC 0077  
                    u150 0128                      u207 0053                      u151 0127  
                    u160 0145                      u217 0067                      u161 0144  
                    u177 0149                      u187 002B                      u197 003F  
                    _isr 008C      __size_of_ADC_config 006B                     l1011 011F  
                   l1021 0024                     l1013 0128                     l1101 00F3  
                   l1031 0032                     l1023 0025                     l1015 012C  
                   l1111 00FC                     l1103 00F6                     l1041 003B  
                   l1033 0033                     l1025 0027                     l1017 012E  
                   l1121 0103                     l1113 00FD                     l1105 00F7  
                   l1051 004A                     l1043 0042                     l1035 0036  
                   l1027 002E                     l1019 0133                     l1131 0114  
                   l1123 0104                     l1115 00FE                     l1107 00F8  
                   l1061 0059                     l1053 004B                     l1045 0045  
                   l1037 0037                     l1029 0031                     l1133 0115  
                   l1125 010F                     l1117 00FF                     l1109 00F9  
                   l1141 014C                     l1071 0061                     l1063 005A  
                   l1055 004D                     l1047 0046                     l1039 0039  
                   l1127 0112                     l1119 0100                     l1135 013A  
                   l1081 006F                     l1073 0063                     l1065 005B  
                   l1057 004F                     l1049 0047                     l1129 0113  
                   l1137 013F                     l1083 0072                     l1075 006A  
                   l1067 005E                     l1059 0056                     l1139 0145  
                   l1173 007D                     l1085 0073                     l1077 006D  
                   l1069 005F                     l1079 006E                     l1089 0075  
                   l1097 00EE                     l1099 00F2                     _ADC2 0075  
                   ?_isr 0070                     i1l20 015C                     i1l23 0162  
                   i1l34 015B                     i1l26 0168                     u9_20 0162  
                   u9_21 0161                     _main 013A                     btemp 007E  
                   start 000C           ADC_config@frec 002A                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l111 00E7  
                  i1l913 015C                    i1l915 0164                    i1l917 0153  
                  i1l919 0158                    i1l961 008C                    i1l971 00B0  
                  i1l963 0092                    i1l981 00E4                    i1l973 00B2  
                  i1l965 009B                    i1l975 00B9                    i1l967 00A2  
                  i1l969 00A7                    i1l977 00BA                    i1l979 00BE  
                  u10_20 0092                    u10_21 0091                    u11_20 009B  
                  u11_21 009A                    u12_20 00B0                    u12_21 00AF  
                  u13_20 00BE                    u13_21 00BD                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063                    _setup 00EE                    pclath 000A  
        __end_of_spiInit 013A          __end_of_spiRead 015C                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0153  
                 ??_main 002C                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013             ??_ADC_config 0028  
                 saved_w 007E         __end_of_spiWrite 0169                ??_spiInit 0075  
              ??_spiRead 0070       __end_of_ADC_config 008C  __end_of__initialization 001D  
         __pcstackCOMMON 0070            __end_of_setup 011C                  ??_setup 0075  
             __pbssBANK0 0020               __pmaintext 013A               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 00EE                  __ptext2 011C                  __ptext3 0021  
                __ptext4 008C                  __ptext5 0163                  __ptext6 0153  
                __ptext7 015C             __size_of_isr 0062                  _spiInit 011C  
                _spiRead 0153                  _trash01 0026                  _trash02 0024  
                _trash03 0022     end_of_initialization 001D               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 015C  
    start_initialization 000F              __end_of_isr 00EE   __end_of_spiReceiveWait 0163  
            __pbssCOMMON 0075                ___latbits 0002            __pcstackBANK0 0028  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0028  
               ?_spiRead 0070           __size_of_setup 002E     spiInit@sTransmitEdge 002A  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0028  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
             _ADC_config 0021         __size_of_spiInit 001E         __size_of_spiRead 0009  
               _contador 0020            __size_of_main 0019                 _spiWrite 0163  
           spiInit@sType 002B        spiInit@sClockIdle 0029               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
            ?_ADC_config 0070  
