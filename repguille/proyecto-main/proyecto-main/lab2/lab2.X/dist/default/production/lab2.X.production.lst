

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 01 21:49:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F887 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0105                     	;# 
   146  0107                     	;# 
   147  0108                     	;# 
   148  0109                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0185                     	;# 
   155  0187                     	;# 
   156  0188                     	;# 
   157  0189                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008F                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  0107                     	;# 
   225  0108                     	;# 
   226  0109                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0185                     	;# 
   233  0187                     	;# 
   234  0188                     	;# 
   235  0189                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  0107                     	;# 
   303  0108                     	;# 
   304  0109                     	;# 
   305  010C                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  0185                     	;# 
   311  0187                     	;# 
   312  0188                     	;# 
   313  0189                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  008F                     	;# 
   361  0090                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  0105                     	;# 
   380  0107                     	;# 
   381  0108                     	;# 
   382  0109                     	;# 
   383  010C                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  0185                     	;# 
   389  0187                     	;# 
   390  0188                     	;# 
   391  0189                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  000E                     	;# 
   410  000F                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001D                     	;# 
   427  001E                     	;# 
   428  001F                     	;# 
   429  0081                     	;# 
   430  0085                     	;# 
   431  0086                     	;# 
   432  0087                     	;# 
   433  0088                     	;# 
   434  0089                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  008F                     	;# 
   439  0090                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  0105                     	;# 
   458  0107                     	;# 
   459  0108                     	;# 
   460  0109                     	;# 
   461  010C                     	;# 
   462  010C                     	;# 
   463  010D                     	;# 
   464  010E                     	;# 
   465  010F                     	;# 
   466  0185                     	;# 
   467  0187                     	;# 
   468  0188                     	;# 
   469  0189                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472                           
   473                           	psect	strings
   474  1800                     __pstrings:
   475  1800                     stringtab:
   476  1800                     __stringtab:
   477                           
   478                           ;	String table - string pointers are 1 byte each
   479  1800  1BFF               	btfsc	btemp+1,7
   480  1801  280A               	ljmp	stringcode
   481  1802  1383               	bcf	3,7
   482  1803  187F               	btfsc	btemp+1,0
   483  1804  1783               	bsf	3,7
   484  1805  0800               	movf	0,w
   485  1806  0A84               	incf	4,f
   486  1807  1903               	skipnz
   487  1808  0AFF               	incf	btemp+1,f
   488  1809  0008               	return
   489  180A                     stringcode:
   490  180A                     stringdir:
   491  180A  3018               	movlw	high stringdir
   492  180B  008A               	movwf	10
   493  180C  0804               	movf	4,w
   494  180D  0A84               	incf	4,f
   495  180E  0782               	addwf	2,f
   496  180F                     __stringbase:
   497  180F  3400               	retlw	0
   498  1810                     __end_of__stringtab:
   499  1810                     __powers_:
   500  1810  3400               	retlw	0
   501  1811  3400               	retlw	0
   502  1812  3480               	retlw	128
   503  1813  343F               	retlw	63
   504  1814  3400               	retlw	0
   505  1815  3400               	retlw	0
   506  1816  3420               	retlw	32
   507  1817  3441               	retlw	65
   508  1818  3400               	retlw	0
   509  1819  3400               	retlw	0
   510  181A  34C8               	retlw	200
   511  181B  3442               	retlw	66
   512  181C  3400               	retlw	0
   513  181D  3400               	retlw	0
   514  181E  347A               	retlw	122
   515  181F  3444               	retlw	68
   516  1820  3400               	retlw	0
   517  1821  3440               	retlw	64
   518  1822  341C               	retlw	28
   519  1823  3446               	retlw	70
   520  1824  3400               	retlw	0
   521  1825  3450               	retlw	80
   522  1826  34C3               	retlw	195
   523  1827  3447               	retlw	71
   524  1828  3400               	retlw	0
   525  1829  3424               	retlw	36
   526  182A  3474               	retlw	116
   527  182B  3449               	retlw	73
   528  182C  3480               	retlw	128
   529  182D  3496               	retlw	150
   530  182E  3418               	retlw	24
   531  182F  344B               	retlw	75
   532  1830  3420               	retlw	32
   533  1831  34BC               	retlw	188
   534  1832  34BE               	retlw	190
   535  1833  344C               	retlw	76
   536  1834  3428               	retlw	40
   537  1835  346B               	retlw	107
   538  1836  346E               	retlw	110
   539  1837  344E               	retlw	78
   540  1838  34F9               	retlw	249
   541  1839  3402               	retlw	2
   542  183A  3415               	retlw	21
   543  183B  3450               	retlw	80
   544  183C  34EC               	retlw	236
   545  183D  3478               	retlw	120
   546  183E  34AD               	retlw	173
   547  183F  3460               	retlw	96
   548  1840  34CA               	retlw	202
   549  1841  34F2               	retlw	242
   550  1842  3449               	retlw	73
   551  1843  3471               	retlw	113
   552  1844                     __end_of__powers_:
   553  1844                     __npowers_:
   554  1844  3400               	retlw	0
   555  1845  3400               	retlw	0
   556  1846  3480               	retlw	128
   557  1847  343F               	retlw	63
   558  1848  34CD               	retlw	205
   559  1849  34CC               	retlw	204
   560  184A  34CC               	retlw	204
   561  184B  343D               	retlw	61
   562  184C  340A               	retlw	10
   563  184D  34D7               	retlw	215
   564  184E  3423               	retlw	35
   565  184F  343C               	retlw	60
   566  1850  346F               	retlw	111
   567  1851  3412               	retlw	18
   568  1852  3483               	retlw	131
   569  1853  343A               	retlw	58
   570  1854  3417               	retlw	23
   571  1855  34B7               	retlw	183
   572  1856  34D1               	retlw	209
   573  1857  3438               	retlw	56
   574  1858  34AC               	retlw	172
   575  1859  34C5               	retlw	197
   576  185A  3427               	retlw	39
   577  185B  3437               	retlw	55
   578  185C  34BD               	retlw	189
   579  185D  3437               	retlw	55
   580  185E  3486               	retlw	134
   581  185F  3435               	retlw	53
   582  1860  3495               	retlw	149
   583  1861  34BF               	retlw	191
   584  1862  34D6               	retlw	214
   585  1863  3433               	retlw	51
   586  1864  3477               	retlw	119
   587  1865  34CC               	retlw	204
   588  1866  342B               	retlw	43
   589  1867  3432               	retlw	50
   590  1868  345F               	retlw	95
   591  1869  3470               	retlw	112
   592  186A  3489               	retlw	137
   593  186B  3430               	retlw	48
   594  186C  34FF               	retlw	255
   595  186D  34E6               	retlw	230
   596  186E  34DB               	retlw	219
   597  186F  342E               	retlw	46
   598  1870  3408               	retlw	8
   599  1871  34E5               	retlw	229
   600  1872  343C               	retlw	60
   601  1873  341E               	retlw	30
   602  1874  3460               	retlw	96
   603  1875  3442               	retlw	66
   604  1876  34A2               	retlw	162
   605  1877  340D               	retlw	13
   606  1878                     __end_of__npowers_:
   607  1878                     _dpowers:
   608  1878  3401               	retlw	1
   609  1879  3400               	retlw	0
   610  187A  3400               	retlw	0
   611  187B  3400               	retlw	0
   612  187C  340A               	retlw	10
   613  187D  3400               	retlw	0
   614  187E  3400               	retlw	0
   615  187F  3400               	retlw	0
   616  1880  3464               	retlw	100
   617  1881  3400               	retlw	0
   618  1882  3400               	retlw	0
   619  1883  3400               	retlw	0
   620  1884  34E8               	retlw	232
   621  1885  3403               	retlw	3
   622  1886  3400               	retlw	0
   623  1887  3400               	retlw	0
   624  1888  3410               	retlw	16
   625  1889  3427               	retlw	39
   626  188A  3400               	retlw	0
   627  188B  3400               	retlw	0
   628  188C  34A0               	retlw	160
   629  188D  3486               	retlw	134
   630  188E  3401               	retlw	1
   631  188F  3400               	retlw	0
   632  1890  3440               	retlw	64
   633  1891  3442               	retlw	66
   634  1892  340F               	retlw	15
   635  1893  3400               	retlw	0
   636  1894  3480               	retlw	128
   637  1895  3496               	retlw	150
   638  1896  3498               	retlw	152
   639  1897  3400               	retlw	0
   640  1898  3400               	retlw	0
   641  1899  34E1               	retlw	225
   642  189A  34F5               	retlw	245
   643  189B  3405               	retlw	5
   644  189C  3400               	retlw	0
   645  189D  34CA               	retlw	202
   646  189E  349A               	retlw	154
   647  189F  343B               	retlw	59
   648  18A0                     __end_of_dpowers:
   649  001E                     _ADRESH	set	30
   650  000C                     _PIR1bits	set	12
   651  001F                     _ADCON0bits	set	31
   652  000B                     _INTCONbits	set	11
   653  0008                     _PORTD	set	8
   654  0007                     _PORTC	set	7
   655  0005                     _PORTA	set	5
   656  0039                     _RC1	set	57
   657  0038                     _RC0	set	56
   658  0047                     _RD7	set	71
   659  0046                     _RD6	set	70
   660  0045                     _RD5	set	69
   661  0044                     _RD4	set	68
   662  0043                     _RD3	set	67
   663  0042                     _RD2	set	66
   664  0041                     _RD1	set	65
   665  0040                     _RD0	set	64
   666  009F                     _ADCON1bits	set	159
   667  008C                     _PIE1bits	set	140
   668  0088                     _TRISD	set	136
   669  0087                     _TRISC	set	135
   670  0085                     _TRISA	set	133
   671  008F                     _OSCCONbits	set	143
   672  0188                     _ANSELbits	set	392
   673  0189                     _ANSELH	set	393
   674  18A0                     STR_2:
   675  18A0  3425               	retlw	37	;'%'
   676  18A1  342E               	retlw	46	;'.'
   677  18A2  3432               	retlw	50	;'2'
   678  18A3  3466               	retlw	102	;'f'
   679  18A4  3420               	retlw	32	;' '
   680  18A5  3420               	retlw	32	;' '
   681  18A6  3425               	retlw	37	;'%'
   682  18A7  342E               	retlw	46	;'.'
   683  18A8  3432               	retlw	50	;'2'
   684  18A9  3466               	retlw	102	;'f'
   685  18AA  3420               	retlw	32	;' '
   686  18AB  3420               	retlw	32	;' '
   687  18AC  3425               	retlw	37	;'%'
   688  18AD  3464               	retlw	100	;'d'
   689  18AE  3400               	retlw	0
   690  18AF                     STR_1:
   691  18AF  3453               	retlw	83	;'S'
   692  18B0  3431               	retlw	49	;'1'
   693  18B1  3420               	retlw	32	;' '
   694  18B2  3420               	retlw	32	;' '
   695  18B3  3453               	retlw	83	;'S'
   696  18B4  3431               	retlw	49	;'1'
   697  18B5  3420               	retlw	32	;' '
   698  18B6  3420               	retlw	32	;' '
   699  18B7  3453               	retlw	83	;'S'
   700  18B8  3433               	retlw	51	;'3'
   701  18B9  3400               	retlw	0
   702                           
   703                           	psect	cinit
   704  07EF                     start_initialization:	
   705                           ; #config settings
   706                           
   707  07EF                     __initialization:
   708                           
   709                           ; Clear objects allocated to BANK0
   710  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   711  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   712  07F1  01EE               	clrf	__pbssBANK0& (0+127)
   713  07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   714                           
   715                           ; Clear objects allocated to BANK1
   716  07F3  1383               	bcf	3,7	;select IRP bank0
   717  07F4  30CC               	movlw	low __pbssBANK1
   718  07F5  0084               	movwf	4
   719  07F6  30E6               	movlw	low (__pbssBANK1+26)
   720  07F7  120A  158A  2002  120A  118A  	fcall	clear_ram0
   721  07FC                     end_of_initialization:	
   722                           ;End of C runtime variable initialization code
   723                           
   724  07FC                     __end_of__initialization:
   725  07FC  0183               	clrf	3
   726  07FD  120A  158A  284C   	ljmp	_main	;jump to C main() function
   727                           
   728                           	psect	bssBANK0
   729  006E                     __pbssBANK0:
   730  006E                     _a:
   731  006E                     	ds	2
   732                           
   733                           	psect	bssBANK1
   734  00CC                     __pbssBANK1:
   735  00CC                     _S2:
   736  00CC                     	ds	4
   737  00D0                     _S1:
   738  00D0                     	ds	4
   739  00D4                     _s2:
   740  00D4                     	ds	1
   741  00D5                     _s1:
   742  00D5                     	ds	1
   743  00D6                     _volt:
   744  00D6                     	ds	16
   745                           
   746                           	psect	clrtext
   747  0802                     clear_ram0:	
   748                           ;	Called with FSR containing the base address, and
   749                           ;	W with the last address+1
   750                           
   751  0802  0064               	clrwdt	;clear the watchdog before getting into this loop
   752  0803                     clrloop0:
   753  0803  0180               	clrf	0	;clear RAM location pointed to by FSR
   754  0804  0A84               	incf	4,f	;increment pointer
   755  0805  0604               	xorwf	4,w	;XOR with final address
   756  0806  1903               	btfsc	3,2	;have we reached the end yet?
   757  0807  3400               	retlw	0	;all done for this memory range, return
   758  0808  0604               	xorwf	4,w	;XOR again to restore value
   759  0809  2803               	goto	clrloop0	;do the next byte
   760                           
   761                           	psect	cstackBANK1
   762  00A0                     __pcstackBANK1:
   763  00A0                     ?_sprintf:
   764  00A0                     sprintf@f:	
   765                           ; 2 bytes @ 0x0
   766                           
   767                           
   768                           ; 1 bytes @ 0x0
   769  00A0                     	ds	11
   770  00AB                     ??_sprintf:
   771                           
   772                           ; 1 bytes @ 0xB
   773  00AB                     	ds	5
   774  00B0                     _sprintf$1070:
   775                           
   776                           ; 4 bytes @ 0x10
   777  00B0                     	ds	4
   778  00B4                     sprintf@ap:
   779                           
   780                           ; 1 bytes @ 0x14
   781  00B4                     	ds	1
   782  00B5                     sprintf@flag:
   783                           
   784                           ; 2 bytes @ 0x15
   785  00B5                     	ds	2
   786  00B7                     sprintf@eexp:
   787                           
   788                           ; 2 bytes @ 0x17
   789  00B7                     	ds	2
   790  00B9                     sprintf@tmpval:
   791                           
   792                           ; 4 bytes @ 0x19
   793  00B9                     	ds	4
   794  00BD                     sprintf@val:
   795                           
   796                           ; 4 bytes @ 0x1D
   797  00BD                     	ds	4
   798  00C1                     sprintf@sp:
   799                           
   800                           ; 1 bytes @ 0x21
   801  00C1                     	ds	1
   802  00C2                     sprintf@fval:
   803                           
   804                           ; 4 bytes @ 0x22
   805  00C2                     	ds	4
   806  00C6                     sprintf@prec:
   807                           
   808                           ; 2 bytes @ 0x26
   809  00C6                     	ds	2
   810  00C8                     sprintf@c:
   811                           
   812                           ; 1 bytes @ 0x28
   813  00C8                     	ds	1
   814  00C9                     ??_main:
   815                           
   816                           ; 1 bytes @ 0x29
   817  00C9                     	ds	3
   818                           
   819                           	psect	cstackCOMMON
   820  0070                     __pcstackCOMMON:
   821  0070                     ?_isdigit:
   822  0070                     ?___fleq:	
   823                           ; 1 bit 
   824                           
   825  0070                     ?___flge:	
   826                           ; 1 bit 
   827                           
   828  0070                     ?_adc_c:	
   829                           ; 1 bit 
   830                           
   831  0070                     ??_adc_c:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_adc_canal:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ??_adc_canal:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ??_isdigit:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_Lcd_Port:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ??_Lcd_Port:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_Lcd_Cmd:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_Lcd_Init:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_Lcd_Write_Char:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_main:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?__Umul8_16:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?___wmul:	
   865                           ; 2 bytes @ 0x0
   866                           
   867  0070                     ?___awmod:	
   868                           ; 2 bytes @ 0x0
   869                           
   870  0070                     ?___lwmod:	
   871                           ; 2 bytes @ 0x0
   872                           
   873  0070                     ?__tdiv_to_l_:	
   874                           ; 2 bytes @ 0x0
   875                           
   876  0070                     ?__div_to_l_:	
   877                           ; 4 bytes @ 0x0
   878                           
   879  0070                     ?___lldiv:	
   880                           ; 4 bytes @ 0x0
   881                           
   882  0070                     ?___flneg:	
   883                           ; 4 bytes @ 0x0
   884                           
   885  0070                     ?___xxtofl:	
   886                           ; 4 bytes @ 0x0
   887                           
   888  0070                     Lcd_Port@a:	
   889                           ; 4 bytes @ 0x0
   890                           
   891  0070                     __Umul8_16@multiplicand:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     _isdigit$878:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ___wmul@multiplier:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ___awmod@divisor:	
   901                           ; 2 bytes @ 0x0
   902                           
   903  0070                     ___lwmod@divisor:	
   904                           ; 2 bytes @ 0x0
   905                           
   906  0070                     ___lldiv@divisor:	
   907                           ; 2 bytes @ 0x0
   908                           
   909  0070                     __div_to_l_@f1:	
   910                           ; 4 bytes @ 0x0
   911                           
   912  0070                     ___fleq@ff1:	
   913                           ; 4 bytes @ 0x0
   914                           
   915  0070                     ___flge@ff1:	
   916                           ; 4 bytes @ 0x0
   917                           
   918  0070                     ___flneg@f1:	
   919                           ; 4 bytes @ 0x0
   920                           
   921  0070                     __tdiv_to_l_@f1:	
   922                           ; 4 bytes @ 0x0
   923                           
   924  0070                     ___xxtofl@val:	
   925                           ; 4 bytes @ 0x0
   926                           
   927                           
   928                           ; 4 bytes @ 0x0
   929  0070                     	ds	1
   930  0071                     ??_Lcd_Cmd:
   931  0071                     ??_Lcd_Write_Char:	
   932                           ; 1 bytes @ 0x1
   933                           
   934  0071                     adc_canal@canal:	
   935                           ; 1 bytes @ 0x1
   936                           
   937  0071                     isdigit@c:	
   938                           ; 1 bytes @ 0x1
   939                           
   940                           
   941                           ; 1 bytes @ 0x1
   942  0071                     	ds	1
   943  0072                     ??__Umul8_16:
   944  0072                     Lcd_Write_Char@a:	
   945                           ; 1 bytes @ 0x2
   946                           
   947  0072                     ___wmul@multiplicand:	
   948                           ; 1 bytes @ 0x2
   949                           
   950  0072                     ___awmod@dividend:	
   951                           ; 2 bytes @ 0x2
   952                           
   953  0072                     ___lwmod@dividend:	
   954                           ; 2 bytes @ 0x2
   955                           
   956                           
   957                           ; 2 bytes @ 0x2
   958  0072                     	ds	1
   959  0073                     ?_Lcd_Write_String:
   960  0073                     Lcd_Cmd@a:	
   961                           ; 1 bytes @ 0x3
   962                           
   963  0073                     Lcd_Write_String@a:	
   964                           ; 1 bytes @ 0x3
   965                           
   966                           
   967                           ; 2 bytes @ 0x3
   968  0073                     	ds	1
   969  0074                     ?_Lcd_Set_Cursor:
   970  0074                     ??_Lcd_Init:	
   971                           ; 1 bytes @ 0x4
   972                           
   973  0074                     ??___wmul:	
   974                           ; 1 bytes @ 0x4
   975                           
   976  0074                     ??___awmod:	
   977                           ; 1 bytes @ 0x4
   978                           
   979  0074                     ??___flneg:	
   980                           ; 1 bytes @ 0x4
   981                           
   982  0074                     ??___lwmod:	
   983                           ; 1 bytes @ 0x4
   984                           
   985  0074                     ??___xxtofl:	
   986                           ; 1 bytes @ 0x4
   987                           
   988  0074                     Lcd_Set_Cursor@b:	
   989                           ; 1 bytes @ 0x4
   990                           
   991  0074                     ___wmul@product:	
   992                           ; 1 bytes @ 0x4
   993                           
   994  0074                     __Umul8_16@product:	
   995                           ; 2 bytes @ 0x4
   996                           
   997  0074                     ___lldiv@dividend:	
   998                           ; 2 bytes @ 0x4
   999                           
  1000  0074                     __div_to_l_@f2:	
  1001                           ; 4 bytes @ 0x4
  1002                           
  1003  0074                     ___fleq@ff2:	
  1004                           ; 4 bytes @ 0x4
  1005                           
  1006  0074                     ___flge@ff2:	
  1007                           ; 4 bytes @ 0x4
  1008                           
  1009  0074                     __tdiv_to_l_@f2:	
  1010                           ; 4 bytes @ 0x4
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x4
  1014  0074                     	ds	1
  1015  0075                     ??_Lcd_Set_Cursor:
  1016  0075                     ??_Lcd_Write_String:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019  0075                     ___awmod@counter:	
  1020                           ; 1 bytes @ 0x5
  1021                           
  1022  0075                     ___lwmod@counter:	
  1023                           ; 1 bytes @ 0x5
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  0075                     	ds	1
  1028  0076                     ?___lwdiv:
  1029  0076                     Lcd_Set_Cursor@a:	
  1030                           ; 2 bytes @ 0x6
  1031                           
  1032  0076                     ___awmod@sign:	
  1033                           ; 1 bytes @ 0x6
  1034                           
  1035  0076                     ___lwdiv@divisor:	
  1036                           ; 1 bytes @ 0x6
  1037                           
  1038  0076                     __Umul8_16@word_mpld:	
  1039                           ; 2 bytes @ 0x6
  1040                           
  1041                           
  1042                           ; 2 bytes @ 0x6
  1043  0076                     	ds	1
  1044  0077                     ?___awdiv:
  1045  0077                     Lcd_Set_Cursor@temp:	
  1046                           ; 2 bytes @ 0x7
  1047                           
  1048  0077                     ___awdiv@divisor:	
  1049                           ; 1 bytes @ 0x7
  1050                           
  1051                           
  1052                           ; 2 bytes @ 0x7
  1053  0077                     	ds	1
  1054  0078                     ??__tdiv_to_l_:
  1055  0078                     ??__div_to_l_:	
  1056                           ; 1 bytes @ 0x8
  1057                           
  1058  0078                     ??___lldiv:	
  1059                           ; 1 bytes @ 0x8
  1060                           
  1061  0078                     ??___fleq:	
  1062                           ; 1 bytes @ 0x8
  1063                           
  1064  0078                     ??___flge:	
  1065                           ; 1 bytes @ 0x8
  1066                           
  1067  0078                     __Umul8_16@multiplier:	
  1068                           ; 1 bytes @ 0x8
  1069                           
  1070  0078                     ___xxtofl@sign:	
  1071                           ; 1 bytes @ 0x8
  1072                           
  1073  0078                     Lcd_Write_String@i:	
  1074                           ; 1 bytes @ 0x8
  1075                           
  1076  0078                     ___lwdiv@dividend:	
  1077                           ; 2 bytes @ 0x8
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x8
  1081  0078                     	ds	1
  1082  0079                     ___xxtofl@exp:
  1083  0079                     ___awdiv@dividend:	
  1084                           ; 1 bytes @ 0x9
  1085                           
  1086  0079                     ___lldiv@quotient:	
  1087                           ; 2 bytes @ 0x9
  1088                           
  1089                           
  1090                           ; 4 bytes @ 0x9
  1091  0079                     	ds	1
  1092  007A                     ??___lwdiv:
  1093  007A                     ___xxtofl@arg:	
  1094                           ; 1 bytes @ 0xA
  1095                           
  1096                           
  1097                           ; 4 bytes @ 0xA
  1098  007A                     	ds	1
  1099  007B                     ??___awdiv:
  1100  007B                     ___lwdiv@quotient:	
  1101                           ; 1 bytes @ 0xB
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0xB
  1105  007B                     	ds	2
  1106  007D                     ___lldiv@counter:
  1107  007D                     ___lwdiv@counter:	
  1108                           ; 1 bytes @ 0xD
  1109                           
  1110                           
  1111                           ; 1 bytes @ 0xD
  1112  007D                     	ds	1
  1113  007E                     ??___flsub:
  1114                           
  1115                           	psect	cstackBANK0
  1116  0020                     __pcstackBANK0:	
  1117                           ; 1 bytes @ 0xE
  1118                           
  1119  0020                     ?___llmod:
  1120  0020                     ___awdiv@counter:	
  1121                           ; 4 bytes @ 0x0
  1122                           
  1123  0020                     __div_to_l_@quot:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0020                     __tdiv_to_l_@quot:	
  1127                           ; 4 bytes @ 0x0
  1128                           
  1129  0020                     ___llmod@divisor:	
  1130                           ; 4 bytes @ 0x0
  1131                           
  1132                           
  1133                           ; 4 bytes @ 0x0
  1134  0020                     	ds	1
  1135  0021                     ___awdiv@sign:
  1136                           
  1137                           ; 1 bytes @ 0x1
  1138  0021                     	ds	1
  1139  0022                     ___awdiv@quotient:
  1140                           
  1141                           ; 2 bytes @ 0x2
  1142  0022                     	ds	2
  1143  0024                     ?___flmul:
  1144  0024                     __div_to_l_@cntr:	
  1145                           ; 4 bytes @ 0x4
  1146                           
  1147  0024                     __tdiv_to_l_@cntr:	
  1148                           ; 1 bytes @ 0x4
  1149                           
  1150  0024                     ___llmod@dividend:	
  1151                           ; 1 bytes @ 0x4
  1152                           
  1153  0024                     ___flmul@b:	
  1154                           ; 4 bytes @ 0x4
  1155                           
  1156                           
  1157                           ; 4 bytes @ 0x4
  1158  0024                     	ds	1
  1159  0025                     __div_to_l_@exp1:
  1160  0025                     __tdiv_to_l_@exp1:	
  1161                           ; 1 bytes @ 0x5
  1162                           
  1163                           
  1164                           ; 1 bytes @ 0x5
  1165  0025                     	ds	3
  1166  0028                     ??___llmod:
  1167  0028                     ___flmul@a:	
  1168                           ; 1 bytes @ 0x8
  1169                           
  1170                           
  1171                           ; 4 bytes @ 0x8
  1172  0028                     	ds	1
  1173  0029                     ___llmod@counter:
  1174                           
  1175                           ; 1 bytes @ 0x9
  1176  0029                     	ds	3
  1177  002C                     ??___flmul:
  1178                           
  1179                           ; 1 bytes @ 0xC
  1180  002C                     	ds	5
  1181  0031                     ___flmul@sign:
  1182                           
  1183                           ; 1 bytes @ 0x11
  1184  0031                     	ds	1
  1185  0032                     ___flmul@grs:
  1186                           
  1187                           ; 4 bytes @ 0x12
  1188  0032                     	ds	4
  1189  0036                     ___flmul@aexp:
  1190                           
  1191                           ; 1 bytes @ 0x16
  1192  0036                     	ds	1
  1193  0037                     ___flmul@bexp:
  1194                           
  1195                           ; 1 bytes @ 0x17
  1196  0037                     	ds	1
  1197  0038                     ___flmul@prod:
  1198                           
  1199                           ; 4 bytes @ 0x18
  1200  0038                     	ds	4
  1201  003C                     ___flmul@temp:
  1202                           
  1203                           ; 2 bytes @ 0x1C
  1204  003C                     	ds	2
  1205  003E                     ?_fround:
  1206  003E                     ?_scale:	
  1207                           ; 4 bytes @ 0x1E
  1208                           
  1209  003E                     ?___fldiv:	
  1210                           ; 4 bytes @ 0x1E
  1211                           
  1212  003E                     ___fldiv@a:	
  1213                           ; 4 bytes @ 0x1E
  1214                           
  1215                           
  1216                           ; 4 bytes @ 0x1E
  1217  003E                     	ds	4
  1218  0042                     ??_fround:
  1219  0042                     ??_scale:	
  1220                           ; 1 bytes @ 0x22
  1221                           
  1222  0042                     ___fldiv@b:	
  1223                           ; 1 bytes @ 0x22
  1224                           
  1225                           
  1226                           ; 4 bytes @ 0x22
  1227  0042                     	ds	4
  1228  0046                     ??___fldiv:
  1229                           
  1230                           ; 1 bytes @ 0x26
  1231  0046                     	ds	3
  1232  0049                     _fround$1068:
  1233                           
  1234                           ; 4 bytes @ 0x29
  1235  0049                     	ds	2
  1236  004B                     ___fldiv@rem:
  1237                           
  1238                           ; 4 bytes @ 0x2B
  1239  004B                     	ds	1
  1240  004C                     _scale$1069:
  1241                           
  1242                           ; 4 bytes @ 0x2C
  1243  004C                     	ds	1
  1244  004D                     _fround$1067:
  1245                           
  1246                           ; 4 bytes @ 0x2D
  1247  004D                     	ds	2
  1248  004F                     ___fldiv@sign:
  1249                           
  1250                           ; 1 bytes @ 0x2F
  1251  004F                     	ds	1
  1252  0050                     scale@scl:
  1253  0050                     ___fldiv@new_exp:	
  1254                           ; 1 bytes @ 0x30
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x30
  1258  0050                     	ds	1
  1259  0051                     ?___fltol:
  1260  0051                     fround@prec:	
  1261                           ; 4 bytes @ 0x31
  1262                           
  1263  0051                     ___fltol@f1:	
  1264                           ; 1 bytes @ 0x31
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0x31
  1268  0051                     	ds	1
  1269  0052                     ?___fladd:
  1270  0052                     ___fladd@b:	
  1271                           ; 4 bytes @ 0x32
  1272                           
  1273  0052                     ___fldiv@grs:	
  1274                           ; 4 bytes @ 0x32
  1275                           
  1276                           
  1277                           ; 4 bytes @ 0x32
  1278  0052                     	ds	3
  1279  0055                     ??___fltol:
  1280                           
  1281                           ; 1 bytes @ 0x35
  1282  0055                     	ds	1
  1283  0056                     ___fldiv@bexp:
  1284  0056                     ___fladd@a:	
  1285                           ; 1 bytes @ 0x36
  1286                           
  1287                           
  1288                           ; 4 bytes @ 0x36
  1289  0056                     	ds	1
  1290  0057                     ___fldiv@aexp:
  1291                           
  1292                           ; 1 bytes @ 0x37
  1293  0057                     	ds	1
  1294  0058                     ?_mapear:
  1295                           
  1296                           ; 4 bytes @ 0x38
  1297  0058                     	ds	2
  1298  005A                     ??___fladd:
  1299  005A                     ___fltol@sign1:	
  1300                           ; 1 bytes @ 0x3A
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x3A
  1304  005A                     	ds	1
  1305  005B                     ___fltol@exp1:
  1306                           
  1307                           ; 1 bytes @ 0x3B
  1308  005B                     	ds	1
  1309  005C                     ??_mapear:
  1310                           
  1311                           ; 1 bytes @ 0x3C
  1312  005C                     	ds	4
  1313  0060                     mapear@adresval:
  1314                           
  1315                           ; 1 bytes @ 0x40
  1316  0060                     	ds	2
  1317  0062                     ___fladd@signs:
  1318                           
  1319                           ; 1 bytes @ 0x42
  1320  0062                     	ds	1
  1321  0063                     ___fladd@aexp:
  1322                           
  1323                           ; 1 bytes @ 0x43
  1324  0063                     	ds	1
  1325  0064                     ___fladd@bexp:
  1326                           
  1327                           ; 1 bytes @ 0x44
  1328  0064                     	ds	1
  1329  0065                     ___fladd@grs:
  1330                           
  1331                           ; 1 bytes @ 0x45
  1332  0065                     	ds	1
  1333  0066                     ?___flsub:
  1334  0066                     ___flsub@a:	
  1335                           ; 4 bytes @ 0x46
  1336                           
  1337                           
  1338                           ; 4 bytes @ 0x46
  1339  0066                     	ds	4
  1340  006A                     ___flsub@b:
  1341                           
  1342                           ; 4 bytes @ 0x4A
  1343  006A                     	ds	4
  1344                           
  1345                           	psect	maintext
  1346  084C                     __pmaintext:	
  1347 ;;
  1348 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1349 ;;
  1350 ;; *************** function _main *****************
  1351 ;; Defined at:
  1352 ;;		line 69 in file "lab2.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : B00/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0
  1368 ;;      Temps:          0       0       3       0       0
  1369 ;;      Totals:         0       0       3       0       0
  1370 ;;Total ram usage:        3 bytes
  1371 ;; Hardware stack levels required when called: 4
  1372 ;; This function calls:
  1373 ;;		_Lcd_Init
  1374 ;;		_Lcd_Set_Cursor
  1375 ;;		_Lcd_Write_String
  1376 ;;		_adc_c
  1377 ;;		_adc_canal
  1378 ;;		_mapear
  1379 ;;		_sprintf
  1380 ;; This function is called by:
  1381 ;;		Startup code after reset
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _main
  1387  084C                     _main:
  1388  084C                     l3645:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1391                           
  1392                           
  1393                           ;lab2.c: 72:     OSCCONbits.IRCF = 7;
  1394  084C  3070               	movlw	112
  1395  084D  1683               	bsf	3,5	;RP0=1, select bank1
  1396  084E  1303               	bcf	3,6	;RP1=0, select bank1
  1397  084F  048F               	iorwf	15,f	;volatile
  1398  0850                     l3647:
  1399                           
  1400                           ;lab2.c: 73:     OSCCONbits.SCS = 1;
  1401  0850  140F               	bsf	15,0	;volatile
  1402  0851                     l3649:
  1403                           
  1404                           ;lab2.c: 75:     ANSELH = 0;
  1405  0851  1683               	bsf	3,5	;RP0=1, select bank3
  1406  0852  1703               	bsf	3,6	;RP1=1, select bank3
  1407  0853  0189               	clrf	9	;volatile
  1408  0854                     l3651:
  1409                           
  1410                           ;lab2.c: 76:     ANSELbits.ANS0 = 1;
  1411  0854  1408               	bsf	8,0	;volatile
  1412  0855                     l3653:
  1413                           
  1414                           ;lab2.c: 77:     ANSELbits.ANS1 = 1;
  1415  0855  1488               	bsf	8,1	;volatile
  1416  0856                     l3655:
  1417                           
  1418                           ;lab2.c: 78:     TRISA = 3;
  1419  0856  3003               	movlw	3
  1420  0857  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0858  1303               	bcf	3,6	;RP1=0, select bank1
  1422  0859  0085               	movwf	5	;volatile
  1423  085A                     l3657:
  1424                           
  1425                           ;lab2.c: 79:     TRISC = 0;
  1426  085A  0187               	clrf	7	;volatile
  1427  085B                     l3659:
  1428                           
  1429                           ;lab2.c: 80:     TRISD = 0;
  1430  085B  0188               	clrf	8	;volatile
  1431  085C                     l3661:
  1432                           
  1433                           ;lab2.c: 81:     PORTA = 0;
  1434  085C  1283               	bcf	3,5	;RP0=0, select bank0
  1435  085D  1303               	bcf	3,6	;RP1=0, select bank0
  1436  085E  0185               	clrf	5	;volatile
  1437  085F                     l3663:
  1438                           
  1439                           ;lab2.c: 82:     PORTC = 0;
  1440  085F  0187               	clrf	7	;volatile
  1441  0860                     l3665:
  1442                           
  1443                           ;lab2.c: 83:     PORTD = 0;
  1444  0860  0188               	clrf	8	;volatile
  1445  0861                     l3667:
  1446                           
  1447                           ;lab2.c: 85:     adc_c();
  1448  0861  160A  158A  2266  120A  158A  	fcall	_adc_c
  1449  0866                     l3669:
  1450                           
  1451                           ;lab2.c: 86:     Lcd_Init();
  1452  0866  160A  158A  2459  120A  158A  	fcall	_Lcd_Init
  1453  086B                     l3671:
  1454                           
  1455                           ;lab2.c: 88:     INTCONbits.GIE = 1;
  1456  086B  178B               	bsf	11,7	;volatile
  1457  086C                     l3673:
  1458                           
  1459                           ;lab2.c: 89:     INTCONbits.RBIE = 1;
  1460  086C  158B               	bsf	11,3	;volatile
  1461  086D                     l3675:
  1462                           
  1463                           ;lab2.c: 90:     INTCONbits.PEIE = 1;
  1464  086D  170B               	bsf	11,6	;volatile
  1465  086E                     l3677:
  1466                           
  1467                           ;lab2.c: 91:     PIE1bits.ADIE = 1;
  1468  086E  1683               	bsf	3,5	;RP0=1, select bank1
  1469  086F  1303               	bcf	3,6	;RP1=0, select bank1
  1470  0870  170C               	bsf	12,6	;volatile
  1471  0871                     l3679:
  1472                           
  1473                           ;lab2.c: 92:     ADCON0bits.GO = 1;
  1474  0871  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0872  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0873  149F               	bsf	31,1	;volatile
  1477  0874                     l3681:
  1478                           
  1479                           ;lab2.c: 95:   { if (ADCON0bits.GO == 0) {
  1480  0874  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0875  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0876  189F               	btfsc	31,1	;volatile
  1483  0877  2879               	goto	u6151
  1484  0878  287A               	goto	u6150
  1485  0879                     u6151:
  1486  0879  2890               	goto	l3691
  1487  087A                     u6150:
  1488  087A                     l3683:
  1489                           
  1490                           ;lab2.c: 96:         s2 = adc_canal(0);
  1491  087A  3000               	movlw	0
  1492  087B  160A  158A  2272  120A  158A  	fcall	_adc_canal
  1493  0880  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0881  1303               	bcf	3,6	;RP1=0, select bank1
  1495  0882  00C9               	movwf	??_main^(0+128)
  1496  0883  0849               	movf	??_main^(0+128),w
  1497  0884  00D4               	movwf	_s2^(0+128)
  1498  0885                     l3685:
  1499                           
  1500                           ;lab2.c: 97:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  1501  0885  300C               	movlw	12
  1502  0886  1683               	bsf	3,5	;RP0=1, select bank1
  1503  0887  1303               	bcf	3,6	;RP1=0, select bank1
  1504  0888  00C9               	movwf	??_main^(0+128)
  1505  0889                     u6177:
  1506  0889  0BC9               	decfsz	??_main^(0+128),f
  1507  088A  2889               	goto	u6177
  1508  088B  0000               	nop
  1509  088C                     l3687:
  1510                           
  1511                           ;lab2.c: 98:         PIR1bits.ADIF = 0;
  1512  088C  1283               	bcf	3,5	;RP0=0, select bank0
  1513  088D  1303               	bcf	3,6	;RP1=0, select bank0
  1514  088E  130C               	bcf	12,6	;volatile
  1515  088F                     l3689:
  1516                           
  1517                           ;lab2.c: 99:         ADCON0bits.GO = 1;
  1518  088F  149F               	bsf	31,1	;volatile
  1519  0890                     l3691:
  1520                           
  1521                           ;lab2.c: 101:     Lcd_Set_Cursor(1,1);
  1522  0890  01F4               	clrf	Lcd_Set_Cursor@b
  1523  0891  0AF4               	incf	Lcd_Set_Cursor@b,f
  1524  0892  3001               	movlw	1
  1525  0893  160A  158A  22B0  120A  158A  	fcall	_Lcd_Set_Cursor
  1526  0898                     l3693:
  1527                           
  1528                           ;lab2.c: 102:     Lcd_Write_String("S1  S1  S3");
  1529  0898  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1530  0899  00F3               	movwf	Lcd_Write_String@a
  1531  089A  3080               	movlw	128
  1532  089B  00F4               	movwf	Lcd_Write_String@a+1
  1533  089C  120A  158A  200A  120A  158A  	fcall	_Lcd_Write_String
  1534  08A1                     l3695:
  1535                           
  1536                           ;lab2.c: 103:     S1 = mapear(s1);
  1537  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  1538  08A2  1303               	bcf	3,6	;RP1=0, select bank1
  1539  08A3  0855               	movf	_s1^(0+128),w
  1540  08A4  160A  158A  240A  120A  158A  	fcall	_mapear
  1541  08A9  1283               	bcf	3,5	;RP0=0, select bank0
  1542  08AA  1303               	bcf	3,6	;RP1=0, select bank0
  1543  08AB  085B               	movf	?_mapear+3,w
  1544  08AC  1683               	bsf	3,5	;RP0=1, select bank1
  1545  08AD  1303               	bcf	3,6	;RP1=0, select bank1
  1546  08AE  00D3               	movwf	(_S1+3)^(0+128)
  1547  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  1548  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  1549  08B1  085A               	movf	?_mapear+2,w
  1550  08B2  1683               	bsf	3,5	;RP0=1, select bank1
  1551  08B3  1303               	bcf	3,6	;RP1=0, select bank1
  1552  08B4  00D2               	movwf	(_S1+2)^(0+128)
  1553  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  1554  08B6  1303               	bcf	3,6	;RP1=0, select bank0
  1555  08B7  0859               	movf	?_mapear+1,w
  1556  08B8  1683               	bsf	3,5	;RP0=1, select bank1
  1557  08B9  1303               	bcf	3,6	;RP1=0, select bank1
  1558  08BA  00D1               	movwf	(_S1+1)^(0+128)
  1559  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  1560  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  1561  08BD  0858               	movf	?_mapear,w
  1562  08BE  1683               	bsf	3,5	;RP0=1, select bank1
  1563  08BF  1303               	bcf	3,6	;RP1=0, select bank1
  1564  08C0  00D0               	movwf	_S1^(0+128)
  1565  08C1                     l3697:
  1566                           
  1567                           ;lab2.c: 104:     S2 = mapear(s2);
  1568  08C1  0854               	movf	_s2^(0+128),w
  1569  08C2  160A  158A  240A  120A  158A  	fcall	_mapear
  1570  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  1571  08C8  1303               	bcf	3,6	;RP1=0, select bank0
  1572  08C9  085B               	movf	?_mapear+3,w
  1573  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  1574  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  1575  08CC  00CF               	movwf	(_S2+3)^(0+128)
  1576  08CD  1283               	bcf	3,5	;RP0=0, select bank0
  1577  08CE  1303               	bcf	3,6	;RP1=0, select bank0
  1578  08CF  085A               	movf	?_mapear+2,w
  1579  08D0  1683               	bsf	3,5	;RP0=1, select bank1
  1580  08D1  1303               	bcf	3,6	;RP1=0, select bank1
  1581  08D2  00CE               	movwf	(_S2+2)^(0+128)
  1582  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  1583  08D4  1303               	bcf	3,6	;RP1=0, select bank0
  1584  08D5  0859               	movf	?_mapear+1,w
  1585  08D6  1683               	bsf	3,5	;RP0=1, select bank1
  1586  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  1587  08D8  00CD               	movwf	(_S2+1)^(0+128)
  1588  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  1589  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  1590  08DB  0858               	movf	?_mapear,w
  1591  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  1592  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  1593  08DE  00CC               	movwf	_S2^(0+128)
  1594  08DF                     l3699:
  1595                           
  1596                           ;lab2.c: 105:     sprintf(volt, "%.2f  %.2f  %d" , S1, S2, s1);
  1597  08DF  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1598  08E0  00C9               	movwf	??_main^(0+128)
  1599  08E1  0849               	movf	??_main^(0+128),w
  1600  08E2  00A0               	movwf	sprintf@f^(0+128)
  1601  08E3  0853               	movf	(_S1+3)^(0+128),w
  1602  08E4  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1603  08E5  0852               	movf	(_S1+2)^(0+128),w
  1604  08E6  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1605  08E7  0851               	movf	(_S1+1)^(0+128),w
  1606  08E8  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1607  08E9  0850               	movf	_S1^(0+128),w
  1608  08EA  00A1               	movwf	(?_sprintf^(0+128)+1)
  1609  08EB  084F               	movf	(_S2+3)^(0+128),w
  1610  08EC  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1611  08ED  084E               	movf	(_S2+2)^(0+128),w
  1612  08EE  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1613  08EF  084D               	movf	(_S2+1)^(0+128),w
  1614  08F0  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1615  08F1  084C               	movf	_S2^(0+128),w
  1616  08F2  00A5               	movwf	(?_sprintf^(0+128)+5)
  1617  08F3  0855               	movf	_s1^(0+128),w
  1618  08F4  00CA               	movwf	(??_main+1)^(0+128)
  1619  08F5  01CB               	clrf	((??_main+1)^(0+128)+1)
  1620  08F6  084A               	movf	(??_main+1)^(0+128),w
  1621  08F7  00A9               	movwf	(?_sprintf^(0+128)+9)
  1622  08F8  084B               	movf	(??_main+2)^(0+128),w
  1623  08F9  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1624  08FA  30D6               	movlw	(low (_volt| 0))& (0+255)
  1625  08FB  120A  118A  204E  120A  158A  	fcall	_sprintf
  1626  0900                     l3701:
  1627                           
  1628                           ;lab2.c: 106:     Lcd_Set_Cursor(2,1);
  1629  0900  01F4               	clrf	Lcd_Set_Cursor@b
  1630  0901  0AF4               	incf	Lcd_Set_Cursor@b,f
  1631  0902  3002               	movlw	2
  1632  0903  160A  158A  22B0  120A  158A  	fcall	_Lcd_Set_Cursor
  1633  0908                     l3703:
  1634                           
  1635                           ;lab2.c: 107:     Lcd_Write_String(volt);
  1636  0908  30D6               	movlw	(low (_volt| 0))& (0+255)
  1637  0909  00F3               	movwf	Lcd_Write_String@a
  1638  090A  3000               	movlw	0
  1639  090B  00F4               	movwf	Lcd_Write_String@a+1
  1640  090C  120A  158A  200A  120A  158A  	fcall	_Lcd_Write_String
  1641  0911                     l3705:
  1642                           
  1643                           ;lab2.c: 108:     if (ADCON0bits.GO == 0) {
  1644  0911  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0912  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0913  189F               	btfsc	31,1	;volatile
  1647  0914  2916               	goto	u6161
  1648  0915  2917               	goto	u6160
  1649  0916                     u6161:
  1650  0916  292D               	goto	l3715
  1651  0917                     u6160:
  1652  0917                     l3707:
  1653                           
  1654                           ;lab2.c: 109:         s1 = adc_canal(1);
  1655  0917  3001               	movlw	1
  1656  0918  160A  158A  2272  120A  158A  	fcall	_adc_canal
  1657  091D  1683               	bsf	3,5	;RP0=1, select bank1
  1658  091E  1303               	bcf	3,6	;RP1=0, select bank1
  1659  091F  00C9               	movwf	??_main^(0+128)
  1660  0920  0849               	movf	??_main^(0+128),w
  1661  0921  00D5               	movwf	_s1^(0+128)
  1662  0922                     l3709:
  1663                           
  1664                           ;lab2.c: 110:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  1665  0922  300C               	movlw	12
  1666  0923  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0924  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0925  00C9               	movwf	??_main^(0+128)
  1669  0926                     u6187:
  1670  0926  0BC9               	decfsz	??_main^(0+128),f
  1671  0927  2926               	goto	u6187
  1672  0928  0000               	nop
  1673  0929                     l3711:
  1674                           
  1675                           ;lab2.c: 111:         PIR1bits.ADIF = 0;
  1676  0929  1283               	bcf	3,5	;RP0=0, select bank0
  1677  092A  1303               	bcf	3,6	;RP1=0, select bank0
  1678  092B  130C               	bcf	12,6	;volatile
  1679  092C                     l3713:
  1680                           
  1681                           ;lab2.c: 112:         ADCON0bits.GO = 1;
  1682  092C  149F               	bsf	31,1	;volatile
  1683  092D                     l3715:
  1684                           
  1685                           ;lab2.c: 114:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1686  092D  3002               	movlw	2
  1687  092E  1683               	bsf	3,5	;RP0=1, select bank1
  1688  092F  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0930  00CB               	movwf	(??_main^(0+128)+2)
  1690  0931  3004               	movlw	4
  1691  0932  00CA               	movwf	(??_main^(0+128)+1)
  1692  0933  30B9               	movlw	185
  1693  0934  00C9               	movwf	??_main^(0+128)
  1694  0935                     u6197:
  1695  0935  0BC9               	decfsz	??_main^(0+128),f
  1696  0936  2935               	goto	u6197
  1697  0937  0BCA               	decfsz	(??_main^(0+128)+1),f
  1698  0938  2935               	goto	u6197
  1699  0939  0BCB               	decfsz	(??_main^(0+128)+2),f
  1700  093A  2935               	goto	u6197
  1701  093B  293C               	nop2
  1702  093C  2874               	goto	l3681
  1703  093D  120A  118A  2800   	ljmp	start
  1704  0940                     __end_of_main:
  1705                           
  1706                           	psect	text1
  1707  004E                     __ptext1:	
  1708 ;; *************** function _sprintf *****************
  1709 ;; Defined at:
  1710 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  sp              1    wreg     PTR unsigned char 
  1713 ;;		 -> volt(16), 
  1714 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1715 ;;		 -> STR_2(15), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1718 ;;		 -> volt(16), 
  1719 ;;  fval            4   34[BANK1 ] PTR unsigned char 
  1720 ;;  val             4   29[BANK1 ] unsigned long 
  1721 ;;  tmpval          4   25[BANK1 ] struct .
  1722 ;;  prec            2   38[BANK1 ] int 
  1723 ;;  eexp            2   23[BANK1 ] int 
  1724 ;;  flag            2   21[BANK1 ] unsigned short 
  1725 ;;  cp              2    0        PTR const unsigned char 
  1726 ;;  len             2    0        unsigned int 
  1727 ;;  width           2    0        int 
  1728 ;;  c               1   40[BANK1 ] unsigned char 
  1729 ;;  ap              1   20[BANK1 ] PTR void [1]
  1730 ;;		 -> ?_sprintf(2), 
  1731 ;;  d               1    0        unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  2    0[BANK1 ] int 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0      11       0       0
  1742 ;;      Locals:         0       0      25       0       0
  1743 ;;      Temps:          0       0       5       0       0
  1744 ;;      Totals:         0       0      41       0       0
  1745 ;;Total ram usage:       41 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 3
  1748 ;; This function calls:
  1749 ;;		___awdiv
  1750 ;;		___fladd
  1751 ;;		___fleq
  1752 ;;		___flge
  1753 ;;		___flmul
  1754 ;;		___flneg
  1755 ;;		___flsub
  1756 ;;		___fltol
  1757 ;;		___lldiv
  1758 ;;		___llmod
  1759 ;;		___wmul
  1760 ;;		___xxtofl
  1761 ;;		__div_to_l_
  1762 ;;		__tdiv_to_l_
  1763 ;;		_fround
  1764 ;;		_isdigit
  1765 ;;		_scale
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _sprintf
  1773  004E                     _sprintf:
  1774                           
  1775                           ;incstack = 0
  1776                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1777                           ;sprintf@sp stored from wreg
  1778  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1779  004F  1303               	bcf	3,6	;RP1=0, select bank1
  1780  0050  00C1               	movwf	sprintf@sp^(0+128)
  1781  0051                     l3401:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1784  0051  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1785  0052  00AB               	movwf	??_sprintf^(0+128)
  1786  0053  082B               	movf	??_sprintf^(0+128),w
  1787  0054  00B4               	movwf	sprintf@ap^(0+128)
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1790  0055  2FD8               	goto	l3627
  1791  0056                     l3403:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1794  0056  3025               	movlw	37
  1795  0057  0648               	xorwf	sprintf@c^(0+128),w
  1796  0058  1903               	btfsc	3,2
  1797  0059  285B               	goto	u5741
  1798  005A  285C               	goto	u5740
  1799  005B                     u5741:
  1800  005B  2868               	goto	l3409
  1801  005C                     u5740:
  1802  005C                     l3405:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1805  005C  0848               	movf	sprintf@c^(0+128),w
  1806  005D  00AB               	movwf	??_sprintf^(0+128)
  1807  005E  0841               	movf	sprintf@sp^(0+128),w
  1808  005F  0084               	movwf	4
  1809  0060  082B               	movf	??_sprintf^(0+128),w
  1810  0061  1383               	bcf	3,7	;select IRP bank0
  1811  0062  0080               	movwf	0
  1812  0063                     l3407:
  1813  0063  3001               	movlw	1
  1814  0064  00AB               	movwf	??_sprintf^(0+128)
  1815  0065  082B               	movf	??_sprintf^(0+128),w
  1816  0066  07C1               	addwf	sprintf@sp^(0+128),f
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1819  0067  2FD8               	goto	l3627
  1820  0068                     l3409:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1823  0068  01B5               	clrf	sprintf@flag^(0+128)
  1824  0069  01B6               	clrf	(sprintf@flag+1)^(0+128)
  1825  006A                     l3411:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1828  006A  0820               	movf	sprintf@f^(0+128),w
  1829  006B  0084               	movwf	4
  1830  006C  160A  158A  200A  120A  118A  	fcall	stringdir
  1831  0071  3A2E               	xorlw	46
  1832  0072  1D03               	skipz
  1833  0073  2875               	goto	u5751
  1834  0074  2876               	goto	u5750
  1835  0075                     u5751:
  1836  0075  28BB               	goto	l3427
  1837  0076                     u5750:
  1838  0076                     l3413:
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1841  0076  1736               	bsf	(sprintf@flag^(0+128)+1),6
  1842  0077                     l3415:
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  1845  0077  3001               	movlw	1
  1846  0078  00AB               	movwf	??_sprintf^(0+128)
  1847  0079  082B               	movf	??_sprintf^(0+128),w
  1848  007A  07A0               	addwf	sprintf@f^(0+128),f
  1849  007B                     l3417:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1852  007B  01C6               	clrf	sprintf@prec^(0+128)
  1853  007C  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1856  007D  28AA               	goto	l3425
  1857  007E                     l3419:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1860  007E  300A               	movlw	10
  1861  007F  00F0               	movwf	___wmul@multiplier
  1862  0080  3000               	movlw	0
  1863  0081  00F1               	movwf	___wmul@multiplier+1
  1864  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1865  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1866  0084  0847               	movf	(sprintf@prec+1)^(0+128),w
  1867  0085  00F3               	movwf	___wmul@multiplicand+1
  1868  0086  0846               	movf	sprintf@prec^(0+128),w
  1869  0087  00F2               	movwf	___wmul@multiplicand
  1870  0088  160A  158A  22F8  120A  118A  	fcall	___wmul
  1871  008D  0871               	movf	?___wmul+1,w
  1872  008E  1683               	bsf	3,5	;RP0=1, select bank1
  1873  008F  1303               	bcf	3,6	;RP1=0, select bank1
  1874  0090  00C7               	movwf	(sprintf@prec+1)^(0+128)
  1875  0091  0870               	movf	?___wmul,w
  1876  0092  00C6               	movwf	sprintf@prec^(0+128)
  1877  0093                     l3421:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1880  0093  0820               	movf	sprintf@f^(0+128),w
  1881  0094  0084               	movwf	4
  1882  0095  160A  158A  200A  120A  118A  	fcall	stringdir
  1883  009A  3ED0               	addlw	208
  1884  009B  00AB               	movwf	??_sprintf^(0+128)
  1885  009C  30FF               	movlw	255
  1886  009D  1803               	skipnc
  1887  009E  3000               	movlw	0
  1888  009F  00AC               	movwf	(??_sprintf^(0+128)+1)
  1889  00A0  082B               	movf	??_sprintf^(0+128),w
  1890  00A1  07C6               	addwf	sprintf@prec^(0+128),f
  1891  00A2  1803               	skipnc
  1892  00A3  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  1893  00A4  082C               	movf	(??_sprintf+1)^(0+128),w
  1894  00A5  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  1895  00A6                     l3423:
  1896  00A6  3001               	movlw	1
  1897  00A7  00AB               	movwf	??_sprintf^(0+128)
  1898  00A8  082B               	movf	??_sprintf^(0+128),w
  1899  00A9  07A0               	addwf	sprintf@f^(0+128),f
  1900  00AA                     l3425:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1903  00AA  0820               	movf	sprintf@f^(0+128),w
  1904  00AB  0084               	movwf	4
  1905  00AC  160A  158A  200A  120A  118A  	fcall	stringdir
  1906  00B1  160A  118A  2003  120A  118A  	fcall	_isdigit
  1907  00B6  1803               	btfsc	3,0
  1908  00B7  28B9               	goto	u5761
  1909  00B8  28BA               	goto	u5760
  1910  00B9                     u5761:
  1911  00B9  287E               	goto	l3419
  1912  00BA                     u5760:
  1913  00BA  28C1               	goto	l3433
  1914  00BB                     l3427:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1917  00BB  01C6               	clrf	sprintf@prec^(0+128)
  1918  00BC  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1919  00BD                     l3429:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1922  00BD  1636               	bsf	(sprintf@flag^(0+128)+1),4
  1923  00BE  28C1               	goto	l3433
  1924  00BF                     l278:	
  1925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1926                           
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1929  00BF  1536               	bsf	(sprintf@flag^(0+128)+1),2
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  1932  00C0  28E3               	goto	l3435
  1933  00C1                     l3433:
  1934  00C1  3001               	movlw	1
  1935  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1936  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1937  00C4  07A0               	addwf	sprintf@f^(0+128),f
  1938  00C5  30FF               	movlw	-1
  1939  00C6  0720               	addwf	sprintf@f^(0+128),w
  1940  00C7  0084               	movwf	4
  1941  00C8  160A  158A  200A  120A  118A  	fcall	stringdir
  1942  00CD  00C8               	movwf	sprintf@c^(0+128)
  1943  00CE  00AB               	movwf	??_sprintf^(0+128)
  1944  00CF  01AC               	clrf	(??_sprintf^(0+128)+1)
  1945                           
  1946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1947                           ; Switch size 1, requested type "simple"
  1948                           ; Number of cases is 1, Range of values is 0 to 0
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte            4     3 (average)
  1952                           ; direct_byte           11     8 (fixed)
  1953                           ; jumptable            260     6 (fixed)
  1954                           ;	Chosen strategy is simple_byte
  1955  00D0  082C               	movf	(??_sprintf+1)^(0+128),w
  1956  00D1  3A00               	xorlw	0	; case 0
  1957  00D2  1903               	skipnz
  1958  00D3  28D5               	goto	l3747
  1959  00D4  2FD8               	goto	l3627
  1960  00D5                     l3747:
  1961                           
  1962                           ; Switch size 1, requested type "simple"
  1963                           ; Number of cases is 4, Range of values is 0 to 105
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; simple_byte           13     7 (average)
  1967                           ; jumptable            260     6 (fixed)
  1968                           ;	Chosen strategy is simple_byte
  1969  00D5  082B               	movf	??_sprintf^(0+128),w
  1970  00D6  3A00               	xorlw	0	; case 0
  1971  00D7  1903               	skipnz
  1972  00D8  2FEA               	goto	l3629
  1973  00D9  3A64               	xorlw	100	; case 100
  1974  00DA  1903               	skipnz
  1975  00DB  28E3               	goto	l3435
  1976  00DC  3A02               	xorlw	2	; case 102
  1977  00DD  1903               	skipnz
  1978  00DE  28BF               	goto	l278
  1979  00DF  3A0F               	xorlw	15	; case 105
  1980  00E0  1903               	skipnz
  1981  00E1  28E3               	goto	l3435
  1982  00E2  2FD8               	goto	l3627
  1983  00E3                     l3435:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1986  00E3  3000               	movlw	0
  1987  00E4  0535               	andwf	sprintf@flag^(0+128),w
  1988  00E5  00AB               	movwf	??_sprintf^(0+128)
  1989  00E6  3007               	movlw	7
  1990  00E7  0536               	andwf	(sprintf@flag+1)^(0+128),w
  1991  00E8  00AC               	movwf	(??_sprintf+1)^(0+128)
  1992  00E9  082B               	movf	??_sprintf^(0+128),w
  1993  00EA  042C               	iorwf	(??_sprintf^(0+128)+1),w
  1994  00EB  1903               	btfsc	3,2
  1995  00EC  28EE               	goto	u5771
  1996  00ED  28EF               	goto	u5770
  1997  00EE                     u5771:
  1998  00EE  2EB0               	goto	l3577
  1999  00EF                     u5770:
  2000  00EF                     l3437:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2003  00EF  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  2004  00F0  28F2               	goto	u5781
  2005  00F1  28F3               	goto	u5780
  2006  00F2                     u5781:
  2007  00F2  28F7               	goto	l3441
  2008  00F3                     u5780:
  2009  00F3                     l3439:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2012  00F3  3006               	movlw	6
  2013  00F4  00C6               	movwf	sprintf@prec^(0+128)
  2014  00F5  3000               	movlw	0
  2015  00F6  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2016  00F7                     l3441:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2019  00F7  0834               	movf	sprintf@ap^(0+128),w
  2020  00F8  0084               	movwf	4
  2021  00F9  1383               	bcf	3,7	;select IRP bank0
  2022  00FA  0800               	movf	0,w
  2023  00FB  00C2               	movwf	sprintf@fval^(0+128)
  2024  00FC  0A84               	incf	4,f
  2025  00FD  0800               	movf	0,w
  2026  00FE  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2027  00FF  0A84               	incf	4,f
  2028  0100  0800               	movf	0,w
  2029  0101  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2030  0102  0A84               	incf	4,f
  2031  0103  0800               	movf	0,w
  2032  0104  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2033  0105                     l3443:
  2034  0105  3004               	movlw	4
  2035  0106  00AB               	movwf	??_sprintf^(0+128)
  2036  0107  082B               	movf	??_sprintf^(0+128),w
  2037  0108  07B4               	addwf	sprintf@ap^(0+128),f
  2038  0109                     l3445:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2041  0109  0845               	movf	(sprintf@fval+3)^(0+128),w
  2042  010A  00F3               	movwf	___flge@ff1+3
  2043  010B  0844               	movf	(sprintf@fval+2)^(0+128),w
  2044  010C  00F2               	movwf	___flge@ff1+2
  2045  010D  0843               	movf	(sprintf@fval+1)^(0+128),w
  2046  010E  00F1               	movwf	___flge@ff1+1
  2047  010F  0842               	movf	sprintf@fval^(0+128),w
  2048  0110  00F0               	movwf	___flge@ff1
  2049  0111  3000               	movlw	0
  2050  0112  00F7               	movwf	___flge@ff2+3
  2051  0113  3000               	movlw	0
  2052  0114  00F6               	movwf	___flge@ff2+2
  2053  0115  3000               	movlw	0
  2054  0116  00F5               	movwf	___flge@ff2+1
  2055  0117  3000               	movlw	0
  2056  0118  00F4               	movwf	___flge@ff2
  2057  0119  160A  158A  26A4  120A  118A  	fcall	___flge
  2058  011E  1803               	btfsc	3,0
  2059  011F  2921               	goto	u5791
  2060  0120  2922               	goto	u5790
  2061  0121                     u5791:
  2062  0121  293F               	goto	l3451
  2063  0122                     u5790:
  2064  0122                     l3447:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2067  0122  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0123  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0124  0845               	movf	(sprintf@fval+3)^(0+128),w
  2070  0125  00F3               	movwf	___flneg@f1+3
  2071  0126  0844               	movf	(sprintf@fval+2)^(0+128),w
  2072  0127  00F2               	movwf	___flneg@f1+2
  2073  0128  0843               	movf	(sprintf@fval+1)^(0+128),w
  2074  0129  00F1               	movwf	___flneg@f1+1
  2075  012A  0842               	movf	sprintf@fval^(0+128),w
  2076  012B  00F0               	movwf	___flneg@f1
  2077  012C  160A  158A  225B  120A  118A  	fcall	___flneg
  2078  0131  0873               	movf	?___flneg+3,w
  2079  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0134  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2082  0135  0872               	movf	?___flneg+2,w
  2083  0136  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2084  0137  0871               	movf	?___flneg+1,w
  2085  0138  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2086  0139  0870               	movf	?___flneg,w
  2087  013A  00C2               	movwf	sprintf@fval^(0+128)
  2088  013B                     l3449:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2091  013B  3003               	movlw	3
  2092  013C  04B5               	iorwf	sprintf@flag^(0+128),f
  2093  013D  3000               	movlw	0
  2094  013E  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  2095  013F                     l3451:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2098  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0141  01B7               	clrf	sprintf@eexp^(0+128)
  2101  0142  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2102  0143                     l3453:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2105  0143  0845               	movf	(sprintf@fval+3)^(0+128),w
  2106  0144  00F3               	movwf	___fleq@ff1+3
  2107  0145  0844               	movf	(sprintf@fval+2)^(0+128),w
  2108  0146  00F2               	movwf	___fleq@ff1+2
  2109  0147  0843               	movf	(sprintf@fval+1)^(0+128),w
  2110  0148  00F1               	movwf	___fleq@ff1+1
  2111  0149  0842               	movf	sprintf@fval^(0+128),w
  2112  014A  00F0               	movwf	___fleq@ff1
  2113  014B  3000               	movlw	0
  2114  014C  00F7               	movwf	___fleq@ff2+3
  2115  014D  3000               	movlw	0
  2116  014E  00F6               	movwf	___fleq@ff2+2
  2117  014F  3000               	movlw	0
  2118  0150  00F5               	movwf	___fleq@ff2+1
  2119  0151  3000               	movlw	0
  2120  0152  00F4               	movwf	___fleq@ff2
  2121  0153  160A  158A  23BC  120A  118A  	fcall	___fleq
  2122  0158  1803               	btfsc	3,0
  2123  0159  295B               	goto	u5801
  2124  015A  295C               	goto	u5800
  2125  015B                     u5801:
  2126  015B  2A4C               	goto	l3479
  2127  015C                     u5800:
  2128  015C                     l3455:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2131  015C  1003               	clrc
  2132  015D  1683               	bsf	3,5	;RP0=1, select bank1
  2133  015E  1303               	bcf	3,6	;RP1=0, select bank1
  2134  015F  0D44               	rlf	(sprintf@fval+2)^(0+128),w
  2135  0160  0D45               	rlf	(sprintf@fval+3)^(0+128),w
  2136  0161  3E82               	addlw	130
  2137  0162  00B7               	movwf	sprintf@eexp^(0+128)
  2138  0163  30FF               	movlw	255
  2139  0164  1803               	skipnc
  2140  0165  3000               	movlw	0
  2141  0166  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2142  0167                     l3457:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2145  0167  30FF               	movlw	255
  2146  0168  07B7               	addwf	sprintf@eexp^(0+128),f
  2147  0169  1803               	skipnc
  2148  016A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2149  016B  30FF               	movlw	255
  2150  016C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2151  016D                     l3459:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2154  016D  3003               	movlw	3
  2155  016E  00F0               	movwf	___wmul@multiplier
  2156  016F  3000               	movlw	0
  2157  0170  00F1               	movwf	___wmul@multiplier+1
  2158  0171  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2159  0172  00F3               	movwf	___wmul@multiplicand+1
  2160  0173  0837               	movf	sprintf@eexp^(0+128),w
  2161  0174  00F2               	movwf	___wmul@multiplicand
  2162  0175  160A  158A  22F8  120A  118A  	fcall	___wmul
  2163  017A  0871               	movf	?___wmul+1,w
  2164  017B  1683               	bsf	3,5	;RP0=1, select bank1
  2165  017C  1303               	bcf	3,6	;RP1=0, select bank1
  2166  017D  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2167  017E  0870               	movf	?___wmul,w
  2168  017F  00B7               	movwf	sprintf@eexp^(0+128)
  2169  0180                     l3461:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2172  0180  300A               	movlw	10
  2173  0181  00F7               	movwf	___awdiv@divisor
  2174  0182  3000               	movlw	0
  2175  0183  00F8               	movwf	___awdiv@divisor+1
  2176  0184  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2177  0185  00FA               	movwf	___awdiv@dividend+1
  2178  0186  0837               	movf	sprintf@eexp^(0+128),w
  2179  0187  00F9               	movwf	___awdiv@dividend
  2180  0188  160A  158A  25BF  120A  118A  	fcall	___awdiv
  2181  018D  0878               	movf	?___awdiv+1,w
  2182  018E  1683               	bsf	3,5	;RP0=1, select bank1
  2183  018F  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0190  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2185  0191  0877               	movf	?___awdiv,w
  2186  0192  00B7               	movwf	sprintf@eexp^(0+128)
  2187  0193                     l3463:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2190  0193  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2191  0194  2996               	goto	u5811
  2192  0195  2997               	goto	u5810
  2193  0196                     u5811:
  2194  0196  299D               	goto	l3467
  2195  0197                     u5810:
  2196  0197                     l3465:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2199  0197  30FF               	movlw	255
  2200  0198  07B7               	addwf	sprintf@eexp^(0+128),f
  2201  0199  1803               	skipnc
  2202  019A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2203  019B  30FF               	movlw	255
  2204  019C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2205  019D                     l3467:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2208  019D  0337               	decf	sprintf@eexp^(0+128),w
  2209  019E  3AFF               	xorlw	255
  2210  019F  120A  158A  2140  120A  118A  	fcall	_scale
  2211  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2212  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2213  01A6  0841               	movf	?_scale+3,w
  2214  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2215  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2216  01A9  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2217  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2218  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2219  01AC  0840               	movf	?_scale+2,w
  2220  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2221  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2222  01AF  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2223  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2224  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2225  01B2  083F               	movf	?_scale+1,w
  2226  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2227  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2228  01B5  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2229  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2230  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2231  01B8  083E               	movf	?_scale,w
  2232  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  2233  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  2234  01BB  00B9               	movwf	sprintf@tmpval^(0+128)
  2235  01BC                     l3469:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2238  01BC  0845               	movf	(sprintf@fval+3)^(0+128),w
  2239  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2240  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2241  01BF  00A7               	movwf	___flmul@b+3
  2242  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2243  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2244  01C2  0844               	movf	(sprintf@fval+2)^(0+128),w
  2245  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2246  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2247  01C5  00A6               	movwf	___flmul@b+2
  2248  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2249  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2250  01C8  0843               	movf	(sprintf@fval+1)^(0+128),w
  2251  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2252  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2253  01CB  00A5               	movwf	___flmul@b+1
  2254  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2255  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2256  01CE  0842               	movf	sprintf@fval^(0+128),w
  2257  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2258  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2259  01D1  00A4               	movwf	___flmul@b
  2260  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2261  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2262  01D4  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2263  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2264  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2265  01D7  00AB               	movwf	___flmul@a+3
  2266  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2267  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2268  01DA  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2269  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2270  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2271  01DD  00AA               	movwf	___flmul@a+2
  2272  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2273  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2274  01E0  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2275  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2276  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2277  01E3  00A9               	movwf	___flmul@a+1
  2278  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  2279  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  2280  01E6  0839               	movf	sprintf@tmpval^(0+128),w
  2281  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2282  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2283  01E9  00A8               	movwf	___flmul@a
  2284  01EA  120A  158A  249F  120A  118A  	fcall	___flmul
  2285  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2286  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2287  01F1  0827               	movf	?___flmul+3,w
  2288  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2289  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2290  01F4  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2291  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2292  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2293  01F7  0826               	movf	?___flmul+2,w
  2294  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2295  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2296  01FA  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2297  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2298  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2299  01FD  0825               	movf	?___flmul+1,w
  2300  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2301  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0200  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2303  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0203  0824               	movf	?___flmul,w
  2306  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2308  0206  00B9               	movwf	sprintf@tmpval^(0+128)
  2309  0207                     l3471:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2312  0207  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2313  0208  00F3               	movwf	___flge@ff1+3
  2314  0209  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2315  020A  00F2               	movwf	___flge@ff1+2
  2316  020B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2317  020C  00F1               	movwf	___flge@ff1+1
  2318  020D  0839               	movf	sprintf@tmpval^(0+128),w
  2319  020E  00F0               	movwf	___flge@ff1
  2320  020F  303F               	movlw	63
  2321  0210  00F7               	movwf	___flge@ff2+3
  2322  0211  3080               	movlw	128
  2323  0212  00F6               	movwf	___flge@ff2+2
  2324  0213  3000               	movlw	0
  2325  0214  00F5               	movwf	___flge@ff2+1
  2326  0215  3000               	movlw	0
  2327  0216  00F4               	movwf	___flge@ff2
  2328  0217  160A  158A  26A4  120A  118A  	fcall	___flge
  2329  021C  1803               	btfsc	3,0
  2330  021D  2A1F               	goto	u5821
  2331  021E  2A20               	goto	u5820
  2332  021F                     u5821:
  2333  021F  2A29               	goto	l3475
  2334  0220                     u5820:
  2335  0220                     l3473:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2338  0220  30FF               	movlw	255
  2339  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2340  0222  1303               	bcf	3,6	;RP1=0, select bank1
  2341  0223  07B7               	addwf	sprintf@eexp^(0+128),f
  2342  0224  1803               	skipnc
  2343  0225  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2344  0226  30FF               	movlw	255
  2345  0227  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2346  0228  2A4C               	goto	l3479
  2347  0229                     l3475:
  2348  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2349  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2350  022B  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2351  022C  00F3               	movwf	___flge@ff1+3
  2352  022D  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2353  022E  00F2               	movwf	___flge@ff1+2
  2354  022F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2355  0230  00F1               	movwf	___flge@ff1+1
  2356  0231  0839               	movf	sprintf@tmpval^(0+128),w
  2357  0232  00F0               	movwf	___flge@ff1
  2358  0233  3041               	movlw	65
  2359  0234  00F7               	movwf	___flge@ff2+3
  2360  0235  3020               	movlw	32
  2361  0236  00F6               	movwf	___flge@ff2+2
  2362  0237  3000               	movlw	0
  2363  0238  00F5               	movwf	___flge@ff2+1
  2364  0239  3000               	movlw	0
  2365  023A  00F4               	movwf	___flge@ff2
  2366  023B  160A  158A  26A4  120A  118A  	fcall	___flge
  2367  0240  1C03               	btfss	3,0
  2368  0241  2A43               	goto	u5831
  2369  0242  2A44               	goto	u5830
  2370  0243                     u5831:
  2371  0243  2A4C               	goto	l3479
  2372  0244                     u5830:
  2373  0244                     l3477:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2376  0244  3001               	movlw	1
  2377  0245  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0246  1303               	bcf	3,6	;RP1=0, select bank1
  2379  0247  07B7               	addwf	sprintf@eexp^(0+128),f
  2380  0248  1803               	skipnc
  2381  0249  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2382  024A  3000               	movlw	0
  2383  024B  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2384  024C                     l3479:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2387  024C  1683               	bsf	3,5	;RP0=1, select bank1
  2388  024D  1303               	bcf	3,6	;RP1=0, select bank1
  2389  024E  0847               	movf	(sprintf@prec+1)^(0+128),w
  2390  024F  3A80               	xorlw	128
  2391  0250  00FF               	movwf	btemp+1
  2392  0251  3080               	movlw	128
  2393  0252  027F               	subwf	btemp+1,w
  2394  0253  1D03               	skipz
  2395  0254  2A57               	goto	u5845
  2396  0255  300D               	movlw	13
  2397  0256  0246               	subwf	sprintf@prec^(0+128),w
  2398  0257                     u5845:
  2399  0257  1803               	skipnc
  2400  0258  2A5A               	goto	u5841
  2401  0259  2A5B               	goto	u5840
  2402  025A                     u5841:
  2403  025A  2AA2               	goto	l3483
  2404  025B                     u5840:
  2405  025B                     l3481:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2408  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2409  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2410  025D  0846               	movf	sprintf@prec^(0+128),w
  2411  025E  160A  118A  236D  120A  118A  	fcall	_fround
  2412  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0265  0841               	movf	?_fround+3,w
  2415  0266  00D5               	movwf	___fladd@b+3
  2416  0267  0840               	movf	?_fround+2,w
  2417  0268  00D4               	movwf	___fladd@b+2
  2418  0269  083F               	movf	?_fround+1,w
  2419  026A  00D3               	movwf	___fladd@b+1
  2420  026B  083E               	movf	?_fround,w
  2421  026C  00D2               	movwf	___fladd@b
  2422  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2423  026E  1303               	bcf	3,6	;RP1=0, select bank1
  2424  026F  0845               	movf	(sprintf@fval+3)^(0+128),w
  2425  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0272  00D9               	movwf	___fladd@a+3
  2428  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0275  0844               	movf	(sprintf@fval+2)^(0+128),w
  2431  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0278  00D8               	movwf	___fladd@a+2
  2434  0279  1683               	bsf	3,5	;RP0=1, select bank1
  2435  027A  1303               	bcf	3,6	;RP1=0, select bank1
  2436  027B  0843               	movf	(sprintf@fval+1)^(0+128),w
  2437  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2438  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2439  027E  00D7               	movwf	___fladd@a+1
  2440  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2442  0281  0842               	movf	sprintf@fval^(0+128),w
  2443  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0284  00D6               	movwf	___fladd@a
  2446  0285  160A  118A  2578  120A  118A  	fcall	___fladd
  2447  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2448  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2449  028C  0855               	movf	?___fladd+3,w
  2450  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2451  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2452  028F  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2453  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0292  0854               	movf	?___fladd+2,w
  2456  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0294  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0295  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2459  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0298  0853               	movf	?___fladd+1,w
  2462  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2463  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2464  029B  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2465  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2466  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2467  029E  0852               	movf	?___fladd,w
  2468  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2469  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2470  02A1  00C2               	movwf	sprintf@fval^(0+128)
  2471  02A2                     l3483:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2474  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2475  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  2476  02A4  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2477  02A5  3A80               	xorlw	128
  2478  02A6  00FF               	movwf	btemp+1
  2479  02A7  3080               	movlw	128
  2480  02A8  027F               	subwf	btemp+1,w
  2481  02A9  1D03               	skipz
  2482  02AA  2AAD               	goto	u5855
  2483  02AB  300A               	movlw	10
  2484  02AC  0237               	subwf	sprintf@eexp^(0+128),w
  2485  02AD                     u5855:
  2486  02AD  1803               	skipnc
  2487  02AE  2AB0               	goto	u5851
  2488  02AF  2AB1               	goto	u5850
  2489  02B0                     u5851:
  2490  02B0  2B02               	goto	l3491
  2491  02B1                     u5850:
  2492  02B1                     l3485:
  2493  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2494  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2495  02B3  0845               	movf	(sprintf@fval+3)^(0+128),w
  2496  02B4  00F3               	movwf	___fleq@ff1+3
  2497  02B5  0844               	movf	(sprintf@fval+2)^(0+128),w
  2498  02B6  00F2               	movwf	___fleq@ff1+2
  2499  02B7  0843               	movf	(sprintf@fval+1)^(0+128),w
  2500  02B8  00F1               	movwf	___fleq@ff1+1
  2501  02B9  0842               	movf	sprintf@fval^(0+128),w
  2502  02BA  00F0               	movwf	___fleq@ff1
  2503  02BB  3000               	movlw	0
  2504  02BC  00F7               	movwf	___fleq@ff2+3
  2505  02BD  3000               	movlw	0
  2506  02BE  00F6               	movwf	___fleq@ff2+2
  2507  02BF  3000               	movlw	0
  2508  02C0  00F5               	movwf	___fleq@ff2+1
  2509  02C1  3000               	movlw	0
  2510  02C2  00F4               	movwf	___fleq@ff2
  2511  02C3  160A  158A  23BC  120A  118A  	fcall	___fleq
  2512  02C8  1803               	btfsc	3,0
  2513  02C9  2ACB               	goto	u5861
  2514  02CA  2ACC               	goto	u5860
  2515  02CB                     u5861:
  2516  02CB  2B74               	goto	l3505
  2517  02CC                     u5860:
  2518  02CC                     l3487:
  2519  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2520  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2521  02CE  0845               	movf	(sprintf@fval+3)^(0+128),w
  2522  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2523  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2524  02D1  00D4               	movwf	___fltol@f1+3
  2525  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2526  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2527  02D4  0844               	movf	(sprintf@fval+2)^(0+128),w
  2528  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2529  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2530  02D7  00D3               	movwf	___fltol@f1+2
  2531  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2532  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2533  02DA  0843               	movf	(sprintf@fval+1)^(0+128),w
  2534  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2535  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2536  02DD  00D2               	movwf	___fltol@f1+1
  2537  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2538  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2539  02E0  0842               	movf	sprintf@fval^(0+128),w
  2540  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2541  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2542  02E3  00D1               	movwf	___fltol@f1
  2543  02E4  160A  158A  2628  120A  118A  	fcall	___fltol
  2544  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2545  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2546  02EB  0854               	movf	?___fltol+3,w
  2547  02EC  0453               	iorwf	?___fltol+2,w
  2548  02ED  0452               	iorwf	?___fltol+1,w
  2549  02EE  0451               	iorwf	?___fltol,w
  2550  02EF  1D03               	skipz
  2551  02F0  2AF2               	goto	u5871
  2552  02F1  2AF3               	goto	u5870
  2553  02F2                     u5871:
  2554  02F2  2B74               	goto	l3505
  2555  02F3                     u5870:
  2556  02F3                     l3489:
  2557  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2558  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2559  02F5  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2560  02F6  3A80               	xorlw	128
  2561  02F7  00FF               	movwf	btemp+1
  2562  02F8  3080               	movlw	128
  2563  02F9  027F               	subwf	btemp+1,w
  2564  02FA  1D03               	skipz
  2565  02FB  2AFE               	goto	u5885
  2566  02FC  3002               	movlw	2
  2567  02FD  0237               	subwf	sprintf@eexp^(0+128),w
  2568  02FE                     u5885:
  2569  02FE  1C03               	skipc
  2570  02FF  2B01               	goto	u5881
  2571  0300  2B02               	goto	u5880
  2572  0301                     u5881:
  2573  0301  2B74               	goto	l3505
  2574  0302                     u5880:
  2575  0302                     l3491:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2578  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0304  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2581  0305  00F3               	movwf	___flge@ff1+3
  2582  0306  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2583  0307  00F2               	movwf	___flge@ff1+2
  2584  0308  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2585  0309  00F1               	movwf	___flge@ff1+1
  2586  030A  0839               	movf	sprintf@tmpval^(0+128),w
  2587  030B  00F0               	movwf	___flge@ff1
  2588  030C  3040               	movlw	64
  2589  030D  00F7               	movwf	___flge@ff2+3
  2590  030E  3089               	movlw	137
  2591  030F  00F6               	movwf	___flge@ff2+2
  2592  0310  3070               	movlw	112
  2593  0311  00F5               	movwf	___flge@ff2+1
  2594  0312  305F               	movlw	95
  2595  0313  00F4               	movwf	___flge@ff2
  2596  0314  160A  158A  26A4  120A  118A  	fcall	___flge
  2597  0319  1803               	btfsc	3,0
  2598  031A  2B1C               	goto	u5891
  2599  031B  2B1D               	goto	u5890
  2600  031C                     u5891:
  2601  031C  2B26               	goto	l3495
  2602  031D                     u5890:
  2603  031D                     l3493:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2606  031D  30F7               	movlw	247
  2607  031E  1683               	bsf	3,5	;RP0=1, select bank1
  2608  031F  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0320  07B7               	addwf	sprintf@eexp^(0+128),f
  2610  0321  1803               	skipnc
  2611  0322  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2612  0323  30FF               	movlw	255
  2613  0324  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2616  0325  2B2E               	goto	l3497
  2617  0326                     l3495:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2620  0326  30F8               	movlw	248
  2621  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2622  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2623  0329  07B7               	addwf	sprintf@eexp^(0+128),f
  2624  032A  1803               	skipnc
  2625  032B  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2626  032C  30FF               	movlw	255
  2627  032D  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2628  032E                     l3497:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2631  032E  0837               	movf	sprintf@eexp^(0+128),w
  2632  032F  120A  158A  2140  120A  118A  	fcall	_scale
  2633  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0336  0841               	movf	?_scale+3,w
  2636  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0339  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2639  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2640  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2641  033C  0840               	movf	?_scale+2,w
  2642  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2643  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2644  033F  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2645  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0342  083F               	movf	?_scale+1,w
  2648  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2649  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2650  0345  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2651  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0348  083E               	movf	?_scale,w
  2654  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2655  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2656  034B  00B9               	movwf	sprintf@tmpval^(0+128)
  2657  034C                     l3499:
  2658  034C  0845               	movf	(sprintf@fval+3)^(0+128),w
  2659  034D  00F3               	movwf	__div_to_l_@f1+3
  2660  034E  0844               	movf	(sprintf@fval+2)^(0+128),w
  2661  034F  00F2               	movwf	__div_to_l_@f1+2
  2662  0350  0843               	movf	(sprintf@fval+1)^(0+128),w
  2663  0351  00F1               	movwf	__div_to_l_@f1+1
  2664  0352  0842               	movf	sprintf@fval^(0+128),w
  2665  0353  00F0               	movwf	__div_to_l_@f1
  2666  0354  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2667  0355  00F7               	movwf	__div_to_l_@f2+3
  2668  0356  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2669  0357  00F6               	movwf	__div_to_l_@f2+2
  2670  0358  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2671  0359  00F5               	movwf	__div_to_l_@f2+1
  2672  035A  0839               	movf	sprintf@tmpval^(0+128),w
  2673  035B  00F4               	movwf	__div_to_l_@f2
  2674  035C  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  2675  0361  0873               	movf	?__div_to_l_+3,w
  2676  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0363  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0364  00C0               	movwf	(sprintf@val+3)^(0+128)
  2679  0365  0872               	movf	?__div_to_l_+2,w
  2680  0366  00BF               	movwf	(sprintf@val+2)^(0+128)
  2681  0367  0871               	movf	?__div_to_l_+1,w
  2682  0368  00BE               	movwf	(sprintf@val+1)^(0+128)
  2683  0369  0870               	movf	?__div_to_l_,w
  2684  036A  00BD               	movwf	sprintf@val^(0+128)
  2685  036B                     l3503:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2688  036B  3000               	movlw	0
  2689  036C  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2690  036D  3000               	movlw	0
  2691  036E  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2692  036F  3000               	movlw	0
  2693  0370  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2694  0371  3000               	movlw	0
  2695  0372  00C2               	movwf	sprintf@fval^(0+128)
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2698  0373  2BF8               	goto	l3511
  2699  0374                     l3505:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2702  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2703  0375  1303               	bcf	3,6	;RP1=0, select bank1
  2704  0376  0845               	movf	(sprintf@fval+3)^(0+128),w
  2705  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0379  00D4               	movwf	___fltol@f1+3
  2708  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2709  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2710  037C  0844               	movf	(sprintf@fval+2)^(0+128),w
  2711  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2712  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2713  037F  00D3               	movwf	___fltol@f1+2
  2714  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0382  0843               	movf	(sprintf@fval+1)^(0+128),w
  2717  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0385  00D2               	movwf	___fltol@f1+1
  2720  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2721  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2722  0388  0842               	movf	sprintf@fval^(0+128),w
  2723  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2724  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2725  038B  00D1               	movwf	___fltol@f1
  2726  038C  160A  158A  2628  120A  118A  	fcall	___fltol
  2727  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0393  0854               	movf	?___fltol+3,w
  2730  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0396  00C0               	movwf	(sprintf@val+3)^(0+128)
  2733  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0399  0853               	movf	?___fltol+2,w
  2736  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2737  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2738  039C  00BF               	movwf	(sprintf@val+2)^(0+128)
  2739  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2740  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2741  039F  0852               	movf	?___fltol+1,w
  2742  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2743  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2744  03A2  00BE               	movwf	(sprintf@val+1)^(0+128)
  2745  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2746  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2747  03A5  0851               	movf	?___fltol,w
  2748  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2749  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2750  03A8  00BD               	movwf	sprintf@val^(0+128)
  2751  03A9                     l3507:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2754  03A9  0840               	movf	(sprintf@val+3)^(0+128),w
  2755  03AA  00F3               	movwf	___xxtofl@val+3
  2756  03AB  083F               	movf	(sprintf@val+2)^(0+128),w
  2757  03AC  00F2               	movwf	___xxtofl@val+2
  2758  03AD  083E               	movf	(sprintf@val+1)^(0+128),w
  2759  03AE  00F1               	movwf	___xxtofl@val+1
  2760  03AF  083D               	movf	sprintf@val^(0+128),w
  2761  03B0  00F0               	movwf	___xxtofl@val
  2762  03B1  3000               	movlw	0
  2763  03B2  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2764  03B7  0873               	movf	?___xxtofl+3,w
  2765  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2766  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2767  03BA  00E9               	movwf	___flsub@a+3
  2768  03BB  0872               	movf	?___xxtofl+2,w
  2769  03BC  00E8               	movwf	___flsub@a+2
  2770  03BD  0871               	movf	?___xxtofl+1,w
  2771  03BE  00E7               	movwf	___flsub@a+1
  2772  03BF  0870               	movf	?___xxtofl,w
  2773  03C0  00E6               	movwf	___flsub@a
  2774  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2775  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2776  03C3  0845               	movf	(sprintf@fval+3)^(0+128),w
  2777  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2778  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2779  03C6  00ED               	movwf	___flsub@b+3
  2780  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2781  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2782  03C9  0844               	movf	(sprintf@fval+2)^(0+128),w
  2783  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2784  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2785  03CC  00EC               	movwf	___flsub@b+2
  2786  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2787  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2788  03CF  0843               	movf	(sprintf@fval+1)^(0+128),w
  2789  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2790  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2791  03D2  00EB               	movwf	___flsub@b+1
  2792  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2793  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2794  03D5  0842               	movf	sprintf@fval^(0+128),w
  2795  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2796  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2797  03D8  00EA               	movwf	___flsub@b
  2798  03D9  160A  158A  22D4  120A  118A  	fcall	___flsub
  2799  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2800  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2801  03E0  0869               	movf	?___flsub+3,w
  2802  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2803  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2804  03E3  00C5               	movwf	(sprintf@fval+3)^(0+128)
  2805  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2806  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2807  03E6  0868               	movf	?___flsub+2,w
  2808  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2809  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2810  03E9  00C4               	movwf	(sprintf@fval+2)^(0+128)
  2811  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2812  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2813  03EC  0867               	movf	?___flsub+1,w
  2814  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2815  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2816  03EF  00C3               	movwf	(sprintf@fval+1)^(0+128)
  2817  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2818  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2819  03F2  0866               	movf	?___flsub,w
  2820  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2821  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2822  03F5  00C2               	movwf	sprintf@fval^(0+128)
  2823  03F6                     l3509:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2826  03F6  01B7               	clrf	sprintf@eexp^(0+128)
  2827  03F7  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2828  03F8                     l3511:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2831  03F8  01C8               	clrf	sprintf@c^(0+128)
  2832  03F9  0AC8               	incf	sprintf@c^(0+128),f
  2833  03FA                     l3517:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2836  03FA  0848               	movf	sprintf@c^(0+128),w
  2837  03FB  00AB               	movwf	??_sprintf^(0+128)
  2838  03FC  3001               	movlw	1
  2839  03FD                     u5905:
  2840  03FD  1003               	clrc
  2841  03FE  0DAB               	rlf	??_sprintf^(0+128),f
  2842  03FF  3EFF               	addlw	-1
  2843  0400  1D03               	skipz
  2844  0401  2BFD               	goto	u5905
  2845  0402  1003               	clrc
  2846  0403  0D2B               	rlf	??_sprintf^(0+128),w
  2847  0404  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2848  0405  0084               	movwf	4
  2849  0406  160A  158A  200A  120A  118A  	fcall	stringdir
  2850  040B  00AC               	movwf	(??_sprintf+1)^(0+128)
  2851  040C  160A  158A  200A  120A  118A  	fcall	stringdir
  2852  0411  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  2853  0412  160A  158A  200A  120A  118A  	fcall	stringdir
  2854  0417  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  2855  0418  160A  158A  200A  120A  118A  	fcall	stringdir
  2856  041D  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  2857  041E  082F               	movf	(??_sprintf+4)^(0+128),w
  2858  041F  0240               	subwf	(sprintf@val+3)^(0+128),w
  2859  0420  1D03               	skipz
  2860  0421  2C2C               	goto	u5915
  2861  0422  082E               	movf	(??_sprintf+3)^(0+128),w
  2862  0423  023F               	subwf	(sprintf@val+2)^(0+128),w
  2863  0424  1D03               	skipz
  2864  0425  2C2C               	goto	u5915
  2865  0426  082D               	movf	(??_sprintf+2)^(0+128),w
  2866  0427  023E               	subwf	(sprintf@val+1)^(0+128),w
  2867  0428  1D03               	skipz
  2868  0429  2C2C               	goto	u5915
  2869  042A  082C               	movf	(??_sprintf+1)^(0+128),w
  2870  042B  023D               	subwf	sprintf@val^(0+128),w
  2871  042C                     u5915:
  2872  042C  1803               	skipnc
  2873  042D  2C2F               	goto	u5911
  2874  042E  2C30               	goto	u5910
  2875  042F                     u5911:
  2876  042F  2C31               	goto	l3521
  2877  0430                     u5910:
  2878  0430  2C3B               	goto	l3523
  2879  0431                     l3521:
  2880  0431  3001               	movlw	1
  2881  0432  00AB               	movwf	??_sprintf^(0+128)
  2882  0433  082B               	movf	??_sprintf^(0+128),w
  2883  0434  07C8               	addwf	sprintf@c^(0+128),f
  2884  0435  300A               	movlw	10
  2885  0436  0648               	xorwf	sprintf@c^(0+128),w
  2886  0437  1D03               	btfss	3,2
  2887  0438  2C3A               	goto	u5921
  2888  0439  2C3B               	goto	u5920
  2889  043A                     u5921:
  2890  043A  2BFA               	goto	l3517
  2891  043B                     u5920:
  2892  043B                     l3523:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2895  043B  3003               	movlw	3
  2896  043C  0535               	andwf	sprintf@flag^(0+128),w
  2897  043D  00AB               	movwf	??_sprintf^(0+128)
  2898  043E  3000               	movlw	0
  2899  043F  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2900  0440  00AC               	movwf	(??_sprintf+1)^(0+128)
  2901  0441  082B               	movf	??_sprintf^(0+128),w
  2902  0442  042C               	iorwf	(??_sprintf^(0+128)+1),w
  2903  0443  1903               	btfsc	3,2
  2904  0444  2C46               	goto	u5931
  2905  0445  2C47               	goto	u5930
  2906  0446                     u5931:
  2907  0446  2CD9               	goto	l306
  2908  0447                     u5930:
  2909  0447                     l3525:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2912  0447  302D               	movlw	45
  2913  0448  00AB               	movwf	??_sprintf^(0+128)
  2914  0449  0841               	movf	sprintf@sp^(0+128),w
  2915  044A  0084               	movwf	4
  2916  044B  082B               	movf	??_sprintf^(0+128),w
  2917  044C  1383               	bcf	3,7	;select IRP bank0
  2918  044D  0080               	movwf	0
  2919  044E                     l3527:
  2920  044E  3001               	movlw	1
  2921  044F  00AB               	movwf	??_sprintf^(0+128)
  2922  0450  082B               	movf	??_sprintf^(0+128),w
  2923  0451  07C1               	addwf	sprintf@sp^(0+128),f
  2924  0452  2CD9               	goto	l306
  2925  0453                     l3529:
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2928  0453  0848               	movf	sprintf@c^(0+128),w
  2929  0454  00AB               	movwf	??_sprintf^(0+128)
  2930  0455  3001               	movlw	1
  2931  0456                     u5945:
  2932  0456  1003               	clrc
  2933  0457  0DAB               	rlf	??_sprintf^(0+128),f
  2934  0458  3EFF               	addlw	-1
  2935  0459  1D03               	skipz
  2936  045A  2C56               	goto	u5945
  2937  045B  1003               	clrc
  2938  045C  0D2B               	rlf	??_sprintf^(0+128),w
  2939  045D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2940  045E  0084               	movwf	4
  2941  045F  160A  158A  200A  120A  118A  	fcall	stringdir
  2942  0464  00F0               	movwf	___lldiv@divisor
  2943  0465  160A  158A  200A  120A  118A  	fcall	stringdir
  2944  046A  00F1               	movwf	___lldiv@divisor+1
  2945  046B  160A  158A  200A  120A  118A  	fcall	stringdir
  2946  0470  00F2               	movwf	___lldiv@divisor+2
  2947  0471  160A  158A  200A  120A  118A  	fcall	stringdir
  2948  0476  00F3               	movwf	___lldiv@divisor+3
  2949  0477  0840               	movf	(sprintf@val+3)^(0+128),w
  2950  0478  00F7               	movwf	___lldiv@dividend+3
  2951  0479  083F               	movf	(sprintf@val+2)^(0+128),w
  2952  047A  00F6               	movwf	___lldiv@dividend+2
  2953  047B  083E               	movf	(sprintf@val+1)^(0+128),w
  2954  047C  00F5               	movwf	___lldiv@dividend+1
  2955  047D  083D               	movf	sprintf@val^(0+128),w
  2956  047E  00F4               	movwf	___lldiv@dividend
  2957  047F  160A  158A  2559  120A  118A  	fcall	___lldiv
  2958  0484  0873               	movf	?___lldiv+3,w
  2959  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2960  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2961  0487  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2962  0488  0872               	movf	?___lldiv+2,w
  2963  0489  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2964  048A  0871               	movf	?___lldiv+1,w
  2965  048B  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2966  048C  0870               	movf	?___lldiv,w
  2967  048D  00B9               	movwf	sprintf@tmpval^(0+128)
  2968  048E                     l3531:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2971  048E  3000               	movlw	0
  2972  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0491  00A3               	movwf	___llmod@divisor+3
  2975  0492  3000               	movlw	0
  2976  0493  00A2               	movwf	___llmod@divisor+2
  2977  0494  3000               	movlw	0
  2978  0495  00A1               	movwf	___llmod@divisor+1
  2979  0496  300A               	movlw	10
  2980  0497  00A0               	movwf	___llmod@divisor
  2981  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2982  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2983  049A  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2984  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2985  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2986  049D  00A7               	movwf	___llmod@dividend+3
  2987  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2988  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2989  04A0  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2990  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2991  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2992  04A3  00A6               	movwf	___llmod@dividend+2
  2993  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2994  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2995  04A6  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2996  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2997  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2998  04A9  00A5               	movwf	___llmod@dividend+1
  2999  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  3000  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  3001  04AC  0839               	movf	sprintf@tmpval^(0+128),w
  3002  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3003  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3004  04AF  00A4               	movwf	___llmod@dividend
  3005  04B0  160A  158A  24AA  120A  118A  	fcall	___llmod
  3006  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  3007  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  3008  04B7  0823               	movf	?___llmod+3,w
  3009  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  3010  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  3011  04BA  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3012  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  3013  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  3014  04BD  0822               	movf	?___llmod+2,w
  3015  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  3016  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  3017  04C0  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3018  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  3019  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  3020  04C3  0821               	movf	?___llmod+1,w
  3021  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  3022  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  3023  04C6  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3024  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3025  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3026  04C9  0820               	movf	?___llmod,w
  3027  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  3028  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  3029  04CC  00B9               	movwf	sprintf@tmpval^(0+128)
  3030  04CD                     l3533:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3033  04CD  0839               	movf	sprintf@tmpval^(0+128),w
  3034  04CE  3E30               	addlw	48
  3035  04CF  00AB               	movwf	??_sprintf^(0+128)
  3036  04D0  0841               	movf	sprintf@sp^(0+128),w
  3037  04D1  0084               	movwf	4
  3038  04D2  082B               	movf	??_sprintf^(0+128),w
  3039  04D3  1383               	bcf	3,7	;select IRP bank0
  3040  04D4  0080               	movwf	0
  3041  04D5  3001               	movlw	1
  3042  04D6  00AB               	movwf	??_sprintf^(0+128)
  3043  04D7  082B               	movf	??_sprintf^(0+128),w
  3044  04D8  07C1               	addwf	sprintf@sp^(0+128),f
  3045  04D9                     l306:	
  3046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
  3047                           
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3050  04D9  3001               	movlw	1
  3051  04DA  02C8               	subwf	sprintf@c^(0+128),f
  3052  04DB  0A48               	incf	sprintf@c^(0+128),w
  3053  04DC  1D03               	btfss	3,2
  3054  04DD  2CDF               	goto	u5951
  3055  04DE  2CE0               	goto	u5950
  3056  04DF                     u5951:
  3057  04DF  2C53               	goto	l3529
  3058  04E0                     u5950:
  3059  04E0  2CF4               	goto	l3541
  3060  04E1                     l3535:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3063  04E1  3030               	movlw	48
  3064  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3065  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  3066  04E4  00AB               	movwf	??_sprintf^(0+128)
  3067  04E5  0841               	movf	sprintf@sp^(0+128),w
  3068  04E6  0084               	movwf	4
  3069  04E7  082B               	movf	??_sprintf^(0+128),w
  3070  04E8  1383               	bcf	3,7	;select IRP bank0
  3071  04E9  0080               	movwf	0
  3072  04EA                     l3537:
  3073  04EA  3001               	movlw	1
  3074  04EB  00AB               	movwf	??_sprintf^(0+128)
  3075  04EC  082B               	movf	??_sprintf^(0+128),w
  3076  04ED  07C1               	addwf	sprintf@sp^(0+128),f
  3077  04EE                     l3539:
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3080  04EE  30FF               	movlw	255
  3081  04EF  07B7               	addwf	sprintf@eexp^(0+128),f
  3082  04F0  1803               	skipnc
  3083  04F1  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3084  04F2  30FF               	movlw	255
  3085  04F3  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3086  04F4                     l3541:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3089  04F4  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3090  04F5  3A80               	xorlw	128
  3091  04F6  00FF               	movwf	btemp+1
  3092  04F7  3080               	movlw	128
  3093  04F8  027F               	subwf	btemp+1,w
  3094  04F9  1D03               	skipz
  3095  04FA  2CFD               	goto	u5965
  3096  04FB  3001               	movlw	1
  3097  04FC  0237               	subwf	sprintf@eexp^(0+128),w
  3098  04FD                     u5965:
  3099  04FD  1803               	skipnc
  3100  04FE  2D00               	goto	u5961
  3101  04FF  2D01               	goto	u5960
  3102  0500                     u5961:
  3103  0500  2CE1               	goto	l3535
  3104  0501                     u5960:
  3105  0501                     l3543:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3108  0501  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0502  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0503  0847               	movf	(sprintf@prec+1)^(0+128),w
  3111  0504  3A80               	xorlw	128
  3112  0505  00FF               	movwf	btemp+1
  3113  0506  3080               	movlw	128
  3114  0507  027F               	subwf	btemp+1,w
  3115  0508  1D03               	skipz
  3116  0509  2D0C               	goto	u5975
  3117  050A  3009               	movlw	9
  3118  050B  0246               	subwf	sprintf@prec^(0+128),w
  3119  050C                     u5975:
  3120  050C  1C03               	skipc
  3121  050D  2D0F               	goto	u5971
  3122  050E  2D10               	goto	u5970
  3123  050F                     u5971:
  3124  050F  2D17               	goto	l3547
  3125  0510                     u5970:
  3126  0510                     l3545:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3129  0510  3008               	movlw	8
  3130  0511  1683               	bsf	3,5	;RP0=1, select bank1
  3131  0512  1303               	bcf	3,6	;RP1=0, select bank1
  3132  0513  00AB               	movwf	??_sprintf^(0+128)
  3133  0514  082B               	movf	??_sprintf^(0+128),w
  3134  0515  00C8               	movwf	sprintf@c^(0+128)
  3135  0516  2D1D               	goto	l313
  3136  0517                     l3547:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3139  0517  1683               	bsf	3,5	;RP0=1, select bank1
  3140  0518  1303               	bcf	3,6	;RP1=0, select bank1
  3141  0519  0846               	movf	sprintf@prec^(0+128),w
  3142  051A  00AB               	movwf	??_sprintf^(0+128)
  3143  051B  082B               	movf	??_sprintf^(0+128),w
  3144  051C  00C8               	movwf	sprintf@c^(0+128)
  3145  051D                     l313:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3148  051D  0848               	movf	sprintf@c^(0+128),w
  3149  051E  00AB               	movwf	??_sprintf^(0+128)
  3150  051F  01AC               	clrf	(??_sprintf^(0+128)+1)
  3151  0520  082B               	movf	??_sprintf^(0+128),w
  3152  0521  02C6               	subwf	sprintf@prec^(0+128),f
  3153  0522  082C               	movf	(??_sprintf+1)^(0+128),w
  3154  0523  1C03               	skipc
  3155  0524  03C7               	decf	(sprintf@prec+1)^(0+128),f
  3156  0525  02C7               	subwf	(sprintf@prec+1)^(0+128),f
  3157  0526                     l3549:
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3160  0526  0848               	movf	sprintf@c^(0+128),w
  3161  0527  1903               	btfsc	3,2
  3162  0528  2D2A               	goto	u5981
  3163  0529  2D2B               	goto	u5980
  3164  052A                     u5981:
  3165  052A  2D36               	goto	l3555
  3166  052B                     u5980:
  3167  052B                     l3551:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3170  052B  302E               	movlw	46
  3171  052C  00AB               	movwf	??_sprintf^(0+128)
  3172  052D  0841               	movf	sprintf@sp^(0+128),w
  3173  052E  0084               	movwf	4
  3174  052F  082B               	movf	??_sprintf^(0+128),w
  3175  0530  1383               	bcf	3,7	;select IRP bank0
  3176  0531  0080               	movwf	0
  3177  0532                     l3553:
  3178  0532  3001               	movlw	1
  3179  0533  00AB               	movwf	??_sprintf^(0+128)
  3180  0534  082B               	movf	??_sprintf^(0+128),w
  3181  0535  07C1               	addwf	sprintf@sp^(0+128),f
  3182  0536                     l3555:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3185  0536  0848               	movf	sprintf@c^(0+128),w
  3186  0537  120A  158A  2140  120A  118A  	fcall	_scale
  3187  053C  1283               	bcf	3,5	;RP0=0, select bank0
  3188  053D  1303               	bcf	3,6	;RP1=0, select bank0
  3189  053E  0841               	movf	?_scale+3,w
  3190  053F  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0540  1303               	bcf	3,6	;RP1=0, select bank1
  3192  0541  00B3               	movwf	(_sprintf$1070+3)^(0+128)
  3193  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0544  0840               	movf	?_scale+2,w
  3196  0545  1683               	bsf	3,5	;RP0=1, select bank1
  3197  0546  1303               	bcf	3,6	;RP1=0, select bank1
  3198  0547  00B2               	movwf	(_sprintf$1070+2)^(0+128)
  3199  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3201  054A  083F               	movf	?_scale+1,w
  3202  054B  1683               	bsf	3,5	;RP0=1, select bank1
  3203  054C  1303               	bcf	3,6	;RP1=0, select bank1
  3204  054D  00B1               	movwf	(_sprintf$1070+1)^(0+128)
  3205  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3206  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0550  083E               	movf	?_scale,w
  3208  0551  1683               	bsf	3,5	;RP0=1, select bank1
  3209  0552  1303               	bcf	3,6	;RP1=0, select bank1
  3210  0553  00B0               	movwf	_sprintf$1070^(0+128)
  3211  0554                     l3557:
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3214  0554  0833               	movf	(_sprintf$1070+3)^(0+128),w
  3215  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0556  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0557  00AB               	movwf	___flmul@a+3
  3218  0558  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0559  1303               	bcf	3,6	;RP1=0, select bank1
  3220  055A  0832               	movf	(_sprintf$1070+2)^(0+128),w
  3221  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3222  055C  1303               	bcf	3,6	;RP1=0, select bank0
  3223  055D  00AA               	movwf	___flmul@a+2
  3224  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3225  055F  1303               	bcf	3,6	;RP1=0, select bank1
  3226  0560  0831               	movf	(_sprintf$1070+1)^(0+128),w
  3227  0561  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0562  1303               	bcf	3,6	;RP1=0, select bank0
  3229  0563  00A9               	movwf	___flmul@a+1
  3230  0564  1683               	bsf	3,5	;RP0=1, select bank1
  3231  0565  1303               	bcf	3,6	;RP1=0, select bank1
  3232  0566  0830               	movf	_sprintf$1070^(0+128),w
  3233  0567  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0568  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0569  00A8               	movwf	___flmul@a
  3236  056A  1683               	bsf	3,5	;RP0=1, select bank1
  3237  056B  1303               	bcf	3,6	;RP1=0, select bank1
  3238  056C  0845               	movf	(sprintf@fval+3)^(0+128),w
  3239  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3240  056E  1303               	bcf	3,6	;RP1=0, select bank0
  3241  056F  00A7               	movwf	___flmul@b+3
  3242  0570  1683               	bsf	3,5	;RP0=1, select bank1
  3243  0571  1303               	bcf	3,6	;RP1=0, select bank1
  3244  0572  0844               	movf	(sprintf@fval+2)^(0+128),w
  3245  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0575  00A6               	movwf	___flmul@b+2
  3248  0576  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0577  1303               	bcf	3,6	;RP1=0, select bank1
  3250  0578  0843               	movf	(sprintf@fval+1)^(0+128),w
  3251  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3252  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3253  057B  00A5               	movwf	___flmul@b+1
  3254  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3255  057D  1303               	bcf	3,6	;RP1=0, select bank1
  3256  057E  0842               	movf	sprintf@fval^(0+128),w
  3257  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0581  00A4               	movwf	___flmul@b
  3260  0582  120A  158A  249F  120A  118A  	fcall	___flmul
  3261  0587  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0588  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0589  0827               	movf	?___flmul+3,w
  3264  058A  00D4               	movwf	___fltol@f1+3
  3265  058B  0826               	movf	?___flmul+2,w
  3266  058C  00D3               	movwf	___fltol@f1+2
  3267  058D  0825               	movf	?___flmul+1,w
  3268  058E  00D2               	movwf	___fltol@f1+1
  3269  058F  0824               	movf	?___flmul,w
  3270  0590  00D1               	movwf	___fltol@f1
  3271  0591  160A  158A  2628  120A  118A  	fcall	___fltol
  3272  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0597  1303               	bcf	3,6	;RP1=0, select bank0
  3274  0598  0854               	movf	?___fltol+3,w
  3275  0599  1683               	bsf	3,5	;RP0=1, select bank1
  3276  059A  1303               	bcf	3,6	;RP1=0, select bank1
  3277  059B  00C0               	movwf	(sprintf@val+3)^(0+128)
  3278  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3279  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3280  059E  0853               	movf	?___fltol+2,w
  3281  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3282  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  3283  05A1  00BF               	movwf	(sprintf@val+2)^(0+128)
  3284  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3285  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3286  05A4  0852               	movf	?___fltol+1,w
  3287  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  3288  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  3289  05A7  00BE               	movwf	(sprintf@val+1)^(0+128)
  3290  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3291  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3292  05AA  0851               	movf	?___fltol,w
  3293  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3294  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3295  05AD  00BD               	movwf	sprintf@val^(0+128)
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3298  05AE  2E90               	goto	l3567
  3299  05AF                     l3559:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3302  05AF  0848               	movf	sprintf@c^(0+128),w
  3303  05B0  00AB               	movwf	??_sprintf^(0+128)
  3304  05B1  3001               	movlw	1
  3305  05B2                     u5995:
  3306  05B2  1003               	clrc
  3307  05B3  0DAB               	rlf	??_sprintf^(0+128),f
  3308  05B4  3EFF               	addlw	-1
  3309  05B5  1D03               	skipz
  3310  05B6  2DB2               	goto	u5995
  3311  05B7  1003               	clrc
  3312  05B8  0D2B               	rlf	??_sprintf^(0+128),w
  3313  05B9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3314  05BA  0084               	movwf	4
  3315  05BB  160A  158A  200A  120A  118A  	fcall	stringdir
  3316  05C0  00F0               	movwf	___lldiv@divisor
  3317  05C1  160A  158A  200A  120A  118A  	fcall	stringdir
  3318  05C6  00F1               	movwf	___lldiv@divisor+1
  3319  05C7  160A  158A  200A  120A  118A  	fcall	stringdir
  3320  05CC  00F2               	movwf	___lldiv@divisor+2
  3321  05CD  160A  158A  200A  120A  118A  	fcall	stringdir
  3322  05D2  00F3               	movwf	___lldiv@divisor+3
  3323  05D3  0840               	movf	(sprintf@val+3)^(0+128),w
  3324  05D4  00F7               	movwf	___lldiv@dividend+3
  3325  05D5  083F               	movf	(sprintf@val+2)^(0+128),w
  3326  05D6  00F6               	movwf	___lldiv@dividend+2
  3327  05D7  083E               	movf	(sprintf@val+1)^(0+128),w
  3328  05D8  00F5               	movwf	___lldiv@dividend+1
  3329  05D9  083D               	movf	sprintf@val^(0+128),w
  3330  05DA  00F4               	movwf	___lldiv@dividend
  3331  05DB  160A  158A  2559  120A  118A  	fcall	___lldiv
  3332  05E0  0873               	movf	?___lldiv+3,w
  3333  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3334  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  3335  05E3  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3336  05E4  0872               	movf	?___lldiv+2,w
  3337  05E5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3338  05E6  0871               	movf	?___lldiv+1,w
  3339  05E7  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3340  05E8  0870               	movf	?___lldiv,w
  3341  05E9  00B9               	movwf	sprintf@tmpval^(0+128)
  3342  05EA                     l3561:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3345  05EA  3000               	movlw	0
  3346  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3347  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3348  05ED  00A3               	movwf	___llmod@divisor+3
  3349  05EE  3000               	movlw	0
  3350  05EF  00A2               	movwf	___llmod@divisor+2
  3351  05F0  3000               	movlw	0
  3352  05F1  00A1               	movwf	___llmod@divisor+1
  3353  05F2  300A               	movlw	10
  3354  05F3  00A0               	movwf	___llmod@divisor
  3355  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3356  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3357  05F6  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3358  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3359  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3360  05F9  00A7               	movwf	___llmod@dividend+3
  3361  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3362  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3363  05FC  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3364  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3365  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3366  05FF  00A6               	movwf	___llmod@dividend+2
  3367  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3369  0602  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3370  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0605  00A5               	movwf	___llmod@dividend+1
  3373  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3375  0608  0839               	movf	sprintf@tmpval^(0+128),w
  3376  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3377  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3378  060B  00A4               	movwf	___llmod@dividend
  3379  060C  160A  158A  24AA  120A  118A  	fcall	___llmod
  3380  0611  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0612  1303               	bcf	3,6	;RP1=0, select bank0
  3382  0613  0823               	movf	?___llmod+3,w
  3383  0614  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0615  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0616  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3386  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0618  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0619  0822               	movf	?___llmod+2,w
  3389  061A  1683               	bsf	3,5	;RP0=1, select bank1
  3390  061B  1303               	bcf	3,6	;RP1=0, select bank1
  3391  061C  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3392  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3393  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3394  061F  0821               	movf	?___llmod+1,w
  3395  0620  1683               	bsf	3,5	;RP0=1, select bank1
  3396  0621  1303               	bcf	3,6	;RP1=0, select bank1
  3397  0622  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3398  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0625  0820               	movf	?___llmod,w
  3401  0626  1683               	bsf	3,5	;RP0=1, select bank1
  3402  0627  1303               	bcf	3,6	;RP1=0, select bank1
  3403  0628  00B9               	movwf	sprintf@tmpval^(0+128)
  3404  0629                     l3563:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3407  0629  0839               	movf	sprintf@tmpval^(0+128),w
  3408  062A  3E30               	addlw	48
  3409  062B  00AB               	movwf	??_sprintf^(0+128)
  3410  062C  0841               	movf	sprintf@sp^(0+128),w
  3411  062D  0084               	movwf	4
  3412  062E  082B               	movf	??_sprintf^(0+128),w
  3413  062F  1383               	bcf	3,7	;select IRP bank0
  3414  0630  0080               	movwf	0
  3415  0631  3001               	movlw	1
  3416  0632  00AB               	movwf	??_sprintf^(0+128)
  3417  0633  082B               	movf	??_sprintf^(0+128),w
  3418  0634  07C1               	addwf	sprintf@sp^(0+128),f
  3419  0635                     l3565:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3422  0635  0848               	movf	sprintf@c^(0+128),w
  3423  0636  00AB               	movwf	??_sprintf^(0+128)
  3424  0637  3001               	movlw	1
  3425  0638                     u6005:
  3426  0638  1003               	clrc
  3427  0639  0DAB               	rlf	??_sprintf^(0+128),f
  3428  063A  3EFF               	addlw	-1
  3429  063B  1D03               	skipz
  3430  063C  2E38               	goto	u6005
  3431  063D  1003               	clrc
  3432  063E  0D2B               	rlf	??_sprintf^(0+128),w
  3433  063F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3434  0640  0084               	movwf	4
  3435  0641  160A  158A  200A  120A  118A  	fcall	stringdir
  3436  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0648  00A0               	movwf	___llmod@divisor
  3439  0649  160A  158A  200A  120A  118A  	fcall	stringdir
  3440  064E  00A1               	movwf	___llmod@divisor+1
  3441  064F  160A  158A  200A  120A  118A  	fcall	stringdir
  3442  0654  00A2               	movwf	___llmod@divisor+2
  3443  0655  160A  158A  200A  120A  118A  	fcall	stringdir
  3444  065A  00A3               	movwf	___llmod@divisor+3
  3445  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3446  065C  1303               	bcf	3,6	;RP1=0, select bank1
  3447  065D  0840               	movf	(sprintf@val+3)^(0+128),w
  3448  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3449  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3450  0660  00A7               	movwf	___llmod@dividend+3
  3451  0661  1683               	bsf	3,5	;RP0=1, select bank1
  3452  0662  1303               	bcf	3,6	;RP1=0, select bank1
  3453  0663  083F               	movf	(sprintf@val+2)^(0+128),w
  3454  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3455  0665  1303               	bcf	3,6	;RP1=0, select bank0
  3456  0666  00A6               	movwf	___llmod@dividend+2
  3457  0667  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0668  1303               	bcf	3,6	;RP1=0, select bank1
  3459  0669  083E               	movf	(sprintf@val+1)^(0+128),w
  3460  066A  1283               	bcf	3,5	;RP0=0, select bank0
  3461  066B  1303               	bcf	3,6	;RP1=0, select bank0
  3462  066C  00A5               	movwf	___llmod@dividend+1
  3463  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3464  066E  1303               	bcf	3,6	;RP1=0, select bank1
  3465  066F  083D               	movf	sprintf@val^(0+128),w
  3466  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0671  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0672  00A4               	movwf	___llmod@dividend
  3469  0673  160A  158A  24AA  120A  118A  	fcall	___llmod
  3470  0678  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0679  1303               	bcf	3,6	;RP1=0, select bank0
  3472  067A  0823               	movf	?___llmod+3,w
  3473  067B  1683               	bsf	3,5	;RP0=1, select bank1
  3474  067C  1303               	bcf	3,6	;RP1=0, select bank1
  3475  067D  00C0               	movwf	(sprintf@val+3)^(0+128)
  3476  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3477  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0680  0822               	movf	?___llmod+2,w
  3479  0681  1683               	bsf	3,5	;RP0=1, select bank1
  3480  0682  1303               	bcf	3,6	;RP1=0, select bank1
  3481  0683  00BF               	movwf	(sprintf@val+2)^(0+128)
  3482  0684  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0685  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0686  0821               	movf	?___llmod+1,w
  3485  0687  1683               	bsf	3,5	;RP0=1, select bank1
  3486  0688  1303               	bcf	3,6	;RP1=0, select bank1
  3487  0689  00BE               	movwf	(sprintf@val+1)^(0+128)
  3488  068A  1283               	bcf	3,5	;RP0=0, select bank0
  3489  068B  1303               	bcf	3,6	;RP1=0, select bank0
  3490  068C  0820               	movf	?___llmod,w
  3491  068D  1683               	bsf	3,5	;RP0=1, select bank1
  3492  068E  1303               	bcf	3,6	;RP1=0, select bank1
  3493  068F  00BD               	movwf	sprintf@val^(0+128)
  3494  0690                     l3567:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3497  0690  3001               	movlw	1
  3498  0691  02C8               	subwf	sprintf@c^(0+128),f
  3499  0692  0A48               	incf	sprintf@c^(0+128),w
  3500  0693  1D03               	btfss	3,2
  3501  0694  2E96               	goto	u6011
  3502  0695  2E97               	goto	u6010
  3503  0696                     u6011:
  3504  0696  2DAF               	goto	l3559
  3505  0697                     u6010:
  3506  0697  2EA9               	goto	l3575
  3507  0698                     l3569:
  3508                           
  3509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3510  0698  3030               	movlw	48
  3511  0699  00AB               	movwf	??_sprintf^(0+128)
  3512  069A  0841               	movf	sprintf@sp^(0+128),w
  3513  069B  0084               	movwf	4
  3514  069C  082B               	movf	??_sprintf^(0+128),w
  3515  069D  1383               	bcf	3,7	;select IRP bank0
  3516  069E  0080               	movwf	0
  3517  069F                     l3571:
  3518  069F  3001               	movlw	1
  3519  06A0  00AB               	movwf	??_sprintf^(0+128)
  3520  06A1  082B               	movf	??_sprintf^(0+128),w
  3521  06A2  07C1               	addwf	sprintf@sp^(0+128),f
  3522  06A3                     l3573:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3525  06A3  30FF               	movlw	255
  3526  06A4  07C6               	addwf	sprintf@prec^(0+128),f
  3527  06A5  1803               	skipnc
  3528  06A6  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3529  06A7  30FF               	movlw	255
  3530  06A8  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3531  06A9                     l3575:
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3534  06A9  0846               	movf	sprintf@prec^(0+128),w
  3535  06AA  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3536  06AB  1D03               	btfss	3,2
  3537  06AC  2EAE               	goto	u6021
  3538  06AD  2EAF               	goto	u6020
  3539  06AE                     u6021:
  3540  06AE  2E98               	goto	l3569
  3541  06AF                     u6020:
  3542  06AF  2FD8               	goto	l3627
  3543  06B0                     l3577:
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3546  06B0  0834               	movf	sprintf@ap^(0+128),w
  3547  06B1  0084               	movwf	4
  3548  06B2  1383               	bcf	3,7	;select IRP bank0
  3549  06B3  0800               	movf	0,w
  3550  06B4  00AB               	movwf	??_sprintf^(0+128)
  3551  06B5  0A84               	incf	4,f
  3552  06B6  0800               	movf	0,w
  3553  06B7  00AC               	movwf	(??_sprintf^(0+128)+1)
  3554  06B8  082B               	movf	??_sprintf^(0+128),w
  3555  06B9  00BD               	movwf	sprintf@val^(0+128)
  3556  06BA  082C               	movf	(??_sprintf+1)^(0+128),w
  3557  06BB  00BE               	movwf	(sprintf@val+1)^(0+128)
  3558  06BC  3000               	movlw	0
  3559  06BD  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
  3560  06BE  30FF               	movlw	255
  3561  06BF  00BF               	movwf	(sprintf@val+2)^(0+128)
  3562  06C0  00C0               	movwf	(sprintf@val+3)^(0+128)
  3563  06C1                     l3579:
  3564  06C1  3002               	movlw	2
  3565  06C2  00AB               	movwf	??_sprintf^(0+128)
  3566  06C3  082B               	movf	??_sprintf^(0+128),w
  3567  06C4  07B4               	addwf	sprintf@ap^(0+128),f
  3568  06C5                     l3581:
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3571  06C5  1FC0               	btfss	(sprintf@val+3)^(0+128),7
  3572  06C6  2EC8               	goto	u6031
  3573  06C7  2EC9               	goto	u6030
  3574  06C8                     u6031:
  3575  06C8  2ED8               	goto	l3587
  3576  06C9                     u6030:
  3577  06C9                     l3583:
  3578                           
  3579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3580  06C9  3003               	movlw	3
  3581  06CA  04B5               	iorwf	sprintf@flag^(0+128),f
  3582  06CB  3000               	movlw	0
  3583  06CC  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  3584  06CD                     l3585:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3587  06CD  09BD               	comf	sprintf@val^(0+128),f
  3588  06CE  09BE               	comf	(sprintf@val+1)^(0+128),f
  3589  06CF  09BF               	comf	(sprintf@val+2)^(0+128),f
  3590  06D0  09C0               	comf	(sprintf@val+3)^(0+128),f
  3591  06D1  0ABD               	incf	sprintf@val^(0+128),f
  3592  06D2  1903               	skipnz
  3593  06D3  0ABE               	incf	(sprintf@val+1)^(0+128),f
  3594  06D4  1903               	skipnz
  3595  06D5  0ABF               	incf	(sprintf@val+2)^(0+128),f
  3596  06D6  1903               	skipnz
  3597  06D7  0AC0               	incf	(sprintf@val+3)^(0+128),f
  3598  06D8                     l3587:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3601  06D8  0846               	movf	sprintf@prec^(0+128),w
  3602  06D9  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3603  06DA  1D03               	btfss	3,2
  3604  06DB  2EDD               	goto	u6041
  3605  06DC  2EDE               	goto	u6040
  3606  06DD                     u6041:
  3607  06DD  2EEC               	goto	l3593
  3608  06DE                     u6040:
  3609  06DE                     l3589:
  3610  06DE  0840               	movf	(sprintf@val+3)^(0+128),w
  3611  06DF  043F               	iorwf	(sprintf@val+2)^(0+128),w
  3612  06E0  043E               	iorwf	(sprintf@val+1)^(0+128),w
  3613  06E1  043D               	iorwf	sprintf@val^(0+128),w
  3614  06E2  1D03               	skipz
  3615  06E3  2EE5               	goto	u6051
  3616  06E4  2EE6               	goto	u6050
  3617  06E5                     u6051:
  3618  06E5  2EEC               	goto	l3593
  3619  06E6                     u6050:
  3620  06E6                     l3591:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3623  06E6  3001               	movlw	1
  3624  06E7  07C6               	addwf	sprintf@prec^(0+128),f
  3625  06E8  1803               	skipnc
  3626  06E9  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3627  06EA  3000               	movlw	0
  3628  06EB  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3629  06EC                     l3593:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3632  06EC  01C8               	clrf	sprintf@c^(0+128)
  3633  06ED  0AC8               	incf	sprintf@c^(0+128),f
  3634  06EE                     l3599:
  3635                           
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3637  06EE  0848               	movf	sprintf@c^(0+128),w
  3638  06EF  00AB               	movwf	??_sprintf^(0+128)
  3639  06F0  3001               	movlw	1
  3640  06F1                     u6065:
  3641  06F1  1003               	clrc
  3642  06F2  0DAB               	rlf	??_sprintf^(0+128),f
  3643  06F3  3EFF               	addlw	-1
  3644  06F4  1D03               	skipz
  3645  06F5  2EF1               	goto	u6065
  3646  06F6  1003               	clrc
  3647  06F7  0D2B               	rlf	??_sprintf^(0+128),w
  3648  06F8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3649  06F9  0084               	movwf	4
  3650  06FA  160A  158A  200A  120A  118A  	fcall	stringdir
  3651  06FF  00AC               	movwf	(??_sprintf+1)^(0+128)
  3652  0700  160A  158A  200A  120A  118A  	fcall	stringdir
  3653  0705  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
  3654  0706  160A  158A  200A  120A  118A  	fcall	stringdir
  3655  070B  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
  3656  070C  160A  158A  200A  120A  118A  	fcall	stringdir
  3657  0711  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
  3658  0712  082F               	movf	(??_sprintf+4)^(0+128),w
  3659  0713  0240               	subwf	(sprintf@val+3)^(0+128),w
  3660  0714  1D03               	skipz
  3661  0715  2F20               	goto	u6075
  3662  0716  082E               	movf	(??_sprintf+3)^(0+128),w
  3663  0717  023F               	subwf	(sprintf@val+2)^(0+128),w
  3664  0718  1D03               	skipz
  3665  0719  2F20               	goto	u6075
  3666  071A  082D               	movf	(??_sprintf+2)^(0+128),w
  3667  071B  023E               	subwf	(sprintf@val+1)^(0+128),w
  3668  071C  1D03               	skipz
  3669  071D  2F20               	goto	u6075
  3670  071E  082C               	movf	(??_sprintf+1)^(0+128),w
  3671  071F  023D               	subwf	sprintf@val^(0+128),w
  3672  0720                     u6075:
  3673  0720  1803               	skipnc
  3674  0721  2F23               	goto	u6071
  3675  0722  2F24               	goto	u6070
  3676  0723                     u6071:
  3677  0723  2F25               	goto	l3603
  3678  0724                     u6070:
  3679  0724  2F2F               	goto	l3605
  3680  0725                     l3603:
  3681  0725  3001               	movlw	1
  3682  0726  00AB               	movwf	??_sprintf^(0+128)
  3683  0727  082B               	movf	??_sprintf^(0+128),w
  3684  0728  07C8               	addwf	sprintf@c^(0+128),f
  3685  0729  300A               	movlw	10
  3686  072A  0648               	xorwf	sprintf@c^(0+128),w
  3687  072B  1D03               	btfss	3,2
  3688  072C  2F2E               	goto	u6081
  3689  072D  2F2F               	goto	u6080
  3690  072E                     u6081:
  3691  072E  2EEE               	goto	l3599
  3692  072F                     u6080:
  3693  072F                     l3605:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3696  072F  0847               	movf	(sprintf@prec+1)^(0+128),w
  3697  0730  3A80               	xorlw	128
  3698  0731  3C80               	sublw	128
  3699  0732  1D03               	skipz
  3700  0733  2F36               	goto	u6095
  3701  0734  0846               	movf	sprintf@prec^(0+128),w
  3702  0735  0248               	subwf	sprintf@c^(0+128),w
  3703  0736                     u6095:
  3704  0736  1803               	skipnc
  3705  0737  2F39               	goto	u6091
  3706  0738  2F3A               	goto	u6090
  3707  0739                     u6091:
  3708  0739  2F3B               	goto	l3609
  3709  073A                     u6090:
  3710  073A                     l3607:
  3711  073A  2F53               	goto	l3613
  3712  073B                     l3609:
  3713  073B  1683               	bsf	3,5	;RP0=1, select bank1
  3714  073C  1303               	bcf	3,6	;RP1=0, select bank1
  3715  073D  0847               	movf	(sprintf@prec+1)^(0+128),w
  3716  073E  3A80               	xorlw	128
  3717  073F  00AB               	movwf	??_sprintf^(0+128)
  3718  0740  3080               	movlw	128
  3719  0741  022B               	subwf	??_sprintf^(0+128),w
  3720  0742  1D03               	skipz
  3721  0743  2F46               	goto	u6105
  3722  0744  0848               	movf	sprintf@c^(0+128),w
  3723  0745  0246               	subwf	sprintf@prec^(0+128),w
  3724  0746                     u6105:
  3725  0746  1803               	skipnc
  3726  0747  2F49               	goto	u6101
  3727  0748  2F4A               	goto	u6100
  3728  0749                     u6101:
  3729  0749  2F53               	goto	l3613
  3730  074A                     u6100:
  3731  074A                     l3611:
  3732                           
  3733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3734  074A  1683               	bsf	3,5	;RP0=1, select bank1
  3735  074B  1303               	bcf	3,6	;RP1=0, select bank1
  3736  074C  0848               	movf	sprintf@c^(0+128),w
  3737  074D  00AB               	movwf	??_sprintf^(0+128)
  3738  074E  01AC               	clrf	(??_sprintf^(0+128)+1)
  3739  074F  082B               	movf	??_sprintf^(0+128),w
  3740  0750  00C6               	movwf	sprintf@prec^(0+128)
  3741  0751  082C               	movf	(??_sprintf+1)^(0+128),w
  3742  0752  00C7               	movwf	(sprintf@prec+1)^(0+128)
  3743  0753                     l3613:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3746  0753  3003               	movlw	3
  3747  0754  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0755  1303               	bcf	3,6	;RP1=0, select bank1
  3749  0756  0535               	andwf	sprintf@flag^(0+128),w
  3750  0757  00AB               	movwf	??_sprintf^(0+128)
  3751  0758  3000               	movlw	0
  3752  0759  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3753  075A  00AC               	movwf	(??_sprintf+1)^(0+128)
  3754  075B  082B               	movf	??_sprintf^(0+128),w
  3755  075C  042C               	iorwf	(??_sprintf^(0+128)+1),w
  3756  075D  1903               	btfsc	3,2
  3757  075E  2F60               	goto	u6111
  3758  075F  2F61               	goto	u6110
  3759  0760                     u6111:
  3760  0760  2FCA               	goto	l3625
  3761  0761                     u6110:
  3762  0761                     l3615:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3765  0761  302D               	movlw	45
  3766  0762  00AB               	movwf	??_sprintf^(0+128)
  3767  0763  0841               	movf	sprintf@sp^(0+128),w
  3768  0764  0084               	movwf	4
  3769  0765  082B               	movf	??_sprintf^(0+128),w
  3770  0766  1383               	bcf	3,7	;select IRP bank0
  3771  0767  0080               	movwf	0
  3772  0768                     l3617:
  3773  0768  3001               	movlw	1
  3774  0769  00AB               	movwf	??_sprintf^(0+128)
  3775  076A  082B               	movf	??_sprintf^(0+128),w
  3776  076B  07C1               	addwf	sprintf@sp^(0+128),f
  3777  076C  2FCA               	goto	l3625
  3778  076D                     l3619:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3781  076D  3000               	movlw	0
  3782  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3783  076F  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0770  00A3               	movwf	___llmod@divisor+3
  3785  0771  3000               	movlw	0
  3786  0772  00A2               	movwf	___llmod@divisor+2
  3787  0773  3000               	movlw	0
  3788  0774  00A1               	movwf	___llmod@divisor+1
  3789  0775  300A               	movlw	10
  3790  0776  00A0               	movwf	___llmod@divisor
  3791  0777  1683               	bsf	3,5	;RP0=1, select bank1
  3792  0778  1303               	bcf	3,6	;RP1=0, select bank1
  3793  0779  0846               	movf	sprintf@prec^(0+128),w
  3794  077A  00AB               	movwf	??_sprintf^(0+128)
  3795  077B  3001               	movlw	1
  3796  077C                     u6125:
  3797  077C  1003               	clrc
  3798  077D  0DAB               	rlf	??_sprintf^(0+128),f
  3799  077E  3EFF               	addlw	-1
  3800  077F  1D03               	skipz
  3801  0780  2F7C               	goto	u6125
  3802  0781  1003               	clrc
  3803  0782  0D2B               	rlf	??_sprintf^(0+128),w
  3804  0783  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3805  0784  0084               	movwf	4
  3806  0785  160A  158A  200A  120A  118A  	fcall	stringdir
  3807  078A  00F0               	movwf	___lldiv@divisor
  3808  078B  160A  158A  200A  120A  118A  	fcall	stringdir
  3809  0790  00F1               	movwf	___lldiv@divisor+1
  3810  0791  160A  158A  200A  120A  118A  	fcall	stringdir
  3811  0796  00F2               	movwf	___lldiv@divisor+2
  3812  0797  160A  158A  200A  120A  118A  	fcall	stringdir
  3813  079C  00F3               	movwf	___lldiv@divisor+3
  3814  079D  0840               	movf	(sprintf@val+3)^(0+128),w
  3815  079E  00F7               	movwf	___lldiv@dividend+3
  3816  079F  083F               	movf	(sprintf@val+2)^(0+128),w
  3817  07A0  00F6               	movwf	___lldiv@dividend+2
  3818  07A1  083E               	movf	(sprintf@val+1)^(0+128),w
  3819  07A2  00F5               	movwf	___lldiv@dividend+1
  3820  07A3  083D               	movf	sprintf@val^(0+128),w
  3821  07A4  00F4               	movwf	___lldiv@dividend
  3822  07A5  160A  158A  2559  120A  118A  	fcall	___lldiv
  3823  07AA  0873               	movf	?___lldiv+3,w
  3824  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3825  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3826  07AD  00A7               	movwf	___llmod@dividend+3
  3827  07AE  0872               	movf	?___lldiv+2,w
  3828  07AF  00A6               	movwf	___llmod@dividend+2
  3829  07B0  0871               	movf	?___lldiv+1,w
  3830  07B1  00A5               	movwf	___llmod@dividend+1
  3831  07B2  0870               	movf	?___lldiv,w
  3832  07B3  00A4               	movwf	___llmod@dividend
  3833  07B4  160A  158A  24AA  120A  118A  	fcall	___llmod
  3834  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3835  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3836  07BB  0820               	movf	?___llmod,w
  3837  07BC  3E30               	addlw	48
  3838  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  3839  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  3840  07BF  00AC               	movwf	(??_sprintf+1)^(0+128)
  3841  07C0  082C               	movf	(??_sprintf+1)^(0+128),w
  3842  07C1  00C8               	movwf	sprintf@c^(0+128)
  3843  07C2                     l3621:
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3846  07C2  0848               	movf	sprintf@c^(0+128),w
  3847  07C3  00AB               	movwf	??_sprintf^(0+128)
  3848  07C4  0841               	movf	sprintf@sp^(0+128),w
  3849  07C5  0084               	movwf	4
  3850  07C6  082B               	movf	??_sprintf^(0+128),w
  3851  07C7  1383               	bcf	3,7	;select IRP bank0
  3852  07C8  0080               	movwf	0
  3853  07C9  2F68               	goto	l3617
  3854  07CA                     l3625:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3857  07CA  30FF               	movlw	255
  3858  07CB  07C6               	addwf	sprintf@prec^(0+128),f
  3859  07CC  1803               	skipnc
  3860  07CD  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  3861  07CE  30FF               	movlw	255
  3862  07CF  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  3863  07D0  0A46               	incf	sprintf@prec^(0+128),w
  3864  07D1  1D03               	skipz
  3865  07D2  2FD7               	goto	u6131
  3866  07D3  0A47               	incf	(sprintf@prec+1)^(0+128),w
  3867  07D4  1D03               	btfss	3,2
  3868  07D5  2FD7               	goto	u6131
  3869  07D6  2FD8               	goto	u6130
  3870  07D7                     u6131:
  3871  07D7  2F6D               	goto	l3619
  3872  07D8                     u6130:
  3873  07D8                     l3627:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3876  07D8  3001               	movlw	1
  3877  07D9  07A0               	addwf	sprintf@f^(0+128),f
  3878  07DA  30FF               	movlw	-1
  3879  07DB  0720               	addwf	sprintf@f^(0+128),w
  3880  07DC  0084               	movwf	4
  3881  07DD  160A  158A  200A  120A  118A  	fcall	stringdir
  3882  07E2  00AB               	movwf	??_sprintf^(0+128)
  3883  07E3  082B               	movf	??_sprintf^(0+128),w
  3884  07E4  00C8               	movwf	sprintf@c^(0+128)
  3885  07E5  0848               	movf	sprintf@c^(0+128),w
  3886  07E6  1D03               	btfss	3,2
  3887  07E7  2FE9               	goto	u6141
  3888  07E8  2FEA               	goto	u6140
  3889  07E9                     u6141:
  3890  07E9  2856               	goto	l3403
  3891  07EA                     u6140:
  3892  07EA                     l3629:
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3895  07EA  0841               	movf	sprintf@sp^(0+128),w
  3896  07EB  0084               	movwf	4
  3897  07EC  1383               	bcf	3,7	;select IRP bank0
  3898  07ED  0180               	clrf	0
  3899  07EE                     l334:
  3900  07EE  0008               	return
  3901  07EF                     __end_of_sprintf:
  3902                           
  3903                           	psect	text2
  3904  0940                     __ptext2:	
  3905 ;; *************** function _scale *****************
  3906 ;; Defined at:
  3907 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  scl             1    wreg     char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  scl             1   48[BANK0 ] char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  4   30[BANK0 ] char 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       4       0       0       0
  3922 ;;      Locals:         0       5       0       0       0
  3923 ;;      Temps:          0      10       0       0       0
  3924 ;;      Totals:         0      19       0       0       0
  3925 ;;Total ram usage:       19 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 2
  3928 ;; This function calls:
  3929 ;;		___awdiv
  3930 ;;		___awmod
  3931 ;;		___flmul
  3932 ;; This function is called by:
  3933 ;;		_sprintf
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _scale
  3939  0940                     _scale:
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3943                           ;scale@scl stored from wreg
  3944  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3945  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3946  0942  00D0               	movwf	scale@scl
  3947  0943                     l2867:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3950  0943  1FD0               	btfss	scale@scl,7
  3951  0944  2946               	goto	u4431
  3952  0945  2947               	goto	u4430
  3953  0946                     u4431:
  3954  0946  2AF4               	goto	l2889
  3955  0947                     u4430:
  3956  0947                     l2869:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3959  0947  09D0               	comf	scale@scl,f
  3960  0948  0AD0               	incf	scale@scl,f
  3961  0949                     l2871:
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3964  0949  0850               	movf	scale@scl,w
  3965  094A  3A80               	xorlw	128
  3966  094B  3E12               	addlw	-238
  3967  094C  1C03               	skipc
  3968  094D  294F               	goto	u4441
  3969  094E  2950               	goto	u4440
  3970  094F                     u4441:
  3971  094F  2A38               	goto	l2879
  3972  0950                     u4440:
  3973  0950                     l2873:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3976  0950  300A               	movlw	10
  3977  0951  00F7               	movwf	___awdiv@divisor
  3978  0952  3000               	movlw	0
  3979  0953  00F8               	movwf	___awdiv@divisor+1
  3980  0954  0850               	movf	scale@scl,w
  3981  0955  00F2               	movwf	___awmod@dividend
  3982  0956  01F3               	clrf	___awmod@dividend+1
  3983  0957  1BF2               	btfsc	___awmod@dividend,7
  3984  0958  03F3               	decf	___awmod@dividend+1,f
  3985  0959  3064               	movlw	100
  3986  095A  00F0               	movwf	___awmod@divisor
  3987  095B  3000               	movlw	0
  3988  095C  00F1               	movwf	___awmod@divisor+1
  3989  095D  160A  158A  2500  120A  158A  	fcall	___awmod
  3990  0962  0871               	movf	?___awmod+1,w
  3991  0963  00FA               	movwf	___awdiv@dividend+1
  3992  0964  0870               	movf	?___awmod,w
  3993  0965  00F9               	movwf	___awdiv@dividend
  3994  0966  160A  158A  25BF  120A  158A  	fcall	___awdiv
  3995  096B  0877               	movf	?___awdiv,w
  3996  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3997  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3998  096E  00C2               	movwf	??_scale
  3999  096F  3001               	movlw	1
  4000  0970                     u4455:
  4001  0970  1003               	clrc
  4002  0971  0DC2               	rlf	??_scale,f
  4003  0972  3EFF               	addlw	-1
  4004  0973  1D03               	skipz
  4005  0974  2970               	goto	u4455
  4006  0975  1003               	clrc
  4007  0976  0D42               	rlf	??_scale,w
  4008  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4009  0978  0084               	movwf	4
  4010  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  4011  097E  00C3               	movwf	??_scale+1
  4012  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  4013  0984  00C4               	movwf	??_scale+2
  4014  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  4015  098A  00C5               	movwf	??_scale+3
  4016  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  4017  0990  00C6               	movwf	??_scale+4
  4018  0991  0846               	movf	??_scale+4,w
  4019  0992  00A7               	movwf	___flmul@b+3
  4020  0993  0845               	movf	??_scale+3,w
  4021  0994  00A6               	movwf	___flmul@b+2
  4022  0995  0844               	movf	??_scale+2,w
  4023  0996  00A5               	movwf	___flmul@b+1
  4024  0997  0843               	movf	??_scale+1,w
  4025  0998  00A4               	movwf	___flmul@b
  4026  0999  3064               	movlw	100
  4027  099A  00F7               	movwf	___awdiv@divisor
  4028  099B  3000               	movlw	0
  4029  099C  00F8               	movwf	___awdiv@divisor+1
  4030  099D  0850               	movf	scale@scl,w
  4031  099E  00F9               	movwf	___awdiv@dividend
  4032  099F  01FA               	clrf	___awdiv@dividend+1
  4033  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4034  09A1  03FA               	decf	___awdiv@dividend+1,f
  4035  09A2  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4036  09A7  0877               	movf	?___awdiv,w
  4037  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4038  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4039  09AA  00C7               	movwf	??_scale+5
  4040  09AB  3001               	movlw	1
  4041  09AC                     u4465:
  4042  09AC  1003               	clrc
  4043  09AD  0DC7               	rlf	??_scale+5,f
  4044  09AE  3EFF               	addlw	-1
  4045  09AF  1D03               	skipz
  4046  09B0  29AC               	goto	u4465
  4047  09B1  1003               	clrc
  4048  09B2  0D47               	rlf	??_scale+5,w
  4049  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4050  09B4  0084               	movwf	4
  4051  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  4052  09BA  00C8               	movwf	??_scale+6
  4053  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  4054  09C0  00C9               	movwf	??_scale+7
  4055  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  4056  09C6  00CA               	movwf	??_scale+8
  4057  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  4058  09CC  00CB               	movwf	??_scale+9
  4059  09CD  084B               	movf	??_scale+9,w
  4060  09CE  00AB               	movwf	___flmul@a+3
  4061  09CF  084A               	movf	??_scale+8,w
  4062  09D0  00AA               	movwf	___flmul@a+2
  4063  09D1  0849               	movf	??_scale+7,w
  4064  09D2  00A9               	movwf	___flmul@a+1
  4065  09D3  0848               	movf	??_scale+6,w
  4066  09D4  00A8               	movwf	___flmul@a
  4067  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4068  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4069  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4070  09DC  0827               	movf	?___flmul+3,w
  4071  09DD  00CF               	movwf	_scale$1069+3
  4072  09DE  0826               	movf	?___flmul+2,w
  4073  09DF  00CE               	movwf	_scale$1069+2
  4074  09E0  0825               	movf	?___flmul+1,w
  4075  09E1  00CD               	movwf	_scale$1069+1
  4076  09E2  0824               	movf	?___flmul,w
  4077  09E3  00CC               	movwf	_scale$1069
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4080  09E4  300A               	movlw	10
  4081  09E5  00F0               	movwf	___awmod@divisor
  4082  09E6  3000               	movlw	0
  4083  09E7  00F1               	movwf	___awmod@divisor+1
  4084  09E8  0850               	movf	scale@scl,w
  4085  09E9  00F2               	movwf	___awmod@dividend
  4086  09EA  01F3               	clrf	___awmod@dividend+1
  4087  09EB  1BF2               	btfsc	___awmod@dividend,7
  4088  09EC  03F3               	decf	___awmod@dividend+1,f
  4089  09ED  160A  158A  2500  120A  158A  	fcall	___awmod
  4090  09F2  0870               	movf	?___awmod,w
  4091  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4092  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4093  09F5  00C2               	movwf	??_scale
  4094  09F6  3001               	movlw	1
  4095  09F7                     u4475:
  4096  09F7  1003               	clrc
  4097  09F8  0DC2               	rlf	??_scale,f
  4098  09F9  3EFF               	addlw	-1
  4099  09FA  1D03               	skipz
  4100  09FB  29F7               	goto	u4475
  4101  09FC  1003               	clrc
  4102  09FD  0D42               	rlf	??_scale,w
  4103  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4104  09FF  0084               	movwf	4
  4105  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  4106  0A05  00C3               	movwf	??_scale+1
  4107  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  4108  0A0B  00C4               	movwf	??_scale+2
  4109  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4110  0A11  00C5               	movwf	??_scale+3
  4111  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  4112  0A17  00C6               	movwf	??_scale+4
  4113  0A18  0846               	movf	??_scale+4,w
  4114  0A19  00A7               	movwf	___flmul@b+3
  4115  0A1A  0845               	movf	??_scale+3,w
  4116  0A1B  00A6               	movwf	___flmul@b+2
  4117  0A1C  0844               	movf	??_scale+2,w
  4118  0A1D  00A5               	movwf	___flmul@b+1
  4119  0A1E  0843               	movf	??_scale+1,w
  4120  0A1F  00A4               	movwf	___flmul@b
  4121  0A20  084F               	movf	_scale$1069+3,w
  4122  0A21  00AB               	movwf	___flmul@a+3
  4123  0A22  084E               	movf	_scale$1069+2,w
  4124  0A23  00AA               	movwf	___flmul@a+2
  4125  0A24  084D               	movf	_scale$1069+1,w
  4126  0A25  00A9               	movwf	___flmul@a+1
  4127  0A26  084C               	movf	_scale$1069,w
  4128  0A27  00A8               	movwf	___flmul@a
  4129  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4130  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4132  0A2F  0827               	movf	?___flmul+3,w
  4133  0A30  00C1               	movwf	?_scale+3
  4134  0A31  0826               	movf	?___flmul+2,w
  4135  0A32  00C0               	movwf	?_scale+2
  4136  0A33  0825               	movf	?___flmul+1,w
  4137  0A34  00BF               	movwf	?_scale+1
  4138  0A35  0824               	movf	?___flmul,w
  4139  0A36  00BE               	movwf	?_scale
  4140  0A37  2C9E               	goto	l259
  4141  0A38                     l2879:
  4142  0A38  0850               	movf	scale@scl,w
  4143  0A39  3A80               	xorlw	128
  4144  0A3A  3E75               	addlw	-139
  4145  0A3B  1C03               	skipc
  4146  0A3C  2A3E               	goto	u4481
  4147  0A3D  2A3F               	goto	u4480
  4148  0A3E                     u4481:
  4149  0A3E  2AC7               	goto	l2885
  4150  0A3F                     u4480:
  4151  0A3F                     l2881:
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4154  0A3F  300A               	movlw	10
  4155  0A40  00F0               	movwf	___awmod@divisor
  4156  0A41  3000               	movlw	0
  4157  0A42  00F1               	movwf	___awmod@divisor+1
  4158  0A43  0850               	movf	scale@scl,w
  4159  0A44  00F2               	movwf	___awmod@dividend
  4160  0A45  01F3               	clrf	___awmod@dividend+1
  4161  0A46  1BF2               	btfsc	___awmod@dividend,7
  4162  0A47  03F3               	decf	___awmod@dividend+1,f
  4163  0A48  160A  158A  2500  120A  158A  	fcall	___awmod
  4164  0A4D  0870               	movf	?___awmod,w
  4165  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4166  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4167  0A50  00C2               	movwf	??_scale
  4168  0A51  3001               	movlw	1
  4169  0A52                     u4495:
  4170  0A52  1003               	clrc
  4171  0A53  0DC2               	rlf	??_scale,f
  4172  0A54  3EFF               	addlw	-1
  4173  0A55  1D03               	skipz
  4174  0A56  2A52               	goto	u4495
  4175  0A57  1003               	clrc
  4176  0A58  0D42               	rlf	??_scale,w
  4177  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4178  0A5A  0084               	movwf	4
  4179  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  4180  0A60  00C3               	movwf	??_scale+1
  4181  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  4182  0A66  00C4               	movwf	??_scale+2
  4183  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  4184  0A6C  00C5               	movwf	??_scale+3
  4185  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4186  0A72  00C6               	movwf	??_scale+4
  4187  0A73  0846               	movf	??_scale+4,w
  4188  0A74  00A7               	movwf	___flmul@b+3
  4189  0A75  0845               	movf	??_scale+3,w
  4190  0A76  00A6               	movwf	___flmul@b+2
  4191  0A77  0844               	movf	??_scale+2,w
  4192  0A78  00A5               	movwf	___flmul@b+1
  4193  0A79  0843               	movf	??_scale+1,w
  4194  0A7A  00A4               	movwf	___flmul@b
  4195  0A7B  300A               	movlw	10
  4196  0A7C  00F7               	movwf	___awdiv@divisor
  4197  0A7D  3000               	movlw	0
  4198  0A7E  00F8               	movwf	___awdiv@divisor+1
  4199  0A7F  0850               	movf	scale@scl,w
  4200  0A80  00F9               	movwf	___awdiv@dividend
  4201  0A81  01FA               	clrf	___awdiv@dividend+1
  4202  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4203  0A83  03FA               	decf	___awdiv@dividend+1,f
  4204  0A84  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4205  0A89  0877               	movf	?___awdiv,w
  4206  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0A8C  00C7               	movwf	??_scale+5
  4209  0A8D  3001               	movlw	1
  4210  0A8E                     u4505:
  4211  0A8E  1003               	clrc
  4212  0A8F  0DC7               	rlf	??_scale+5,f
  4213  0A90  3EFF               	addlw	-1
  4214  0A91  1D03               	skipz
  4215  0A92  2A8E               	goto	u4505
  4216  0A93  1003               	clrc
  4217  0A94  0D47               	rlf	??_scale+5,w
  4218  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4219  0A96  0084               	movwf	4
  4220  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  4221  0A9C  00C8               	movwf	??_scale+6
  4222  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  4223  0AA2  00C9               	movwf	??_scale+7
  4224  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4225  0AA8  00CA               	movwf	??_scale+8
  4226  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4227  0AAE  00CB               	movwf	??_scale+9
  4228  0AAF  084B               	movf	??_scale+9,w
  4229  0AB0  00AB               	movwf	___flmul@a+3
  4230  0AB1  084A               	movf	??_scale+8,w
  4231  0AB2  00AA               	movwf	___flmul@a+2
  4232  0AB3  0849               	movf	??_scale+7,w
  4233  0AB4  00A9               	movwf	___flmul@a+1
  4234  0AB5  0848               	movf	??_scale+6,w
  4235  0AB6  00A8               	movwf	___flmul@a
  4236  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4237  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4238  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4239  0ABE  0827               	movf	?___flmul+3,w
  4240  0ABF  00C1               	movwf	?_scale+3
  4241  0AC0  0826               	movf	?___flmul+2,w
  4242  0AC1  00C0               	movwf	?_scale+2
  4243  0AC2  0825               	movf	?___flmul+1,w
  4244  0AC3  00BF               	movwf	?_scale+1
  4245  0AC4  0824               	movf	?___flmul,w
  4246  0AC5  00BE               	movwf	?_scale
  4247  0AC6  2C9E               	goto	l259
  4248  0AC7                     l2885:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4251  0AC7  0850               	movf	scale@scl,w
  4252  0AC8  00C2               	movwf	??_scale
  4253  0AC9  3001               	movlw	1
  4254  0ACA                     u4515:
  4255  0ACA  1003               	clrc
  4256  0ACB  0DC2               	rlf	??_scale,f
  4257  0ACC  3EFF               	addlw	-1
  4258  0ACD  1D03               	skipz
  4259  0ACE  2ACA               	goto	u4515
  4260  0ACF  1003               	clrc
  4261  0AD0  0D42               	rlf	??_scale,w
  4262  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4263  0AD2  0084               	movwf	4
  4264  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  4265  0AD8  00C3               	movwf	??_scale+1
  4266  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  4267  0ADE  00C4               	movwf	??_scale+2
  4268  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  4269  0AE4  00C5               	movwf	??_scale+3
  4270  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4271  0AEA  00C6               	movwf	??_scale+4
  4272  0AEB  0846               	movf	??_scale+4,w
  4273  0AEC  00C1               	movwf	?_scale+3
  4274  0AED  0845               	movf	??_scale+3,w
  4275  0AEE  00C0               	movwf	?_scale+2
  4276  0AEF  0844               	movf	??_scale+2,w
  4277  0AF0  00BF               	movwf	?_scale+1
  4278  0AF1  0843               	movf	??_scale+1,w
  4279  0AF2  00BE               	movwf	?_scale
  4280  0AF3  2C9E               	goto	l259
  4281  0AF4                     l2889:
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4284  0AF4  0850               	movf	scale@scl,w
  4285  0AF5  3A80               	xorlw	128
  4286  0AF6  3E12               	addlw	-238
  4287  0AF7  1C03               	skipc
  4288  0AF8  2AFA               	goto	u4521
  4289  0AF9  2AFB               	goto	u4520
  4290  0AFA                     u4521:
  4291  0AFA  2BE3               	goto	l2897
  4292  0AFB                     u4520:
  4293  0AFB                     l2891:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4296  0AFB  300A               	movlw	10
  4297  0AFC  00F7               	movwf	___awdiv@divisor
  4298  0AFD  3000               	movlw	0
  4299  0AFE  00F8               	movwf	___awdiv@divisor+1
  4300  0AFF  0850               	movf	scale@scl,w
  4301  0B00  00F2               	movwf	___awmod@dividend
  4302  0B01  01F3               	clrf	___awmod@dividend+1
  4303  0B02  1BF2               	btfsc	___awmod@dividend,7
  4304  0B03  03F3               	decf	___awmod@dividend+1,f
  4305  0B04  3064               	movlw	100
  4306  0B05  00F0               	movwf	___awmod@divisor
  4307  0B06  3000               	movlw	0
  4308  0B07  00F1               	movwf	___awmod@divisor+1
  4309  0B08  160A  158A  2500  120A  158A  	fcall	___awmod
  4310  0B0D  0871               	movf	?___awmod+1,w
  4311  0B0E  00FA               	movwf	___awdiv@dividend+1
  4312  0B0F  0870               	movf	?___awmod,w
  4313  0B10  00F9               	movwf	___awdiv@dividend
  4314  0B11  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4315  0B16  0877               	movf	?___awdiv,w
  4316  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0B19  00C2               	movwf	??_scale
  4319  0B1A  3001               	movlw	1
  4320  0B1B                     u4535:
  4321  0B1B  1003               	clrc
  4322  0B1C  0DC2               	rlf	??_scale,f
  4323  0B1D  3EFF               	addlw	-1
  4324  0B1E  1D03               	skipz
  4325  0B1F  2B1B               	goto	u4535
  4326  0B20  1003               	clrc
  4327  0B21  0D42               	rlf	??_scale,w
  4328  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4329  0B23  0084               	movwf	4
  4330  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  4331  0B29  00C3               	movwf	??_scale+1
  4332  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  4333  0B2F  00C4               	movwf	??_scale+2
  4334  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  4335  0B35  00C5               	movwf	??_scale+3
  4336  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  4337  0B3B  00C6               	movwf	??_scale+4
  4338  0B3C  0846               	movf	??_scale+4,w
  4339  0B3D  00A7               	movwf	___flmul@b+3
  4340  0B3E  0845               	movf	??_scale+3,w
  4341  0B3F  00A6               	movwf	___flmul@b+2
  4342  0B40  0844               	movf	??_scale+2,w
  4343  0B41  00A5               	movwf	___flmul@b+1
  4344  0B42  0843               	movf	??_scale+1,w
  4345  0B43  00A4               	movwf	___flmul@b
  4346  0B44  3064               	movlw	100
  4347  0B45  00F7               	movwf	___awdiv@divisor
  4348  0B46  3000               	movlw	0
  4349  0B47  00F8               	movwf	___awdiv@divisor+1
  4350  0B48  0850               	movf	scale@scl,w
  4351  0B49  00F9               	movwf	___awdiv@dividend
  4352  0B4A  01FA               	clrf	___awdiv@dividend+1
  4353  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4354  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4355  0B4D  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4356  0B52  0877               	movf	?___awdiv,w
  4357  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4358  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4359  0B55  00C7               	movwf	??_scale+5
  4360  0B56  3001               	movlw	1
  4361  0B57                     u4545:
  4362  0B57  1003               	clrc
  4363  0B58  0DC7               	rlf	??_scale+5,f
  4364  0B59  3EFF               	addlw	-1
  4365  0B5A  1D03               	skipz
  4366  0B5B  2B57               	goto	u4545
  4367  0B5C  1003               	clrc
  4368  0B5D  0D47               	rlf	??_scale+5,w
  4369  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4370  0B5F  0084               	movwf	4
  4371  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  4372  0B65  00C8               	movwf	??_scale+6
  4373  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  4374  0B6B  00C9               	movwf	??_scale+7
  4375  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  4376  0B71  00CA               	movwf	??_scale+8
  4377  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  4378  0B77  00CB               	movwf	??_scale+9
  4379  0B78  084B               	movf	??_scale+9,w
  4380  0B79  00AB               	movwf	___flmul@a+3
  4381  0B7A  084A               	movf	??_scale+8,w
  4382  0B7B  00AA               	movwf	___flmul@a+2
  4383  0B7C  0849               	movf	??_scale+7,w
  4384  0B7D  00A9               	movwf	___flmul@a+1
  4385  0B7E  0848               	movf	??_scale+6,w
  4386  0B7F  00A8               	movwf	___flmul@a
  4387  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4388  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4389  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4390  0B87  0827               	movf	?___flmul+3,w
  4391  0B88  00CF               	movwf	_scale$1069+3
  4392  0B89  0826               	movf	?___flmul+2,w
  4393  0B8A  00CE               	movwf	_scale$1069+2
  4394  0B8B  0825               	movf	?___flmul+1,w
  4395  0B8C  00CD               	movwf	_scale$1069+1
  4396  0B8D  0824               	movf	?___flmul,w
  4397  0B8E  00CC               	movwf	_scale$1069
  4398                           
  4399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4400  0B8F  300A               	movlw	10
  4401  0B90  00F0               	movwf	___awmod@divisor
  4402  0B91  3000               	movlw	0
  4403  0B92  00F1               	movwf	___awmod@divisor+1
  4404  0B93  0850               	movf	scale@scl,w
  4405  0B94  00F2               	movwf	___awmod@dividend
  4406  0B95  01F3               	clrf	___awmod@dividend+1
  4407  0B96  1BF2               	btfsc	___awmod@dividend,7
  4408  0B97  03F3               	decf	___awmod@dividend+1,f
  4409  0B98  160A  158A  2500  120A  158A  	fcall	___awmod
  4410  0B9D  0870               	movf	?___awmod,w
  4411  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4412  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4413  0BA0  00C2               	movwf	??_scale
  4414  0BA1  3001               	movlw	1
  4415  0BA2                     u4555:
  4416  0BA2  1003               	clrc
  4417  0BA3  0DC2               	rlf	??_scale,f
  4418  0BA4  3EFF               	addlw	-1
  4419  0BA5  1D03               	skipz
  4420  0BA6  2BA2               	goto	u4555
  4421  0BA7  1003               	clrc
  4422  0BA8  0D42               	rlf	??_scale,w
  4423  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4424  0BAA  0084               	movwf	4
  4425  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  4426  0BB0  00C3               	movwf	??_scale+1
  4427  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  4428  0BB6  00C4               	movwf	??_scale+2
  4429  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  4430  0BBC  00C5               	movwf	??_scale+3
  4431  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  4432  0BC2  00C6               	movwf	??_scale+4
  4433  0BC3  0846               	movf	??_scale+4,w
  4434  0BC4  00A7               	movwf	___flmul@b+3
  4435  0BC5  0845               	movf	??_scale+3,w
  4436  0BC6  00A6               	movwf	___flmul@b+2
  4437  0BC7  0844               	movf	??_scale+2,w
  4438  0BC8  00A5               	movwf	___flmul@b+1
  4439  0BC9  0843               	movf	??_scale+1,w
  4440  0BCA  00A4               	movwf	___flmul@b
  4441  0BCB  084F               	movf	_scale$1069+3,w
  4442  0BCC  00AB               	movwf	___flmul@a+3
  4443  0BCD  084E               	movf	_scale$1069+2,w
  4444  0BCE  00AA               	movwf	___flmul@a+2
  4445  0BCF  084D               	movf	_scale$1069+1,w
  4446  0BD0  00A9               	movwf	___flmul@a+1
  4447  0BD1  084C               	movf	_scale$1069,w
  4448  0BD2  00A8               	movwf	___flmul@a
  4449  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4450  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4451  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4452  0BDA  0827               	movf	?___flmul+3,w
  4453  0BDB  00C1               	movwf	?_scale+3
  4454  0BDC  0826               	movf	?___flmul+2,w
  4455  0BDD  00C0               	movwf	?_scale+2
  4456  0BDE  0825               	movf	?___flmul+1,w
  4457  0BDF  00BF               	movwf	?_scale+1
  4458  0BE0  0824               	movf	?___flmul,w
  4459  0BE1  00BE               	movwf	?_scale
  4460  0BE2  2C9E               	goto	l259
  4461  0BE3                     l2897:
  4462  0BE3  0850               	movf	scale@scl,w
  4463  0BE4  3A80               	xorlw	128
  4464  0BE5  3E75               	addlw	-139
  4465  0BE6  1C03               	skipc
  4466  0BE7  2BE9               	goto	u4561
  4467  0BE8  2BEA               	goto	u4560
  4468  0BE9                     u4561:
  4469  0BE9  2C72               	goto	l2903
  4470  0BEA                     u4560:
  4471  0BEA                     l2899:
  4472                           
  4473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4474  0BEA  300A               	movlw	10
  4475  0BEB  00F0               	movwf	___awmod@divisor
  4476  0BEC  3000               	movlw	0
  4477  0BED  00F1               	movwf	___awmod@divisor+1
  4478  0BEE  0850               	movf	scale@scl,w
  4479  0BEF  00F2               	movwf	___awmod@dividend
  4480  0BF0  01F3               	clrf	___awmod@dividend+1
  4481  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4482  0BF2  03F3               	decf	___awmod@dividend+1,f
  4483  0BF3  160A  158A  2500  120A  158A  	fcall	___awmod
  4484  0BF8  0870               	movf	?___awmod,w
  4485  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0BFB  00C2               	movwf	??_scale
  4488  0BFC  3001               	movlw	1
  4489  0BFD                     u4575:
  4490  0BFD  1003               	clrc
  4491  0BFE  0DC2               	rlf	??_scale,f
  4492  0BFF  3EFF               	addlw	-1
  4493  0C00  1D03               	skipz
  4494  0C01  2BFD               	goto	u4575
  4495  0C02  1003               	clrc
  4496  0C03  0D42               	rlf	??_scale,w
  4497  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4498  0C05  0084               	movwf	4
  4499  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  4500  0C0B  00C3               	movwf	??_scale+1
  4501  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4502  0C11  00C4               	movwf	??_scale+2
  4503  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  4504  0C17  00C5               	movwf	??_scale+3
  4505  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  4506  0C1D  00C6               	movwf	??_scale+4
  4507  0C1E  0846               	movf	??_scale+4,w
  4508  0C1F  00A7               	movwf	___flmul@b+3
  4509  0C20  0845               	movf	??_scale+3,w
  4510  0C21  00A6               	movwf	___flmul@b+2
  4511  0C22  0844               	movf	??_scale+2,w
  4512  0C23  00A5               	movwf	___flmul@b+1
  4513  0C24  0843               	movf	??_scale+1,w
  4514  0C25  00A4               	movwf	___flmul@b
  4515  0C26  300A               	movlw	10
  4516  0C27  00F7               	movwf	___awdiv@divisor
  4517  0C28  3000               	movlw	0
  4518  0C29  00F8               	movwf	___awdiv@divisor+1
  4519  0C2A  0850               	movf	scale@scl,w
  4520  0C2B  00F9               	movwf	___awdiv@dividend
  4521  0C2C  01FA               	clrf	___awdiv@dividend+1
  4522  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4523  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4524  0C2F  160A  158A  25BF  120A  158A  	fcall	___awdiv
  4525  0C34  0877               	movf	?___awdiv,w
  4526  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4527  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4528  0C37  00C7               	movwf	??_scale+5
  4529  0C38  3001               	movlw	1
  4530  0C39                     u4585:
  4531  0C39  1003               	clrc
  4532  0C3A  0DC7               	rlf	??_scale+5,f
  4533  0C3B  3EFF               	addlw	-1
  4534  0C3C  1D03               	skipz
  4535  0C3D  2C39               	goto	u4585
  4536  0C3E  1003               	clrc
  4537  0C3F  0D47               	rlf	??_scale+5,w
  4538  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4539  0C41  0084               	movwf	4
  4540  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  4541  0C47  00C8               	movwf	??_scale+6
  4542  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  4543  0C4D  00C9               	movwf	??_scale+7
  4544  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  4545  0C53  00CA               	movwf	??_scale+8
  4546  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  4547  0C59  00CB               	movwf	??_scale+9
  4548  0C5A  084B               	movf	??_scale+9,w
  4549  0C5B  00AB               	movwf	___flmul@a+3
  4550  0C5C  084A               	movf	??_scale+8,w
  4551  0C5D  00AA               	movwf	___flmul@a+2
  4552  0C5E  0849               	movf	??_scale+7,w
  4553  0C5F  00A9               	movwf	___flmul@a+1
  4554  0C60  0848               	movf	??_scale+6,w
  4555  0C61  00A8               	movwf	___flmul@a
  4556  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4557  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0C69  0827               	movf	?___flmul+3,w
  4560  0C6A  00C1               	movwf	?_scale+3
  4561  0C6B  0826               	movf	?___flmul+2,w
  4562  0C6C  00C0               	movwf	?_scale+2
  4563  0C6D  0825               	movf	?___flmul+1,w
  4564  0C6E  00BF               	movwf	?_scale+1
  4565  0C6F  0824               	movf	?___flmul,w
  4566  0C70  00BE               	movwf	?_scale
  4567  0C71  2C9E               	goto	l259
  4568  0C72                     l2903:
  4569                           
  4570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4571  0C72  0850               	movf	scale@scl,w
  4572  0C73  00C2               	movwf	??_scale
  4573  0C74  3001               	movlw	1
  4574  0C75                     u4595:
  4575  0C75  1003               	clrc
  4576  0C76  0DC2               	rlf	??_scale,f
  4577  0C77  3EFF               	addlw	-1
  4578  0C78  1D03               	skipz
  4579  0C79  2C75               	goto	u4595
  4580  0C7A  1003               	clrc
  4581  0C7B  0D42               	rlf	??_scale,w
  4582  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4583  0C7D  0084               	movwf	4
  4584  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  4585  0C83  00C3               	movwf	??_scale+1
  4586  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  4587  0C89  00C4               	movwf	??_scale+2
  4588  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  4589  0C8F  00C5               	movwf	??_scale+3
  4590  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  4591  0C95  00C6               	movwf	??_scale+4
  4592  0C96  0846               	movf	??_scale+4,w
  4593  0C97  00C1               	movwf	?_scale+3
  4594  0C98  0845               	movf	??_scale+3,w
  4595  0C99  00C0               	movwf	?_scale+2
  4596  0C9A  0844               	movf	??_scale+2,w
  4597  0C9B  00BF               	movwf	?_scale+1
  4598  0C9C  0843               	movf	??_scale+1,w
  4599  0C9D  00BE               	movwf	?_scale
  4600  0C9E                     l259:
  4601  0C9E  0008               	return
  4602  0C9F                     __end_of_scale:
  4603                           
  4604                           	psect	text3
  4605  1D00                     __ptext3:	
  4606 ;; *************** function ___awmod *****************
  4607 ;; Defined at:
  4608 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  divisor         2    0[COMMON] int 
  4611 ;;  dividend        2    2[COMMON] int 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  sign            1    6[COMMON] unsigned char 
  4614 ;;  counter         1    5[COMMON] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  2    0[COMMON] int 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4624 ;;      Params:         4       0       0       0       0
  4625 ;;      Locals:         2       0       0       0       0
  4626 ;;      Temps:          1       0       0       0       0
  4627 ;;      Totals:         7       0       0       0       0
  4628 ;;Total ram usage:        7 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_scale
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           
  4638                           ;psect for function ___awmod
  4639  1D00                     ___awmod:
  4640  1D00                     l2409:	
  4641                           ;incstack = 0
  4642                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4643                           
  4644  1D00  01F6               	clrf	___awmod@sign
  4645  1D01                     l2411:
  4646  1D01  1FF3               	btfss	___awmod@dividend+1,7
  4647  1D02  2D04               	goto	u3301
  4648  1D03  2D05               	goto	u3300
  4649  1D04                     u3301:
  4650  1D04  2D0C               	goto	l2417
  4651  1D05                     u3300:
  4652  1D05                     l2413:
  4653  1D05  09F2               	comf	___awmod@dividend,f
  4654  1D06  09F3               	comf	___awmod@dividend+1,f
  4655  1D07  0AF2               	incf	___awmod@dividend,f
  4656  1D08  1903               	skipnz
  4657  1D09  0AF3               	incf	___awmod@dividend+1,f
  4658  1D0A                     l2415:
  4659  1D0A  01F6               	clrf	___awmod@sign
  4660  1D0B  0AF6               	incf	___awmod@sign,f
  4661  1D0C                     l2417:
  4662  1D0C  1FF1               	btfss	___awmod@divisor+1,7
  4663  1D0D  2D0F               	goto	u3311
  4664  1D0E  2D10               	goto	u3310
  4665  1D0F                     u3311:
  4666  1D0F  2D15               	goto	l2421
  4667  1D10                     u3310:
  4668  1D10                     l2419:
  4669  1D10  09F0               	comf	___awmod@divisor,f
  4670  1D11  09F1               	comf	___awmod@divisor+1,f
  4671  1D12  0AF0               	incf	___awmod@divisor,f
  4672  1D13  1903               	skipnz
  4673  1D14  0AF1               	incf	___awmod@divisor+1,f
  4674  1D15                     l2421:
  4675  1D15  0870               	movf	___awmod@divisor,w
  4676  1D16  0471               	iorwf	___awmod@divisor+1,w
  4677  1D17  1903               	btfsc	3,2
  4678  1D18  2D1A               	goto	u3321
  4679  1D19  2D1B               	goto	u3320
  4680  1D1A                     u3321:
  4681  1D1A  2D4A               	goto	l2439
  4682  1D1B                     u3320:
  4683  1D1B                     l2423:
  4684  1D1B  01F5               	clrf	___awmod@counter
  4685  1D1C  0AF5               	incf	___awmod@counter,f
  4686  1D1D  2D29               	goto	l2429
  4687  1D1E                     l2425:
  4688  1D1E  3001               	movlw	1
  4689  1D1F                     u3335:
  4690  1D1F  1003               	clrc
  4691  1D20  0DF0               	rlf	___awmod@divisor,f
  4692  1D21  0DF1               	rlf	___awmod@divisor+1,f
  4693  1D22  3EFF               	addlw	-1
  4694  1D23  1D03               	skipz
  4695  1D24  2D1F               	goto	u3335
  4696  1D25                     l2427:
  4697  1D25  3001               	movlw	1
  4698  1D26  00F4               	movwf	??___awmod
  4699  1D27  0874               	movf	??___awmod,w
  4700  1D28  07F5               	addwf	___awmod@counter,f
  4701  1D29                     l2429:
  4702  1D29  1FF1               	btfss	___awmod@divisor+1,7
  4703  1D2A  2D2C               	goto	u3341
  4704  1D2B  2D2D               	goto	u3340
  4705  1D2C                     u3341:
  4706  1D2C  2D1E               	goto	l2425
  4707  1D2D                     u3340:
  4708  1D2D                     l2431:
  4709  1D2D  0871               	movf	___awmod@divisor+1,w
  4710  1D2E  0273               	subwf	___awmod@dividend+1,w
  4711  1D2F  1D03               	skipz
  4712  1D30  2D33               	goto	u3355
  4713  1D31  0870               	movf	___awmod@divisor,w
  4714  1D32  0272               	subwf	___awmod@dividend,w
  4715  1D33                     u3355:
  4716  1D33  1C03               	skipc
  4717  1D34  2D36               	goto	u3351
  4718  1D35  2D37               	goto	u3350
  4719  1D36                     u3351:
  4720  1D36  2D3D               	goto	l2435
  4721  1D37                     u3350:
  4722  1D37                     l2433:
  4723  1D37  0870               	movf	___awmod@divisor,w
  4724  1D38  02F2               	subwf	___awmod@dividend,f
  4725  1D39  0871               	movf	___awmod@divisor+1,w
  4726  1D3A  1C03               	skipc
  4727  1D3B  03F3               	decf	___awmod@dividend+1,f
  4728  1D3C  02F3               	subwf	___awmod@dividend+1,f
  4729  1D3D                     l2435:
  4730  1D3D  3001               	movlw	1
  4731  1D3E                     u3365:
  4732  1D3E  1003               	clrc
  4733  1D3F  0CF1               	rrf	___awmod@divisor+1,f
  4734  1D40  0CF0               	rrf	___awmod@divisor,f
  4735  1D41  3EFF               	addlw	-1
  4736  1D42  1D03               	skipz
  4737  1D43  2D3E               	goto	u3365
  4738  1D44                     l2437:
  4739  1D44  3001               	movlw	1
  4740  1D45  02F5               	subwf	___awmod@counter,f
  4741  1D46  1D03               	btfss	3,2
  4742  1D47  2D49               	goto	u3371
  4743  1D48  2D4A               	goto	u3370
  4744  1D49                     u3371:
  4745  1D49  2D2D               	goto	l2431
  4746  1D4A                     u3370:
  4747  1D4A                     l2439:
  4748  1D4A  0876               	movf	___awmod@sign,w
  4749  1D4B  1903               	btfsc	3,2
  4750  1D4C  2D4E               	goto	u3381
  4751  1D4D  2D4F               	goto	u3380
  4752  1D4E                     u3381:
  4753  1D4E  2D54               	goto	l2443
  4754  1D4F                     u3380:
  4755  1D4F                     l2441:
  4756  1D4F  09F2               	comf	___awmod@dividend,f
  4757  1D50  09F3               	comf	___awmod@dividend+1,f
  4758  1D51  0AF2               	incf	___awmod@dividend,f
  4759  1D52  1903               	skipnz
  4760  1D53  0AF3               	incf	___awmod@dividend+1,f
  4761  1D54                     l2443:
  4762  1D54  0873               	movf	___awmod@dividend+1,w
  4763  1D55  00F1               	movwf	?___awmod+1
  4764  1D56  0872               	movf	___awmod@dividend,w
  4765  1D57  00F0               	movwf	?___awmod
  4766  1D58                     l504:
  4767  1D58  0008               	return
  4768  1D59                     __end_of___awmod:
  4769                           
  4770                           	psect	text4
  4771  1DBF                     __ptext4:	
  4772 ;; *************** function ___awdiv *****************
  4773 ;; Defined at:
  4774 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  divisor         2    7[COMMON] int 
  4777 ;;  dividend        2    9[COMMON] int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  quotient        2    2[BANK0 ] int 
  4780 ;;  sign            1    1[BANK0 ] unsigned char 
  4781 ;;  counter         1    0[BANK0 ] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2    7[COMMON] int 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4791 ;;      Params:         4       0       0       0       0
  4792 ;;      Locals:         0       4       0       0       0
  4793 ;;      Temps:          1       0       0       0       0
  4794 ;;      Totals:         5       4       0       0       0
  4795 ;;Total ram usage:        9 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_scale
  4801 ;;		_sprintf
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function ___awdiv
  4807  1DBF                     ___awdiv:
  4808  1DBF                     l2365:	
  4809                           ;incstack = 0
  4810                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4811                           
  4812  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  4813  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  4814  1DC1  01A1               	clrf	___awdiv@sign
  4815  1DC2                     l2367:
  4816  1DC2  1FF8               	btfss	___awdiv@divisor+1,7
  4817  1DC3  2DC5               	goto	u3201
  4818  1DC4  2DC6               	goto	u3200
  4819  1DC5                     u3201:
  4820  1DC5  2DCD               	goto	l2373
  4821  1DC6                     u3200:
  4822  1DC6                     l2369:
  4823  1DC6  09F7               	comf	___awdiv@divisor,f
  4824  1DC7  09F8               	comf	___awdiv@divisor+1,f
  4825  1DC8  0AF7               	incf	___awdiv@divisor,f
  4826  1DC9  1903               	skipnz
  4827  1DCA  0AF8               	incf	___awdiv@divisor+1,f
  4828  1DCB                     l2371:
  4829  1DCB  01A1               	clrf	___awdiv@sign
  4830  1DCC  0AA1               	incf	___awdiv@sign,f
  4831  1DCD                     l2373:
  4832  1DCD  1FFA               	btfss	___awdiv@dividend+1,7
  4833  1DCE  2DD0               	goto	u3211
  4834  1DCF  2DD1               	goto	u3210
  4835  1DD0                     u3211:
  4836  1DD0  2DDA               	goto	l2379
  4837  1DD1                     u3210:
  4838  1DD1                     l2375:
  4839  1DD1  09F9               	comf	___awdiv@dividend,f
  4840  1DD2  09FA               	comf	___awdiv@dividend+1,f
  4841  1DD3  0AF9               	incf	___awdiv@dividend,f
  4842  1DD4  1903               	skipnz
  4843  1DD5  0AFA               	incf	___awdiv@dividend+1,f
  4844  1DD6                     l2377:
  4845  1DD6  3001               	movlw	1
  4846  1DD7  00FB               	movwf	??___awdiv
  4847  1DD8  087B               	movf	??___awdiv,w
  4848  1DD9  06A1               	xorwf	___awdiv@sign,f
  4849  1DDA                     l2379:
  4850  1DDA  01A2               	clrf	___awdiv@quotient
  4851  1DDB  01A3               	clrf	___awdiv@quotient+1
  4852  1DDC                     l2381:
  4853  1DDC  0877               	movf	___awdiv@divisor,w
  4854  1DDD  0478               	iorwf	___awdiv@divisor+1,w
  4855  1DDE  1903               	btfsc	3,2
  4856  1DDF  2DE1               	goto	u3221
  4857  1DE0  2DE2               	goto	u3220
  4858  1DE1                     u3221:
  4859  1DE1  2E19               	goto	l2401
  4860  1DE2                     u3220:
  4861  1DE2                     l2383:
  4862  1DE2  01A0               	clrf	___awdiv@counter
  4863  1DE3  0AA0               	incf	___awdiv@counter,f
  4864  1DE4  2DF0               	goto	l2389
  4865  1DE5                     l2385:
  4866  1DE5  3001               	movlw	1
  4867  1DE6                     u3235:
  4868  1DE6  1003               	clrc
  4869  1DE7  0DF7               	rlf	___awdiv@divisor,f
  4870  1DE8  0DF8               	rlf	___awdiv@divisor+1,f
  4871  1DE9  3EFF               	addlw	-1
  4872  1DEA  1D03               	skipz
  4873  1DEB  2DE6               	goto	u3235
  4874  1DEC                     l2387:
  4875  1DEC  3001               	movlw	1
  4876  1DED  00FB               	movwf	??___awdiv
  4877  1DEE  087B               	movf	??___awdiv,w
  4878  1DEF  07A0               	addwf	___awdiv@counter,f
  4879  1DF0                     l2389:
  4880  1DF0  1FF8               	btfss	___awdiv@divisor+1,7
  4881  1DF1  2DF3               	goto	u3241
  4882  1DF2  2DF4               	goto	u3240
  4883  1DF3                     u3241:
  4884  1DF3  2DE5               	goto	l2385
  4885  1DF4                     u3240:
  4886  1DF4                     l2391:
  4887  1DF4  3001               	movlw	1
  4888  1DF5                     u3255:
  4889  1DF5  1003               	clrc
  4890  1DF6  0DA2               	rlf	___awdiv@quotient,f
  4891  1DF7  0DA3               	rlf	___awdiv@quotient+1,f
  4892  1DF8  3EFF               	addlw	-1
  4893  1DF9  1D03               	skipz
  4894  1DFA  2DF5               	goto	u3255
  4895  1DFB  0878               	movf	___awdiv@divisor+1,w
  4896  1DFC  027A               	subwf	___awdiv@dividend+1,w
  4897  1DFD  1D03               	skipz
  4898  1DFE  2E01               	goto	u3265
  4899  1DFF  0877               	movf	___awdiv@divisor,w
  4900  1E00  0279               	subwf	___awdiv@dividend,w
  4901  1E01                     u3265:
  4902  1E01  1C03               	skipc
  4903  1E02  2E04               	goto	u3261
  4904  1E03  2E05               	goto	u3260
  4905  1E04                     u3261:
  4906  1E04  2E0C               	goto	l2397
  4907  1E05                     u3260:
  4908  1E05                     l2393:
  4909  1E05  0877               	movf	___awdiv@divisor,w
  4910  1E06  02F9               	subwf	___awdiv@dividend,f
  4911  1E07  0878               	movf	___awdiv@divisor+1,w
  4912  1E08  1C03               	skipc
  4913  1E09  03FA               	decf	___awdiv@dividend+1,f
  4914  1E0A  02FA               	subwf	___awdiv@dividend+1,f
  4915  1E0B                     l2395:
  4916  1E0B  1422               	bsf	___awdiv@quotient,0
  4917  1E0C                     l2397:
  4918  1E0C  3001               	movlw	1
  4919  1E0D                     u3275:
  4920  1E0D  1003               	clrc
  4921  1E0E  0CF8               	rrf	___awdiv@divisor+1,f
  4922  1E0F  0CF7               	rrf	___awdiv@divisor,f
  4923  1E10  3EFF               	addlw	-1
  4924  1E11  1D03               	skipz
  4925  1E12  2E0D               	goto	u3275
  4926  1E13                     l2399:
  4927  1E13  3001               	movlw	1
  4928  1E14  02A0               	subwf	___awdiv@counter,f
  4929  1E15  1D03               	btfss	3,2
  4930  1E16  2E18               	goto	u3281
  4931  1E17  2E19               	goto	u3280
  4932  1E18                     u3281:
  4933  1E18  2DF4               	goto	l2391
  4934  1E19                     u3280:
  4935  1E19                     l2401:
  4936  1E19  0821               	movf	___awdiv@sign,w
  4937  1E1A  1903               	btfsc	3,2
  4938  1E1B  2E1D               	goto	u3291
  4939  1E1C  2E1E               	goto	u3290
  4940  1E1D                     u3291:
  4941  1E1D  2E23               	goto	l2405
  4942  1E1E                     u3290:
  4943  1E1E                     l2403:
  4944  1E1E  09A2               	comf	___awdiv@quotient,f
  4945  1E1F  09A3               	comf	___awdiv@quotient+1,f
  4946  1E20  0AA2               	incf	___awdiv@quotient,f
  4947  1E21  1903               	skipnz
  4948  1E22  0AA3               	incf	___awdiv@quotient+1,f
  4949  1E23                     l2405:
  4950  1E23  0823               	movf	___awdiv@quotient+1,w
  4951  1E24  00F8               	movwf	?___awdiv+1
  4952  1E25  0822               	movf	___awdiv@quotient,w
  4953  1E26  00F7               	movwf	?___awdiv
  4954  1E27                     l491:
  4955  1E27  0008               	return
  4956  1E28                     __end_of___awdiv:
  4957                           
  4958                           	psect	text5
  4959  1003                     __ptext5:	
  4960 ;; *************** function _isdigit *****************
  4961 ;; Defined at:
  4962 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  c               1    wreg     unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  c               1    1[COMMON] unsigned char 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;		None               void
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         0       0       0       0       0
  4977 ;;      Locals:         2       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0
  4979 ;;      Totals:         2       0       0       0       0
  4980 ;;Total ram usage:        2 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_sprintf
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _isdigit
  4991  1003                     _isdigit:
  4992                           
  4993                           ;incstack = 0
  4994                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4995                           ;isdigit@c stored from wreg
  4996  1003  00F1               	movwf	isdigit@c
  4997  1004                     l2907:
  4998  1004  01F0               	clrf	_isdigit$878
  4999  1005                     l2909:
  5000  1005  303A               	movlw	58
  5001  1006  0271               	subwf	isdigit@c,w
  5002  1007  1803               	skipnc
  5003  1008  280A               	goto	u4601
  5004  1009  280B               	goto	u4600
  5005  100A                     u4601:
  5006  100A  2813               	goto	l2915
  5007  100B                     u4600:
  5008  100B                     l2911:
  5009  100B  3030               	movlw	48
  5010  100C  0271               	subwf	isdigit@c,w
  5011  100D  1C03               	skipc
  5012  100E  2810               	goto	u4611
  5013  100F  2811               	goto	u4610
  5014  1010                     u4611:
  5015  1010  2813               	goto	l2915
  5016  1011                     u4610:
  5017  1011                     l2913:
  5018  1011  01F0               	clrf	_isdigit$878
  5019  1012  0AF0               	incf	_isdigit$878,f
  5020  1013                     l2915:
  5021  1013  0C70               	rrf	_isdigit$878,w
  5022  1014                     l825:
  5023  1014  0008               	return
  5024  1015                     __end_of_isdigit:
  5025                           
  5026                           	psect	text6
  5027  136D                     __ptext6:	
  5028 ;; *************** function _fround *****************
  5029 ;; Defined at:
  5030 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  prec            1    wreg     unsigned char 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  prec            1   49[BANK0 ] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  4   30[BANK0 ] unsigned char 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5044 ;;      Params:         0       4       0       0       0
  5045 ;;      Locals:         0       9       0       0       0
  5046 ;;      Temps:          0       7       0       0       0
  5047 ;;      Totals:         0      20       0       0       0
  5048 ;;Total ram usage:       20 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		___flmul
  5053 ;;		___lwdiv
  5054 ;;		___lwmod
  5055 ;; This function is called by:
  5056 ;;		_sprintf
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _fround
  5062  136D                     _fround:
  5063                           
  5064                           ;incstack = 0
  5065                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5066                           ;fround@prec stored from wreg
  5067  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5068  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5069  136F  00D1               	movwf	fround@prec
  5070  1370                     l2849:
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5073  1370  306E               	movlw	110
  5074  1371  0251               	subwf	fround@prec,w
  5075  1372  1C03               	skipc
  5076  1373  2B75               	goto	u4351
  5077  1374  2B76               	goto	u4350
  5078  1375                     u4351:
  5079  1375  2C83               	goto	l2857
  5080  1376                     u4350:
  5081  1376                     l2851:
  5082                           
  5083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5084  1376  303F               	movlw	63
  5085  1377  00A7               	movwf	___flmul@b+3
  5086  1378  3000               	movlw	0
  5087  1379  00A6               	movwf	___flmul@b+2
  5088  137A  3000               	movlw	0
  5089  137B  00A5               	movwf	___flmul@b+1
  5090  137C  3000               	movlw	0
  5091  137D  00A4               	movwf	___flmul@b
  5092  137E  3064               	movlw	100
  5093  137F  00F6               	movwf	___lwdiv@divisor
  5094  1380  3000               	movlw	0
  5095  1381  00F7               	movwf	___lwdiv@divisor+1
  5096  1382  0851               	movf	fround@prec,w
  5097  1383  00C2               	movwf	??_fround
  5098  1384  01C3               	clrf	??_fround+1
  5099  1385  0842               	movf	??_fround,w
  5100  1386  00F8               	movwf	___lwdiv@dividend
  5101  1387  0843               	movf	??_fround+1,w
  5102  1388  00F9               	movwf	___lwdiv@dividend+1
  5103  1389  120A  118A  200A  160A  118A  	fcall	___lwdiv
  5104  138E  0876               	movf	?___lwdiv,w
  5105  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5106  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5107  1391  00C4               	movwf	??_fround+2
  5108  1392  3001               	movlw	1
  5109  1393                     u4365:
  5110  1393  1003               	clrc
  5111  1394  0DC4               	rlf	??_fround+2,f
  5112  1395  3EFF               	addlw	-1
  5113  1396  1D03               	skipz
  5114  1397  2B93               	goto	u4365
  5115  1398  1003               	clrc
  5116  1399  0D44               	rlf	??_fround+2,w
  5117  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5118  139B  0084               	movwf	4
  5119  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  5120  13A1  00C5               	movwf	??_fround+3
  5121  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  5122  13A7  00C6               	movwf	??_fround+4
  5123  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  5124  13AD  00C7               	movwf	??_fround+5
  5125  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  5126  13B3  00C8               	movwf	??_fround+6
  5127  13B4  0848               	movf	??_fround+6,w
  5128  13B5  00AB               	movwf	___flmul@a+3
  5129  13B6  0847               	movf	??_fround+5,w
  5130  13B7  00AA               	movwf	___flmul@a+2
  5131  13B8  0846               	movf	??_fround+4,w
  5132  13B9  00A9               	movwf	___flmul@a+1
  5133  13BA  0845               	movf	??_fround+3,w
  5134  13BB  00A8               	movwf	___flmul@a
  5135  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5136  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5137  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5138  13C3  0827               	movf	?___flmul+3,w
  5139  13C4  00D0               	movwf	_fround$1067+3
  5140  13C5  0826               	movf	?___flmul+2,w
  5141  13C6  00CF               	movwf	_fround$1067+2
  5142  13C7  0825               	movf	?___flmul+1,w
  5143  13C8  00CE               	movwf	_fround$1067+1
  5144  13C9  0824               	movf	?___flmul,w
  5145  13CA  00CD               	movwf	_fround$1067
  5146                           
  5147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5148  13CB  300A               	movlw	10
  5149  13CC  00F6               	movwf	___lwdiv@divisor
  5150  13CD  3000               	movlw	0
  5151  13CE  00F7               	movwf	___lwdiv@divisor+1
  5152  13CF  0851               	movf	fround@prec,w
  5153  13D0  00C2               	movwf	??_fround
  5154  13D1  01C3               	clrf	??_fround+1
  5155  13D2  0842               	movf	??_fround,w
  5156  13D3  00F2               	movwf	___lwmod@dividend
  5157  13D4  0843               	movf	??_fround+1,w
  5158  13D5  00F3               	movwf	___lwmod@dividend+1
  5159  13D6  3064               	movlw	100
  5160  13D7  00F0               	movwf	___lwmod@divisor
  5161  13D8  3000               	movlw	0
  5162  13D9  00F1               	movwf	___lwmod@divisor+1
  5163  13DA  160A  158A  2344  160A  118A  	fcall	___lwmod
  5164  13DF  0871               	movf	?___lwmod+1,w
  5165  13E0  00F9               	movwf	___lwdiv@dividend+1
  5166  13E1  0870               	movf	?___lwmod,w
  5167  13E2  00F8               	movwf	___lwdiv@dividend
  5168  13E3  120A  118A  200A  160A  118A  	fcall	___lwdiv
  5169  13E8  0876               	movf	?___lwdiv,w
  5170  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5171  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5172  13EB  00C4               	movwf	??_fround+2
  5173  13EC  3001               	movlw	1
  5174  13ED                     u4375:
  5175  13ED  1003               	clrc
  5176  13EE  0DC4               	rlf	??_fround+2,f
  5177  13EF  3EFF               	addlw	-1
  5178  13F0  1D03               	skipz
  5179  13F1  2BED               	goto	u4375
  5180  13F2  1003               	clrc
  5181  13F3  0D44               	rlf	??_fround+2,w
  5182  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5183  13F5  0084               	movwf	4
  5184  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5185  13FB  00C5               	movwf	??_fround+3
  5186  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5187  1401  00C6               	movwf	??_fround+4
  5188  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5189  1407  00C7               	movwf	??_fround+5
  5190  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5191  140D  00C8               	movwf	??_fround+6
  5192  140E  0848               	movf	??_fround+6,w
  5193  140F  00A7               	movwf	___flmul@b+3
  5194  1410  0847               	movf	??_fround+5,w
  5195  1411  00A6               	movwf	___flmul@b+2
  5196  1412  0846               	movf	??_fround+4,w
  5197  1413  00A5               	movwf	___flmul@b+1
  5198  1414  0845               	movf	??_fround+3,w
  5199  1415  00A4               	movwf	___flmul@b
  5200  1416  0850               	movf	_fround$1067+3,w
  5201  1417  00AB               	movwf	___flmul@a+3
  5202  1418  084F               	movf	_fround$1067+2,w
  5203  1419  00AA               	movwf	___flmul@a+2
  5204  141A  084E               	movf	_fround$1067+1,w
  5205  141B  00A9               	movwf	___flmul@a+1
  5206  141C  084D               	movf	_fround$1067,w
  5207  141D  00A8               	movwf	___flmul@a
  5208  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5209  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5210  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5211  1425  0827               	movf	?___flmul+3,w
  5212  1426  00CC               	movwf	_fround$1068+3
  5213  1427  0826               	movf	?___flmul+2,w
  5214  1428  00CB               	movwf	_fround$1068+2
  5215  1429  0825               	movf	?___flmul+1,w
  5216  142A  00CA               	movwf	_fround$1068+1
  5217  142B  0824               	movf	?___flmul,w
  5218  142C  00C9               	movwf	_fround$1068
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5221  142D  300A               	movlw	10
  5222  142E  00F0               	movwf	___lwmod@divisor
  5223  142F  3000               	movlw	0
  5224  1430  00F1               	movwf	___lwmod@divisor+1
  5225  1431  0851               	movf	fround@prec,w
  5226  1432  00C2               	movwf	??_fround
  5227  1433  01C3               	clrf	??_fround+1
  5228  1434  0842               	movf	??_fround,w
  5229  1435  00F2               	movwf	___lwmod@dividend
  5230  1436  0843               	movf	??_fround+1,w
  5231  1437  00F3               	movwf	___lwmod@dividend+1
  5232  1438  160A  158A  2344  160A  118A  	fcall	___lwmod
  5233  143D  0870               	movf	?___lwmod,w
  5234  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5235  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5236  1440  00C4               	movwf	??_fround+2
  5237  1441  3001               	movlw	1
  5238  1442                     u4385:
  5239  1442  1003               	clrc
  5240  1443  0DC4               	rlf	??_fround+2,f
  5241  1444  3EFF               	addlw	-1
  5242  1445  1D03               	skipz
  5243  1446  2C42               	goto	u4385
  5244  1447  1003               	clrc
  5245  1448  0D44               	rlf	??_fround+2,w
  5246  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5247  144A  0084               	movwf	4
  5248  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5249  1450  00C5               	movwf	??_fround+3
  5250  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5251  1456  00C6               	movwf	??_fround+4
  5252  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5253  145C  00C7               	movwf	??_fround+5
  5254  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5255  1462  00C8               	movwf	??_fround+6
  5256  1463  0848               	movf	??_fround+6,w
  5257  1464  00A7               	movwf	___flmul@b+3
  5258  1465  0847               	movf	??_fround+5,w
  5259  1466  00A6               	movwf	___flmul@b+2
  5260  1467  0846               	movf	??_fround+4,w
  5261  1468  00A5               	movwf	___flmul@b+1
  5262  1469  0845               	movf	??_fround+3,w
  5263  146A  00A4               	movwf	___flmul@b
  5264  146B  084C               	movf	_fround$1068+3,w
  5265  146C  00AB               	movwf	___flmul@a+3
  5266  146D  084B               	movf	_fround$1068+2,w
  5267  146E  00AA               	movwf	___flmul@a+2
  5268  146F  084A               	movf	_fround$1068+1,w
  5269  1470  00A9               	movwf	___flmul@a+1
  5270  1471  0849               	movf	_fround$1068,w
  5271  1472  00A8               	movwf	___flmul@a
  5272  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5273  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5274  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5275  147A  0827               	movf	?___flmul+3,w
  5276  147B  00C1               	movwf	?_fround+3
  5277  147C  0826               	movf	?___flmul+2,w
  5278  147D  00C0               	movwf	?_fround+2
  5279  147E  0825               	movf	?___flmul+1,w
  5280  147F  00BF               	movwf	?_fround+1
  5281  1480  0824               	movf	?___flmul,w
  5282  1481  00BE               	movwf	?_fround
  5283  1482  2D77               	goto	l252
  5284  1483                     l2857:
  5285  1483  300B               	movlw	11
  5286  1484  0251               	subwf	fround@prec,w
  5287  1485  1C03               	skipc
  5288  1486  2C88               	goto	u4391
  5289  1487  2C89               	goto	u4390
  5290  1488                     u4391:
  5291  1488  2D34               	goto	l2863
  5292  1489                     u4390:
  5293  1489                     l2859:
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5296  1489  303F               	movlw	63
  5297  148A  00A7               	movwf	___flmul@b+3
  5298  148B  3000               	movlw	0
  5299  148C  00A6               	movwf	___flmul@b+2
  5300  148D  3000               	movlw	0
  5301  148E  00A5               	movwf	___flmul@b+1
  5302  148F  3000               	movlw	0
  5303  1490  00A4               	movwf	___flmul@b
  5304  1491  300A               	movlw	10
  5305  1492  00F6               	movwf	___lwdiv@divisor
  5306  1493  3000               	movlw	0
  5307  1494  00F7               	movwf	___lwdiv@divisor+1
  5308  1495  0851               	movf	fround@prec,w
  5309  1496  00C2               	movwf	??_fround
  5310  1497  01C3               	clrf	??_fround+1
  5311  1498  0842               	movf	??_fround,w
  5312  1499  00F8               	movwf	___lwdiv@dividend
  5313  149A  0843               	movf	??_fround+1,w
  5314  149B  00F9               	movwf	___lwdiv@dividend+1
  5315  149C  120A  118A  200A  160A  118A  	fcall	___lwdiv
  5316  14A1  0876               	movf	?___lwdiv,w
  5317  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5318  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5319  14A4  00C4               	movwf	??_fround+2
  5320  14A5  3001               	movlw	1
  5321  14A6                     u4405:
  5322  14A6  1003               	clrc
  5323  14A7  0DC4               	rlf	??_fround+2,f
  5324  14A8  3EFF               	addlw	-1
  5325  14A9  1D03               	skipz
  5326  14AA  2CA6               	goto	u4405
  5327  14AB  1003               	clrc
  5328  14AC  0D44               	rlf	??_fround+2,w
  5329  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5330  14AE  0084               	movwf	4
  5331  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5332  14B4  00C5               	movwf	??_fround+3
  5333  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5334  14BA  00C6               	movwf	??_fround+4
  5335  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5336  14C0  00C7               	movwf	??_fround+5
  5337  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5338  14C6  00C8               	movwf	??_fround+6
  5339  14C7  0848               	movf	??_fround+6,w
  5340  14C8  00AB               	movwf	___flmul@a+3
  5341  14C9  0847               	movf	??_fround+5,w
  5342  14CA  00AA               	movwf	___flmul@a+2
  5343  14CB  0846               	movf	??_fround+4,w
  5344  14CC  00A9               	movwf	___flmul@a+1
  5345  14CD  0845               	movf	??_fround+3,w
  5346  14CE  00A8               	movwf	___flmul@a
  5347  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5348  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5349  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5350  14D6  0827               	movf	?___flmul+3,w
  5351  14D7  00D0               	movwf	_fround$1067+3
  5352  14D8  0826               	movf	?___flmul+2,w
  5353  14D9  00CF               	movwf	_fround$1067+2
  5354  14DA  0825               	movf	?___flmul+1,w
  5355  14DB  00CE               	movwf	_fround$1067+1
  5356  14DC  0824               	movf	?___flmul,w
  5357  14DD  00CD               	movwf	_fround$1067
  5358                           
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5360  14DE  300A               	movlw	10
  5361  14DF  00F0               	movwf	___lwmod@divisor
  5362  14E0  3000               	movlw	0
  5363  14E1  00F1               	movwf	___lwmod@divisor+1
  5364  14E2  0851               	movf	fround@prec,w
  5365  14E3  00C2               	movwf	??_fround
  5366  14E4  01C3               	clrf	??_fround+1
  5367  14E5  0842               	movf	??_fround,w
  5368  14E6  00F2               	movwf	___lwmod@dividend
  5369  14E7  0843               	movf	??_fround+1,w
  5370  14E8  00F3               	movwf	___lwmod@dividend+1
  5371  14E9  160A  158A  2344  160A  118A  	fcall	___lwmod
  5372  14EE  0870               	movf	?___lwmod,w
  5373  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5374  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5375  14F1  00C4               	movwf	??_fround+2
  5376  14F2  3001               	movlw	1
  5377  14F3                     u4415:
  5378  14F3  1003               	clrc
  5379  14F4  0DC4               	rlf	??_fround+2,f
  5380  14F5  3EFF               	addlw	-1
  5381  14F6  1D03               	skipz
  5382  14F7  2CF3               	goto	u4415
  5383  14F8  1003               	clrc
  5384  14F9  0D44               	rlf	??_fround+2,w
  5385  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5386  14FB  0084               	movwf	4
  5387  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5388  1501  00C5               	movwf	??_fround+3
  5389  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  5390  1507  00C6               	movwf	??_fround+4
  5391  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  5392  150D  00C7               	movwf	??_fround+5
  5393  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  5394  1513  00C8               	movwf	??_fround+6
  5395  1514  0848               	movf	??_fround+6,w
  5396  1515  00A7               	movwf	___flmul@b+3
  5397  1516  0847               	movf	??_fround+5,w
  5398  1517  00A6               	movwf	___flmul@b+2
  5399  1518  0846               	movf	??_fround+4,w
  5400  1519  00A5               	movwf	___flmul@b+1
  5401  151A  0845               	movf	??_fround+3,w
  5402  151B  00A4               	movwf	___flmul@b
  5403  151C  0850               	movf	_fround$1067+3,w
  5404  151D  00AB               	movwf	___flmul@a+3
  5405  151E  084F               	movf	_fround$1067+2,w
  5406  151F  00AA               	movwf	___flmul@a+2
  5407  1520  084E               	movf	_fround$1067+1,w
  5408  1521  00A9               	movwf	___flmul@a+1
  5409  1522  084D               	movf	_fround$1067,w
  5410  1523  00A8               	movwf	___flmul@a
  5411  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5412  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5413  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5414  152B  0827               	movf	?___flmul+3,w
  5415  152C  00C1               	movwf	?_fround+3
  5416  152D  0826               	movf	?___flmul+2,w
  5417  152E  00C0               	movwf	?_fround+2
  5418  152F  0825               	movf	?___flmul+1,w
  5419  1530  00BF               	movwf	?_fround+1
  5420  1531  0824               	movf	?___flmul,w
  5421  1532  00BE               	movwf	?_fround
  5422  1533  2D77               	goto	l252
  5423  1534                     l2863:
  5424                           
  5425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5426  1534  303F               	movlw	63
  5427  1535  00A7               	movwf	___flmul@b+3
  5428  1536  3000               	movlw	0
  5429  1537  00A6               	movwf	___flmul@b+2
  5430  1538  3000               	movlw	0
  5431  1539  00A5               	movwf	___flmul@b+1
  5432  153A  3000               	movlw	0
  5433  153B  00A4               	movwf	___flmul@b
  5434  153C  0851               	movf	fround@prec,w
  5435  153D  00C2               	movwf	??_fround
  5436  153E  3001               	movlw	1
  5437  153F                     u4425:
  5438  153F  1003               	clrc
  5439  1540  0DC2               	rlf	??_fround,f
  5440  1541  3EFF               	addlw	-1
  5441  1542  1D03               	skipz
  5442  1543  2D3F               	goto	u4425
  5443  1544  1003               	clrc
  5444  1545  0D42               	rlf	??_fround,w
  5445  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5446  1547  0084               	movwf	4
  5447  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  5448  154D  00C3               	movwf	??_fround+1
  5449  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  5450  1553  00C4               	movwf	??_fround+2
  5451  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  5452  1559  00C5               	movwf	??_fround+3
  5453  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  5454  155F  00C6               	movwf	??_fround+4
  5455  1560  0846               	movf	??_fround+4,w
  5456  1561  00AB               	movwf	___flmul@a+3
  5457  1562  0845               	movf	??_fround+3,w
  5458  1563  00AA               	movwf	___flmul@a+2
  5459  1564  0844               	movf	??_fround+2,w
  5460  1565  00A9               	movwf	___flmul@a+1
  5461  1566  0843               	movf	??_fround+1,w
  5462  1567  00A8               	movwf	___flmul@a
  5463  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5464  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5465  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5466  156F  0827               	movf	?___flmul+3,w
  5467  1570  00C1               	movwf	?_fround+3
  5468  1571  0826               	movf	?___flmul+2,w
  5469  1572  00C0               	movwf	?_fround+2
  5470  1573  0825               	movf	?___flmul+1,w
  5471  1574  00BF               	movwf	?_fround+1
  5472  1575  0824               	movf	?___flmul,w
  5473  1576  00BE               	movwf	?_fround
  5474  1577                     l252:
  5475  1577  0008               	return
  5476  1578                     __end_of_fround:
  5477                           
  5478                           	psect	text7
  5479  1B44                     __ptext7:	
  5480 ;; *************** function ___lwmod *****************
  5481 ;; Defined at:
  5482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  divisor         2    0[COMMON] unsigned int 
  5485 ;;  dividend        2    2[COMMON] unsigned int 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;  counter         1    5[COMMON] unsigned char 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  2    0[COMMON] unsigned int 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5497 ;;      Params:         4       0       0       0       0
  5498 ;;      Locals:         1       0       0       0       0
  5499 ;;      Temps:          1       0       0       0       0
  5500 ;;      Totals:         6       0       0       0       0
  5501 ;;Total ram usage:        6 bytes
  5502 ;; Hardware stack levels used: 1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_fround
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function ___lwmod
  5512  1B44                     ___lwmod:
  5513  1B44                     l2473:	
  5514                           ;incstack = 0
  5515                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5516                           
  5517  1B44  0870               	movf	___lwmod@divisor,w
  5518  1B45  0471               	iorwf	___lwmod@divisor+1,w
  5519  1B46  1903               	btfsc	3,2
  5520  1B47  2B49               	goto	u3461
  5521  1B48  2B4A               	goto	u3460
  5522  1B49                     u3461:
  5523  1B49  2B79               	goto	l2491
  5524  1B4A                     u3460:
  5525  1B4A                     l2475:
  5526  1B4A  01F5               	clrf	___lwmod@counter
  5527  1B4B  0AF5               	incf	___lwmod@counter,f
  5528  1B4C  2B58               	goto	l2481
  5529  1B4D                     l2477:
  5530  1B4D  3001               	movlw	1
  5531  1B4E                     u3475:
  5532  1B4E  1003               	clrc
  5533  1B4F  0DF0               	rlf	___lwmod@divisor,f
  5534  1B50  0DF1               	rlf	___lwmod@divisor+1,f
  5535  1B51  3EFF               	addlw	-1
  5536  1B52  1D03               	skipz
  5537  1B53  2B4E               	goto	u3475
  5538  1B54                     l2479:
  5539  1B54  3001               	movlw	1
  5540  1B55  00F4               	movwf	??___lwmod
  5541  1B56  0874               	movf	??___lwmod,w
  5542  1B57  07F5               	addwf	___lwmod@counter,f
  5543  1B58                     l2481:
  5544  1B58  1FF1               	btfss	___lwmod@divisor+1,7
  5545  1B59  2B5B               	goto	u3481
  5546  1B5A  2B5C               	goto	u3480
  5547  1B5B                     u3481:
  5548  1B5B  2B4D               	goto	l2477
  5549  1B5C                     u3480:
  5550  1B5C                     l2483:
  5551  1B5C  0871               	movf	___lwmod@divisor+1,w
  5552  1B5D  0273               	subwf	___lwmod@dividend+1,w
  5553  1B5E  1D03               	skipz
  5554  1B5F  2B62               	goto	u3495
  5555  1B60  0870               	movf	___lwmod@divisor,w
  5556  1B61  0272               	subwf	___lwmod@dividend,w
  5557  1B62                     u3495:
  5558  1B62  1C03               	skipc
  5559  1B63  2B65               	goto	u3491
  5560  1B64  2B66               	goto	u3490
  5561  1B65                     u3491:
  5562  1B65  2B6C               	goto	l2487
  5563  1B66                     u3490:
  5564  1B66                     l2485:
  5565  1B66  0870               	movf	___lwmod@divisor,w
  5566  1B67  02F2               	subwf	___lwmod@dividend,f
  5567  1B68  0871               	movf	___lwmod@divisor+1,w
  5568  1B69  1C03               	skipc
  5569  1B6A  03F3               	decf	___lwmod@dividend+1,f
  5570  1B6B  02F3               	subwf	___lwmod@dividend+1,f
  5571  1B6C                     l2487:
  5572  1B6C  3001               	movlw	1
  5573  1B6D                     u3505:
  5574  1B6D  1003               	clrc
  5575  1B6E  0CF1               	rrf	___lwmod@divisor+1,f
  5576  1B6F  0CF0               	rrf	___lwmod@divisor,f
  5577  1B70  3EFF               	addlw	-1
  5578  1B71  1D03               	skipz
  5579  1B72  2B6D               	goto	u3505
  5580  1B73                     l2489:
  5581  1B73  3001               	movlw	1
  5582  1B74  02F5               	subwf	___lwmod@counter,f
  5583  1B75  1D03               	btfss	3,2
  5584  1B76  2B78               	goto	u3511
  5585  1B77  2B79               	goto	u3510
  5586  1B78                     u3511:
  5587  1B78  2B5C               	goto	l2483
  5588  1B79                     u3510:
  5589  1B79                     l2491:
  5590  1B79  0873               	movf	___lwmod@dividend+1,w
  5591  1B7A  00F1               	movwf	?___lwmod+1
  5592  1B7B  0872               	movf	___lwmod@dividend,w
  5593  1B7C  00F0               	movwf	?___lwmod
  5594  1B7D                     l654:
  5595  1B7D  0008               	return
  5596  1B7E                     __end_of___lwmod:
  5597                           
  5598                           	psect	text8
  5599  000A                     __ptext8:	
  5600 ;; *************** function ___lwdiv *****************
  5601 ;; Defined at:
  5602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  divisor         2    6[COMMON] unsigned int 
  5605 ;;  dividend        2    8[COMMON] unsigned int 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  quotient        2   11[COMMON] unsigned int 
  5608 ;;  counter         1   13[COMMON] unsigned char 
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  2    6[COMMON] unsigned int 
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5618 ;;      Params:         4       0       0       0       0
  5619 ;;      Locals:         3       0       0       0       0
  5620 ;;      Temps:          1       0       0       0       0
  5621 ;;      Totals:         8       0       0       0       0
  5622 ;;Total ram usage:        8 bytes
  5623 ;; Hardware stack levels used: 1
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_fround
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           
  5632                           ;psect for function ___lwdiv
  5633  000A                     ___lwdiv:
  5634  000A                     l2447:	
  5635                           ;incstack = 0
  5636                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5637                           
  5638  000A  01FB               	clrf	___lwdiv@quotient
  5639  000B  01FC               	clrf	___lwdiv@quotient+1
  5640  000C                     l2449:
  5641  000C  0876               	movf	___lwdiv@divisor,w
  5642  000D  0477               	iorwf	___lwdiv@divisor+1,w
  5643  000E  1903               	btfsc	3,2
  5644  000F  2811               	goto	u3391
  5645  0010  2812               	goto	u3390
  5646  0011                     u3391:
  5647  0011  2849               	goto	l2469
  5648  0012                     u3390:
  5649  0012                     l2451:
  5650  0012  01FD               	clrf	___lwdiv@counter
  5651  0013  0AFD               	incf	___lwdiv@counter,f
  5652  0014  2820               	goto	l2457
  5653  0015                     l2453:
  5654  0015  3001               	movlw	1
  5655  0016                     u3405:
  5656  0016  1003               	clrc
  5657  0017  0DF6               	rlf	___lwdiv@divisor,f
  5658  0018  0DF7               	rlf	___lwdiv@divisor+1,f
  5659  0019  3EFF               	addlw	-1
  5660  001A  1D03               	skipz
  5661  001B  2816               	goto	u3405
  5662  001C                     l2455:
  5663  001C  3001               	movlw	1
  5664  001D  00FA               	movwf	??___lwdiv
  5665  001E  087A               	movf	??___lwdiv,w
  5666  001F  07FD               	addwf	___lwdiv@counter,f
  5667  0020                     l2457:
  5668  0020  1FF7               	btfss	___lwdiv@divisor+1,7
  5669  0021  2823               	goto	u3411
  5670  0022  2824               	goto	u3410
  5671  0023                     u3411:
  5672  0023  2815               	goto	l2453
  5673  0024                     u3410:
  5674  0024                     l2459:
  5675  0024  3001               	movlw	1
  5676  0025                     u3425:
  5677  0025  1003               	clrc
  5678  0026  0DFB               	rlf	___lwdiv@quotient,f
  5679  0027  0DFC               	rlf	___lwdiv@quotient+1,f
  5680  0028  3EFF               	addlw	-1
  5681  0029  1D03               	skipz
  5682  002A  2825               	goto	u3425
  5683  002B  0877               	movf	___lwdiv@divisor+1,w
  5684  002C  0279               	subwf	___lwdiv@dividend+1,w
  5685  002D  1D03               	skipz
  5686  002E  2831               	goto	u3435
  5687  002F  0876               	movf	___lwdiv@divisor,w
  5688  0030  0278               	subwf	___lwdiv@dividend,w
  5689  0031                     u3435:
  5690  0031  1C03               	skipc
  5691  0032  2834               	goto	u3431
  5692  0033  2835               	goto	u3430
  5693  0034                     u3431:
  5694  0034  283C               	goto	l2465
  5695  0035                     u3430:
  5696  0035                     l2461:
  5697  0035  0876               	movf	___lwdiv@divisor,w
  5698  0036  02F8               	subwf	___lwdiv@dividend,f
  5699  0037  0877               	movf	___lwdiv@divisor+1,w
  5700  0038  1C03               	skipc
  5701  0039  03F9               	decf	___lwdiv@dividend+1,f
  5702  003A  02F9               	subwf	___lwdiv@dividend+1,f
  5703  003B                     l2463:
  5704  003B  147B               	bsf	___lwdiv@quotient,0
  5705  003C                     l2465:
  5706  003C  3001               	movlw	1
  5707  003D                     u3445:
  5708  003D  1003               	clrc
  5709  003E  0CF7               	rrf	___lwdiv@divisor+1,f
  5710  003F  0CF6               	rrf	___lwdiv@divisor,f
  5711  0040  3EFF               	addlw	-1
  5712  0041  1D03               	skipz
  5713  0042  283D               	goto	u3445
  5714  0043                     l2467:
  5715  0043  3001               	movlw	1
  5716  0044  02FD               	subwf	___lwdiv@counter,f
  5717  0045  1D03               	btfss	3,2
  5718  0046  2848               	goto	u3451
  5719  0047  2849               	goto	u3450
  5720  0048                     u3451:
  5721  0048  2824               	goto	l2459
  5722  0049                     u3450:
  5723  0049                     l2469:
  5724  0049  087C               	movf	___lwdiv@quotient+1,w
  5725  004A  00F7               	movwf	?___lwdiv+1
  5726  004B  087B               	movf	___lwdiv@quotient,w
  5727  004C  00F6               	movwf	?___lwdiv
  5728  004D                     l644:
  5729  004D  0008               	return
  5730  004E                     __end_of___lwdiv:
  5731                           
  5732                           	psect	text9
  5733  1015                     __ptext9:	
  5734 ;; *************** function __tdiv_to_l_ *****************
  5735 ;; Defined at:
  5736 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  f1              4    0[COMMON] float 
  5739 ;;  f2              4    4[COMMON] float 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  quot            4    0[BANK0 ] unsigned long 
  5742 ;;  exp1            1    5[BANK0 ] unsigned char 
  5743 ;;  cntr            1    4[BANK0 ] unsigned char 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  4    0[COMMON] unsigned long 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5753 ;;      Params:         8       0       0       0       0
  5754 ;;      Locals:         0       6       0       0       0
  5755 ;;      Temps:          4       0       0       0       0
  5756 ;;      Totals:        12       6       0       0       0
  5757 ;;Total ram usage:       18 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_sprintf
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function __tdiv_to_l_
  5768  1015                     __tdiv_to_l_:
  5769  1015                     l2919:	
  5770                           ;incstack = 0
  5771                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5772                           
  5773  1015  0870               	movf	__tdiv_to_l_@f1,w
  5774  1016  00F8               	movwf	??__tdiv_to_l_
  5775  1017  0871               	movf	__tdiv_to_l_@f1+1,w
  5776  1018  00F9               	movwf	??__tdiv_to_l_+1
  5777  1019  0872               	movf	__tdiv_to_l_@f1+2,w
  5778  101A  00FA               	movwf	??__tdiv_to_l_+2
  5779  101B  1003               	clrc
  5780  101C  0D79               	rlf	??__tdiv_to_l_+1,w
  5781  101D  0D7A               	rlf	??__tdiv_to_l_+2,w
  5782  101E  00FB               	movwf	??__tdiv_to_l_+3
  5783  101F  087B               	movf	??__tdiv_to_l_+3,w
  5784  1020  1283               	bcf	3,5	;RP0=0, select bank0
  5785  1021  1303               	bcf	3,6	;RP1=0, select bank0
  5786  1022  00A5               	movwf	__tdiv_to_l_@exp1
  5787  1023  0825               	movf	__tdiv_to_l_@exp1,w
  5788  1024  1D03               	btfss	3,2
  5789  1025  2827               	goto	u4621
  5790  1026  2828               	goto	u4620
  5791  1027                     u4621:
  5792  1027  2831               	goto	l2925
  5793  1028                     u4620:
  5794  1028                     l2921:
  5795  1028  3000               	movlw	0
  5796  1029  00F3               	movwf	?__tdiv_to_l_+3
  5797  102A  3000               	movlw	0
  5798  102B  00F2               	movwf	?__tdiv_to_l_+2
  5799  102C  3000               	movlw	0
  5800  102D  00F1               	movwf	?__tdiv_to_l_+1
  5801  102E  3000               	movlw	0
  5802  102F  00F0               	movwf	?__tdiv_to_l_
  5803  1030  28D1               	goto	l555
  5804  1031                     l2925:
  5805  1031  0874               	movf	__tdiv_to_l_@f2,w
  5806  1032  00F8               	movwf	??__tdiv_to_l_
  5807  1033  0875               	movf	__tdiv_to_l_@f2+1,w
  5808  1034  00F9               	movwf	??__tdiv_to_l_+1
  5809  1035  0876               	movf	__tdiv_to_l_@f2+2,w
  5810  1036  00FA               	movwf	??__tdiv_to_l_+2
  5811  1037  1003               	clrc
  5812  1038  0D79               	rlf	??__tdiv_to_l_+1,w
  5813  1039  0D7A               	rlf	??__tdiv_to_l_+2,w
  5814  103A  00FB               	movwf	??__tdiv_to_l_+3
  5815  103B  087B               	movf	??__tdiv_to_l_+3,w
  5816  103C  00A4               	movwf	__tdiv_to_l_@cntr
  5817  103D  0824               	movf	__tdiv_to_l_@cntr,w
  5818  103E  1D03               	btfss	3,2
  5819  103F  2841               	goto	u4631
  5820  1040  2842               	goto	u4630
  5821  1041                     u4631:
  5822  1041  2843               	goto	l556
  5823  1042                     u4630:
  5824  1042  2828               	goto	l2921
  5825  1043                     l556:
  5826  1043  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5827  1044                     l2931:
  5828  1044  30FF               	movlw	255
  5829  1045  05F0               	andwf	__tdiv_to_l_@f1,f
  5830  1046  30FF               	movlw	255
  5831  1047  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5832  1048  3000               	movlw	0
  5833  1049  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5834  104A                     l2933:
  5835  104A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5836  104B  30FF               	movlw	255
  5837  104C  05F4               	andwf	__tdiv_to_l_@f2,f
  5838  104D  30FF               	movlw	255
  5839  104E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5840  104F  3000               	movlw	0
  5841  1050  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5842  1051  3000               	movlw	0
  5843  1052  00A3               	movwf	__tdiv_to_l_@quot+3
  5844  1053  3000               	movlw	0
  5845  1054  00A2               	movwf	__tdiv_to_l_@quot+2
  5846  1055  3000               	movlw	0
  5847  1056  00A1               	movwf	__tdiv_to_l_@quot+1
  5848  1057  3000               	movlw	0
  5849  1058  00A0               	movwf	__tdiv_to_l_@quot
  5850  1059                     l2935:
  5851  1059  307F               	movlw	127
  5852  105A  02A5               	subwf	__tdiv_to_l_@exp1,f
  5853  105B                     l2937:
  5854  105B  3098               	movlw	152
  5855  105C  0724               	addwf	__tdiv_to_l_@cntr,w
  5856  105D  00F8               	movwf	??__tdiv_to_l_
  5857  105E  0878               	movf	??__tdiv_to_l_,w
  5858  105F  02A5               	subwf	__tdiv_to_l_@exp1,f
  5859  1060  3018               	movlw	24
  5860  1061  00F8               	movwf	??__tdiv_to_l_
  5861  1062  0878               	movf	??__tdiv_to_l_,w
  5862  1063  00A4               	movwf	__tdiv_to_l_@cntr
  5863  1064                     l2939:
  5864  1064  3001               	movlw	1
  5865  1065  00F8               	movwf	??__tdiv_to_l_
  5866  1066                     u4645:
  5867  1066  1003               	clrc
  5868  1067  0DA0               	rlf	__tdiv_to_l_@quot,f
  5869  1068  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5870  1069  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5871  106A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5872  106B  0BF8               	decfsz	??__tdiv_to_l_,f
  5873  106C  2866               	goto	u4645
  5874  106D                     l2941:
  5875  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  5876  106E  0272               	subwf	__tdiv_to_l_@f1+2,w
  5877  106F  1D03               	skipz
  5878  1070  2877               	goto	u4655
  5879  1071  0875               	movf	__tdiv_to_l_@f2+1,w
  5880  1072  0271               	subwf	__tdiv_to_l_@f1+1,w
  5881  1073  1D03               	skipz
  5882  1074  2877               	goto	u4655
  5883  1075  0874               	movf	__tdiv_to_l_@f2,w
  5884  1076  0270               	subwf	__tdiv_to_l_@f1,w
  5885  1077                     u4655:
  5886  1077  1C03               	skipc
  5887  1078  287A               	goto	u4651
  5888  1079  287B               	goto	u4650
  5889  107A                     u4651:
  5890  107A  2886               	goto	l2947
  5891  107B                     u4650:
  5892  107B                     l2943:
  5893  107B  0874               	movf	__tdiv_to_l_@f2,w
  5894  107C  02F0               	subwf	__tdiv_to_l_@f1,f
  5895  107D  0875               	movf	__tdiv_to_l_@f2+1,w
  5896  107E  1C03               	skipc
  5897  107F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5898  1080  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5899  1081  0876               	movf	__tdiv_to_l_@f2+2,w
  5900  1082  1C03               	skipc
  5901  1083  0A76               	incf	__tdiv_to_l_@f2+2,w
  5902  1084  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5903  1085                     l2945:
  5904  1085  1420               	bsf	__tdiv_to_l_@quot,0
  5905  1086                     l2947:
  5906  1086  3001               	movlw	1
  5907  1087                     u4665:
  5908  1087  1003               	clrc
  5909  1088  0DF0               	rlf	__tdiv_to_l_@f1,f
  5910  1089  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5911  108A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5912  108B  3EFF               	addlw	-1
  5913  108C  1D03               	skipz
  5914  108D  2887               	goto	u4665
  5915  108E                     l2949:
  5916  108E  3001               	movlw	1
  5917  108F  02A4               	subwf	__tdiv_to_l_@cntr,f
  5918  1090  1D03               	btfss	3,2
  5919  1091  2893               	goto	u4671
  5920  1092  2894               	goto	u4670
  5921  1093                     u4671:
  5922  1093  2864               	goto	l2939
  5923  1094                     u4670:
  5924  1094                     l559:
  5925  1094  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5926  1095  2897               	goto	u4681
  5927  1096  2898               	goto	u4680
  5928  1097                     u4681:
  5929  1097  28B2               	goto	l2959
  5930  1098                     u4680:
  5931  1098                     l2951:
  5932  1098  0825               	movf	__tdiv_to_l_@exp1,w
  5933  1099  3A80               	xorlw	128
  5934  109A  3E97               	addlw	151
  5935  109B  1803               	skipnc
  5936  109C  289E               	goto	u4691
  5937  109D  289F               	goto	u4690
  5938  109E                     u4691:
  5939  109E  28A0               	goto	l2957
  5940  109F                     u4690:
  5941  109F  2828               	goto	l2921
  5942  10A0                     l2957:
  5943  10A0  3001               	movlw	1
  5944  10A1                     u4705:
  5945  10A1  1003               	clrc
  5946  10A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5947  10A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5948  10A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5949  10A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  5950  10A6  3EFF               	addlw	-1
  5951  10A7  1D03               	skipz
  5952  10A8  28A1               	goto	u4705
  5953  10A9  3001               	movlw	1
  5954  10AA  00F8               	movwf	??__tdiv_to_l_
  5955  10AB  0878               	movf	??__tdiv_to_l_,w
  5956  10AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  5957  10AD  1D03               	btfss	3,2
  5958  10AE  28B0               	goto	u4711
  5959  10AF  28B1               	goto	u4710
  5960  10B0                     u4711:
  5961  10B0  28A0               	goto	l2957
  5962  10B1                     u4710:
  5963  10B1  28C9               	goto	l2967
  5964  10B2                     l2959:
  5965  10B2  3018               	movlw	24
  5966  10B3  0225               	subwf	__tdiv_to_l_@exp1,w
  5967  10B4  1C03               	skipc
  5968  10B5  28B7               	goto	u4721
  5969  10B6  28B8               	goto	u4720
  5970  10B7                     u4721:
  5971  10B7  28C4               	goto	l566
  5972  10B8                     u4720:
  5973  10B8  2828               	goto	l2921
  5974  10B9                     l2965:
  5975  10B9  3001               	movlw	1
  5976  10BA  00F8               	movwf	??__tdiv_to_l_
  5977  10BB                     u4735:
  5978  10BB  1003               	clrc
  5979  10BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  5980  10BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5981  10BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5982  10BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5983  10C0  0BF8               	decfsz	??__tdiv_to_l_,f
  5984  10C1  28BB               	goto	u4735
  5985  10C2  3001               	movlw	1
  5986  10C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  5987  10C4                     l566:
  5988  10C4  0825               	movf	__tdiv_to_l_@exp1,w
  5989  10C5  1D03               	btfss	3,2
  5990  10C6  28C8               	goto	u4741
  5991  10C7  28C9               	goto	u4740
  5992  10C8                     u4741:
  5993  10C8  28B9               	goto	l2965
  5994  10C9                     u4740:
  5995  10C9                     l2967:
  5996  10C9  0823               	movf	__tdiv_to_l_@quot+3,w
  5997  10CA  00F3               	movwf	?__tdiv_to_l_+3
  5998  10CB  0822               	movf	__tdiv_to_l_@quot+2,w
  5999  10CC  00F2               	movwf	?__tdiv_to_l_+2
  6000  10CD  0821               	movf	__tdiv_to_l_@quot+1,w
  6001  10CE  00F1               	movwf	?__tdiv_to_l_+1
  6002  10CF  0820               	movf	__tdiv_to_l_@quot,w
  6003  10D0  00F0               	movwf	?__tdiv_to_l_
  6004  10D1                     l555:
  6005  10D1  0008               	return
  6006  10D2                     __end_of__tdiv_to_l_:
  6007                           
  6008                           	psect	text10
  6009  10D2                     __ptext10:	
  6010 ;; *************** function __div_to_l_ *****************
  6011 ;; Defined at:
  6012 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  f1              4    0[COMMON] unsigned long 
  6015 ;;  f2              4    4[COMMON] unsigned long 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  quot            4    0[BANK0 ] unsigned long 
  6018 ;;  exp1            1    5[BANK0 ] unsigned char 
  6019 ;;  cntr            1    4[BANK0 ] unsigned char 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  4    0[COMMON] unsigned long 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6029 ;;      Params:         8       0       0       0       0
  6030 ;;      Locals:         0       6       0       0       0
  6031 ;;      Temps:          1       0       0       0       0
  6032 ;;      Totals:         9       6       0       0       0
  6033 ;;Total ram usage:       15 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_sprintf
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           
  6043                           ;psect for function __div_to_l_
  6044  10D2                     __div_to_l_:
  6045  10D2                     l2971:	
  6046                           ;incstack = 0
  6047                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6048                           
  6049  10D2  1003               	clrc
  6050  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  6051  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  6052  10D5  00F8               	movwf	??__div_to_l_
  6053  10D6  0878               	movf	??__div_to_l_,w
  6054  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  6055  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  6056  10D9  00A5               	movwf	__div_to_l_@exp1
  6057  10DA  0825               	movf	__div_to_l_@exp1,w
  6058  10DB  1D03               	btfss	3,2
  6059  10DC  28DE               	goto	u4751
  6060  10DD  28DF               	goto	u4750
  6061  10DE                     u4751:
  6062  10DE  28E8               	goto	l2977
  6063  10DF                     u4750:
  6064  10DF                     l2973:
  6065  10DF  3000               	movlw	0
  6066  10E0  00F3               	movwf	?__div_to_l_+3
  6067  10E1  3000               	movlw	0
  6068  10E2  00F2               	movwf	?__div_to_l_+2
  6069  10E3  3000               	movlw	0
  6070  10E4  00F1               	movwf	?__div_to_l_+1
  6071  10E5  3000               	movlw	0
  6072  10E6  00F0               	movwf	?__div_to_l_
  6073  10E7  298F               	goto	l508
  6074  10E8                     l2977:
  6075  10E8  1003               	clrc
  6076  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  6077  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  6078  10EB  00F8               	movwf	??__div_to_l_
  6079  10EC  0878               	movf	??__div_to_l_,w
  6080  10ED  00A4               	movwf	__div_to_l_@cntr
  6081  10EE  0824               	movf	__div_to_l_@cntr,w
  6082  10EF  1D03               	btfss	3,2
  6083  10F0  28F2               	goto	u4761
  6084  10F1  28F3               	goto	u4760
  6085  10F2                     u4761:
  6086  10F2  28F4               	goto	l509
  6087  10F3                     u4760:
  6088  10F3  28DF               	goto	l2973
  6089  10F4                     l509:
  6090  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  6091  10F5                     l2983:
  6092  10F5  30FF               	movlw	255
  6093  10F6  05F0               	andwf	__div_to_l_@f1,f
  6094  10F7  30FF               	movlw	255
  6095  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  6096  10F9  30FF               	movlw	255
  6097  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  6098  10FB  3000               	movlw	0
  6099  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  6100  10FD                     l2985:
  6101  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  6102  10FE  30FF               	movlw	255
  6103  10FF  05F4               	andwf	__div_to_l_@f2,f
  6104  1100  30FF               	movlw	255
  6105  1101  05F5               	andwf	__div_to_l_@f2+1,f
  6106  1102  30FF               	movlw	255
  6107  1103  05F6               	andwf	__div_to_l_@f2+2,f
  6108  1104  3000               	movlw	0
  6109  1105  05F7               	andwf	__div_to_l_@f2+3,f
  6110  1106  3000               	movlw	0
  6111  1107  00A3               	movwf	__div_to_l_@quot+3
  6112  1108  3000               	movlw	0
  6113  1109  00A2               	movwf	__div_to_l_@quot+2
  6114  110A  3000               	movlw	0
  6115  110B  00A1               	movwf	__div_to_l_@quot+1
  6116  110C  3000               	movlw	0
  6117  110D  00A0               	movwf	__div_to_l_@quot
  6118  110E                     l2987:
  6119  110E  307F               	movlw	127
  6120  110F  02A5               	subwf	__div_to_l_@exp1,f
  6121  1110                     l2989:
  6122  1110  30A0               	movlw	160
  6123  1111  0724               	addwf	__div_to_l_@cntr,w
  6124  1112  00F8               	movwf	??__div_to_l_
  6125  1113  0878               	movf	??__div_to_l_,w
  6126  1114  02A5               	subwf	__div_to_l_@exp1,f
  6127  1115  3020               	movlw	32
  6128  1116  00F8               	movwf	??__div_to_l_
  6129  1117  0878               	movf	??__div_to_l_,w
  6130  1118  00A4               	movwf	__div_to_l_@cntr
  6131  1119                     l2991:
  6132  1119  3001               	movlw	1
  6133  111A  00F8               	movwf	??__div_to_l_
  6134  111B                     u4775:
  6135  111B  1003               	clrc
  6136  111C  0DA0               	rlf	__div_to_l_@quot,f
  6137  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  6138  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  6139  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  6140  1120  0BF8               	decfsz	??__div_to_l_,f
  6141  1121  291B               	goto	u4775
  6142  1122                     l2993:
  6143  1122  0877               	movf	__div_to_l_@f2+3,w
  6144  1123  0273               	subwf	__div_to_l_@f1+3,w
  6145  1124  1D03               	skipz
  6146  1125  2930               	goto	u4785
  6147  1126  0876               	movf	__div_to_l_@f2+2,w
  6148  1127  0272               	subwf	__div_to_l_@f1+2,w
  6149  1128  1D03               	skipz
  6150  1129  2930               	goto	u4785
  6151  112A  0875               	movf	__div_to_l_@f2+1,w
  6152  112B  0271               	subwf	__div_to_l_@f1+1,w
  6153  112C  1D03               	skipz
  6154  112D  2930               	goto	u4785
  6155  112E  0874               	movf	__div_to_l_@f2,w
  6156  112F  0270               	subwf	__div_to_l_@f1,w
  6157  1130                     u4785:
  6158  1130  1C03               	skipc
  6159  1131  2933               	goto	u4781
  6160  1132  2934               	goto	u4780
  6161  1133                     u4781:
  6162  1133  2943               	goto	l2999
  6163  1134                     u4780:
  6164  1134                     l2995:
  6165  1134  0874               	movf	__div_to_l_@f2,w
  6166  1135  02F0               	subwf	__div_to_l_@f1,f
  6167  1136  0875               	movf	__div_to_l_@f2+1,w
  6168  1137  1C03               	skipc
  6169  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  6170  1139  02F1               	subwf	__div_to_l_@f1+1,f
  6171  113A  0876               	movf	__div_to_l_@f2+2,w
  6172  113B  1C03               	skipc
  6173  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  6174  113D  02F2               	subwf	__div_to_l_@f1+2,f
  6175  113E  0877               	movf	__div_to_l_@f2+3,w
  6176  113F  1C03               	skipc
  6177  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  6178  1141  02F3               	subwf	__div_to_l_@f1+3,f
  6179  1142                     l2997:
  6180  1142  1420               	bsf	__div_to_l_@quot,0
  6181  1143                     l2999:
  6182  1143  3001               	movlw	1
  6183  1144  00F8               	movwf	??__div_to_l_
  6184  1145                     u4795:
  6185  1145  1003               	clrc
  6186  1146  0DF0               	rlf	__div_to_l_@f1,f
  6187  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  6188  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  6189  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  6190  114A  0BF8               	decfsz	??__div_to_l_,f
  6191  114B  2945               	goto	u4795
  6192  114C                     l3001:
  6193  114C  3001               	movlw	1
  6194  114D  02A4               	subwf	__div_to_l_@cntr,f
  6195  114E  1D03               	btfss	3,2
  6196  114F  2951               	goto	u4801
  6197  1150  2952               	goto	u4800
  6198  1151                     u4801:
  6199  1151  2919               	goto	l2991
  6200  1152                     u4800:
  6201  1152                     l512:
  6202  1152  1FA5               	btfss	__div_to_l_@exp1,7
  6203  1153  2955               	goto	u4811
  6204  1154  2956               	goto	u4810
  6205  1155                     u4811:
  6206  1155  2970               	goto	l3011
  6207  1156                     u4810:
  6208  1156                     l3003:
  6209  1156  0825               	movf	__div_to_l_@exp1,w
  6210  1157  3A80               	xorlw	128
  6211  1158  3E9F               	addlw	159
  6212  1159  1803               	skipnc
  6213  115A  295C               	goto	u4821
  6214  115B  295D               	goto	u4820
  6215  115C                     u4821:
  6216  115C  295E               	goto	l3009
  6217  115D                     u4820:
  6218  115D  28DF               	goto	l2973
  6219  115E                     l3009:
  6220  115E  3001               	movlw	1
  6221  115F                     u4835:
  6222  115F  1003               	clrc
  6223  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  6224  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  6225  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  6226  1163  0CA0               	rrf	__div_to_l_@quot,f
  6227  1164  3EFF               	addlw	-1
  6228  1165  1D03               	skipz
  6229  1166  295F               	goto	u4835
  6230  1167  3001               	movlw	1
  6231  1168  00F8               	movwf	??__div_to_l_
  6232  1169  0878               	movf	??__div_to_l_,w
  6233  116A  07A5               	addwf	__div_to_l_@exp1,f
  6234  116B  1D03               	btfss	3,2
  6235  116C  296E               	goto	u4841
  6236  116D  296F               	goto	u4840
  6237  116E                     u4841:
  6238  116E  295E               	goto	l3009
  6239  116F                     u4840:
  6240  116F  2987               	goto	l3019
  6241  1170                     l3011:
  6242  1170  3020               	movlw	32
  6243  1171  0225               	subwf	__div_to_l_@exp1,w
  6244  1172  1C03               	skipc
  6245  1173  2975               	goto	u4851
  6246  1174  2976               	goto	u4850
  6247  1175                     u4851:
  6248  1175  2982               	goto	l519
  6249  1176                     u4850:
  6250  1176  28DF               	goto	l2973
  6251  1177                     l3017:
  6252  1177  3001               	movlw	1
  6253  1178  00F8               	movwf	??__div_to_l_
  6254  1179                     u4865:
  6255  1179  1003               	clrc
  6256  117A  0DA0               	rlf	__div_to_l_@quot,f
  6257  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  6258  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  6259  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  6260  117E  0BF8               	decfsz	??__div_to_l_,f
  6261  117F  2979               	goto	u4865
  6262  1180  3001               	movlw	1
  6263  1181  02A5               	subwf	__div_to_l_@exp1,f
  6264  1182                     l519:
  6265  1182  0825               	movf	__div_to_l_@exp1,w
  6266  1183  1D03               	btfss	3,2
  6267  1184  2986               	goto	u4871
  6268  1185  2987               	goto	u4870
  6269  1186                     u4871:
  6270  1186  2977               	goto	l3017
  6271  1187                     u4870:
  6272  1187                     l3019:
  6273  1187  0823               	movf	__div_to_l_@quot+3,w
  6274  1188  00F3               	movwf	?__div_to_l_+3
  6275  1189  0822               	movf	__div_to_l_@quot+2,w
  6276  118A  00F2               	movwf	?__div_to_l_+2
  6277  118B  0821               	movf	__div_to_l_@quot+1,w
  6278  118C  00F1               	movwf	?__div_to_l_+1
  6279  118D  0820               	movf	__div_to_l_@quot,w
  6280  118E  00F0               	movwf	?__div_to_l_
  6281  118F                     l508:
  6282  118F  0008               	return
  6283  1190                     __end_of__div_to_l_:
  6284                           
  6285                           	psect	text11
  6286  1AF8                     __ptext11:	
  6287 ;; *************** function ___wmul *****************
  6288 ;; Defined at:
  6289 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  multiplier      2    0[COMMON] unsigned int 
  6292 ;;  multiplicand    2    2[COMMON] unsigned int 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  product         2    4[COMMON] unsigned int 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  2    0[COMMON] unsigned int 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         4       0       0       0       0
  6305 ;;      Locals:         2       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0
  6307 ;;      Totals:         6       0       0       0       0
  6308 ;;Total ram usage:        6 bytes
  6309 ;; Hardware stack levels used: 1
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_sprintf
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           
  6318                           ;psect for function ___wmul
  6319  1AF8                     ___wmul:
  6320  1AF8                     l3023:	
  6321                           ;incstack = 0
  6322                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6323                           
  6324  1AF8  01F4               	clrf	___wmul@product
  6325  1AF9  01F5               	clrf	___wmul@product+1
  6326  1AFA                     l3025:
  6327  1AFA  1C70               	btfss	___wmul@multiplier,0
  6328  1AFB  2AFD               	goto	u4881
  6329  1AFC  2AFE               	goto	u4880
  6330  1AFD                     u4881:
  6331  1AFD  2B04               	goto	l338
  6332  1AFE                     u4880:
  6333  1AFE                     l3027:
  6334  1AFE  0872               	movf	___wmul@multiplicand,w
  6335  1AFF  07F4               	addwf	___wmul@product,f
  6336  1B00  1803               	skipnc
  6337  1B01  0AF5               	incf	___wmul@product+1,f
  6338  1B02  0873               	movf	___wmul@multiplicand+1,w
  6339  1B03  07F5               	addwf	___wmul@product+1,f
  6340  1B04                     l338:
  6341  1B04  3001               	movlw	1
  6342  1B05                     u4895:
  6343  1B05  1003               	clrc
  6344  1B06  0DF2               	rlf	___wmul@multiplicand,f
  6345  1B07  0DF3               	rlf	___wmul@multiplicand+1,f
  6346  1B08  3EFF               	addlw	-1
  6347  1B09  1D03               	skipz
  6348  1B0A  2B05               	goto	u4895
  6349  1B0B                     l3029:
  6350  1B0B  3001               	movlw	1
  6351  1B0C                     u4905:
  6352  1B0C  1003               	clrc
  6353  1B0D  0CF1               	rrf	___wmul@multiplier+1,f
  6354  1B0E  0CF0               	rrf	___wmul@multiplier,f
  6355  1B0F  3EFF               	addlw	-1
  6356  1B10  1D03               	skipz
  6357  1B11  2B0C               	goto	u4905
  6358  1B12                     l3031:
  6359  1B12  0870               	movf	___wmul@multiplier,w
  6360  1B13  0471               	iorwf	___wmul@multiplier+1,w
  6361  1B14  1D03               	btfss	3,2
  6362  1B15  2B17               	goto	u4911
  6363  1B16  2B18               	goto	u4910
  6364  1B17                     u4911:
  6365  1B17  2AFA               	goto	l3025
  6366  1B18                     u4910:
  6367  1B18                     l3033:
  6368  1B18  0875               	movf	___wmul@product+1,w
  6369  1B19  00F1               	movwf	?___wmul+1
  6370  1B1A  0874               	movf	___wmul@product,w
  6371  1B1B  00F0               	movwf	?___wmul
  6372  1B1C                     l340:
  6373  1B1C  0008               	return
  6374  1B1D                     __end_of___wmul:
  6375                           
  6376                           	psect	text12
  6377  1CAA                     __ptext12:	
  6378 ;; *************** function ___llmod *****************
  6379 ;; Defined at:
  6380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  divisor         4    0[BANK0 ] unsigned long 
  6383 ;;  dividend        4    4[BANK0 ] unsigned long 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  counter         1    9[BANK0 ] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  4    0[BANK0 ] unsigned long 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6395 ;;      Params:         0       8       0       0       0
  6396 ;;      Locals:         0       1       0       0       0
  6397 ;;      Temps:          0       1       0       0       0
  6398 ;;      Totals:         0      10       0       0       0
  6399 ;;Total ram usage:       10 bytes
  6400 ;; Hardware stack levels used: 1
  6401 ;; This function calls:
  6402 ;;		Nothing
  6403 ;; This function is called by:
  6404 ;;		_sprintf
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           
  6409                           ;psect for function ___llmod
  6410  1CAA                     ___llmod:
  6411  1CAA                     l3137:	
  6412                           ;incstack = 0
  6413                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6414                           
  6415  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  6416  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  6417  1CAC  0823               	movf	___llmod@divisor+3,w
  6418  1CAD  0422               	iorwf	___llmod@divisor+2,w
  6419  1CAE  0421               	iorwf	___llmod@divisor+1,w
  6420  1CAF  0420               	iorwf	___llmod@divisor,w
  6421  1CB0  1903               	skipnz
  6422  1CB1  2CB3               	goto	u5201
  6423  1CB2  2CB4               	goto	u5200
  6424  1CB3                     u5201:
  6425  1CB3  2CF7               	goto	l3153
  6426  1CB4                     u5200:
  6427  1CB4                     l3139:
  6428  1CB4  01A9               	clrf	___llmod@counter
  6429  1CB5  0AA9               	incf	___llmod@counter,f
  6430  1CB6  2CC4               	goto	l3143
  6431  1CB7                     l3141:
  6432  1CB7  3001               	movlw	1
  6433  1CB8  00A8               	movwf	??___llmod
  6434  1CB9                     u5215:
  6435  1CB9  1003               	clrc
  6436  1CBA  0DA0               	rlf	___llmod@divisor,f
  6437  1CBB  0DA1               	rlf	___llmod@divisor+1,f
  6438  1CBC  0DA2               	rlf	___llmod@divisor+2,f
  6439  1CBD  0DA3               	rlf	___llmod@divisor+3,f
  6440  1CBE  0BA8               	decfsz	??___llmod,f
  6441  1CBF  2CB9               	goto	u5215
  6442  1CC0  3001               	movlw	1
  6443  1CC1  00A8               	movwf	??___llmod
  6444  1CC2  0828               	movf	??___llmod,w
  6445  1CC3  07A9               	addwf	___llmod@counter,f
  6446  1CC4                     l3143:
  6447  1CC4  1FA3               	btfss	___llmod@divisor+3,7
  6448  1CC5  2CC7               	goto	u5221
  6449  1CC6  2CC8               	goto	u5220
  6450  1CC7                     u5221:
  6451  1CC7  2CB7               	goto	l3141
  6452  1CC8                     u5220:
  6453  1CC8                     l3145:
  6454  1CC8  0823               	movf	___llmod@divisor+3,w
  6455  1CC9  0227               	subwf	___llmod@dividend+3,w
  6456  1CCA  1D03               	skipz
  6457  1CCB  2CD6               	goto	u5235
  6458  1CCC  0822               	movf	___llmod@divisor+2,w
  6459  1CCD  0226               	subwf	___llmod@dividend+2,w
  6460  1CCE  1D03               	skipz
  6461  1CCF  2CD6               	goto	u5235
  6462  1CD0  0821               	movf	___llmod@divisor+1,w
  6463  1CD1  0225               	subwf	___llmod@dividend+1,w
  6464  1CD2  1D03               	skipz
  6465  1CD3  2CD6               	goto	u5235
  6466  1CD4  0820               	movf	___llmod@divisor,w
  6467  1CD5  0224               	subwf	___llmod@dividend,w
  6468  1CD6                     u5235:
  6469  1CD6  1C03               	skipc
  6470  1CD7  2CD9               	goto	u5231
  6471  1CD8  2CDA               	goto	u5230
  6472  1CD9                     u5231:
  6473  1CD9  2CE8               	goto	l3149
  6474  1CDA                     u5230:
  6475  1CDA                     l3147:
  6476  1CDA  0820               	movf	___llmod@divisor,w
  6477  1CDB  02A4               	subwf	___llmod@dividend,f
  6478  1CDC  0821               	movf	___llmod@divisor+1,w
  6479  1CDD  1C03               	skipc
  6480  1CDE  0F21               	incfsz	___llmod@divisor+1,w
  6481  1CDF  02A5               	subwf	___llmod@dividend+1,f
  6482  1CE0  0822               	movf	___llmod@divisor+2,w
  6483  1CE1  1C03               	skipc
  6484  1CE2  0F22               	incfsz	___llmod@divisor+2,w
  6485  1CE3  02A6               	subwf	___llmod@dividend+2,f
  6486  1CE4  0823               	movf	___llmod@divisor+3,w
  6487  1CE5  1C03               	skipc
  6488  1CE6  0F23               	incfsz	___llmod@divisor+3,w
  6489  1CE7  02A7               	subwf	___llmod@dividend+3,f
  6490  1CE8                     l3149:
  6491  1CE8  3001               	movlw	1
  6492  1CE9                     u5245:
  6493  1CE9  1003               	clrc
  6494  1CEA  0CA3               	rrf	___llmod@divisor+3,f
  6495  1CEB  0CA2               	rrf	___llmod@divisor+2,f
  6496  1CEC  0CA1               	rrf	___llmod@divisor+1,f
  6497  1CED  0CA0               	rrf	___llmod@divisor,f
  6498  1CEE  3EFF               	addlw	-1
  6499  1CEF  1D03               	skipz
  6500  1CF0  2CE9               	goto	u5245
  6501  1CF1                     l3151:
  6502  1CF1  3001               	movlw	1
  6503  1CF2  02A9               	subwf	___llmod@counter,f
  6504  1CF3  1D03               	btfss	3,2
  6505  1CF4  2CF6               	goto	u5251
  6506  1CF5  2CF7               	goto	u5250
  6507  1CF6                     u5251:
  6508  1CF6  2CC8               	goto	l3145
  6509  1CF7                     u5250:
  6510  1CF7                     l3153:
  6511  1CF7  0827               	movf	___llmod@dividend+3,w
  6512  1CF8  00A3               	movwf	?___llmod+3
  6513  1CF9  0826               	movf	___llmod@dividend+2,w
  6514  1CFA  00A2               	movwf	?___llmod+2
  6515  1CFB  0825               	movf	___llmod@dividend+1,w
  6516  1CFC  00A1               	movwf	?___llmod+1
  6517  1CFD  0824               	movf	___llmod@dividend,w
  6518  1CFE  00A0               	movwf	?___llmod
  6519  1CFF                     l594:
  6520  1CFF  0008               	return
  6521  1D00                     __end_of___llmod:
  6522                           
  6523                           	psect	text13
  6524  1D59                     __ptext13:	
  6525 ;; *************** function ___lldiv *****************
  6526 ;; Defined at:
  6527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  divisor         4    0[COMMON] unsigned long 
  6530 ;;  dividend        4    4[COMMON] unsigned long 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  quotient        4    9[COMMON] unsigned long 
  6533 ;;  counter         1   13[COMMON] unsigned char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  4    0[COMMON] unsigned long 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6543 ;;      Params:         8       0       0       0       0
  6544 ;;      Locals:         5       0       0       0       0
  6545 ;;      Temps:          1       0       0       0       0
  6546 ;;      Totals:        14       0       0       0       0
  6547 ;;Total ram usage:       14 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_sprintf
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           
  6557                           ;psect for function ___lldiv
  6558  1D59                     ___lldiv:
  6559  1D59                     l3037:	
  6560                           ;incstack = 0
  6561                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6562                           
  6563  1D59  3000               	movlw	0
  6564  1D5A  00FC               	movwf	___lldiv@quotient+3
  6565  1D5B  3000               	movlw	0
  6566  1D5C  00FB               	movwf	___lldiv@quotient+2
  6567  1D5D  3000               	movlw	0
  6568  1D5E  00FA               	movwf	___lldiv@quotient+1
  6569  1D5F  3000               	movlw	0
  6570  1D60  00F9               	movwf	___lldiv@quotient
  6571  1D61  0873               	movf	___lldiv@divisor+3,w
  6572  1D62  0472               	iorwf	___lldiv@divisor+2,w
  6573  1D63  0471               	iorwf	___lldiv@divisor+1,w
  6574  1D64  0470               	iorwf	___lldiv@divisor,w
  6575  1D65  1903               	skipnz
  6576  1D66  2D68               	goto	u4921
  6577  1D67  2D69               	goto	u4920
  6578  1D68                     u4921:
  6579  1D68  2DB6               	goto	l3057
  6580  1D69                     u4920:
  6581  1D69                     l3039:
  6582  1D69  01FD               	clrf	___lldiv@counter
  6583  1D6A  0AFD               	incf	___lldiv@counter,f
  6584  1D6B  2D79               	goto	l3043
  6585  1D6C                     l3041:
  6586  1D6C  3001               	movlw	1
  6587  1D6D  00F8               	movwf	??___lldiv
  6588  1D6E                     u4935:
  6589  1D6E  1003               	clrc
  6590  1D6F  0DF0               	rlf	___lldiv@divisor,f
  6591  1D70  0DF1               	rlf	___lldiv@divisor+1,f
  6592  1D71  0DF2               	rlf	___lldiv@divisor+2,f
  6593  1D72  0DF3               	rlf	___lldiv@divisor+3,f
  6594  1D73  0BF8               	decfsz	??___lldiv,f
  6595  1D74  2D6E               	goto	u4935
  6596  1D75  3001               	movlw	1
  6597  1D76  00F8               	movwf	??___lldiv
  6598  1D77  0878               	movf	??___lldiv,w
  6599  1D78  07FD               	addwf	___lldiv@counter,f
  6600  1D79                     l3043:
  6601  1D79  1FF3               	btfss	___lldiv@divisor+3,7
  6602  1D7A  2D7C               	goto	u4941
  6603  1D7B  2D7D               	goto	u4940
  6604  1D7C                     u4941:
  6605  1D7C  2D6C               	goto	l3041
  6606  1D7D                     u4940:
  6607  1D7D                     l3045:
  6608  1D7D  3001               	movlw	1
  6609  1D7E  00F8               	movwf	??___lldiv
  6610  1D7F                     u4955:
  6611  1D7F  1003               	clrc
  6612  1D80  0DF9               	rlf	___lldiv@quotient,f
  6613  1D81  0DFA               	rlf	___lldiv@quotient+1,f
  6614  1D82  0DFB               	rlf	___lldiv@quotient+2,f
  6615  1D83  0DFC               	rlf	___lldiv@quotient+3,f
  6616  1D84  0BF8               	decfsz	??___lldiv,f
  6617  1D85  2D7F               	goto	u4955
  6618  1D86                     l3047:
  6619  1D86  0873               	movf	___lldiv@divisor+3,w
  6620  1D87  0277               	subwf	___lldiv@dividend+3,w
  6621  1D88  1D03               	skipz
  6622  1D89  2D94               	goto	u4965
  6623  1D8A  0872               	movf	___lldiv@divisor+2,w
  6624  1D8B  0276               	subwf	___lldiv@dividend+2,w
  6625  1D8C  1D03               	skipz
  6626  1D8D  2D94               	goto	u4965
  6627  1D8E  0871               	movf	___lldiv@divisor+1,w
  6628  1D8F  0275               	subwf	___lldiv@dividend+1,w
  6629  1D90  1D03               	skipz
  6630  1D91  2D94               	goto	u4965
  6631  1D92  0870               	movf	___lldiv@divisor,w
  6632  1D93  0274               	subwf	___lldiv@dividend,w
  6633  1D94                     u4965:
  6634  1D94  1C03               	skipc
  6635  1D95  2D97               	goto	u4961
  6636  1D96  2D98               	goto	u4960
  6637  1D97                     u4961:
  6638  1D97  2DA7               	goto	l3053
  6639  1D98                     u4960:
  6640  1D98                     l3049:
  6641  1D98  0870               	movf	___lldiv@divisor,w
  6642  1D99  02F4               	subwf	___lldiv@dividend,f
  6643  1D9A  0871               	movf	___lldiv@divisor+1,w
  6644  1D9B  1C03               	skipc
  6645  1D9C  0F71               	incfsz	___lldiv@divisor+1,w
  6646  1D9D  02F5               	subwf	___lldiv@dividend+1,f
  6647  1D9E  0872               	movf	___lldiv@divisor+2,w
  6648  1D9F  1C03               	skipc
  6649  1DA0  0F72               	incfsz	___lldiv@divisor+2,w
  6650  1DA1  02F6               	subwf	___lldiv@dividend+2,f
  6651  1DA2  0873               	movf	___lldiv@divisor+3,w
  6652  1DA3  1C03               	skipc
  6653  1DA4  0F73               	incfsz	___lldiv@divisor+3,w
  6654  1DA5  02F7               	subwf	___lldiv@dividend+3,f
  6655  1DA6                     l3051:
  6656  1DA6  1479               	bsf	___lldiv@quotient,0
  6657  1DA7                     l3053:
  6658  1DA7  3001               	movlw	1
  6659  1DA8                     u4975:
  6660  1DA8  1003               	clrc
  6661  1DA9  0CF3               	rrf	___lldiv@divisor+3,f
  6662  1DAA  0CF2               	rrf	___lldiv@divisor+2,f
  6663  1DAB  0CF1               	rrf	___lldiv@divisor+1,f
  6664  1DAC  0CF0               	rrf	___lldiv@divisor,f
  6665  1DAD  3EFF               	addlw	-1
  6666  1DAE  1D03               	skipz
  6667  1DAF  2DA8               	goto	u4975
  6668  1DB0                     l3055:
  6669  1DB0  3001               	movlw	1
  6670  1DB1  02FD               	subwf	___lldiv@counter,f
  6671  1DB2  1D03               	btfss	3,2
  6672  1DB3  2DB5               	goto	u4981
  6673  1DB4  2DB6               	goto	u4980
  6674  1DB5                     u4981:
  6675  1DB5  2D7D               	goto	l3045
  6676  1DB6                     u4980:
  6677  1DB6                     l3057:
  6678  1DB6  087C               	movf	___lldiv@quotient+3,w
  6679  1DB7  00F3               	movwf	?___lldiv+3
  6680  1DB8  087B               	movf	___lldiv@quotient+2,w
  6681  1DB9  00F2               	movwf	?___lldiv+2
  6682  1DBA  087A               	movf	___lldiv@quotient+1,w
  6683  1DBB  00F1               	movwf	?___lldiv+1
  6684  1DBC  0879               	movf	___lldiv@quotient,w
  6685  1DBD  00F0               	movwf	?___lldiv
  6686  1DBE                     l374:
  6687  1DBE  0008               	return
  6688  1DBF                     __end_of___lldiv:
  6689                           
  6690                           	psect	text14
  6691  1E28                     __ptext14:	
  6692 ;; *************** function ___fltol *****************
  6693 ;; Defined at:
  6694 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  f1              4   49[BANK0 ] unsigned long 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  exp1            1   59[BANK0 ] unsigned char 
  6699 ;;  sign1           1   58[BANK0 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  4   49[BANK0 ] long 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6709 ;;      Params:         0       4       0       0       0
  6710 ;;      Locals:         0       2       0       0       0
  6711 ;;      Temps:          0       5       0       0       0
  6712 ;;      Totals:         0      11       0       0       0
  6713 ;;Total ram usage:       11 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_sprintf
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           
  6723                           ;psect for function ___fltol
  6724  1E28                     ___fltol:
  6725  1E28                     l3101:	
  6726                           ;incstack = 0
  6727                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6728                           
  6729  1E28  1003               	clrc
  6730  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  6731  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  6732  1E2B  0D53               	rlf	___fltol@f1+2,w
  6733  1E2C  0D54               	rlf	___fltol@f1+3,w
  6734  1E2D  00D5               	movwf	??___fltol
  6735  1E2E  0855               	movf	??___fltol,w
  6736  1E2F  00DB               	movwf	___fltol@exp1
  6737  1E30  085B               	movf	___fltol@exp1,w
  6738  1E31  1D03               	btfss	3,2
  6739  1E32  2E34               	goto	u5101
  6740  1E33  2E35               	goto	u5100
  6741  1E34                     u5101:
  6742  1E34  2E3E               	goto	l3107
  6743  1E35                     u5100:
  6744  1E35                     l3103:
  6745  1E35  3000               	movlw	0
  6746  1E36  00D4               	movwf	?___fltol+3
  6747  1E37  3000               	movlw	0
  6748  1E38  00D3               	movwf	?___fltol+2
  6749  1E39  3000               	movlw	0
  6750  1E3A  00D2               	movwf	?___fltol+1
  6751  1E3B  3000               	movlw	0
  6752  1E3C  00D1               	movwf	?___fltol
  6753  1E3D  2EA3               	goto	l541
  6754  1E3E                     l3107:
  6755  1E3E  0851               	movf	___fltol@f1,w
  6756  1E3F  00D5               	movwf	??___fltol
  6757  1E40  0852               	movf	___fltol@f1+1,w
  6758  1E41  00D6               	movwf	??___fltol+1
  6759  1E42  0853               	movf	___fltol@f1+2,w
  6760  1E43  00D7               	movwf	??___fltol+2
  6761  1E44  0854               	movf	___fltol@f1+3,w
  6762  1E45  00D8               	movwf	??___fltol+3
  6763  1E46  301F               	movlw	31
  6764  1E47                     u5115:
  6765  1E47  1003               	clrc
  6766  1E48  0CD8               	rrf	??___fltol+3,f
  6767  1E49  0CD7               	rrf	??___fltol+2,f
  6768  1E4A  0CD6               	rrf	??___fltol+1,f
  6769  1E4B  0CD5               	rrf	??___fltol,f
  6770  1E4C                     u5110:
  6771  1E4C  3EFF               	addlw	-1
  6772  1E4D  1D03               	skipz
  6773  1E4E  2E47               	goto	u5115
  6774  1E4F  0855               	movf	??___fltol,w
  6775  1E50  00D9               	movwf	??___fltol+4
  6776  1E51  0859               	movf	??___fltol+4,w
  6777  1E52  00DA               	movwf	___fltol@sign1
  6778  1E53                     l3109:
  6779  1E53  17D3               	bsf	___fltol@f1+2,7
  6780  1E54                     l3111:
  6781  1E54  30FF               	movlw	255
  6782  1E55  05D1               	andwf	___fltol@f1,f
  6783  1E56  30FF               	movlw	255
  6784  1E57  05D2               	andwf	___fltol@f1+1,f
  6785  1E58  30FF               	movlw	255
  6786  1E59  05D3               	andwf	___fltol@f1+2,f
  6787  1E5A  3000               	movlw	0
  6788  1E5B  05D4               	andwf	___fltol@f1+3,f
  6789  1E5C                     l3113:
  6790  1E5C  3096               	movlw	150
  6791  1E5D  02DB               	subwf	___fltol@exp1,f
  6792  1E5E                     l3115:
  6793  1E5E  1FDB               	btfss	___fltol@exp1,7
  6794  1E5F  2E61               	goto	u5121
  6795  1E60  2E62               	goto	u5120
  6796  1E61                     u5121:
  6797  1E61  2E7C               	goto	l3125
  6798  1E62                     u5120:
  6799  1E62                     l3117:
  6800  1E62  085B               	movf	___fltol@exp1,w
  6801  1E63  3A80               	xorlw	128
  6802  1E64  3E97               	addlw	151
  6803  1E65  1803               	skipnc
  6804  1E66  2E68               	goto	u5131
  6805  1E67  2E69               	goto	u5130
  6806  1E68                     u5131:
  6807  1E68  2E6A               	goto	l3123
  6808  1E69                     u5130:
  6809  1E69  2E35               	goto	l3103
  6810  1E6A                     l3123:
  6811  1E6A  3001               	movlw	1
  6812  1E6B                     u5145:
  6813  1E6B  1003               	clrc
  6814  1E6C  0CD4               	rrf	___fltol@f1+3,f
  6815  1E6D  0CD3               	rrf	___fltol@f1+2,f
  6816  1E6E  0CD2               	rrf	___fltol@f1+1,f
  6817  1E6F  0CD1               	rrf	___fltol@f1,f
  6818  1E70  3EFF               	addlw	-1
  6819  1E71  1D03               	skipz
  6820  1E72  2E6B               	goto	u5145
  6821  1E73  3001               	movlw	1
  6822  1E74  00D5               	movwf	??___fltol
  6823  1E75  0855               	movf	??___fltol,w
  6824  1E76  07DB               	addwf	___fltol@exp1,f
  6825  1E77  1D03               	btfss	3,2
  6826  1E78  2E7A               	goto	u5151
  6827  1E79  2E7B               	goto	u5150
  6828  1E7A                     u5151:
  6829  1E7A  2E6A               	goto	l3123
  6830  1E7B                     u5150:
  6831  1E7B  2E93               	goto	l3133
  6832  1E7C                     l3125:
  6833  1E7C  3020               	movlw	32
  6834  1E7D  025B               	subwf	___fltol@exp1,w
  6835  1E7E  1C03               	skipc
  6836  1E7F  2E81               	goto	u5161
  6837  1E80  2E82               	goto	u5160
  6838  1E81                     u5161:
  6839  1E81  2E8E               	goto	l548
  6840  1E82                     u5160:
  6841  1E82  2E35               	goto	l3103
  6842  1E83                     l3131:
  6843  1E83  3001               	movlw	1
  6844  1E84  00D5               	movwf	??___fltol
  6845  1E85                     u5175:
  6846  1E85  1003               	clrc
  6847  1E86  0DD1               	rlf	___fltol@f1,f
  6848  1E87  0DD2               	rlf	___fltol@f1+1,f
  6849  1E88  0DD3               	rlf	___fltol@f1+2,f
  6850  1E89  0DD4               	rlf	___fltol@f1+3,f
  6851  1E8A  0BD5               	decfsz	??___fltol,f
  6852  1E8B  2E85               	goto	u5175
  6853  1E8C  3001               	movlw	1
  6854  1E8D  02DB               	subwf	___fltol@exp1,f
  6855  1E8E                     l548:
  6856  1E8E  085B               	movf	___fltol@exp1,w
  6857  1E8F  1D03               	btfss	3,2
  6858  1E90  2E92               	goto	u5181
  6859  1E91  2E93               	goto	u5180
  6860  1E92                     u5181:
  6861  1E92  2E83               	goto	l3131
  6862  1E93                     u5180:
  6863  1E93                     l3133:
  6864  1E93  085A               	movf	___fltol@sign1,w
  6865  1E94  1903               	btfsc	3,2
  6866  1E95  2E97               	goto	u5191
  6867  1E96  2E98               	goto	u5190
  6868  1E97                     u5191:
  6869  1E97  2EA3               	goto	l551
  6870  1E98                     u5190:
  6871  1E98                     l3135:
  6872  1E98  09D1               	comf	___fltol@f1,f
  6873  1E99  09D2               	comf	___fltol@f1+1,f
  6874  1E9A  09D3               	comf	___fltol@f1+2,f
  6875  1E9B  09D4               	comf	___fltol@f1+3,f
  6876  1E9C  0AD1               	incf	___fltol@f1,f
  6877  1E9D  1903               	skipnz
  6878  1E9E  0AD2               	incf	___fltol@f1+1,f
  6879  1E9F  1903               	skipnz
  6880  1EA0  0AD3               	incf	___fltol@f1+2,f
  6881  1EA1  1903               	skipnz
  6882  1EA2  0AD4               	incf	___fltol@f1+3,f
  6883  1EA3                     l551:
  6884  1EA3                     l541:
  6885  1EA3  0008               	return
  6886  1EA4                     __end_of___fltol:
  6887                           
  6888                           	psect	text15
  6889  1AD4                     __ptext15:	
  6890 ;; *************** function ___flsub *****************
  6891 ;; Defined at:
  6892 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  a               4   70[BANK0 ] long 
  6895 ;;  b               4   74[BANK0 ] long 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  4   70[BANK0 ] long 
  6900 ;; Registers used:
  6901 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6907 ;;      Params:         0       8       0       0       0
  6908 ;;      Locals:         0       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0
  6910 ;;      Totals:         0       8       0       0       0
  6911 ;;Total ram usage:        8 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 1
  6914 ;; This function calls:
  6915 ;;		___fladd
  6916 ;; This function is called by:
  6917 ;;		_sprintf
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           
  6922                           ;psect for function ___flsub
  6923  1AD4                     ___flsub:
  6924  1AD4                     l3157:	
  6925                           ;incstack = 0
  6926                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6927                           
  6928  1AD4  3080               	movlw	128
  6929  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
  6930  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
  6931  1AD7  06E9               	xorwf	___flsub@a+3,f
  6932  1AD8                     l3159:
  6933  1AD8  086D               	movf	___flsub@b+3,w
  6934  1AD9  00D5               	movwf	___fladd@b+3
  6935  1ADA  086C               	movf	___flsub@b+2,w
  6936  1ADB  00D4               	movwf	___fladd@b+2
  6937  1ADC  086B               	movf	___flsub@b+1,w
  6938  1ADD  00D3               	movwf	___fladd@b+1
  6939  1ADE  086A               	movf	___flsub@b,w
  6940  1ADF  00D2               	movwf	___fladd@b
  6941  1AE0  0869               	movf	___flsub@a+3,w
  6942  1AE1  00D9               	movwf	___fladd@a+3
  6943  1AE2  0868               	movf	___flsub@a+2,w
  6944  1AE3  00D8               	movwf	___fladd@a+2
  6945  1AE4  0867               	movf	___flsub@a+1,w
  6946  1AE5  00D7               	movwf	___fladd@a+1
  6947  1AE6  0866               	movf	___flsub@a,w
  6948  1AE7  00D6               	movwf	___fladd@a
  6949  1AE8  160A  118A  2578  160A  158A  	fcall	___fladd
  6950  1AED  1283               	bcf	3,5	;RP0=0, select bank0
  6951  1AEE  1303               	bcf	3,6	;RP1=0, select bank0
  6952  1AEF  0855               	movf	?___fladd+3,w
  6953  1AF0  00E9               	movwf	?___flsub+3
  6954  1AF1  0854               	movf	?___fladd+2,w
  6955  1AF2  00E8               	movwf	?___flsub+2
  6956  1AF3  0853               	movf	?___fladd+1,w
  6957  1AF4  00E7               	movwf	?___flsub+1
  6958  1AF5  0852               	movf	?___fladd,w
  6959  1AF6  00E6               	movwf	?___flsub
  6960  1AF7                     l711:
  6961  1AF7  0008               	return
  6962  1AF8                     __end_of___flsub:
  6963                           
  6964                           	psect	text16
  6965  1578                     __ptext16:	
  6966 ;; *************** function ___fladd *****************
  6967 ;; Defined at:
  6968 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  b               4   50[BANK0 ] long 
  6971 ;;  a               4   54[BANK0 ] long 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  grs             1   69[BANK0 ] unsigned char 
  6974 ;;  bexp            1   68[BANK0 ] unsigned char 
  6975 ;;  aexp            1   67[BANK0 ] unsigned char 
  6976 ;;  signs           1   66[BANK0 ] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  4   50[BANK0 ] unsigned char 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0, btemp+1
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6986 ;;      Params:         0       8       0       0       0
  6987 ;;      Locals:         0       4       0       0       0
  6988 ;;      Temps:          0       8       0       0       0
  6989 ;;      Totals:         0      20       0       0       0
  6990 ;;Total ram usage:       20 bytes
  6991 ;; Hardware stack levels used: 1
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_sprintf
  6996 ;;		___flsub
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           
  7001                           ;psect for function ___fladd
  7002  1578                     ___fladd:
  7003  1578                     l2495:	
  7004                           ;incstack = 0
  7005                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7006                           
  7007  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7008  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7009  157A  0855               	movf	___fladd@b+3,w
  7010  157B  3980               	andlw	128
  7011  157C  00DA               	movwf	??___fladd
  7012  157D  085A               	movf	??___fladd,w
  7013  157E  00E2               	movwf	___fladd@signs
  7014  157F                     l2497:
  7015  157F  0855               	movf	___fladd@b+3,w
  7016  1580  00DA               	movwf	??___fladd
  7017  1581  075A               	addwf	??___fladd,w
  7018  1582  00DB               	movwf	??___fladd+1
  7019  1583  085B               	movf	??___fladd+1,w
  7020  1584  00E4               	movwf	___fladd@bexp
  7021  1585                     l2499:
  7022  1585  1FD4               	btfss	___fladd@b+2,7
  7023  1586  2D88               	goto	u3521
  7024  1587  2D89               	goto	u3520
  7025  1588                     u3521:
  7026  1588  2D8A               	goto	l2503
  7027  1589                     u3520:
  7028  1589                     l2501:
  7029  1589  1464               	bsf	___fladd@bexp,0
  7030  158A                     l2503:
  7031  158A  0864               	movf	___fladd@bexp,w
  7032  158B  1903               	btfsc	3,2
  7033  158C  2D8E               	goto	u3531
  7034  158D  2D8F               	goto	u3530
  7035  158E                     u3531:
  7036  158E  2D9F               	goto	l2513
  7037  158F                     u3530:
  7038  158F                     l2505:
  7039  158F  0A64               	incf	___fladd@bexp,w
  7040  1590  1D03               	btfss	3,2
  7041  1591  2D93               	goto	u3541
  7042  1592  2D94               	goto	u3540
  7043  1593                     u3541:
  7044  1593  2D9C               	goto	l2509
  7045  1594                     u3540:
  7046  1594                     l2507:
  7047  1594  3000               	movlw	0
  7048  1595  00D5               	movwf	___fladd@b+3
  7049  1596  3000               	movlw	0
  7050  1597  00D4               	movwf	___fladd@b+2
  7051  1598  3000               	movlw	0
  7052  1599  00D3               	movwf	___fladd@b+1
  7053  159A  3000               	movlw	0
  7054  159B  00D2               	movwf	___fladd@b
  7055  159C                     l2509:
  7056  159C  17D4               	bsf	___fladd@b+2,7
  7057  159D                     l2511:
  7058  159D  01D5               	clrf	___fladd@b+3
  7059  159E  2DA7               	goto	l2515
  7060  159F                     l2513:
  7061  159F  3000               	movlw	0
  7062  15A0  00D5               	movwf	___fladd@b+3
  7063  15A1  3000               	movlw	0
  7064  15A2  00D4               	movwf	___fladd@b+2
  7065  15A3  3000               	movlw	0
  7066  15A4  00D3               	movwf	___fladd@b+1
  7067  15A5  3000               	movlw	0
  7068  15A6  00D2               	movwf	___fladd@b
  7069  15A7                     l2515:
  7070  15A7  0859               	movf	___fladd@a+3,w
  7071  15A8  3980               	andlw	128
  7072  15A9  00DA               	movwf	??___fladd
  7073  15AA  085A               	movf	??___fladd,w
  7074  15AB  00E3               	movwf	___fladd@aexp
  7075  15AC                     l2517:
  7076  15AC  0863               	movf	___fladd@aexp,w
  7077  15AD  0662               	xorwf	___fladd@signs,w
  7078  15AE  1903               	skipnz
  7079  15AF  2DB1               	goto	u3551
  7080  15B0  2DB2               	goto	u3550
  7081  15B1                     u3551:
  7082  15B1  2DB3               	goto	l2521
  7083  15B2                     u3550:
  7084  15B2                     l2519:
  7085  15B2  1762               	bsf	___fladd@signs,6
  7086  15B3                     l2521:
  7087  15B3  0859               	movf	___fladd@a+3,w
  7088  15B4  00DA               	movwf	??___fladd
  7089  15B5  075A               	addwf	??___fladd,w
  7090  15B6  00DB               	movwf	??___fladd+1
  7091  15B7  085B               	movf	??___fladd+1,w
  7092  15B8  00E3               	movwf	___fladd@aexp
  7093  15B9                     l2523:
  7094  15B9  1FD8               	btfss	___fladd@a+2,7
  7095  15BA  2DBC               	goto	u3561
  7096  15BB  2DBD               	goto	u3560
  7097  15BC                     u3561:
  7098  15BC  2DBE               	goto	l2527
  7099  15BD                     u3560:
  7100  15BD                     l2525:
  7101  15BD  1463               	bsf	___fladd@aexp,0
  7102  15BE                     l2527:
  7103  15BE  0863               	movf	___fladd@aexp,w
  7104  15BF  1903               	btfsc	3,2
  7105  15C0  2DC2               	goto	u3571
  7106  15C1  2DC3               	goto	u3570
  7107  15C2                     u3571:
  7108  15C2  2DD3               	goto	l2537
  7109  15C3                     u3570:
  7110  15C3                     l2529:
  7111  15C3  0A63               	incf	___fladd@aexp,w
  7112  15C4  1D03               	btfss	3,2
  7113  15C5  2DC7               	goto	u3581
  7114  15C6  2DC8               	goto	u3580
  7115  15C7                     u3581:
  7116  15C7  2DD0               	goto	l2533
  7117  15C8                     u3580:
  7118  15C8                     l2531:
  7119  15C8  3000               	movlw	0
  7120  15C9  00D9               	movwf	___fladd@a+3
  7121  15CA  3000               	movlw	0
  7122  15CB  00D8               	movwf	___fladd@a+2
  7123  15CC  3000               	movlw	0
  7124  15CD  00D7               	movwf	___fladd@a+1
  7125  15CE  3000               	movlw	0
  7126  15CF  00D6               	movwf	___fladd@a
  7127  15D0                     l2533:
  7128  15D0  17D8               	bsf	___fladd@a+2,7
  7129  15D1                     l2535:
  7130  15D1  01D9               	clrf	___fladd@a+3
  7131  15D2  2DDB               	goto	l665
  7132  15D3                     l2537:
  7133  15D3  3000               	movlw	0
  7134  15D4  00D9               	movwf	___fladd@a+3
  7135  15D5  3000               	movlw	0
  7136  15D6  00D8               	movwf	___fladd@a+2
  7137  15D7  3000               	movlw	0
  7138  15D8  00D7               	movwf	___fladd@a+1
  7139  15D9  3000               	movlw	0
  7140  15DA  00D6               	movwf	___fladd@a
  7141  15DB                     l665:
  7142  15DB  0864               	movf	___fladd@bexp,w
  7143  15DC  0263               	subwf	___fladd@aexp,w
  7144  15DD  1803               	skipnc
  7145  15DE  2DE0               	goto	u3591
  7146  15DF  2DE1               	goto	u3590
  7147  15E0                     u3591:
  7148  15E0  2E25               	goto	l2573
  7149  15E1                     u3590:
  7150  15E1                     l2539:
  7151  15E1  1F62               	btfss	___fladd@signs,6
  7152  15E2  2DE4               	goto	u3601
  7153  15E3  2DE5               	goto	u3600
  7154  15E4                     u3601:
  7155  15E4  2DE9               	goto	l2543
  7156  15E5                     u3600:
  7157  15E5                     l2541:
  7158  15E5  3080               	movlw	128
  7159  15E6  00DA               	movwf	??___fladd
  7160  15E7  085A               	movf	??___fladd,w
  7161  15E8  06E2               	xorwf	___fladd@signs,f
  7162  15E9                     l2543:
  7163  15E9  0864               	movf	___fladd@bexp,w
  7164  15EA  00DA               	movwf	??___fladd
  7165  15EB  085A               	movf	??___fladd,w
  7166  15EC  00E5               	movwf	___fladd@grs
  7167  15ED                     l2545:
  7168  15ED  0863               	movf	___fladd@aexp,w
  7169  15EE  00DA               	movwf	??___fladd
  7170  15EF  085A               	movf	??___fladd,w
  7171  15F0  00E4               	movwf	___fladd@bexp
  7172  15F1                     l2547:
  7173  15F1  0865               	movf	___fladd@grs,w
  7174  15F2  00DA               	movwf	??___fladd
  7175  15F3  085A               	movf	??___fladd,w
  7176  15F4  00E3               	movwf	___fladd@aexp
  7177  15F5                     l2549:
  7178  15F5  0852               	movf	___fladd@b,w
  7179  15F6  00DA               	movwf	??___fladd
  7180  15F7  085A               	movf	??___fladd,w
  7181  15F8  00E5               	movwf	___fladd@grs
  7182  15F9                     l2551:
  7183  15F9  0856               	movf	___fladd@a,w
  7184  15FA  00DA               	movwf	??___fladd
  7185  15FB  085A               	movf	??___fladd,w
  7186  15FC  00D2               	movwf	___fladd@b
  7187  15FD                     l2553:
  7188  15FD  0865               	movf	___fladd@grs,w
  7189  15FE  00DA               	movwf	??___fladd
  7190  15FF  085A               	movf	??___fladd,w
  7191  1600  00D6               	movwf	___fladd@a
  7192  1601                     l2555:
  7193  1601  0853               	movf	___fladd@b+1,w
  7194  1602  00DA               	movwf	??___fladd
  7195  1603  085A               	movf	??___fladd,w
  7196  1604  00E5               	movwf	___fladd@grs
  7197  1605                     l2557:
  7198  1605  0857               	movf	___fladd@a+1,w
  7199  1606  00DA               	movwf	??___fladd
  7200  1607  085A               	movf	??___fladd,w
  7201  1608  00D3               	movwf	___fladd@b+1
  7202  1609                     l2559:
  7203  1609  0865               	movf	___fladd@grs,w
  7204  160A  00DA               	movwf	??___fladd
  7205  160B  085A               	movf	??___fladd,w
  7206  160C  00D7               	movwf	___fladd@a+1
  7207  160D                     l2561:
  7208  160D  0854               	movf	___fladd@b+2,w
  7209  160E  00DA               	movwf	??___fladd
  7210  160F  085A               	movf	??___fladd,w
  7211  1610  00E5               	movwf	___fladd@grs
  7212  1611                     l2563:
  7213  1611  0858               	movf	___fladd@a+2,w
  7214  1612  00DA               	movwf	??___fladd
  7215  1613  085A               	movf	??___fladd,w
  7216  1614  00D4               	movwf	___fladd@b+2
  7217  1615                     l2565:
  7218  1615  0865               	movf	___fladd@grs,w
  7219  1616  00DA               	movwf	??___fladd
  7220  1617  085A               	movf	??___fladd,w
  7221  1618  00D8               	movwf	___fladd@a+2
  7222  1619                     l2567:
  7223  1619  0855               	movf	___fladd@b+3,w
  7224  161A  00DA               	movwf	??___fladd
  7225  161B  085A               	movf	??___fladd,w
  7226  161C  00E5               	movwf	___fladd@grs
  7227  161D                     l2569:
  7228  161D  0859               	movf	___fladd@a+3,w
  7229  161E  00DA               	movwf	??___fladd
  7230  161F  085A               	movf	??___fladd,w
  7231  1620  00D5               	movwf	___fladd@b+3
  7232  1621                     l2571:
  7233  1621  0865               	movf	___fladd@grs,w
  7234  1622  00DA               	movwf	??___fladd
  7235  1623  085A               	movf	??___fladd,w
  7236  1624  00D9               	movwf	___fladd@a+3
  7237  1625                     l2573:
  7238  1625  01E5               	clrf	___fladd@grs
  7239  1626                     l2575:
  7240  1626  0863               	movf	___fladd@aexp,w
  7241  1627  00DA               	movwf	??___fladd
  7242  1628  01DB               	clrf	??___fladd+1
  7243  1629  085B               	movf	??___fladd+1,w
  7244  162A  00DD               	movwf	??___fladd+3
  7245  162B  0864               	movf	___fladd@bexp,w
  7246  162C  025A               	subwf	??___fladd,w
  7247  162D  00DC               	movwf	??___fladd+2
  7248  162E  1C03               	skipc
  7249  162F  03DD               	decf	??___fladd+3,f
  7250  1630  085D               	movf	??___fladd+3,w
  7251  1631  3A80               	xorlw	128
  7252  1632  00FF               	movwf	btemp+1
  7253  1633  3080               	movlw	128
  7254  1634  027F               	subwf	btemp+1,w
  7255  1635  1D03               	skipz
  7256  1636  2E39               	goto	u3615
  7257  1637  301A               	movlw	26
  7258  1638  025C               	subwf	??___fladd+2,w
  7259  1639                     u3615:
  7260  1639  1C03               	skipc
  7261  163A  2E3C               	goto	u3611
  7262  163B  2E3D               	goto	u3610
  7263  163C                     u3611:
  7264  163C  2E7A               	goto	l2591
  7265  163D                     u3610:
  7266  163D                     l2577:
  7267  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7268  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7269  163F  0855               	movf	___fladd@b+3,w
  7270  1640  0454               	iorwf	___fladd@b+2,w
  7271  1641  0453               	iorwf	___fladd@b+1,w
  7272  1642  0452               	iorwf	___fladd@b,w
  7273  1643  1D03               	skipz
  7274  1644  2E46               	goto	u3621
  7275  1645  2E48               	goto	u3620
  7276  1646                     u3621:
  7277  1646  3001               	movlw	1
  7278  1647  2E49               	goto	u3630
  7279  1648                     u3620:
  7280  1648  3000               	movlw	0
  7281  1649                     u3630:
  7282  1649  00DA               	movwf	??___fladd
  7283  164A  085A               	movf	??___fladd,w
  7284  164B  00E5               	movwf	___fladd@grs
  7285  164C  3000               	movlw	0
  7286  164D  00D5               	movwf	___fladd@b+3
  7287  164E  3000               	movlw	0
  7288  164F  00D4               	movwf	___fladd@b+2
  7289  1650  3000               	movlw	0
  7290  1651  00D3               	movwf	___fladd@b+1
  7291  1652  3000               	movlw	0
  7292  1653  00D2               	movwf	___fladd@b
  7293  1654  0863               	movf	___fladd@aexp,w
  7294  1655  00DA               	movwf	??___fladd
  7295  1656  085A               	movf	??___fladd,w
  7296  1657  00E4               	movwf	___fladd@bexp
  7297  1658  2E82               	goto	l669
  7298  1659                     l671:
  7299  1659  1C65               	btfss	___fladd@grs,0
  7300  165A  2E5C               	goto	u3641
  7301  165B  2E5D               	goto	u3640
  7302  165C                     u3641:
  7303  165C  2E66               	goto	l2581
  7304  165D                     u3640:
  7305  165D                     l2579:
  7306  165D  0865               	movf	___fladd@grs,w
  7307  165E  00DA               	movwf	??___fladd
  7308  165F  1003               	clrc
  7309  1660  0C5A               	rrf	??___fladd,w
  7310  1661  3801               	iorlw	1
  7311  1662  00DB               	movwf	??___fladd+1
  7312  1663  085B               	movf	??___fladd+1,w
  7313  1664  00E5               	movwf	___fladd@grs
  7314  1665  2E68               	goto	l2583
  7315  1666                     l2581:
  7316  1666  1003               	clrc
  7317  1667  0CE5               	rrf	___fladd@grs,f
  7318  1668                     l2583:
  7319  1668  1C52               	btfss	___fladd@b,0
  7320  1669  2E6B               	goto	u3651
  7321  166A  2E6C               	goto	u3650
  7322  166B                     u3651:
  7323  166B  2E6D               	goto	l2587
  7324  166C                     u3650:
  7325  166C                     l2585:
  7326  166C  17E5               	bsf	___fladd@grs,7
  7327  166D                     l2587:
  7328  166D  3001               	movlw	1
  7329  166E  00DA               	movwf	??___fladd
  7330  166F                     u3665:
  7331  166F  0D55               	rlf	___fladd@b+3,w
  7332  1670  0CD5               	rrf	___fladd@b+3,f
  7333  1671  0CD4               	rrf	___fladd@b+2,f
  7334  1672  0CD3               	rrf	___fladd@b+1,f
  7335  1673  0CD2               	rrf	___fladd@b,f
  7336  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7337  1675  2E6F               	goto	u3665
  7338  1676                     l2589:
  7339  1676  3001               	movlw	1
  7340  1677  00DA               	movwf	??___fladd
  7341  1678  085A               	movf	??___fladd,w
  7342  1679  07E4               	addwf	___fladd@bexp,f
  7343  167A                     l2591:
  7344  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7345  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7346  167C  0863               	movf	___fladd@aexp,w
  7347  167D  0264               	subwf	___fladd@bexp,w
  7348  167E  1C03               	skipc
  7349  167F  2E81               	goto	u3671
  7350  1680  2E82               	goto	u3670
  7351  1681                     u3671:
  7352  1681  2E59               	goto	l671
  7353  1682                     u3670:
  7354  1682                     l669:
  7355  1682  1B62               	btfsc	___fladd@signs,6
  7356  1683  2E85               	goto	u3681
  7357  1684  2E86               	goto	u3680
  7358  1685                     u3681:
  7359  1685  2ED1               	goto	l2617
  7360  1686                     u3680:
  7361  1686                     l2593:
  7362  1686  0864               	movf	___fladd@bexp,w
  7363  1687  1D03               	btfss	3,2
  7364  1688  2E8A               	goto	u3691
  7365  1689  2E8B               	goto	u3690
  7366  168A                     u3691:
  7367  168A  2E94               	goto	l2599
  7368  168B                     u3690:
  7369  168B                     l2595:
  7370  168B  3000               	movlw	0
  7371  168C  00D5               	movwf	?___fladd+3
  7372  168D  3000               	movlw	0
  7373  168E  00D4               	movwf	?___fladd+2
  7374  168F  3000               	movlw	0
  7375  1690  00D3               	movwf	?___fladd+1
  7376  1691  3000               	movlw	0
  7377  1692  00D2               	movwf	?___fladd
  7378  1693  2FFF               	goto	l678
  7379  1694                     l2599:
  7380  1694  0856               	movf	___fladd@a,w
  7381  1695  07D2               	addwf	___fladd@b,f
  7382  1696  0857               	movf	___fladd@a+1,w
  7383  1697  1103               	clrz
  7384  1698  1803               	skipnc
  7385  1699  3E01               	addlw	1
  7386  169A  1903               	skipnz
  7387  169B  2E9D               	goto	u3701
  7388  169C  07D3               	addwf	___fladd@b+1,f
  7389  169D                     u3701:
  7390  169D  0858               	movf	___fladd@a+2,w
  7391  169E  1103               	clrz
  7392  169F  1803               	skipnc
  7393  16A0  3E01               	addlw	1
  7394  16A1  1903               	skipnz
  7395  16A2  2EA4               	goto	u3702
  7396  16A3  07D4               	addwf	___fladd@b+2,f
  7397  16A4                     u3702:
  7398  16A4  0859               	movf	___fladd@a+3,w
  7399  16A5  1103               	clrz
  7400  16A6  1803               	skipnc
  7401  16A7  3E01               	addlw	1
  7402  16A8  1903               	skipnz
  7403  16A9  2EAB               	goto	u3703
  7404  16AA  07D5               	addwf	___fladd@b+3,f
  7405  16AB                     u3703:
  7406  16AB                     l2601:
  7407  16AB  1C55               	btfss	___fladd@b+3,0
  7408  16AC  2EAE               	goto	u3711
  7409  16AD  2EAF               	goto	u3710
  7410  16AE                     u3711:
  7411  16AE  2F85               	goto	l2651
  7412  16AF                     u3710:
  7413  16AF                     l2603:
  7414  16AF  1C65               	btfss	___fladd@grs,0
  7415  16B0  2EB2               	goto	u3721
  7416  16B1  2EB3               	goto	u3720
  7417  16B2                     u3721:
  7418  16B2  2EBC               	goto	l2607
  7419  16B3                     u3720:
  7420  16B3                     l2605:
  7421  16B3  0865               	movf	___fladd@grs,w
  7422  16B4  00DA               	movwf	??___fladd
  7423  16B5  1003               	clrc
  7424  16B6  0C5A               	rrf	??___fladd,w
  7425  16B7  3801               	iorlw	1
  7426  16B8  00DB               	movwf	??___fladd+1
  7427  16B9  085B               	movf	??___fladd+1,w
  7428  16BA  00E5               	movwf	___fladd@grs
  7429  16BB  2EBE               	goto	l2609
  7430  16BC                     l2607:
  7431  16BC  1003               	clrc
  7432  16BD  0CE5               	rrf	___fladd@grs,f
  7433  16BE                     l2609:
  7434  16BE  1C52               	btfss	___fladd@b,0
  7435  16BF  2EC1               	goto	u3731
  7436  16C0  2EC2               	goto	u3730
  7437  16C1                     u3731:
  7438  16C1  2EC3               	goto	l2613
  7439  16C2                     u3730:
  7440  16C2                     l2611:
  7441  16C2  17E5               	bsf	___fladd@grs,7
  7442  16C3                     l2613:
  7443  16C3  3001               	movlw	1
  7444  16C4  00DA               	movwf	??___fladd
  7445  16C5                     u3745:
  7446  16C5  0D55               	rlf	___fladd@b+3,w
  7447  16C6  0CD5               	rrf	___fladd@b+3,f
  7448  16C7  0CD4               	rrf	___fladd@b+2,f
  7449  16C8  0CD3               	rrf	___fladd@b+1,f
  7450  16C9  0CD2               	rrf	___fladd@b,f
  7451  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  7452  16CB  2EC5               	goto	u3745
  7453  16CC                     l2615:
  7454  16CC  3001               	movlw	1
  7455  16CD  00DA               	movwf	??___fladd
  7456  16CE  085A               	movf	??___fladd,w
  7457  16CF  07E4               	addwf	___fladd@bexp,f
  7458  16D0  2F85               	goto	l2651
  7459  16D1                     l2617:
  7460  16D1  0855               	movf	___fladd@b+3,w
  7461  16D2  3A80               	xorlw	128
  7462  16D3  00FF               	movwf	btemp+1
  7463  16D4  0859               	movf	___fladd@a+3,w
  7464  16D5  3A80               	xorlw	128
  7465  16D6  027F               	subwf	btemp+1,w
  7466  16D7  1D03               	skipz
  7467  16D8  2EE3               	goto	u3753
  7468  16D9  0858               	movf	___fladd@a+2,w
  7469  16DA  0254               	subwf	___fladd@b+2,w
  7470  16DB  1D03               	skipz
  7471  16DC  2EE3               	goto	u3753
  7472  16DD  0857               	movf	___fladd@a+1,w
  7473  16DE  0253               	subwf	___fladd@b+1,w
  7474  16DF  1D03               	skipz
  7475  16E0  2EE3               	goto	u3753
  7476  16E1  0856               	movf	___fladd@a,w
  7477  16E2  0252               	subwf	___fladd@b,w
  7478  16E3                     u3753:
  7479  16E3  1803               	skipnc
  7480  16E4  2EE6               	goto	u3751
  7481  16E5  2EE7               	goto	u3750
  7482  16E6                     u3751:
  7483  16E6  2F3F               	goto	l2627
  7484  16E7                     u3750:
  7485  16E7                     l2619:
  7486  16E7  30FF               	movlw	255
  7487  16E8  00DA               	movwf	??___fladd
  7488  16E9  30FF               	movlw	255
  7489  16EA  00DB               	movwf	??___fladd+1
  7490  16EB  30FF               	movlw	255
  7491  16EC  00DC               	movwf	??___fladd+2
  7492  16ED  30FF               	movlw	255
  7493  16EE  00DD               	movwf	??___fladd+3
  7494  16EF  0856               	movf	___fladd@a,w
  7495  16F0  00DE               	movwf	??___fladd+4
  7496  16F1  0857               	movf	___fladd@a+1,w
  7497  16F2  00DF               	movwf	??___fladd+5
  7498  16F3  0858               	movf	___fladd@a+2,w
  7499  16F4  00E0               	movwf	??___fladd+6
  7500  16F5  0859               	movf	___fladd@a+3,w
  7501  16F6  00E1               	movwf	??___fladd+7
  7502  16F7  0852               	movf	___fladd@b,w
  7503  16F8  02DE               	subwf	??___fladd+4,f
  7504  16F9  0853               	movf	___fladd@b+1,w
  7505  16FA  1C03               	skipc
  7506  16FB  0F53               	incfsz	___fladd@b+1,w
  7507  16FC  2EFE               	goto	u3761
  7508  16FD  2EFF               	goto	u3762
  7509  16FE                     u3761:
  7510  16FE  02DF               	subwf	??___fladd+5,f
  7511  16FF                     u3762:
  7512  16FF  0854               	movf	___fladd@b+2,w
  7513  1700  1C03               	skipc
  7514  1701  0F54               	incfsz	___fladd@b+2,w
  7515  1702  2F04               	goto	u3763
  7516  1703  2F05               	goto	u3764
  7517  1704                     u3763:
  7518  1704  02E0               	subwf	??___fladd+6,f
  7519  1705                     u3764:
  7520  1705  0855               	movf	___fladd@b+3,w
  7521  1706  1C03               	skipc
  7522  1707  0F55               	incfsz	___fladd@b+3,w
  7523  1708  2F0A               	goto	u3765
  7524  1709  2F0B               	goto	u3766
  7525  170A                     u3765:
  7526  170A  02E1               	subwf	??___fladd+7,f
  7527  170B                     u3766:
  7528  170B  085E               	movf	??___fladd+4,w
  7529  170C  07DA               	addwf	??___fladd,f
  7530  170D  085F               	movf	??___fladd+5,w
  7531  170E  1803               	skipnc
  7532  170F  0F5F               	incfsz	??___fladd+5,w
  7533  1710  2F12               	goto	u3770
  7534  1711  2F13               	goto	u3771
  7535  1712                     u3770:
  7536  1712  07DB               	addwf	??___fladd+1,f
  7537  1713                     u3771:
  7538  1713  0860               	movf	??___fladd+6,w
  7539  1714  1803               	skipnc
  7540  1715  0F60               	incfsz	??___fladd+6,w
  7541  1716  2F18               	goto	u3772
  7542  1717  2F19               	goto	u3773
  7543  1718                     u3772:
  7544  1718  07DC               	addwf	??___fladd+2,f
  7545  1719                     u3773:
  7546  1719  0861               	movf	??___fladd+7,w
  7547  171A  1803               	skipnc
  7548  171B  0A61               	incf	??___fladd+7,w
  7549  171C  07DD               	addwf	??___fladd+3,f
  7550  171D  085D               	movf	??___fladd+3,w
  7551  171E  00D5               	movwf	___fladd@b+3
  7552  171F  085C               	movf	??___fladd+2,w
  7553  1720  00D4               	movwf	___fladd@b+2
  7554  1721  085B               	movf	??___fladd+1,w
  7555  1722  00D3               	movwf	___fladd@b+1
  7556  1723  085A               	movf	??___fladd,w
  7557  1724  00D2               	movwf	___fladd@b
  7558  1725                     l2621:
  7559  1725  3080               	movlw	128
  7560  1726  00DA               	movwf	??___fladd
  7561  1727  085A               	movf	??___fladd,w
  7562  1728  06E2               	xorwf	___fladd@signs,f
  7563  1729  09E5               	comf	___fladd@grs,f
  7564  172A  0AE5               	incf	___fladd@grs,f
  7565  172B                     l2623:
  7566  172B  0865               	movf	___fladd@grs,w
  7567  172C  1D03               	btfss	3,2
  7568  172D  2F2F               	goto	u3781
  7569  172E  2F30               	goto	u3780
  7570  172F                     u3781:
  7571  172F  2F4D               	goto	l686
  7572  1730                     u3780:
  7573  1730                     l2625:
  7574  1730  3001               	movlw	1
  7575  1731  07D2               	addwf	___fladd@b,f
  7576  1732  3000               	movlw	0
  7577  1733  1803               	skipnc
  7578  1734  3001               	movlw	1
  7579  1735  07D3               	addwf	___fladd@b+1,f
  7580  1736  3000               	movlw	0
  7581  1737  1803               	skipnc
  7582  1738  3001               	movlw	1
  7583  1739  07D4               	addwf	___fladd@b+2,f
  7584  173A  3000               	movlw	0
  7585  173B  1803               	skipnc
  7586  173C  3001               	movlw	1
  7587  173D  07D5               	addwf	___fladd@b+3,f
  7588  173E  2F4D               	goto	l686
  7589  173F                     l2627:
  7590  173F  0856               	movf	___fladd@a,w
  7591  1740  02D2               	subwf	___fladd@b,f
  7592  1741  0857               	movf	___fladd@a+1,w
  7593  1742  1C03               	skipc
  7594  1743  0F57               	incfsz	___fladd@a+1,w
  7595  1744  02D3               	subwf	___fladd@b+1,f
  7596  1745  0858               	movf	___fladd@a+2,w
  7597  1746  1C03               	skipc
  7598  1747  0F58               	incfsz	___fladd@a+2,w
  7599  1748  02D4               	subwf	___fladd@b+2,f
  7600  1749  0859               	movf	___fladd@a+3,w
  7601  174A  1C03               	skipc
  7602  174B  0F59               	incfsz	___fladd@a+3,w
  7603  174C  02D5               	subwf	___fladd@b+3,f
  7604  174D                     l686:
  7605  174D  0855               	movf	___fladd@b+3,w
  7606  174E  0454               	iorwf	___fladd@b+2,w
  7607  174F  0453               	iorwf	___fladd@b+1,w
  7608  1750  0452               	iorwf	___fladd@b,w
  7609  1751  1D03               	skipz
  7610  1752  2F54               	goto	u3791
  7611  1753  2F55               	goto	u3790
  7612  1754                     u3791:
  7613  1754  2F81               	goto	l2649
  7614  1755                     u3790:
  7615  1755                     l2629:
  7616  1755  0865               	movf	___fladd@grs,w
  7617  1756  1D03               	btfss	3,2
  7618  1757  2F59               	goto	u3801
  7619  1758  2F5A               	goto	u3800
  7620  1759                     u3801:
  7621  1759  2F81               	goto	l2649
  7622  175A                     u3800:
  7623  175A                     l2631:
  7624  175A  3000               	movlw	0
  7625  175B  00D5               	movwf	?___fladd+3
  7626  175C  3000               	movlw	0
  7627  175D  00D4               	movwf	?___fladd+2
  7628  175E  3000               	movlw	0
  7629  175F  00D3               	movwf	?___fladd+1
  7630  1760  3000               	movlw	0
  7631  1761  00D2               	movwf	?___fladd
  7632  1762  2FFF               	goto	l678
  7633  1763                     l2635:
  7634  1763  3001               	movlw	1
  7635  1764  00DA               	movwf	??___fladd
  7636  1765                     u3815:
  7637  1765  1003               	clrc
  7638  1766  0DD2               	rlf	___fladd@b,f
  7639  1767  0DD3               	rlf	___fladd@b+1,f
  7640  1768  0DD4               	rlf	___fladd@b+2,f
  7641  1769  0DD5               	rlf	___fladd@b+3,f
  7642  176A  0BDA               	decfsz	??___fladd,f
  7643  176B  2F65               	goto	u3815
  7644  176C                     l2637:
  7645  176C  1FE5               	btfss	___fladd@grs,7
  7646  176D  2F6F               	goto	u3821
  7647  176E  2F70               	goto	u3820
  7648  176F                     u3821:
  7649  176F  2F71               	goto	l690
  7650  1770                     u3820:
  7651  1770                     l2639:
  7652  1770  1452               	bsf	___fladd@b,0
  7653  1771                     l690:
  7654  1771  1C65               	btfss	___fladd@grs,0
  7655  1772  2F74               	goto	u3831
  7656  1773  2F75               	goto	u3830
  7657  1774                     u3831:
  7658  1774  2F78               	goto	l2643
  7659  1775                     u3830:
  7660  1775                     l2641:
  7661  1775  1403               	setc
  7662  1776  0DE5               	rlf	___fladd@grs,f
  7663  1777  2F7A               	goto	l2645
  7664  1778                     l2643:
  7665  1778  1003               	clrc
  7666  1779  0DE5               	rlf	___fladd@grs,f
  7667  177A                     l2645:
  7668  177A  0864               	movf	___fladd@bexp,w
  7669  177B  1903               	btfsc	3,2
  7670  177C  2F7E               	goto	u3841
  7671  177D  2F7F               	goto	u3840
  7672  177E                     u3841:
  7673  177E  2F81               	goto	l2649
  7674  177F                     u3840:
  7675  177F                     l2647:
  7676  177F  3001               	movlw	1
  7677  1780  02E4               	subwf	___fladd@bexp,f
  7678  1781                     l2649:
  7679  1781  1FD4               	btfss	___fladd@b+2,7
  7680  1782  2F84               	goto	u3851
  7681  1783  2F85               	goto	u3850
  7682  1784                     u3851:
  7683  1784  2F63               	goto	l2635
  7684  1785                     u3850:
  7685  1785                     l2651:
  7686  1785  01E3               	clrf	___fladd@aexp
  7687  1786                     l2653:
  7688  1786  1FE5               	btfss	___fladd@grs,7
  7689  1787  2F89               	goto	u3861
  7690  1788  2F8A               	goto	u3860
  7691  1789                     u3861:
  7692  1789  2F98               	goto	l2661
  7693  178A                     u3860:
  7694  178A                     l2655:
  7695  178A  0865               	movf	___fladd@grs,w
  7696  178B  397F               	andlw	127
  7697  178C  1903               	btfsc	3,2
  7698  178D  2F8F               	goto	u3871
  7699  178E  2F90               	goto	u3870
  7700  178F                     u3871:
  7701  178F  2F93               	goto	l696
  7702  1790                     u3870:
  7703  1790                     l2657:
  7704  1790  01E3               	clrf	___fladd@aexp
  7705  1791  0AE3               	incf	___fladd@aexp,f
  7706  1792  2F98               	goto	l2661
  7707  1793                     l696:
  7708  1793  1C52               	btfss	___fladd@b,0
  7709  1794  2F96               	goto	u3881
  7710  1795  2F97               	goto	u3880
  7711  1796                     u3881:
  7712  1796  2F98               	goto	l2661
  7713  1797                     u3880:
  7714  1797  2F90               	goto	l2657
  7715  1798                     l2661:
  7716  1798  0863               	movf	___fladd@aexp,w
  7717  1799  1903               	btfsc	3,2
  7718  179A  2F9C               	goto	u3891
  7719  179B  2F9D               	goto	u3890
  7720  179C                     u3891:
  7721  179C  2FD1               	goto	l699
  7722  179D                     u3890:
  7723  179D                     l2663:
  7724  179D  3001               	movlw	1
  7725  179E  07D2               	addwf	___fladd@b,f
  7726  179F  3000               	movlw	0
  7727  17A0  1803               	skipnc
  7728  17A1  3001               	movlw	1
  7729  17A2  07D3               	addwf	___fladd@b+1,f
  7730  17A3  3000               	movlw	0
  7731  17A4  1803               	skipnc
  7732  17A5  3001               	movlw	1
  7733  17A6  07D4               	addwf	___fladd@b+2,f
  7734  17A7  3000               	movlw	0
  7735  17A8  1803               	skipnc
  7736  17A9  3001               	movlw	1
  7737  17AA  07D5               	addwf	___fladd@b+3,f
  7738  17AB                     l2665:
  7739  17AB  1C55               	btfss	___fladd@b+3,0
  7740  17AC  2FAE               	goto	u3901
  7741  17AD  2FAF               	goto	u3900
  7742  17AE                     u3901:
  7743  17AE  2FD1               	goto	l699
  7744  17AF                     u3900:
  7745  17AF                     l2667:
  7746  17AF  0852               	movf	___fladd@b,w
  7747  17B0  00DA               	movwf	??___fladd
  7748  17B1  0853               	movf	___fladd@b+1,w
  7749  17B2  00DB               	movwf	??___fladd+1
  7750  17B3  0854               	movf	___fladd@b+2,w
  7751  17B4  00DC               	movwf	??___fladd+2
  7752  17B5  0855               	movf	___fladd@b+3,w
  7753  17B6  00DD               	movwf	??___fladd+3
  7754  17B7  3001               	movlw	1
  7755  17B8  00DE               	movwf	??___fladd+4
  7756  17B9                     u3915:
  7757  17B9  0D5D               	rlf	??___fladd+3,w
  7758  17BA  0CDD               	rrf	??___fladd+3,f
  7759  17BB  0CDC               	rrf	??___fladd+2,f
  7760  17BC  0CDB               	rrf	??___fladd+1,f
  7761  17BD  0CDA               	rrf	??___fladd,f
  7762  17BE                     u3910:
  7763  17BE  0BDE               	decfsz	??___fladd+4,f
  7764  17BF  2FB9               	goto	u3915
  7765  17C0  085D               	movf	??___fladd+3,w
  7766  17C1  00D5               	movwf	___fladd@b+3
  7767  17C2  085C               	movf	??___fladd+2,w
  7768  17C3  00D4               	movwf	___fladd@b+2
  7769  17C4  085B               	movf	??___fladd+1,w
  7770  17C5  00D3               	movwf	___fladd@b+1
  7771  17C6  085A               	movf	??___fladd,w
  7772  17C7  00D2               	movwf	___fladd@b
  7773  17C8  0A64               	incf	___fladd@bexp,w
  7774  17C9  1903               	btfsc	3,2
  7775  17CA  2FCC               	goto	u3921
  7776  17CB  2FCD               	goto	u3920
  7777  17CC                     u3921:
  7778  17CC  2FD1               	goto	l699
  7779  17CD                     u3920:
  7780  17CD                     l2669:
  7781  17CD  3001               	movlw	1
  7782  17CE  00DA               	movwf	??___fladd
  7783  17CF  085A               	movf	??___fladd,w
  7784  17D0  07E4               	addwf	___fladd@bexp,f
  7785  17D1                     l699:
  7786  17D1  0A64               	incf	___fladd@bexp,w
  7787  17D2  1903               	btfsc	3,2
  7788  17D3  2FD5               	goto	u3931
  7789  17D4  2FD6               	goto	u3930
  7790  17D5                     u3931:
  7791  17D5  2FDB               	goto	l2673
  7792  17D6                     u3930:
  7793  17D6                     l2671:
  7794  17D6  0864               	movf	___fladd@bexp,w
  7795  17D7  1D03               	btfss	3,2
  7796  17D8  2FDA               	goto	u3941
  7797  17D9  2FDB               	goto	u3940
  7798  17DA                     u3941:
  7799  17DA  2FE9               	goto	l2679
  7800  17DB                     u3940:
  7801  17DB                     l2673:
  7802  17DB  3000               	movlw	0
  7803  17DC  00D5               	movwf	___fladd@b+3
  7804  17DD  3000               	movlw	0
  7805  17DE  00D4               	movwf	___fladd@b+2
  7806  17DF  3000               	movlw	0
  7807  17E0  00D3               	movwf	___fladd@b+1
  7808  17E1  3000               	movlw	0
  7809  17E2  00D2               	movwf	___fladd@b
  7810  17E3                     l2675:
  7811  17E3  0864               	movf	___fladd@bexp,w
  7812  17E4  1D03               	btfss	3,2
  7813  17E5  2FE7               	goto	u3951
  7814  17E6  2FE8               	goto	u3950
  7815  17E7                     u3951:
  7816  17E7  2FE9               	goto	l2679
  7817  17E8                     u3950:
  7818  17E8                     l2677:
  7819  17E8  01E2               	clrf	___fladd@signs
  7820  17E9                     l2679:
  7821  17E9  1C64               	btfss	___fladd@bexp,0
  7822  17EA  2FEC               	goto	u3961
  7823  17EB  2FED               	goto	u3960
  7824  17EC                     u3961:
  7825  17EC  2FEF               	goto	l2683
  7826  17ED                     u3960:
  7827  17ED                     l2681:
  7828  17ED  17D4               	bsf	___fladd@b+2,7
  7829  17EE  2FF3               	goto	l707
  7830  17EF                     l2683:
  7831  17EF  307F               	movlw	127
  7832  17F0  00DA               	movwf	??___fladd
  7833  17F1  085A               	movf	??___fladd,w
  7834  17F2  05D4               	andwf	___fladd@b+2,f
  7835  17F3                     l707:
  7836  17F3  0864               	movf	___fladd@bexp,w
  7837  17F4  00DA               	movwf	??___fladd
  7838  17F5  1003               	clrc
  7839  17F6  0C5A               	rrf	??___fladd,w
  7840  17F7  00DB               	movwf	??___fladd+1
  7841  17F8  085B               	movf	??___fladd+1,w
  7842  17F9  00D5               	movwf	___fladd@b+3
  7843  17FA                     l2685:
  7844  17FA  1FE2               	btfss	___fladd@signs,7
  7845  17FB  2FFD               	goto	u3971
  7846  17FC  2FFE               	goto	u3970
  7847  17FD                     u3971:
  7848  17FD  2FFF               	goto	l708
  7849  17FE                     u3970:
  7850  17FE                     l2687:
  7851  17FE  17D5               	bsf	___fladd@b+3,7
  7852  17FF                     l708:
  7853  17FF                     l678:
  7854  17FF  0008               	return
  7855  1800                     __end_of___fladd:
  7856                           
  7857                           	psect	text17
  7858  1A5B                     __ptext17:	
  7859 ;; *************** function ___flneg *****************
  7860 ;; Defined at:
  7861 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  f1              4    0[COMMON] unsigned char 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;		None
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  4    0[COMMON] unsigned char 
  7868 ;; Registers used:
  7869 ;;		wreg
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7875 ;;      Params:         4       0       0       0       0
  7876 ;;      Locals:         0       0       0       0       0
  7877 ;;      Temps:          0       0       0       0       0
  7878 ;;      Totals:         4       0       0       0       0
  7879 ;;Total ram usage:        4 bytes
  7880 ;; Hardware stack levels used: 1
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_sprintf
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           
  7889                           ;psect for function ___flneg
  7890  1A5B                     ___flneg:
  7891  1A5B                     l3093:	
  7892                           ;incstack = 0
  7893                           ; Regs used in ___flneg: [wreg]
  7894                           
  7895  1A5B  0873               	movf	___flneg@f1+3,w
  7896  1A5C  0472               	iorwf	___flneg@f1+2,w
  7897  1A5D  0471               	iorwf	___flneg@f1+1,w
  7898  1A5E  0470               	iorwf	___flneg@f1,w
  7899  1A5F  1903               	skipnz
  7900  1A60  2A62               	goto	u5091
  7901  1A61  2A63               	goto	u5090
  7902  1A62                     u5091:
  7903  1A62  2A65               	goto	l3097
  7904  1A63                     u5090:
  7905  1A63                     l3095:
  7906  1A63  3080               	movlw	128
  7907  1A64  06F3               	xorwf	___flneg@f1+3,f
  7908  1A65                     l3097:
  7909  1A65                     l537:
  7910  1A65  0008               	return
  7911  1A66                     __end_of___flneg:
  7912                           
  7913                           	psect	text18
  7914  1EA4                     __ptext18:	
  7915 ;; *************** function ___flge *****************
  7916 ;; Defined at:
  7917 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  ff1             4    0[COMMON] unsigned char 
  7920 ;;  ff2             4    4[COMMON] unsigned char 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;		None               void
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7932 ;;      Params:         8       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0
  7934 ;;      Temps:          4       0       0       0       0
  7935 ;;      Totals:        12       0       0       0       0
  7936 ;;Total ram usage:       12 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_sprintf
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           
  7946                           ;psect for function ___flge
  7947  1EA4                     ___flge:
  7948  1EA4                     l3073:	
  7949                           ;incstack = 0
  7950                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7951                           
  7952  1EA4  3000               	movlw	0
  7953  1EA5  0570               	andwf	___flge@ff1,w
  7954  1EA6  00F8               	movwf	??___flge
  7955  1EA7  3000               	movlw	0
  7956  1EA8  0571               	andwf	___flge@ff1+1,w
  7957  1EA9  00F9               	movwf	??___flge+1
  7958  1EAA  3080               	movlw	128
  7959  1EAB  0572               	andwf	___flge@ff1+2,w
  7960  1EAC  00FA               	movwf	??___flge+2
  7961  1EAD  307F               	movlw	127
  7962  1EAE  0573               	andwf	___flge@ff1+3,w
  7963  1EAF  00FB               	movwf	??___flge+3
  7964  1EB0  087B               	movf	??___flge+3,w
  7965  1EB1  047A               	iorwf	??___flge+2,w
  7966  1EB2  0479               	iorwf	??___flge+1,w
  7967  1EB3  0478               	iorwf	??___flge,w
  7968  1EB4  1D03               	skipz
  7969  1EB5  2EB7               	goto	u5021
  7970  1EB6  2EB8               	goto	u5020
  7971  1EB7                     u5021:
  7972  1EB7  2EC0               	goto	l529
  7973  1EB8                     u5020:
  7974  1EB8                     l3075:
  7975  1EB8  3000               	movlw	0
  7976  1EB9  00F3               	movwf	___flge@ff1+3
  7977  1EBA  3000               	movlw	0
  7978  1EBB  00F2               	movwf	___flge@ff1+2
  7979  1EBC  3000               	movlw	0
  7980  1EBD  00F1               	movwf	___flge@ff1+1
  7981  1EBE  3000               	movlw	0
  7982  1EBF  00F0               	movwf	___flge@ff1
  7983  1EC0                     l529:
  7984  1EC0  3000               	movlw	0
  7985  1EC1  0574               	andwf	___flge@ff2,w
  7986  1EC2  00F8               	movwf	??___flge
  7987  1EC3  3000               	movlw	0
  7988  1EC4  0575               	andwf	___flge@ff2+1,w
  7989  1EC5  00F9               	movwf	??___flge+1
  7990  1EC6  3080               	movlw	128
  7991  1EC7  0576               	andwf	___flge@ff2+2,w
  7992  1EC8  00FA               	movwf	??___flge+2
  7993  1EC9  307F               	movlw	127
  7994  1ECA  0577               	andwf	___flge@ff2+3,w
  7995  1ECB  00FB               	movwf	??___flge+3
  7996  1ECC  087B               	movf	??___flge+3,w
  7997  1ECD  047A               	iorwf	??___flge+2,w
  7998  1ECE  0479               	iorwf	??___flge+1,w
  7999  1ECF  0478               	iorwf	??___flge,w
  8000  1ED0  1D03               	skipz
  8001  1ED1  2ED3               	goto	u5031
  8002  1ED2  2ED4               	goto	u5030
  8003  1ED3                     u5031:
  8004  1ED3  2EDC               	goto	l3079
  8005  1ED4                     u5030:
  8006  1ED4                     l3077:
  8007  1ED4  3000               	movlw	0
  8008  1ED5  00F7               	movwf	___flge@ff2+3
  8009  1ED6  3000               	movlw	0
  8010  1ED7  00F6               	movwf	___flge@ff2+2
  8011  1ED8  3000               	movlw	0
  8012  1ED9  00F5               	movwf	___flge@ff2+1
  8013  1EDA  3000               	movlw	0
  8014  1EDB  00F4               	movwf	___flge@ff2
  8015  1EDC                     l3079:
  8016  1EDC  1FF3               	btfss	___flge@ff1+3,7
  8017  1EDD  2EDF               	goto	u5041
  8018  1EDE  2EE0               	goto	u5040
  8019  1EDF                     u5041:
  8020  1EDF  2F04               	goto	l3083
  8021  1EE0                     u5040:
  8022  1EE0                     l3081:
  8023  1EE0  3000               	movlw	0
  8024  1EE1  00F8               	movwf	??___flge
  8025  1EE2  3000               	movlw	0
  8026  1EE3  00F9               	movwf	??___flge+1
  8027  1EE4  3000               	movlw	0
  8028  1EE5  00FA               	movwf	??___flge+2
  8029  1EE6  3080               	movlw	128
  8030  1EE7  00FB               	movwf	??___flge+3
  8031  1EE8  0870               	movf	___flge@ff1,w
  8032  1EE9  02F8               	subwf	??___flge,f
  8033  1EEA  0871               	movf	___flge@ff1+1,w
  8034  1EEB  1C03               	skipc
  8035  1EEC  0F71               	incfsz	___flge@ff1+1,w
  8036  1EED  2EEF               	goto	u5051
  8037  1EEE  2EF0               	goto	u5052
  8038  1EEF                     u5051:
  8039  1EEF  02F9               	subwf	??___flge+1,f
  8040  1EF0                     u5052:
  8041  1EF0  0872               	movf	___flge@ff1+2,w
  8042  1EF1  1C03               	skipc
  8043  1EF2  0F72               	incfsz	___flge@ff1+2,w
  8044  1EF3  2EF5               	goto	u5053
  8045  1EF4  2EF6               	goto	u5054
  8046  1EF5                     u5053:
  8047  1EF5  02FA               	subwf	??___flge+2,f
  8048  1EF6                     u5054:
  8049  1EF6  0873               	movf	___flge@ff1+3,w
  8050  1EF7  1C03               	skipc
  8051  1EF8  0F73               	incfsz	___flge@ff1+3,w
  8052  1EF9  2EFB               	goto	u5055
  8053  1EFA  2EFC               	goto	u5056
  8054  1EFB                     u5055:
  8055  1EFB  02FB               	subwf	??___flge+3,f
  8056  1EFC                     u5056:
  8057  1EFC  087B               	movf	??___flge+3,w
  8058  1EFD  00F3               	movwf	___flge@ff1+3
  8059  1EFE  087A               	movf	??___flge+2,w
  8060  1EFF  00F2               	movwf	___flge@ff1+2
  8061  1F00  0879               	movf	??___flge+1,w
  8062  1F01  00F1               	movwf	___flge@ff1+1
  8063  1F02  0878               	movf	??___flge,w
  8064  1F03  00F0               	movwf	___flge@ff1
  8065  1F04                     l3083:
  8066  1F04  1FF7               	btfss	___flge@ff2+3,7
  8067  1F05  2F07               	goto	u5061
  8068  1F06  2F08               	goto	u5060
  8069  1F07                     u5061:
  8070  1F07  2F2C               	goto	l532
  8071  1F08                     u5060:
  8072  1F08                     l3085:
  8073  1F08  3000               	movlw	0
  8074  1F09  00F8               	movwf	??___flge
  8075  1F0A  3000               	movlw	0
  8076  1F0B  00F9               	movwf	??___flge+1
  8077  1F0C  3000               	movlw	0
  8078  1F0D  00FA               	movwf	??___flge+2
  8079  1F0E  3080               	movlw	128
  8080  1F0F  00FB               	movwf	??___flge+3
  8081  1F10  0874               	movf	___flge@ff2,w
  8082  1F11  02F8               	subwf	??___flge,f
  8083  1F12  0875               	movf	___flge@ff2+1,w
  8084  1F13  1C03               	skipc
  8085  1F14  0F75               	incfsz	___flge@ff2+1,w
  8086  1F15  2F17               	goto	u5071
  8087  1F16  2F18               	goto	u5072
  8088  1F17                     u5071:
  8089  1F17  02F9               	subwf	??___flge+1,f
  8090  1F18                     u5072:
  8091  1F18  0876               	movf	___flge@ff2+2,w
  8092  1F19  1C03               	skipc
  8093  1F1A  0F76               	incfsz	___flge@ff2+2,w
  8094  1F1B  2F1D               	goto	u5073
  8095  1F1C  2F1E               	goto	u5074
  8096  1F1D                     u5073:
  8097  1F1D  02FA               	subwf	??___flge+2,f
  8098  1F1E                     u5074:
  8099  1F1E  0877               	movf	___flge@ff2+3,w
  8100  1F1F  1C03               	skipc
  8101  1F20  0F77               	incfsz	___flge@ff2+3,w
  8102  1F21  2F23               	goto	u5075
  8103  1F22  2F24               	goto	u5076
  8104  1F23                     u5075:
  8105  1F23  02FB               	subwf	??___flge+3,f
  8106  1F24                     u5076:
  8107  1F24  087B               	movf	??___flge+3,w
  8108  1F25  00F7               	movwf	___flge@ff2+3
  8109  1F26  087A               	movf	??___flge+2,w
  8110  1F27  00F6               	movwf	___flge@ff2+2
  8111  1F28  0879               	movf	??___flge+1,w
  8112  1F29  00F5               	movwf	___flge@ff2+1
  8113  1F2A  0878               	movf	??___flge,w
  8114  1F2B  00F4               	movwf	___flge@ff2
  8115  1F2C                     l532:
  8116  1F2C  3080               	movlw	128
  8117  1F2D  06F3               	xorwf	___flge@ff1+3,f
  8118  1F2E  3080               	movlw	128
  8119  1F2F  06F7               	xorwf	___flge@ff2+3,f
  8120  1F30  0877               	movf	___flge@ff2+3,w
  8121  1F31  0273               	subwf	___flge@ff1+3,w
  8122  1F32  1D03               	skipz
  8123  1F33  2F3E               	goto	u5085
  8124  1F34  0876               	movf	___flge@ff2+2,w
  8125  1F35  0272               	subwf	___flge@ff1+2,w
  8126  1F36  1D03               	skipz
  8127  1F37  2F3E               	goto	u5085
  8128  1F38  0875               	movf	___flge@ff2+1,w
  8129  1F39  0271               	subwf	___flge@ff1+1,w
  8130  1F3A  1D03               	skipz
  8131  1F3B  2F3E               	goto	u5085
  8132  1F3C  0874               	movf	___flge@ff2,w
  8133  1F3D  0270               	subwf	___flge@ff1,w
  8134  1F3E                     u5085:
  8135  1F3E  1803               	skipnc
  8136  1F3F  2F41               	goto	u5081
  8137  1F40  2F42               	goto	u5080
  8138  1F41                     u5081:
  8139  1F41  2F44               	goto	l3089
  8140  1F42                     u5080:
  8141  1F42                     l3087:
  8142  1F42  1003               	clrc
  8143  1F43  2F45               	goto	l533
  8144  1F44                     l3089:
  8145  1F44  1403               	setc
  8146  1F45                     l533:
  8147  1F45  0008               	return
  8148  1F46                     __end_of___flge:
  8149                           
  8150                           	psect	text19
  8151  1BBC                     __ptext19:	
  8152 ;; *************** function ___fleq *****************
  8153 ;; Defined at:
  8154 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;  ff1             4    0[COMMON] unsigned char 
  8157 ;;  ff2             4    4[COMMON] unsigned char 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;		None               void
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8169 ;;      Params:         8       0       0       0       0
  8170 ;;      Locals:         0       0       0       0       0
  8171 ;;      Temps:          4       0       0       0       0
  8172 ;;      Totals:        12       0       0       0       0
  8173 ;;Total ram usage:       12 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; This function calls:
  8176 ;;		Nothing
  8177 ;; This function is called by:
  8178 ;;		_sprintf
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function ___fleq
  8184  1BBC                     ___fleq:
  8185  1BBC                     l3061:	
  8186                           ;incstack = 0
  8187                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8188                           
  8189  1BBC  3000               	movlw	0
  8190  1BBD  0570               	andwf	___fleq@ff1,w
  8191  1BBE  00F8               	movwf	??___fleq
  8192  1BBF  3000               	movlw	0
  8193  1BC0  0571               	andwf	___fleq@ff1+1,w
  8194  1BC1  00F9               	movwf	??___fleq+1
  8195  1BC2  3080               	movlw	128
  8196  1BC3  0572               	andwf	___fleq@ff1+2,w
  8197  1BC4  00FA               	movwf	??___fleq+2
  8198  1BC5  307F               	movlw	127
  8199  1BC6  0573               	andwf	___fleq@ff1+3,w
  8200  1BC7  00FB               	movwf	??___fleq+3
  8201  1BC8  087B               	movf	??___fleq+3,w
  8202  1BC9  047A               	iorwf	??___fleq+2,w
  8203  1BCA  0479               	iorwf	??___fleq+1,w
  8204  1BCB  0478               	iorwf	??___fleq,w
  8205  1BCC  1D03               	skipz
  8206  1BCD  2BCF               	goto	u4991
  8207  1BCE  2BD0               	goto	u4990
  8208  1BCF                     u4991:
  8209  1BCF  2BD8               	goto	l524
  8210  1BD0                     u4990:
  8211  1BD0                     l3063:
  8212  1BD0  3000               	movlw	0
  8213  1BD1  00F3               	movwf	___fleq@ff1+3
  8214  1BD2  3000               	movlw	0
  8215  1BD3  00F2               	movwf	___fleq@ff1+2
  8216  1BD4  3000               	movlw	0
  8217  1BD5  00F1               	movwf	___fleq@ff1+1
  8218  1BD6  3000               	movlw	0
  8219  1BD7  00F0               	movwf	___fleq@ff1
  8220  1BD8                     l524:
  8221  1BD8  3000               	movlw	0
  8222  1BD9  0574               	andwf	___fleq@ff2,w
  8223  1BDA  00F8               	movwf	??___fleq
  8224  1BDB  3000               	movlw	0
  8225  1BDC  0575               	andwf	___fleq@ff2+1,w
  8226  1BDD  00F9               	movwf	??___fleq+1
  8227  1BDE  3080               	movlw	128
  8228  1BDF  0576               	andwf	___fleq@ff2+2,w
  8229  1BE0  00FA               	movwf	??___fleq+2
  8230  1BE1  307F               	movlw	127
  8231  1BE2  0577               	andwf	___fleq@ff2+3,w
  8232  1BE3  00FB               	movwf	??___fleq+3
  8233  1BE4  087B               	movf	??___fleq+3,w
  8234  1BE5  047A               	iorwf	??___fleq+2,w
  8235  1BE6  0479               	iorwf	??___fleq+1,w
  8236  1BE7  0478               	iorwf	??___fleq,w
  8237  1BE8  1D03               	skipz
  8238  1BE9  2BEB               	goto	u5001
  8239  1BEA  2BEC               	goto	u5000
  8240  1BEB                     u5001:
  8241  1BEB  2BF4               	goto	l525
  8242  1BEC                     u5000:
  8243  1BEC                     l3065:
  8244  1BEC  3000               	movlw	0
  8245  1BED  00F7               	movwf	___fleq@ff2+3
  8246  1BEE  3000               	movlw	0
  8247  1BEF  00F6               	movwf	___fleq@ff2+2
  8248  1BF0  3000               	movlw	0
  8249  1BF1  00F5               	movwf	___fleq@ff2+1
  8250  1BF2  3000               	movlw	0
  8251  1BF3  00F4               	movwf	___fleq@ff2
  8252  1BF4                     l525:
  8253  1BF4  0877               	movf	___fleq@ff2+3,w
  8254  1BF5  0673               	xorwf	___fleq@ff1+3,w
  8255  1BF6  1D03               	skipz
  8256  1BF7  2C02               	goto	u5015
  8257  1BF8  0876               	movf	___fleq@ff2+2,w
  8258  1BF9  0672               	xorwf	___fleq@ff1+2,w
  8259  1BFA  1D03               	skipz
  8260  1BFB  2C02               	goto	u5015
  8261  1BFC  0875               	movf	___fleq@ff2+1,w
  8262  1BFD  0671               	xorwf	___fleq@ff1+1,w
  8263  1BFE  1D03               	skipz
  8264  1BFF  2C02               	goto	u5015
  8265  1C00  0874               	movf	___fleq@ff2,w
  8266  1C01  0670               	xorwf	___fleq@ff1,w
  8267  1C02                     u5015:
  8268  1C02  1903               	skipnz
  8269  1C03  2C05               	goto	u5011
  8270  1C04  2C06               	goto	u5010
  8271  1C05                     u5011:
  8272  1C05  2C08               	goto	l3069
  8273  1C06                     u5010:
  8274  1C06                     l3067:
  8275  1C06  1003               	clrc
  8276  1C07  2C09               	goto	l526
  8277  1C08                     l3069:
  8278  1C08  1403               	setc
  8279  1C09                     l526:
  8280  1C09  0008               	return
  8281  1C0A                     __end_of___fleq:
  8282                           
  8283                           	psect	text20
  8284  1C0A                     __ptext20:	
  8285 ;; *************** function _mapear *****************
  8286 ;; Defined at:
  8287 ;;		line 48 in file "lab2.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  adresval        1    wreg     unsigned char 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  adresval        1   64[BANK0 ] unsigned char 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  4   56[BANK0 ] float 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8301 ;;      Params:         0       4       0       0       0
  8302 ;;      Locals:         0       1       0       0       0
  8303 ;;      Temps:          0       4       0       0       0
  8304 ;;      Totals:         0       9       0       0       0
  8305 ;;Total ram usage:        9 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; Hardware stack levels required when called: 2
  8308 ;; This function calls:
  8309 ;;		___fldiv
  8310 ;;		___flmul
  8311 ;;		___xxtofl
  8312 ;; This function is called by:
  8313 ;;		_main
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           
  8318                           ;psect for function _mapear
  8319  1C0A                     _mapear:
  8320                           
  8321                           ;incstack = 0
  8322                           ; Regs used in _mapear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8323                           ;mapear@adresval stored from wreg
  8324  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
  8325  1C0B  1303               	bcf	3,6	;RP1=0, select bank0
  8326  1C0C  00E0               	movwf	mapear@adresval
  8327  1C0D                     l3379:
  8328                           
  8329                           ;lab2.c: 49:     return (adresval-0)*(5.00-0)/(255-0.0)+0;}
  8330  1C0D  3043               	movlw	67
  8331  1C0E  00C1               	movwf	___fldiv@a+3
  8332  1C0F  307F               	movlw	127
  8333  1C10  00C0               	movwf	___fldiv@a+2
  8334  1C11  3000               	movlw	0
  8335  1C12  00BF               	movwf	___fldiv@a+1
  8336  1C13  3000               	movlw	0
  8337  1C14  00BE               	movwf	___fldiv@a
  8338  1C15  3040               	movlw	64
  8339  1C16  00A7               	movwf	___flmul@b+3
  8340  1C17  30A0               	movlw	160
  8341  1C18  00A6               	movwf	___flmul@b+2
  8342  1C19  3000               	movlw	0
  8343  1C1A  00A5               	movwf	___flmul@b+1
  8344  1C1B  3000               	movlw	0
  8345  1C1C  00A4               	movwf	___flmul@b
  8346  1C1D  0860               	movf	mapear@adresval,w
  8347  1C1E  00DC               	movwf	??_mapear
  8348  1C1F  01DD               	clrf	??_mapear+1
  8349  1C20  01DE               	clrf	??_mapear+2
  8350  1C21  01DF               	clrf	??_mapear+3
  8351  1C22  085F               	movf	??_mapear+3,w
  8352  1C23  00F3               	movwf	___xxtofl@val+3
  8353  1C24  085E               	movf	??_mapear+2,w
  8354  1C25  00F2               	movwf	___xxtofl@val+2
  8355  1C26  085D               	movf	??_mapear+1,w
  8356  1C27  00F1               	movwf	___xxtofl@val+1
  8357  1C28  085C               	movf	??_mapear,w
  8358  1C29  00F0               	movwf	___xxtofl@val
  8359  1C2A  3001               	movlw	1
  8360  1C2B  160A  158A  2746  160A  158A  	fcall	___xxtofl
  8361  1C30  0873               	movf	?___xxtofl+3,w
  8362  1C31  1283               	bcf	3,5	;RP0=0, select bank0
  8363  1C32  1303               	bcf	3,6	;RP1=0, select bank0
  8364  1C33  00AB               	movwf	___flmul@a+3
  8365  1C34  0872               	movf	?___xxtofl+2,w
  8366  1C35  00AA               	movwf	___flmul@a+2
  8367  1C36  0871               	movf	?___xxtofl+1,w
  8368  1C37  00A9               	movwf	___flmul@a+1
  8369  1C38  0870               	movf	?___xxtofl,w
  8370  1C39  00A8               	movwf	___flmul@a
  8371  1C3A  120A  158A  249F  160A  158A  	fcall	___flmul
  8372  1C3F  1283               	bcf	3,5	;RP0=0, select bank0
  8373  1C40  1303               	bcf	3,6	;RP1=0, select bank0
  8374  1C41  0827               	movf	?___flmul+3,w
  8375  1C42  00C5               	movwf	___fldiv@b+3
  8376  1C43  0826               	movf	?___flmul+2,w
  8377  1C44  00C4               	movwf	___fldiv@b+2
  8378  1C45  0825               	movf	?___flmul+1,w
  8379  1C46  00C3               	movwf	___fldiv@b+1
  8380  1C47  0824               	movf	?___flmul,w
  8381  1C48  00C2               	movwf	___fldiv@b
  8382  1C49  160A  118A  2190  160A  158A  	fcall	___fldiv
  8383  1C4E  1283               	bcf	3,5	;RP0=0, select bank0
  8384  1C4F  1303               	bcf	3,6	;RP1=0, select bank0
  8385  1C50  0841               	movf	?___fldiv+3,w
  8386  1C51  00DB               	movwf	?_mapear+3
  8387  1C52  0840               	movf	?___fldiv+2,w
  8388  1C53  00DA               	movwf	?_mapear+2
  8389  1C54  083F               	movf	?___fldiv+1,w
  8390  1C55  00D9               	movwf	?_mapear+1
  8391  1C56  083E               	movf	?___fldiv,w
  8392  1C57  00D8               	movwf	?_mapear
  8393  1C58                     l126:
  8394  1C58  0008               	return
  8395  1C59                     __end_of_mapear:
  8396                           
  8397                           	psect	text21
  8398  1F46                     __ptext21:	
  8399 ;; *************** function ___xxtofl *****************
  8400 ;; Defined at:
  8401 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  sign            1    wreg     unsigned char 
  8404 ;;  val             4    0[COMMON] long 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  sign            1    8[COMMON] unsigned char 
  8407 ;;  arg             4   10[COMMON] unsigned long 
  8408 ;;  exp             1    9[COMMON] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  4    0[COMMON] unsigned char 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8418 ;;      Params:         4       0       0       0       0
  8419 ;;      Locals:         6       0       0       0       0
  8420 ;;      Temps:          4       0       0       0       0
  8421 ;;      Totals:        14       0       0       0       0
  8422 ;;Total ram usage:       14 bytes
  8423 ;; Hardware stack levels used: 1
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_mapear
  8428 ;;		_sprintf
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           
  8433                           ;psect for function ___xxtofl
  8434  1F46                     ___xxtofl:
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8438                           ;___xxtofl@sign stored from wreg
  8439  1F46  00F8               	movwf	___xxtofl@sign
  8440  1F47                     l3305:
  8441  1F47  0878               	movf	___xxtofl@sign,w
  8442  1F48  1903               	btfsc	3,2
  8443  1F49  2F4B               	goto	u5551
  8444  1F4A  2F4C               	goto	u5550
  8445  1F4B                     u5551:
  8446  1F4B  2F60               	goto	l3311
  8447  1F4C                     u5550:
  8448  1F4C                     l3307:
  8449  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  8450  1F4D  2F4F               	goto	u5561
  8451  1F4E  2F50               	goto	u5560
  8452  1F4F                     u5561:
  8453  1F4F  2F60               	goto	l3311
  8454  1F50                     u5560:
  8455  1F50                     l3309:
  8456  1F50  0970               	comf	___xxtofl@val,w
  8457  1F51  00FA               	movwf	___xxtofl@arg
  8458  1F52  0971               	comf	___xxtofl@val+1,w
  8459  1F53  00FB               	movwf	___xxtofl@arg+1
  8460  1F54  0972               	comf	___xxtofl@val+2,w
  8461  1F55  00FC               	movwf	___xxtofl@arg+2
  8462  1F56  0973               	comf	___xxtofl@val+3,w
  8463  1F57  00FD               	movwf	___xxtofl@arg+3
  8464  1F58  0AFA               	incf	___xxtofl@arg,f
  8465  1F59  1903               	skipnz
  8466  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  8467  1F5B  1903               	skipnz
  8468  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  8469  1F5D  1903               	skipnz
  8470  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  8471  1F5F  2F68               	goto	l805
  8472  1F60                     l3311:
  8473  1F60  0873               	movf	___xxtofl@val+3,w
  8474  1F61  00FD               	movwf	___xxtofl@arg+3
  8475  1F62  0872               	movf	___xxtofl@val+2,w
  8476  1F63  00FC               	movwf	___xxtofl@arg+2
  8477  1F64  0871               	movf	___xxtofl@val+1,w
  8478  1F65  00FB               	movwf	___xxtofl@arg+1
  8479  1F66  0870               	movf	___xxtofl@val,w
  8480  1F67  00FA               	movwf	___xxtofl@arg
  8481  1F68                     l805:
  8482  1F68  0873               	movf	___xxtofl@val+3,w
  8483  1F69  0472               	iorwf	___xxtofl@val+2,w
  8484  1F6A  0471               	iorwf	___xxtofl@val+1,w
  8485  1F6B  0470               	iorwf	___xxtofl@val,w
  8486  1F6C  1D03               	skipz
  8487  1F6D  2F6F               	goto	u5571
  8488  1F6E  2F70               	goto	u5570
  8489  1F6F                     u5571:
  8490  1F6F  2F79               	goto	l3317
  8491  1F70                     u5570:
  8492  1F70                     l3313:
  8493  1F70  3000               	movlw	0
  8494  1F71  00F3               	movwf	?___xxtofl+3
  8495  1F72  3000               	movlw	0
  8496  1F73  00F2               	movwf	?___xxtofl+2
  8497  1F74  3000               	movlw	0
  8498  1F75  00F1               	movwf	?___xxtofl+1
  8499  1F76  3000               	movlw	0
  8500  1F77  00F0               	movwf	?___xxtofl
  8501  1F78  2FFF               	goto	l807
  8502  1F79                     l3317:
  8503  1F79  3096               	movlw	150
  8504  1F7A  00F4               	movwf	??___xxtofl
  8505  1F7B  0874               	movf	??___xxtofl,w
  8506  1F7C  00F9               	movwf	___xxtofl@exp
  8507  1F7D  2F8B               	goto	l3321
  8508  1F7E                     l3319:
  8509  1F7E  3001               	movlw	1
  8510  1F7F  00F4               	movwf	??___xxtofl
  8511  1F80  0874               	movf	??___xxtofl,w
  8512  1F81  07F9               	addwf	___xxtofl@exp,f
  8513  1F82  3001               	movlw	1
  8514  1F83                     u5585:
  8515  1F83  1003               	clrc
  8516  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  8517  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  8518  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  8519  1F87  0CFA               	rrf	___xxtofl@arg,f
  8520  1F88  3EFF               	addlw	-1
  8521  1F89  1D03               	skipz
  8522  1F8A  2F83               	goto	u5585
  8523  1F8B                     l3321:
  8524  1F8B  30FE               	movlw	254
  8525  1F8C  057D               	andwf	___xxtofl@arg+3,w
  8526  1F8D  1D03               	btfss	3,2
  8527  1F8E  2F90               	goto	u5591
  8528  1F8F  2F91               	goto	u5590
  8529  1F90                     u5591:
  8530  1F90  2F7E               	goto	l3319
  8531  1F91                     u5590:
  8532  1F91  2FAD               	goto	l811
  8533  1F92                     l3323:
  8534  1F92  3001               	movlw	1
  8535  1F93  00F4               	movwf	??___xxtofl
  8536  1F94  0874               	movf	??___xxtofl,w
  8537  1F95  07F9               	addwf	___xxtofl@exp,f
  8538  1F96                     l3325:
  8539  1F96  3001               	movlw	1
  8540  1F97  07FA               	addwf	___xxtofl@arg,f
  8541  1F98  3000               	movlw	0
  8542  1F99  1803               	skipnc
  8543  1F9A  3001               	movlw	1
  8544  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  8545  1F9C  3000               	movlw	0
  8546  1F9D  1803               	skipnc
  8547  1F9E  3001               	movlw	1
  8548  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  8549  1FA0  3000               	movlw	0
  8550  1FA1  1803               	skipnc
  8551  1FA2  3001               	movlw	1
  8552  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  8553  1FA4                     l3327:
  8554  1FA4  3001               	movlw	1
  8555  1FA5                     u5605:
  8556  1FA5  1003               	clrc
  8557  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  8558  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  8559  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  8560  1FA9  0CFA               	rrf	___xxtofl@arg,f
  8561  1FAA  3EFF               	addlw	-1
  8562  1FAB  1D03               	skipz
  8563  1FAC  2FA5               	goto	u5605
  8564  1FAD                     l811:
  8565  1FAD  30FF               	movlw	255
  8566  1FAE  057D               	andwf	___xxtofl@arg+3,w
  8567  1FAF  1D03               	btfss	3,2
  8568  1FB0  2FB2               	goto	u5611
  8569  1FB1  2FB3               	goto	u5610
  8570  1FB2                     u5611:
  8571  1FB2  2F92               	goto	l3323
  8572  1FB3                     u5610:
  8573  1FB3  2FBF               	goto	l3331
  8574  1FB4                     l3329:
  8575  1FB4  3001               	movlw	1
  8576  1FB5  02F9               	subwf	___xxtofl@exp,f
  8577  1FB6  3001               	movlw	1
  8578  1FB7  00F4               	movwf	??___xxtofl
  8579  1FB8                     u5625:
  8580  1FB8  1003               	clrc
  8581  1FB9  0DFA               	rlf	___xxtofl@arg,f
  8582  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  8583  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  8584  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  8585  1FBD  0BF4               	decfsz	??___xxtofl,f
  8586  1FBE  2FB8               	goto	u5625
  8587  1FBF                     l3331:
  8588  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  8589  1FC0  2FC2               	goto	u5631
  8590  1FC1  2FC3               	goto	u5630
  8591  1FC2                     u5631:
  8592  1FC2  2FC9               	goto	l818
  8593  1FC3                     u5630:
  8594  1FC3                     l3333:
  8595  1FC3  3002               	movlw	2
  8596  1FC4  0279               	subwf	___xxtofl@exp,w
  8597  1FC5  1803               	skipnc
  8598  1FC6  2FC8               	goto	u5641
  8599  1FC7  2FC9               	goto	u5640
  8600  1FC8                     u5641:
  8601  1FC8  2FB4               	goto	l3329
  8602  1FC9                     u5640:
  8603  1FC9                     l818:
  8604  1FC9  1879               	btfsc	___xxtofl@exp,0
  8605  1FCA  2FCC               	goto	u5651
  8606  1FCB  2FCD               	goto	u5650
  8607  1FCC                     u5651:
  8608  1FCC  2FD5               	goto	l819
  8609  1FCD                     u5650:
  8610  1FCD                     l3335:
  8611  1FCD  30FF               	movlw	255
  8612  1FCE  05FA               	andwf	___xxtofl@arg,f
  8613  1FCF  30FF               	movlw	255
  8614  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  8615  1FD1  307F               	movlw	127
  8616  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  8617  1FD3  30FF               	movlw	255
  8618  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  8619  1FD5                     l819:
  8620  1FD5  1003               	clrc
  8621  1FD6  0CF9               	rrf	___xxtofl@exp,f
  8622  1FD7                     l3337:
  8623  1FD7  0879               	movf	___xxtofl@exp,w
  8624  1FD8  00F4               	movwf	??___xxtofl
  8625  1FD9  01F5               	clrf	??___xxtofl+1
  8626  1FDA  01F6               	clrf	??___xxtofl+2
  8627  1FDB  01F7               	clrf	??___xxtofl+3
  8628  1FDC  3018               	movlw	24
  8629  1FDD                     u5665:
  8630  1FDD  1003               	clrc
  8631  1FDE  0DF4               	rlf	??___xxtofl,f
  8632  1FDF  0DF5               	rlf	??___xxtofl+1,f
  8633  1FE0  0DF6               	rlf	??___xxtofl+2,f
  8634  1FE1  0DF7               	rlf	??___xxtofl+3,f
  8635  1FE2                     u5660:
  8636  1FE2  3EFF               	addlw	-1
  8637  1FE3  1D03               	skipz
  8638  1FE4  2FDD               	goto	u5665
  8639  1FE5  0874               	movf	??___xxtofl,w
  8640  1FE6  04FA               	iorwf	___xxtofl@arg,f
  8641  1FE7  0875               	movf	??___xxtofl+1,w
  8642  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  8643  1FE9  0876               	movf	??___xxtofl+2,w
  8644  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  8645  1FEB  0877               	movf	??___xxtofl+3,w
  8646  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  8647  1FED                     l3339:
  8648  1FED  0878               	movf	___xxtofl@sign,w
  8649  1FEE  1903               	btfsc	3,2
  8650  1FEF  2FF1               	goto	u5671
  8651  1FF0  2FF2               	goto	u5670
  8652  1FF1                     u5671:
  8653  1FF1  2FF7               	goto	l3345
  8654  1FF2                     u5670:
  8655  1FF2                     l3341:
  8656  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  8657  1FF3  2FF5               	goto	u5681
  8658  1FF4  2FF6               	goto	u5680
  8659  1FF5                     u5681:
  8660  1FF5  2FF7               	goto	l3345
  8661  1FF6                     u5680:
  8662  1FF6                     l3343:
  8663  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  8664  1FF7                     l3345:
  8665  1FF7  087D               	movf	___xxtofl@arg+3,w
  8666  1FF8  00F3               	movwf	?___xxtofl+3
  8667  1FF9  087C               	movf	___xxtofl@arg+2,w
  8668  1FFA  00F2               	movwf	?___xxtofl+2
  8669  1FFB  087B               	movf	___xxtofl@arg+1,w
  8670  1FFC  00F1               	movwf	?___xxtofl+1
  8671  1FFD  087A               	movf	___xxtofl@arg,w
  8672  1FFE  00F0               	movwf	?___xxtofl
  8673  1FFF                     l807:
  8674  1FFF  0008               	return
  8675  2000                     __end_of___xxtofl:
  8676                           
  8677                           	psect	text22
  8678  0C9F                     __ptext22:	
  8679 ;; *************** function ___flmul *****************
  8680 ;; Defined at:
  8681 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  b               4    4[BANK0 ] unsigned char 
  8684 ;;  a               4    8[BANK0 ] unsigned char 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  prod            4   24[BANK0 ] struct .
  8687 ;;  grs             4   18[BANK0 ] unsigned long 
  8688 ;;  temp            2   28[BANK0 ] struct .
  8689 ;;  bexp            1   23[BANK0 ] unsigned char 
  8690 ;;  aexp            1   22[BANK0 ] unsigned char 
  8691 ;;  sign            1   17[BANK0 ] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  4    4[BANK0 ] unsigned char 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8701 ;;      Params:         0       8       0       0       0
  8702 ;;      Locals:         0      13       0       0       0
  8703 ;;      Temps:          0       5       0       0       0
  8704 ;;      Totals:         0      26       0       0       0
  8705 ;;Total ram usage:       26 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; Hardware stack levels required when called: 1
  8708 ;; This function calls:
  8709 ;;		__Umul8_16
  8710 ;; This function is called by:
  8711 ;;		_mapear
  8712 ;;		_fround
  8713 ;;		_scale
  8714 ;;		_sprintf
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           
  8719                           ;psect for function ___flmul
  8720  0C9F                     ___flmul:
  8721  0C9F                     l2689:	
  8722                           ;incstack = 0
  8723                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8724                           
  8725  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8726  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8727  0CA1  0827               	movf	___flmul@b+3,w
  8728  0CA2  3980               	andlw	128
  8729  0CA3  00AC               	movwf	??___flmul
  8730  0CA4  082C               	movf	??___flmul,w
  8731  0CA5  00B1               	movwf	___flmul@sign
  8732  0CA6                     l2691:
  8733  0CA6  0827               	movf	___flmul@b+3,w
  8734  0CA7  00AC               	movwf	??___flmul
  8735  0CA8  072C               	addwf	??___flmul,w
  8736  0CA9  00AD               	movwf	??___flmul+1
  8737  0CAA  082D               	movf	??___flmul+1,w
  8738  0CAB  00B7               	movwf	___flmul@bexp
  8739  0CAC                     l2693:
  8740  0CAC  1FA6               	btfss	___flmul@b+2,7
  8741  0CAD  2CAF               	goto	u3981
  8742  0CAE  2CB0               	goto	u3980
  8743  0CAF                     u3981:
  8744  0CAF  2CB1               	goto	l2697
  8745  0CB0                     u3980:
  8746  0CB0                     l2695:
  8747  0CB0  1437               	bsf	___flmul@bexp,0
  8748  0CB1                     l2697:
  8749  0CB1  0837               	movf	___flmul@bexp,w
  8750  0CB2  1903               	btfsc	3,2
  8751  0CB3  2CB5               	goto	u3991
  8752  0CB4  2CB6               	goto	u3990
  8753  0CB5                     u3991:
  8754  0CB5  2CC5               	goto	l2705
  8755  0CB6                     u3990:
  8756  0CB6                     l2699:
  8757  0CB6  0A37               	incf	___flmul@bexp,w
  8758  0CB7  1D03               	btfss	3,2
  8759  0CB8  2CBA               	goto	u4001
  8760  0CB9  2CBB               	goto	u4000
  8761  0CBA                     u4001:
  8762  0CBA  2CC3               	goto	l2703
  8763  0CBB                     u4000:
  8764  0CBB                     l2701:
  8765  0CBB  3000               	movlw	0
  8766  0CBC  00A7               	movwf	___flmul@b+3
  8767  0CBD  3000               	movlw	0
  8768  0CBE  00A6               	movwf	___flmul@b+2
  8769  0CBF  3000               	movlw	0
  8770  0CC0  00A5               	movwf	___flmul@b+1
  8771  0CC1  3000               	movlw	0
  8772  0CC2  00A4               	movwf	___flmul@b
  8773  0CC3                     l2703:
  8774  0CC3  17A6               	bsf	___flmul@b+2,7
  8775  0CC4  2CCD               	goto	l2707
  8776  0CC5                     l2705:
  8777  0CC5  3000               	movlw	0
  8778  0CC6  00A7               	movwf	___flmul@b+3
  8779  0CC7  3000               	movlw	0
  8780  0CC8  00A6               	movwf	___flmul@b+2
  8781  0CC9  3000               	movlw	0
  8782  0CCA  00A5               	movwf	___flmul@b+1
  8783  0CCB  3000               	movlw	0
  8784  0CCC  00A4               	movwf	___flmul@b
  8785  0CCD                     l2707:
  8786  0CCD  082B               	movf	___flmul@a+3,w
  8787  0CCE  3980               	andlw	128
  8788  0CCF  00AC               	movwf	??___flmul
  8789  0CD0  082C               	movf	??___flmul,w
  8790  0CD1  06B1               	xorwf	___flmul@sign,f
  8791  0CD2                     l2709:
  8792  0CD2  082B               	movf	___flmul@a+3,w
  8793  0CD3  00AC               	movwf	??___flmul
  8794  0CD4  072C               	addwf	??___flmul,w
  8795  0CD5  00AD               	movwf	??___flmul+1
  8796  0CD6  082D               	movf	??___flmul+1,w
  8797  0CD7  00B6               	movwf	___flmul@aexp
  8798  0CD8                     l2711:
  8799  0CD8  1FAA               	btfss	___flmul@a+2,7
  8800  0CD9  2CDB               	goto	u4011
  8801  0CDA  2CDC               	goto	u4010
  8802  0CDB                     u4011:
  8803  0CDB  2CDD               	goto	l2715
  8804  0CDC                     u4010:
  8805  0CDC                     l2713:
  8806  0CDC  1436               	bsf	___flmul@aexp,0
  8807  0CDD                     l2715:
  8808  0CDD  0836               	movf	___flmul@aexp,w
  8809  0CDE  1903               	btfsc	3,2
  8810  0CDF  2CE1               	goto	u4021
  8811  0CE0  2CE2               	goto	u4020
  8812  0CE1                     u4021:
  8813  0CE1  2CF1               	goto	l2723
  8814  0CE2                     u4020:
  8815  0CE2                     l2717:
  8816  0CE2  0A36               	incf	___flmul@aexp,w
  8817  0CE3  1D03               	btfss	3,2
  8818  0CE4  2CE6               	goto	u4031
  8819  0CE5  2CE7               	goto	u4030
  8820  0CE6                     u4031:
  8821  0CE6  2CEF               	goto	l2721
  8822  0CE7                     u4030:
  8823  0CE7                     l2719:
  8824  0CE7  3000               	movlw	0
  8825  0CE8  00AB               	movwf	___flmul@a+3
  8826  0CE9  3000               	movlw	0
  8827  0CEA  00AA               	movwf	___flmul@a+2
  8828  0CEB  3000               	movlw	0
  8829  0CEC  00A9               	movwf	___flmul@a+1
  8830  0CED  3000               	movlw	0
  8831  0CEE  00A8               	movwf	___flmul@a
  8832  0CEF                     l2721:
  8833  0CEF  17AA               	bsf	___flmul@a+2,7
  8834  0CF0  2CF9               	goto	l2725
  8835  0CF1                     l2723:
  8836  0CF1  3000               	movlw	0
  8837  0CF2  00AB               	movwf	___flmul@a+3
  8838  0CF3  3000               	movlw	0
  8839  0CF4  00AA               	movwf	___flmul@a+2
  8840  0CF5  3000               	movlw	0
  8841  0CF6  00A9               	movwf	___flmul@a+1
  8842  0CF7  3000               	movlw	0
  8843  0CF8  00A8               	movwf	___flmul@a
  8844  0CF9                     l2725:
  8845  0CF9  0836               	movf	___flmul@aexp,w
  8846  0CFA  1903               	btfsc	3,2
  8847  0CFB  2CFD               	goto	u4041
  8848  0CFC  2CFE               	goto	u4040
  8849  0CFD                     u4041:
  8850  0CFD  2D03               	goto	l2729
  8851  0CFE                     u4040:
  8852  0CFE                     l2727:
  8853  0CFE  0837               	movf	___flmul@bexp,w
  8854  0CFF  1D03               	btfss	3,2
  8855  0D00  2D02               	goto	u4051
  8856  0D01  2D03               	goto	u4050
  8857  0D02                     u4051:
  8858  0D02  2D0C               	goto	l2733
  8859  0D03                     u4050:
  8860  0D03                     l2729:
  8861  0D03  3000               	movlw	0
  8862  0D04  00A7               	movwf	?___flmul+3
  8863  0D05  3000               	movlw	0
  8864  0D06  00A6               	movwf	?___flmul+2
  8865  0D07  3000               	movlw	0
  8866  0D08  00A5               	movwf	?___flmul+1
  8867  0D09  3000               	movlw	0
  8868  0D0A  00A4               	movwf	?___flmul
  8869  0D0B  2FFF               	goto	l761
  8870  0D0C                     l2733:
  8871  0D0C  0824               	movf	___flmul@b,w
  8872  0D0D  00AC               	movwf	??___flmul
  8873  0D0E  082C               	movf	??___flmul,w
  8874  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  8875  0D10  082A               	movf	___flmul@a+2,w
  8876  0D11  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  8877  0D16  0871               	movf	?__Umul8_16+1,w
  8878  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  8879  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  8880  0D19  00BD               	movwf	___flmul@temp+1
  8881  0D1A  0870               	movf	?__Umul8_16,w
  8882  0D1B  00BC               	movwf	___flmul@temp
  8883  0D1C                     l2735:
  8884  0D1C  083C               	movf	___flmul@temp,w
  8885  0D1D  00AC               	movwf	??___flmul
  8886  0D1E  01AD               	clrf	??___flmul+1
  8887  0D1F  01AE               	clrf	??___flmul+2
  8888  0D20  01AF               	clrf	??___flmul+3
  8889  0D21  082F               	movf	??___flmul+3,w
  8890  0D22  00B5               	movwf	___flmul@grs+3
  8891  0D23  082E               	movf	??___flmul+2,w
  8892  0D24  00B4               	movwf	___flmul@grs+2
  8893  0D25  082D               	movf	??___flmul+1,w
  8894  0D26  00B3               	movwf	___flmul@grs+1
  8895  0D27  082C               	movf	??___flmul,w
  8896  0D28  00B2               	movwf	___flmul@grs
  8897  0D29                     l2737:
  8898  0D29  083D               	movf	___flmul@temp+1,w
  8899  0D2A  00AC               	movwf	??___flmul
  8900  0D2B  01AD               	clrf	??___flmul+1
  8901  0D2C  01AE               	clrf	??___flmul+2
  8902  0D2D  01AF               	clrf	??___flmul+3
  8903  0D2E  082F               	movf	??___flmul+3,w
  8904  0D2F  00BB               	movwf	___flmul@prod+3
  8905  0D30  082E               	movf	??___flmul+2,w
  8906  0D31  00BA               	movwf	___flmul@prod+2
  8907  0D32  082D               	movf	??___flmul+1,w
  8908  0D33  00B9               	movwf	___flmul@prod+1
  8909  0D34  082C               	movf	??___flmul,w
  8910  0D35  00B8               	movwf	___flmul@prod
  8911  0D36  0825               	movf	___flmul@b+1,w
  8912  0D37  00AC               	movwf	??___flmul
  8913  0D38  082C               	movf	??___flmul,w
  8914  0D39  00F0               	movwf	__Umul8_16@multiplicand
  8915  0D3A  0829               	movf	___flmul@a+1,w
  8916  0D3B  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  8917  0D40  0871               	movf	?__Umul8_16+1,w
  8918  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  8919  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  8920  0D43  00BD               	movwf	___flmul@temp+1
  8921  0D44  0870               	movf	?__Umul8_16,w
  8922  0D45  00BC               	movwf	___flmul@temp
  8923  0D46                     l2739:
  8924  0D46  083C               	movf	___flmul@temp,w
  8925  0D47  00AC               	movwf	??___flmul
  8926  0D48  01AD               	clrf	??___flmul+1
  8927  0D49  01AE               	clrf	??___flmul+2
  8928  0D4A  01AF               	clrf	??___flmul+3
  8929  0D4B  082C               	movf	??___flmul,w
  8930  0D4C  07B2               	addwf	___flmul@grs,f
  8931  0D4D  082D               	movf	??___flmul+1,w
  8932  0D4E  1103               	clrz
  8933  0D4F  1803               	skipnc
  8934  0D50  3E01               	addlw	1
  8935  0D51  1903               	skipnz
  8936  0D52  2D54               	goto	u4061
  8937  0D53  07B3               	addwf	___flmul@grs+1,f
  8938  0D54                     u4061:
  8939  0D54  082E               	movf	??___flmul+2,w
  8940  0D55  1103               	clrz
  8941  0D56  1803               	skipnc
  8942  0D57  3E01               	addlw	1
  8943  0D58  1903               	skipnz
  8944  0D59  2D5B               	goto	u4062
  8945  0D5A  07B4               	addwf	___flmul@grs+2,f
  8946  0D5B                     u4062:
  8947  0D5B  082F               	movf	??___flmul+3,w
  8948  0D5C  1103               	clrz
  8949  0D5D  1803               	skipnc
  8950  0D5E  3E01               	addlw	1
  8951  0D5F  1903               	skipnz
  8952  0D60  2D62               	goto	u4063
  8953  0D61  07B5               	addwf	___flmul@grs+3,f
  8954  0D62                     u4063:
  8955  0D62                     l2741:
  8956  0D62  083D               	movf	___flmul@temp+1,w
  8957  0D63  00AC               	movwf	??___flmul
  8958  0D64  01AD               	clrf	??___flmul+1
  8959  0D65  01AE               	clrf	??___flmul+2
  8960  0D66  01AF               	clrf	??___flmul+3
  8961  0D67  082C               	movf	??___flmul,w
  8962  0D68  07B8               	addwf	___flmul@prod,f
  8963  0D69  082D               	movf	??___flmul+1,w
  8964  0D6A  1103               	clrz
  8965  0D6B  1803               	skipnc
  8966  0D6C  3E01               	addlw	1
  8967  0D6D  1903               	skipnz
  8968  0D6E  2D70               	goto	u4071
  8969  0D6F  07B9               	addwf	___flmul@prod+1,f
  8970  0D70                     u4071:
  8971  0D70  082E               	movf	??___flmul+2,w
  8972  0D71  1103               	clrz
  8973  0D72  1803               	skipnc
  8974  0D73  3E01               	addlw	1
  8975  0D74  1903               	skipnz
  8976  0D75  2D77               	goto	u4072
  8977  0D76  07BA               	addwf	___flmul@prod+2,f
  8978  0D77                     u4072:
  8979  0D77  082F               	movf	??___flmul+3,w
  8980  0D78  1103               	clrz
  8981  0D79  1803               	skipnc
  8982  0D7A  3E01               	addlw	1
  8983  0D7B  1903               	skipnz
  8984  0D7C  2D7E               	goto	u4073
  8985  0D7D  07BB               	addwf	___flmul@prod+3,f
  8986  0D7E                     u4073:
  8987  0D7E  0826               	movf	___flmul@b+2,w
  8988  0D7F  00AC               	movwf	??___flmul
  8989  0D80  082C               	movf	??___flmul,w
  8990  0D81  00F0               	movwf	__Umul8_16@multiplicand
  8991  0D82  0828               	movf	___flmul@a,w
  8992  0D83  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  8993  0D88  0871               	movf	?__Umul8_16+1,w
  8994  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  8995  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  8996  0D8B  00BD               	movwf	___flmul@temp+1
  8997  0D8C  0870               	movf	?__Umul8_16,w
  8998  0D8D  00BC               	movwf	___flmul@temp
  8999  0D8E                     l2743:
  9000  0D8E  083C               	movf	___flmul@temp,w
  9001  0D8F  00AC               	movwf	??___flmul
  9002  0D90  01AD               	clrf	??___flmul+1
  9003  0D91  01AE               	clrf	??___flmul+2
  9004  0D92  01AF               	clrf	??___flmul+3
  9005  0D93  082C               	movf	??___flmul,w
  9006  0D94  07B2               	addwf	___flmul@grs,f
  9007  0D95  082D               	movf	??___flmul+1,w
  9008  0D96  1103               	clrz
  9009  0D97  1803               	skipnc
  9010  0D98  3E01               	addlw	1
  9011  0D99  1903               	skipnz
  9012  0D9A  2D9C               	goto	u4081
  9013  0D9B  07B3               	addwf	___flmul@grs+1,f
  9014  0D9C                     u4081:
  9015  0D9C  082E               	movf	??___flmul+2,w
  9016  0D9D  1103               	clrz
  9017  0D9E  1803               	skipnc
  9018  0D9F  3E01               	addlw	1
  9019  0DA0  1903               	skipnz
  9020  0DA1  2DA3               	goto	u4082
  9021  0DA2  07B4               	addwf	___flmul@grs+2,f
  9022  0DA3                     u4082:
  9023  0DA3  082F               	movf	??___flmul+3,w
  9024  0DA4  1103               	clrz
  9025  0DA5  1803               	skipnc
  9026  0DA6  3E01               	addlw	1
  9027  0DA7  1903               	skipnz
  9028  0DA8  2DAA               	goto	u4083
  9029  0DA9  07B5               	addwf	___flmul@grs+3,f
  9030  0DAA                     u4083:
  9031  0DAA                     l2745:
  9032  0DAA  083D               	movf	___flmul@temp+1,w
  9033  0DAB  00AC               	movwf	??___flmul
  9034  0DAC  01AD               	clrf	??___flmul+1
  9035  0DAD  01AE               	clrf	??___flmul+2
  9036  0DAE  01AF               	clrf	??___flmul+3
  9037  0DAF  082C               	movf	??___flmul,w
  9038  0DB0  07B8               	addwf	___flmul@prod,f
  9039  0DB1  082D               	movf	??___flmul+1,w
  9040  0DB2  1103               	clrz
  9041  0DB3  1803               	skipnc
  9042  0DB4  3E01               	addlw	1
  9043  0DB5  1903               	skipnz
  9044  0DB6  2DB8               	goto	u4091
  9045  0DB7  07B9               	addwf	___flmul@prod+1,f
  9046  0DB8                     u4091:
  9047  0DB8  082E               	movf	??___flmul+2,w
  9048  0DB9  1103               	clrz
  9049  0DBA  1803               	skipnc
  9050  0DBB  3E01               	addlw	1
  9051  0DBC  1903               	skipnz
  9052  0DBD  2DBF               	goto	u4092
  9053  0DBE  07BA               	addwf	___flmul@prod+2,f
  9054  0DBF                     u4092:
  9055  0DBF  082F               	movf	??___flmul+3,w
  9056  0DC0  1103               	clrz
  9057  0DC1  1803               	skipnc
  9058  0DC2  3E01               	addlw	1
  9059  0DC3  1903               	skipnz
  9060  0DC4  2DC6               	goto	u4093
  9061  0DC5  07BB               	addwf	___flmul@prod+3,f
  9062  0DC6                     u4093:
  9063  0DC6                     l2747:
  9064  0DC6  3008               	movlw	8
  9065  0DC7  00AC               	movwf	??___flmul
  9066  0DC8                     u4105:
  9067  0DC8  1003               	clrc
  9068  0DC9  0DB2               	rlf	___flmul@grs,f
  9069  0DCA  0DB3               	rlf	___flmul@grs+1,f
  9070  0DCB  0DB4               	rlf	___flmul@grs+2,f
  9071  0DCC  0DB5               	rlf	___flmul@grs+3,f
  9072  0DCD  0BAC               	decfsz	??___flmul,f
  9073  0DCE  2DC8               	goto	u4105
  9074  0DCF                     l2749:
  9075  0DCF  0825               	movf	___flmul@b+1,w
  9076  0DD0  00AC               	movwf	??___flmul
  9077  0DD1  082C               	movf	??___flmul,w
  9078  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  9079  0DD3  0828               	movf	___flmul@a,w
  9080  0DD4  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  9081  0DD9  0871               	movf	?__Umul8_16+1,w
  9082  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  9083  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  9084  0DDC  00BD               	movwf	___flmul@temp+1
  9085  0DDD  0870               	movf	?__Umul8_16,w
  9086  0DDE  00BC               	movwf	___flmul@temp
  9087  0DDF                     l2751:
  9088  0DDF  083C               	movf	___flmul@temp,w
  9089  0DE0  00AC               	movwf	??___flmul
  9090  0DE1  083D               	movf	___flmul@temp+1,w
  9091  0DE2  00AD               	movwf	??___flmul+1
  9092  0DE3  01AE               	clrf	??___flmul+2
  9093  0DE4  01AF               	clrf	??___flmul+3
  9094  0DE5  082C               	movf	??___flmul,w
  9095  0DE6  07B2               	addwf	___flmul@grs,f
  9096  0DE7  082D               	movf	??___flmul+1,w
  9097  0DE8  1103               	clrz
  9098  0DE9  1803               	skipnc
  9099  0DEA  3E01               	addlw	1
  9100  0DEB  1903               	skipnz
  9101  0DEC  2DEE               	goto	u4111
  9102  0DED  07B3               	addwf	___flmul@grs+1,f
  9103  0DEE                     u4111:
  9104  0DEE  082E               	movf	??___flmul+2,w
  9105  0DEF  1103               	clrz
  9106  0DF0  1803               	skipnc
  9107  0DF1  3E01               	addlw	1
  9108  0DF2  1903               	skipnz
  9109  0DF3  2DF5               	goto	u4112
  9110  0DF4  07B4               	addwf	___flmul@grs+2,f
  9111  0DF5                     u4112:
  9112  0DF5  082F               	movf	??___flmul+3,w
  9113  0DF6  1103               	clrz
  9114  0DF7  1803               	skipnc
  9115  0DF8  3E01               	addlw	1
  9116  0DF9  1903               	skipnz
  9117  0DFA  2DFC               	goto	u4113
  9118  0DFB  07B5               	addwf	___flmul@grs+3,f
  9119  0DFC                     u4113:
  9120  0DFC                     l2753:
  9121  0DFC  0824               	movf	___flmul@b,w
  9122  0DFD  00AC               	movwf	??___flmul
  9123  0DFE  082C               	movf	??___flmul,w
  9124  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  9125  0E00  0829               	movf	___flmul@a+1,w
  9126  0E01  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  9127  0E06  0871               	movf	?__Umul8_16+1,w
  9128  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  9129  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  9130  0E09  00BD               	movwf	___flmul@temp+1
  9131  0E0A  0870               	movf	?__Umul8_16,w
  9132  0E0B  00BC               	movwf	___flmul@temp
  9133  0E0C                     l2755:
  9134  0E0C  083C               	movf	___flmul@temp,w
  9135  0E0D  00AC               	movwf	??___flmul
  9136  0E0E  083D               	movf	___flmul@temp+1,w
  9137  0E0F  00AD               	movwf	??___flmul+1
  9138  0E10  01AE               	clrf	??___flmul+2
  9139  0E11  01AF               	clrf	??___flmul+3
  9140  0E12  082C               	movf	??___flmul,w
  9141  0E13  07B2               	addwf	___flmul@grs,f
  9142  0E14  082D               	movf	??___flmul+1,w
  9143  0E15  1103               	clrz
  9144  0E16  1803               	skipnc
  9145  0E17  3E01               	addlw	1
  9146  0E18  1903               	skipnz
  9147  0E19  2E1B               	goto	u4121
  9148  0E1A  07B3               	addwf	___flmul@grs+1,f
  9149  0E1B                     u4121:
  9150  0E1B  082E               	movf	??___flmul+2,w
  9151  0E1C  1103               	clrz
  9152  0E1D  1803               	skipnc
  9153  0E1E  3E01               	addlw	1
  9154  0E1F  1903               	skipnz
  9155  0E20  2E22               	goto	u4122
  9156  0E21  07B4               	addwf	___flmul@grs+2,f
  9157  0E22                     u4122:
  9158  0E22  082F               	movf	??___flmul+3,w
  9159  0E23  1103               	clrz
  9160  0E24  1803               	skipnc
  9161  0E25  3E01               	addlw	1
  9162  0E26  1903               	skipnz
  9163  0E27  2E29               	goto	u4123
  9164  0E28  07B5               	addwf	___flmul@grs+3,f
  9165  0E29                     u4123:
  9166  0E29                     l2757:
  9167  0E29  3008               	movlw	8
  9168  0E2A  00AC               	movwf	??___flmul
  9169  0E2B                     u4135:
  9170  0E2B  1003               	clrc
  9171  0E2C  0DB2               	rlf	___flmul@grs,f
  9172  0E2D  0DB3               	rlf	___flmul@grs+1,f
  9173  0E2E  0DB4               	rlf	___flmul@grs+2,f
  9174  0E2F  0DB5               	rlf	___flmul@grs+3,f
  9175  0E30  0BAC               	decfsz	??___flmul,f
  9176  0E31  2E2B               	goto	u4135
  9177  0E32  0824               	movf	___flmul@b,w
  9178  0E33  00AC               	movwf	??___flmul
  9179  0E34  082C               	movf	??___flmul,w
  9180  0E35  00F0               	movwf	__Umul8_16@multiplicand
  9181  0E36  0828               	movf	___flmul@a,w
  9182  0E37  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  9183  0E3C  0871               	movf	?__Umul8_16+1,w
  9184  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  9185  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  9186  0E3F  00BD               	movwf	___flmul@temp+1
  9187  0E40  0870               	movf	?__Umul8_16,w
  9188  0E41  00BC               	movwf	___flmul@temp
  9189  0E42                     l2759:
  9190  0E42  083C               	movf	___flmul@temp,w
  9191  0E43  00AC               	movwf	??___flmul
  9192  0E44  083D               	movf	___flmul@temp+1,w
  9193  0E45  00AD               	movwf	??___flmul+1
  9194  0E46  01AE               	clrf	??___flmul+2
  9195  0E47  01AF               	clrf	??___flmul+3
  9196  0E48  082C               	movf	??___flmul,w
  9197  0E49  07B2               	addwf	___flmul@grs,f
  9198  0E4A  082D               	movf	??___flmul+1,w
  9199  0E4B  1103               	clrz
  9200  0E4C  1803               	skipnc
  9201  0E4D  3E01               	addlw	1
  9202  0E4E  1903               	skipnz
  9203  0E4F  2E51               	goto	u4141
  9204  0E50  07B3               	addwf	___flmul@grs+1,f
  9205  0E51                     u4141:
  9206  0E51  082E               	movf	??___flmul+2,w
  9207  0E52  1103               	clrz
  9208  0E53  1803               	skipnc
  9209  0E54  3E01               	addlw	1
  9210  0E55  1903               	skipnz
  9211  0E56  2E58               	goto	u4142
  9212  0E57  07B4               	addwf	___flmul@grs+2,f
  9213  0E58                     u4142:
  9214  0E58  082F               	movf	??___flmul+3,w
  9215  0E59  1103               	clrz
  9216  0E5A  1803               	skipnc
  9217  0E5B  3E01               	addlw	1
  9218  0E5C  1903               	skipnz
  9219  0E5D  2E5F               	goto	u4143
  9220  0E5E  07B5               	addwf	___flmul@grs+3,f
  9221  0E5F                     u4143:
  9222  0E5F                     l2761:
  9223  0E5F  0825               	movf	___flmul@b+1,w
  9224  0E60  00AC               	movwf	??___flmul
  9225  0E61  082C               	movf	??___flmul,w
  9226  0E62  00F0               	movwf	__Umul8_16@multiplicand
  9227  0E63  082A               	movf	___flmul@a+2,w
  9228  0E64  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  9229  0E69  0871               	movf	?__Umul8_16+1,w
  9230  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  9231  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  9232  0E6C  00BD               	movwf	___flmul@temp+1
  9233  0E6D  0870               	movf	?__Umul8_16,w
  9234  0E6E  00BC               	movwf	___flmul@temp
  9235  0E6F  083C               	movf	___flmul@temp,w
  9236  0E70  00AC               	movwf	??___flmul
  9237  0E71  083D               	movf	___flmul@temp+1,w
  9238  0E72  00AD               	movwf	??___flmul+1
  9239  0E73  01AE               	clrf	??___flmul+2
  9240  0E74  01AF               	clrf	??___flmul+3
  9241  0E75  082C               	movf	??___flmul,w
  9242  0E76  07B8               	addwf	___flmul@prod,f
  9243  0E77  082D               	movf	??___flmul+1,w
  9244  0E78  1103               	clrz
  9245  0E79  1803               	skipnc
  9246  0E7A  3E01               	addlw	1
  9247  0E7B  1903               	skipnz
  9248  0E7C  2E7E               	goto	u4151
  9249  0E7D  07B9               	addwf	___flmul@prod+1,f
  9250  0E7E                     u4151:
  9251  0E7E  082E               	movf	??___flmul+2,w
  9252  0E7F  1103               	clrz
  9253  0E80  1803               	skipnc
  9254  0E81  3E01               	addlw	1
  9255  0E82  1903               	skipnz
  9256  0E83  2E85               	goto	u4152
  9257  0E84  07BA               	addwf	___flmul@prod+2,f
  9258  0E85                     u4152:
  9259  0E85  082F               	movf	??___flmul+3,w
  9260  0E86  1103               	clrz
  9261  0E87  1803               	skipnc
  9262  0E88  3E01               	addlw	1
  9263  0E89  1903               	skipnz
  9264  0E8A  2E8C               	goto	u4153
  9265  0E8B  07BB               	addwf	___flmul@prod+3,f
  9266  0E8C                     u4153:
  9267  0E8C                     l2763:
  9268  0E8C  0826               	movf	___flmul@b+2,w
  9269  0E8D  00AC               	movwf	??___flmul
  9270  0E8E  082C               	movf	??___flmul,w
  9271  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  9272  0E90  0829               	movf	___flmul@a+1,w
  9273  0E91  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  9274  0E96  0871               	movf	?__Umul8_16+1,w
  9275  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  9276  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  9277  0E99  00BD               	movwf	___flmul@temp+1
  9278  0E9A  0870               	movf	?__Umul8_16,w
  9279  0E9B  00BC               	movwf	___flmul@temp
  9280  0E9C                     l2765:
  9281  0E9C  083C               	movf	___flmul@temp,w
  9282  0E9D  00AC               	movwf	??___flmul
  9283  0E9E  083D               	movf	___flmul@temp+1,w
  9284  0E9F  00AD               	movwf	??___flmul+1
  9285  0EA0  01AE               	clrf	??___flmul+2
  9286  0EA1  01AF               	clrf	??___flmul+3
  9287  0EA2  082C               	movf	??___flmul,w
  9288  0EA3  07B8               	addwf	___flmul@prod,f
  9289  0EA4  082D               	movf	??___flmul+1,w
  9290  0EA5  1103               	clrz
  9291  0EA6  1803               	skipnc
  9292  0EA7  3E01               	addlw	1
  9293  0EA8  1903               	skipnz
  9294  0EA9  2EAB               	goto	u4161
  9295  0EAA  07B9               	addwf	___flmul@prod+1,f
  9296  0EAB                     u4161:
  9297  0EAB  082E               	movf	??___flmul+2,w
  9298  0EAC  1103               	clrz
  9299  0EAD  1803               	skipnc
  9300  0EAE  3E01               	addlw	1
  9301  0EAF  1903               	skipnz
  9302  0EB0  2EB2               	goto	u4162
  9303  0EB1  07BA               	addwf	___flmul@prod+2,f
  9304  0EB2                     u4162:
  9305  0EB2  082F               	movf	??___flmul+3,w
  9306  0EB3  1103               	clrz
  9307  0EB4  1803               	skipnc
  9308  0EB5  3E01               	addlw	1
  9309  0EB6  1903               	skipnz
  9310  0EB7  2EB9               	goto	u4163
  9311  0EB8  07BB               	addwf	___flmul@prod+3,f
  9312  0EB9                     u4163:
  9313  0EB9  0826               	movf	___flmul@b+2,w
  9314  0EBA  00AC               	movwf	??___flmul
  9315  0EBB  082C               	movf	??___flmul,w
  9316  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  9317  0EBD  082A               	movf	___flmul@a+2,w
  9318  0EBE  160A  158A  231D  120A  158A  	fcall	__Umul8_16
  9319  0EC3  0871               	movf	?__Umul8_16+1,w
  9320  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9321  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9322  0EC6  00BD               	movwf	___flmul@temp+1
  9323  0EC7  0870               	movf	?__Umul8_16,w
  9324  0EC8  00BC               	movwf	___flmul@temp
  9325  0EC9                     l2767:
  9326  0EC9  083C               	movf	___flmul@temp,w
  9327  0ECA  00AC               	movwf	??___flmul
  9328  0ECB  083D               	movf	___flmul@temp+1,w
  9329  0ECC  00AD               	movwf	??___flmul+1
  9330  0ECD  01AE               	clrf	??___flmul+2
  9331  0ECE  01AF               	clrf	??___flmul+3
  9332  0ECF  3008               	movlw	8
  9333  0ED0                     u4175:
  9334  0ED0  1003               	clrc
  9335  0ED1  0DAC               	rlf	??___flmul,f
  9336  0ED2  0DAD               	rlf	??___flmul+1,f
  9337  0ED3  0DAE               	rlf	??___flmul+2,f
  9338  0ED4  0DAF               	rlf	??___flmul+3,f
  9339  0ED5                     u4170:
  9340  0ED5  3EFF               	addlw	-1
  9341  0ED6  1D03               	skipz
  9342  0ED7  2ED0               	goto	u4175
  9343  0ED8  082C               	movf	??___flmul,w
  9344  0ED9  07B8               	addwf	___flmul@prod,f
  9345  0EDA  082D               	movf	??___flmul+1,w
  9346  0EDB  1103               	clrz
  9347  0EDC  1803               	skipnc
  9348  0EDD  3E01               	addlw	1
  9349  0EDE  1903               	skipnz
  9350  0EDF  2EE1               	goto	u4181
  9351  0EE0  07B9               	addwf	___flmul@prod+1,f
  9352  0EE1                     u4181:
  9353  0EE1  082E               	movf	??___flmul+2,w
  9354  0EE2  1103               	clrz
  9355  0EE3  1803               	skipnc
  9356  0EE4  3E01               	addlw	1
  9357  0EE5  1903               	skipnz
  9358  0EE6  2EE8               	goto	u4182
  9359  0EE7  07BA               	addwf	___flmul@prod+2,f
  9360  0EE8                     u4182:
  9361  0EE8  082F               	movf	??___flmul+3,w
  9362  0EE9  1103               	clrz
  9363  0EEA  1803               	skipnc
  9364  0EEB  3E01               	addlw	1
  9365  0EEC  1903               	skipnz
  9366  0EED  2EEF               	goto	u4183
  9367  0EEE  07BB               	addwf	___flmul@prod+3,f
  9368  0EEF                     u4183:
  9369  0EEF                     l2769:
  9370  0EEF  0832               	movf	___flmul@grs,w
  9371  0EF0  00AC               	movwf	??___flmul
  9372  0EF1  0833               	movf	___flmul@grs+1,w
  9373  0EF2  00AD               	movwf	??___flmul+1
  9374  0EF3  0834               	movf	___flmul@grs+2,w
  9375  0EF4  00AE               	movwf	??___flmul+2
  9376  0EF5  0835               	movf	___flmul@grs+3,w
  9377  0EF6  00AF               	movwf	??___flmul+3
  9378  0EF7  3018               	movlw	24
  9379  0EF8                     u4195:
  9380  0EF8  1003               	clrc
  9381  0EF9  0CAF               	rrf	??___flmul+3,f
  9382  0EFA  0CAE               	rrf	??___flmul+2,f
  9383  0EFB  0CAD               	rrf	??___flmul+1,f
  9384  0EFC  0CAC               	rrf	??___flmul,f
  9385  0EFD                     u4190:
  9386  0EFD  3EFF               	addlw	-1
  9387  0EFE  1D03               	skipz
  9388  0EFF  2EF8               	goto	u4195
  9389  0F00  082C               	movf	??___flmul,w
  9390  0F01  07B8               	addwf	___flmul@prod,f
  9391  0F02  082D               	movf	??___flmul+1,w
  9392  0F03  1103               	clrz
  9393  0F04  1803               	skipnc
  9394  0F05  3E01               	addlw	1
  9395  0F06  1903               	skipnz
  9396  0F07  2F09               	goto	u4201
  9397  0F08  07B9               	addwf	___flmul@prod+1,f
  9398  0F09                     u4201:
  9399  0F09  082E               	movf	??___flmul+2,w
  9400  0F0A  1103               	clrz
  9401  0F0B  1803               	skipnc
  9402  0F0C  3E01               	addlw	1
  9403  0F0D  1903               	skipnz
  9404  0F0E  2F10               	goto	u4202
  9405  0F0F  07BA               	addwf	___flmul@prod+2,f
  9406  0F10                     u4202:
  9407  0F10  082F               	movf	??___flmul+3,w
  9408  0F11  1103               	clrz
  9409  0F12  1803               	skipnc
  9410  0F13  3E01               	addlw	1
  9411  0F14  1903               	skipnz
  9412  0F15  2F17               	goto	u4203
  9413  0F16  07BB               	addwf	___flmul@prod+3,f
  9414  0F17                     u4203:
  9415  0F17                     l2771:
  9416  0F17  3008               	movlw	8
  9417  0F18  00AC               	movwf	??___flmul
  9418  0F19                     u4215:
  9419  0F19  1003               	clrc
  9420  0F1A  0DB2               	rlf	___flmul@grs,f
  9421  0F1B  0DB3               	rlf	___flmul@grs+1,f
  9422  0F1C  0DB4               	rlf	___flmul@grs+2,f
  9423  0F1D  0DB5               	rlf	___flmul@grs+3,f
  9424  0F1E  0BAC               	decfsz	??___flmul,f
  9425  0F1F  2F19               	goto	u4215
  9426  0F20                     l2773:
  9427  0F20  0837               	movf	___flmul@bexp,w
  9428  0F21  0736               	addwf	___flmul@aexp,w
  9429  0F22  00AC               	movwf	??___flmul
  9430  0F23  01AD               	clrf	??___flmul+1
  9431  0F24  0DAD               	rlf	??___flmul+1,f
  9432  0F25  082C               	movf	??___flmul,w
  9433  0F26  3E82               	addlw	130
  9434  0F27  00BC               	movwf	___flmul@temp
  9435  0F28  082D               	movf	??___flmul+1,w
  9436  0F29  1803               	skipnc
  9437  0F2A  3E01               	addlw	1
  9438  0F2B  3EFF               	addlw	255
  9439  0F2C  00BD               	movwf	___flmul@temp+1
  9440  0F2D  2F4B               	goto	l2785
  9441  0F2E                     l2775:
  9442  0F2E  3001               	movlw	1
  9443  0F2F  00AC               	movwf	??___flmul
  9444  0F30                     u4225:
  9445  0F30  1003               	clrc
  9446  0F31  0DB8               	rlf	___flmul@prod,f
  9447  0F32  0DB9               	rlf	___flmul@prod+1,f
  9448  0F33  0DBA               	rlf	___flmul@prod+2,f
  9449  0F34  0DBB               	rlf	___flmul@prod+3,f
  9450  0F35  0BAC               	decfsz	??___flmul,f
  9451  0F36  2F30               	goto	u4225
  9452  0F37                     l2777:
  9453  0F37  1FB5               	btfss	___flmul@grs+3,7
  9454  0F38  2F3A               	goto	u4231
  9455  0F39  2F3B               	goto	u4230
  9456  0F3A                     u4231:
  9457  0F3A  2F3C               	goto	l2781
  9458  0F3B                     u4230:
  9459  0F3B                     l2779:
  9460  0F3B  1438               	bsf	___flmul@prod,0
  9461  0F3C                     l2781:
  9462  0F3C  3001               	movlw	1
  9463  0F3D  00AC               	movwf	??___flmul
  9464  0F3E                     u4245:
  9465  0F3E  1003               	clrc
  9466  0F3F  0DB2               	rlf	___flmul@grs,f
  9467  0F40  0DB3               	rlf	___flmul@grs+1,f
  9468  0F41  0DB4               	rlf	___flmul@grs+2,f
  9469  0F42  0DB5               	rlf	___flmul@grs+3,f
  9470  0F43  0BAC               	decfsz	??___flmul,f
  9471  0F44  2F3E               	goto	u4245
  9472  0F45                     l2783:
  9473  0F45  30FF               	movlw	255
  9474  0F46  07BC               	addwf	___flmul@temp,f
  9475  0F47  1803               	skipnc
  9476  0F48  0ABD               	incf	___flmul@temp+1,f
  9477  0F49  30FF               	movlw	255
  9478  0F4A  07BD               	addwf	___flmul@temp+1,f
  9479  0F4B                     l2785:
  9480  0F4B  1FBA               	btfss	___flmul@prod+2,7
  9481  0F4C  2F4E               	goto	u4251
  9482  0F4D  2F4F               	goto	u4250
  9483  0F4E                     u4251:
  9484  0F4E  2F2E               	goto	l2775
  9485  0F4F                     u4250:
  9486  0F4F                     l2787:
  9487  0F4F  01B6               	clrf	___flmul@aexp
  9488  0F50                     l2789:
  9489  0F50  1FB5               	btfss	___flmul@grs+3,7
  9490  0F51  2F53               	goto	u4261
  9491  0F52  2F54               	goto	u4260
  9492  0F53                     u4261:
  9493  0F53  2F70               	goto	l2797
  9494  0F54                     u4260:
  9495  0F54                     l2791:
  9496  0F54  30FF               	movlw	255
  9497  0F55  0532               	andwf	___flmul@grs,w
  9498  0F56  00AC               	movwf	??___flmul
  9499  0F57  30FF               	movlw	255
  9500  0F58  0533               	andwf	___flmul@grs+1,w
  9501  0F59  00AD               	movwf	??___flmul+1
  9502  0F5A  30FF               	movlw	255
  9503  0F5B  0534               	andwf	___flmul@grs+2,w
  9504  0F5C  00AE               	movwf	??___flmul+2
  9505  0F5D  307F               	movlw	127
  9506  0F5E  0535               	andwf	___flmul@grs+3,w
  9507  0F5F  00AF               	movwf	??___flmul+3
  9508  0F60  082F               	movf	??___flmul+3,w
  9509  0F61  042E               	iorwf	??___flmul+2,w
  9510  0F62  042D               	iorwf	??___flmul+1,w
  9511  0F63  042C               	iorwf	??___flmul,w
  9512  0F64  1903               	skipnz
  9513  0F65  2F67               	goto	u4271
  9514  0F66  2F68               	goto	u4270
  9515  0F67                     u4271:
  9516  0F67  2F6B               	goto	l767
  9517  0F68                     u4270:
  9518  0F68                     l2793:
  9519  0F68  01B6               	clrf	___flmul@aexp
  9520  0F69  0AB6               	incf	___flmul@aexp,f
  9521  0F6A  2F70               	goto	l2797
  9522  0F6B                     l767:
  9523  0F6B  1C38               	btfss	___flmul@prod,0
  9524  0F6C  2F6E               	goto	u4281
  9525  0F6D  2F6F               	goto	u4280
  9526  0F6E                     u4281:
  9527  0F6E  2F70               	goto	l2797
  9528  0F6F                     u4280:
  9529  0F6F  2F68               	goto	l2793
  9530  0F70                     l2797:
  9531  0F70  0836               	movf	___flmul@aexp,w
  9532  0F71  1903               	btfsc	3,2
  9533  0F72  2F74               	goto	u4291
  9534  0F73  2F75               	goto	u4290
  9535  0F74                     u4291:
  9536  0F74  2FA6               	goto	l2807
  9537  0F75                     u4290:
  9538  0F75                     l2799:
  9539  0F75  3001               	movlw	1
  9540  0F76  07B8               	addwf	___flmul@prod,f
  9541  0F77  3000               	movlw	0
  9542  0F78  1803               	skipnc
  9543  0F79  3001               	movlw	1
  9544  0F7A  07B9               	addwf	___flmul@prod+1,f
  9545  0F7B  3000               	movlw	0
  9546  0F7C  1803               	skipnc
  9547  0F7D  3001               	movlw	1
  9548  0F7E  07BA               	addwf	___flmul@prod+2,f
  9549  0F7F  3000               	movlw	0
  9550  0F80  1803               	skipnc
  9551  0F81  3001               	movlw	1
  9552  0F82  07BB               	addwf	___flmul@prod+3,f
  9553  0F83                     l2801:
  9554  0F83  1C3B               	btfss	___flmul@prod+3,0
  9555  0F84  2F86               	goto	u4301
  9556  0F85  2F87               	goto	u4300
  9557  0F86                     u4301:
  9558  0F86  2FA6               	goto	l2807
  9559  0F87                     u4300:
  9560  0F87                     l2803:
  9561  0F87  0838               	movf	___flmul@prod,w
  9562  0F88  00AC               	movwf	??___flmul
  9563  0F89  0839               	movf	___flmul@prod+1,w
  9564  0F8A  00AD               	movwf	??___flmul+1
  9565  0F8B  083A               	movf	___flmul@prod+2,w
  9566  0F8C  00AE               	movwf	??___flmul+2
  9567  0F8D  083B               	movf	___flmul@prod+3,w
  9568  0F8E  00AF               	movwf	??___flmul+3
  9569  0F8F  3001               	movlw	1
  9570  0F90  00B0               	movwf	??___flmul+4
  9571  0F91                     u4315:
  9572  0F91  0D2F               	rlf	??___flmul+3,w
  9573  0F92  0CAF               	rrf	??___flmul+3,f
  9574  0F93  0CAE               	rrf	??___flmul+2,f
  9575  0F94  0CAD               	rrf	??___flmul+1,f
  9576  0F95  0CAC               	rrf	??___flmul,f
  9577  0F96                     u4310:
  9578  0F96  0BB0               	decfsz	??___flmul+4,f
  9579  0F97  2F91               	goto	u4315
  9580  0F98  082F               	movf	??___flmul+3,w
  9581  0F99  00BB               	movwf	___flmul@prod+3
  9582  0F9A  082E               	movf	??___flmul+2,w
  9583  0F9B  00BA               	movwf	___flmul@prod+2
  9584  0F9C  082D               	movf	??___flmul+1,w
  9585  0F9D  00B9               	movwf	___flmul@prod+1
  9586  0F9E  082C               	movf	??___flmul,w
  9587  0F9F  00B8               	movwf	___flmul@prod
  9588  0FA0                     l2805:
  9589  0FA0  3001               	movlw	1
  9590  0FA1  07BC               	addwf	___flmul@temp,f
  9591  0FA2  1803               	skipnc
  9592  0FA3  0ABD               	incf	___flmul@temp+1,f
  9593  0FA4  3000               	movlw	0
  9594  0FA5  07BD               	addwf	___flmul@temp+1,f
  9595  0FA6                     l2807:
  9596  0FA6  083D               	movf	___flmul@temp+1,w
  9597  0FA7  3A80               	xorlw	128
  9598  0FA8  00FF               	movwf	btemp+1
  9599  0FA9  3080               	movlw	128
  9600  0FAA  027F               	subwf	btemp+1,w
  9601  0FAB  1D03               	skipz
  9602  0FAC  2FAF               	goto	u4325
  9603  0FAD  30FF               	movlw	255
  9604  0FAE  023C               	subwf	___flmul@temp,w
  9605  0FAF                     u4325:
  9606  0FAF  1C03               	skipc
  9607  0FB0  2FB2               	goto	u4321
  9608  0FB1  2FB3               	goto	u4320
  9609  0FB2                     u4321:
  9610  0FB2  2FBE               	goto	l2811
  9611  0FB3                     u4320:
  9612  0FB3                     l2809:
  9613  0FB3  307F               	movlw	127
  9614  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  9615  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  9616  0FB6  00BB               	movwf	___flmul@prod+3
  9617  0FB7  3080               	movlw	128
  9618  0FB8  00BA               	movwf	___flmul@prod+2
  9619  0FB9  3000               	movlw	0
  9620  0FBA  00B9               	movwf	___flmul@prod+1
  9621  0FBB  3000               	movlw	0
  9622  0FBC  00B8               	movwf	___flmul@prod
  9623  0FBD  2FF3               	goto	l773
  9624  0FBE                     l2811:
  9625  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  9626  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  9627  0FC0  083D               	movf	___flmul@temp+1,w
  9628  0FC1  3A80               	xorlw	128
  9629  0FC2  00FF               	movwf	btemp+1
  9630  0FC3  3080               	movlw	128
  9631  0FC4  027F               	subwf	btemp+1,w
  9632  0FC5  1D03               	skipz
  9633  0FC6  2FC9               	goto	u4335
  9634  0FC7  3001               	movlw	1
  9635  0FC8  023C               	subwf	___flmul@temp,w
  9636  0FC9                     u4335:
  9637  0FC9  1803               	skipnc
  9638  0FCA  2FCC               	goto	u4331
  9639  0FCB  2FCD               	goto	u4330
  9640  0FCC                     u4331:
  9641  0FCC  2FD9               	goto	l2817
  9642  0FCD                     u4330:
  9643  0FCD                     l2813:
  9644  0FCD  3000               	movlw	0
  9645  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  9646  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  9647  0FD0  00BB               	movwf	___flmul@prod+3
  9648  0FD1  3000               	movlw	0
  9649  0FD2  00BA               	movwf	___flmul@prod+2
  9650  0FD3  3000               	movlw	0
  9651  0FD4  00B9               	movwf	___flmul@prod+1
  9652  0FD5  3000               	movlw	0
  9653  0FD6  00B8               	movwf	___flmul@prod
  9654  0FD7                     l2815:
  9655  0FD7  01B1               	clrf	___flmul@sign
  9656  0FD8  2FF3               	goto	l773
  9657  0FD9                     l2817:
  9658  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  9659  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  9660  0FDB  083C               	movf	___flmul@temp,w
  9661  0FDC  00AC               	movwf	??___flmul
  9662  0FDD  082C               	movf	??___flmul,w
  9663  0FDE  00B7               	movwf	___flmul@bexp
  9664  0FDF  30FF               	movlw	255
  9665  0FE0  05B8               	andwf	___flmul@prod,f
  9666  0FE1  30FF               	movlw	255
  9667  0FE2  05B9               	andwf	___flmul@prod+1,f
  9668  0FE3  307F               	movlw	127
  9669  0FE4  05BA               	andwf	___flmul@prod+2,f
  9670  0FE5  3000               	movlw	0
  9671  0FE6  05BB               	andwf	___flmul@prod+3,f
  9672  0FE7                     l2819:
  9673  0FE7  1C37               	btfss	___flmul@bexp,0
  9674  0FE8  2FEA               	goto	u4341
  9675  0FE9  2FEB               	goto	u4340
  9676  0FEA                     u4341:
  9677  0FEA  2FEC               	goto	l2823
  9678  0FEB                     u4340:
  9679  0FEB                     l2821:
  9680  0FEB  17BA               	bsf	___flmul@prod+2,7
  9681  0FEC                     l2823:
  9682  0FEC  0837               	movf	___flmul@bexp,w
  9683  0FED  00AC               	movwf	??___flmul
  9684  0FEE  1003               	clrc
  9685  0FEF  0C2C               	rrf	??___flmul,w
  9686  0FF0  00AD               	movwf	??___flmul+1
  9687  0FF1  082D               	movf	??___flmul+1,w
  9688  0FF2  00BB               	movwf	___flmul@prod+3
  9689  0FF3                     l773:
  9690  0FF3  0831               	movf	___flmul@sign,w
  9691  0FF4  00AC               	movwf	??___flmul
  9692  0FF5  082C               	movf	??___flmul,w
  9693  0FF6  04BB               	iorwf	___flmul@prod+3,f
  9694  0FF7                     l2825:
  9695  0FF7  083B               	movf	___flmul@prod+3,w
  9696  0FF8  00A7               	movwf	?___flmul+3
  9697  0FF9  083A               	movf	___flmul@prod+2,w
  9698  0FFA  00A6               	movwf	?___flmul+2
  9699  0FFB  0839               	movf	___flmul@prod+1,w
  9700  0FFC  00A5               	movwf	?___flmul+1
  9701  0FFD  0838               	movf	___flmul@prod,w
  9702  0FFE  00A4               	movwf	?___flmul
  9703  0FFF                     l761:
  9704  0FFF  0008               	return
  9705  1000                     __end_of___flmul:
  9706                           
  9707                           	psect	text23
  9708  1B1D                     __ptext23:	
  9709 ;; *************** function __Umul8_16 *****************
  9710 ;; Defined at:
  9711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  multiplier      1    wreg     unsigned char 
  9714 ;;  multiplicand    1    0[COMMON] unsigned char 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;  multiplier      1    8[COMMON] unsigned char 
  9717 ;;  word_mpld       2    6[COMMON] unsigned int 
  9718 ;;  product         2    4[COMMON] unsigned int 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  2    0[COMMON] unsigned int 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, status,0
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9728 ;;      Params:         2       0       0       0       0
  9729 ;;      Locals:         5       0       0       0       0
  9730 ;;      Temps:          2       0       0       0       0
  9731 ;;      Totals:         9       0       0       0       0
  9732 ;;Total ram usage:        9 bytes
  9733 ;; Hardware stack levels used: 1
  9734 ;; This function calls:
  9735 ;;		Nothing
  9736 ;; This function is called by:
  9737 ;;		___flmul
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           
  9742                           ;psect for function __Umul8_16
  9743  1B1D                     __Umul8_16:
  9744                           
  9745                           ;incstack = 0
  9746                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9747                           ;__Umul8_16@multiplier stored from wreg
  9748  1B1D  00F8               	movwf	__Umul8_16@multiplier
  9749  1B1E                     l2333:
  9750  1B1E  01F4               	clrf	__Umul8_16@product
  9751  1B1F  01F5               	clrf	__Umul8_16@product+1
  9752  1B20                     l2335:
  9753  1B20  0870               	movf	__Umul8_16@multiplicand,w
  9754  1B21  00F2               	movwf	??__Umul8_16
  9755  1B22  01F3               	clrf	??__Umul8_16+1
  9756  1B23  0872               	movf	??__Umul8_16,w
  9757  1B24  00F6               	movwf	__Umul8_16@word_mpld
  9758  1B25  0873               	movf	??__Umul8_16+1,w
  9759  1B26  00F7               	movwf	__Umul8_16@word_mpld+1
  9760  1B27                     l2337:
  9761  1B27  1C78               	btfss	__Umul8_16@multiplier,0
  9762  1B28  2B2A               	goto	u3091
  9763  1B29  2B2B               	goto	u3090
  9764  1B2A                     u3091:
  9765  1B2A  2B31               	goto	l780
  9766  1B2B                     u3090:
  9767  1B2B                     l2339:
  9768  1B2B  0876               	movf	__Umul8_16@word_mpld,w
  9769  1B2C  07F4               	addwf	__Umul8_16@product,f
  9770  1B2D  1803               	skipnc
  9771  1B2E  0AF5               	incf	__Umul8_16@product+1,f
  9772  1B2F  0877               	movf	__Umul8_16@word_mpld+1,w
  9773  1B30  07F5               	addwf	__Umul8_16@product+1,f
  9774  1B31                     l780:
  9775  1B31  3001               	movlw	1
  9776  1B32                     u3105:
  9777  1B32  1003               	clrc
  9778  1B33  0DF6               	rlf	__Umul8_16@word_mpld,f
  9779  1B34  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9780  1B35  3EFF               	addlw	-1
  9781  1B36  1D03               	skipz
  9782  1B37  2B32               	goto	u3105
  9783  1B38  1003               	clrc
  9784  1B39  0CF8               	rrf	__Umul8_16@multiplier,f
  9785  1B3A                     l2341:
  9786  1B3A  0878               	movf	__Umul8_16@multiplier,w
  9787  1B3B  1D03               	btfss	3,2
  9788  1B3C  2B3E               	goto	u3111
  9789  1B3D  2B3F               	goto	u3110
  9790  1B3E                     u3111:
  9791  1B3E  2B27               	goto	l2337
  9792  1B3F                     u3110:
  9793  1B3F                     l2343:
  9794  1B3F  0875               	movf	__Umul8_16@product+1,w
  9795  1B40  00F1               	movwf	?__Umul8_16+1
  9796  1B41  0874               	movf	__Umul8_16@product,w
  9797  1B42  00F0               	movwf	?__Umul8_16
  9798  1B43                     l782:
  9799  1B43  0008               	return
  9800  1B44                     __end_of__Umul8_16:
  9801                           
  9802                           	psect	text24
  9803  1190                     __ptext24:	
  9804 ;; *************** function ___fldiv *****************
  9805 ;; Defined at:
  9806 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  a               4   30[BANK0 ] unsigned int 
  9809 ;;  b               4   34[BANK0 ] unsigned int 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  grs             4   50[BANK0 ] unsigned long 
  9812 ;;  rem             4   43[BANK0 ] unsigned long 
  9813 ;;  new_exp         2   48[BANK0 ] int 
  9814 ;;  aexp            1   55[BANK0 ] unsigned char 
  9815 ;;  bexp            1   54[BANK0 ] unsigned char 
  9816 ;;  sign            1   47[BANK0 ] unsigned char 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  4   30[BANK0 ] unsigned char 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0, btemp+1
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9826 ;;      Params:         0       8       0       0       0
  9827 ;;      Locals:         0      13       0       0       0
  9828 ;;      Temps:          0       5       0       0       0
  9829 ;;      Totals:         0      26       0       0       0
  9830 ;;Total ram usage:       26 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_mapear
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           
  9840                           ;psect for function ___fldiv
  9841  1190                     ___fldiv:
  9842  1190                     l3163:	
  9843                           ;incstack = 0
  9844                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9845                           
  9846  1190  1283               	bcf	3,5	;RP0=0, select bank0
  9847  1191  1303               	bcf	3,6	;RP1=0, select bank0
  9848  1192  0845               	movf	___fldiv@b+3,w
  9849  1193  3980               	andlw	128
  9850  1194  00C6               	movwf	??___fldiv
  9851  1195  0846               	movf	??___fldiv,w
  9852  1196  00CF               	movwf	___fldiv@sign
  9853  1197                     l3165:
  9854  1197  0845               	movf	___fldiv@b+3,w
  9855  1198  00C6               	movwf	??___fldiv
  9856  1199  0746               	addwf	??___fldiv,w
  9857  119A  00C7               	movwf	??___fldiv+1
  9858  119B  0847               	movf	??___fldiv+1,w
  9859  119C  00D6               	movwf	___fldiv@bexp
  9860  119D                     l3167:
  9861  119D  1FC4               	btfss	___fldiv@b+2,7
  9862  119E  29A0               	goto	u5261
  9863  119F  29A1               	goto	u5260
  9864  11A0                     u5261:
  9865  11A0  29A2               	goto	l3171
  9866  11A1                     u5260:
  9867  11A1                     l3169:
  9868  11A1  1456               	bsf	___fldiv@bexp,0
  9869  11A2                     l3171:
  9870  11A2  0856               	movf	___fldiv@bexp,w
  9871  11A3  1903               	btfsc	3,2
  9872  11A4  29A6               	goto	u5271
  9873  11A5  29A7               	goto	u5270
  9874  11A6                     u5271:
  9875  11A6  29B7               	goto	l3181
  9876  11A7                     u5270:
  9877  11A7                     l3173:
  9878  11A7  0A56               	incf	___fldiv@bexp,w
  9879  11A8  1D03               	btfss	3,2
  9880  11A9  29AB               	goto	u5281
  9881  11AA  29AC               	goto	u5280
  9882  11AB                     u5281:
  9883  11AB  29B4               	goto	l3177
  9884  11AC                     u5280:
  9885  11AC                     l3175:
  9886  11AC  3000               	movlw	0
  9887  11AD  00C5               	movwf	___fldiv@b+3
  9888  11AE  3000               	movlw	0
  9889  11AF  00C4               	movwf	___fldiv@b+2
  9890  11B0  3000               	movlw	0
  9891  11B1  00C3               	movwf	___fldiv@b+1
  9892  11B2  3000               	movlw	0
  9893  11B3  00C2               	movwf	___fldiv@b
  9894  11B4                     l3177:
  9895  11B4  17C4               	bsf	___fldiv@b+2,7
  9896  11B5                     l3179:
  9897  11B5  01C5               	clrf	___fldiv@b+3
  9898  11B6  29BF               	goto	l3183
  9899  11B7                     l3181:
  9900  11B7  3000               	movlw	0
  9901  11B8  00C5               	movwf	___fldiv@b+3
  9902  11B9  3000               	movlw	0
  9903  11BA  00C4               	movwf	___fldiv@b+2
  9904  11BB  3000               	movlw	0
  9905  11BC  00C3               	movwf	___fldiv@b+1
  9906  11BD  3000               	movlw	0
  9907  11BE  00C2               	movwf	___fldiv@b
  9908  11BF                     l3183:
  9909  11BF  0841               	movf	___fldiv@a+3,w
  9910  11C0  3980               	andlw	128
  9911  11C1  00C6               	movwf	??___fldiv
  9912  11C2  0846               	movf	??___fldiv,w
  9913  11C3  06CF               	xorwf	___fldiv@sign,f
  9914  11C4                     l3185:
  9915  11C4  0841               	movf	___fldiv@a+3,w
  9916  11C5  00C6               	movwf	??___fldiv
  9917  11C6  0746               	addwf	??___fldiv,w
  9918  11C7  00C7               	movwf	??___fldiv+1
  9919  11C8  0847               	movf	??___fldiv+1,w
  9920  11C9  00D7               	movwf	___fldiv@aexp
  9921  11CA                     l3187:
  9922  11CA  1FC0               	btfss	___fldiv@a+2,7
  9923  11CB  29CD               	goto	u5291
  9924  11CC  29CE               	goto	u5290
  9925  11CD                     u5291:
  9926  11CD  29CF               	goto	l3191
  9927  11CE                     u5290:
  9928  11CE                     l3189:
  9929  11CE  1457               	bsf	___fldiv@aexp,0
  9930  11CF                     l3191:
  9931  11CF  0857               	movf	___fldiv@aexp,w
  9932  11D0  1903               	btfsc	3,2
  9933  11D1  29D3               	goto	u5301
  9934  11D2  29D4               	goto	u5300
  9935  11D3                     u5301:
  9936  11D3  29E4               	goto	l3201
  9937  11D4                     u5300:
  9938  11D4                     l3193:
  9939  11D4  0A57               	incf	___fldiv@aexp,w
  9940  11D5  1D03               	btfss	3,2
  9941  11D6  29D8               	goto	u5311
  9942  11D7  29D9               	goto	u5310
  9943  11D8                     u5311:
  9944  11D8  29E1               	goto	l3197
  9945  11D9                     u5310:
  9946  11D9                     l3195:
  9947  11D9  3000               	movlw	0
  9948  11DA  00C1               	movwf	___fldiv@a+3
  9949  11DB  3000               	movlw	0
  9950  11DC  00C0               	movwf	___fldiv@a+2
  9951  11DD  3000               	movlw	0
  9952  11DE  00BF               	movwf	___fldiv@a+1
  9953  11DF  3000               	movlw	0
  9954  11E0  00BE               	movwf	___fldiv@a
  9955  11E1                     l3197:
  9956  11E1  17C0               	bsf	___fldiv@a+2,7
  9957  11E2                     l3199:
  9958  11E2  01C1               	clrf	___fldiv@a+3
  9959  11E3  29EC               	goto	l721
  9960  11E4                     l3201:
  9961  11E4  3000               	movlw	0
  9962  11E5  00C1               	movwf	___fldiv@a+3
  9963  11E6  3000               	movlw	0
  9964  11E7  00C0               	movwf	___fldiv@a+2
  9965  11E8  3000               	movlw	0
  9966  11E9  00BF               	movwf	___fldiv@a+1
  9967  11EA  3000               	movlw	0
  9968  11EB  00BE               	movwf	___fldiv@a
  9969  11EC                     l721:
  9970  11EC  0841               	movf	___fldiv@a+3,w
  9971  11ED  0440               	iorwf	___fldiv@a+2,w
  9972  11EE  043F               	iorwf	___fldiv@a+1,w
  9973  11EF  043E               	iorwf	___fldiv@a,w
  9974  11F0  1D03               	skipz
  9975  11F1  29F3               	goto	u5321
  9976  11F2  29F4               	goto	u5320
  9977  11F3                     u5321:
  9978  11F3  2A0D               	goto	l3211
  9979  11F4                     u5320:
  9980  11F4                     l3203:
  9981  11F4  3000               	movlw	0
  9982  11F5  00C5               	movwf	___fldiv@b+3
  9983  11F6  3000               	movlw	0
  9984  11F7  00C4               	movwf	___fldiv@b+2
  9985  11F8  3000               	movlw	0
  9986  11F9  00C3               	movwf	___fldiv@b+1
  9987  11FA  3000               	movlw	0
  9988  11FB  00C2               	movwf	___fldiv@b
  9989  11FC  3080               	movlw	128
  9990  11FD  04C4               	iorwf	___fldiv@b+2,f
  9991  11FE  307F               	movlw	127
  9992  11FF  04C5               	iorwf	___fldiv@b+3,f
  9993  1200                     l3205:
  9994  1200  084F               	movf	___fldiv@sign,w
  9995  1201  00C6               	movwf	??___fldiv
  9996  1202  0846               	movf	??___fldiv,w
  9997  1203  04C5               	iorwf	___fldiv@b+3,f
  9998  1204                     l3207:
  9999  1204  0845               	movf	___fldiv@b+3,w
 10000  1205  00C1               	movwf	?___fldiv+3
 10001  1206  0844               	movf	___fldiv@b+2,w
 10002  1207  00C0               	movwf	?___fldiv+2
 10003  1208  0843               	movf	___fldiv@b+1,w
 10004  1209  00BF               	movwf	?___fldiv+1
 10005  120A  0842               	movf	___fldiv@b,w
 10006  120B  00BE               	movwf	?___fldiv
 10007  120C  2B6C               	goto	l723
 10008  120D                     l3211:
 10009  120D  0856               	movf	___fldiv@bexp,w
 10010  120E  1D03               	btfss	3,2
 10011  120F  2A11               	goto	u5331
 10012  1210  2A12               	goto	u5330
 10013  1211                     u5331:
 10014  1211  2A1B               	goto	l3217
 10015  1212                     u5330:
 10016  1212                     l3213:
 10017  1212  3000               	movlw	0
 10018  1213  00C1               	movwf	?___fldiv+3
 10019  1214  3000               	movlw	0
 10020  1215  00C0               	movwf	?___fldiv+2
 10021  1216  3000               	movlw	0
 10022  1217  00BF               	movwf	?___fldiv+1
 10023  1218  3000               	movlw	0
 10024  1219  00BE               	movwf	?___fldiv
 10025  121A  2B6C               	goto	l723
 10026  121B                     l3217:
 10027  121B  0856               	movf	___fldiv@bexp,w
 10028  121C  00C6               	movwf	??___fldiv
 10029  121D  01C7               	clrf	??___fldiv+1
 10030  121E  0847               	movf	??___fldiv+1,w
 10031  121F  00C9               	movwf	??___fldiv+3
 10032  1220  0857               	movf	___fldiv@aexp,w
 10033  1221  0246               	subwf	??___fldiv,w
 10034  1222  00C8               	movwf	??___fldiv+2
 10035  1223  1C03               	skipc
 10036  1224  03C9               	decf	??___fldiv+3,f
 10037  1225  0848               	movf	??___fldiv+2,w
 10038  1226  3E7F               	addlw	127
 10039  1227  00D0               	movwf	___fldiv@new_exp
 10040  1228  0849               	movf	??___fldiv+3,w
 10041  1229  1803               	skipnc
 10042  122A  3E01               	addlw	1
 10043  122B  3E00               	addlw	0
 10044  122C  00D1               	movwf	___fldiv@new_exp+1
 10045  122D                     l3219:
 10046  122D  0845               	movf	___fldiv@b+3,w
 10047  122E  00CE               	movwf	___fldiv@rem+3
 10048  122F  0844               	movf	___fldiv@b+2,w
 10049  1230  00CD               	movwf	___fldiv@rem+2
 10050  1231  0843               	movf	___fldiv@b+1,w
 10051  1232  00CC               	movwf	___fldiv@rem+1
 10052  1233  0842               	movf	___fldiv@b,w
 10053  1234  00CB               	movwf	___fldiv@rem
 10054  1235                     l3221:
 10055  1235  3000               	movlw	0
 10056  1236  00C5               	movwf	___fldiv@b+3
 10057  1237  3000               	movlw	0
 10058  1238  00C4               	movwf	___fldiv@b+2
 10059  1239  3000               	movlw	0
 10060  123A  00C3               	movwf	___fldiv@b+1
 10061  123B  3000               	movlw	0
 10062  123C  00C2               	movwf	___fldiv@b
 10063  123D                     l3223:
 10064  123D  3000               	movlw	0
 10065  123E  00D5               	movwf	___fldiv@grs+3
 10066  123F  3000               	movlw	0
 10067  1240  00D4               	movwf	___fldiv@grs+2
 10068  1241  3000               	movlw	0
 10069  1242  00D3               	movwf	___fldiv@grs+1
 10070  1243  3000               	movlw	0
 10071  1244  00D2               	movwf	___fldiv@grs
 10072  1245                     l3225:
 10073  1245  01D7               	clrf	___fldiv@aexp
 10074  1246  2A91               	goto	l3245
 10075  1247                     l3227:
 10076  1247  0857               	movf	___fldiv@aexp,w
 10077  1248  1903               	btfsc	3,2
 10078  1249  2A4B               	goto	u5341
 10079  124A  2A4C               	goto	u5340
 10080  124B                     u5341:
 10081  124B  2A6C               	goto	l3237
 10082  124C                     u5340:
 10083  124C                     l3229:
 10084  124C  3001               	movlw	1
 10085  124D  00C6               	movwf	??___fldiv
 10086  124E                     u5355:
 10087  124E  1003               	clrc
 10088  124F  0DCB               	rlf	___fldiv@rem,f
 10089  1250  0DCC               	rlf	___fldiv@rem+1,f
 10090  1251  0DCD               	rlf	___fldiv@rem+2,f
 10091  1252  0DCE               	rlf	___fldiv@rem+3,f
 10092  1253  0BC6               	decfsz	??___fldiv,f
 10093  1254  2A4E               	goto	u5355
 10094  1255  3001               	movlw	1
 10095  1256  00C6               	movwf	??___fldiv
 10096  1257                     u5365:
 10097  1257  1003               	clrc
 10098  1258  0DC2               	rlf	___fldiv@b,f
 10099  1259  0DC3               	rlf	___fldiv@b+1,f
 10100  125A  0DC4               	rlf	___fldiv@b+2,f
 10101  125B  0DC5               	rlf	___fldiv@b+3,f
 10102  125C  0BC6               	decfsz	??___fldiv,f
 10103  125D  2A57               	goto	u5365
 10104  125E                     l3231:
 10105  125E  1FD5               	btfss	___fldiv@grs+3,7
 10106  125F  2A61               	goto	u5371
 10107  1260  2A62               	goto	u5370
 10108  1261                     u5371:
 10109  1261  2A63               	goto	l3235
 10110  1262                     u5370:
 10111  1262                     l3233:
 10112  1262  1442               	bsf	___fldiv@b,0
 10113  1263                     l3235:
 10114  1263  3001               	movlw	1
 10115  1264  00C6               	movwf	??___fldiv
 10116  1265                     u5385:
 10117  1265  1003               	clrc
 10118  1266  0DD2               	rlf	___fldiv@grs,f
 10119  1267  0DD3               	rlf	___fldiv@grs+1,f
 10120  1268  0DD4               	rlf	___fldiv@grs+2,f
 10121  1269  0DD5               	rlf	___fldiv@grs+3,f
 10122  126A  0BC6               	decfsz	??___fldiv,f
 10123  126B  2A65               	goto	u5385
 10124  126C                     l3237:
 10125  126C  0841               	movf	___fldiv@a+3,w
 10126  126D  024E               	subwf	___fldiv@rem+3,w
 10127  126E  1D03               	skipz
 10128  126F  2A7A               	goto	u5395
 10129  1270  0840               	movf	___fldiv@a+2,w
 10130  1271  024D               	subwf	___fldiv@rem+2,w
 10131  1272  1D03               	skipz
 10132  1273  2A7A               	goto	u5395
 10133  1274  083F               	movf	___fldiv@a+1,w
 10134  1275  024C               	subwf	___fldiv@rem+1,w
 10135  1276  1D03               	skipz
 10136  1277  2A7A               	goto	u5395
 10137  1278  083E               	movf	___fldiv@a,w
 10138  1279  024B               	subwf	___fldiv@rem,w
 10139  127A                     u5395:
 10140  127A  1C03               	skipc
 10141  127B  2A7D               	goto	u5391
 10142  127C  2A7E               	goto	u5390
 10143  127D                     u5391:
 10144  127D  2A8D               	goto	l3243
 10145  127E                     u5390:
 10146  127E                     l3239:
 10147  127E  1755               	bsf	___fldiv@grs+3,6
 10148  127F                     l3241:
 10149  127F  083E               	movf	___fldiv@a,w
 10150  1280  02CB               	subwf	___fldiv@rem,f
 10151  1281  083F               	movf	___fldiv@a+1,w
 10152  1282  1C03               	skipc
 10153  1283  0F3F               	incfsz	___fldiv@a+1,w
 10154  1284  02CC               	subwf	___fldiv@rem+1,f
 10155  1285  0840               	movf	___fldiv@a+2,w
 10156  1286  1C03               	skipc
 10157  1287  0F40               	incfsz	___fldiv@a+2,w
 10158  1288  02CD               	subwf	___fldiv@rem+2,f
 10159  1289  0841               	movf	___fldiv@a+3,w
 10160  128A  1C03               	skipc
 10161  128B  0F41               	incfsz	___fldiv@a+3,w
 10162  128C  02CE               	subwf	___fldiv@rem+3,f
 10163  128D                     l3243:
 10164  128D  3001               	movlw	1
 10165  128E  00C6               	movwf	??___fldiv
 10166  128F  0846               	movf	??___fldiv,w
 10167  1290  07D7               	addwf	___fldiv@aexp,f
 10168  1291                     l3245:
 10169  1291  301A               	movlw	26
 10170  1292  0257               	subwf	___fldiv@aexp,w
 10171  1293  1C03               	skipc
 10172  1294  2A96               	goto	u5401
 10173  1295  2A97               	goto	u5400
 10174  1296                     u5401:
 10175  1296  2A47               	goto	l3227
 10176  1297                     u5400:
 10177  1297                     l3247:
 10178  1297  084E               	movf	___fldiv@rem+3,w
 10179  1298  044D               	iorwf	___fldiv@rem+2,w
 10180  1299  044C               	iorwf	___fldiv@rem+1,w
 10181  129A  044B               	iorwf	___fldiv@rem,w
 10182  129B  1903               	skipnz
 10183  129C  2A9E               	goto	u5411
 10184  129D  2A9F               	goto	u5410
 10185  129E                     u5411:
 10186  129E  2ABE               	goto	l3261
 10187  129F                     u5410:
 10188  129F                     l3249:
 10189  129F  1452               	bsf	___fldiv@grs,0
 10190  12A0  2ABE               	goto	l3261
 10191  12A1                     l3251:
 10192  12A1  3001               	movlw	1
 10193  12A2  00C6               	movwf	??___fldiv
 10194  12A3                     u5425:
 10195  12A3  1003               	clrc
 10196  12A4  0DC2               	rlf	___fldiv@b,f
 10197  12A5  0DC3               	rlf	___fldiv@b+1,f
 10198  12A6  0DC4               	rlf	___fldiv@b+2,f
 10199  12A7  0DC5               	rlf	___fldiv@b+3,f
 10200  12A8  0BC6               	decfsz	??___fldiv,f
 10201  12A9  2AA3               	goto	u5425
 10202  12AA                     l3253:
 10203  12AA  1FD5               	btfss	___fldiv@grs+3,7
 10204  12AB  2AAD               	goto	u5431
 10205  12AC  2AAE               	goto	u5430
 10206  12AD                     u5431:
 10207  12AD  2AAF               	goto	l3257
 10208  12AE                     u5430:
 10209  12AE                     l3255:
 10210  12AE  1442               	bsf	___fldiv@b,0
 10211  12AF                     l3257:
 10212  12AF  3001               	movlw	1
 10213  12B0  00C6               	movwf	??___fldiv
 10214  12B1                     u5445:
 10215  12B1  1003               	clrc
 10216  12B2  0DD2               	rlf	___fldiv@grs,f
 10217  12B3  0DD3               	rlf	___fldiv@grs+1,f
 10218  12B4  0DD4               	rlf	___fldiv@grs+2,f
 10219  12B5  0DD5               	rlf	___fldiv@grs+3,f
 10220  12B6  0BC6               	decfsz	??___fldiv,f
 10221  12B7  2AB1               	goto	u5445
 10222  12B8                     l3259:
 10223  12B8  30FF               	movlw	255
 10224  12B9  07D0               	addwf	___fldiv@new_exp,f
 10225  12BA  1803               	skipnc
 10226  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 10227  12BC  30FF               	movlw	255
 10228  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 10229  12BE                     l3261:
 10230  12BE  1FC4               	btfss	___fldiv@b+2,7
 10231  12BF  2AC1               	goto	u5451
 10232  12C0  2AC2               	goto	u5450
 10233  12C1                     u5451:
 10234  12C1  2AA1               	goto	l3251
 10235  12C2                     u5450:
 10236  12C2                     l3263:
 10237  12C2  01D7               	clrf	___fldiv@aexp
 10238  12C3                     l3265:
 10239  12C3  1FD5               	btfss	___fldiv@grs+3,7
 10240  12C4  2AC6               	goto	u5461
 10241  12C5  2AC7               	goto	u5460
 10242  12C6                     u5461:
 10243  12C6  2AE3               	goto	l3273
 10244  12C7                     u5460:
 10245  12C7                     l3267:
 10246  12C7  30FF               	movlw	255
 10247  12C8  0552               	andwf	___fldiv@grs,w
 10248  12C9  00C6               	movwf	??___fldiv
 10249  12CA  30FF               	movlw	255
 10250  12CB  0553               	andwf	___fldiv@grs+1,w
 10251  12CC  00C7               	movwf	??___fldiv+1
 10252  12CD  30FF               	movlw	255
 10253  12CE  0554               	andwf	___fldiv@grs+2,w
 10254  12CF  00C8               	movwf	??___fldiv+2
 10255  12D0  307F               	movlw	127
 10256  12D1  0555               	andwf	___fldiv@grs+3,w
 10257  12D2  00C9               	movwf	??___fldiv+3
 10258  12D3  0849               	movf	??___fldiv+3,w
 10259  12D4  0448               	iorwf	??___fldiv+2,w
 10260  12D5  0447               	iorwf	??___fldiv+1,w
 10261  12D6  0446               	iorwf	??___fldiv,w
 10262  12D7  1903               	skipnz
 10263  12D8  2ADA               	goto	u5471
 10264  12D9  2ADB               	goto	u5470
 10265  12DA                     u5471:
 10266  12DA  2ADE               	goto	l737
 10267  12DB                     u5470:
 10268  12DB                     l3269:
 10269  12DB  01D7               	clrf	___fldiv@aexp
 10270  12DC  0AD7               	incf	___fldiv@aexp,f
 10271  12DD  2AE3               	goto	l3273
 10272  12DE                     l737:
 10273  12DE  1C42               	btfss	___fldiv@b,0
 10274  12DF  2AE1               	goto	u5481
 10275  12E0  2AE2               	goto	u5480
 10276  12E1                     u5481:
 10277  12E1  2AE3               	goto	l3273
 10278  12E2                     u5480:
 10279  12E2  2ADB               	goto	l3269
 10280  12E3                     l3273:
 10281  12E3  0857               	movf	___fldiv@aexp,w
 10282  12E4  1903               	btfsc	3,2
 10283  12E5  2AE7               	goto	u5491
 10284  12E6  2AE8               	goto	u5490
 10285  12E7                     u5491:
 10286  12E7  2B19               	goto	l3283
 10287  12E8                     u5490:
 10288  12E8                     l3275:
 10289  12E8  3001               	movlw	1
 10290  12E9  07C2               	addwf	___fldiv@b,f
 10291  12EA  3000               	movlw	0
 10292  12EB  1803               	skipnc
 10293  12EC  3001               	movlw	1
 10294  12ED  07C3               	addwf	___fldiv@b+1,f
 10295  12EE  3000               	movlw	0
 10296  12EF  1803               	skipnc
 10297  12F0  3001               	movlw	1
 10298  12F1  07C4               	addwf	___fldiv@b+2,f
 10299  12F2  3000               	movlw	0
 10300  12F3  1803               	skipnc
 10301  12F4  3001               	movlw	1
 10302  12F5  07C5               	addwf	___fldiv@b+3,f
 10303  12F6                     l3277:
 10304  12F6  1C45               	btfss	___fldiv@b+3,0
 10305  12F7  2AF9               	goto	u5501
 10306  12F8  2AFA               	goto	u5500
 10307  12F9                     u5501:
 10308  12F9  2B19               	goto	l3283
 10309  12FA                     u5500:
 10310  12FA                     l3279:
 10311  12FA  0842               	movf	___fldiv@b,w
 10312  12FB  00C6               	movwf	??___fldiv
 10313  12FC  0843               	movf	___fldiv@b+1,w
 10314  12FD  00C7               	movwf	??___fldiv+1
 10315  12FE  0844               	movf	___fldiv@b+2,w
 10316  12FF  00C8               	movwf	??___fldiv+2
 10317  1300  0845               	movf	___fldiv@b+3,w
 10318  1301  00C9               	movwf	??___fldiv+3
 10319  1302  3001               	movlw	1
 10320  1303  00CA               	movwf	??___fldiv+4
 10321  1304                     u5515:
 10322  1304  0D49               	rlf	??___fldiv+3,w
 10323  1305  0CC9               	rrf	??___fldiv+3,f
 10324  1306  0CC8               	rrf	??___fldiv+2,f
 10325  1307  0CC7               	rrf	??___fldiv+1,f
 10326  1308  0CC6               	rrf	??___fldiv,f
 10327  1309                     u5510:
 10328  1309  0BCA               	decfsz	??___fldiv+4,f
 10329  130A  2B04               	goto	u5515
 10330  130B  0849               	movf	??___fldiv+3,w
 10331  130C  00C5               	movwf	___fldiv@b+3
 10332  130D  0848               	movf	??___fldiv+2,w
 10333  130E  00C4               	movwf	___fldiv@b+2
 10334  130F  0847               	movf	??___fldiv+1,w
 10335  1310  00C3               	movwf	___fldiv@b+1
 10336  1311  0846               	movf	??___fldiv,w
 10337  1312  00C2               	movwf	___fldiv@b
 10338  1313                     l3281:
 10339  1313  3001               	movlw	1
 10340  1314  07D0               	addwf	___fldiv@new_exp,f
 10341  1315  1803               	skipnc
 10342  1316  0AD1               	incf	___fldiv@new_exp+1,f
 10343  1317  3000               	movlw	0
 10344  1318  07D1               	addwf	___fldiv@new_exp+1,f
 10345  1319                     l3283:
 10346  1319  0851               	movf	___fldiv@new_exp+1,w
 10347  131A  3A80               	xorlw	128
 10348  131B  00FF               	movwf	btemp+1
 10349  131C  3080               	movlw	128
 10350  131D  027F               	subwf	btemp+1,w
 10351  131E  1D03               	skipz
 10352  131F  2B22               	goto	u5525
 10353  1320  30FF               	movlw	255
 10354  1321  0250               	subwf	___fldiv@new_exp,w
 10355  1322                     u5525:
 10356  1322  1C03               	skipc
 10357  1323  2B25               	goto	u5521
 10358  1324  2B26               	goto	u5520
 10359  1325                     u5521:
 10360  1325  2B34               	goto	l3287
 10361  1326                     u5520:
 10362  1326                     l3285:
 10363  1326  30FF               	movlw	255
 10364  1327  1283               	bcf	3,5	;RP0=0, select bank0
 10365  1328  1303               	bcf	3,6	;RP1=0, select bank0
 10366  1329  00D0               	movwf	___fldiv@new_exp
 10367  132A  3000               	movlw	0
 10368  132B  00D1               	movwf	___fldiv@new_exp+1
 10369  132C  3000               	movlw	0
 10370  132D  00C5               	movwf	___fldiv@b+3
 10371  132E  3000               	movlw	0
 10372  132F  00C4               	movwf	___fldiv@b+2
 10373  1330  3000               	movlw	0
 10374  1331  00C3               	movwf	___fldiv@b+1
 10375  1332  3000               	movlw	0
 10376  1333  00C2               	movwf	___fldiv@b
 10377  1334                     l3287:
 10378  1334  1283               	bcf	3,5	;RP0=0, select bank0
 10379  1335  1303               	bcf	3,6	;RP1=0, select bank0
 10380  1336  0851               	movf	___fldiv@new_exp+1,w
 10381  1337  3A80               	xorlw	128
 10382  1338  00FF               	movwf	btemp+1
 10383  1339  3080               	movlw	128
 10384  133A  027F               	subwf	btemp+1,w
 10385  133B  1D03               	skipz
 10386  133C  2B3F               	goto	u5535
 10387  133D  3001               	movlw	1
 10388  133E  0250               	subwf	___fldiv@new_exp,w
 10389  133F                     u5535:
 10390  133F  1803               	skipnc
 10391  1340  2B42               	goto	u5531
 10392  1341  2B43               	goto	u5530
 10393  1342                     u5531:
 10394  1342  2B50               	goto	l743
 10395  1343                     u5530:
 10396  1343                     l3289:
 10397  1343  1283               	bcf	3,5	;RP0=0, select bank0
 10398  1344  1303               	bcf	3,6	;RP1=0, select bank0
 10399  1345  01D0               	clrf	___fldiv@new_exp
 10400  1346  01D1               	clrf	___fldiv@new_exp+1
 10401  1347                     l3291:
 10402  1347  3000               	movlw	0
 10403  1348  00C5               	movwf	___fldiv@b+3
 10404  1349  3000               	movlw	0
 10405  134A  00C4               	movwf	___fldiv@b+2
 10406  134B  3000               	movlw	0
 10407  134C  00C3               	movwf	___fldiv@b+1
 10408  134D  3000               	movlw	0
 10409  134E  00C2               	movwf	___fldiv@b
 10410  134F                     l3293:
 10411  134F  01CF               	clrf	___fldiv@sign
 10412  1350                     l743:
 10413  1350  1283               	bcf	3,5	;RP0=0, select bank0
 10414  1351  1303               	bcf	3,6	;RP1=0, select bank0
 10415  1352  0850               	movf	___fldiv@new_exp,w
 10416  1353  00C6               	movwf	??___fldiv
 10417  1354  0846               	movf	??___fldiv,w
 10418  1355  00D6               	movwf	___fldiv@bexp
 10419  1356                     l3295:
 10420  1356  1C56               	btfss	___fldiv@bexp,0
 10421  1357  2B59               	goto	u5541
 10422  1358  2B5A               	goto	u5540
 10423  1359                     u5541:
 10424  1359  2B5C               	goto	l3299
 10425  135A                     u5540:
 10426  135A                     l3297:
 10427  135A  17C4               	bsf	___fldiv@b+2,7
 10428  135B  2B60               	goto	l745
 10429  135C                     l3299:
 10430  135C  307F               	movlw	127
 10431  135D  00C6               	movwf	??___fldiv
 10432  135E  0846               	movf	??___fldiv,w
 10433  135F  05C4               	andwf	___fldiv@b+2,f
 10434  1360                     l745:
 10435  1360  0856               	movf	___fldiv@bexp,w
 10436  1361  00C6               	movwf	??___fldiv
 10437  1362  1003               	clrc
 10438  1363  0C46               	rrf	??___fldiv,w
 10439  1364  00C7               	movwf	??___fldiv+1
 10440  1365  0847               	movf	??___fldiv+1,w
 10441  1366  00C5               	movwf	___fldiv@b+3
 10442  1367  084F               	movf	___fldiv@sign,w
 10443  1368  00C6               	movwf	??___fldiv
 10444  1369  0846               	movf	??___fldiv,w
 10445  136A  04C5               	iorwf	___fldiv@b+3,f
 10446  136B  2A04               	goto	l3207
 10447  136C                     l723:
 10448  136C  0008               	return
 10449  136D                     __end_of___fldiv:
 10450                           
 10451                           	psect	text25
 10452  1A72                     __ptext25:	
 10453 ;; *************** function _adc_canal *****************
 10454 ;; Defined at:
 10455 ;;		line 11 in file "adc_canal.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  canal           1    wreg     unsigned char 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;  canal           1    1[COMMON] unsigned char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      unsigned char 
 10462 ;; Registers used:
 10463 ;;		wreg, status,2, status,0
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10469 ;;      Params:         0       0       0       0       0
 10470 ;;      Locals:         1       0       0       0       0
 10471 ;;      Temps:          1       0       0       0       0
 10472 ;;      Totals:         2       0       0       0       0
 10473 ;;Total ram usage:        2 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; This function calls:
 10476 ;;		Nothing
 10477 ;; This function is called by:
 10478 ;;		_main
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           
 10483                           ;psect for function _adc_canal
 10484  1A72                     _adc_canal:
 10485                           
 10486                           ;incstack = 0
 10487                           ; Regs used in _adc_canal: [wreg+status,2+status,0]
 10488                           ;adc_canal@canal stored from wreg
 10489  1A72  00F1               	movwf	adc_canal@canal
 10490  1A73                     l3395:
 10491                           
 10492                           ;adc_canal.c: 12:     ADCON0bits.CHS = canal;
 10493  1A73  0871               	movf	adc_canal@canal,w
 10494  1A74  00F0               	movwf	??_adc_canal
 10495  1A75  0DF0               	rlf	??_adc_canal,f
 10496  1A76  0DF0               	rlf	??_adc_canal,f
 10497  1A77  1283               	bcf	3,5	;RP0=0, select bank0
 10498  1A78  1303               	bcf	3,6	;RP1=0, select bank0
 10499  1A79  081F               	movf	31,w	;volatile
 10500  1A7A  0670               	xorwf	??_adc_canal,w
 10501  1A7B  39C3               	andlw	-61
 10502  1A7C  0670               	xorwf	??_adc_canal,w
 10503  1A7D  009F               	movwf	31	;volatile
 10504  1A7E                     l3397:
 10505                           
 10506                           ;adc_canal.c: 13:     return ADRESH;
 10507  1A7E  081E               	movf	30,w	;volatile
 10508  1A7F                     l150:
 10509  1A7F  0008               	return
 10510  1A80                     __end_of_adc_canal:
 10511                           
 10512                           	psect	text26
 10513  1A66                     __ptext26:	
 10514 ;; *************** function _adc_c *****************
 10515 ;; Defined at:
 10516 ;;		line 11 in file "adc_c.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10530 ;;      Params:         0       0       0       0       0
 10531 ;;      Locals:         0       0       0       0       0
 10532 ;;      Temps:          0       0       0       0       0
 10533 ;;      Totals:         0       0       0       0       0
 10534 ;;Total ram usage:        0 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_main
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           
 10544                           ;psect for function _adc_c
 10545  1A66                     _adc_c:
 10546  1A66                     l3383:	
 10547                           ;incstack = 0
 10548                           ; Regs used in _adc_c: [wreg+status,2+status,0]
 10549                           
 10550                           
 10551                           ;adc_c.c: 13:     ADCON0bits.ADCS = 0;
 10552  1A66  303F               	movlw	-193
 10553  1A67  1283               	bcf	3,5	;RP0=0, select bank0
 10554  1A68  1303               	bcf	3,6	;RP1=0, select bank0
 10555  1A69  059F               	andwf	31,f	;volatile
 10556  1A6A                     l3385:
 10557                           
 10558                           ;adc_c.c: 14:     ADCON0bits.CHS0 = 0;
 10559  1A6A  111F               	bcf	31,2	;volatile
 10560  1A6B                     l3387:
 10561                           
 10562                           ;adc_c.c: 15:     ADCON0bits.ADON = 1;
 10563  1A6B  141F               	bsf	31,0	;volatile
 10564  1A6C                     l3389:
 10565                           
 10566                           ;adc_c.c: 16:     ADCON1bits.VCFG1 = 0;
 10567  1A6C  1683               	bsf	3,5	;RP0=1, select bank1
 10568  1A6D  1303               	bcf	3,6	;RP1=0, select bank1
 10569  1A6E  129F               	bcf	31,5	;volatile
 10570  1A6F                     l3391:
 10571                           
 10572                           ;adc_c.c: 17:     ADCON1bits.VCFG0 = 0;
 10573  1A6F  121F               	bcf	31,4	;volatile
 10574  1A70                     l3393:
 10575                           
 10576                           ;adc_c.c: 18:     ADCON1bits.ADFM = 0;
 10577  1A70  139F               	bcf	31,7	;volatile
 10578  1A71                     l143:
 10579  1A71  0008               	return
 10580  1A72                     __end_of_adc_c:
 10581                           
 10582                           	psect	text27
 10583  080A                     __ptext27:	
 10584 ;; *************** function _Lcd_Write_String *****************
 10585 ;; Defined at:
 10586 ;;		line 104 in file "LCD8bits.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;  a               2    3[COMMON] PTR unsigned char 
 10589 ;;		 -> volt(16), STR_1(11), 
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;  i               2    8[COMMON] int 
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10601 ;;      Params:         2       0       0       0       0
 10602 ;;      Locals:         2       0       0       0       0
 10603 ;;      Temps:          3       0       0       0       0
 10604 ;;      Totals:         7       0       0       0       0
 10605 ;;Total ram usage:        7 bytes
 10606 ;; Hardware stack levels used: 1
 10607 ;; Hardware stack levels required when called: 2
 10608 ;; This function calls:
 10609 ;;		_Lcd_Write_Char
 10610 ;; This function is called by:
 10611 ;;		_main
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           
 10616                           ;psect for function _Lcd_Write_String
 10617  080A                     _Lcd_Write_String:
 10618  080A                     l3371:	
 10619                           ;incstack = 0
 10620                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10621                           
 10622                           
 10623                           ;LCD8bits.c: 105:     int i;;LCD8bits.c: 106:     for (i = 0; a[i] != '\0'; i++)
 10624  080A  01F8               	clrf	Lcd_Write_String@i
 10625  080B  01F9               	clrf	Lcd_Write_String@i+1
 10626  080C  282F               	goto	l3377
 10627  080D                     l3373:
 10628                           
 10629                           ;LCD8bits.c: 107:         Lcd_Write_Char(a[i]);
 10630  080D  0878               	movf	Lcd_Write_String@i,w
 10631  080E  0773               	addwf	Lcd_Write_String@a,w
 10632  080F  00F6               	movwf	??_Lcd_Write_String+1
 10633  0810  0874               	movf	Lcd_Write_String@a+1,w
 10634  0811  00F5               	movwf	??_Lcd_Write_String
 10635  0812  1803               	skipnc
 10636  0813  0AF5               	incf	??_Lcd_Write_String,f
 10637  0814  1FF8               	btfss	Lcd_Write_String@i,7
 10638  0815  2817               	goto	u5710
 10639  0816  03F5               	decf	??_Lcd_Write_String,f
 10640  0817                     u5710:
 10641  0817  0875               	movf	??_Lcd_Write_String,w
 10642  0818  00F7               	movwf	??_Lcd_Write_String+2
 10643  0819  0877               	movf	??_Lcd_Write_String+2,w
 10644  081A  1283               	bcf	3,5	;RP0=0, select bank0
 10645  081B  1303               	bcf	3,6	;RP1=0, select bank0
 10646  081C  00FF               	movwf	btemp+1
 10647  081D  0876               	movf	??_Lcd_Write_String+1,w
 10648  081E  0084               	movwf	4
 10649  081F  160A  158A  2000  120A  158A  	fcall	stringtab
 10650  0824  160A  158A  2280  120A  158A  	fcall	_Lcd_Write_Char
 10651  0829                     l3375:
 10652  0829  3001               	movlw	1
 10653  082A  07F8               	addwf	Lcd_Write_String@i,f
 10654  082B  1803               	skipnc
 10655  082C  0AF9               	incf	Lcd_Write_String@i+1,f
 10656  082D  3000               	movlw	0
 10657  082E  07F9               	addwf	Lcd_Write_String@i+1,f
 10658  082F                     l3377:
 10659  082F  0878               	movf	Lcd_Write_String@i,w
 10660  0830  0773               	addwf	Lcd_Write_String@a,w
 10661  0831  00F6               	movwf	??_Lcd_Write_String+1
 10662  0832  0874               	movf	Lcd_Write_String@a+1,w
 10663  0833  00F5               	movwf	??_Lcd_Write_String
 10664  0834  1803               	skipnc
 10665  0835  0AF5               	incf	??_Lcd_Write_String,f
 10666  0836  1FF8               	btfss	Lcd_Write_String@i,7
 10667  0837  2839               	goto	u5720
 10668  0838  03F5               	decf	??_Lcd_Write_String,f
 10669  0839                     u5720:
 10670  0839  0875               	movf	??_Lcd_Write_String,w
 10671  083A  00F7               	movwf	??_Lcd_Write_String+2
 10672  083B  0877               	movf	??_Lcd_Write_String+2,w
 10673  083C  1283               	bcf	3,5	;RP0=0, select bank0
 10674  083D  1303               	bcf	3,6	;RP1=0, select bank0
 10675  083E  00FF               	movwf	btemp+1
 10676  083F  0876               	movf	??_Lcd_Write_String+1,w
 10677  0840  0084               	movwf	4
 10678  0841  160A  158A  2000  120A  158A  	fcall	stringtab
 10679  0846  3A00               	xorlw	0
 10680  0847  1D03               	skipz
 10681  0848  284A               	goto	u5731
 10682  0849  284B               	goto	u5730
 10683  084A                     u5731:
 10684  084A  280D               	goto	l3373
 10685  084B                     u5730:
 10686  084B                     l65:
 10687  084B  0008               	return
 10688  084C                     __end_of_Lcd_Write_String:
 10689                           
 10690                           	psect	text28
 10691  1A80                     __ptext28:	
 10692 ;; *************** function _Lcd_Write_Char *****************
 10693 ;; Defined at:
 10694 ;;		line 96 in file "LCD8bits.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  a               1    wreg     unsigned char 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  a               1    2[COMMON] unsigned char 
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0, pclath, cstack
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10708 ;;      Params:         0       0       0       0       0
 10709 ;;      Locals:         1       0       0       0       0
 10710 ;;      Temps:          1       0       0       0       0
 10711 ;;      Totals:         2       0       0       0       0
 10712 ;;Total ram usage:        2 bytes
 10713 ;; Hardware stack levels used: 1
 10714 ;; Hardware stack levels required when called: 1
 10715 ;; This function calls:
 10716 ;;		_Lcd_Port
 10717 ;; This function is called by:
 10718 ;;		_Lcd_Write_String
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           
 10723                           ;psect for function _Lcd_Write_Char
 10724  1A80                     _Lcd_Write_Char:
 10725                           
 10726                           ;incstack = 0
 10727                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10728                           ;Lcd_Write_Char@a stored from wreg
 10729  1A80  00F2               	movwf	Lcd_Write_Char@a
 10730  1A81                     l2839:
 10731                           
 10732                           ;LCD8bits.c: 97:     RC0 = 1;
 10733  1A81  1283               	bcf	3,5	;RP0=0, select bank0
 10734  1A82  1303               	bcf	3,6	;RP1=0, select bank0
 10735  1A83  1407               	bsf	7,0	;volatile
 10736  1A84                     l2841:
 10737                           
 10738                           ;LCD8bits.c: 98:     Lcd_Port(a);
 10739  1A84  0872               	movf	Lcd_Write_Char@a,w
 10740  1A85  160A  158A  237E  160A  158A  	fcall	_Lcd_Port
 10741  1A8A                     l2843:
 10742                           
 10743                           ;LCD8bits.c: 99:     RC1 = 1;
 10744  1A8A  1283               	bcf	3,5	;RP0=0, select bank0
 10745  1A8B  1303               	bcf	3,6	;RP1=0, select bank0
 10746  1A8C  1487               	bsf	7,1	;volatile
 10747  1A8D                     l2845:
 10748                           
 10749                           ;LCD8bits.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10750  1A8D  301A               	movlw	26
 10751  1A8E  00F1               	movwf	??_Lcd_Write_Char
 10752  1A8F                     u6207:
 10753  1A8F  0BF1               	decfsz	??_Lcd_Write_Char,f
 10754  1A90  2A8F               	goto	u6207
 10755  1A91  0000               	nop
 10756  1A92                     l2847:
 10757                           
 10758                           ;LCD8bits.c: 101:     RC1 = 0;
 10759  1A92  1283               	bcf	3,5	;RP0=0, select bank0
 10760  1A93  1303               	bcf	3,6	;RP1=0, select bank0
 10761  1A94  1087               	bcf	7,1	;volatile
 10762  1A95                     l59:
 10763  1A95  0008               	return
 10764  1A96                     __end_of_Lcd_Write_Char:
 10765                           
 10766                           	psect	text29
 10767  1AB0                     __ptext29:	
 10768 ;; *************** function _Lcd_Set_Cursor *****************
 10769 ;; Defined at:
 10770 ;;		line 68 in file "LCD8bits.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  a               1    wreg     unsigned char 
 10773 ;;  b               1    4[COMMON] unsigned char 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  a               1    6[COMMON] unsigned char 
 10776 ;;  temp            1    7[COMMON] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0, pclath, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10786 ;;      Params:         1       0       0       0       0
 10787 ;;      Locals:         2       0       0       0       0
 10788 ;;      Temps:          1       0       0       0       0
 10789 ;;      Totals:         4       0       0       0       0
 10790 ;;Total ram usage:        4 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; Hardware stack levels required when called: 2
 10793 ;; This function calls:
 10794 ;;		_Lcd_Cmd
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           
 10801                           ;psect for function _Lcd_Set_Cursor
 10802  1AB0                     _Lcd_Set_Cursor:
 10803                           
 10804                           ;incstack = 0
 10805                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10806                           ;Lcd_Set_Cursor@a stored from wreg
 10807  1AB0  00F6               	movwf	Lcd_Set_Cursor@a
 10808  1AB1                     l3349:
 10809                           
 10810                           ;LCD8bits.c: 69:     unsigned char temp;;LCD8bits.c: 70:     if (a == 1) {
 10811  1AB1  0376               	decf	Lcd_Set_Cursor@a,w
 10812  1AB2  1D03               	btfss	3,2
 10813  1AB3  2AB5               	goto	u5691
 10814  1AB4  2AB6               	goto	u5690
 10815  1AB5                     u5691:
 10816  1AB5  2AC2               	goto	l3355
 10817  1AB6                     u5690:
 10818  1AB6                     l3351:
 10819                           
 10820                           ;LCD8bits.c: 71:         temp = 0x80 + b - 1;
 10821  1AB6  0874               	movf	Lcd_Set_Cursor@b,w
 10822  1AB7  3E7F               	addlw	127
 10823  1AB8  00F5               	movwf	??_Lcd_Set_Cursor
 10824  1AB9  0875               	movf	??_Lcd_Set_Cursor,w
 10825  1ABA  00F7               	movwf	Lcd_Set_Cursor@temp
 10826  1ABB                     l3353:
 10827                           
 10828                           ;LCD8bits.c: 72:         Lcd_Cmd(temp);
 10829  1ABB  0877               	movf	Lcd_Set_Cursor@temp,w
 10830  1ABC  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10831                           
 10832                           ;LCD8bits.c: 74:     } else if (a == 2) {
 10833  1AC1  2AD3               	goto	l53
 10834  1AC2                     l3355:
 10835  1AC2  3002               	movlw	2
 10836  1AC3  0676               	xorwf	Lcd_Set_Cursor@a,w
 10837  1AC4  1D03               	btfss	3,2
 10838  1AC5  2AC7               	goto	u5701
 10839  1AC6  2AC8               	goto	u5700
 10840  1AC7                     u5701:
 10841  1AC7  2AD3               	goto	l53
 10842  1AC8                     u5700:
 10843  1AC8                     l3357:
 10844                           
 10845                           ;LCD8bits.c: 75:         temp = 0xC0 + b - 1;
 10846  1AC8  0874               	movf	Lcd_Set_Cursor@b,w
 10847  1AC9  3EBF               	addlw	191
 10848  1ACA  00F5               	movwf	??_Lcd_Set_Cursor
 10849  1ACB  0875               	movf	??_Lcd_Set_Cursor,w
 10850  1ACC  00F7               	movwf	Lcd_Set_Cursor@temp
 10851  1ACD                     l3359:
 10852                           
 10853                           ;LCD8bits.c: 76:         Lcd_Cmd(temp);
 10854  1ACD  0877               	movf	Lcd_Set_Cursor@temp,w
 10855  1ACE  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10856  1AD3                     l53:
 10857  1AD3  0008               	return
 10858  1AD4                     __end_of_Lcd_Set_Cursor:
 10859                           
 10860                           	psect	text30
 10861  1C59                     __ptext30:	
 10862 ;; *************** function _Lcd_Init *****************
 10863 ;; Defined at:
 10864 ;;		line 80 in file "LCD8bits.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;		None
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;		None
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  1    wreg      void 
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0, pclath, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10878 ;;      Params:         0       0       0       0       0
 10879 ;;      Locals:         0       0       0       0       0
 10880 ;;      Temps:          2       0       0       0       0
 10881 ;;      Totals:         2       0       0       0       0
 10882 ;;Total ram usage:        2 bytes
 10883 ;; Hardware stack levels used: 1
 10884 ;; Hardware stack levels required when called: 2
 10885 ;; This function calls:
 10886 ;;		_Lcd_Cmd
 10887 ;;		_Lcd_Port
 10888 ;; This function is called by:
 10889 ;;		_main
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           
 10894                           ;psect for function _Lcd_Init
 10895  1C59                     _Lcd_Init:
 10896  1C59                     l3361:	
 10897                           ;incstack = 0
 10898                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10899                           
 10900                           
 10901                           ;LCD8bits.c: 81:     Lcd_Port(0);
 10902  1C59  3000               	movlw	0
 10903  1C5A  160A  158A  237E  160A  158A  	fcall	_Lcd_Port
 10904  1C5F                     l3363:
 10905                           
 10906                           ;LCD8bits.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10907  1C5F  3034               	movlw	52
 10908  1C60  00F5               	movwf	??_Lcd_Init+1
 10909  1C61  30F1               	movlw	241
 10910  1C62  00F4               	movwf	??_Lcd_Init
 10911  1C63                     u6217:
 10912  1C63  0BF4               	decfsz	??_Lcd_Init,f
 10913  1C64  2C63               	goto	u6217
 10914  1C65  0BF5               	decfsz	??_Lcd_Init+1,f
 10915  1C66  2C63               	goto	u6217
 10916  1C67  2C68               	nop2
 10917  1C68                     l3365:
 10918                           
 10919                           ;LCD8bits.c: 83:     Lcd_Cmd(48);
 10920  1C68  3030               	movlw	48
 10921  1C69  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10922                           
 10923                           ;LCD8bits.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10924  1C6E  300D               	movlw	13
 10925  1C6F  00F5               	movwf	??_Lcd_Init+1
 10926  1C70  30FB               	movlw	251
 10927  1C71  00F4               	movwf	??_Lcd_Init
 10928  1C72                     u6227:
 10929  1C72  0BF4               	decfsz	??_Lcd_Init,f
 10930  1C73  2C72               	goto	u6227
 10931  1C74  0BF5               	decfsz	??_Lcd_Init+1,f
 10932  1C75  2C72               	goto	u6227
 10933  1C76  2C77               	nop2
 10934  1C77                     l3367:
 10935                           
 10936                           ;LCD8bits.c: 85:     Lcd_Cmd(48);
 10937  1C77  3030               	movlw	48
 10938  1C78  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10939  1C7D                     l3369:
 10940                           
 10941                           ;LCD8bits.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10942  1C7D  301D               	movlw	29
 10943  1C7E  00F5               	movwf	??_Lcd_Init+1
 10944  1C7F  3091               	movlw	145
 10945  1C80  00F4               	movwf	??_Lcd_Init
 10946  1C81                     u6237:
 10947  1C81  0BF4               	decfsz	??_Lcd_Init,f
 10948  1C82  2C81               	goto	u6237
 10949  1C83  0BF5               	decfsz	??_Lcd_Init+1,f
 10950  1C84  2C81               	goto	u6237
 10951                           
 10952                           ;LCD8bits.c: 87:     Lcd_Cmd(48);
 10953  1C85  3030               	movlw	48
 10954  1C86  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10955                           
 10956                           ;LCD8bits.c: 89:     Lcd_Cmd(56);
 10957  1C8B  3038               	movlw	56
 10958  1C8C  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10959                           
 10960                           ;LCD8bits.c: 90:     Lcd_Cmd(8);
 10961  1C91  3008               	movlw	8
 10962  1C92  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10963                           
 10964                           ;LCD8bits.c: 91:     Lcd_Cmd(1);
 10965  1C97  3001               	movlw	1
 10966  1C98  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10967                           
 10968                           ;LCD8bits.c: 92:     Lcd_Cmd(6);
 10969  1C9D  3006               	movlw	6
 10970  1C9E  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10971                           
 10972                           ;LCD8bits.c: 93:     Lcd_Cmd(12);
 10973  1CA3  300C               	movlw	12
 10974  1CA4  160A  158A  2296  160A  158A  	fcall	_Lcd_Cmd
 10975  1CA9                     l56:
 10976  1CA9  0008               	return
 10977  1CAA                     __end_of_Lcd_Init:
 10978                           
 10979                           	psect	text31
 10980  1A96                     __ptext31:	
 10981 ;; *************** function _Lcd_Cmd *****************
 10982 ;; Defined at:
 10983 ;;		line 55 in file "LCD8bits.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;  a               1    wreg     unsigned char 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  a               1    3[COMMON] unsigned char 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      void 
 10990 ;; Registers used:
 10991 ;;		wreg, status,2, status,0, pclath, cstack
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10997 ;;      Params:         0       0       0       0       0
 10998 ;;      Locals:         1       0       0       0       0
 10999 ;;      Temps:          2       0       0       0       0
 11000 ;;      Totals:         3       0       0       0       0
 11001 ;;Total ram usage:        3 bytes
 11002 ;; Hardware stack levels used: 1
 11003 ;; Hardware stack levels required when called: 1
 11004 ;; This function calls:
 11005 ;;		_Lcd_Port
 11006 ;; This function is called by:
 11007 ;;		_Lcd_Set_Cursor
 11008 ;;		_Lcd_Init
 11009 ;;		_Lcd_Clear
 11010 ;;		_Lcd_Shift_Right
 11011 ;;		_Lcd_Shift_Left
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           
 11016                           ;psect for function _Lcd_Cmd
 11017  1A96                     _Lcd_Cmd:
 11018                           
 11019                           ;incstack = 0
 11020                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11021                           ;Lcd_Cmd@a stored from wreg
 11022  1A96  00F3               	movwf	Lcd_Cmd@a
 11023  1A97                     l2829:
 11024                           
 11025                           ;LCD8bits.c: 56:     RC0 = 0;
 11026  1A97  1283               	bcf	3,5	;RP0=0, select bank0
 11027  1A98  1303               	bcf	3,6	;RP1=0, select bank0
 11028  1A99  1007               	bcf	7,0	;volatile
 11029  1A9A                     l2831:
 11030                           
 11031                           ;LCD8bits.c: 57:     Lcd_Port(a);
 11032  1A9A  0873               	movf	Lcd_Cmd@a,w
 11033  1A9B  160A  158A  237E  160A  158A  	fcall	_Lcd_Port
 11034  1AA0                     l2833:
 11035                           
 11036                           ;LCD8bits.c: 58:     RC1 = 1;
 11037  1AA0  1283               	bcf	3,5	;RP0=0, select bank0
 11038  1AA1  1303               	bcf	3,6	;RP1=0, select bank0
 11039  1AA2  1487               	bsf	7,1	;volatile
 11040  1AA3                     l2835:
 11041                           
 11042                           ;LCD8bits.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11043  1AA3  300B               	movlw	11
 11044  1AA4  00F2               	movwf	??_Lcd_Cmd+1
 11045  1AA5  3062               	movlw	98
 11046  1AA6  00F1               	movwf	??_Lcd_Cmd
 11047  1AA7                     u6247:
 11048  1AA7  0BF1               	decfsz	??_Lcd_Cmd,f
 11049  1AA8  2AA7               	goto	u6247
 11050  1AA9  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11051  1AAA  2AA7               	goto	u6247
 11052  1AAB  0000               	nop
 11053  1AAC                     l2837:
 11054                           
 11055                           ;LCD8bits.c: 60:     RC1 = 0;
 11056  1AAC  1283               	bcf	3,5	;RP0=0, select bank0
 11057  1AAD  1303               	bcf	3,6	;RP1=0, select bank0
 11058  1AAE  1087               	bcf	7,1	;volatile
 11059  1AAF                     l44:
 11060  1AAF  0008               	return
 11061  1AB0                     __end_of_Lcd_Cmd:
 11062                           
 11063                           	psect	text32
 11064  1B7E                     __ptext32:	
 11065 ;; *************** function _Lcd_Port *****************
 11066 ;; Defined at:
 11067 ;;		line 13 in file "LCD8bits.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;  a               1    wreg     unsigned char 
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;  a               1    0[COMMON] unsigned char 
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1    wreg      void 
 11074 ;; Registers used:
 11075 ;;		wreg
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11081 ;;      Params:         0       0       0       0       0
 11082 ;;      Locals:         1       0       0       0       0
 11083 ;;      Temps:          0       0       0       0       0
 11084 ;;      Totals:         1       0       0       0       0
 11085 ;;Total ram usage:        1 bytes
 11086 ;; Hardware stack levels used: 1
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_Lcd_Cmd
 11091 ;;		_Lcd_Init
 11092 ;;		_Lcd_Write_Char
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           
 11097                           ;psect for function _Lcd_Port
 11098  1B7E                     _Lcd_Port:
 11099                           
 11100                           ;incstack = 0
 11101                           ; Regs used in _Lcd_Port: [wreg]
 11102                           ;Lcd_Port@a stored from wreg
 11103  1B7E  00F0               	movwf	Lcd_Port@a
 11104  1B7F                     l2347:
 11105                           
 11106                           ;LCD8bits.c: 14:     if (a & 1)
 11107  1B7F  1C70               	btfss	Lcd_Port@a,0
 11108  1B80  2B82               	goto	u3121
 11109  1B81  2B83               	goto	u3120
 11110  1B82                     u3121:
 11111  1B82  2B87               	goto	l25
 11112  1B83                     u3120:
 11113  1B83                     l2349:
 11114                           
 11115                           ;LCD8bits.c: 15:         RD0 = 1;
 11116  1B83  1283               	bcf	3,5	;RP0=0, select bank0
 11117  1B84  1303               	bcf	3,6	;RP1=0, select bank0
 11118  1B85  1408               	bsf	8,0	;volatile
 11119  1B86  2B8A               	goto	l26
 11120  1B87                     l25:	
 11121                           ;LCD8bits.c: 16:     else
 11122                           
 11123                           
 11124                           ;LCD8bits.c: 17:         RD0 = 0;
 11125  1B87  1283               	bcf	3,5	;RP0=0, select bank0
 11126  1B88  1303               	bcf	3,6	;RP1=0, select bank0
 11127  1B89  1008               	bcf	8,0	;volatile
 11128  1B8A                     l26:
 11129                           
 11130                           ;LCD8bits.c: 19:     if (a & 2)
 11131  1B8A  1CF0               	btfss	Lcd_Port@a,1
 11132  1B8B  2B8D               	goto	u3131
 11133  1B8C  2B8E               	goto	u3130
 11134  1B8D                     u3131:
 11135  1B8D  2B90               	goto	l27
 11136  1B8E                     u3130:
 11137  1B8E                     l2351:
 11138                           
 11139                           ;LCD8bits.c: 20:         RD1 = 1;
 11140  1B8E  1488               	bsf	8,1	;volatile
 11141  1B8F  2B91               	goto	l28
 11142  1B90                     l27:	
 11143                           ;LCD8bits.c: 21:     else
 11144                           
 11145                           
 11146                           ;LCD8bits.c: 22:         RD1 = 0;
 11147  1B90  1088               	bcf	8,1	;volatile
 11148  1B91                     l28:
 11149                           
 11150                           ;LCD8bits.c: 24:     if (a & 4)
 11151  1B91  1D70               	btfss	Lcd_Port@a,2
 11152  1B92  2B94               	goto	u3141
 11153  1B93  2B95               	goto	u3140
 11154  1B94                     u3141:
 11155  1B94  2B97               	goto	l29
 11156  1B95                     u3140:
 11157  1B95                     l2353:
 11158                           
 11159                           ;LCD8bits.c: 25:         RD2 = 1;
 11160  1B95  1508               	bsf	8,2	;volatile
 11161  1B96  2B98               	goto	l30
 11162  1B97                     l29:	
 11163                           ;LCD8bits.c: 26:     else
 11164                           
 11165                           
 11166                           ;LCD8bits.c: 27:         RD2 = 0;
 11167  1B97  1108               	bcf	8,2	;volatile
 11168  1B98                     l30:
 11169                           
 11170                           ;LCD8bits.c: 29:     if (a & 8)
 11171  1B98  1DF0               	btfss	Lcd_Port@a,3
 11172  1B99  2B9B               	goto	u3151
 11173  1B9A  2B9C               	goto	u3150
 11174  1B9B                     u3151:
 11175  1B9B  2B9E               	goto	l31
 11176  1B9C                     u3150:
 11177  1B9C                     l2355:
 11178                           
 11179                           ;LCD8bits.c: 30:         RD3 = 1;
 11180  1B9C  1588               	bsf	8,3	;volatile
 11181  1B9D  2B9F               	goto	l32
 11182  1B9E                     l31:	
 11183                           ;LCD8bits.c: 31:     else
 11184                           
 11185                           
 11186                           ;LCD8bits.c: 32:         RD3 = 0;
 11187  1B9E  1188               	bcf	8,3	;volatile
 11188  1B9F                     l32:
 11189                           
 11190                           ;LCD8bits.c: 34:     if (a & 16)
 11191  1B9F  1E70               	btfss	Lcd_Port@a,4
 11192  1BA0  2BA2               	goto	u3161
 11193  1BA1  2BA3               	goto	u3160
 11194  1BA2                     u3161:
 11195  1BA2  2BA5               	goto	l33
 11196  1BA3                     u3160:
 11197  1BA3                     l2357:
 11198                           
 11199                           ;LCD8bits.c: 35:         RD4 = 1;
 11200  1BA3  1608               	bsf	8,4	;volatile
 11201  1BA4  2BA6               	goto	l34
 11202  1BA5                     l33:	
 11203                           ;LCD8bits.c: 36:     else
 11204                           
 11205                           
 11206                           ;LCD8bits.c: 37:         RD4 = 0;
 11207  1BA5  1208               	bcf	8,4	;volatile
 11208  1BA6                     l34:
 11209                           
 11210                           ;LCD8bits.c: 39:     if (a & 32)
 11211  1BA6  1EF0               	btfss	Lcd_Port@a,5
 11212  1BA7  2BA9               	goto	u3171
 11213  1BA8  2BAA               	goto	u3170
 11214  1BA9                     u3171:
 11215  1BA9  2BAC               	goto	l35
 11216  1BAA                     u3170:
 11217  1BAA                     l2359:
 11218                           
 11219                           ;LCD8bits.c: 40:         RD5 = 1;
 11220  1BAA  1688               	bsf	8,5	;volatile
 11221  1BAB  2BAD               	goto	l36
 11222  1BAC                     l35:	
 11223                           ;LCD8bits.c: 41:     else
 11224                           
 11225                           
 11226                           ;LCD8bits.c: 42:         RD5 = 0;
 11227  1BAC  1288               	bcf	8,5	;volatile
 11228  1BAD                     l36:
 11229                           
 11230                           ;LCD8bits.c: 44:     if (a & 64)
 11231  1BAD  1F70               	btfss	Lcd_Port@a,6
 11232  1BAE  2BB0               	goto	u3181
 11233  1BAF  2BB1               	goto	u3180
 11234  1BB0                     u3181:
 11235  1BB0  2BB3               	goto	l37
 11236  1BB1                     u3180:
 11237  1BB1                     l2361:
 11238                           
 11239                           ;LCD8bits.c: 45:         RD6 = 1;
 11240  1BB1  1708               	bsf	8,6	;volatile
 11241  1BB2  2BB4               	goto	l38
 11242  1BB3                     l37:	
 11243                           ;LCD8bits.c: 46:     else
 11244                           
 11245                           
 11246                           ;LCD8bits.c: 47:         RD6 = 0;
 11247  1BB3  1308               	bcf	8,6	;volatile
 11248  1BB4                     l38:
 11249                           
 11250                           ;LCD8bits.c: 49:     if (a & 128)
 11251  1BB4  1FF0               	btfss	Lcd_Port@a,7
 11252  1BB5  2BB7               	goto	u3191
 11253  1BB6  2BB8               	goto	u3190
 11254  1BB7                     u3191:
 11255  1BB7  2BBA               	goto	l39
 11256  1BB8                     u3190:
 11257  1BB8                     l2363:
 11258                           
 11259                           ;LCD8bits.c: 50:         RD7 = 1;
 11260  1BB8  1788               	bsf	8,7	;volatile
 11261  1BB9  2BBB               	goto	l41
 11262  1BBA                     l39:	
 11263                           ;LCD8bits.c: 51:     else
 11264                           
 11265                           
 11266                           ;LCD8bits.c: 52:         RD7 = 0;
 11267  1BBA  1388               	bcf	8,7	;volatile
 11268  1BBB                     l41:
 11269  1BBB  0008               	return
 11270  1BBC                     __end_of_Lcd_Port:
 11271  007E                     btemp	set	126	;btemp
 11272  007E                     wtemp0	set	126
 11273                           
 11274                           	psect	config
 11275                           
 11276                           ;Config register CONFIG1 @ 0x2007
 11277                           ;	Oscillator Selection bits
 11278                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11279                           ;	Watchdog Timer Enable bit
 11280                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11281                           ;	Power-up Timer Enable bit
 11282                           ;	PWRTE = OFF, PWRT disabled
 11283                           ;	RE3/MCLR pin function select bit
 11284                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11285                           ;	Code Protection bit
 11286                           ;	CP = OFF, Program memory code protection is disabled
 11287                           ;	Data Code Protection bit
 11288                           ;	CPD = OFF, Data memory code protection is disabled
 11289                           ;	Brown Out Reset Selection bits
 11290                           ;	BOREN = OFF, BOR disabled
 11291                           ;	Internal External Switchover bit
 11292                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11293                           ;	Fail-Safe Clock Monitor Enabled bit
 11294                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11295                           ;	Low Voltage Programming Enable bit
 11296                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11297                           ;	In-Circuit Debugger Mode bit
 11298                           ;	DEBUG = 0x1, unprogrammed default
 11299  2007                     	org	8199
 11300  2007  20D4               	dw	8404
 11301                           
 11302                           ;Config register CONFIG2 @ 0x2008
 11303                           ;	Brown-out Reset Selection bit
 11304                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11305                           ;	Flash Program Memory Self Write Enable bits
 11306                           ;	WRT = OFF, Write protection off
 11307  2008                     	org	8200
 11308  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    144
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     44      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> volt(BANK1[16]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _mapear->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _mapear->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   39164
                                             41 BANK1      3     3      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _adc_c
                          _adc_canal
                             _mapear
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   31530
                                              0 BANK1     41    30     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _mapear                                               9     5      4    6314
                                             56 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_canal                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_c                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _adc_c
   _adc_canal
   _mapear
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      46       7       87.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 01 21:49:56 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          _a 006E  
                        pc 0002               ___fldiv@sign 004F                         l30 1B98  
                       l31 1B9E                         l32 1B9F                         l41 1BBB  
                       l33 1BA5                         l25 1B87                         l34 1BA6  
                       l26 1B8A                         l35 1BAC                         l27 1B90  
                       l36 1BAD                         l28 1B91                         l44 1AAF  
                       l37 1BB3                         l29 1B97                         l53 1AD3  
                       l38 1BB4                         l39 1BBA                         l56 1CA9  
                       l65 084B                         l59 1A95                         _S1 00D0  
                       _S2 00CC               ___awdiv@sign 0021                         _s1 00D5  
                       _s2 00D4                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l150 1A7F                        l126 1C58  
                      l143 1A71                        l313 051D                        l306 04D9  
                      l340 1B1C                        l252 1577                        l334 07EE  
                      l512 1152                        l504 1D58                        l338 1B04  
                      l259 0C9E                        l524 1BD8                        l532 1F2C  
                      l508 118F                        l525 1BF4                        l533 1F45  
                      l541 1EA3                        l509 10F4                        l526 1C09  
                      l374 1DBE                        l278 00BF                        l711 1AF7  
                      l551 1EA3                        l519 1182                        l721 11EC  
                      l529 1EC0                        l537 1A65                        l723 136C  
                      l811 1FAD                        l707 17F3                        l555 10D1  
                      l491 1E27                        l708 17FF                        l548 1E8E  
                      l556 1043                        l644 004D                        l805 1F68  
                      l566 10C4                        l654 1B7D                        l743 1350  
                      l807 1FFF                        l671 1659                        l559 1094  
                      l745 1360                        l737 12DE                        l761 0FFF  
                      l665 15DB                        l825 1014                        l818 1FC9  
                      l690 1771                        l594 1CFF                        l819 1FD5  
                      l780 1B31                        l773 0FF3                        l669 1682  
                      l782 1B43                        l686 174D                        l678 17FF  
                      l767 0F6B                        l696 1793                        l699 17D1  
                      _RC0 0038                        _RC1 0039                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 0036               ___flmul@bexp 0037  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             ___fltol@exp1 005B                       l3001 114C                       l3003 1156  
                     l3011 1170                       l3101 1E28                       l3111 1E54  
                     l3103 1E35                       l3031 1B12                       l3023 1AF8  
                     l3201 11E4                       l3113 1E5C                       l3041 1D6C  
                     l3033 1B18                       l3025 1AFA                       l3017 1177  
                     l3009 115E                       l2401 1E19                       l3203 11F4  
                     l3211 120D                       l3131 1E83                       l3123 1E6A  
                     l3115 1E5E                       l3107 1E3E                       l3051 1DA6  
                     l3043 1D79                       l3027 1AFE                       l3019 1187  
                     l2403 1E1E                       l2411 1D01                       l3221 1235  
                     l3213 1212                       l3205 1200                       l2341 1B3A  
                     l2333 1B1E                       l3061 1BBC                       l2501 1589  
                     l3133 1E93                       l3117 1E62                       l3125 1E7C  
                     l3109 1E53                       l3053 1DA7                       l3045 1D7D  
                     l3037 1D59                       l3141 1CB7                       l3029 1B0B  
                     l2405 1E23                       l2421 1D15                       l2413 1D05  
                     l2351 1B8E                       l3231 125E                       l3223 123D  
                     l3207 1204                       l2343 1B3F                       l2335 1B20  
                     l3311 1F60                       l3063 1BD0                       l2511 159D  
                     l2503 158A                       l3135 1E98                       l3055 1DB0  
                     l3047 1D86                       l3039 1D69                       l3151 1CF1  
                     l3143 1CC4                       l2431 1D2D                       l2423 1D1B  
                     l2415 1D0A                       l2361 1BB1                       l2353 1B95  
                     l3241 127F                       l3233 1262                       l3225 1245  
                     l3217 121B                       l2337 1B27                       l3321 1F8B  
                     l3313 1F70                       l3305 1F47                       l3065 1BEC  
                     l3081 1EE0                       l3073 1EA4                       l2601 16AB  
                     l2521 15B3                       l2505 158F                       l2513 159F  
                     l3049 1D98                       l3057 1DB6                       l3145 1CC8  
                     l3153 1CF7                       l3137 1CAA                       l2441 1D4F  
                     l2433 1D37                       l2425 1D1E                       l2417 1D0C  
                     l2409 1D00                       l3401 0051                       l2363 1BB8  
                     l2355 1B9C                       l2347 1B7F                       l3251 12A1  
                     l3243 128D                       l3235 1263                       l3227 1247  
                     l3219 122D                       l3171 11A2                       l3163 1190  
                     l2339 1B2B                       l3331 1FBF                       l3323 1F92  
                     l3307 1F4C                       l3067 1C06                       l3083 1F04  
                     l3075 1EB8                       l2611 16C2                       l2603 16AF  
                     l2531 15C8                       l2523 15B9                       l2515 15A7  
                     l2507 1594                       l3147 1CDA                       l3139 1CB4  
                     l2451 0012                       l2371 1DCB                       l2443 1D54  
                     l2435 1D3D                       l2427 1D25                       l2419 1D10  
                     l3411 006A                       l3403 0056                       l2357 1BA3  
                     l2349 1B83                       l3253 12AA                       l3261 12BE  
                     l3229 124C                       l3237 126C                       l3245 1291  
                     l3173 11A7                       l3181 11B7                       l3165 1197  
                     l2701 0CBB                       l3341 1FF2                       l3333 1FC3  
                     l3325 1F96                       l3317 1F79                       l3309 1F50  
                     l3069 1C08                       l3085 1F08                       l3077 1ED4  
                     l3093 1A5B                       l2621 1725                       l2613 16C3  
                     l2605 16B3                       l2541 15E5                       l2533 15D0  
                     l2525 15BD                       l2517 15AC                       l2509 159C  
                     l3157 1AD4                       l3149 1CE8                       l2461 0035  
                     l2453 0015                       l2381 1DDC                       l2373 1DCD  
                     l2365 1DBF                       l2437 1D44                       l2429 1D29  
                     l3421 0093                       l3413 0076                       l3405 005C  
                     l2359 1BAA                       l3351 1AB6                       l3263 12C2  
                     l3255 12AE                       l3247 1297                       l3239 127E  
                     l3191 11CF                       l3183 11BF                       l3175 11AC  
                     l3167 119D                       l2711 0CD8                       l2703 0CC3  
                     l3343 1FF6                       l3335 1FCD                       l3327 1FA4  
                     l3319 1F7E                       l3087 1F42                       l3079 1EDC  
                     l3095 1A63                       l2631 175A                       l2623 172B  
                     l2615 16CC                       l2607 16BC                       l2551 15F9  
                     l2543 15E9                       l2535 15D1                       l2527 15BE  
                     l2519 15B2                       l3159 1AD8                       l2463 003B  
                     l2455 001C                       l2447 000A                       l2391 1DF4  
                     l2383 1DE2                       l2375 1DD1                       l2367 1DC2  
                     l2439 1D4A                       l3511 03F8                       l3503 036B  
                     l3423 00A6                       l3415 0077                       l3407 0063  
                     l3361 1C59                       l3353 1ABB                       l3281 1313  
                     l3273 12E3                       l3265 12C3                       l3257 12AF  
                     l3249 129F                       l3193 11D4                       l3185 11C4  
                     l3177 11B4                       l3169 11A1                       l2801 0F83  
                     l2721 0CEF                       l2713 0CDC                       l2705 0CC5  
                     l3345 1FF7                       l3337 1FD7                       l3329 1FB4  
                     l3089 1F44                       l3097 1A65                       l2641 1775  
                     l2625 1730                       l2609 16BE                       l2617 16D1  
                     l2561 160D                       l2553 15FD                       l2545 15ED  
                     l2529 15C3                       l2537 15D3                       l2465 003C  
                     l2457 0020                       l2449 000C                       l2481 1B58  
                     l2473 1B44                       l2393 1E05                       l2385 1DE5  
                     l2377 1DD6                       l2369 1DC6                       l3521 0431  
                     l3505 0374                       l3441 00F7                       l3433 00C1  
                     l3425 00AA                       l3417 007B                       l3409 0068  
                     l3363 1C5F                       l3355 1AC2                       l3371 080A  
                     l3291 1347                       l3275 12E8                       l3283 1319  
                     l3267 12C7                       l3259 12B8                       l3195 11D9  
                     l3187 11CA                       l3179 11B5                       l2811 0FBE  
                     l2803 0F87                       l2723 0CF1                       l2715 0CDD  
                     l2707 0CCD                       l3339 1FED                       l2643 1778  
                     l2635 1763                       l2619 16E7                       l2627 173F  
                     l2651 1785                       l2571 1621                       l2563 1611  
                     l2555 1601                       l2547 15F1                       l2539 15E1  
                     l2467 0043                       l2459 0024                       l2483 1B5C  
                     l2475 1B4A                       l2491 1B79                       l2395 1E0B  
                     l2387 1DEC                       l2379 1DDA                       l3611 074A  
                     l3603 0725                       l3531 048E                       l3523 043B  
                     l3507 03A9                       l3451 013F                       l3443 0105  
                     l3435 00E3                       l3419 007E                       l3427 00BB  
                     l3365 1C68                       l3357 1AC8                       l3349 1AB1  
                     l3373 080D                       l3293 134F                       l3285 1326  
                     l3277 12F6                       l3269 12DB                       l3197 11E1  
                     l3189 11CE                       l2821 0FEB                       l2813 0FCD  
                     l2805 0FA0                       l2741 0D62                       l2733 0D0C  
                     l2725 0CF9                       l2717 0CE2                       l2709 0CD2  
                     l2661 1798                       l2653 1786                       l2645 177A  
                     l2637 176C                       l2629 1755                       l2581 1666  
                     l2565 1615                       l2557 1605                       l2549 15F5  
                     l2573 1625                       l2469 0049                       l2485 1B66  
                     l2477 1B4D                       l2397 1E0C                       l2389 1DF0  
                     l3621 07C2                       l3613 0753                       l3605 072F  
                     l3541 04F4                       l3533 04CD                       l3525 0447  
                     l3517 03FA                       l3509 03F6                       l3461 0180  
                     l3453 0143                       l3445 0109                       l3437 00EF  
                     l3429 00BD                       l3701 0900                       l2831 1A9A  
                     l3367 1C77                       l3359 1ACD                       l3375 0829  
                     l3391 1A6F                       l3383 1A66                       l3295 1356  
                     l3287 1334                       l3279 12FA                       l3199 11E2  
                     l2823 0FEC                       l2815 0FD7                       l2807 0FA6  
                     l2751 0DDF                       l2743 0D8E                       l2735 0D1C  
                     l2727 0CFE                       l2719 0CE7                       l2671 17D6  
                     l2663 179D                       l2655 178A                       l2647 177F  
                     l2639 1770                       l2583 1668                       l2591 167A  
                     l2575 1626                       l2567 1619                       l2559 1609  
                     l2495 1578                       l2487 1B6C                       l2479 1B54  
                     l2911 100B                       l2399 1E13                       l2903 0C72  
                     l3615 0761                       l3607 073A                       l3551 052B  
                     l3543 0501                       l3535 04E1                       l3527 044E  
                     l3471 0207                       l3463 0193                       l3455 015C  
                     l3447 0122                       l3439 00F3                       l3711 0929  
                     l3703 0908                       l2833 1AA0                       l3369 1C7D  
                     l2841 1A84                       l3377 082F                       l3393 1A70  
                     l3385 1A6A                       l3297 135A                       l3289 1343  
                     l2825 0FF7                       l2817 0FD9                       l2809 0FB3  
                     l2761 0E5F                       l2753 0DFC                       l2745 0DAA  
                     l2737 0D29                       l2729 0D03                       l2681 17ED  
                     l2673 17DB                       l2665 17AB                       l2657 1790  
                     l2649 1781                       l2593 1686                       l2585 166C  
                     l2577 163D                       l2569 161D                       l2497 157F  
                     l2921 1028                       l2489 1B73                       l2913 1011  
                     l3617 0768                       l3625 07CA                       l3609 073B  
                     l3561 05EA                       l3553 0532                       l3545 0510  
                     l3537 04EA                       l3529 0453                       l3481 025B  
                     l3473 0220                       l3465 0197                       l3457 0167  
                     l3449 013B                       l3713 092C                       l3705 0911  
                     l2835 1AA3                       l2843 1A8A                       l3387 1A6B  
                     l3395 1A73                       l3299 135C                       l2819 0FE7  
                     l2771 0F17                       l2763 0E8C                       l2755 0E0C  
                     l2747 0DC6                       l2739 0D46                       l2691 0CA6  
                     l3379 1C0D                       l2683 17EF                       l2675 17E3  
                     l2667 17AF                       l2595 168B                       l2587 166D  
                     l2579 165D                       l2499 1585                       l2931 1044  
                     l2851 1376                       l2915 1013                       l2907 1004  
                     l3619 076D                       l3571 069F                       l3563 0629  
                     l3555 0536                       l3547 0517                       l3539 04EE  
                     l3491 0302                       l3483 02A2                       l3475 0229  
                     l3467 019D                       l3459 016D                       l3627 07D8  
                     l3707 0917                       l3715 092D                       l3651 0854  
                     l2837 1AAC                       l2829 1A97                       l2845 1A8D  
                     l3389 1A6C                       l3397 1A7E                       l2781 0F3C  
                     l2773 0F20                       l2765 0E9C                       l2757 0E29  
                     l2749 0DCF                       l2693 0CAC                       l2685 17FA  
                     l2677 17E8                       l2669 17CD                       l2589 1676  
                     l2941 106D                       l2933 104A                       l2925 1031  
                     l2909 1005                       l3581 06C5                       l3573 06A3  
                     l3565 0635                       l3557 0554                       l3549 0526  
                     l3493 031D                       l3485 02B1                       l3477 0244  
                     l3469 01BC                       l3629 07EA                       l3709 0922  
                     l3661 085C                       l3653 0855                       l3645 084C  
                     l2847 1A92                       l2839 1A81                       l2791 0F54  
                     l2783 0F45                       l2775 0F2E                       l2767 0EC9  
                     l2759 0E42                       l2695 0CB0                       l2687 17FE  
                     l2679 17E9                       l2599 1694                       l2951 1098  
                     l2943 107B                       l2935 1059                       l2919 1015  
                     l2863 1534                       l2871 0949                       l3591 06E6  
                     l3583 06C9                       l3575 06A9                       l3559 05AF  
                     l3567 0690                       l3495 0326                       l3487 02CC  
                     l3479 024C                       l3671 086B                       l3663 085F  
                     l3655 0856                       l3647 0850                       l2793 0F68  
                     l2777 0F37                       l2785 0F4B                       l2769 0EEF  
                     l2697 0CB1                       l2689 0C9F                       l2945 1085  
                     l2937 105B                       l2857 1483                       l2849 1370  
                     l2881 0A3F                       l2873 0950                       l3593 06EC  
                     l3585 06CD                       l3569 0698                       l3497 032E  
                     l3489 02F3                       l3577 06B0                       l3681 0874  
                     l3673 086C                       l3665 0860                       l3657 085A  
                     l3649 0851                       l2787 0F4F                       l2779 0F3B  
                     l2699 0CB6                       l2971 10D2                       l2947 1086  
                     l2939 1064                       l2859 1489                       l2891 0AFB  
                     l2867 0943                       l3587 06D8                       l3579 06C1  
                     l3499 034C                       l3747 00D5                       l3683 087A  
                     l3691 0890                       l3675 086D                       l3667 0861  
                     l3659 085B                       l2797 0F70                       l2789 0F50  
                     l2973 10DF                       l2965 10B9                       l2957 10A0  
                     l2949 108E                       l2885 0AC7                       l2869 0947  
                     l3589 06DE                       l3693 0898                       l3685 0885  
                     l3677 086E                       l3669 0866                       l2799 0F75  
                     l2991 1119                       l2983 10F5                       l2967 10C9  
                     l2959 10B2                       l2879 0A38                       l3599 06EE  
                     l3695 08A1                       l3687 088C                       l3679 0871  
                     l2993 1122                       l2985 10FD                       l2977 10E8  
                     l2897 0BE3                       l2889 0AF4                       l3697 08C1  
                     l3689 088F                       l2995 1134                       l2987 110E  
                     l2899 0BEA                       l3699 08DF                       l2997 1142  
                     l2989 1110                       l2999 1143                       STR_1 18AF  
                     STR_2 18A0                       u3110 1B3F                       u3111 1B3E  
                     u3120 1B83                       u4000 0CBB                       u3200 1DC6  
                     u3121 1B82                       u3105 1B32                       u4001 0CBA  
                     u3201 1DC5                       u3130 1B8E                       u4010 0CDC  
                     u3210 1DD1                       u3131 1B8D                       u4011 0CDB  
                     u3211 1DD0                       u3140 1B95                       u4020 0CE2  
                     u3220 1DE2                       u3300 1D05                       u3141 1B94  
                     u4021 0CE1                       u3221 1DE1                       u3301 1D04  
                     u3150 1B9C                       u4030 0CE7                       u3310 1D10  
                     u3151 1B9B                       u4111 0DEE                       u4031 0CE6  
                     u3311 1D0F                       u3160 1BA3                       u4112 0DF5  
                     u4040 0CFE                       u5000 1BEC                       u3240 1DF4  
                     u3320 1D1B                       u3161 1BA2                       u4201 0F09  
                     u4121 0E1B                       u4113 0DFC                       u4105 0DC8  
                     u4041 0CFD                       u5001 1BEB                       u3241 1DF3  
                     u3321 1D1A                       u3170 1BAA                       u3090 1B2B  
                     u4202 0F10                       u4122 0E22                       u4050 0D03  
                     u5010 1C06                       u3410 0024                       u3171 1BA9  
                     u3091 1B2A                       u4203 0F17                       u4123 0E29  
                     u4051 0D02                       u5011 1C05                       u3411 0023  
                     u3235 1DE6                       u3180 1BB1                       u4300 0F87  
                     u5020 1EB8                       u5100 1E35                       u3260 1E05  
                     u3340 1D2D                       u3181 1BB0                       u4301 0F86  
                     u4141 0E51                       u4061 0D54                       u5021 1EB7  
                     u5101 1E34                       u3405 0016                       u3261 1E04  
                     u3341 1D2C                       u3190 1BB8                       u4310 0F96  
                     u4230 0F3B                       u4142 0E58                       u4062 0D5B  
                     u5030 1ED4                       u5110 1E4C                       u3430 0035  
                     u3510 1B79                       u3350 1D37                       u3191 1BB7  
                     u4231 0F3A                       u4215 0F19                       u4151 0E7E  
                     u4143 0E5F                       u4135 0E2B                       u4071 0D70  
                     u4063 0D62                       u5015 1C02                       u5031 1ED3  
                     u3431 0034                       u3511 1B78                       u3255 1DF5  
                     u3351 1D36                       u3335 1D1F                       u4320 0FB3  
                     u4152 0E85                       u4072 0D77                       u5040 1EE0  
                     u3600 15E5                       u3520 1589                       u5120 1E62  
                     u5200 1CB4                       u3280 1E19                       u4321 0FB2  
                     u4225 0F30                       u4161 0EAB                       u4153 0E8C  
                     u4081 0D9C                       u4073 0D7E                       u5041 1EDF  
                     u3601 15E4                       u3521 1588                       u5121 1E61  
                     u5201 1CB3                       u3425 0025                       u3505 1B6D  
                     u3281 1E18                       u3265 1E01                       u4330 0FCD  
                     u4250 0F4F                       u4170 0ED5                       u4162 0EB2  
                     u4082 0DA3                       u3610 163D                       u3530 158F  
                     u5130 1E69                       u3450 0049                       u3290 1E1E  
                     u3370 1D4A                       u6010 0697                       u4331 0FCC  
                     u4315 0F91                       u4251 0F4E                       u4163 0EB9  
                     u4091 0DB8                       u4083 0DAA                       u5051 1EEF  
                     u3611 163C                       u3531 158E                       u5131 1E68  
                     u5115 1E47                       u3451 0048                       u3435 0031  
                     u3291 1E1D                       u3275 1E0D                       u3371 1D49  
                     u3355 1D33                       u6011 0696                       u5300 11D4  
                     u4340 0FEB                       u4260 0F54                       u4092 0DBF  
                     u5060 1F08                       u5052 1EF0                       u3620 1648  
                     u3540 1594                       u5220 1CC8                       u3460 1B4A  
                     u3380 1D4F                       u6100 074A                       u6020 06AF  
                     u5301 11D3                       u4341 0FEA                       u4325 0FAF  
                     u4261 0F53                       u4245 0F3E                       u4181 0EE1  
                     u4093 0DC6                       u5061 1F07                       u5053 1EF5  
                     u3701 169D                       u3621 1646                       u3541 1593  
                     u5221 1CC7                       u3445 003D                       u3461 1B49  
                     u4405 14A6                       u3381 1D4E                       u3365 1D3E  
                     u6101 0749                       u6021 06AE                       u6005 0638  
                     u5310 11D9                       u4270 0F68                       u4190 0EFD  
                     u4182 0EE8                       u5054 1EF6                       u3710 16AF  
                     u3702 16A4                       u3630 1649                       u3550 15B2  
                     u5150 1E7B                       u5230 1CDA                       u3390 0012  
                     u4350 1376                       u4430 0947                       u6110 0761  
                     u6030 06C9                       u5311 11D8                       u4335 0FC9  
                     u4271 0F67                       u4183 0EEF                       u4175 0ED0  
                     u5071 1F17                       u5055 1EFB                       u3711 16AE  
                     u3703 16AB                       u3615 1639                       u3551 15B1  
                     u5151 1E7A                       u5231 1CD9                       u5215 1CB9  
                     u3391 0011                       u4415 14F3                       u4351 1375  
                     u4431 0946                       u6111 0760                       u6031 06C8  
                     u5400 1297                       u5320 11F4                       u4280 0F6F  
                     u5080 1F42                       u5072 1F18                       u5056 1EFC  
                     u3800 175A                       u3720 16B3                       u3640 165D  
                     u3560 15BD                       u5160 1E82                       u3480 1B5C  
                     u4600 100B                       u4520 0AFB                       u4440 0950  
                     u6040 06DE                       u5401 1296                       u5321 11F3  
                     u4281 0F6E                       u5081 1F41                       u5073 1F1D  
                     u3801 1759                       u3721 16B2                       u3641 165C  
                     u3561 15BC                       u5161 1E81                       u5145 1E6B  
                     u3481 1B5B                       u4425 153F                       u4601 100A  
                     u4521 0AFA                       u4505 0A8E                       u4441 094F  
                     u6105 0746                       u6041 06DD                       u5410 129F  
                     u5330 1212                       u4290 0F75                       u5074 1F1E  
                     u5090 1A63                       u3730 16C2                       u3650 166C  
                     u3570 15C3                       u5250 1CF7                       u3490 1B66  
                     u4610 1011                       u6130 07D8                       u6050 06E6  
                     u5411 129E                       u5331 1211                       u4291 0F74  
                     u4195 0EF8                       u5075 1F23                       u5091 1A62  
                     u3731 16C1                       u3651 166B                       u3571 15C2  
                     u5251 1CF6                       u5235 1CD6                       u3491 1B65  
                     u3475 1B4E                       u4611 1010                       u4515 0ACA  
                     u6131 07D7                       u6051 06E5                       u5500 12FA  
                     u5340 124C                       u5260 11A1                       u5076 1F24  
                     u3900 17AF                       u3820 1770                       u3580 15C8  
                     u5180 1E93                       u4620 1028                       u6140 07EA  
                     u5501 12F9                       u5341 124B                       u5261 11A0  
                     u5085 1F3E                       u3901 17AE                       u3821 176F  
                     u3581 15C7                       u5181 1E92                       u5245 1CE9  
                     u4621 1027                       u4365 1393                       u6141 07E9  
                     u6125 077C                       u5510 1309                       u5430 12AE  
                     u5270 11A7                       u3910 17BE                       u3830 1775  
                     u3750 16E7                       u3670 1682                       u3590 15E1  
                     u5190 1E98                       u4710 10B1                       u4630 1042  
                     u4390 1489                       u6070 0724                       u6150 087A  
                     u6207 1A8F                       u5431 12AD                       u5271 11A6  
                     u3831 1774                       u3815 1765                       u3751 16E6  
                     u3671 1681                       u3591 15E0                       u5191 1E97  
                     u5175 1E85                       u4711 10B0                       u4631 1041  
                     u3495 1B62                       u4391 1488                       u4375 13ED  
                     u4535 0B1B                       u4455 0970                       u6071 0723  
                     u6151 0879                       u5520 1326                       u5280 11AC  
                     u3920 17CD                       u3840 177F                       u3680 1686  
                     u4800 1152                       u4720 10B8                       u4560 0BEA  
                     u4480 0A3F                       u6080 072F                       u6160 0917  
                     u6217 1C63                       u5521 1325                       u5425 12A3  
                     u5281 11AB                       u3921 17CC                       u3841 177E  
                     u3761 16FE                       u3753 16E3                       u3745 16C5  
                     u3681 1685                       u3665 166F                       u4801 1151  
                     u4721 10B7                       u4705 10A1                       u4385 1442  
                     u4561 0BE9                       u4545 0B57                       u4481 0A3E  
                     u4465 09AC                       u6081 072E                       u6065 06F1  
                     u6161 0916                       u5530 1343                       u5450 12C2  
                     u5370 1262                       u5290 11CE                       u5610 1FB3  
                     u3930 17D6                       u3850 1785                       u3770 1712  
                     u3762 16FF                       u3690 168B                       u4810 1156  
                     u4650 107B                       u6090 073A                       u6227 1C72  
                     u5531 1342                       u5515 1304                       u5451 12C1  
                     u5371 1261                       u5355 124E                       u5291 11CD  
                     u5611 1FB2                       u3931 17D5                       u3915 17B9  
                     u3851 1784                       u3771 1713                       u3763 1704  
                     u3691 168A                       u4811 1155                       u4651 107A  
                     u4555 0BA2                       u4475 09F7                       u6091 0739  
                     u6075 0720                       u5700 1AC8                       u5540 135A  
                     u5460 12C7                       u3940 17DB                       u3860 178A  
                     u3780 1730                       u3772 1718                       u3764 1705  
                     u4820 115D                       u4740 10C9                       u6237 1C81  
                     u5701 1AC7                       u5541 1359                       u5525 1322  
                     u5461 12C6                       u5445 12B1                       u5365 1257  
                     u5605 1FA5                       u3941 17DA                       u3861 1789  
                     u3781 172F                       u3773 1719                       u3765 170A  
                     u4821 115C                       u4741 10C8                       u4645 1066  
                     u5710 0817                       u5470 12DB                       u5390 127E  
                     u5630 1FC3                       u5550 1F4C                       u3950 17E8  
                     u3870 1790                       u3790 1755                       u3766 170B  
                     u4910 1B18                       u4750 10DF                       u4670 1094  
                     u6247 1AA7                       u5535 133F                       u5471 12DA  
                     u5391 127D                       u5631 1FC2                       u5551 1F4B  
                     u3951 17E7                       u3871 178F                       u3791 1754  
                     u4911 1B17                       u4751 10DE                       u4735 10BB  
                     u4671 1093                       u4655 1077                       u4575 0BFD  
                     u4495 0A52                       u6095 0736                       u5720 0839  
                     u5480 12E2                       u5640 1FC9                       u5560 1F50  
                     u3960 17ED                       u3880 1797                       u4920 1D69  
                     u4840 116F                       u4760 10F3                       u4680 1098  
                     u5800 015C                       u5481 12E1                       u5385 1265  
                     u5641 1FC8                       u5625 1FB8                       u5561 1F4F  
                     u3961 17EC                       u3881 1796                       u4921 1D68  
                     u4905 1B0C                       u4841 116E                       u4761 10F2  
                     u4681 1097                       u4665 1087                       u4585 0C39  
                     u5801 015B                       u6177 0889                       u5730 084B  
                     u5490 12E8                       u5650 1FCD                       u5570 1F70  
                     u3970 17FE                       u3890 179D                       u4850 1176  
                     u4690 109F                       u5810 0197                       u5731 084A  
                     u5491 12E7                       u5395 127A                       u5651 1FCC  
                     u5571 1F6F                       u3971 17FD                       u3891 179C  
                     u4851 1175                       u4835 115F                       u4691 109E  
                     u4595 0C75                       u5811 0196                       u6187 0926  
                     u3980 0CB0                       u5660 1FE2                       u4940 1D7D  
                     u4780 1134                       u5820 0220                       u5740 005C  
                     u3981 0CAF                       u4941 1D7C                       u4781 1133  
                     u5821 021F                       u5741 005B                       u6197 0935  
                     u3990 0CB6                       u5670 1FF2                       u5590 1F91  
                     u4870 1187                       u5910 0430                       u5830 0244  
                     u5750 0076                       u3991 0CB5                       u5671 1FF1  
                     u5591 1F90                       u4935 1D6E                       u4871 1186  
                     u4775 111B                       u5911 042F                       u5831 0243  
                     u5751 0075                       u5680 1FF6                       u4960 1D98  
                     u4880 1AFE                       u5920 043B                       u5840 025B  
                     u5760 00BA                       u5681 1FF5                       u5665 1FDD  
                     u5585 1F83                       u4961 1D97                       u4881 1AFD  
                     u4865 1179                       u4785 1130                       u5921 043A  
                     u5905 03FD                       u5841 025A                       u5761 00B9  
                     u5690 1AB6                       u5930 0447                       u5850 02B1  
                     u5770 00EF                       u5691 1AB5                       u4955 1D7F  
                     u4795 1145                       u5931 0446                       u5915 042C  
                     u5851 02B0                       u5771 00EE                       u4980 1DB6  
                     u5860 02CC                       u5780 00F3                       u4981 1DB5  
                     u4965 1D94                       u5861 02CB                       u5845 0257  
                     u5781 00F2                       u4990 1BD0                       u5950 04E0  
                     u5870 02F3                       u5790 0122                       u4991 1BCF  
                     u4975 1DA8                       u4895 1B05                       u5951 04DF  
                     u5871 02F2                       u5855 02AD                       u5791 0121  
                     u5960 0501                       u5880 0302                       u5961 0500  
                     u5945 0456                       u5881 0301                       u5970 0510  
                     u5890 031D                       u5971 050F                       u5891 031C  
                     u5980 052B                       u5981 052A                       u5965 04FD  
                     u5885 02FE                       u5975 050C                       u5995 05B2  
        ?_Lcd_Write_String 0073                       _main 084C                       btemp 007E  
                     _volt 00D6                       start 0000         ??_Lcd_Write_String 0075  
          ___fldiv@new_exp 0050               _sprintf$1070 00B0            __end_of_Lcd_Cmd 1AB0  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 136D            __end_of___awdiv 1E28            __end_of___flneg 1A66  
          __end_of___awmod 1D59            __end_of___flmul 1000            __end_of___flsub 1AF8  
          __end_of___fltol 1EA4            __end_of___lldiv 1DBF            ___awdiv@divisor 0077  
          __end_of___llmod 1D00            __end_of___lwdiv 004E            __end_of___lwmod 1B7E  
          ___awdiv@counter 0020                      _PORTA 0005                      _PORTC 0007  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISC 0087                      _TRISD 0088             adc_canal@canal 0071  
                    _adc_c 1A66            __end_of_dpowers 18A0                      _scale 0940  
          __end_of_isdigit 1015                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07EF           __end_of_Lcd_Init 1CAA  
         __end_of_Lcd_Port 1BBC            __initialization 07EF               __end_of_main 0940  
                   ??_main 00C9       __size_of__tdiv_to_l_ 00BD                     ?_adc_c 0070  
         ___llmod@dividend 0024                     ?_scale 003E                     _ADRESH 001E  
         ___awdiv@dividend 0079                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0016           __end_of___xxtofl 2000           __end_of__powers_ 1844  
                   ___flge 1EA4                     ___fleq 1BBC                  ??___fladd 005A  
                   ___wmul 1AF8                  ??___fldiv 0046                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0028                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _mapear 1C0A                     _fround 136D           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075                  ??_isdigit 0070  
       __size_of__Umul8_16 0027                  ??_sprintf 00AB            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070         __size_of_adc_canal 000E                 ___fltol@f1 0051  
           __pcstackCOMMON 0070              __end_of_adc_c 1A72              __end_of_scale 0C9F  
           _Lcd_Set_Cursor 1AB0                 __div_to_l_ 10D2                    ??_adc_c 0070  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0042            __div_to_l_@quot 0020  
               __pbssBANK0 006E                 __pbssBANK1 00CC              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1B44                 __pmaintext 084C  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_mapear 0058                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 1AD4          __end_of_adc_canal 1A80                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 1800  
           _Lcd_Write_Char 1A80                    _Lcd_Cmd 1A96          __end_of__npowers_ 1878  
               _scale$1069 004C            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___fldiv 1190                    ___awdiv 1DBF  
                  ___flneg 1A5B                    ___awmod 1D00                    ___flmul 0C9F  
                  ___flsub 1AD4                    ___fltol 1E28                    ___lldiv 1D59  
          __size_of___wmul 0025                    ___llmod 1CAA                    ___lwdiv 000A  
                  ___lwmod 1B44            __size_of_mapear 004F                  _ANSELbits 0188  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 004E  
                  __ptext2 0940                    __ptext3 1D00                    __ptext4 1DBF  
                  __ptext5 1003                    __ptext6 136D                    __ptext7 1B44  
                  __ptext8 000A                    __ptext9 1015                ?__div_to_l_ 0070  
                  _dpowers 1878                    _isdigit 1003                 ??___xxtofl 0074  
         ___awmod@dividend 0072                    _sprintf 004E                    clrloop0 0803  
   __end_of_Lcd_Write_Char 1A96       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  Lcd_Port@a 0070             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078                ___fladd@grs 0065  
            ___xxtofl@sign 0078                ___fldiv@grs 0052                ___fldiv@rem 004B  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
              ___flmul@grs 0032        __size_of__div_to_l_ 00BE             __end_of___flge 1F46  
           __end_of___fleq 1C0A             __end_of___wmul 1B1D           _Lcd_Write_String 080A  
           __end_of_mapear 1C59             __end_of_fround 1578        start_initialization 07EF  
      __end_of__tdiv_to_l_ 10D2          __size_of_Lcd_Init 0051          __size_of_Lcd_Port 003E  
          ___llmod@divisor 0020            ___llmod@counter 0029                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 1B1D  
                 ??_mapear 005C            Lcd_Write_Char@a 0072                   ??_fround 0042  
            sprintf@tmpval 00B9                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___fldiv@a 003E                  ___fldiv@b 0042  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                  _adc_canal 1A72          __size_of___xxtofl 00BA  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B5                sprintf@eexp 00B7  
              sprintf@fval 00C2                sprintf@prec 00C6           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 0052                   ?___fldiv 003E  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0020                  __npowers_ 1844  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 1800                __tdiv_to_l_ 1015               ??__div_to_l_ 0078  
                 ?_isdigit 0070                 ?_adc_canal 0070             __size_of_adc_c 000C  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 035F  
           ___wmul@product 0074                  clear_ram0 0802                   _PIE1bits 008C  
                 Lcd_Cmd@a 0073                   _PIR1bits 000C         __end_of__div_to_l_ 1190  
               _ADCON0bits 001F                __stringbase 180F                 _ADCON1bits 009F  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 1C59  
                 _Lcd_Port 1B7E   __end_of_Lcd_Write_String 084C           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___fladd 0288           __size_of___fldiv 01DD  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0056           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1067 004D                _fround$1068 0049  
       __end_of__stringtab 1810                _isdigit$878 0070                 sprintf@val 00BD  
                 ___xxtofl 1F46           __size_of_isdigit 0012                ??_adc_canal 0070  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   __ptext10 10D2  
                 __ptext11 1AF8                   __ptext20 1C0A                   __ptext12 1CAA  
                 __ptext21 1F46                   __ptext13 1D59                   __ptext30 1C59  
                 __ptext22 0C9F                   __ptext14 1E28                   __ptext31 1A96  
                 __ptext23 1B1D                   __ptext15 1AD4                   __ptext32 1B7E  
                 __ptext24 1190                   __ptext16 1578                   __ptext25 1A72  
                 __ptext17 1A5B                   __ptext26 1A66                   __ptext18 1EA4  
                 __ptext27 080A                   __ptext19 1BBC                   __ptext28 1A80  
                 __ptext29 1AB0                   __powers_ 1810           __size_of_sprintf 07A1  
            __size_of_main 00F4                 _INTCONbits 000B                   isdigit@c 0071  
                 scale@scl 0050                  sprintf@ap 00B4           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1           __tdiv_to_l_@quot 0020  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 180A  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070  
   __Umul8_16@multiplicand 0070                   sprintf@c 00C8                   sprintf@f 00A0  
         ___lldiv@quotient 0079            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 180A                   stringtab 1800             mapear@adresval 0060  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
