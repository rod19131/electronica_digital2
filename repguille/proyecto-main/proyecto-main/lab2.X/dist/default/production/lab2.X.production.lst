

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 01 16:55:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480                           
   481                           	psect	strings
   482  1000                     __pstrings:
   483  1000                     stringtab:
   484  1000                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  1000  1BFF               	btfsc	btemp+1,7
   488  1001  280A               	ljmp	stringcode
   489  1002  1383               	bcf	3,7
   490  1003  187F               	btfsc	btemp+1,0
   491  1004  1783               	bsf	3,7
   492  1005  0800               	movf	0,w
   493  1006  0A84               	incf	4,f
   494  1007  1903               	skipnz
   495  1008  0AFF               	incf	btemp+1,f
   496  1009  0008               	return
   497  100A                     stringcode:
   498  100A                     stringdir:
   499  100A  3010               	movlw	high stringdir
   500  100B  008A               	movwf	10
   501  100C  0804               	movf	4,w
   502  100D  0A84               	incf	4,f
   503  100E  0782               	addwf	2,f
   504  100F                     __stringbase:
   505  100F  3400               	retlw	0
   506  1010                     __end_of__stringtab:
   507  1010                     __powers_:
   508  1010  3400               	retlw	0
   509  1011  3400               	retlw	0
   510  1012  3480               	retlw	128
   511  1013  343F               	retlw	63
   512  1014  3400               	retlw	0
   513  1015  3400               	retlw	0
   514  1016  3420               	retlw	32
   515  1017  3441               	retlw	65
   516  1018  3400               	retlw	0
   517  1019  3400               	retlw	0
   518  101A  34C8               	retlw	200
   519  101B  3442               	retlw	66
   520  101C  3400               	retlw	0
   521  101D  3400               	retlw	0
   522  101E  347A               	retlw	122
   523  101F  3444               	retlw	68
   524  1020  3400               	retlw	0
   525  1021  3440               	retlw	64
   526  1022  341C               	retlw	28
   527  1023  3446               	retlw	70
   528  1024  3400               	retlw	0
   529  1025  3450               	retlw	80
   530  1026  34C3               	retlw	195
   531  1027  3447               	retlw	71
   532  1028  3400               	retlw	0
   533  1029  3424               	retlw	36
   534  102A  3474               	retlw	116
   535  102B  3449               	retlw	73
   536  102C  3480               	retlw	128
   537  102D  3496               	retlw	150
   538  102E  3418               	retlw	24
   539  102F  344B               	retlw	75
   540  1030  3420               	retlw	32
   541  1031  34BC               	retlw	188
   542  1032  34BE               	retlw	190
   543  1033  344C               	retlw	76
   544  1034  3428               	retlw	40
   545  1035  346B               	retlw	107
   546  1036  346E               	retlw	110
   547  1037  344E               	retlw	78
   548  1038  34F9               	retlw	249
   549  1039  3402               	retlw	2
   550  103A  3415               	retlw	21
   551  103B  3450               	retlw	80
   552  103C  34EC               	retlw	236
   553  103D  3478               	retlw	120
   554  103E  34AD               	retlw	173
   555  103F  3460               	retlw	96
   556  1040  34CA               	retlw	202
   557  1041  34F2               	retlw	242
   558  1042  3449               	retlw	73
   559  1043  3471               	retlw	113
   560  1044                     __end_of__powers_:
   561  1044                     __npowers_:
   562  1044  3400               	retlw	0
   563  1045  3400               	retlw	0
   564  1046  3480               	retlw	128
   565  1047  343F               	retlw	63
   566  1048  34CD               	retlw	205
   567  1049  34CC               	retlw	204
   568  104A  34CC               	retlw	204
   569  104B  343D               	retlw	61
   570  104C  340A               	retlw	10
   571  104D  34D7               	retlw	215
   572  104E  3423               	retlw	35
   573  104F  343C               	retlw	60
   574  1050  346F               	retlw	111
   575  1051  3412               	retlw	18
   576  1052  3483               	retlw	131
   577  1053  343A               	retlw	58
   578  1054  3417               	retlw	23
   579  1055  34B7               	retlw	183
   580  1056  34D1               	retlw	209
   581  1057  3438               	retlw	56
   582  1058  34AC               	retlw	172
   583  1059  34C5               	retlw	197
   584  105A  3427               	retlw	39
   585  105B  3437               	retlw	55
   586  105C  34BD               	retlw	189
   587  105D  3437               	retlw	55
   588  105E  3486               	retlw	134
   589  105F  3435               	retlw	53
   590  1060  3495               	retlw	149
   591  1061  34BF               	retlw	191
   592  1062  34D6               	retlw	214
   593  1063  3433               	retlw	51
   594  1064  3477               	retlw	119
   595  1065  34CC               	retlw	204
   596  1066  342B               	retlw	43
   597  1067  3432               	retlw	50
   598  1068  345F               	retlw	95
   599  1069  3470               	retlw	112
   600  106A  3489               	retlw	137
   601  106B  3430               	retlw	48
   602  106C  34FF               	retlw	255
   603  106D  34E6               	retlw	230
   604  106E  34DB               	retlw	219
   605  106F  342E               	retlw	46
   606  1070  3408               	retlw	8
   607  1071  34E5               	retlw	229
   608  1072  343C               	retlw	60
   609  1073  341E               	retlw	30
   610  1074  3460               	retlw	96
   611  1075  3442               	retlw	66
   612  1076  34A2               	retlw	162
   613  1077  340D               	retlw	13
   614  1078                     __end_of__npowers_:
   615  1078                     _dpowers:
   616  1078  3401               	retlw	1
   617  1079  3400               	retlw	0
   618  107A  3400               	retlw	0
   619  107B  3400               	retlw	0
   620  107C  340A               	retlw	10
   621  107D  3400               	retlw	0
   622  107E  3400               	retlw	0
   623  107F  3400               	retlw	0
   624  1080  3464               	retlw	100
   625  1081  3400               	retlw	0
   626  1082  3400               	retlw	0
   627  1083  3400               	retlw	0
   628  1084  34E8               	retlw	232
   629  1085  3403               	retlw	3
   630  1086  3400               	retlw	0
   631  1087  3400               	retlw	0
   632  1088  3410               	retlw	16
   633  1089  3427               	retlw	39
   634  108A  3400               	retlw	0
   635  108B  3400               	retlw	0
   636  108C  34A0               	retlw	160
   637  108D  3486               	retlw	134
   638  108E  3401               	retlw	1
   639  108F  3400               	retlw	0
   640  1090  3440               	retlw	64
   641  1091  3442               	retlw	66
   642  1092  340F               	retlw	15
   643  1093  3400               	retlw	0
   644  1094  3480               	retlw	128
   645  1095  3496               	retlw	150
   646  1096  3498               	retlw	152
   647  1097  3400               	retlw	0
   648  1098  3400               	retlw	0
   649  1099  34E1               	retlw	225
   650  109A  34F5               	retlw	245
   651  109B  3405               	retlw	5
   652  109C  3400               	retlw	0
   653  109D  34CA               	retlw	202
   654  109E  349A               	retlw	154
   655  109F  343B               	retlw	59
   656  10A0                     __end_of_dpowers:
   657  001A                     _RCREG	set	26
   658  0018                     _RCSTAbits	set	24
   659  0019                     _TXREG	set	25
   660  000C                     _PIR1bits	set	12
   661  000B                     _INTCONbits	set	11
   662  0007                     _PORTC	set	7
   663  0009                     _PORTE	set	9
   664  0008                     _PORTD	set	8
   665  001E                     _ADRESH	set	30
   666  001F                     _ADCON0bits	set	31
   667  0064                     _TXIF	set	100
   668  0065                     _RCIF	set	101
   669  0049                     _RE1	set	73
   670  0048                     _RE0	set	72
   671  0047                     _RD7	set	71
   672  0046                     _RD6	set	70
   673  0045                     _RD5	set	69
   674  0044                     _RD4	set	68
   675  0043                     _RD3	set	67
   676  0042                     _RD2	set	66
   677  0041                     _RD1	set	65
   678  0040                     _RD0	set	64
   679  0098                     _TXSTAbits	set	152
   680  0099                     _SPBRG	set	153
   681  008C                     _PIE1bits	set	140
   682  0089                     _TRISE	set	137
   683  0088                     _TRISD	set	136
   684  0087                     _TRISCbits	set	135
   685  0085                     _TRISA	set	133
   686  0086                     _TRISBbits	set	134
   687  0089                     _TRISEbits	set	137
   688  0085                     _TRISAbits	set	133
   689  009F                     _ADCON1	set	159
   690  0187                     _BAUDCTLbits	set	391
   691  0189                     _ANSELH	set	393
   692  0188                     _ANSEL	set	392
   693  0189                     _ANSELHbits	set	393
   694  0188                     _ANSELbits	set	392
   695  10A0                     STR_1:
   696  10A0  3456               	retlw	86	;'V'
   697  10A1  3431               	retlw	49	;'1'
   698  10A2  3420               	retlw	32	;' '
   699  10A3  3420               	retlw	32	;' '
   700  10A4  3420               	retlw	32	;' '
   701  10A5  3456               	retlw	86	;'V'
   702  10A6  3432               	retlw	50	;'2'
   703  10A7  3420               	retlw	32	;' '
   704  10A8  3420               	retlw	32	;' '
   705  10A9  3420               	retlw	32	;' '
   706  10AA  3443               	retlw	67	;'C'
   707  10AB  344F               	retlw	79	;'O'
   708  10AC  344E               	retlw	78	;'N'
   709  10AD  3454               	retlw	84	;'T'
   710  10AE  3400               	retlw	0
   711  10AF                     STR_2:
   712  10AF  3425               	retlw	37	;'%'
   713  10B0  342E               	retlw	46	;'.'
   714  10B1  3432               	retlw	50	;'2'
   715  10B2  3466               	retlw	102	;'f'
   716  10B3  3420               	retlw	32	;' '
   717  10B4  3420               	retlw	32	;' '
   718  10B5  3425               	retlw	37	;'%'
   719  10B6  342E               	retlw	46	;'.'
   720  10B7  3432               	retlw	50	;'2'
   721  10B8  3466               	retlw	102	;'f'
   722  10B9  3420               	retlw	32	;' '
   723  10BA  3420               	retlw	32	;' '
   724  10BB  3425               	retlw	37	;'%'
   725  10BC  3464               	retlw	100	;'d'
   726  10BD  3400               	retlw	0
   727                           
   728                           	psect	cinit
   729  000F                     start_initialization:	
   730                           ; #config settings
   731                           
   732  000F                     __initialization:
   733                           
   734                           ; Clear objects allocated to COMMON
   735  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   736                           
   737                           ; Clear objects allocated to BANK1
   738  0010  1383               	bcf	3,7	;select IRP bank0
   739  0011  30D1               	movlw	low __pbssBANK1
   740  0012  0084               	movwf	4
   741  0013  30F0               	movlw	low (__pbssBANK1+31)
   742  0014  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   743  0019                     end_of_initialization:	
   744                           ;End of C runtime variable initialization code
   745                           
   746  0019                     __end_of__initialization:
   747  0019  0183               	clrf	3
   748  001A  160A  118A  2982   	ljmp	_main	;jump to C main() function
   749                           
   750                           	psect	bssCOMMON
   751  007A                     __pbssCOMMON:
   752  007A                     _lectura:
   753  007A                     	ds	1
   754                           
   755                           	psect	bssBANK1
   756  00D1                     __pbssBANK1:
   757  00D1                     _num2:
   758  00D1                     	ds	4
   759  00D5                     _num1:
   760  00D5                     	ds	4
   761  00D9                     _num:
   762  00D9                     	ds	1
   763  00DA                     _adc1:
   764  00DA                     	ds	1
   765  00DB                     _adc0:
   766  00DB                     	ds	1
   767  00DC                     _BUFFER:
   768  00DC                     	ds	20
   769                           
   770                           	psect	clrtext
   771  07F8                     clear_ram0:	
   772                           ;	Called with FSR containing the base address, and
   773                           ;	W with the last address+1
   774                           
   775  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   776  07F9                     clrloop0:
   777  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   778  07FA  0A84               	incf	4,f	;increment pointer
   779  07FB  0604               	xorwf	4,w	;XOR with final address
   780  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   781  07FD  3400               	retlw	0	;all done for this memory range, return
   782  07FE  0604               	xorwf	4,w	;XOR again to restore value
   783  07FF  2FF9               	goto	clrloop0	;do the next byte
   784                           
   785                           	psect	cstackBANK1
   786  00A0                     __pcstackBANK1:
   787  00A0                     ?___flsub:
   788  00A0                     ___flsub@a:	
   789                           ; 4 bytes @ 0x0
   790                           
   791                           
   792                           ; 4 bytes @ 0x0
   793  00A0                     	ds	4
   794  00A4                     ___flsub@b:
   795                           
   796                           ; 4 bytes @ 0x4
   797  00A4                     	ds	4
   798  00A8                     ?_sprintf:
   799  00A8                     sprintf@f:	
   800                           ; 2 bytes @ 0x8
   801                           
   802                           
   803                           ; 1 bytes @ 0x8
   804  00A8                     	ds	11
   805  00B3                     ??_sprintf:
   806                           
   807                           ; 1 bytes @ 0x13
   808  00B3                     	ds	5
   809  00B8                     _sprintf$1270:
   810                           
   811                           ; 4 bytes @ 0x18
   812  00B8                     	ds	4
   813  00BC                     sprintf@ap:
   814                           
   815                           ; 1 bytes @ 0x1C
   816  00BC                     	ds	1
   817  00BD                     sprintf@flag:
   818                           
   819                           ; 2 bytes @ 0x1D
   820  00BD                     	ds	2
   821  00BF                     sprintf@eexp:
   822                           
   823                           ; 2 bytes @ 0x1F
   824  00BF                     	ds	2
   825  00C1                     sprintf@tmpval:
   826                           
   827                           ; 4 bytes @ 0x21
   828  00C1                     	ds	4
   829  00C5                     sprintf@val:
   830                           
   831                           ; 4 bytes @ 0x25
   832  00C5                     	ds	4
   833  00C9                     sprintf@sp:
   834                           
   835                           ; 1 bytes @ 0x29
   836  00C9                     	ds	1
   837  00CA                     sprintf@fval:
   838                           
   839                           ; 4 bytes @ 0x2A
   840  00CA                     	ds	4
   841  00CE                     sprintf@prec:
   842                           
   843                           ; 2 bytes @ 0x2E
   844  00CE                     	ds	2
   845  00D0                     sprintf@c:
   846                           
   847                           ; 1 bytes @ 0x30
   848  00D0                     	ds	1
   849                           
   850                           	psect	cstackCOMMON
   851  0070                     __pcstackCOMMON:
   852  0070                     ?_isdigit:
   853  0070                     ?_LEER:	
   854                           ; 1 bit 
   855                           
   856  0070                     ??_LEER:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_config:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_baud:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_config_tx:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_config_rx:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_ESCString:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_ESC:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_pin:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_CMDs:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_limpiar:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_configLCD:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_ESCchar:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_configADC:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_isr:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ??_isr:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_main:	
   902                           ; 1 bytes @ 0x0
   903                           
   904                           
   905                           ; 1 bytes @ 0x0
   906  0070                     	ds	3
   907  0073                     ??_config:
   908  0073                     ??_baud:	
   909                           ; 1 bytes @ 0x3
   910                           
   911  0073                     ??_config_tx:	
   912                           ; 1 bytes @ 0x3
   913                           
   914  0073                     ??_config_rx:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     ??_ESC:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     ??_isdigit:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0073                     ??__tdiv_to_l_:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0073                     ??__div_to_l_:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0073                     ??_pin:	
   930                           ; 1 bytes @ 0x3
   931                           
   932  0073                     ??_configADC:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0073                     ??___lldiv:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0073                     ??___fleq:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0073                     ??___flge:	
   942                           ; 1 bytes @ 0x3
   943                           
   944  0073                     ?__Umul8_16:	
   945                           ; 1 bytes @ 0x3
   946                           
   947  0073                     ?___wmul:	
   948                           ; 2 bytes @ 0x3
   949                           
   950  0073                     ?___awmod:	
   951                           ; 2 bytes @ 0x3
   952                           
   953  0073                     ?___lwmod:	
   954                           ; 2 bytes @ 0x3
   955                           
   956  0073                     ?___flneg:	
   957                           ; 2 bytes @ 0x3
   958                           
   959  0073                     ?___xxtofl:	
   960                           ; 4 bytes @ 0x3
   961                           
   962  0073                     pin@a:	
   963                           ; 4 bytes @ 0x3
   964                           
   965  0073                     ESC@a:	
   966                           ; 1 bytes @ 0x3
   967                           
   968  0073                     __Umul8_16@multiplicand:	
   969                           ; 1 bytes @ 0x3
   970                           
   971  0073                     _isdigit$1079:	
   972                           ; 1 bytes @ 0x3
   973                           
   974  0073                     ___wmul@multiplier:	
   975                           ; 1 bytes @ 0x3
   976                           
   977  0073                     ___awmod@divisor:	
   978                           ; 2 bytes @ 0x3
   979                           
   980  0073                     ___lwmod@divisor:	
   981                           ; 2 bytes @ 0x3
   982                           
   983  0073                     ___flneg@f1:	
   984                           ; 2 bytes @ 0x3
   985                           
   986  0073                     ___xxtofl@val:	
   987                           ; 4 bytes @ 0x3
   988                           
   989                           
   990                           ; 4 bytes @ 0x3
   991  0073                     	ds	1
   992  0074                     ??_ESCString:
   993  0074                     ??_CMDs:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  0074                     ??_ESCchar:	
   997                           ; 1 bytes @ 0x4
   998                           
   999  0074                     isdigit@c:	
  1000                           ; 1 bytes @ 0x4
  1001                           
  1002  0074                     ___lldiv@quotient:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  0074                     __div_to_l_@quot:	
  1006                           ; 4 bytes @ 0x4
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0x4
  1010  0074                     	ds	1
  1011  0075                     ??__Umul8_16:
  1012  0075                     ESCchar@a:	
  1013                           ; 1 bytes @ 0x5
  1014                           
  1015  0075                     configADC@ch:	
  1016                           ; 1 bytes @ 0x5
  1017                           
  1018  0075                     ESCString@a:	
  1019                           ; 1 bytes @ 0x5
  1020                           
  1021  0075                     ___wmul@multiplicand:	
  1022                           ; 1 bytes @ 0x5
  1023                           
  1024  0075                     ___awmod@dividend:	
  1025                           ; 2 bytes @ 0x5
  1026                           
  1027  0075                     ___lwmod@dividend:	
  1028                           ; 2 bytes @ 0x5
  1029                           
  1030                           
  1031                           ; 2 bytes @ 0x5
  1032  0075                     	ds	1
  1033  0076                     ?_ESCLCD:
  1034  0076                     CMDs@a:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037  0076                     ESCString@i:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  0076                     ESCLCD@a:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x6
  1045  0076                     	ds	1
  1046  0077                     ??_limpiar:
  1047  0077                     ?_cursor:	
  1048                           ; 1 bytes @ 0x7
  1049                           
  1050  0077                     ??_configLCD:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053  0077                     ??___wmul:	
  1054                           ; 1 bytes @ 0x7
  1055                           
  1056  0077                     ??___awmod:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  0077                     ??___flneg:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062  0077                     ??___lwmod:	
  1063                           ; 1 bytes @ 0x7
  1064                           
  1065  0077                     cursor@b:	
  1066                           ; 1 bytes @ 0x7
  1067                           
  1068  0077                     ___wmul@product:	
  1069                           ; 1 bytes @ 0x7
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x7
  1073  0077                     	ds	1
  1074  0078                     ??_cursor:
  1075  0078                     ___lldiv@counter:	
  1076                           ; 1 bytes @ 0x8
  1077                           
  1078  0078                     ___awmod@counter:	
  1079                           ; 1 bytes @ 0x8
  1080                           
  1081  0078                     __div_to_l_@cntr:	
  1082                           ; 1 bytes @ 0x8
  1083                           
  1084  0078                     ___lwmod@counter:	
  1085                           ; 1 bytes @ 0x8
  1086                           
  1087  0078                     ESCLCD@i:	
  1088                           ; 1 bytes @ 0x8
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x8
  1092  0078                     	ds	1
  1093  0079                     ??___llmod:
  1094  0079                     ??___lwdiv:	
  1095                           ; 1 bytes @ 0x9
  1096                           
  1097  0079                     ___awmod@sign:	
  1098                           ; 1 bytes @ 0x9
  1099                           
  1100  0079                     __div_to_l_@exp1:	
  1101                           ; 1 bytes @ 0x9
  1102                           
  1103                           
  1104                           ; 1 bytes @ 0x9
  1105  0079                     	ds	1
  1106  007A                     ??___flsub:
  1107                           
  1108                           	psect	cstackBANK0
  1109  0020                     __pcstackBANK0:	
  1110                           ; 1 bytes @ 0xA
  1111                           
  1112  0020                     ?___fleq:
  1113  0020                     ?___flge:	
  1114                           ; 1 bit 
  1115                           
  1116  0020                     ??_ESCLCD:	
  1117                           ; 1 bit 
  1118                           
  1119  0020                     ??___xxtofl:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0020                     ?___awdiv:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0020                     ?___lwdiv:	
  1126                           ; 2 bytes @ 0x0
  1127                           
  1128  0020                     ?__tdiv_to_l_:	
  1129                           ; 2 bytes @ 0x0
  1130                           
  1131  0020                     ?__div_to_l_:	
  1132                           ; 4 bytes @ 0x0
  1133                           
  1134  0020                     ?___lldiv:	
  1135                           ; 4 bytes @ 0x0
  1136                           
  1137  0020                     cursor@a:	
  1138                           ; 4 bytes @ 0x0
  1139                           
  1140  0020                     ___awdiv@divisor:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0020                     ___lwdiv@divisor:	
  1144                           ; 2 bytes @ 0x0
  1145                           
  1146  0020                     __Umul8_16@product:	
  1147                           ; 2 bytes @ 0x0
  1148                           
  1149  0020                     ___lldiv@divisor:	
  1150                           ; 2 bytes @ 0x0
  1151                           
  1152  0020                     __div_to_l_@f1:	
  1153                           ; 4 bytes @ 0x0
  1154                           
  1155  0020                     ___fleq@ff1:	
  1156                           ; 4 bytes @ 0x0
  1157                           
  1158  0020                     ___flge@ff1:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161  0020                     __tdiv_to_l_@f1:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x0
  1166  0020                     	ds	1
  1167  0021                     cursor@x:
  1168                           
  1169                           ; 1 bytes @ 0x1
  1170  0021                     	ds	1
  1171  0022                     ___awdiv@dividend:
  1172  0022                     ___lwdiv@dividend:	
  1173                           ; 2 bytes @ 0x2
  1174                           
  1175  0022                     __Umul8_16@word_mpld:	
  1176                           ; 2 bytes @ 0x2
  1177                           
  1178                           
  1179                           ; 2 bytes @ 0x2
  1180  0022                     	ds	2
  1181  0024                     ??___awdiv:
  1182  0024                     __Umul8_16@multiplier:	
  1183                           ; 1 bytes @ 0x4
  1184                           
  1185  0024                     ___xxtofl@sign:	
  1186                           ; 1 bytes @ 0x4
  1187                           
  1188  0024                     ___lwdiv@quotient:	
  1189                           ; 1 bytes @ 0x4
  1190                           
  1191  0024                     ___lldiv@dividend:	
  1192                           ; 2 bytes @ 0x4
  1193                           
  1194  0024                     __div_to_l_@f2:	
  1195                           ; 4 bytes @ 0x4
  1196                           
  1197  0024                     ___fleq@ff2:	
  1198                           ; 4 bytes @ 0x4
  1199                           
  1200  0024                     ___flge@ff2:	
  1201                           ; 4 bytes @ 0x4
  1202                           
  1203  0024                     __tdiv_to_l_@f2:	
  1204                           ; 4 bytes @ 0x4
  1205                           
  1206                           
  1207                           ; 4 bytes @ 0x4
  1208  0024                     	ds	1
  1209  0025                     ___awdiv@counter:
  1210  0025                     ___xxtofl@exp:	
  1211                           ; 1 bytes @ 0x5
  1212                           
  1213                           
  1214                           ; 1 bytes @ 0x5
  1215  0025                     	ds	1
  1216  0026                     ___awdiv@sign:
  1217  0026                     ___lwdiv@counter:	
  1218                           ; 1 bytes @ 0x6
  1219                           
  1220  0026                     ___xxtofl@arg:	
  1221                           ; 1 bytes @ 0x6
  1222                           
  1223                           
  1224                           ; 4 bytes @ 0x6
  1225  0026                     	ds	1
  1226  0027                     ___awdiv@quotient:
  1227                           
  1228                           ; 2 bytes @ 0x7
  1229  0027                     	ds	1
  1230  0028                     ?___llmod:
  1231  0028                     __tdiv_to_l_@quot:	
  1232                           ; 4 bytes @ 0x8
  1233                           
  1234  0028                     ___llmod@divisor:	
  1235                           ; 4 bytes @ 0x8
  1236                           
  1237                           
  1238                           ; 4 bytes @ 0x8
  1239  0028                     	ds	2
  1240  002A                     ?___flmul:
  1241  002A                     ___flmul@b:	
  1242                           ; 4 bytes @ 0xA
  1243                           
  1244                           
  1245                           ; 4 bytes @ 0xA
  1246  002A                     	ds	2
  1247  002C                     __tdiv_to_l_@cntr:
  1248  002C                     ___llmod@dividend:	
  1249                           ; 1 bytes @ 0xC
  1250                           
  1251                           
  1252                           ; 4 bytes @ 0xC
  1253  002C                     	ds	1
  1254  002D                     __tdiv_to_l_@exp1:
  1255                           
  1256                           ; 1 bytes @ 0xD
  1257  002D                     	ds	1
  1258  002E                     ___flmul@a:
  1259                           
  1260                           ; 4 bytes @ 0xE
  1261  002E                     	ds	2
  1262  0030                     ___llmod@counter:
  1263                           
  1264                           ; 1 bytes @ 0x10
  1265  0030                     	ds	2
  1266  0032                     ??___flmul:
  1267                           
  1268                           ; 1 bytes @ 0x12
  1269  0032                     	ds	5
  1270  0037                     ___flmul@sign:
  1271                           
  1272                           ; 1 bytes @ 0x17
  1273  0037                     	ds	1
  1274  0038                     ___flmul@grs:
  1275                           
  1276                           ; 4 bytes @ 0x18
  1277  0038                     	ds	4
  1278  003C                     ___flmul@aexp:
  1279                           
  1280                           ; 1 bytes @ 0x1C
  1281  003C                     	ds	1
  1282  003D                     ___flmul@bexp:
  1283                           
  1284                           ; 1 bytes @ 0x1D
  1285  003D                     	ds	1
  1286  003E                     ___flmul@prod:
  1287                           
  1288                           ; 4 bytes @ 0x1E
  1289  003E                     	ds	4
  1290  0042                     ___flmul@temp:
  1291                           
  1292                           ; 2 bytes @ 0x22
  1293  0042                     	ds	2
  1294  0044                     ?_fround:
  1295  0044                     ?_scale:	
  1296                           ; 4 bytes @ 0x24
  1297                           
  1298                           
  1299                           ; 4 bytes @ 0x24
  1300  0044                     	ds	4
  1301  0048                     ??_fround:
  1302  0048                     ??_scale:	
  1303                           ; 1 bytes @ 0x28
  1304                           
  1305                           
  1306                           ; 1 bytes @ 0x28
  1307  0048                     	ds	7
  1308  004F                     _fround$1268:
  1309                           
  1310                           ; 4 bytes @ 0x2F
  1311  004F                     	ds	3
  1312  0052                     _scale$1269:
  1313                           
  1314                           ; 4 bytes @ 0x32
  1315  0052                     	ds	1
  1316  0053                     _fround$1267:
  1317                           
  1318                           ; 4 bytes @ 0x33
  1319  0053                     	ds	3
  1320  0056                     scale@scl:
  1321                           
  1322                           ; 1 bytes @ 0x36
  1323  0056                     	ds	1
  1324  0057                     ?___fltol:
  1325  0057                     fround@prec:	
  1326                           ; 4 bytes @ 0x37
  1327                           
  1328  0057                     ___fltol@f1:	
  1329                           ; 1 bytes @ 0x37
  1330                           
  1331                           
  1332                           ; 4 bytes @ 0x37
  1333  0057                     	ds	1
  1334  0058                     ?___fladd:
  1335  0058                     ___fladd@b:	
  1336                           ; 4 bytes @ 0x38
  1337                           
  1338                           
  1339                           ; 4 bytes @ 0x38
  1340  0058                     	ds	3
  1341  005B                     ??___fltol:
  1342                           
  1343                           ; 1 bytes @ 0x3B
  1344  005B                     	ds	1
  1345  005C                     ___fladd@a:
  1346                           
  1347                           ; 4 bytes @ 0x3C
  1348  005C                     	ds	4
  1349  0060                     ??___fladd:
  1350  0060                     ___fltol@sign1:	
  1351                           ; 1 bytes @ 0x40
  1352                           
  1353                           
  1354                           ; 1 bytes @ 0x40
  1355  0060                     	ds	1
  1356  0061                     ___fltol@exp1:
  1357                           
  1358                           ; 1 bytes @ 0x41
  1359  0061                     	ds	7
  1360  0068                     ___fladd@signs:
  1361                           
  1362                           ; 1 bytes @ 0x48
  1363  0068                     	ds	1
  1364  0069                     ___fladd@aexp:
  1365                           
  1366                           ; 1 bytes @ 0x49
  1367  0069                     	ds	1
  1368  006A                     ___fladd@bexp:
  1369                           
  1370                           ; 1 bytes @ 0x4A
  1371  006A                     	ds	1
  1372  006B                     ___fladd@grs:
  1373                           
  1374                           ; 1 bytes @ 0x4B
  1375  006B                     	ds	1
  1376  006C                     ??_main:
  1377                           
  1378                           ; 1 bytes @ 0x4C
  1379  006C                     	ds	4
  1380                           
  1381                           	psect	maintext
  1382  1182                     __pmaintext:	
  1383 ;;
  1384 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1385 ;;
  1386 ;; *************** function _main *****************
  1387 ;; Defined at:
  1388 ;;		line 59 in file "lab2.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : B00/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0
  1404 ;;      Temps:          0       4       0       0       0
  1405 ;;      Totals:         0       4       0       0       0
  1406 ;;Total ram usage:        4 bytes
  1407 ;; Hardware stack levels required when called: 6
  1408 ;; This function calls:
  1409 ;;		_ESC
  1410 ;;		_ESCLCD
  1411 ;;		_ESCString
  1412 ;;		___flmul
  1413 ;;		___xxtofl
  1414 ;;		_baud
  1415 ;;		_config
  1416 ;;		_configADC
  1417 ;;		_configLCD
  1418 ;;		_config_rx
  1419 ;;		_config_tx
  1420 ;;		_cursor
  1421 ;;		_limpiar
  1422 ;;		_sprintf
  1423 ;; This function is called by:
  1424 ;;		Startup code after reset
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _main
  1430  1182                     _main:
  1431  1182                     l4445:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1434                           
  1435                           
  1436                           ;lab2.c: 60:     config();
  1437  1182  160A  158A  214B  160A  118A  	fcall	_config
  1438  1187                     l4447:
  1439                           
  1440                           ;lab2.c: 61:     baud();
  1441  1187  160A  158A  20CA  160A  118A  	fcall	_baud
  1442  118C                     l4449:
  1443                           
  1444                           ;lab2.c: 62:     config_tx();
  1445  118C  160A  158A  2101  160A  118A  	fcall	_config_tx
  1446  1191                     l4451:
  1447                           
  1448                           ;lab2.c: 63:     config_rx();
  1449  1191  160A  158A  20D7  160A  118A  	fcall	_config_rx
  1450  1196                     l4453:
  1451                           
  1452                           ;lab2.c: 64:     configLCD();
  1453  1196  160A  158A  2430  160A  118A  	fcall	_configLCD
  1454  119B                     l4455:
  1455                           
  1456                           ;lab2.c: 65:     limpiar();
  1457  119B  160A  158A  20F4  160A  118A  	fcall	_limpiar
  1458  11A0                     l4457:
  1459                           
  1460                           ;lab2.c: 67:         limpiar();
  1461  11A0  160A  158A  20F4  160A  118A  	fcall	_limpiar
  1462  11A5                     l4459:
  1463                           
  1464                           ;lab2.c: 68:         cursor(1,1);
  1465  11A5  01F7               	clrf	cursor@b
  1466  11A6  0AF7               	incf	cursor@b,f
  1467  11A7  3001               	movlw	1
  1468  11A8  160A  158A  21AE  160A  118A  	fcall	_cursor
  1469  11AD                     l4461:
  1470                           
  1471                           ;lab2.c: 69:         ESCLCD("V1   V2   CONT");
  1472  11AD  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1473  11AE  00F6               	movwf	ESCLCD@a
  1474  11AF  3080               	movlw	128
  1475  11B0  00F7               	movwf	ESCLCD@a+1
  1476  11B1  160A  158A  22A7  160A  118A  	fcall	_ESCLCD
  1477  11B6                     l4463:
  1478                           
  1479                           ;lab2.c: 71:         adc0 = configADC(0);
  1480  11B6  3000               	movlw	0
  1481  11B7  120A  158A  2053  160A  118A  	fcall	_configADC
  1482  11BC  1283               	bcf	3,5	;RP0=0, select bank0
  1483  11BD  1303               	bcf	3,6	;RP1=0, select bank0
  1484  11BE  00EC               	movwf	??_main
  1485  11BF  086C               	movf	??_main,w
  1486  11C0  1683               	bsf	3,5	;RP0=1, select bank1
  1487  11C1  1303               	bcf	3,6	;RP1=0, select bank1
  1488  11C2  00DB               	movwf	_adc0^(0+128)
  1489  11C3                     l4465:
  1490                           
  1491                           ;lab2.c: 72:         adc1 = configADC(1);
  1492  11C3  3001               	movlw	1
  1493  11C4  120A  158A  2053  160A  118A  	fcall	_configADC
  1494  11C9  1283               	bcf	3,5	;RP0=0, select bank0
  1495  11CA  1303               	bcf	3,6	;RP1=0, select bank0
  1496  11CB  00EC               	movwf	??_main
  1497  11CC  086C               	movf	??_main,w
  1498  11CD  1683               	bsf	3,5	;RP0=1, select bank1
  1499  11CE  1303               	bcf	3,6	;RP1=0, select bank1
  1500  11CF  00DA               	movwf	_adc1^(0+128)
  1501  11D0                     l4467:
  1502                           
  1503                           ;lab2.c: 74:         num1 = adc0*0.0196;
  1504  11D0  303C               	movlw	60
  1505  11D1  1283               	bcf	3,5	;RP0=0, select bank0
  1506  11D2  1303               	bcf	3,6	;RP1=0, select bank0
  1507  11D3  00AD               	movwf	___flmul@b+3
  1508  11D4  30A0               	movlw	160
  1509  11D5  00AC               	movwf	___flmul@b+2
  1510  11D6  3090               	movlw	144
  1511  11D7  00AB               	movwf	___flmul@b+1
  1512  11D8  302E               	movlw	46
  1513  11D9  00AA               	movwf	___flmul@b
  1514  11DA  1683               	bsf	3,5	;RP0=1, select bank1
  1515  11DB  1303               	bcf	3,6	;RP1=0, select bank1
  1516  11DC  085B               	movf	_adc0^(0+128),w
  1517  11DD  1283               	bcf	3,5	;RP0=0, select bank0
  1518  11DE  1303               	bcf	3,6	;RP1=0, select bank0
  1519  11DF  00EC               	movwf	??_main
  1520  11E0  01ED               	clrf	??_main+1
  1521  11E1  01EE               	clrf	??_main+2
  1522  11E2  01EF               	clrf	??_main+3
  1523  11E3  086F               	movf	??_main+3,w
  1524  11E4  00F6               	movwf	___xxtofl@val+3
  1525  11E5  086E               	movf	??_main+2,w
  1526  11E6  00F5               	movwf	___xxtofl@val+2
  1527  11E7  086D               	movf	??_main+1,w
  1528  11E8  00F4               	movwf	___xxtofl@val+1
  1529  11E9  086C               	movf	??_main,w
  1530  11EA  00F3               	movwf	___xxtofl@val
  1531  11EB  3001               	movlw	1
  1532  11EC  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1533  11F1  0876               	movf	?___xxtofl+3,w
  1534  11F2  1283               	bcf	3,5	;RP0=0, select bank0
  1535  11F3  1303               	bcf	3,6	;RP1=0, select bank0
  1536  11F4  00B1               	movwf	___flmul@a+3
  1537  11F5  0875               	movf	?___xxtofl+2,w
  1538  11F6  00B0               	movwf	___flmul@a+2
  1539  11F7  0874               	movf	?___xxtofl+1,w
  1540  11F8  00AF               	movwf	___flmul@a+1
  1541  11F9  0873               	movf	?___xxtofl,w
  1542  11FA  00AE               	movwf	___flmul@a
  1543  11FB  120A  158A  213C  160A  118A  	fcall	___flmul
  1544  1200  1283               	bcf	3,5	;RP0=0, select bank0
  1545  1201  1303               	bcf	3,6	;RP1=0, select bank0
  1546  1202  082D               	movf	?___flmul+3,w
  1547  1203  1683               	bsf	3,5	;RP0=1, select bank1
  1548  1204  1303               	bcf	3,6	;RP1=0, select bank1
  1549  1205  00D8               	movwf	(_num1+3)^(0+128)
  1550  1206  1283               	bcf	3,5	;RP0=0, select bank0
  1551  1207  1303               	bcf	3,6	;RP1=0, select bank0
  1552  1208  082C               	movf	?___flmul+2,w
  1553  1209  1683               	bsf	3,5	;RP0=1, select bank1
  1554  120A  1303               	bcf	3,6	;RP1=0, select bank1
  1555  120B  00D7               	movwf	(_num1+2)^(0+128)
  1556  120C  1283               	bcf	3,5	;RP0=0, select bank0
  1557  120D  1303               	bcf	3,6	;RP1=0, select bank0
  1558  120E  082B               	movf	?___flmul+1,w
  1559  120F  1683               	bsf	3,5	;RP0=1, select bank1
  1560  1210  1303               	bcf	3,6	;RP1=0, select bank1
  1561  1211  00D6               	movwf	(_num1+1)^(0+128)
  1562  1212  1283               	bcf	3,5	;RP0=0, select bank0
  1563  1213  1303               	bcf	3,6	;RP1=0, select bank0
  1564  1214  082A               	movf	?___flmul,w
  1565  1215  1683               	bsf	3,5	;RP0=1, select bank1
  1566  1216  1303               	bcf	3,6	;RP1=0, select bank1
  1567  1217  00D5               	movwf	_num1^(0+128)
  1568  1218                     l4469:
  1569                           
  1570                           ;lab2.c: 75:         num2 = adc1*0.0196;
  1571  1218  303C               	movlw	60
  1572  1219  1283               	bcf	3,5	;RP0=0, select bank0
  1573  121A  1303               	bcf	3,6	;RP1=0, select bank0
  1574  121B  00AD               	movwf	___flmul@b+3
  1575  121C  30A0               	movlw	160
  1576  121D  00AC               	movwf	___flmul@b+2
  1577  121E  3090               	movlw	144
  1578  121F  00AB               	movwf	___flmul@b+1
  1579  1220  302E               	movlw	46
  1580  1221  00AA               	movwf	___flmul@b
  1581  1222  1683               	bsf	3,5	;RP0=1, select bank1
  1582  1223  1303               	bcf	3,6	;RP1=0, select bank1
  1583  1224  085A               	movf	_adc1^(0+128),w
  1584  1225  1283               	bcf	3,5	;RP0=0, select bank0
  1585  1226  1303               	bcf	3,6	;RP1=0, select bank0
  1586  1227  00EC               	movwf	??_main
  1587  1228  01ED               	clrf	??_main+1
  1588  1229  01EE               	clrf	??_main+2
  1589  122A  01EF               	clrf	??_main+3
  1590  122B  086F               	movf	??_main+3,w
  1591  122C  00F6               	movwf	___xxtofl@val+3
  1592  122D  086E               	movf	??_main+2,w
  1593  122E  00F5               	movwf	___xxtofl@val+2
  1594  122F  086D               	movf	??_main+1,w
  1595  1230  00F4               	movwf	___xxtofl@val+1
  1596  1231  086C               	movf	??_main,w
  1597  1232  00F3               	movwf	___xxtofl@val
  1598  1233  3001               	movlw	1
  1599  1234  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1600  1239  0876               	movf	?___xxtofl+3,w
  1601  123A  1283               	bcf	3,5	;RP0=0, select bank0
  1602  123B  1303               	bcf	3,6	;RP1=0, select bank0
  1603  123C  00B1               	movwf	___flmul@a+3
  1604  123D  0875               	movf	?___xxtofl+2,w
  1605  123E  00B0               	movwf	___flmul@a+2
  1606  123F  0874               	movf	?___xxtofl+1,w
  1607  1240  00AF               	movwf	___flmul@a+1
  1608  1241  0873               	movf	?___xxtofl,w
  1609  1242  00AE               	movwf	___flmul@a
  1610  1243  120A  158A  213C  160A  118A  	fcall	___flmul
  1611  1248  1283               	bcf	3,5	;RP0=0, select bank0
  1612  1249  1303               	bcf	3,6	;RP1=0, select bank0
  1613  124A  082D               	movf	?___flmul+3,w
  1614  124B  1683               	bsf	3,5	;RP0=1, select bank1
  1615  124C  1303               	bcf	3,6	;RP1=0, select bank1
  1616  124D  00D4               	movwf	(_num2+3)^(0+128)
  1617  124E  1283               	bcf	3,5	;RP0=0, select bank0
  1618  124F  1303               	bcf	3,6	;RP1=0, select bank0
  1619  1250  082C               	movf	?___flmul+2,w
  1620  1251  1683               	bsf	3,5	;RP0=1, select bank1
  1621  1252  1303               	bcf	3,6	;RP1=0, select bank1
  1622  1253  00D3               	movwf	(_num2+2)^(0+128)
  1623  1254  1283               	bcf	3,5	;RP0=0, select bank0
  1624  1255  1303               	bcf	3,6	;RP1=0, select bank0
  1625  1256  082B               	movf	?___flmul+1,w
  1626  1257  1683               	bsf	3,5	;RP0=1, select bank1
  1627  1258  1303               	bcf	3,6	;RP1=0, select bank1
  1628  1259  00D2               	movwf	(_num2+1)^(0+128)
  1629  125A  1283               	bcf	3,5	;RP0=0, select bank0
  1630  125B  1303               	bcf	3,6	;RP1=0, select bank0
  1631  125C  082A               	movf	?___flmul,w
  1632  125D  1683               	bsf	3,5	;RP0=1, select bank1
  1633  125E  1303               	bcf	3,6	;RP1=0, select bank1
  1634  125F  00D1               	movwf	_num2^(0+128)
  1635  1260                     l4471:
  1636                           
  1637                           ;lab2.c: 76:         sprintf(BUFFER, "%.2f  %.2f  %d" , num1,num2, num);
  1638  1260  30A0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1639  1261  1283               	bcf	3,5	;RP0=0, select bank0
  1640  1262  1303               	bcf	3,6	;RP1=0, select bank0
  1641  1263  00EC               	movwf	??_main
  1642  1264  086C               	movf	??_main,w
  1643  1265  1683               	bsf	3,5	;RP0=1, select bank1
  1644  1266  1303               	bcf	3,6	;RP1=0, select bank1
  1645  1267  00A8               	movwf	sprintf@f^(0+128)
  1646  1268  0858               	movf	(_num1+3)^(0+128),w
  1647  1269  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1648  126A  0857               	movf	(_num1+2)^(0+128),w
  1649  126B  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1650  126C  0856               	movf	(_num1+1)^(0+128),w
  1651  126D  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1652  126E  0855               	movf	_num1^(0+128),w
  1653  126F  00A9               	movwf	(?_sprintf^(0+128)+1)
  1654  1270  0854               	movf	(_num2+3)^(0+128),w
  1655  1271  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1656  1272  0853               	movf	(_num2+2)^(0+128),w
  1657  1273  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1658  1274  0852               	movf	(_num2+1)^(0+128),w
  1659  1275  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1660  1276  0851               	movf	_num2^(0+128),w
  1661  1277  00AD               	movwf	(?_sprintf^(0+128)+5)
  1662  1278  0859               	movf	_num^(0+128),w
  1663  1279  1283               	bcf	3,5	;RP0=0, select bank0
  1664  127A  1303               	bcf	3,6	;RP1=0, select bank0
  1665  127B  00ED               	movwf	??_main+1
  1666  127C  01EE               	clrf	??_main+2
  1667  127D  086D               	movf	??_main+1,w
  1668  127E  1683               	bsf	3,5	;RP0=1, select bank1
  1669  127F  1303               	bcf	3,6	;RP1=0, select bank1
  1670  1280  00B1               	movwf	(?_sprintf^(0+128)+9)
  1671  1281  1283               	bcf	3,5	;RP0=0, select bank0
  1672  1282  1303               	bcf	3,6	;RP1=0, select bank0
  1673  1283  086E               	movf	??_main+2,w
  1674  1284  1683               	bsf	3,5	;RP0=1, select bank1
  1675  1285  1303               	bcf	3,6	;RP1=0, select bank1
  1676  1286  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1677  1287  30DC               	movlw	(low (_BUFFER| 0))& (0+255)
  1678  1288  160A  118A  254A  160A  118A  	fcall	_sprintf
  1679  128D                     l4473:
  1680                           
  1681                           ;lab2.c: 79:         cursor(2,1);
  1682  128D  01F7               	clrf	cursor@b
  1683  128E  0AF7               	incf	cursor@b,f
  1684  128F  3002               	movlw	2
  1685  1290  160A  158A  21AE  160A  118A  	fcall	_cursor
  1686  1295                     l4475:
  1687                           
  1688                           ;lab2.c: 80:         ESCLCD(BUFFER);
  1689  1295  30DC               	movlw	(low (_BUFFER| 0))& (0+255)
  1690  1296  00F6               	movwf	ESCLCD@a
  1691  1297  3000               	movlw	0
  1692  1298  00F7               	movwf	ESCLCD@a+1
  1693  1299  160A  158A  22A7  160A  118A  	fcall	_ESCLCD
  1694  129E                     l4477:
  1695                           
  1696                           ;lab2.c: 82:         ESCString(BUFFER);
  1697  129E  30DC               	movlw	(low (_BUFFER| 0))& (0+255)
  1698  129F  160A  158A  212D  160A  118A  	fcall	_ESCString
  1699  12A4                     l4479:
  1700                           
  1701                           ;lab2.c: 83:         ESC(3);
  1702  12A4  3003               	movlw	3
  1703  12A5  160A  158A  20DF  160A  118A  	fcall	_ESC
  1704  12AA                     l4481:
  1705                           
  1706                           ;lab2.c: 84:         ESC(10);
  1707  12AA  300A               	movlw	10
  1708  12AB  160A  158A  20DF  160A  118A  	fcall	_ESC
  1709  12B0                     l4483:
  1710                           
  1711                           ;lab2.c: 85:         _delay((unsigned long)((250)*(4000000/4000.0)));
  1712  12B0  3002               	movlw	2
  1713  12B1  1283               	bcf	3,5	;RP0=0, select bank0
  1714  12B2  1303               	bcf	3,6	;RP1=0, select bank0
  1715  12B3  00EE               	movwf	??_main+2
  1716  12B4  3045               	movlw	69
  1717  12B5  00ED               	movwf	??_main+1
  1718  12B6  30A9               	movlw	169
  1719  12B7  00EC               	movwf	??_main
  1720  12B8                     u7147:
  1721  12B8  0BEC               	decfsz	??_main,f
  1722  12B9  2AB8               	goto	u7147
  1723  12BA  0BED               	decfsz	??_main+1,f
  1724  12BB  2AB8               	goto	u7147
  1725  12BC  0BEE               	decfsz	??_main+2,f
  1726  12BD  2AB8               	goto	u7147
  1727  12BE  29A0               	goto	l4457
  1728  12BF  120A  118A  280C   	ljmp	start
  1729  12C2                     __end_of_main:
  1730                           
  1731                           	psect	text1
  1732  154A                     __ptext1:	
  1733 ;; *************** function _sprintf *****************
  1734 ;; Defined at:
  1735 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  sp              1    wreg     PTR unsigned char 
  1738 ;;		 -> BUFFER(20), 
  1739 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1740 ;;		 -> STR_2(15), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1743 ;;		 -> BUFFER(20), 
  1744 ;;  fval            4   42[BANK1 ] PTR unsigned char 
  1745 ;;  val             4   37[BANK1 ] unsigned long 
  1746 ;;  tmpval          4   33[BANK1 ] struct .
  1747 ;;  prec            2   46[BANK1 ] int 
  1748 ;;  eexp            2   31[BANK1 ] int 
  1749 ;;  flag            2   29[BANK1 ] unsigned short 
  1750 ;;  cp              2    0        PTR const unsigned char 
  1751 ;;  len             2    0        unsigned int 
  1752 ;;  width           2    0        int 
  1753 ;;  c               1   48[BANK1 ] unsigned char 
  1754 ;;  ap              1   28[BANK1 ] PTR void [1]
  1755 ;;		 -> ?_sprintf(2), 
  1756 ;;  d               1    0        unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    8[BANK1 ] int 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0      11       0       0
  1767 ;;      Locals:         0       0      25       0       0
  1768 ;;      Temps:          0       0       5       0       0
  1769 ;;      Totals:         0       0      41       0       0
  1770 ;;Total ram usage:       41 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 5
  1773 ;; This function calls:
  1774 ;;		___awdiv
  1775 ;;		___fladd
  1776 ;;		___fleq
  1777 ;;		___flge
  1778 ;;		___flmul
  1779 ;;		___flneg
  1780 ;;		___flsub
  1781 ;;		___fltol
  1782 ;;		___lldiv
  1783 ;;		___llmod
  1784 ;;		___wmul
  1785 ;;		___xxtofl
  1786 ;;		__div_to_l_
  1787 ;;		__tdiv_to_l_
  1788 ;;		_fround
  1789 ;;		_isdigit
  1790 ;;		_scale
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _sprintf
  1798  154A                     _sprintf:
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1802                           ;sprintf@sp stored from wreg
  1803  154A  1683               	bsf	3,5	;RP0=1, select bank1
  1804  154B  1303               	bcf	3,6	;RP1=0, select bank1
  1805  154C  00C9               	movwf	sprintf@sp^(0+128)
  1806  154D                     l4207:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1809  154D  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1810  154E  00B3               	movwf	??_sprintf^(0+128)
  1811  154F  0833               	movf	??_sprintf^(0+128),w
  1812  1550  00BC               	movwf	sprintf@ap^(0+128)
  1813  1551                     L1:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1816  1551  120A  118A  2DC0   	goto	l4433
  1817  1554                     l4209:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1820  1554  3025               	movlw	37
  1821  1555  0650               	xorwf	sprintf@c^(0+128),w
  1822  1556  1903               	btfsc	3,2
  1823  1557  2D59               	goto	u6731
  1824  1558  2D5A               	goto	u6730
  1825  1559                     u6731:
  1826  1559  2D66               	goto	l4215
  1827  155A                     u6730:
  1828  155A                     l4211:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1831  155A  0850               	movf	sprintf@c^(0+128),w
  1832  155B  00B3               	movwf	??_sprintf^(0+128)
  1833  155C  0849               	movf	sprintf@sp^(0+128),w
  1834  155D  0084               	movwf	4
  1835  155E  0833               	movf	??_sprintf^(0+128),w
  1836  155F  1383               	bcf	3,7	;select IRP bank0
  1837  1560  0080               	movwf	0
  1838  1561                     l4213:
  1839  1561  3001               	movlw	1
  1840  1562  00B3               	movwf	??_sprintf^(0+128)
  1841  1563  0833               	movf	??_sprintf^(0+128),w
  1842  1564  07C9               	addwf	sprintf@sp^(0+128),f
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1845  1565  2D51               	goto	L1
  1846  1566                     l4215:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1849  1566  01BD               	clrf	sprintf@flag^(0+128)
  1850  1567  01BE               	clrf	(sprintf@flag+1)^(0+128)
  1851  1568                     l4217:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1854  1568  0828               	movf	sprintf@f^(0+128),w
  1855  1569  0084               	movwf	4
  1856  156A  160A  118A  200A  160A  118A  	fcall	stringdir
  1857  156F  3A2E               	xorlw	46
  1858  1570  1D03               	skipz
  1859  1571  2D73               	goto	u6741
  1860  1572  2D74               	goto	u6740
  1861  1573                     u6741:
  1862  1573  2DB9               	goto	l4233
  1863  1574                     u6740:
  1864  1574                     l4219:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1867  1574  173E               	bsf	(sprintf@flag^(0+128)+1),6
  1868  1575                     l4221:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  1871  1575  3001               	movlw	1
  1872  1576  00B3               	movwf	??_sprintf^(0+128)
  1873  1577  0833               	movf	??_sprintf^(0+128),w
  1874  1578  07A8               	addwf	sprintf@f^(0+128),f
  1875  1579                     l4223:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1878  1579  01CE               	clrf	sprintf@prec^(0+128)
  1879  157A  01CF               	clrf	(sprintf@prec+1)^(0+128)
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1882  157B  2DA8               	goto	l4231
  1883  157C                     l4225:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1886  157C  300A               	movlw	10
  1887  157D  00F3               	movwf	___wmul@multiplier
  1888  157E  3000               	movlw	0
  1889  157F  00F4               	movwf	___wmul@multiplier+1
  1890  1580  1683               	bsf	3,5	;RP0=1, select bank1
  1891  1581  1303               	bcf	3,6	;RP1=0, select bank1
  1892  1582  084F               	movf	(sprintf@prec+1)^(0+128),w
  1893  1583  00F6               	movwf	___wmul@multiplicand+1
  1894  1584  084E               	movf	sprintf@prec^(0+128),w
  1895  1585  00F5               	movwf	___wmul@multiplicand
  1896  1586  160A  158A  2189  160A  118A  	fcall	___wmul
  1897  158B  0874               	movf	?___wmul+1,w
  1898  158C  1683               	bsf	3,5	;RP0=1, select bank1
  1899  158D  1303               	bcf	3,6	;RP1=0, select bank1
  1900  158E  00CF               	movwf	(sprintf@prec+1)^(0+128)
  1901  158F  0873               	movf	?___wmul,w
  1902  1590  00CE               	movwf	sprintf@prec^(0+128)
  1903  1591                     l4227:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1906  1591  0828               	movf	sprintf@f^(0+128),w
  1907  1592  0084               	movwf	4
  1908  1593  160A  118A  200A  160A  118A  	fcall	stringdir
  1909  1598  3ED0               	addlw	208
  1910  1599  00B3               	movwf	??_sprintf^(0+128)
  1911  159A  30FF               	movlw	255
  1912  159B  1803               	skipnc
  1913  159C  3000               	movlw	0
  1914  159D  00B4               	movwf	(??_sprintf^(0+128)+1)
  1915  159E  0833               	movf	??_sprintf^(0+128),w
  1916  159F  07CE               	addwf	sprintf@prec^(0+128),f
  1917  15A0  1803               	skipnc
  1918  15A1  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  1919  15A2  0834               	movf	(??_sprintf+1)^(0+128),w
  1920  15A3  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  1921  15A4                     l4229:
  1922  15A4  3001               	movlw	1
  1923  15A5  00B3               	movwf	??_sprintf^(0+128)
  1924  15A6  0833               	movf	??_sprintf^(0+128),w
  1925  15A7  07A8               	addwf	sprintf@f^(0+128),f
  1926  15A8                     l4231:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1929  15A8  0828               	movf	sprintf@f^(0+128),w
  1930  15A9  0084               	movwf	4
  1931  15AA  160A  118A  200A  160A  118A  	fcall	stringdir
  1932  15AF  120A  118A  27E6  160A  118A  	fcall	_isdigit
  1933  15B4  1803               	btfsc	3,0
  1934  15B5  2DB7               	goto	u6751
  1935  15B6  2DB8               	goto	u6750
  1936  15B7                     u6751:
  1937  15B7  2D7C               	goto	l4225
  1938  15B8                     u6750:
  1939  15B8  2DBF               	goto	l4239
  1940  15B9                     l4233:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1943  15B9  01CE               	clrf	sprintf@prec^(0+128)
  1944  15BA  01CF               	clrf	(sprintf@prec+1)^(0+128)
  1945  15BB                     l4235:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1948  15BB  163E               	bsf	(sprintf@flag^(0+128)+1),4
  1949  15BC  2DBF               	goto	l4239
  1950  15BD                     l376:	
  1951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1952                           
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1955  15BD  153E               	bsf	(sprintf@flag^(0+128)+1),2
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  1958  15BE  2DE1               	goto	l4241
  1959  15BF                     l4239:
  1960  15BF  3001               	movlw	1
  1961  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  1962  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  1963  15C2  07A8               	addwf	sprintf@f^(0+128),f
  1964  15C3  30FF               	movlw	-1
  1965  15C4  0728               	addwf	sprintf@f^(0+128),w
  1966  15C5  0084               	movwf	4
  1967  15C6  160A  118A  200A  160A  118A  	fcall	stringdir
  1968  15CB  00D0               	movwf	sprintf@c^(0+128)
  1969  15CC  00B3               	movwf	??_sprintf^(0+128)
  1970  15CD  01B4               	clrf	(??_sprintf^(0+128)+1)
  1971                           
  1972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1973                           ; Switch size 1, requested type "simple"
  1974                           ; Number of cases is 1, Range of values is 0 to 0
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte            4     3 (average)
  1978                           ; direct_byte           11     8 (fixed)
  1979                           ; jumptable            260     6 (fixed)
  1980                           ;	Chosen strategy is simple_byte
  1981  15CE  0834               	movf	(??_sprintf+1)^(0+128),w
  1982  15CF  3A00               	xorlw	0	; case 0
  1983  15D0  1903               	skipnz
  1984  15D1  2DD3               	goto	l4545
  1985  15D2  2D51               	goto	L1
  1986  15D3                     l4545:
  1987                           
  1988                           ; Switch size 1, requested type "simple"
  1989                           ; Number of cases is 4, Range of values is 0 to 105
  1990                           ; switch strategies available:
  1991                           ; Name         Instructions Cycles
  1992                           ; simple_byte           13     7 (average)
  1993                           ; jumptable            260     6 (fixed)
  1994                           ;	Chosen strategy is simple_byte
  1995  15D3  0833               	movf	??_sprintf^(0+128),w
  1996  15D4  3A00               	xorlw	0	; case 0
  1997  15D5  1903               	skipnz
  1998  15D6  2FFD               	goto	L3
  1999  15D7  3A64               	xorlw	100	; case 100
  2000  15D8  1903               	skipnz
  2001  15D9  2DE1               	goto	l4241
  2002  15DA  3A02               	xorlw	2	; case 102
  2003  15DB  1903               	skipnz
  2004  15DC  2DBD               	goto	l376
  2005  15DD  3A0F               	xorlw	15	; case 105
  2006  15DE  1903               	skipnz
  2007  15DF  2DE1               	goto	l4241
  2008  15E0  2D51               	goto	L1
  2009  15E1                     l4241:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2012  15E1  3000               	movlw	0
  2013  15E2  053D               	andwf	sprintf@flag^(0+128),w
  2014  15E3  00B3               	movwf	??_sprintf^(0+128)
  2015  15E4  3007               	movlw	7
  2016  15E5  053E               	andwf	(sprintf@flag+1)^(0+128),w
  2017  15E6  00B4               	movwf	(??_sprintf+1)^(0+128)
  2018  15E7  0833               	movf	??_sprintf^(0+128),w
  2019  15E8  0434               	iorwf	(??_sprintf^(0+128)+1),w
  2020  15E9  1903               	btfsc	3,2
  2021  15EA  2DEC               	goto	u6761
  2022  15EB  2DEF               	goto	u6760
  2023  15EC                     u6761:
  2024  15EC  120A  118A  2C86   	goto	l4383
  2025  15EF                     u6760:
  2026  15EF                     l4243:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2029  15EF  1E3E               	btfss	(sprintf@flag+1)^(0+128),4
  2030  15F0  2DF2               	goto	u6771
  2031  15F1  2DF3               	goto	u6770
  2032  15F2                     u6771:
  2033  15F2  2DF7               	goto	l4247
  2034  15F3                     u6770:
  2035  15F3                     l4245:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2038  15F3  3006               	movlw	6
  2039  15F4  00CE               	movwf	sprintf@prec^(0+128)
  2040  15F5  3000               	movlw	0
  2041  15F6  00CF               	movwf	(sprintf@prec^(0+128)+1)
  2042  15F7                     l4247:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2045  15F7  083C               	movf	sprintf@ap^(0+128),w
  2046  15F8  0084               	movwf	4
  2047  15F9  1383               	bcf	3,7	;select IRP bank0
  2048  15FA  0800               	movf	0,w
  2049  15FB  00CA               	movwf	sprintf@fval^(0+128)
  2050  15FC  0A84               	incf	4,f
  2051  15FD  0800               	movf	0,w
  2052  15FE  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2053  15FF  0A84               	incf	4,f
  2054  1600  0800               	movf	0,w
  2055  1601  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2056  1602  0A84               	incf	4,f
  2057  1603  0800               	movf	0,w
  2058  1604  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2059  1605                     l4249:
  2060  1605  3004               	movlw	4
  2061  1606  00B3               	movwf	??_sprintf^(0+128)
  2062  1607  0833               	movf	??_sprintf^(0+128),w
  2063  1608  07BC               	addwf	sprintf@ap^(0+128),f
  2064  1609                     l4251:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2067  1609  084D               	movf	(sprintf@fval+3)^(0+128),w
  2068  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2069  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2070  160C  00A3               	movwf	___flge@ff1+3
  2071  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2072  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2073  160F  084C               	movf	(sprintf@fval+2)^(0+128),w
  2074  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2075  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2076  1612  00A2               	movwf	___flge@ff1+2
  2077  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2078  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2079  1615  084B               	movf	(sprintf@fval+1)^(0+128),w
  2080  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2081  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2082  1618  00A1               	movwf	___flge@ff1+1
  2083  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2084  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2085  161B  084A               	movf	sprintf@fval^(0+128),w
  2086  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2087  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2088  161E  00A0               	movwf	___flge@ff1
  2089  161F  3000               	movlw	0
  2090  1620  00A7               	movwf	___flge@ff2+3
  2091  1621  3000               	movlw	0
  2092  1622  00A6               	movwf	___flge@ff2+2
  2093  1623  3000               	movlw	0
  2094  1624  00A5               	movwf	___flge@ff2+1
  2095  1625  3000               	movlw	0
  2096  1626  00A4               	movwf	___flge@ff2
  2097  1627  160A  158A  25E3  160A  118A  	fcall	___flge
  2098  162C  1803               	btfsc	3,0
  2099  162D  2E2F               	goto	u6781
  2100  162E  2E30               	goto	u6780
  2101  162F                     u6781:
  2102  162F  2E4D               	goto	l4257
  2103  1630                     u6780:
  2104  1630                     l4253:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2107  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2108  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2109  1632  084D               	movf	(sprintf@fval+3)^(0+128),w
  2110  1633  00F6               	movwf	___flneg@f1+3
  2111  1634  084C               	movf	(sprintf@fval+2)^(0+128),w
  2112  1635  00F5               	movwf	___flneg@f1+2
  2113  1636  084B               	movf	(sprintf@fval+1)^(0+128),w
  2114  1637  00F4               	movwf	___flneg@f1+1
  2115  1638  084A               	movf	sprintf@fval^(0+128),w
  2116  1639  00F3               	movwf	___flneg@f1
  2117  163A  160A  158A  20E9  160A  118A  	fcall	___flneg
  2118  163F  0876               	movf	?___flneg+3,w
  2119  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2120  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2121  1642  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2122  1643  0875               	movf	?___flneg+2,w
  2123  1644  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2124  1645  0874               	movf	?___flneg+1,w
  2125  1646  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2126  1647  0873               	movf	?___flneg,w
  2127  1648  00CA               	movwf	sprintf@fval^(0+128)
  2128  1649                     l4255:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2131  1649  3003               	movlw	3
  2132  164A  04BD               	iorwf	sprintf@flag^(0+128),f
  2133  164B  3000               	movlw	0
  2134  164C  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  2135  164D                     l4257:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2138  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2139  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2140  164F  01BF               	clrf	sprintf@eexp^(0+128)
  2141  1650  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2142  1651                     l4259:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2145  1651  084D               	movf	(sprintf@fval+3)^(0+128),w
  2146  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2147  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2148  1654  00A3               	movwf	___fleq@ff1+3
  2149  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2150  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2151  1657  084C               	movf	(sprintf@fval+2)^(0+128),w
  2152  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2153  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2154  165A  00A2               	movwf	___fleq@ff1+2
  2155  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2156  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2157  165D  084B               	movf	(sprintf@fval+1)^(0+128),w
  2158  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2159  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2160  1660  00A1               	movwf	___fleq@ff1+1
  2161  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2162  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2163  1663  084A               	movf	sprintf@fval^(0+128),w
  2164  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2165  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2166  1666  00A0               	movwf	___fleq@ff1
  2167  1667  3000               	movlw	0
  2168  1668  00A7               	movwf	___fleq@ff2+3
  2169  1669  3000               	movlw	0
  2170  166A  00A6               	movwf	___fleq@ff2+2
  2171  166B  3000               	movlw	0
  2172  166C  00A5               	movwf	___fleq@ff2+1
  2173  166D  3000               	movlw	0
  2174  166E  00A4               	movwf	___fleq@ff2
  2175  166F  160A  158A  2331  160A  118A  	fcall	___fleq
  2176  1674  1803               	btfsc	3,0
  2177  1675  2E77               	goto	u6791
  2178  1676  2E78               	goto	u6790
  2179  1677                     u6791:
  2180  1677  2F94               	goto	l4285
  2181  1678                     u6790:
  2182  1678                     l4261:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2185  1678  1003               	clrc
  2186  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2187  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2188  167B  0D4C               	rlf	(sprintf@fval+2)^(0+128),w
  2189  167C  0D4D               	rlf	(sprintf@fval+3)^(0+128),w
  2190  167D  3E82               	addlw	130
  2191  167E  00BF               	movwf	sprintf@eexp^(0+128)
  2192  167F  30FF               	movlw	255
  2193  1680  1803               	skipnc
  2194  1681  3000               	movlw	0
  2195  1682  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  2196  1683                     l4263:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2199  1683  30FF               	movlw	255
  2200  1684  07BF               	addwf	sprintf@eexp^(0+128),f
  2201  1685  1803               	skipnc
  2202  1686  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2203  1687  30FF               	movlw	255
  2204  1688  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2205  1689                     l4265:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2208  1689  3003               	movlw	3
  2209  168A  00F3               	movwf	___wmul@multiplier
  2210  168B  3000               	movlw	0
  2211  168C  00F4               	movwf	___wmul@multiplier+1
  2212  168D  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2213  168E  00F6               	movwf	___wmul@multiplicand+1
  2214  168F  083F               	movf	sprintf@eexp^(0+128),w
  2215  1690  00F5               	movwf	___wmul@multiplicand
  2216  1691  160A  158A  2189  160A  118A  	fcall	___wmul
  2217  1696  0874               	movf	?___wmul+1,w
  2218  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2219  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2220  1699  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2221  169A  0873               	movf	?___wmul,w
  2222  169B  00BF               	movwf	sprintf@eexp^(0+128)
  2223  169C                     l4267:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2226  169C  300A               	movlw	10
  2227  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2228  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2229  169F  00A0               	movwf	___awdiv@divisor
  2230  16A0  3000               	movlw	0
  2231  16A1  00A1               	movwf	___awdiv@divisor+1
  2232  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2233  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2234  16A4  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2235  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2236  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2237  16A7  00A3               	movwf	___awdiv@dividend+1
  2238  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2239  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2240  16AA  083F               	movf	sprintf@eexp^(0+128),w
  2241  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2242  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2243  16AD  00A2               	movwf	___awdiv@dividend
  2244  16AE  160A  158A  24FE  160A  118A  	fcall	___awdiv
  2245  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2246  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2247  16B5  0821               	movf	?___awdiv+1,w
  2248  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2249  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2250  16B8  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2251  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2252  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2253  16BB  0820               	movf	?___awdiv,w
  2254  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2255  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2256  16BE  00BF               	movwf	sprintf@eexp^(0+128)
  2257  16BF                     l4269:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2260  16BF  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2261  16C0  2EC2               	goto	u6801
  2262  16C1  2EC3               	goto	u6800
  2263  16C2                     u6801:
  2264  16C2  2EC9               	goto	l4273
  2265  16C3                     u6800:
  2266  16C3                     l4271:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2269  16C3  30FF               	movlw	255
  2270  16C4  07BF               	addwf	sprintf@eexp^(0+128),f
  2271  16C5  1803               	skipnc
  2272  16C6  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2273  16C7  30FF               	movlw	255
  2274  16C8  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2275  16C9                     l4273:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2278  16C9  033F               	decf	sprintf@eexp^(0+128),w
  2279  16CA  3AFF               	xorlw	255
  2280  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2281  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2282  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2283  16D2  0847               	movf	?_scale+3,w
  2284  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2285  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2286  16D5  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2287  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2288  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2289  16D8  0846               	movf	?_scale+2,w
  2290  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2291  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2292  16DB  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2293  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2294  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2295  16DE  0845               	movf	?_scale+1,w
  2296  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2297  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2298  16E1  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2299  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2300  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2301  16E4  0844               	movf	?_scale,w
  2302  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2303  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2304  16E7  00C1               	movwf	sprintf@tmpval^(0+128)
  2305  16E8                     l4275:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2308  16E8  084D               	movf	(sprintf@fval+3)^(0+128),w
  2309  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2310  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2311  16EB  00AD               	movwf	___flmul@b+3
  2312  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2313  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2314  16EE  084C               	movf	(sprintf@fval+2)^(0+128),w
  2315  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2316  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2317  16F1  00AC               	movwf	___flmul@b+2
  2318  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2319  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2320  16F4  084B               	movf	(sprintf@fval+1)^(0+128),w
  2321  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2322  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2323  16F7  00AB               	movwf	___flmul@b+1
  2324  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2325  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2326  16FA  084A               	movf	sprintf@fval^(0+128),w
  2327  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2328  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2329  16FD  00AA               	movwf	___flmul@b
  2330  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2331  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2332  1700  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2333  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2334  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2335  1703  00B1               	movwf	___flmul@a+3
  2336  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2337  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2338  1706  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2339  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2340  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2341  1709  00B0               	movwf	___flmul@a+2
  2342  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2343  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2344  170C  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2345  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2346  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2347  170F  00AF               	movwf	___flmul@a+1
  2348  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2349  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2350  1712  0841               	movf	sprintf@tmpval^(0+128),w
  2351  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2352  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2353  1715  00AE               	movwf	___flmul@a
  2354  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2355  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2356  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2357  171D  082D               	movf	?___flmul+3,w
  2358  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2359  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2360  1720  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  2361  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2362  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2363  1723  082C               	movf	?___flmul+2,w
  2364  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2365  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2366  1726  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  2367  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2368  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2369  1729  082B               	movf	?___flmul+1,w
  2370  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2371  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2372  172C  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  2373  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2374  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2375  172F  082A               	movf	?___flmul,w
  2376  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2377  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2378  1732  00C1               	movwf	sprintf@tmpval^(0+128)
  2379  1733                     l4277:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2382  1733  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2383  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2384  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2385  1736  00A3               	movwf	___flge@ff1+3
  2386  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2387  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2388  1739  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2389  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2390  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2391  173C  00A2               	movwf	___flge@ff1+2
  2392  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2393  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2394  173F  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2395  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2396  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2397  1742  00A1               	movwf	___flge@ff1+1
  2398  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2399  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2400  1745  0841               	movf	sprintf@tmpval^(0+128),w
  2401  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2402  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2403  1748  00A0               	movwf	___flge@ff1
  2404  1749  303F               	movlw	63
  2405  174A  00A7               	movwf	___flge@ff2+3
  2406  174B  3080               	movlw	128
  2407  174C  00A6               	movwf	___flge@ff2+2
  2408  174D  3000               	movlw	0
  2409  174E  00A5               	movwf	___flge@ff2+1
  2410  174F  3000               	movlw	0
  2411  1750  00A4               	movwf	___flge@ff2
  2412  1751  160A  158A  25E3  160A  118A  	fcall	___flge
  2413  1756  1803               	btfsc	3,0
  2414  1757  2F59               	goto	u6811
  2415  1758  2F5A               	goto	u6810
  2416  1759                     u6811:
  2417  1759  2F63               	goto	l4281
  2418  175A                     u6810:
  2419  175A                     l4279:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2422  175A  30FF               	movlw	255
  2423  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2424  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2425  175D  07BF               	addwf	sprintf@eexp^(0+128),f
  2426  175E  1803               	skipnc
  2427  175F  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2428  1760  30FF               	movlw	255
  2429  1761  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2430  1762  2F94               	goto	l4285
  2431  1763                     l4281:
  2432  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2433  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2434  1765  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  2435  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2436  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2437  1768  00A3               	movwf	___flge@ff1+3
  2438  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2439  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2440  176B  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  2441  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2442  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2443  176E  00A2               	movwf	___flge@ff1+2
  2444  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2445  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2446  1771  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  2447  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2448  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2449  1774  00A1               	movwf	___flge@ff1+1
  2450  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2451  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2452  1777  0841               	movf	sprintf@tmpval^(0+128),w
  2453  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2454  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2455  177A  00A0               	movwf	___flge@ff1
  2456  177B  3041               	movlw	65
  2457  177C  00A7               	movwf	___flge@ff2+3
  2458  177D  3020               	movlw	32
  2459  177E  00A6               	movwf	___flge@ff2+2
  2460  177F  3000               	movlw	0
  2461  1780  00A5               	movwf	___flge@ff2+1
  2462  1781  3000               	movlw	0
  2463  1782  00A4               	movwf	___flge@ff2
  2464  1783  160A  158A  25E3  160A  118A  	fcall	___flge
  2465  1788  1C03               	btfss	3,0
  2466  1789  2F8B               	goto	u6821
  2467  178A  2F8C               	goto	u6820
  2468  178B                     u6821:
  2469  178B  2F94               	goto	l4285
  2470  178C                     u6820:
  2471  178C                     l4283:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2474  178C  3001               	movlw	1
  2475  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2476  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2477  178F  07BF               	addwf	sprintf@eexp^(0+128),f
  2478  1790  1803               	skipnc
  2479  1791  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2480  1792  3000               	movlw	0
  2481  1793  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2482  1794                     l4285:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2485  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2486  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2487  1796  084F               	movf	(sprintf@prec+1)^(0+128),w
  2488  1797  3A80               	xorlw	128
  2489  1798  00FF               	movwf	btemp+1
  2490  1799  3080               	movlw	128
  2491  179A  027F               	subwf	btemp+1,w
  2492  179B  1D03               	skipz
  2493  179C  2F9F               	goto	u6835
  2494  179D  300D               	movlw	13
  2495  179E  024E               	subwf	sprintf@prec^(0+128),w
  2496  179F                     u6835:
  2497  179F  1803               	skipnc
  2498  17A0  2FA2               	goto	u6831
  2499  17A1  2FA3               	goto	u6830
  2500  17A2                     u6831:
  2501  17A2  2FEA               	goto	l4289
  2502  17A3                     u6830:
  2503  17A3                     l4287:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2506  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2507  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2508  17A5  084E               	movf	sprintf@prec^(0+128),w
  2509  17A6  120A  118A  25D9  160A  118A  	fcall	_fround
  2510  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2511  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2512  17AD  0847               	movf	?_fround+3,w
  2513  17AE  00DB               	movwf	___fladd@b+3
  2514  17AF  0846               	movf	?_fround+2,w
  2515  17B0  00DA               	movwf	___fladd@b+2
  2516  17B1  0845               	movf	?_fround+1,w
  2517  17B2  00D9               	movwf	___fladd@b+1
  2518  17B3  0844               	movf	?_fround,w
  2519  17B4  00D8               	movwf	___fladd@b
  2520  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2521  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2522  17B7  084D               	movf	(sprintf@fval+3)^(0+128),w
  2523  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2524  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2525  17BA  00DF               	movwf	___fladd@a+3
  2526  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2527  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2528  17BD  084C               	movf	(sprintf@fval+2)^(0+128),w
  2529  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2530  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2531  17C0  00DE               	movwf	___fladd@a+2
  2532  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2533  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2534  17C3  084B               	movf	(sprintf@fval+1)^(0+128),w
  2535  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2536  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2537  17C6  00DD               	movwf	___fladd@a+1
  2538  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2539  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2540  17C9  084A               	movf	sprintf@fval^(0+128),w
  2541  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2542  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2543  17CC  00DC               	movwf	___fladd@a
  2544  17CD  160A  118A  22C2  160A  118A  	fcall	___fladd
  2545  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2546  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2547  17D4  085B               	movf	?___fladd+3,w
  2548  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2549  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2550  17D7  00CD               	movwf	(sprintf@fval+3)^(0+128)
  2551  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2552  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2553  17DA  085A               	movf	?___fladd+2,w
  2554  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2555  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2556  17DD  00CC               	movwf	(sprintf@fval+2)^(0+128)
  2557  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2558  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2559  17E0  0859               	movf	?___fladd+1,w
  2560  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2561  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2562  17E3  00CB               	movwf	(sprintf@fval+1)^(0+128)
  2563  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2564  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2565  17E6  0858               	movf	?___fladd,w
  2566  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2567  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2568  17E9  00CA               	movwf	sprintf@fval^(0+128)
  2569  17EA                     l4289:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2572  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2573  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2574  17EC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2575  17ED  3A80               	xorlw	128
  2576  17EE  00FF               	movwf	btemp+1
  2577  17EF  3080               	movlw	128
  2578  17F0  027F               	subwf	btemp+1,w
  2579  17F1  1D03               	skipz
  2580  17F2  2FF5               	goto	u6845
  2581  17F3  300A               	movlw	10
  2582  17F4  023F               	subwf	sprintf@eexp^(0+128),w
  2583  17F5                     u6845:
  2584  17F5  1803               	skipnc
  2585  17F6  2FFA               	goto	u6841
  2586  17F7  120A  118A  281D   	goto	u6840
  2587  17FA                     u6841:
  2588  17FA  120A  118A  287C   	goto	l4297
  2589  17FD                     L3:
  2590  17FD                     L2:
  2591  17FD  120A  118A  2DD4   	ljmp	l4435
  2592                           
  2593                           	psect	text2
  2594  0C9D                     __ptext2:	
  2595 ;; *************** function _scale *****************
  2596 ;; Defined at:
  2597 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  scl             1    wreg     char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  scl             1   54[BANK0 ] char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  4   36[BANK0 ] char 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0       4       0       0       0
  2612 ;;      Locals:         0       5       0       0       0
  2613 ;;      Temps:          0      10       0       0       0
  2614 ;;      Totals:         0      19       0       0       0
  2615 ;;Total ram usage:       19 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 4
  2618 ;; This function calls:
  2619 ;;		___awdiv
  2620 ;;		___awmod
  2621 ;;		___flmul
  2622 ;; This function is called by:
  2623 ;;		_sprintf
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _scale
  2629  0C9D                     _scale:
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2633                           ;scale@scl stored from wreg
  2634  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0C9F  00D6               	movwf	scale@scl
  2637  0CA0                     l3897:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2640  0CA0  1FD6               	btfss	scale@scl,7
  2641  0CA1  2CA3               	goto	u5881
  2642  0CA2  2CA4               	goto	u5880
  2643  0CA3                     u5881:
  2644  0CA3  2E53               	goto	l3919
  2645  0CA4                     u5880:
  2646  0CA4                     l3899:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2649  0CA4  09D6               	comf	scale@scl,f
  2650  0CA5  0AD6               	incf	scale@scl,f
  2651  0CA6                     l3901:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2654  0CA6  0856               	movf	scale@scl,w
  2655  0CA7  3A80               	xorlw	128
  2656  0CA8  3E12               	addlw	-238
  2657  0CA9  1C03               	skipc
  2658  0CAA  2CAC               	goto	u5891
  2659  0CAB  2CAD               	goto	u5890
  2660  0CAC                     u5891:
  2661  0CAC  2D97               	goto	l3909
  2662  0CAD                     u5890:
  2663  0CAD                     l3903:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2666  0CAD  300A               	movlw	10
  2667  0CAE  00A0               	movwf	___awdiv@divisor
  2668  0CAF  3000               	movlw	0
  2669  0CB0  00A1               	movwf	___awdiv@divisor+1
  2670  0CB1  0856               	movf	scale@scl,w
  2671  0CB2  00F5               	movwf	___awmod@dividend
  2672  0CB3  01F6               	clrf	___awmod@dividend+1
  2673  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2674  0CB5  03F6               	decf	___awmod@dividend+1,f
  2675  0CB6  3064               	movlw	100
  2676  0CB7  00F3               	movwf	___awmod@divisor
  2677  0CB8  3000               	movlw	0
  2678  0CB9  00F4               	movwf	___awmod@divisor+1
  2679  0CBA  160A  158A  23D7  120A  158A  	fcall	___awmod
  2680  0CBF  0874               	movf	?___awmod+1,w
  2681  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0CC2  00A3               	movwf	___awdiv@dividend+1
  2684  0CC3  0873               	movf	?___awmod,w
  2685  0CC4  00A2               	movwf	___awdiv@dividend
  2686  0CC5  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2687  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0CCC  0820               	movf	?___awdiv,w
  2690  0CCD  00C8               	movwf	??_scale
  2691  0CCE  3001               	movlw	1
  2692  0CCF                     u5905:
  2693  0CCF  1003               	clrc
  2694  0CD0  0DC8               	rlf	??_scale,f
  2695  0CD1  3EFF               	addlw	-1
  2696  0CD2  1D03               	skipz
  2697  0CD3  2CCF               	goto	u5905
  2698  0CD4  1003               	clrc
  2699  0CD5  0D48               	rlf	??_scale,w
  2700  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2701  0CD7  0084               	movwf	4
  2702  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2703  0CDD  00C9               	movwf	??_scale+1
  2704  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  2705  0CE3  00CA               	movwf	??_scale+2
  2706  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  2707  0CE9  00CB               	movwf	??_scale+3
  2708  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2709  0CEF  00CC               	movwf	??_scale+4
  2710  0CF0  084C               	movf	??_scale+4,w
  2711  0CF1  00AD               	movwf	___flmul@b+3
  2712  0CF2  084B               	movf	??_scale+3,w
  2713  0CF3  00AC               	movwf	___flmul@b+2
  2714  0CF4  084A               	movf	??_scale+2,w
  2715  0CF5  00AB               	movwf	___flmul@b+1
  2716  0CF6  0849               	movf	??_scale+1,w
  2717  0CF7  00AA               	movwf	___flmul@b
  2718  0CF8  3064               	movlw	100
  2719  0CF9  00A0               	movwf	___awdiv@divisor
  2720  0CFA  3000               	movlw	0
  2721  0CFB  00A1               	movwf	___awdiv@divisor+1
  2722  0CFC  0856               	movf	scale@scl,w
  2723  0CFD  00A2               	movwf	___awdiv@dividend
  2724  0CFE  01A3               	clrf	___awdiv@dividend+1
  2725  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2726  0D00  03A3               	decf	___awdiv@dividend+1,f
  2727  0D01  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2728  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0D08  0820               	movf	?___awdiv,w
  2731  0D09  00CD               	movwf	??_scale+5
  2732  0D0A  3001               	movlw	1
  2733  0D0B                     u5915:
  2734  0D0B  1003               	clrc
  2735  0D0C  0DCD               	rlf	??_scale+5,f
  2736  0D0D  3EFF               	addlw	-1
  2737  0D0E  1D03               	skipz
  2738  0D0F  2D0B               	goto	u5915
  2739  0D10  1003               	clrc
  2740  0D11  0D4D               	rlf	??_scale+5,w
  2741  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2742  0D13  0084               	movwf	4
  2743  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  2744  0D19  00CE               	movwf	??_scale+6
  2745  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  2746  0D1F  00CF               	movwf	??_scale+7
  2747  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  2748  0D25  00D0               	movwf	??_scale+8
  2749  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  2750  0D2B  00D1               	movwf	??_scale+9
  2751  0D2C  0851               	movf	??_scale+9,w
  2752  0D2D  00B1               	movwf	___flmul@a+3
  2753  0D2E  0850               	movf	??_scale+8,w
  2754  0D2F  00B0               	movwf	___flmul@a+2
  2755  0D30  084F               	movf	??_scale+7,w
  2756  0D31  00AF               	movwf	___flmul@a+1
  2757  0D32  084E               	movf	??_scale+6,w
  2758  0D33  00AE               	movwf	___flmul@a
  2759  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2760  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0D3B  082D               	movf	?___flmul+3,w
  2763  0D3C  00D5               	movwf	_scale$1269+3
  2764  0D3D  082C               	movf	?___flmul+2,w
  2765  0D3E  00D4               	movwf	_scale$1269+2
  2766  0D3F  082B               	movf	?___flmul+1,w
  2767  0D40  00D3               	movwf	_scale$1269+1
  2768  0D41  082A               	movf	?___flmul,w
  2769  0D42  00D2               	movwf	_scale$1269
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2772  0D43  300A               	movlw	10
  2773  0D44  00F3               	movwf	___awmod@divisor
  2774  0D45  3000               	movlw	0
  2775  0D46  00F4               	movwf	___awmod@divisor+1
  2776  0D47  0856               	movf	scale@scl,w
  2777  0D48  00F5               	movwf	___awmod@dividend
  2778  0D49  01F6               	clrf	___awmod@dividend+1
  2779  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2780  0D4B  03F6               	decf	___awmod@dividend+1,f
  2781  0D4C  160A  158A  23D7  120A  158A  	fcall	___awmod
  2782  0D51  0873               	movf	?___awmod,w
  2783  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0D54  00C8               	movwf	??_scale
  2786  0D55  3001               	movlw	1
  2787  0D56                     u5925:
  2788  0D56  1003               	clrc
  2789  0D57  0DC8               	rlf	??_scale,f
  2790  0D58  3EFF               	addlw	-1
  2791  0D59  1D03               	skipz
  2792  0D5A  2D56               	goto	u5925
  2793  0D5B  1003               	clrc
  2794  0D5C  0D48               	rlf	??_scale,w
  2795  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2796  0D5E  0084               	movwf	4
  2797  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  2798  0D64  00C9               	movwf	??_scale+1
  2799  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  2800  0D6A  00CA               	movwf	??_scale+2
  2801  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  2802  0D70  00CB               	movwf	??_scale+3
  2803  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  2804  0D76  00CC               	movwf	??_scale+4
  2805  0D77  084C               	movf	??_scale+4,w
  2806  0D78  00AD               	movwf	___flmul@b+3
  2807  0D79  084B               	movf	??_scale+3,w
  2808  0D7A  00AC               	movwf	___flmul@b+2
  2809  0D7B  084A               	movf	??_scale+2,w
  2810  0D7C  00AB               	movwf	___flmul@b+1
  2811  0D7D  0849               	movf	??_scale+1,w
  2812  0D7E  00AA               	movwf	___flmul@b
  2813  0D7F  0855               	movf	_scale$1269+3,w
  2814  0D80  00B1               	movwf	___flmul@a+3
  2815  0D81  0854               	movf	_scale$1269+2,w
  2816  0D82  00B0               	movwf	___flmul@a+2
  2817  0D83  0853               	movf	_scale$1269+1,w
  2818  0D84  00AF               	movwf	___flmul@a+1
  2819  0D85  0852               	movf	_scale$1269,w
  2820  0D86  00AE               	movwf	___flmul@a
  2821  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2822  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0D8E  082D               	movf	?___flmul+3,w
  2825  0D8F  00C7               	movwf	?_scale+3
  2826  0D90  082C               	movf	?___flmul+2,w
  2827  0D91  00C6               	movwf	?_scale+2
  2828  0D92  082B               	movf	?___flmul+1,w
  2829  0D93  00C5               	movwf	?_scale+1
  2830  0D94  082A               	movf	?___flmul,w
  2831  0D95  00C4               	movwf	?_scale
  2832  0D96  2FFF               	goto	l357
  2833  0D97                     l3909:
  2834  0D97  0856               	movf	scale@scl,w
  2835  0D98  3A80               	xorlw	128
  2836  0D99  3E75               	addlw	-139
  2837  0D9A  1C03               	skipc
  2838  0D9B  2D9D               	goto	u5931
  2839  0D9C  2D9E               	goto	u5930
  2840  0D9D                     u5931:
  2841  0D9D  2E26               	goto	l3915
  2842  0D9E                     u5930:
  2843  0D9E                     l3911:
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2846  0D9E  300A               	movlw	10
  2847  0D9F  00F3               	movwf	___awmod@divisor
  2848  0DA0  3000               	movlw	0
  2849  0DA1  00F4               	movwf	___awmod@divisor+1
  2850  0DA2  0856               	movf	scale@scl,w
  2851  0DA3  00F5               	movwf	___awmod@dividend
  2852  0DA4  01F6               	clrf	___awmod@dividend+1
  2853  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2854  0DA6  03F6               	decf	___awmod@dividend+1,f
  2855  0DA7  160A  158A  23D7  120A  158A  	fcall	___awmod
  2856  0DAC  0873               	movf	?___awmod,w
  2857  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0DAF  00C8               	movwf	??_scale
  2860  0DB0  3001               	movlw	1
  2861  0DB1                     u5945:
  2862  0DB1  1003               	clrc
  2863  0DB2  0DC8               	rlf	??_scale,f
  2864  0DB3  3EFF               	addlw	-1
  2865  0DB4  1D03               	skipz
  2866  0DB5  2DB1               	goto	u5945
  2867  0DB6  1003               	clrc
  2868  0DB7  0D48               	rlf	??_scale,w
  2869  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2870  0DB9  0084               	movwf	4
  2871  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  2872  0DBF  00C9               	movwf	??_scale+1
  2873  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  2874  0DC5  00CA               	movwf	??_scale+2
  2875  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  2876  0DCB  00CB               	movwf	??_scale+3
  2877  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  2878  0DD1  00CC               	movwf	??_scale+4
  2879  0DD2  084C               	movf	??_scale+4,w
  2880  0DD3  00AD               	movwf	___flmul@b+3
  2881  0DD4  084B               	movf	??_scale+3,w
  2882  0DD5  00AC               	movwf	___flmul@b+2
  2883  0DD6  084A               	movf	??_scale+2,w
  2884  0DD7  00AB               	movwf	___flmul@b+1
  2885  0DD8  0849               	movf	??_scale+1,w
  2886  0DD9  00AA               	movwf	___flmul@b
  2887  0DDA  300A               	movlw	10
  2888  0DDB  00A0               	movwf	___awdiv@divisor
  2889  0DDC  3000               	movlw	0
  2890  0DDD  00A1               	movwf	___awdiv@divisor+1
  2891  0DDE  0856               	movf	scale@scl,w
  2892  0DDF  00A2               	movwf	___awdiv@dividend
  2893  0DE0  01A3               	clrf	___awdiv@dividend+1
  2894  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2895  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2896  0DE3  160A  158A  24FE  120A  158A  	fcall	___awdiv
  2897  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0DEA  0820               	movf	?___awdiv,w
  2900  0DEB  00CD               	movwf	??_scale+5
  2901  0DEC  3001               	movlw	1
  2902  0DED                     u5955:
  2903  0DED  1003               	clrc
  2904  0DEE  0DCD               	rlf	??_scale+5,f
  2905  0DEF  3EFF               	addlw	-1
  2906  0DF0  1D03               	skipz
  2907  0DF1  2DED               	goto	u5955
  2908  0DF2  1003               	clrc
  2909  0DF3  0D4D               	rlf	??_scale+5,w
  2910  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2911  0DF5  0084               	movwf	4
  2912  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  2913  0DFB  00CE               	movwf	??_scale+6
  2914  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  2915  0E01  00CF               	movwf	??_scale+7
  2916  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  2917  0E07  00D0               	movwf	??_scale+8
  2918  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  2919  0E0D  00D1               	movwf	??_scale+9
  2920  0E0E  0851               	movf	??_scale+9,w
  2921  0E0F  00B1               	movwf	___flmul@a+3
  2922  0E10  0850               	movf	??_scale+8,w
  2923  0E11  00B0               	movwf	___flmul@a+2
  2924  0E12  084F               	movf	??_scale+7,w
  2925  0E13  00AF               	movwf	___flmul@a+1
  2926  0E14  084E               	movf	??_scale+6,w
  2927  0E15  00AE               	movwf	___flmul@a
  2928  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2929  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0E1D  082D               	movf	?___flmul+3,w
  2932  0E1E  00C7               	movwf	?_scale+3
  2933  0E1F  082C               	movf	?___flmul+2,w
  2934  0E20  00C6               	movwf	?_scale+2
  2935  0E21  082B               	movf	?___flmul+1,w
  2936  0E22  00C5               	movwf	?_scale+1
  2937  0E23  082A               	movf	?___flmul,w
  2938  0E24  00C4               	movwf	?_scale
  2939  0E25  2FFF               	goto	l357
  2940  0E26                     l3915:
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2943  0E26  0856               	movf	scale@scl,w
  2944  0E27  00C8               	movwf	??_scale
  2945  0E28  3001               	movlw	1
  2946  0E29                     u5965:
  2947  0E29  1003               	clrc
  2948  0E2A  0DC8               	rlf	??_scale,f
  2949  0E2B  3EFF               	addlw	-1
  2950  0E2C  1D03               	skipz
  2951  0E2D  2E29               	goto	u5965
  2952  0E2E  1003               	clrc
  2953  0E2F  0D48               	rlf	??_scale,w
  2954  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2955  0E31  0084               	movwf	4
  2956  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  2957  0E37  00C9               	movwf	??_scale+1
  2958  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  2959  0E3D  00CA               	movwf	??_scale+2
  2960  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  2961  0E43  00CB               	movwf	??_scale+3
  2962  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  2963  0E49  00CC               	movwf	??_scale+4
  2964  0E4A  084C               	movf	??_scale+4,w
  2965  0E4B  00C7               	movwf	?_scale+3
  2966  0E4C  084B               	movf	??_scale+3,w
  2967  0E4D  00C6               	movwf	?_scale+2
  2968  0E4E  084A               	movf	??_scale+2,w
  2969  0E4F  00C5               	movwf	?_scale+1
  2970  0E50  0849               	movf	??_scale+1,w
  2971  0E51  00C4               	movwf	?_scale
  2972  0E52  2FFF               	goto	l357
  2973  0E53                     l3919:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2976  0E53  0856               	movf	scale@scl,w
  2977  0E54  3A80               	xorlw	128
  2978  0E55  3E12               	addlw	-238
  2979  0E56  1C03               	skipc
  2980  0E57  2E59               	goto	u5971
  2981  0E58  2E5A               	goto	u5970
  2982  0E59                     u5971:
  2983  0E59  2F44               	goto	l3927
  2984  0E5A                     u5970:
  2985  0E5A                     l3921:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2988  0E5A  300A               	movlw	10
  2989  0E5B  00A0               	movwf	___awdiv@divisor
  2990  0E5C  3000               	movlw	0
  2991  0E5D  00A1               	movwf	___awdiv@divisor+1
  2992  0E5E  0856               	movf	scale@scl,w
  2993  0E5F  00F5               	movwf	___awmod@dividend
  2994  0E60  01F6               	clrf	___awmod@dividend+1
  2995  0E61  1BF5               	btfsc	___awmod@dividend,7
  2996  0E62  03F6               	decf	___awmod@dividend+1,f
  2997  0E63  3064               	movlw	100
  2998  0E64  00F3               	movwf	___awmod@divisor
  2999  0E65  3000               	movlw	0
  3000  0E66  00F4               	movwf	___awmod@divisor+1
  3001  0E67  160A  158A  23D7  120A  158A  	fcall	___awmod
  3002  0E6C  0874               	movf	?___awmod+1,w
  3003  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0E6F  00A3               	movwf	___awdiv@dividend+1
  3006  0E70  0873               	movf	?___awmod,w
  3007  0E71  00A2               	movwf	___awdiv@dividend
  3008  0E72  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3009  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0E79  0820               	movf	?___awdiv,w
  3012  0E7A  00C8               	movwf	??_scale
  3013  0E7B  3001               	movlw	1
  3014  0E7C                     u5985:
  3015  0E7C  1003               	clrc
  3016  0E7D  0DC8               	rlf	??_scale,f
  3017  0E7E  3EFF               	addlw	-1
  3018  0E7F  1D03               	skipz
  3019  0E80  2E7C               	goto	u5985
  3020  0E81  1003               	clrc
  3021  0E82  0D48               	rlf	??_scale,w
  3022  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3023  0E84  0084               	movwf	4
  3024  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3025  0E8A  00C9               	movwf	??_scale+1
  3026  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3027  0E90  00CA               	movwf	??_scale+2
  3028  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3029  0E96  00CB               	movwf	??_scale+3
  3030  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3031  0E9C  00CC               	movwf	??_scale+4
  3032  0E9D  084C               	movf	??_scale+4,w
  3033  0E9E  00AD               	movwf	___flmul@b+3
  3034  0E9F  084B               	movf	??_scale+3,w
  3035  0EA0  00AC               	movwf	___flmul@b+2
  3036  0EA1  084A               	movf	??_scale+2,w
  3037  0EA2  00AB               	movwf	___flmul@b+1
  3038  0EA3  0849               	movf	??_scale+1,w
  3039  0EA4  00AA               	movwf	___flmul@b
  3040  0EA5  3064               	movlw	100
  3041  0EA6  00A0               	movwf	___awdiv@divisor
  3042  0EA7  3000               	movlw	0
  3043  0EA8  00A1               	movwf	___awdiv@divisor+1
  3044  0EA9  0856               	movf	scale@scl,w
  3045  0EAA  00A2               	movwf	___awdiv@dividend
  3046  0EAB  01A3               	clrf	___awdiv@dividend+1
  3047  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3048  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3049  0EAE  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3050  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0EB5  0820               	movf	?___awdiv,w
  3053  0EB6  00CD               	movwf	??_scale+5
  3054  0EB7  3001               	movlw	1
  3055  0EB8                     u5995:
  3056  0EB8  1003               	clrc
  3057  0EB9  0DCD               	rlf	??_scale+5,f
  3058  0EBA  3EFF               	addlw	-1
  3059  0EBB  1D03               	skipz
  3060  0EBC  2EB8               	goto	u5995
  3061  0EBD  1003               	clrc
  3062  0EBE  0D4D               	rlf	??_scale+5,w
  3063  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3064  0EC0  0084               	movwf	4
  3065  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3066  0EC6  00CE               	movwf	??_scale+6
  3067  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3068  0ECC  00CF               	movwf	??_scale+7
  3069  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3070  0ED2  00D0               	movwf	??_scale+8
  3071  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3072  0ED8  00D1               	movwf	??_scale+9
  3073  0ED9  0851               	movf	??_scale+9,w
  3074  0EDA  00B1               	movwf	___flmul@a+3
  3075  0EDB  0850               	movf	??_scale+8,w
  3076  0EDC  00B0               	movwf	___flmul@a+2
  3077  0EDD  084F               	movf	??_scale+7,w
  3078  0EDE  00AF               	movwf	___flmul@a+1
  3079  0EDF  084E               	movf	??_scale+6,w
  3080  0EE0  00AE               	movwf	___flmul@a
  3081  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3082  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0EE8  082D               	movf	?___flmul+3,w
  3085  0EE9  00D5               	movwf	_scale$1269+3
  3086  0EEA  082C               	movf	?___flmul+2,w
  3087  0EEB  00D4               	movwf	_scale$1269+2
  3088  0EEC  082B               	movf	?___flmul+1,w
  3089  0EED  00D3               	movwf	_scale$1269+1
  3090  0EEE  082A               	movf	?___flmul,w
  3091  0EEF  00D2               	movwf	_scale$1269
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3094  0EF0  300A               	movlw	10
  3095  0EF1  00F3               	movwf	___awmod@divisor
  3096  0EF2  3000               	movlw	0
  3097  0EF3  00F4               	movwf	___awmod@divisor+1
  3098  0EF4  0856               	movf	scale@scl,w
  3099  0EF5  00F5               	movwf	___awmod@dividend
  3100  0EF6  01F6               	clrf	___awmod@dividend+1
  3101  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3102  0EF8  03F6               	decf	___awmod@dividend+1,f
  3103  0EF9  160A  158A  23D7  120A  158A  	fcall	___awmod
  3104  0EFE  0873               	movf	?___awmod,w
  3105  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0F01  00C8               	movwf	??_scale
  3108  0F02  3001               	movlw	1
  3109  0F03                     u6005:
  3110  0F03  1003               	clrc
  3111  0F04  0DC8               	rlf	??_scale,f
  3112  0F05  3EFF               	addlw	-1
  3113  0F06  1D03               	skipz
  3114  0F07  2F03               	goto	u6005
  3115  0F08  1003               	clrc
  3116  0F09  0D48               	rlf	??_scale,w
  3117  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3118  0F0B  0084               	movwf	4
  3119  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3120  0F11  00C9               	movwf	??_scale+1
  3121  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3122  0F17  00CA               	movwf	??_scale+2
  3123  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3124  0F1D  00CB               	movwf	??_scale+3
  3125  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3126  0F23  00CC               	movwf	??_scale+4
  3127  0F24  084C               	movf	??_scale+4,w
  3128  0F25  00AD               	movwf	___flmul@b+3
  3129  0F26  084B               	movf	??_scale+3,w
  3130  0F27  00AC               	movwf	___flmul@b+2
  3131  0F28  084A               	movf	??_scale+2,w
  3132  0F29  00AB               	movwf	___flmul@b+1
  3133  0F2A  0849               	movf	??_scale+1,w
  3134  0F2B  00AA               	movwf	___flmul@b
  3135  0F2C  0855               	movf	_scale$1269+3,w
  3136  0F2D  00B1               	movwf	___flmul@a+3
  3137  0F2E  0854               	movf	_scale$1269+2,w
  3138  0F2F  00B0               	movwf	___flmul@a+2
  3139  0F30  0853               	movf	_scale$1269+1,w
  3140  0F31  00AF               	movwf	___flmul@a+1
  3141  0F32  0852               	movf	_scale$1269,w
  3142  0F33  00AE               	movwf	___flmul@a
  3143  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3144  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0F3B  082D               	movf	?___flmul+3,w
  3147  0F3C  00C7               	movwf	?_scale+3
  3148  0F3D  082C               	movf	?___flmul+2,w
  3149  0F3E  00C6               	movwf	?_scale+2
  3150  0F3F  082B               	movf	?___flmul+1,w
  3151  0F40  00C5               	movwf	?_scale+1
  3152  0F41  082A               	movf	?___flmul,w
  3153  0F42  00C4               	movwf	?_scale
  3154  0F43  2FFF               	goto	l357
  3155  0F44                     l3927:
  3156  0F44  0856               	movf	scale@scl,w
  3157  0F45  3A80               	xorlw	128
  3158  0F46  3E75               	addlw	-139
  3159  0F47  1C03               	skipc
  3160  0F48  2F4A               	goto	u6011
  3161  0F49  2F4B               	goto	u6010
  3162  0F4A                     u6011:
  3163  0F4A  2FD3               	goto	l3933
  3164  0F4B                     u6010:
  3165  0F4B                     l3929:
  3166                           
  3167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3168  0F4B  300A               	movlw	10
  3169  0F4C  00F3               	movwf	___awmod@divisor
  3170  0F4D  3000               	movlw	0
  3171  0F4E  00F4               	movwf	___awmod@divisor+1
  3172  0F4F  0856               	movf	scale@scl,w
  3173  0F50  00F5               	movwf	___awmod@dividend
  3174  0F51  01F6               	clrf	___awmod@dividend+1
  3175  0F52  1BF5               	btfsc	___awmod@dividend,7
  3176  0F53  03F6               	decf	___awmod@dividend+1,f
  3177  0F54  160A  158A  23D7  120A  158A  	fcall	___awmod
  3178  0F59  0873               	movf	?___awmod,w
  3179  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0F5C  00C8               	movwf	??_scale
  3182  0F5D  3001               	movlw	1
  3183  0F5E                     u6025:
  3184  0F5E  1003               	clrc
  3185  0F5F  0DC8               	rlf	??_scale,f
  3186  0F60  3EFF               	addlw	-1
  3187  0F61  1D03               	skipz
  3188  0F62  2F5E               	goto	u6025
  3189  0F63  1003               	clrc
  3190  0F64  0D48               	rlf	??_scale,w
  3191  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3192  0F66  0084               	movwf	4
  3193  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3194  0F6C  00C9               	movwf	??_scale+1
  3195  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3196  0F72  00CA               	movwf	??_scale+2
  3197  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3198  0F78  00CB               	movwf	??_scale+3
  3199  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3200  0F7E  00CC               	movwf	??_scale+4
  3201  0F7F  084C               	movf	??_scale+4,w
  3202  0F80  00AD               	movwf	___flmul@b+3
  3203  0F81  084B               	movf	??_scale+3,w
  3204  0F82  00AC               	movwf	___flmul@b+2
  3205  0F83  084A               	movf	??_scale+2,w
  3206  0F84  00AB               	movwf	___flmul@b+1
  3207  0F85  0849               	movf	??_scale+1,w
  3208  0F86  00AA               	movwf	___flmul@b
  3209  0F87  300A               	movlw	10
  3210  0F88  00A0               	movwf	___awdiv@divisor
  3211  0F89  3000               	movlw	0
  3212  0F8A  00A1               	movwf	___awdiv@divisor+1
  3213  0F8B  0856               	movf	scale@scl,w
  3214  0F8C  00A2               	movwf	___awdiv@dividend
  3215  0F8D  01A3               	clrf	___awdiv@dividend+1
  3216  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3217  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3218  0F90  160A  158A  24FE  120A  158A  	fcall	___awdiv
  3219  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0F97  0820               	movf	?___awdiv,w
  3222  0F98  00CD               	movwf	??_scale+5
  3223  0F99  3001               	movlw	1
  3224  0F9A                     u6035:
  3225  0F9A  1003               	clrc
  3226  0F9B  0DCD               	rlf	??_scale+5,f
  3227  0F9C  3EFF               	addlw	-1
  3228  0F9D  1D03               	skipz
  3229  0F9E  2F9A               	goto	u6035
  3230  0F9F  1003               	clrc
  3231  0FA0  0D4D               	rlf	??_scale+5,w
  3232  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3233  0FA2  0084               	movwf	4
  3234  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3235  0FA8  00CE               	movwf	??_scale+6
  3236  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3237  0FAE  00CF               	movwf	??_scale+7
  3238  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3239  0FB4  00D0               	movwf	??_scale+8
  3240  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3241  0FBA  00D1               	movwf	??_scale+9
  3242  0FBB  0851               	movf	??_scale+9,w
  3243  0FBC  00B1               	movwf	___flmul@a+3
  3244  0FBD  0850               	movf	??_scale+8,w
  3245  0FBE  00B0               	movwf	___flmul@a+2
  3246  0FBF  084F               	movf	??_scale+7,w
  3247  0FC0  00AF               	movwf	___flmul@a+1
  3248  0FC1  084E               	movf	??_scale+6,w
  3249  0FC2  00AE               	movwf	___flmul@a
  3250  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3251  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0FCA  082D               	movf	?___flmul+3,w
  3254  0FCB  00C7               	movwf	?_scale+3
  3255  0FCC  082C               	movf	?___flmul+2,w
  3256  0FCD  00C6               	movwf	?_scale+2
  3257  0FCE  082B               	movf	?___flmul+1,w
  3258  0FCF  00C5               	movwf	?_scale+1
  3259  0FD0  082A               	movf	?___flmul,w
  3260  0FD1  00C4               	movwf	?_scale
  3261  0FD2  2FFF               	goto	l357
  3262  0FD3                     l3933:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3265  0FD3  0856               	movf	scale@scl,w
  3266  0FD4  00C8               	movwf	??_scale
  3267  0FD5  3001               	movlw	1
  3268  0FD6                     u6045:
  3269  0FD6  1003               	clrc
  3270  0FD7  0DC8               	rlf	??_scale,f
  3271  0FD8  3EFF               	addlw	-1
  3272  0FD9  1D03               	skipz
  3273  0FDA  2FD6               	goto	u6045
  3274  0FDB  1003               	clrc
  3275  0FDC  0D48               	rlf	??_scale,w
  3276  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3277  0FDE  0084               	movwf	4
  3278  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3279  0FE4  00C9               	movwf	??_scale+1
  3280  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3281  0FEA  00CA               	movwf	??_scale+2
  3282  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3283  0FF0  00CB               	movwf	??_scale+3
  3284  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3285  0FF6  00CC               	movwf	??_scale+4
  3286  0FF7  084C               	movf	??_scale+4,w
  3287  0FF8  00C7               	movwf	?_scale+3
  3288  0FF9  084B               	movf	??_scale+3,w
  3289  0FFA  00C6               	movwf	?_scale+2
  3290  0FFB  084A               	movf	??_scale+2,w
  3291  0FFC  00C5               	movwf	?_scale+1
  3292  0FFD  0849               	movf	??_scale+1,w
  3293  0FFE  00C4               	movwf	?_scale
  3294  0FFF                     l357:
  3295  0FFF  0008               	return
  3296  1000                     __end_of_scale:
  3297                           
  3298                           	psect	text3
  3299  1BD7                     __ptext3:	
  3300 ;; *************** function ___awmod *****************
  3301 ;; Defined at:
  3302 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  divisor         2    3[COMMON] int 
  3305 ;;  dividend        2    5[COMMON] int 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  sign            1    9[COMMON] unsigned char 
  3308 ;;  counter         1    8[COMMON] unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  2    3[COMMON] int 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3318 ;;      Params:         4       0       0       0       0
  3319 ;;      Locals:         2       0       0       0       0
  3320 ;;      Temps:          1       0       0       0       0
  3321 ;;      Totals:         7       0       0       0       0
  3322 ;;Total ram usage:        7 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 2
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_scale
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           
  3333                           ;psect for function ___awmod
  3334  1BD7                     ___awmod:
  3335  1BD7                     l2487:	
  3336                           ;incstack = 0
  3337                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3338                           
  3339  1BD7  01F9               	clrf	___awmod@sign
  3340  1BD8                     l2489:
  3341  1BD8  1FF6               	btfss	___awmod@dividend+1,7
  3342  1BD9  2BDB               	goto	u3071
  3343  1BDA  2BDC               	goto	u3070
  3344  1BDB                     u3071:
  3345  1BDB  2BE3               	goto	l2495
  3346  1BDC                     u3070:
  3347  1BDC                     l2491:
  3348  1BDC  09F5               	comf	___awmod@dividend,f
  3349  1BDD  09F6               	comf	___awmod@dividend+1,f
  3350  1BDE  0AF5               	incf	___awmod@dividend,f
  3351  1BDF  1903               	skipnz
  3352  1BE0  0AF6               	incf	___awmod@dividend+1,f
  3353  1BE1                     l2493:
  3354  1BE1  01F9               	clrf	___awmod@sign
  3355  1BE2  0AF9               	incf	___awmod@sign,f
  3356  1BE3                     l2495:
  3357  1BE3  1FF4               	btfss	___awmod@divisor+1,7
  3358  1BE4  2BE6               	goto	u3081
  3359  1BE5  2BE7               	goto	u3080
  3360  1BE6                     u3081:
  3361  1BE6  2BEC               	goto	l2499
  3362  1BE7                     u3080:
  3363  1BE7                     l2497:
  3364  1BE7  09F3               	comf	___awmod@divisor,f
  3365  1BE8  09F4               	comf	___awmod@divisor+1,f
  3366  1BE9  0AF3               	incf	___awmod@divisor,f
  3367  1BEA  1903               	skipnz
  3368  1BEB  0AF4               	incf	___awmod@divisor+1,f
  3369  1BEC                     l2499:
  3370  1BEC  0873               	movf	___awmod@divisor,w
  3371  1BED  0474               	iorwf	___awmod@divisor+1,w
  3372  1BEE  1903               	btfsc	3,2
  3373  1BEF  2BF1               	goto	u3091
  3374  1BF0  2BF2               	goto	u3090
  3375  1BF1                     u3091:
  3376  1BF1  2C21               	goto	l2517
  3377  1BF2                     u3090:
  3378  1BF2                     l2501:
  3379  1BF2  01F8               	clrf	___awmod@counter
  3380  1BF3  0AF8               	incf	___awmod@counter,f
  3381  1BF4  2C00               	goto	l2507
  3382  1BF5                     l2503:
  3383  1BF5  3001               	movlw	1
  3384  1BF6                     u3105:
  3385  1BF6  1003               	clrc
  3386  1BF7  0DF3               	rlf	___awmod@divisor,f
  3387  1BF8  0DF4               	rlf	___awmod@divisor+1,f
  3388  1BF9  3EFF               	addlw	-1
  3389  1BFA  1D03               	skipz
  3390  1BFB  2BF6               	goto	u3105
  3391  1BFC                     l2505:
  3392  1BFC  3001               	movlw	1
  3393  1BFD  00F7               	movwf	??___awmod
  3394  1BFE  0877               	movf	??___awmod,w
  3395  1BFF  07F8               	addwf	___awmod@counter,f
  3396  1C00                     l2507:
  3397  1C00  1FF4               	btfss	___awmod@divisor+1,7
  3398  1C01  2C03               	goto	u3111
  3399  1C02  2C04               	goto	u3110
  3400  1C03                     u3111:
  3401  1C03  2BF5               	goto	l2503
  3402  1C04                     u3110:
  3403  1C04                     l2509:
  3404  1C04  0874               	movf	___awmod@divisor+1,w
  3405  1C05  0276               	subwf	___awmod@dividend+1,w
  3406  1C06  1D03               	skipz
  3407  1C07  2C0A               	goto	u3125
  3408  1C08  0873               	movf	___awmod@divisor,w
  3409  1C09  0275               	subwf	___awmod@dividend,w
  3410  1C0A                     u3125:
  3411  1C0A  1C03               	skipc
  3412  1C0B  2C0D               	goto	u3121
  3413  1C0C  2C0E               	goto	u3120
  3414  1C0D                     u3121:
  3415  1C0D  2C14               	goto	l2513
  3416  1C0E                     u3120:
  3417  1C0E                     l2511:
  3418  1C0E  0873               	movf	___awmod@divisor,w
  3419  1C0F  02F5               	subwf	___awmod@dividend,f
  3420  1C10  0874               	movf	___awmod@divisor+1,w
  3421  1C11  1C03               	skipc
  3422  1C12  03F6               	decf	___awmod@dividend+1,f
  3423  1C13  02F6               	subwf	___awmod@dividend+1,f
  3424  1C14                     l2513:
  3425  1C14  3001               	movlw	1
  3426  1C15                     u3135:
  3427  1C15  1003               	clrc
  3428  1C16  0CF4               	rrf	___awmod@divisor+1,f
  3429  1C17  0CF3               	rrf	___awmod@divisor,f
  3430  1C18  3EFF               	addlw	-1
  3431  1C19  1D03               	skipz
  3432  1C1A  2C15               	goto	u3135
  3433  1C1B                     l2515:
  3434  1C1B  3001               	movlw	1
  3435  1C1C  02F8               	subwf	___awmod@counter,f
  3436  1C1D  1D03               	btfss	3,2
  3437  1C1E  2C20               	goto	u3141
  3438  1C1F  2C21               	goto	u3140
  3439  1C20                     u3141:
  3440  1C20  2C04               	goto	l2509
  3441  1C21                     u3140:
  3442  1C21                     l2517:
  3443  1C21  0879               	movf	___awmod@sign,w
  3444  1C22  1903               	btfsc	3,2
  3445  1C23  2C25               	goto	u3151
  3446  1C24  2C26               	goto	u3150
  3447  1C25                     u3151:
  3448  1C25  2C2B               	goto	l2521
  3449  1C26                     u3150:
  3450  1C26                     l2519:
  3451  1C26  09F5               	comf	___awmod@dividend,f
  3452  1C27  09F6               	comf	___awmod@dividend+1,f
  3453  1C28  0AF5               	incf	___awmod@dividend,f
  3454  1C29  1903               	skipnz
  3455  1C2A  0AF6               	incf	___awmod@dividend+1,f
  3456  1C2B                     l2521:
  3457  1C2B  0876               	movf	___awmod@dividend+1,w
  3458  1C2C  00F4               	movwf	?___awmod+1
  3459  1C2D  0875               	movf	___awmod@dividend,w
  3460  1C2E  00F3               	movwf	?___awmod
  3461  1C2F                     l602:
  3462  1C2F  0008               	return
  3463  1C30                     __end_of___awmod:
  3464                           
  3465                           	psect	text4
  3466  1CFE                     __ptext4:	
  3467 ;; *************** function ___awdiv *****************
  3468 ;; Defined at:
  3469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  divisor         2    0[BANK0 ] int 
  3472 ;;  dividend        2    2[BANK0 ] int 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  quotient        2    7[BANK0 ] int 
  3475 ;;  sign            1    6[BANK0 ] unsigned char 
  3476 ;;  counter         1    5[BANK0 ] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  2    0[BANK0 ] int 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3486 ;;      Params:         0       4       0       0       0
  3487 ;;      Locals:         0       4       0       0       0
  3488 ;;      Temps:          0       1       0       0       0
  3489 ;;      Totals:         0       9       0       0       0
  3490 ;;Total ram usage:        9 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 2
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_scale
  3497 ;;		_sprintf
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function ___awdiv
  3503  1CFE                     ___awdiv:
  3504  1CFE                     l3825:	
  3505                           ;incstack = 0
  3506                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3507                           
  3508  1CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3509  1CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3510  1D00  01A6               	clrf	___awdiv@sign
  3511  1D01                     l3827:
  3512  1D01  1FA1               	btfss	___awdiv@divisor+1,7
  3513  1D02  2D04               	goto	u5781
  3514  1D03  2D05               	goto	u5780
  3515  1D04                     u5781:
  3516  1D04  2D0C               	goto	l3833
  3517  1D05                     u5780:
  3518  1D05                     l3829:
  3519  1D05  09A0               	comf	___awdiv@divisor,f
  3520  1D06  09A1               	comf	___awdiv@divisor+1,f
  3521  1D07  0AA0               	incf	___awdiv@divisor,f
  3522  1D08  1903               	skipnz
  3523  1D09  0AA1               	incf	___awdiv@divisor+1,f
  3524  1D0A                     l3831:
  3525  1D0A  01A6               	clrf	___awdiv@sign
  3526  1D0B  0AA6               	incf	___awdiv@sign,f
  3527  1D0C                     l3833:
  3528  1D0C  1FA3               	btfss	___awdiv@dividend+1,7
  3529  1D0D  2D0F               	goto	u5791
  3530  1D0E  2D10               	goto	u5790
  3531  1D0F                     u5791:
  3532  1D0F  2D19               	goto	l3839
  3533  1D10                     u5790:
  3534  1D10                     l3835:
  3535  1D10  09A2               	comf	___awdiv@dividend,f
  3536  1D11  09A3               	comf	___awdiv@dividend+1,f
  3537  1D12  0AA2               	incf	___awdiv@dividend,f
  3538  1D13  1903               	skipnz
  3539  1D14  0AA3               	incf	___awdiv@dividend+1,f
  3540  1D15                     l3837:
  3541  1D15  3001               	movlw	1
  3542  1D16  00A4               	movwf	??___awdiv
  3543  1D17  0824               	movf	??___awdiv,w
  3544  1D18  06A6               	xorwf	___awdiv@sign,f
  3545  1D19                     l3839:
  3546  1D19  01A7               	clrf	___awdiv@quotient
  3547  1D1A  01A8               	clrf	___awdiv@quotient+1
  3548  1D1B                     l3841:
  3549  1D1B  0820               	movf	___awdiv@divisor,w
  3550  1D1C  0421               	iorwf	___awdiv@divisor+1,w
  3551  1D1D  1903               	btfsc	3,2
  3552  1D1E  2D20               	goto	u5801
  3553  1D1F  2D21               	goto	u5800
  3554  1D20                     u5801:
  3555  1D20  2D58               	goto	l3861
  3556  1D21                     u5800:
  3557  1D21                     l3843:
  3558  1D21  01A5               	clrf	___awdiv@counter
  3559  1D22  0AA5               	incf	___awdiv@counter,f
  3560  1D23  2D2F               	goto	l3849
  3561  1D24                     l3845:
  3562  1D24  3001               	movlw	1
  3563  1D25                     u5815:
  3564  1D25  1003               	clrc
  3565  1D26  0DA0               	rlf	___awdiv@divisor,f
  3566  1D27  0DA1               	rlf	___awdiv@divisor+1,f
  3567  1D28  3EFF               	addlw	-1
  3568  1D29  1D03               	skipz
  3569  1D2A  2D25               	goto	u5815
  3570  1D2B                     l3847:
  3571  1D2B  3001               	movlw	1
  3572  1D2C  00A4               	movwf	??___awdiv
  3573  1D2D  0824               	movf	??___awdiv,w
  3574  1D2E  07A5               	addwf	___awdiv@counter,f
  3575  1D2F                     l3849:
  3576  1D2F  1FA1               	btfss	___awdiv@divisor+1,7
  3577  1D30  2D32               	goto	u5821
  3578  1D31  2D33               	goto	u5820
  3579  1D32                     u5821:
  3580  1D32  2D24               	goto	l3845
  3581  1D33                     u5820:
  3582  1D33                     l3851:
  3583  1D33  3001               	movlw	1
  3584  1D34                     u5835:
  3585  1D34  1003               	clrc
  3586  1D35  0DA7               	rlf	___awdiv@quotient,f
  3587  1D36  0DA8               	rlf	___awdiv@quotient+1,f
  3588  1D37  3EFF               	addlw	-1
  3589  1D38  1D03               	skipz
  3590  1D39  2D34               	goto	u5835
  3591  1D3A  0821               	movf	___awdiv@divisor+1,w
  3592  1D3B  0223               	subwf	___awdiv@dividend+1,w
  3593  1D3C  1D03               	skipz
  3594  1D3D  2D40               	goto	u5845
  3595  1D3E  0820               	movf	___awdiv@divisor,w
  3596  1D3F  0222               	subwf	___awdiv@dividend,w
  3597  1D40                     u5845:
  3598  1D40  1C03               	skipc
  3599  1D41  2D43               	goto	u5841
  3600  1D42  2D44               	goto	u5840
  3601  1D43                     u5841:
  3602  1D43  2D4B               	goto	l3857
  3603  1D44                     u5840:
  3604  1D44                     l3853:
  3605  1D44  0820               	movf	___awdiv@divisor,w
  3606  1D45  02A2               	subwf	___awdiv@dividend,f
  3607  1D46  0821               	movf	___awdiv@divisor+1,w
  3608  1D47  1C03               	skipc
  3609  1D48  03A3               	decf	___awdiv@dividend+1,f
  3610  1D49  02A3               	subwf	___awdiv@dividend+1,f
  3611  1D4A                     l3855:
  3612  1D4A  1427               	bsf	___awdiv@quotient,0
  3613  1D4B                     l3857:
  3614  1D4B  3001               	movlw	1
  3615  1D4C                     u5855:
  3616  1D4C  1003               	clrc
  3617  1D4D  0CA1               	rrf	___awdiv@divisor+1,f
  3618  1D4E  0CA0               	rrf	___awdiv@divisor,f
  3619  1D4F  3EFF               	addlw	-1
  3620  1D50  1D03               	skipz
  3621  1D51  2D4C               	goto	u5855
  3622  1D52                     l3859:
  3623  1D52  3001               	movlw	1
  3624  1D53  02A5               	subwf	___awdiv@counter,f
  3625  1D54  1D03               	btfss	3,2
  3626  1D55  2D57               	goto	u5861
  3627  1D56  2D58               	goto	u5860
  3628  1D57                     u5861:
  3629  1D57  2D33               	goto	l3851
  3630  1D58                     u5860:
  3631  1D58                     l3861:
  3632  1D58  0826               	movf	___awdiv@sign,w
  3633  1D59  1903               	btfsc	3,2
  3634  1D5A  2D5C               	goto	u5871
  3635  1D5B  2D5D               	goto	u5870
  3636  1D5C                     u5871:
  3637  1D5C  2D62               	goto	l3865
  3638  1D5D                     u5870:
  3639  1D5D                     l3863:
  3640  1D5D  09A7               	comf	___awdiv@quotient,f
  3641  1D5E  09A8               	comf	___awdiv@quotient+1,f
  3642  1D5F  0AA7               	incf	___awdiv@quotient,f
  3643  1D60  1903               	skipnz
  3644  1D61  0AA8               	incf	___awdiv@quotient+1,f
  3645  1D62                     l3865:
  3646  1D62  0828               	movf	___awdiv@quotient+1,w
  3647  1D63  00A1               	movwf	?___awdiv+1
  3648  1D64  0827               	movf	___awdiv@quotient,w
  3649  1D65  00A0               	movwf	?___awdiv
  3650  1D66                     l589:
  3651  1D66  0008               	return
  3652  1D67                     __end_of___awdiv:
  3653                           
  3654                           	psect	text5
  3655  07E6                     __ptext5:	
  3656 ;; *************** function _isdigit *****************
  3657 ;; Defined at:
  3658 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  c               1    wreg     unsigned char 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  c               1    4[COMMON] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;		None               void
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3672 ;;      Params:         0       0       0       0       0
  3673 ;;      Locals:         2       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0
  3675 ;;      Totals:         2       0       0       0       0
  3676 ;;Total ram usage:        2 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 2
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_sprintf
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _isdigit
  3688  07E6                     _isdigit:
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3692                           ;isdigit@c stored from wreg
  3693  07E6  00F4               	movwf	isdigit@c
  3694  07E7                     l2997:
  3695  07E7  01F3               	clrf	_isdigit$1079
  3696  07E8                     l2999:
  3697  07E8  303A               	movlw	58
  3698  07E9  0274               	subwf	isdigit@c,w
  3699  07EA  1803               	skipnc
  3700  07EB  2FED               	goto	u4381
  3701  07EC  2FEE               	goto	u4380
  3702  07ED                     u4381:
  3703  07ED  2FF6               	goto	l3005
  3704  07EE                     u4380:
  3705  07EE                     l3001:
  3706  07EE  3030               	movlw	48
  3707  07EF  0274               	subwf	isdigit@c,w
  3708  07F0  1C03               	skipc
  3709  07F1  2FF3               	goto	u4391
  3710  07F2  2FF4               	goto	u4390
  3711  07F3                     u4391:
  3712  07F3  2FF6               	goto	l3005
  3713  07F4                     u4390:
  3714  07F4                     l3003:
  3715  07F4  01F3               	clrf	_isdigit$1079
  3716  07F5  0AF3               	incf	_isdigit$1079,f
  3717  07F6                     l3005:
  3718  07F6  0C73               	rrf	_isdigit$1079,w
  3719  07F7                     l923:
  3720  07F7  0008               	return
  3721  07F8                     __end_of_isdigit:
  3722                           
  3723                           	psect	text6
  3724  05D9                     __ptext6:	
  3725 ;; *************** function _fround *****************
  3726 ;; Defined at:
  3727 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  prec            1    wreg     unsigned char 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  prec            1   55[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  4   36[BANK0 ] unsigned char 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       4       0       0       0
  3742 ;;      Locals:         0       9       0       0       0
  3743 ;;      Temps:          0       7       0       0       0
  3744 ;;      Totals:         0      20       0       0       0
  3745 ;;Total ram usage:       20 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 4
  3748 ;; This function calls:
  3749 ;;		___flmul
  3750 ;;		___lwdiv
  3751 ;;		___lwmod
  3752 ;; This function is called by:
  3753 ;;		_sprintf
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _fround
  3759  05D9                     _fround:
  3760                           
  3761                           ;incstack = 0
  3762                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3763                           ;fround@prec stored from wreg
  3764  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3765  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3766  05DB  00D7               	movwf	fround@prec
  3767  05DC                     l2939:
  3768                           
  3769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3770  05DC  306E               	movlw	110
  3771  05DD  0257               	subwf	fround@prec,w
  3772  05DE  1C03               	skipc
  3773  05DF  2DE1               	goto	u4131
  3774  05E0  2DE2               	goto	u4130
  3775  05E1                     u4131:
  3776  05E1  2EF1               	goto	l2947
  3777  05E2                     u4130:
  3778  05E2                     l2941:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3781  05E2  303F               	movlw	63
  3782  05E3  00AD               	movwf	___flmul@b+3
  3783  05E4  3000               	movlw	0
  3784  05E5  00AC               	movwf	___flmul@b+2
  3785  05E6  3000               	movlw	0
  3786  05E7  00AB               	movwf	___flmul@b+1
  3787  05E8  3000               	movlw	0
  3788  05E9  00AA               	movwf	___flmul@b
  3789  05EA  3064               	movlw	100
  3790  05EB  00A0               	movwf	___lwdiv@divisor
  3791  05EC  3000               	movlw	0
  3792  05ED  00A1               	movwf	___lwdiv@divisor+1
  3793  05EE  0857               	movf	fround@prec,w
  3794  05EF  00C8               	movwf	??_fround
  3795  05F0  01C9               	clrf	??_fround+1
  3796  05F1  0848               	movf	??_fround,w
  3797  05F2  00A2               	movwf	___lwdiv@dividend
  3798  05F3  0849               	movf	??_fround+1,w
  3799  05F4  00A3               	movwf	___lwdiv@dividend+1
  3800  05F5  160A  158A  22EB  120A  118A  	fcall	___lwdiv
  3801  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3802  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3803  05FC  0820               	movf	?___lwdiv,w
  3804  05FD  00CA               	movwf	??_fround+2
  3805  05FE  3001               	movlw	1
  3806  05FF                     u4145:
  3807  05FF  1003               	clrc
  3808  0600  0DCA               	rlf	??_fround+2,f
  3809  0601  3EFF               	addlw	-1
  3810  0602  1D03               	skipz
  3811  0603  2DFF               	goto	u4145
  3812  0604  1003               	clrc
  3813  0605  0D4A               	rlf	??_fround+2,w
  3814  0606  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3815  0607  0084               	movwf	4
  3816  0608  160A  118A  200A  120A  118A  	fcall	stringdir
  3817  060D  00CB               	movwf	??_fround+3
  3818  060E  160A  118A  200A  120A  118A  	fcall	stringdir
  3819  0613  00CC               	movwf	??_fround+4
  3820  0614  160A  118A  200A  120A  118A  	fcall	stringdir
  3821  0619  00CD               	movwf	??_fround+5
  3822  061A  160A  118A  200A  120A  118A  	fcall	stringdir
  3823  061F  00CE               	movwf	??_fround+6
  3824  0620  084E               	movf	??_fround+6,w
  3825  0621  00B1               	movwf	___flmul@a+3
  3826  0622  084D               	movf	??_fround+5,w
  3827  0623  00B0               	movwf	___flmul@a+2
  3828  0624  084C               	movf	??_fround+4,w
  3829  0625  00AF               	movwf	___flmul@a+1
  3830  0626  084B               	movf	??_fround+3,w
  3831  0627  00AE               	movwf	___flmul@a
  3832  0628  120A  158A  213C  120A  118A  	fcall	___flmul
  3833  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3834  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3835  062F  082D               	movf	?___flmul+3,w
  3836  0630  00D6               	movwf	_fround$1267+3
  3837  0631  082C               	movf	?___flmul+2,w
  3838  0632  00D5               	movwf	_fround$1267+2
  3839  0633  082B               	movf	?___flmul+1,w
  3840  0634  00D4               	movwf	_fround$1267+1
  3841  0635  082A               	movf	?___flmul,w
  3842  0636  00D3               	movwf	_fround$1267
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3845  0637  300A               	movlw	10
  3846  0638  00A0               	movwf	___lwdiv@divisor
  3847  0639  3000               	movlw	0
  3848  063A  00A1               	movwf	___lwdiv@divisor+1
  3849  063B  0857               	movf	fround@prec,w
  3850  063C  00C8               	movwf	??_fround
  3851  063D  01C9               	clrf	??_fround+1
  3852  063E  0848               	movf	??_fround,w
  3853  063F  00F5               	movwf	___lwmod@dividend
  3854  0640  0849               	movf	??_fround+1,w
  3855  0641  00F6               	movwf	___lwmod@dividend+1
  3856  0642  3064               	movlw	100
  3857  0643  00F3               	movwf	___lwmod@divisor
  3858  0644  3000               	movlw	0
  3859  0645  00F4               	movwf	___lwmod@divisor+1
  3860  0646  160A  158A  222F  120A  118A  	fcall	___lwmod
  3861  064B  0874               	movf	?___lwmod+1,w
  3862  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3863  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3864  064E  00A3               	movwf	___lwdiv@dividend+1
  3865  064F  0873               	movf	?___lwmod,w
  3866  0650  00A2               	movwf	___lwdiv@dividend
  3867  0651  160A  158A  22EB  120A  118A  	fcall	___lwdiv
  3868  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0657  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0658  0820               	movf	?___lwdiv,w
  3871  0659  00CA               	movwf	??_fround+2
  3872  065A  3001               	movlw	1
  3873  065B                     u4155:
  3874  065B  1003               	clrc
  3875  065C  0DCA               	rlf	??_fround+2,f
  3876  065D  3EFF               	addlw	-1
  3877  065E  1D03               	skipz
  3878  065F  2E5B               	goto	u4155
  3879  0660  1003               	clrc
  3880  0661  0D4A               	rlf	??_fround+2,w
  3881  0662  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3882  0663  0084               	movwf	4
  3883  0664  160A  118A  200A  120A  118A  	fcall	stringdir
  3884  0669  00CB               	movwf	??_fround+3
  3885  066A  160A  118A  200A  120A  118A  	fcall	stringdir
  3886  066F  00CC               	movwf	??_fround+4
  3887  0670  160A  118A  200A  120A  118A  	fcall	stringdir
  3888  0675  00CD               	movwf	??_fround+5
  3889  0676  160A  118A  200A  120A  118A  	fcall	stringdir
  3890  067B  00CE               	movwf	??_fround+6
  3891  067C  084E               	movf	??_fround+6,w
  3892  067D  00AD               	movwf	___flmul@b+3
  3893  067E  084D               	movf	??_fround+5,w
  3894  067F  00AC               	movwf	___flmul@b+2
  3895  0680  084C               	movf	??_fround+4,w
  3896  0681  00AB               	movwf	___flmul@b+1
  3897  0682  084B               	movf	??_fround+3,w
  3898  0683  00AA               	movwf	___flmul@b
  3899  0684  0856               	movf	_fround$1267+3,w
  3900  0685  00B1               	movwf	___flmul@a+3
  3901  0686  0855               	movf	_fround$1267+2,w
  3902  0687  00B0               	movwf	___flmul@a+2
  3903  0688  0854               	movf	_fround$1267+1,w
  3904  0689  00AF               	movwf	___flmul@a+1
  3905  068A  0853               	movf	_fround$1267,w
  3906  068B  00AE               	movwf	___flmul@a
  3907  068C  120A  158A  213C  120A  118A  	fcall	___flmul
  3908  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3909  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3910  0693  082D               	movf	?___flmul+3,w
  3911  0694  00D2               	movwf	_fround$1268+3
  3912  0695  082C               	movf	?___flmul+2,w
  3913  0696  00D1               	movwf	_fround$1268+2
  3914  0697  082B               	movf	?___flmul+1,w
  3915  0698  00D0               	movwf	_fround$1268+1
  3916  0699  082A               	movf	?___flmul,w
  3917  069A  00CF               	movwf	_fround$1268
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3920  069B  300A               	movlw	10
  3921  069C  00F3               	movwf	___lwmod@divisor
  3922  069D  3000               	movlw	0
  3923  069E  00F4               	movwf	___lwmod@divisor+1
  3924  069F  0857               	movf	fround@prec,w
  3925  06A0  00C8               	movwf	??_fround
  3926  06A1  01C9               	clrf	??_fround+1
  3927  06A2  0848               	movf	??_fround,w
  3928  06A3  00F5               	movwf	___lwmod@dividend
  3929  06A4  0849               	movf	??_fround+1,w
  3930  06A5  00F6               	movwf	___lwmod@dividend+1
  3931  06A6  160A  158A  222F  120A  118A  	fcall	___lwmod
  3932  06AB  0873               	movf	?___lwmod,w
  3933  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  3934  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  3935  06AE  00CA               	movwf	??_fround+2
  3936  06AF  3001               	movlw	1
  3937  06B0                     u4165:
  3938  06B0  1003               	clrc
  3939  06B1  0DCA               	rlf	??_fround+2,f
  3940  06B2  3EFF               	addlw	-1
  3941  06B3  1D03               	skipz
  3942  06B4  2EB0               	goto	u4165
  3943  06B5  1003               	clrc
  3944  06B6  0D4A               	rlf	??_fround+2,w
  3945  06B7  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3946  06B8  0084               	movwf	4
  3947  06B9  160A  118A  200A  120A  118A  	fcall	stringdir
  3948  06BE  00CB               	movwf	??_fround+3
  3949  06BF  160A  118A  200A  120A  118A  	fcall	stringdir
  3950  06C4  00CC               	movwf	??_fround+4
  3951  06C5  160A  118A  200A  120A  118A  	fcall	stringdir
  3952  06CA  00CD               	movwf	??_fround+5
  3953  06CB  160A  118A  200A  120A  118A  	fcall	stringdir
  3954  06D0  00CE               	movwf	??_fround+6
  3955  06D1  084E               	movf	??_fround+6,w
  3956  06D2  00AD               	movwf	___flmul@b+3
  3957  06D3  084D               	movf	??_fround+5,w
  3958  06D4  00AC               	movwf	___flmul@b+2
  3959  06D5  084C               	movf	??_fround+4,w
  3960  06D6  00AB               	movwf	___flmul@b+1
  3961  06D7  084B               	movf	??_fround+3,w
  3962  06D8  00AA               	movwf	___flmul@b
  3963  06D9  0852               	movf	_fround$1268+3,w
  3964  06DA  00B1               	movwf	___flmul@a+3
  3965  06DB  0851               	movf	_fround$1268+2,w
  3966  06DC  00B0               	movwf	___flmul@a+2
  3967  06DD  0850               	movf	_fround$1268+1,w
  3968  06DE  00AF               	movwf	___flmul@a+1
  3969  06DF  084F               	movf	_fround$1268,w
  3970  06E0  00AE               	movwf	___flmul@a
  3971  06E1  120A  158A  213C  120A  118A  	fcall	___flmul
  3972  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  3973  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  3974  06E8  082D               	movf	?___flmul+3,w
  3975  06E9  00C7               	movwf	?_fround+3
  3976  06EA  082C               	movf	?___flmul+2,w
  3977  06EB  00C6               	movwf	?_fround+2
  3978  06EC  082B               	movf	?___flmul+1,w
  3979  06ED  00C5               	movwf	?_fround+1
  3980  06EE  082A               	movf	?___flmul,w
  3981  06EF  00C4               	movwf	?_fround
  3982  06F0  2FE5               	goto	l350
  3983  06F1                     l2947:
  3984  06F1  300B               	movlw	11
  3985  06F2  0257               	subwf	fround@prec,w
  3986  06F3  1C03               	skipc
  3987  06F4  2EF6               	goto	u4171
  3988  06F5  2EF7               	goto	u4170
  3989  06F6                     u4171:
  3990  06F6  2FA2               	goto	l2953
  3991  06F7                     u4170:
  3992  06F7                     l2949:
  3993                           
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3995  06F7  303F               	movlw	63
  3996  06F8  00AD               	movwf	___flmul@b+3
  3997  06F9  3000               	movlw	0
  3998  06FA  00AC               	movwf	___flmul@b+2
  3999  06FB  3000               	movlw	0
  4000  06FC  00AB               	movwf	___flmul@b+1
  4001  06FD  3000               	movlw	0
  4002  06FE  00AA               	movwf	___flmul@b
  4003  06FF  300A               	movlw	10
  4004  0700  00A0               	movwf	___lwdiv@divisor
  4005  0701  3000               	movlw	0
  4006  0702  00A1               	movwf	___lwdiv@divisor+1
  4007  0703  0857               	movf	fround@prec,w
  4008  0704  00C8               	movwf	??_fround
  4009  0705  01C9               	clrf	??_fround+1
  4010  0706  0848               	movf	??_fround,w
  4011  0707  00A2               	movwf	___lwdiv@dividend
  4012  0708  0849               	movf	??_fround+1,w
  4013  0709  00A3               	movwf	___lwdiv@dividend+1
  4014  070A  160A  158A  22EB  120A  118A  	fcall	___lwdiv
  4015  070F  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0710  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0711  0820               	movf	?___lwdiv,w
  4018  0712  00CA               	movwf	??_fround+2
  4019  0713  3001               	movlw	1
  4020  0714                     u4185:
  4021  0714  1003               	clrc
  4022  0715  0DCA               	rlf	??_fround+2,f
  4023  0716  3EFF               	addlw	-1
  4024  0717  1D03               	skipz
  4025  0718  2F14               	goto	u4185
  4026  0719  1003               	clrc
  4027  071A  0D4A               	rlf	??_fround+2,w
  4028  071B  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4029  071C  0084               	movwf	4
  4030  071D  160A  118A  200A  120A  118A  	fcall	stringdir
  4031  0722  00CB               	movwf	??_fround+3
  4032  0723  160A  118A  200A  120A  118A  	fcall	stringdir
  4033  0728  00CC               	movwf	??_fround+4
  4034  0729  160A  118A  200A  120A  118A  	fcall	stringdir
  4035  072E  00CD               	movwf	??_fround+5
  4036  072F  160A  118A  200A  120A  118A  	fcall	stringdir
  4037  0734  00CE               	movwf	??_fround+6
  4038  0735  084E               	movf	??_fround+6,w
  4039  0736  00B1               	movwf	___flmul@a+3
  4040  0737  084D               	movf	??_fround+5,w
  4041  0738  00B0               	movwf	___flmul@a+2
  4042  0739  084C               	movf	??_fround+4,w
  4043  073A  00AF               	movwf	___flmul@a+1
  4044  073B  084B               	movf	??_fround+3,w
  4045  073C  00AE               	movwf	___flmul@a
  4046  073D  120A  158A  213C  120A  118A  	fcall	___flmul
  4047  0742  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0743  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0744  082D               	movf	?___flmul+3,w
  4050  0745  00D6               	movwf	_fround$1267+3
  4051  0746  082C               	movf	?___flmul+2,w
  4052  0747  00D5               	movwf	_fround$1267+2
  4053  0748  082B               	movf	?___flmul+1,w
  4054  0749  00D4               	movwf	_fround$1267+1
  4055  074A  082A               	movf	?___flmul,w
  4056  074B  00D3               	movwf	_fround$1267
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4059  074C  300A               	movlw	10
  4060  074D  00F3               	movwf	___lwmod@divisor
  4061  074E  3000               	movlw	0
  4062  074F  00F4               	movwf	___lwmod@divisor+1
  4063  0750  0857               	movf	fround@prec,w
  4064  0751  00C8               	movwf	??_fround
  4065  0752  01C9               	clrf	??_fround+1
  4066  0753  0848               	movf	??_fround,w
  4067  0754  00F5               	movwf	___lwmod@dividend
  4068  0755  0849               	movf	??_fround+1,w
  4069  0756  00F6               	movwf	___lwmod@dividend+1
  4070  0757  160A  158A  222F  120A  118A  	fcall	___lwmod
  4071  075C  0873               	movf	?___lwmod,w
  4072  075D  1283               	bcf	3,5	;RP0=0, select bank0
  4073  075E  1303               	bcf	3,6	;RP1=0, select bank0
  4074  075F  00CA               	movwf	??_fround+2
  4075  0760  3001               	movlw	1
  4076  0761                     u4195:
  4077  0761  1003               	clrc
  4078  0762  0DCA               	rlf	??_fround+2,f
  4079  0763  3EFF               	addlw	-1
  4080  0764  1D03               	skipz
  4081  0765  2F61               	goto	u4195
  4082  0766  1003               	clrc
  4083  0767  0D4A               	rlf	??_fround+2,w
  4084  0768  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4085  0769  0084               	movwf	4
  4086  076A  160A  118A  200A  120A  118A  	fcall	stringdir
  4087  076F  00CB               	movwf	??_fround+3
  4088  0770  160A  118A  200A  120A  118A  	fcall	stringdir
  4089  0775  00CC               	movwf	??_fround+4
  4090  0776  160A  118A  200A  120A  118A  	fcall	stringdir
  4091  077B  00CD               	movwf	??_fround+5
  4092  077C  160A  118A  200A  120A  118A  	fcall	stringdir
  4093  0781  00CE               	movwf	??_fround+6
  4094  0782  084E               	movf	??_fround+6,w
  4095  0783  00AD               	movwf	___flmul@b+3
  4096  0784  084D               	movf	??_fround+5,w
  4097  0785  00AC               	movwf	___flmul@b+2
  4098  0786  084C               	movf	??_fround+4,w
  4099  0787  00AB               	movwf	___flmul@b+1
  4100  0788  084B               	movf	??_fround+3,w
  4101  0789  00AA               	movwf	___flmul@b
  4102  078A  0856               	movf	_fround$1267+3,w
  4103  078B  00B1               	movwf	___flmul@a+3
  4104  078C  0855               	movf	_fround$1267+2,w
  4105  078D  00B0               	movwf	___flmul@a+2
  4106  078E  0854               	movf	_fround$1267+1,w
  4107  078F  00AF               	movwf	___flmul@a+1
  4108  0790  0853               	movf	_fround$1267,w
  4109  0791  00AE               	movwf	___flmul@a
  4110  0792  120A  158A  213C  120A  118A  	fcall	___flmul
  4111  0797  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0798  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0799  082D               	movf	?___flmul+3,w
  4114  079A  00C7               	movwf	?_fround+3
  4115  079B  082C               	movf	?___flmul+2,w
  4116  079C  00C6               	movwf	?_fround+2
  4117  079D  082B               	movf	?___flmul+1,w
  4118  079E  00C5               	movwf	?_fround+1
  4119  079F  082A               	movf	?___flmul,w
  4120  07A0  00C4               	movwf	?_fround
  4121  07A1  2FE5               	goto	l350
  4122  07A2                     l2953:
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4125  07A2  303F               	movlw	63
  4126  07A3  00AD               	movwf	___flmul@b+3
  4127  07A4  3000               	movlw	0
  4128  07A5  00AC               	movwf	___flmul@b+2
  4129  07A6  3000               	movlw	0
  4130  07A7  00AB               	movwf	___flmul@b+1
  4131  07A8  3000               	movlw	0
  4132  07A9  00AA               	movwf	___flmul@b
  4133  07AA  0857               	movf	fround@prec,w
  4134  07AB  00C8               	movwf	??_fround
  4135  07AC  3001               	movlw	1
  4136  07AD                     u4205:
  4137  07AD  1003               	clrc
  4138  07AE  0DC8               	rlf	??_fround,f
  4139  07AF  3EFF               	addlw	-1
  4140  07B0  1D03               	skipz
  4141  07B1  2FAD               	goto	u4205
  4142  07B2  1003               	clrc
  4143  07B3  0D48               	rlf	??_fround,w
  4144  07B4  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4145  07B5  0084               	movwf	4
  4146  07B6  160A  118A  200A  120A  118A  	fcall	stringdir
  4147  07BB  00C9               	movwf	??_fround+1
  4148  07BC  160A  118A  200A  120A  118A  	fcall	stringdir
  4149  07C1  00CA               	movwf	??_fround+2
  4150  07C2  160A  118A  200A  120A  118A  	fcall	stringdir
  4151  07C7  00CB               	movwf	??_fround+3
  4152  07C8  160A  118A  200A  120A  118A  	fcall	stringdir
  4153  07CD  00CC               	movwf	??_fround+4
  4154  07CE  084C               	movf	??_fround+4,w
  4155  07CF  00B1               	movwf	___flmul@a+3
  4156  07D0  084B               	movf	??_fround+3,w
  4157  07D1  00B0               	movwf	___flmul@a+2
  4158  07D2  084A               	movf	??_fround+2,w
  4159  07D3  00AF               	movwf	___flmul@a+1
  4160  07D4  0849               	movf	??_fround+1,w
  4161  07D5  00AE               	movwf	___flmul@a
  4162  07D6  120A  158A  213C  120A  118A  	fcall	___flmul
  4163  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  4164  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  4165  07DD  082D               	movf	?___flmul+3,w
  4166  07DE  00C7               	movwf	?_fround+3
  4167  07DF  082C               	movf	?___flmul+2,w
  4168  07E0  00C6               	movwf	?_fround+2
  4169  07E1  082B               	movf	?___flmul+1,w
  4170  07E2  00C5               	movwf	?_fround+1
  4171  07E3  082A               	movf	?___flmul,w
  4172  07E4  00C4               	movwf	?_fround
  4173  07E5                     l350:
  4174  07E5  0008               	return
  4175  07E6                     __end_of_fround:
  4176                           
  4177                           	psect	text7
  4178  1A2F                     __ptext7:	
  4179 ;; *************** function ___lwmod *****************
  4180 ;; Defined at:
  4181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  divisor         2    3[COMMON] unsigned int 
  4184 ;;  dividend        2    5[COMMON] unsigned int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  counter         1    8[COMMON] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    3[COMMON] unsigned int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         4       0       0       0       0
  4197 ;;      Locals:         1       0       0       0       0
  4198 ;;      Temps:          1       0       0       0       0
  4199 ;;      Totals:         6       0       0       0       0
  4200 ;;Total ram usage:        6 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 2
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_fround
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           
  4211                           ;psect for function ___lwmod
  4212  1A2F                     ___lwmod:
  4213  1A2F                     l2551:	
  4214                           ;incstack = 0
  4215                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4216                           
  4217  1A2F  0873               	movf	___lwmod@divisor,w
  4218  1A30  0474               	iorwf	___lwmod@divisor+1,w
  4219  1A31  1903               	btfsc	3,2
  4220  1A32  2A34               	goto	u3231
  4221  1A33  2A35               	goto	u3230
  4222  1A34                     u3231:
  4223  1A34  2A64               	goto	l2569
  4224  1A35                     u3230:
  4225  1A35                     l2553:
  4226  1A35  01F8               	clrf	___lwmod@counter
  4227  1A36  0AF8               	incf	___lwmod@counter,f
  4228  1A37  2A43               	goto	l2559
  4229  1A38                     l2555:
  4230  1A38  3001               	movlw	1
  4231  1A39                     u3245:
  4232  1A39  1003               	clrc
  4233  1A3A  0DF3               	rlf	___lwmod@divisor,f
  4234  1A3B  0DF4               	rlf	___lwmod@divisor+1,f
  4235  1A3C  3EFF               	addlw	-1
  4236  1A3D  1D03               	skipz
  4237  1A3E  2A39               	goto	u3245
  4238  1A3F                     l2557:
  4239  1A3F  3001               	movlw	1
  4240  1A40  00F7               	movwf	??___lwmod
  4241  1A41  0877               	movf	??___lwmod,w
  4242  1A42  07F8               	addwf	___lwmod@counter,f
  4243  1A43                     l2559:
  4244  1A43  1FF4               	btfss	___lwmod@divisor+1,7
  4245  1A44  2A46               	goto	u3251
  4246  1A45  2A47               	goto	u3250
  4247  1A46                     u3251:
  4248  1A46  2A38               	goto	l2555
  4249  1A47                     u3250:
  4250  1A47                     l2561:
  4251  1A47  0874               	movf	___lwmod@divisor+1,w
  4252  1A48  0276               	subwf	___lwmod@dividend+1,w
  4253  1A49  1D03               	skipz
  4254  1A4A  2A4D               	goto	u3265
  4255  1A4B  0873               	movf	___lwmod@divisor,w
  4256  1A4C  0275               	subwf	___lwmod@dividend,w
  4257  1A4D                     u3265:
  4258  1A4D  1C03               	skipc
  4259  1A4E  2A50               	goto	u3261
  4260  1A4F  2A51               	goto	u3260
  4261  1A50                     u3261:
  4262  1A50  2A57               	goto	l2565
  4263  1A51                     u3260:
  4264  1A51                     l2563:
  4265  1A51  0873               	movf	___lwmod@divisor,w
  4266  1A52  02F5               	subwf	___lwmod@dividend,f
  4267  1A53  0874               	movf	___lwmod@divisor+1,w
  4268  1A54  1C03               	skipc
  4269  1A55  03F6               	decf	___lwmod@dividend+1,f
  4270  1A56  02F6               	subwf	___lwmod@dividend+1,f
  4271  1A57                     l2565:
  4272  1A57  3001               	movlw	1
  4273  1A58                     u3275:
  4274  1A58  1003               	clrc
  4275  1A59  0CF4               	rrf	___lwmod@divisor+1,f
  4276  1A5A  0CF3               	rrf	___lwmod@divisor,f
  4277  1A5B  3EFF               	addlw	-1
  4278  1A5C  1D03               	skipz
  4279  1A5D  2A58               	goto	u3275
  4280  1A5E                     l2567:
  4281  1A5E  3001               	movlw	1
  4282  1A5F  02F8               	subwf	___lwmod@counter,f
  4283  1A60  1D03               	btfss	3,2
  4284  1A61  2A63               	goto	u3281
  4285  1A62  2A64               	goto	u3280
  4286  1A63                     u3281:
  4287  1A63  2A47               	goto	l2561
  4288  1A64                     u3280:
  4289  1A64                     l2569:
  4290  1A64  0876               	movf	___lwmod@dividend+1,w
  4291  1A65  00F4               	movwf	?___lwmod+1
  4292  1A66  0875               	movf	___lwmod@dividend,w
  4293  1A67  00F3               	movwf	?___lwmod
  4294  1A68                     l752:
  4295  1A68  0008               	return
  4296  1A69                     __end_of___lwmod:
  4297                           
  4298                           	psect	text8
  4299  1AEB                     __ptext8:	
  4300 ;; *************** function ___lwdiv *****************
  4301 ;; Defined at:
  4302 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  divisor         2    0[BANK0 ] unsigned int 
  4305 ;;  dividend        2    2[BANK0 ] unsigned int 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  quotient        2    4[BANK0 ] unsigned int 
  4308 ;;  counter         1    6[BANK0 ] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2    0[BANK0 ] unsigned int 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         0       4       0       0       0
  4319 ;;      Locals:         0       3       0       0       0
  4320 ;;      Temps:          1       0       0       0       0
  4321 ;;      Totals:         1       7       0       0       0
  4322 ;;Total ram usage:        8 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 2
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_fround
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function ___lwdiv
  4334  1AEB                     ___lwdiv:
  4335  1AEB                     l2525:	
  4336                           ;incstack = 0
  4337                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4338                           
  4339  1AEB  1283               	bcf	3,5	;RP0=0, select bank0
  4340  1AEC  1303               	bcf	3,6	;RP1=0, select bank0
  4341  1AED  01A4               	clrf	___lwdiv@quotient
  4342  1AEE  01A5               	clrf	___lwdiv@quotient+1
  4343  1AEF                     l2527:
  4344  1AEF  0820               	movf	___lwdiv@divisor,w
  4345  1AF0  0421               	iorwf	___lwdiv@divisor+1,w
  4346  1AF1  1903               	btfsc	3,2
  4347  1AF2  2AF4               	goto	u3161
  4348  1AF3  2AF5               	goto	u3160
  4349  1AF4                     u3161:
  4350  1AF4  2B2C               	goto	l2547
  4351  1AF5                     u3160:
  4352  1AF5                     l2529:
  4353  1AF5  01A6               	clrf	___lwdiv@counter
  4354  1AF6  0AA6               	incf	___lwdiv@counter,f
  4355  1AF7  2B03               	goto	l2535
  4356  1AF8                     l2531:
  4357  1AF8  3001               	movlw	1
  4358  1AF9                     u3175:
  4359  1AF9  1003               	clrc
  4360  1AFA  0DA0               	rlf	___lwdiv@divisor,f
  4361  1AFB  0DA1               	rlf	___lwdiv@divisor+1,f
  4362  1AFC  3EFF               	addlw	-1
  4363  1AFD  1D03               	skipz
  4364  1AFE  2AF9               	goto	u3175
  4365  1AFF                     l2533:
  4366  1AFF  3001               	movlw	1
  4367  1B00  00F9               	movwf	??___lwdiv
  4368  1B01  0879               	movf	??___lwdiv,w
  4369  1B02  07A6               	addwf	___lwdiv@counter,f
  4370  1B03                     l2535:
  4371  1B03  1FA1               	btfss	___lwdiv@divisor+1,7
  4372  1B04  2B06               	goto	u3181
  4373  1B05  2B07               	goto	u3180
  4374  1B06                     u3181:
  4375  1B06  2AF8               	goto	l2531
  4376  1B07                     u3180:
  4377  1B07                     l2537:
  4378  1B07  3001               	movlw	1
  4379  1B08                     u3195:
  4380  1B08  1003               	clrc
  4381  1B09  0DA4               	rlf	___lwdiv@quotient,f
  4382  1B0A  0DA5               	rlf	___lwdiv@quotient+1,f
  4383  1B0B  3EFF               	addlw	-1
  4384  1B0C  1D03               	skipz
  4385  1B0D  2B08               	goto	u3195
  4386  1B0E  0821               	movf	___lwdiv@divisor+1,w
  4387  1B0F  0223               	subwf	___lwdiv@dividend+1,w
  4388  1B10  1D03               	skipz
  4389  1B11  2B14               	goto	u3205
  4390  1B12  0820               	movf	___lwdiv@divisor,w
  4391  1B13  0222               	subwf	___lwdiv@dividend,w
  4392  1B14                     u3205:
  4393  1B14  1C03               	skipc
  4394  1B15  2B17               	goto	u3201
  4395  1B16  2B18               	goto	u3200
  4396  1B17                     u3201:
  4397  1B17  2B1F               	goto	l2543
  4398  1B18                     u3200:
  4399  1B18                     l2539:
  4400  1B18  0820               	movf	___lwdiv@divisor,w
  4401  1B19  02A2               	subwf	___lwdiv@dividend,f
  4402  1B1A  0821               	movf	___lwdiv@divisor+1,w
  4403  1B1B  1C03               	skipc
  4404  1B1C  03A3               	decf	___lwdiv@dividend+1,f
  4405  1B1D  02A3               	subwf	___lwdiv@dividend+1,f
  4406  1B1E                     l2541:
  4407  1B1E  1424               	bsf	___lwdiv@quotient,0
  4408  1B1F                     l2543:
  4409  1B1F  3001               	movlw	1
  4410  1B20                     u3215:
  4411  1B20  1003               	clrc
  4412  1B21  0CA1               	rrf	___lwdiv@divisor+1,f
  4413  1B22  0CA0               	rrf	___lwdiv@divisor,f
  4414  1B23  3EFF               	addlw	-1
  4415  1B24  1D03               	skipz
  4416  1B25  2B20               	goto	u3215
  4417  1B26                     l2545:
  4418  1B26  3001               	movlw	1
  4419  1B27  02A6               	subwf	___lwdiv@counter,f
  4420  1B28  1D03               	btfss	3,2
  4421  1B29  2B2B               	goto	u3221
  4422  1B2A  2B2C               	goto	u3220
  4423  1B2B                     u3221:
  4424  1B2B  2B07               	goto	l2537
  4425  1B2C                     u3220:
  4426  1B2C                     l2547:
  4427  1B2C  0825               	movf	___lwdiv@quotient+1,w
  4428  1B2D  00A1               	movwf	?___lwdiv+1
  4429  1B2E  0824               	movf	___lwdiv@quotient,w
  4430  1B2F  00A0               	movwf	?___lwdiv
  4431  1B30                     l742:
  4432  1B30  0008               	return
  4433  1B31                     __end_of___lwdiv:
  4434                           
  4435                           	psect	text9
  4436  093C                     __ptext9:	
  4437 ;; *************** function ___flmul *****************
  4438 ;; Defined at:
  4439 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  b               4   10[BANK0 ] unsigned int 
  4442 ;;  a               4   14[BANK0 ] unsigned int 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  prod            4   30[BANK0 ] struct .
  4445 ;;  grs             4   24[BANK0 ] unsigned long 
  4446 ;;  temp            2   34[BANK0 ] struct .
  4447 ;;  bexp            1   29[BANK0 ] unsigned char 
  4448 ;;  aexp            1   28[BANK0 ] unsigned char 
  4449 ;;  sign            1   23[BANK0 ] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  4   10[BANK0 ] unsigned char 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         0       8       0       0       0
  4460 ;;      Locals:         0      13       0       0       0
  4461 ;;      Temps:          0       5       0       0       0
  4462 ;;      Totals:         0      26       0       0       0
  4463 ;;Total ram usage:       26 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 3
  4466 ;; This function calls:
  4467 ;;		__Umul8_16
  4468 ;; This function is called by:
  4469 ;;		_main
  4470 ;;		_fround
  4471 ;;		_scale
  4472 ;;		_sprintf
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function ___flmul
  4478  093C                     ___flmul:
  4479  093C                     l2767:	
  4480                           ;incstack = 0
  4481                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4482                           
  4483  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4484  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4485  093E  082D               	movf	___flmul@b+3,w
  4486  093F  3980               	andlw	128
  4487  0940  00B2               	movwf	??___flmul
  4488  0941  0832               	movf	??___flmul,w
  4489  0942  00B7               	movwf	___flmul@sign
  4490  0943                     l2769:
  4491  0943  082D               	movf	___flmul@b+3,w
  4492  0944  00B2               	movwf	??___flmul
  4493  0945  0732               	addwf	??___flmul,w
  4494  0946  00B3               	movwf	??___flmul+1
  4495  0947  0833               	movf	??___flmul+1,w
  4496  0948  00BD               	movwf	___flmul@bexp
  4497  0949                     l2771:
  4498  0949  1FAC               	btfss	___flmul@b+2,7
  4499  094A  294C               	goto	u3751
  4500  094B  294D               	goto	u3750
  4501  094C                     u3751:
  4502  094C  294E               	goto	l2775
  4503  094D                     u3750:
  4504  094D                     l2773:
  4505  094D  143D               	bsf	___flmul@bexp,0
  4506  094E                     l2775:
  4507  094E  083D               	movf	___flmul@bexp,w
  4508  094F  1903               	btfsc	3,2
  4509  0950  2952               	goto	u3761
  4510  0951  2953               	goto	u3760
  4511  0952                     u3761:
  4512  0952  2962               	goto	l2783
  4513  0953                     u3760:
  4514  0953                     l2777:
  4515  0953  0A3D               	incf	___flmul@bexp,w
  4516  0954  1D03               	btfss	3,2
  4517  0955  2957               	goto	u3771
  4518  0956  2958               	goto	u3770
  4519  0957                     u3771:
  4520  0957  2960               	goto	l2781
  4521  0958                     u3770:
  4522  0958                     l2779:
  4523  0958  3000               	movlw	0
  4524  0959  00AD               	movwf	___flmul@b+3
  4525  095A  3000               	movlw	0
  4526  095B  00AC               	movwf	___flmul@b+2
  4527  095C  3000               	movlw	0
  4528  095D  00AB               	movwf	___flmul@b+1
  4529  095E  3000               	movlw	0
  4530  095F  00AA               	movwf	___flmul@b
  4531  0960                     l2781:
  4532  0960  17AC               	bsf	___flmul@b+2,7
  4533  0961  296A               	goto	l2785
  4534  0962                     l2783:
  4535  0962  3000               	movlw	0
  4536  0963  00AD               	movwf	___flmul@b+3
  4537  0964  3000               	movlw	0
  4538  0965  00AC               	movwf	___flmul@b+2
  4539  0966  3000               	movlw	0
  4540  0967  00AB               	movwf	___flmul@b+1
  4541  0968  3000               	movlw	0
  4542  0969  00AA               	movwf	___flmul@b
  4543  096A                     l2785:
  4544  096A  0831               	movf	___flmul@a+3,w
  4545  096B  3980               	andlw	128
  4546  096C  00B2               	movwf	??___flmul
  4547  096D  0832               	movf	??___flmul,w
  4548  096E  06B7               	xorwf	___flmul@sign,f
  4549  096F                     l2787:
  4550  096F  0831               	movf	___flmul@a+3,w
  4551  0970  00B2               	movwf	??___flmul
  4552  0971  0732               	addwf	??___flmul,w
  4553  0972  00B3               	movwf	??___flmul+1
  4554  0973  0833               	movf	??___flmul+1,w
  4555  0974  00BC               	movwf	___flmul@aexp
  4556  0975                     l2789:
  4557  0975  1FB0               	btfss	___flmul@a+2,7
  4558  0976  2978               	goto	u3781
  4559  0977  2979               	goto	u3780
  4560  0978                     u3781:
  4561  0978  297A               	goto	l2793
  4562  0979                     u3780:
  4563  0979                     l2791:
  4564  0979  143C               	bsf	___flmul@aexp,0
  4565  097A                     l2793:
  4566  097A  083C               	movf	___flmul@aexp,w
  4567  097B  1903               	btfsc	3,2
  4568  097C  297E               	goto	u3791
  4569  097D  297F               	goto	u3790
  4570  097E                     u3791:
  4571  097E  298E               	goto	l2801
  4572  097F                     u3790:
  4573  097F                     l2795:
  4574  097F  0A3C               	incf	___flmul@aexp,w
  4575  0980  1D03               	btfss	3,2
  4576  0981  2983               	goto	u3801
  4577  0982  2984               	goto	u3800
  4578  0983                     u3801:
  4579  0983  298C               	goto	l2799
  4580  0984                     u3800:
  4581  0984                     l2797:
  4582  0984  3000               	movlw	0
  4583  0985  00B1               	movwf	___flmul@a+3
  4584  0986  3000               	movlw	0
  4585  0987  00B0               	movwf	___flmul@a+2
  4586  0988  3000               	movlw	0
  4587  0989  00AF               	movwf	___flmul@a+1
  4588  098A  3000               	movlw	0
  4589  098B  00AE               	movwf	___flmul@a
  4590  098C                     l2799:
  4591  098C  17B0               	bsf	___flmul@a+2,7
  4592  098D  2996               	goto	l2803
  4593  098E                     l2801:
  4594  098E  3000               	movlw	0
  4595  098F  00B1               	movwf	___flmul@a+3
  4596  0990  3000               	movlw	0
  4597  0991  00B0               	movwf	___flmul@a+2
  4598  0992  3000               	movlw	0
  4599  0993  00AF               	movwf	___flmul@a+1
  4600  0994  3000               	movlw	0
  4601  0995  00AE               	movwf	___flmul@a
  4602  0996                     l2803:
  4603  0996  083C               	movf	___flmul@aexp,w
  4604  0997  1903               	btfsc	3,2
  4605  0998  299A               	goto	u3811
  4606  0999  299B               	goto	u3810
  4607  099A                     u3811:
  4608  099A  29A0               	goto	l2807
  4609  099B                     u3810:
  4610  099B                     l2805:
  4611  099B  083D               	movf	___flmul@bexp,w
  4612  099C  1D03               	btfss	3,2
  4613  099D  299F               	goto	u3821
  4614  099E  29A0               	goto	u3820
  4615  099F                     u3821:
  4616  099F  29A9               	goto	l2811
  4617  09A0                     u3820:
  4618  09A0                     l2807:
  4619  09A0  3000               	movlw	0
  4620  09A1  00AD               	movwf	?___flmul+3
  4621  09A2  3000               	movlw	0
  4622  09A3  00AC               	movwf	?___flmul+2
  4623  09A4  3000               	movlw	0
  4624  09A5  00AB               	movwf	?___flmul+1
  4625  09A6  3000               	movlw	0
  4626  09A7  00AA               	movwf	?___flmul
  4627  09A8  2C9C               	goto	l859
  4628  09A9                     l2811:
  4629  09A9  082A               	movf	___flmul@b,w
  4630  09AA  00B2               	movwf	??___flmul
  4631  09AB  0832               	movf	??___flmul,w
  4632  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4633  09AD  0830               	movf	___flmul@a+2,w
  4634  09AE  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  4635  09B3  0874               	movf	?__Umul8_16+1,w
  4636  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4637  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4638  09B6  00C3               	movwf	___flmul@temp+1
  4639  09B7  0873               	movf	?__Umul8_16,w
  4640  09B8  00C2               	movwf	___flmul@temp
  4641  09B9                     l2813:
  4642  09B9  0842               	movf	___flmul@temp,w
  4643  09BA  00B2               	movwf	??___flmul
  4644  09BB  01B3               	clrf	??___flmul+1
  4645  09BC  01B4               	clrf	??___flmul+2
  4646  09BD  01B5               	clrf	??___flmul+3
  4647  09BE  0835               	movf	??___flmul+3,w
  4648  09BF  00BB               	movwf	___flmul@grs+3
  4649  09C0  0834               	movf	??___flmul+2,w
  4650  09C1  00BA               	movwf	___flmul@grs+2
  4651  09C2  0833               	movf	??___flmul+1,w
  4652  09C3  00B9               	movwf	___flmul@grs+1
  4653  09C4  0832               	movf	??___flmul,w
  4654  09C5  00B8               	movwf	___flmul@grs
  4655  09C6                     l2815:
  4656  09C6  0843               	movf	___flmul@temp+1,w
  4657  09C7  00B2               	movwf	??___flmul
  4658  09C8  01B3               	clrf	??___flmul+1
  4659  09C9  01B4               	clrf	??___flmul+2
  4660  09CA  01B5               	clrf	??___flmul+3
  4661  09CB  0835               	movf	??___flmul+3,w
  4662  09CC  00C1               	movwf	___flmul@prod+3
  4663  09CD  0834               	movf	??___flmul+2,w
  4664  09CE  00C0               	movwf	___flmul@prod+2
  4665  09CF  0833               	movf	??___flmul+1,w
  4666  09D0  00BF               	movwf	___flmul@prod+1
  4667  09D1  0832               	movf	??___flmul,w
  4668  09D2  00BE               	movwf	___flmul@prod
  4669  09D3  082B               	movf	___flmul@b+1,w
  4670  09D4  00B2               	movwf	??___flmul
  4671  09D5  0832               	movf	??___flmul,w
  4672  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4673  09D7  082F               	movf	___flmul@a+1,w
  4674  09D8  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  4675  09DD  0874               	movf	?__Umul8_16+1,w
  4676  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4677  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4678  09E0  00C3               	movwf	___flmul@temp+1
  4679  09E1  0873               	movf	?__Umul8_16,w
  4680  09E2  00C2               	movwf	___flmul@temp
  4681  09E3                     l2817:
  4682  09E3  0842               	movf	___flmul@temp,w
  4683  09E4  00B2               	movwf	??___flmul
  4684  09E5  01B3               	clrf	??___flmul+1
  4685  09E6  01B4               	clrf	??___flmul+2
  4686  09E7  01B5               	clrf	??___flmul+3
  4687  09E8  0832               	movf	??___flmul,w
  4688  09E9  07B8               	addwf	___flmul@grs,f
  4689  09EA  0833               	movf	??___flmul+1,w
  4690  09EB  1103               	clrz
  4691  09EC  1803               	skipnc
  4692  09ED  3E01               	addlw	1
  4693  09EE  1903               	skipnz
  4694  09EF  29F1               	goto	u3831
  4695  09F0  07B9               	addwf	___flmul@grs+1,f
  4696  09F1                     u3831:
  4697  09F1  0834               	movf	??___flmul+2,w
  4698  09F2  1103               	clrz
  4699  09F3  1803               	skipnc
  4700  09F4  3E01               	addlw	1
  4701  09F5  1903               	skipnz
  4702  09F6  29F8               	goto	u3832
  4703  09F7  07BA               	addwf	___flmul@grs+2,f
  4704  09F8                     u3832:
  4705  09F8  0835               	movf	??___flmul+3,w
  4706  09F9  1103               	clrz
  4707  09FA  1803               	skipnc
  4708  09FB  3E01               	addlw	1
  4709  09FC  1903               	skipnz
  4710  09FD  29FF               	goto	u3833
  4711  09FE  07BB               	addwf	___flmul@grs+3,f
  4712  09FF                     u3833:
  4713  09FF                     l2819:
  4714  09FF  0843               	movf	___flmul@temp+1,w
  4715  0A00  00B2               	movwf	??___flmul
  4716  0A01  01B3               	clrf	??___flmul+1
  4717  0A02  01B4               	clrf	??___flmul+2
  4718  0A03  01B5               	clrf	??___flmul+3
  4719  0A04  0832               	movf	??___flmul,w
  4720  0A05  07BE               	addwf	___flmul@prod,f
  4721  0A06  0833               	movf	??___flmul+1,w
  4722  0A07  1103               	clrz
  4723  0A08  1803               	skipnc
  4724  0A09  3E01               	addlw	1
  4725  0A0A  1903               	skipnz
  4726  0A0B  2A0D               	goto	u3841
  4727  0A0C  07BF               	addwf	___flmul@prod+1,f
  4728  0A0D                     u3841:
  4729  0A0D  0834               	movf	??___flmul+2,w
  4730  0A0E  1103               	clrz
  4731  0A0F  1803               	skipnc
  4732  0A10  3E01               	addlw	1
  4733  0A11  1903               	skipnz
  4734  0A12  2A14               	goto	u3842
  4735  0A13  07C0               	addwf	___flmul@prod+2,f
  4736  0A14                     u3842:
  4737  0A14  0835               	movf	??___flmul+3,w
  4738  0A15  1103               	clrz
  4739  0A16  1803               	skipnc
  4740  0A17  3E01               	addlw	1
  4741  0A18  1903               	skipnz
  4742  0A19  2A1B               	goto	u3843
  4743  0A1A  07C1               	addwf	___flmul@prod+3,f
  4744  0A1B                     u3843:
  4745  0A1B  082C               	movf	___flmul@b+2,w
  4746  0A1C  00B2               	movwf	??___flmul
  4747  0A1D  0832               	movf	??___flmul,w
  4748  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  4749  0A1F  082E               	movf	___flmul@a,w
  4750  0A20  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  4751  0A25  0874               	movf	?__Umul8_16+1,w
  4752  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4753  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4754  0A28  00C3               	movwf	___flmul@temp+1
  4755  0A29  0873               	movf	?__Umul8_16,w
  4756  0A2A  00C2               	movwf	___flmul@temp
  4757  0A2B                     l2821:
  4758  0A2B  0842               	movf	___flmul@temp,w
  4759  0A2C  00B2               	movwf	??___flmul
  4760  0A2D  01B3               	clrf	??___flmul+1
  4761  0A2E  01B4               	clrf	??___flmul+2
  4762  0A2F  01B5               	clrf	??___flmul+3
  4763  0A30  0832               	movf	??___flmul,w
  4764  0A31  07B8               	addwf	___flmul@grs,f
  4765  0A32  0833               	movf	??___flmul+1,w
  4766  0A33  1103               	clrz
  4767  0A34  1803               	skipnc
  4768  0A35  3E01               	addlw	1
  4769  0A36  1903               	skipnz
  4770  0A37  2A39               	goto	u3851
  4771  0A38  07B9               	addwf	___flmul@grs+1,f
  4772  0A39                     u3851:
  4773  0A39  0834               	movf	??___flmul+2,w
  4774  0A3A  1103               	clrz
  4775  0A3B  1803               	skipnc
  4776  0A3C  3E01               	addlw	1
  4777  0A3D  1903               	skipnz
  4778  0A3E  2A40               	goto	u3852
  4779  0A3F  07BA               	addwf	___flmul@grs+2,f
  4780  0A40                     u3852:
  4781  0A40  0835               	movf	??___flmul+3,w
  4782  0A41  1103               	clrz
  4783  0A42  1803               	skipnc
  4784  0A43  3E01               	addlw	1
  4785  0A44  1903               	skipnz
  4786  0A45  2A47               	goto	u3853
  4787  0A46  07BB               	addwf	___flmul@grs+3,f
  4788  0A47                     u3853:
  4789  0A47                     l2823:
  4790  0A47  0843               	movf	___flmul@temp+1,w
  4791  0A48  00B2               	movwf	??___flmul
  4792  0A49  01B3               	clrf	??___flmul+1
  4793  0A4A  01B4               	clrf	??___flmul+2
  4794  0A4B  01B5               	clrf	??___flmul+3
  4795  0A4C  0832               	movf	??___flmul,w
  4796  0A4D  07BE               	addwf	___flmul@prod,f
  4797  0A4E  0833               	movf	??___flmul+1,w
  4798  0A4F  1103               	clrz
  4799  0A50  1803               	skipnc
  4800  0A51  3E01               	addlw	1
  4801  0A52  1903               	skipnz
  4802  0A53  2A55               	goto	u3861
  4803  0A54  07BF               	addwf	___flmul@prod+1,f
  4804  0A55                     u3861:
  4805  0A55  0834               	movf	??___flmul+2,w
  4806  0A56  1103               	clrz
  4807  0A57  1803               	skipnc
  4808  0A58  3E01               	addlw	1
  4809  0A59  1903               	skipnz
  4810  0A5A  2A5C               	goto	u3862
  4811  0A5B  07C0               	addwf	___flmul@prod+2,f
  4812  0A5C                     u3862:
  4813  0A5C  0835               	movf	??___flmul+3,w
  4814  0A5D  1103               	clrz
  4815  0A5E  1803               	skipnc
  4816  0A5F  3E01               	addlw	1
  4817  0A60  1903               	skipnz
  4818  0A61  2A63               	goto	u3863
  4819  0A62  07C1               	addwf	___flmul@prod+3,f
  4820  0A63                     u3863:
  4821  0A63                     l2825:
  4822  0A63  3008               	movlw	8
  4823  0A64  00B2               	movwf	??___flmul
  4824  0A65                     u3875:
  4825  0A65  1003               	clrc
  4826  0A66  0DB8               	rlf	___flmul@grs,f
  4827  0A67  0DB9               	rlf	___flmul@grs+1,f
  4828  0A68  0DBA               	rlf	___flmul@grs+2,f
  4829  0A69  0DBB               	rlf	___flmul@grs+3,f
  4830  0A6A  0BB2               	decfsz	??___flmul,f
  4831  0A6B  2A65               	goto	u3875
  4832  0A6C                     l2827:
  4833  0A6C  082B               	movf	___flmul@b+1,w
  4834  0A6D  00B2               	movwf	??___flmul
  4835  0A6E  0832               	movf	??___flmul,w
  4836  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  4837  0A70  082E               	movf	___flmul@a,w
  4838  0A71  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  4839  0A76  0874               	movf	?__Umul8_16+1,w
  4840  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4842  0A79  00C3               	movwf	___flmul@temp+1
  4843  0A7A  0873               	movf	?__Umul8_16,w
  4844  0A7B  00C2               	movwf	___flmul@temp
  4845  0A7C                     l2829:
  4846  0A7C  0842               	movf	___flmul@temp,w
  4847  0A7D  00B2               	movwf	??___flmul
  4848  0A7E  0843               	movf	___flmul@temp+1,w
  4849  0A7F  00B3               	movwf	??___flmul+1
  4850  0A80  01B4               	clrf	??___flmul+2
  4851  0A81  01B5               	clrf	??___flmul+3
  4852  0A82  0832               	movf	??___flmul,w
  4853  0A83  07B8               	addwf	___flmul@grs,f
  4854  0A84  0833               	movf	??___flmul+1,w
  4855  0A85  1103               	clrz
  4856  0A86  1803               	skipnc
  4857  0A87  3E01               	addlw	1
  4858  0A88  1903               	skipnz
  4859  0A89  2A8B               	goto	u3881
  4860  0A8A  07B9               	addwf	___flmul@grs+1,f
  4861  0A8B                     u3881:
  4862  0A8B  0834               	movf	??___flmul+2,w
  4863  0A8C  1103               	clrz
  4864  0A8D  1803               	skipnc
  4865  0A8E  3E01               	addlw	1
  4866  0A8F  1903               	skipnz
  4867  0A90  2A92               	goto	u3882
  4868  0A91  07BA               	addwf	___flmul@grs+2,f
  4869  0A92                     u3882:
  4870  0A92  0835               	movf	??___flmul+3,w
  4871  0A93  1103               	clrz
  4872  0A94  1803               	skipnc
  4873  0A95  3E01               	addlw	1
  4874  0A96  1903               	skipnz
  4875  0A97  2A99               	goto	u3883
  4876  0A98  07BB               	addwf	___flmul@grs+3,f
  4877  0A99                     u3883:
  4878  0A99                     l2831:
  4879  0A99  082A               	movf	___flmul@b,w
  4880  0A9A  00B2               	movwf	??___flmul
  4881  0A9B  0832               	movf	??___flmul,w
  4882  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  4883  0A9D  082F               	movf	___flmul@a+1,w
  4884  0A9E  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  4885  0AA3  0874               	movf	?__Umul8_16+1,w
  4886  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0AA6  00C3               	movwf	___flmul@temp+1
  4889  0AA7  0873               	movf	?__Umul8_16,w
  4890  0AA8  00C2               	movwf	___flmul@temp
  4891  0AA9                     l2833:
  4892  0AA9  0842               	movf	___flmul@temp,w
  4893  0AAA  00B2               	movwf	??___flmul
  4894  0AAB  0843               	movf	___flmul@temp+1,w
  4895  0AAC  00B3               	movwf	??___flmul+1
  4896  0AAD  01B4               	clrf	??___flmul+2
  4897  0AAE  01B5               	clrf	??___flmul+3
  4898  0AAF  0832               	movf	??___flmul,w
  4899  0AB0  07B8               	addwf	___flmul@grs,f
  4900  0AB1  0833               	movf	??___flmul+1,w
  4901  0AB2  1103               	clrz
  4902  0AB3  1803               	skipnc
  4903  0AB4  3E01               	addlw	1
  4904  0AB5  1903               	skipnz
  4905  0AB6  2AB8               	goto	u3891
  4906  0AB7  07B9               	addwf	___flmul@grs+1,f
  4907  0AB8                     u3891:
  4908  0AB8  0834               	movf	??___flmul+2,w
  4909  0AB9  1103               	clrz
  4910  0ABA  1803               	skipnc
  4911  0ABB  3E01               	addlw	1
  4912  0ABC  1903               	skipnz
  4913  0ABD  2ABF               	goto	u3892
  4914  0ABE  07BA               	addwf	___flmul@grs+2,f
  4915  0ABF                     u3892:
  4916  0ABF  0835               	movf	??___flmul+3,w
  4917  0AC0  1103               	clrz
  4918  0AC1  1803               	skipnc
  4919  0AC2  3E01               	addlw	1
  4920  0AC3  1903               	skipnz
  4921  0AC4  2AC6               	goto	u3893
  4922  0AC5  07BB               	addwf	___flmul@grs+3,f
  4923  0AC6                     u3893:
  4924  0AC6                     l2835:
  4925  0AC6  3008               	movlw	8
  4926  0AC7  00B2               	movwf	??___flmul
  4927  0AC8                     u3905:
  4928  0AC8  1003               	clrc
  4929  0AC9  0DB8               	rlf	___flmul@grs,f
  4930  0ACA  0DB9               	rlf	___flmul@grs+1,f
  4931  0ACB  0DBA               	rlf	___flmul@grs+2,f
  4932  0ACC  0DBB               	rlf	___flmul@grs+3,f
  4933  0ACD  0BB2               	decfsz	??___flmul,f
  4934  0ACE  2AC8               	goto	u3905
  4935  0ACF  082A               	movf	___flmul@b,w
  4936  0AD0  00B2               	movwf	??___flmul
  4937  0AD1  0832               	movf	??___flmul,w
  4938  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  4939  0AD3  082E               	movf	___flmul@a,w
  4940  0AD4  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  4941  0AD9  0874               	movf	?__Umul8_16+1,w
  4942  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0ADC  00C3               	movwf	___flmul@temp+1
  4945  0ADD  0873               	movf	?__Umul8_16,w
  4946  0ADE  00C2               	movwf	___flmul@temp
  4947  0ADF                     l2837:
  4948  0ADF  0842               	movf	___flmul@temp,w
  4949  0AE0  00B2               	movwf	??___flmul
  4950  0AE1  0843               	movf	___flmul@temp+1,w
  4951  0AE2  00B3               	movwf	??___flmul+1
  4952  0AE3  01B4               	clrf	??___flmul+2
  4953  0AE4  01B5               	clrf	??___flmul+3
  4954  0AE5  0832               	movf	??___flmul,w
  4955  0AE6  07B8               	addwf	___flmul@grs,f
  4956  0AE7  0833               	movf	??___flmul+1,w
  4957  0AE8  1103               	clrz
  4958  0AE9  1803               	skipnc
  4959  0AEA  3E01               	addlw	1
  4960  0AEB  1903               	skipnz
  4961  0AEC  2AEE               	goto	u3911
  4962  0AED  07B9               	addwf	___flmul@grs+1,f
  4963  0AEE                     u3911:
  4964  0AEE  0834               	movf	??___flmul+2,w
  4965  0AEF  1103               	clrz
  4966  0AF0  1803               	skipnc
  4967  0AF1  3E01               	addlw	1
  4968  0AF2  1903               	skipnz
  4969  0AF3  2AF5               	goto	u3912
  4970  0AF4  07BA               	addwf	___flmul@grs+2,f
  4971  0AF5                     u3912:
  4972  0AF5  0835               	movf	??___flmul+3,w
  4973  0AF6  1103               	clrz
  4974  0AF7  1803               	skipnc
  4975  0AF8  3E01               	addlw	1
  4976  0AF9  1903               	skipnz
  4977  0AFA  2AFC               	goto	u3913
  4978  0AFB  07BB               	addwf	___flmul@grs+3,f
  4979  0AFC                     u3913:
  4980  0AFC                     l2839:
  4981  0AFC  082B               	movf	___flmul@b+1,w
  4982  0AFD  00B2               	movwf	??___flmul
  4983  0AFE  0832               	movf	??___flmul,w
  4984  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  4985  0B00  0830               	movf	___flmul@a+2,w
  4986  0B01  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  4987  0B06  0874               	movf	?__Umul8_16+1,w
  4988  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4989  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4990  0B09  00C3               	movwf	___flmul@temp+1
  4991  0B0A  0873               	movf	?__Umul8_16,w
  4992  0B0B  00C2               	movwf	___flmul@temp
  4993  0B0C  0842               	movf	___flmul@temp,w
  4994  0B0D  00B2               	movwf	??___flmul
  4995  0B0E  0843               	movf	___flmul@temp+1,w
  4996  0B0F  00B3               	movwf	??___flmul+1
  4997  0B10  01B4               	clrf	??___flmul+2
  4998  0B11  01B5               	clrf	??___flmul+3
  4999  0B12  0832               	movf	??___flmul,w
  5000  0B13  07BE               	addwf	___flmul@prod,f
  5001  0B14  0833               	movf	??___flmul+1,w
  5002  0B15  1103               	clrz
  5003  0B16  1803               	skipnc
  5004  0B17  3E01               	addlw	1
  5005  0B18  1903               	skipnz
  5006  0B19  2B1B               	goto	u3921
  5007  0B1A  07BF               	addwf	___flmul@prod+1,f
  5008  0B1B                     u3921:
  5009  0B1B  0834               	movf	??___flmul+2,w
  5010  0B1C  1103               	clrz
  5011  0B1D  1803               	skipnc
  5012  0B1E  3E01               	addlw	1
  5013  0B1F  1903               	skipnz
  5014  0B20  2B22               	goto	u3922
  5015  0B21  07C0               	addwf	___flmul@prod+2,f
  5016  0B22                     u3922:
  5017  0B22  0835               	movf	??___flmul+3,w
  5018  0B23  1103               	clrz
  5019  0B24  1803               	skipnc
  5020  0B25  3E01               	addlw	1
  5021  0B26  1903               	skipnz
  5022  0B27  2B29               	goto	u3923
  5023  0B28  07C1               	addwf	___flmul@prod+3,f
  5024  0B29                     u3923:
  5025  0B29                     l2841:
  5026  0B29  082C               	movf	___flmul@b+2,w
  5027  0B2A  00B2               	movwf	??___flmul
  5028  0B2B  0832               	movf	??___flmul,w
  5029  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  5030  0B2D  082F               	movf	___flmul@a+1,w
  5031  0B2E  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  5032  0B33  0874               	movf	?__Umul8_16+1,w
  5033  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5034  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5035  0B36  00C3               	movwf	___flmul@temp+1
  5036  0B37  0873               	movf	?__Umul8_16,w
  5037  0B38  00C2               	movwf	___flmul@temp
  5038  0B39                     l2843:
  5039  0B39  0842               	movf	___flmul@temp,w
  5040  0B3A  00B2               	movwf	??___flmul
  5041  0B3B  0843               	movf	___flmul@temp+1,w
  5042  0B3C  00B3               	movwf	??___flmul+1
  5043  0B3D  01B4               	clrf	??___flmul+2
  5044  0B3E  01B5               	clrf	??___flmul+3
  5045  0B3F  0832               	movf	??___flmul,w
  5046  0B40  07BE               	addwf	___flmul@prod,f
  5047  0B41  0833               	movf	??___flmul+1,w
  5048  0B42  1103               	clrz
  5049  0B43  1803               	skipnc
  5050  0B44  3E01               	addlw	1
  5051  0B45  1903               	skipnz
  5052  0B46  2B48               	goto	u3931
  5053  0B47  07BF               	addwf	___flmul@prod+1,f
  5054  0B48                     u3931:
  5055  0B48  0834               	movf	??___flmul+2,w
  5056  0B49  1103               	clrz
  5057  0B4A  1803               	skipnc
  5058  0B4B  3E01               	addlw	1
  5059  0B4C  1903               	skipnz
  5060  0B4D  2B4F               	goto	u3932
  5061  0B4E  07C0               	addwf	___flmul@prod+2,f
  5062  0B4F                     u3932:
  5063  0B4F  0835               	movf	??___flmul+3,w
  5064  0B50  1103               	clrz
  5065  0B51  1803               	skipnc
  5066  0B52  3E01               	addlw	1
  5067  0B53  1903               	skipnz
  5068  0B54  2B56               	goto	u3933
  5069  0B55  07C1               	addwf	___flmul@prod+3,f
  5070  0B56                     u3933:
  5071  0B56  082C               	movf	___flmul@b+2,w
  5072  0B57  00B2               	movwf	??___flmul
  5073  0B58  0832               	movf	??___flmul,w
  5074  0B59  00F3               	movwf	__Umul8_16@multiplicand
  5075  0B5A  0830               	movf	___flmul@a+2,w
  5076  0B5B  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  5077  0B60  0874               	movf	?__Umul8_16+1,w
  5078  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0B63  00C3               	movwf	___flmul@temp+1
  5081  0B64  0873               	movf	?__Umul8_16,w
  5082  0B65  00C2               	movwf	___flmul@temp
  5083  0B66                     l2845:
  5084  0B66  0842               	movf	___flmul@temp,w
  5085  0B67  00B2               	movwf	??___flmul
  5086  0B68  0843               	movf	___flmul@temp+1,w
  5087  0B69  00B3               	movwf	??___flmul+1
  5088  0B6A  01B4               	clrf	??___flmul+2
  5089  0B6B  01B5               	clrf	??___flmul+3
  5090  0B6C  3008               	movlw	8
  5091  0B6D                     u3945:
  5092  0B6D  1003               	clrc
  5093  0B6E  0DB2               	rlf	??___flmul,f
  5094  0B6F  0DB3               	rlf	??___flmul+1,f
  5095  0B70  0DB4               	rlf	??___flmul+2,f
  5096  0B71  0DB5               	rlf	??___flmul+3,f
  5097  0B72                     u3940:
  5098  0B72  3EFF               	addlw	-1
  5099  0B73  1D03               	skipz
  5100  0B74  2B6D               	goto	u3945
  5101  0B75  0832               	movf	??___flmul,w
  5102  0B76  07BE               	addwf	___flmul@prod,f
  5103  0B77  0833               	movf	??___flmul+1,w
  5104  0B78  1103               	clrz
  5105  0B79  1803               	skipnc
  5106  0B7A  3E01               	addlw	1
  5107  0B7B  1903               	skipnz
  5108  0B7C  2B7E               	goto	u3951
  5109  0B7D  07BF               	addwf	___flmul@prod+1,f
  5110  0B7E                     u3951:
  5111  0B7E  0834               	movf	??___flmul+2,w
  5112  0B7F  1103               	clrz
  5113  0B80  1803               	skipnc
  5114  0B81  3E01               	addlw	1
  5115  0B82  1903               	skipnz
  5116  0B83  2B85               	goto	u3952
  5117  0B84  07C0               	addwf	___flmul@prod+2,f
  5118  0B85                     u3952:
  5119  0B85  0835               	movf	??___flmul+3,w
  5120  0B86  1103               	clrz
  5121  0B87  1803               	skipnc
  5122  0B88  3E01               	addlw	1
  5123  0B89  1903               	skipnz
  5124  0B8A  2B8C               	goto	u3953
  5125  0B8B  07C1               	addwf	___flmul@prod+3,f
  5126  0B8C                     u3953:
  5127  0B8C                     l2847:
  5128  0B8C  0838               	movf	___flmul@grs,w
  5129  0B8D  00B2               	movwf	??___flmul
  5130  0B8E  0839               	movf	___flmul@grs+1,w
  5131  0B8F  00B3               	movwf	??___flmul+1
  5132  0B90  083A               	movf	___flmul@grs+2,w
  5133  0B91  00B4               	movwf	??___flmul+2
  5134  0B92  083B               	movf	___flmul@grs+3,w
  5135  0B93  00B5               	movwf	??___flmul+3
  5136  0B94  3018               	movlw	24
  5137  0B95                     u3965:
  5138  0B95  1003               	clrc
  5139  0B96  0CB5               	rrf	??___flmul+3,f
  5140  0B97  0CB4               	rrf	??___flmul+2,f
  5141  0B98  0CB3               	rrf	??___flmul+1,f
  5142  0B99  0CB2               	rrf	??___flmul,f
  5143  0B9A                     u3960:
  5144  0B9A  3EFF               	addlw	-1
  5145  0B9B  1D03               	skipz
  5146  0B9C  2B95               	goto	u3965
  5147  0B9D  0832               	movf	??___flmul,w
  5148  0B9E  07BE               	addwf	___flmul@prod,f
  5149  0B9F  0833               	movf	??___flmul+1,w
  5150  0BA0  1103               	clrz
  5151  0BA1  1803               	skipnc
  5152  0BA2  3E01               	addlw	1
  5153  0BA3  1903               	skipnz
  5154  0BA4  2BA6               	goto	u3971
  5155  0BA5  07BF               	addwf	___flmul@prod+1,f
  5156  0BA6                     u3971:
  5157  0BA6  0834               	movf	??___flmul+2,w
  5158  0BA7  1103               	clrz
  5159  0BA8  1803               	skipnc
  5160  0BA9  3E01               	addlw	1
  5161  0BAA  1903               	skipnz
  5162  0BAB  2BAD               	goto	u3972
  5163  0BAC  07C0               	addwf	___flmul@prod+2,f
  5164  0BAD                     u3972:
  5165  0BAD  0835               	movf	??___flmul+3,w
  5166  0BAE  1103               	clrz
  5167  0BAF  1803               	skipnc
  5168  0BB0  3E01               	addlw	1
  5169  0BB1  1903               	skipnz
  5170  0BB2  2BB4               	goto	u3973
  5171  0BB3  07C1               	addwf	___flmul@prod+3,f
  5172  0BB4                     u3973:
  5173  0BB4                     l2849:
  5174  0BB4  3008               	movlw	8
  5175  0BB5  00B2               	movwf	??___flmul
  5176  0BB6                     u3985:
  5177  0BB6  1003               	clrc
  5178  0BB7  0DB8               	rlf	___flmul@grs,f
  5179  0BB8  0DB9               	rlf	___flmul@grs+1,f
  5180  0BB9  0DBA               	rlf	___flmul@grs+2,f
  5181  0BBA  0DBB               	rlf	___flmul@grs+3,f
  5182  0BBB  0BB2               	decfsz	??___flmul,f
  5183  0BBC  2BB6               	goto	u3985
  5184  0BBD                     l2851:
  5185  0BBD  083D               	movf	___flmul@bexp,w
  5186  0BBE  073C               	addwf	___flmul@aexp,w
  5187  0BBF  00B2               	movwf	??___flmul
  5188  0BC0  01B3               	clrf	??___flmul+1
  5189  0BC1  0DB3               	rlf	??___flmul+1,f
  5190  0BC2  0832               	movf	??___flmul,w
  5191  0BC3  3E82               	addlw	130
  5192  0BC4  00C2               	movwf	___flmul@temp
  5193  0BC5  0833               	movf	??___flmul+1,w
  5194  0BC6  1803               	skipnc
  5195  0BC7  3E01               	addlw	1
  5196  0BC8  3EFF               	addlw	255
  5197  0BC9  00C3               	movwf	___flmul@temp+1
  5198  0BCA  2BE8               	goto	l2863
  5199  0BCB                     l2853:
  5200  0BCB  3001               	movlw	1
  5201  0BCC  00B2               	movwf	??___flmul
  5202  0BCD                     u3995:
  5203  0BCD  1003               	clrc
  5204  0BCE  0DBE               	rlf	___flmul@prod,f
  5205  0BCF  0DBF               	rlf	___flmul@prod+1,f
  5206  0BD0  0DC0               	rlf	___flmul@prod+2,f
  5207  0BD1  0DC1               	rlf	___flmul@prod+3,f
  5208  0BD2  0BB2               	decfsz	??___flmul,f
  5209  0BD3  2BCD               	goto	u3995
  5210  0BD4                     l2855:
  5211  0BD4  1FBB               	btfss	___flmul@grs+3,7
  5212  0BD5  2BD7               	goto	u4001
  5213  0BD6  2BD8               	goto	u4000
  5214  0BD7                     u4001:
  5215  0BD7  2BD9               	goto	l2859
  5216  0BD8                     u4000:
  5217  0BD8                     l2857:
  5218  0BD8  143E               	bsf	___flmul@prod,0
  5219  0BD9                     l2859:
  5220  0BD9  3001               	movlw	1
  5221  0BDA  00B2               	movwf	??___flmul
  5222  0BDB                     u4015:
  5223  0BDB  1003               	clrc
  5224  0BDC  0DB8               	rlf	___flmul@grs,f
  5225  0BDD  0DB9               	rlf	___flmul@grs+1,f
  5226  0BDE  0DBA               	rlf	___flmul@grs+2,f
  5227  0BDF  0DBB               	rlf	___flmul@grs+3,f
  5228  0BE0  0BB2               	decfsz	??___flmul,f
  5229  0BE1  2BDB               	goto	u4015
  5230  0BE2                     l2861:
  5231  0BE2  30FF               	movlw	255
  5232  0BE3  07C2               	addwf	___flmul@temp,f
  5233  0BE4  1803               	skipnc
  5234  0BE5  0AC3               	incf	___flmul@temp+1,f
  5235  0BE6  30FF               	movlw	255
  5236  0BE7  07C3               	addwf	___flmul@temp+1,f
  5237  0BE8                     l2863:
  5238  0BE8  1FC0               	btfss	___flmul@prod+2,7
  5239  0BE9  2BEB               	goto	u4021
  5240  0BEA  2BEC               	goto	u4020
  5241  0BEB                     u4021:
  5242  0BEB  2BCB               	goto	l2853
  5243  0BEC                     u4020:
  5244  0BEC                     l2865:
  5245  0BEC  01BC               	clrf	___flmul@aexp
  5246  0BED                     l2867:
  5247  0BED  1FBB               	btfss	___flmul@grs+3,7
  5248  0BEE  2BF0               	goto	u4031
  5249  0BEF  2BF1               	goto	u4030
  5250  0BF0                     u4031:
  5251  0BF0  2C0D               	goto	l2875
  5252  0BF1                     u4030:
  5253  0BF1                     l2869:
  5254  0BF1  30FF               	movlw	255
  5255  0BF2  0538               	andwf	___flmul@grs,w
  5256  0BF3  00B2               	movwf	??___flmul
  5257  0BF4  30FF               	movlw	255
  5258  0BF5  0539               	andwf	___flmul@grs+1,w
  5259  0BF6  00B3               	movwf	??___flmul+1
  5260  0BF7  30FF               	movlw	255
  5261  0BF8  053A               	andwf	___flmul@grs+2,w
  5262  0BF9  00B4               	movwf	??___flmul+2
  5263  0BFA  307F               	movlw	127
  5264  0BFB  053B               	andwf	___flmul@grs+3,w
  5265  0BFC  00B5               	movwf	??___flmul+3
  5266  0BFD  0835               	movf	??___flmul+3,w
  5267  0BFE  0434               	iorwf	??___flmul+2,w
  5268  0BFF  0433               	iorwf	??___flmul+1,w
  5269  0C00  0432               	iorwf	??___flmul,w
  5270  0C01  1903               	skipnz
  5271  0C02  2C04               	goto	u4041
  5272  0C03  2C05               	goto	u4040
  5273  0C04                     u4041:
  5274  0C04  2C08               	goto	l865
  5275  0C05                     u4040:
  5276  0C05                     l2871:
  5277  0C05  01BC               	clrf	___flmul@aexp
  5278  0C06  0ABC               	incf	___flmul@aexp,f
  5279  0C07  2C0D               	goto	l2875
  5280  0C08                     l865:
  5281  0C08  1C3E               	btfss	___flmul@prod,0
  5282  0C09  2C0B               	goto	u4051
  5283  0C0A  2C0C               	goto	u4050
  5284  0C0B                     u4051:
  5285  0C0B  2C0D               	goto	l2875
  5286  0C0C                     u4050:
  5287  0C0C  2C05               	goto	l2871
  5288  0C0D                     l2875:
  5289  0C0D  083C               	movf	___flmul@aexp,w
  5290  0C0E  1903               	btfsc	3,2
  5291  0C0F  2C11               	goto	u4061
  5292  0C10  2C12               	goto	u4060
  5293  0C11                     u4061:
  5294  0C11  2C43               	goto	l2885
  5295  0C12                     u4060:
  5296  0C12                     l2877:
  5297  0C12  3001               	movlw	1
  5298  0C13  07BE               	addwf	___flmul@prod,f
  5299  0C14  3000               	movlw	0
  5300  0C15  1803               	skipnc
  5301  0C16  3001               	movlw	1
  5302  0C17  07BF               	addwf	___flmul@prod+1,f
  5303  0C18  3000               	movlw	0
  5304  0C19  1803               	skipnc
  5305  0C1A  3001               	movlw	1
  5306  0C1B  07C0               	addwf	___flmul@prod+2,f
  5307  0C1C  3000               	movlw	0
  5308  0C1D  1803               	skipnc
  5309  0C1E  3001               	movlw	1
  5310  0C1F  07C1               	addwf	___flmul@prod+3,f
  5311  0C20                     l2879:
  5312  0C20  1C41               	btfss	___flmul@prod+3,0
  5313  0C21  2C23               	goto	u4071
  5314  0C22  2C24               	goto	u4070
  5315  0C23                     u4071:
  5316  0C23  2C43               	goto	l2885
  5317  0C24                     u4070:
  5318  0C24                     l2881:
  5319  0C24  083E               	movf	___flmul@prod,w
  5320  0C25  00B2               	movwf	??___flmul
  5321  0C26  083F               	movf	___flmul@prod+1,w
  5322  0C27  00B3               	movwf	??___flmul+1
  5323  0C28  0840               	movf	___flmul@prod+2,w
  5324  0C29  00B4               	movwf	??___flmul+2
  5325  0C2A  0841               	movf	___flmul@prod+3,w
  5326  0C2B  00B5               	movwf	??___flmul+3
  5327  0C2C  3001               	movlw	1
  5328  0C2D  00B6               	movwf	??___flmul+4
  5329  0C2E                     u4085:
  5330  0C2E  0D35               	rlf	??___flmul+3,w
  5331  0C2F  0CB5               	rrf	??___flmul+3,f
  5332  0C30  0CB4               	rrf	??___flmul+2,f
  5333  0C31  0CB3               	rrf	??___flmul+1,f
  5334  0C32  0CB2               	rrf	??___flmul,f
  5335  0C33                     u4080:
  5336  0C33  0BB6               	decfsz	??___flmul+4,f
  5337  0C34  2C2E               	goto	u4085
  5338  0C35  0835               	movf	??___flmul+3,w
  5339  0C36  00C1               	movwf	___flmul@prod+3
  5340  0C37  0834               	movf	??___flmul+2,w
  5341  0C38  00C0               	movwf	___flmul@prod+2
  5342  0C39  0833               	movf	??___flmul+1,w
  5343  0C3A  00BF               	movwf	___flmul@prod+1
  5344  0C3B  0832               	movf	??___flmul,w
  5345  0C3C  00BE               	movwf	___flmul@prod
  5346  0C3D                     l2883:
  5347  0C3D  3001               	movlw	1
  5348  0C3E  07C2               	addwf	___flmul@temp,f
  5349  0C3F  1803               	skipnc
  5350  0C40  0AC3               	incf	___flmul@temp+1,f
  5351  0C41  3000               	movlw	0
  5352  0C42  07C3               	addwf	___flmul@temp+1,f
  5353  0C43                     l2885:
  5354  0C43  0843               	movf	___flmul@temp+1,w
  5355  0C44  3A80               	xorlw	128
  5356  0C45  00FF               	movwf	btemp+1
  5357  0C46  3080               	movlw	128
  5358  0C47  027F               	subwf	btemp+1,w
  5359  0C48  1D03               	skipz
  5360  0C49  2C4C               	goto	u4095
  5361  0C4A  30FF               	movlw	255
  5362  0C4B  0242               	subwf	___flmul@temp,w
  5363  0C4C                     u4095:
  5364  0C4C  1C03               	skipc
  5365  0C4D  2C4F               	goto	u4091
  5366  0C4E  2C50               	goto	u4090
  5367  0C4F                     u4091:
  5368  0C4F  2C5B               	goto	l2889
  5369  0C50                     u4090:
  5370  0C50                     l2887:
  5371  0C50  307F               	movlw	127
  5372  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5373  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5374  0C53  00C1               	movwf	___flmul@prod+3
  5375  0C54  3080               	movlw	128
  5376  0C55  00C0               	movwf	___flmul@prod+2
  5377  0C56  3000               	movlw	0
  5378  0C57  00BF               	movwf	___flmul@prod+1
  5379  0C58  3000               	movlw	0
  5380  0C59  00BE               	movwf	___flmul@prod
  5381  0C5A  2C90               	goto	l871
  5382  0C5B                     l2889:
  5383  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5384  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5385  0C5D  0843               	movf	___flmul@temp+1,w
  5386  0C5E  3A80               	xorlw	128
  5387  0C5F  00FF               	movwf	btemp+1
  5388  0C60  3080               	movlw	128
  5389  0C61  027F               	subwf	btemp+1,w
  5390  0C62  1D03               	skipz
  5391  0C63  2C66               	goto	u4105
  5392  0C64  3001               	movlw	1
  5393  0C65  0242               	subwf	___flmul@temp,w
  5394  0C66                     u4105:
  5395  0C66  1803               	skipnc
  5396  0C67  2C69               	goto	u4101
  5397  0C68  2C6A               	goto	u4100
  5398  0C69                     u4101:
  5399  0C69  2C76               	goto	l2895
  5400  0C6A                     u4100:
  5401  0C6A                     l2891:
  5402  0C6A  3000               	movlw	0
  5403  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0C6D  00C1               	movwf	___flmul@prod+3
  5406  0C6E  3000               	movlw	0
  5407  0C6F  00C0               	movwf	___flmul@prod+2
  5408  0C70  3000               	movlw	0
  5409  0C71  00BF               	movwf	___flmul@prod+1
  5410  0C72  3000               	movlw	0
  5411  0C73  00BE               	movwf	___flmul@prod
  5412  0C74                     l2893:
  5413  0C74  01B7               	clrf	___flmul@sign
  5414  0C75  2C90               	goto	l871
  5415  0C76                     l2895:
  5416  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5417  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5418  0C78  0842               	movf	___flmul@temp,w
  5419  0C79  00B2               	movwf	??___flmul
  5420  0C7A  0832               	movf	??___flmul,w
  5421  0C7B  00BD               	movwf	___flmul@bexp
  5422  0C7C  30FF               	movlw	255
  5423  0C7D  05BE               	andwf	___flmul@prod,f
  5424  0C7E  30FF               	movlw	255
  5425  0C7F  05BF               	andwf	___flmul@prod+1,f
  5426  0C80  307F               	movlw	127
  5427  0C81  05C0               	andwf	___flmul@prod+2,f
  5428  0C82  3000               	movlw	0
  5429  0C83  05C1               	andwf	___flmul@prod+3,f
  5430  0C84                     l2897:
  5431  0C84  1C3D               	btfss	___flmul@bexp,0
  5432  0C85  2C87               	goto	u4111
  5433  0C86  2C88               	goto	u4110
  5434  0C87                     u4111:
  5435  0C87  2C89               	goto	l2901
  5436  0C88                     u4110:
  5437  0C88                     l2899:
  5438  0C88  17C0               	bsf	___flmul@prod+2,7
  5439  0C89                     l2901:
  5440  0C89  083D               	movf	___flmul@bexp,w
  5441  0C8A  00B2               	movwf	??___flmul
  5442  0C8B  1003               	clrc
  5443  0C8C  0C32               	rrf	??___flmul,w
  5444  0C8D  00B3               	movwf	??___flmul+1
  5445  0C8E  0833               	movf	??___flmul+1,w
  5446  0C8F  00C1               	movwf	___flmul@prod+3
  5447  0C90                     l871:
  5448  0C90  0837               	movf	___flmul@sign,w
  5449  0C91  00B2               	movwf	??___flmul
  5450  0C92  0832               	movf	??___flmul,w
  5451  0C93  04C1               	iorwf	___flmul@prod+3,f
  5452  0C94                     l2903:
  5453  0C94  0841               	movf	___flmul@prod+3,w
  5454  0C95  00AD               	movwf	?___flmul+3
  5455  0C96  0840               	movf	___flmul@prod+2,w
  5456  0C97  00AC               	movwf	?___flmul+2
  5457  0C98  083F               	movf	___flmul@prod+1,w
  5458  0C99  00AB               	movwf	?___flmul+1
  5459  0C9A  083E               	movf	___flmul@prod,w
  5460  0C9B  00AA               	movwf	?___flmul
  5461  0C9C                     l859:
  5462  0C9C  0008               	return
  5463  0C9D                     __end_of___flmul:
  5464                           
  5465                           	psect	text10
  5466  19D4                     __ptext10:	
  5467 ;; *************** function __Umul8_16 *****************
  5468 ;; Defined at:
  5469 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  multiplier      1    wreg     unsigned char 
  5472 ;;  multiplicand    1    3[COMMON] unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5475 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5476 ;;  product         2    0[BANK0 ] unsigned int 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  2    3[COMMON] unsigned int 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5486 ;;      Params:         2       0       0       0       0
  5487 ;;      Locals:         0       5       0       0       0
  5488 ;;      Temps:          2       0       0       0       0
  5489 ;;      Totals:         4       5       0       0       0
  5490 ;;Total ram usage:        9 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 2
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		___flmul
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function __Umul8_16
  5502  19D4                     __Umul8_16:
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5506                           ;__Umul8_16@multiplier stored from wreg
  5507  19D4  1283               	bcf	3,5	;RP0=0, select bank0
  5508  19D5  1303               	bcf	3,6	;RP1=0, select bank0
  5509  19D6  00A4               	movwf	__Umul8_16@multiplier
  5510  19D7                     l2411:
  5511  19D7  01A0               	clrf	__Umul8_16@product
  5512  19D8  01A1               	clrf	__Umul8_16@product+1
  5513  19D9                     l2413:
  5514  19D9  0873               	movf	__Umul8_16@multiplicand,w
  5515  19DA  00F5               	movwf	??__Umul8_16
  5516  19DB  01F6               	clrf	??__Umul8_16+1
  5517  19DC  0875               	movf	??__Umul8_16,w
  5518  19DD  00A2               	movwf	__Umul8_16@word_mpld
  5519  19DE  0876               	movf	??__Umul8_16+1,w
  5520  19DF  00A3               	movwf	__Umul8_16@word_mpld+1
  5521  19E0                     l2415:
  5522  19E0  1C24               	btfss	__Umul8_16@multiplier,0
  5523  19E1  29E3               	goto	u2861
  5524  19E2  29E4               	goto	u2860
  5525  19E3                     u2861:
  5526  19E3  29EA               	goto	l878
  5527  19E4                     u2860:
  5528  19E4                     l2417:
  5529  19E4  0822               	movf	__Umul8_16@word_mpld,w
  5530  19E5  07A0               	addwf	__Umul8_16@product,f
  5531  19E6  1803               	skipnc
  5532  19E7  0AA1               	incf	__Umul8_16@product+1,f
  5533  19E8  0823               	movf	__Umul8_16@word_mpld+1,w
  5534  19E9  07A1               	addwf	__Umul8_16@product+1,f
  5535  19EA                     l878:
  5536  19EA  3001               	movlw	1
  5537  19EB                     u2875:
  5538  19EB  1003               	clrc
  5539  19EC  0DA2               	rlf	__Umul8_16@word_mpld,f
  5540  19ED  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5541  19EE  3EFF               	addlw	-1
  5542  19EF  1D03               	skipz
  5543  19F0  29EB               	goto	u2875
  5544  19F1  1003               	clrc
  5545  19F2  0CA4               	rrf	__Umul8_16@multiplier,f
  5546  19F3                     l2419:
  5547  19F3  0824               	movf	__Umul8_16@multiplier,w
  5548  19F4  1D03               	btfss	3,2
  5549  19F5  29F7               	goto	u2881
  5550  19F6  29F8               	goto	u2880
  5551  19F7                     u2881:
  5552  19F7  29E0               	goto	l2415
  5553  19F8                     u2880:
  5554  19F8                     l2421:
  5555  19F8  0821               	movf	__Umul8_16@product+1,w
  5556  19F9  00F4               	movwf	?__Umul8_16+1
  5557  19FA  0820               	movf	__Umul8_16@product,w
  5558  19FB  00F3               	movwf	?__Umul8_16
  5559  19FC                     l880:
  5560  19FC  0008               	return
  5561  19FD                     __end_of__Umul8_16:
  5562                           
  5563                           	psect	text11
  5564  1F43                     __ptext11:	
  5565 ;; *************** function __tdiv_to_l_ *****************
  5566 ;; Defined at:
  5567 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  f1              4    0[BANK0 ] float 
  5570 ;;  f2              4    4[BANK0 ] float 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  quot            4    8[BANK0 ] unsigned long 
  5573 ;;  exp1            1   13[BANK0 ] unsigned char 
  5574 ;;  cntr            1   12[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  4    0[BANK0 ] unsigned long 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5584 ;;      Params:         0       8       0       0       0
  5585 ;;      Locals:         0       6       0       0       0
  5586 ;;      Temps:          4       0       0       0       0
  5587 ;;      Totals:         4      14       0       0       0
  5588 ;;Total ram usage:       18 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; Hardware stack levels required when called: 2
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_sprintf
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function __tdiv_to_l_
  5600  1F43                     __tdiv_to_l_:
  5601  1F43                     l3937:	
  5602                           ;incstack = 0
  5603                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5604                           
  5605  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  5606  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  5607  1F45  0820               	movf	__tdiv_to_l_@f1,w
  5608  1F46  00F3               	movwf	??__tdiv_to_l_
  5609  1F47  0821               	movf	__tdiv_to_l_@f1+1,w
  5610  1F48  00F4               	movwf	??__tdiv_to_l_+1
  5611  1F49  0822               	movf	__tdiv_to_l_@f1+2,w
  5612  1F4A  00F5               	movwf	??__tdiv_to_l_+2
  5613  1F4B  1003               	clrc
  5614  1F4C  0D74               	rlf	??__tdiv_to_l_+1,w
  5615  1F4D  0D75               	rlf	??__tdiv_to_l_+2,w
  5616  1F4E  00F6               	movwf	??__tdiv_to_l_+3
  5617  1F4F  0876               	movf	??__tdiv_to_l_+3,w
  5618  1F50  00AD               	movwf	__tdiv_to_l_@exp1
  5619  1F51  082D               	movf	__tdiv_to_l_@exp1,w
  5620  1F52  1D03               	btfss	3,2
  5621  1F53  2F55               	goto	u6051
  5622  1F54  2F56               	goto	u6050
  5623  1F55                     u6051:
  5624  1F55  2F5F               	goto	l3943
  5625  1F56                     u6050:
  5626  1F56                     l3939:
  5627  1F56  3000               	movlw	0
  5628  1F57  00A3               	movwf	?__tdiv_to_l_+3
  5629  1F58  3000               	movlw	0
  5630  1F59  00A2               	movwf	?__tdiv_to_l_+2
  5631  1F5A  3000               	movlw	0
  5632  1F5B  00A1               	movwf	?__tdiv_to_l_+1
  5633  1F5C  3000               	movlw	0
  5634  1F5D  00A0               	movwf	?__tdiv_to_l_
  5635  1F5E  2FFF               	goto	l653
  5636  1F5F                     l3943:
  5637  1F5F  0824               	movf	__tdiv_to_l_@f2,w
  5638  1F60  00F3               	movwf	??__tdiv_to_l_
  5639  1F61  0825               	movf	__tdiv_to_l_@f2+1,w
  5640  1F62  00F4               	movwf	??__tdiv_to_l_+1
  5641  1F63  0826               	movf	__tdiv_to_l_@f2+2,w
  5642  1F64  00F5               	movwf	??__tdiv_to_l_+2
  5643  1F65  1003               	clrc
  5644  1F66  0D74               	rlf	??__tdiv_to_l_+1,w
  5645  1F67  0D75               	rlf	??__tdiv_to_l_+2,w
  5646  1F68  00F6               	movwf	??__tdiv_to_l_+3
  5647  1F69  0876               	movf	??__tdiv_to_l_+3,w
  5648  1F6A  00AC               	movwf	__tdiv_to_l_@cntr
  5649  1F6B  082C               	movf	__tdiv_to_l_@cntr,w
  5650  1F6C  1D03               	btfss	3,2
  5651  1F6D  2F6F               	goto	u6061
  5652  1F6E  2F70               	goto	u6060
  5653  1F6F                     u6061:
  5654  1F6F  2F71               	goto	l654
  5655  1F70                     u6060:
  5656  1F70  2F56               	goto	l3939
  5657  1F71                     l654:
  5658  1F71  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5659  1F72                     l3949:
  5660  1F72  30FF               	movlw	255
  5661  1F73  05A0               	andwf	__tdiv_to_l_@f1,f
  5662  1F74  30FF               	movlw	255
  5663  1F75  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5664  1F76  3000               	movlw	0
  5665  1F77  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5666  1F78                     l3951:
  5667  1F78  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5668  1F79  30FF               	movlw	255
  5669  1F7A  05A4               	andwf	__tdiv_to_l_@f2,f
  5670  1F7B  30FF               	movlw	255
  5671  1F7C  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5672  1F7D  3000               	movlw	0
  5673  1F7E  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5674  1F7F  3000               	movlw	0
  5675  1F80  00AB               	movwf	__tdiv_to_l_@quot+3
  5676  1F81  3000               	movlw	0
  5677  1F82  00AA               	movwf	__tdiv_to_l_@quot+2
  5678  1F83  3000               	movlw	0
  5679  1F84  00A9               	movwf	__tdiv_to_l_@quot+1
  5680  1F85  3000               	movlw	0
  5681  1F86  00A8               	movwf	__tdiv_to_l_@quot
  5682  1F87                     l3953:
  5683  1F87  307F               	movlw	127
  5684  1F88  02AD               	subwf	__tdiv_to_l_@exp1,f
  5685  1F89                     l3955:
  5686  1F89  3098               	movlw	152
  5687  1F8A  072C               	addwf	__tdiv_to_l_@cntr,w
  5688  1F8B  00F3               	movwf	??__tdiv_to_l_
  5689  1F8C  0873               	movf	??__tdiv_to_l_,w
  5690  1F8D  02AD               	subwf	__tdiv_to_l_@exp1,f
  5691  1F8E  3018               	movlw	24
  5692  1F8F  00F3               	movwf	??__tdiv_to_l_
  5693  1F90  0873               	movf	??__tdiv_to_l_,w
  5694  1F91  00AC               	movwf	__tdiv_to_l_@cntr
  5695  1F92                     l3957:
  5696  1F92  3001               	movlw	1
  5697  1F93  00F3               	movwf	??__tdiv_to_l_
  5698  1F94                     u6075:
  5699  1F94  1003               	clrc
  5700  1F95  0DA8               	rlf	__tdiv_to_l_@quot,f
  5701  1F96  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5702  1F97  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5703  1F98  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5704  1F99  0BF3               	decfsz	??__tdiv_to_l_,f
  5705  1F9A  2F94               	goto	u6075
  5706  1F9B                     l3959:
  5707  1F9B  0826               	movf	__tdiv_to_l_@f2+2,w
  5708  1F9C  0222               	subwf	__tdiv_to_l_@f1+2,w
  5709  1F9D  1D03               	skipz
  5710  1F9E  2FA5               	goto	u6085
  5711  1F9F  0825               	movf	__tdiv_to_l_@f2+1,w
  5712  1FA0  0221               	subwf	__tdiv_to_l_@f1+1,w
  5713  1FA1  1D03               	skipz
  5714  1FA2  2FA5               	goto	u6085
  5715  1FA3  0824               	movf	__tdiv_to_l_@f2,w
  5716  1FA4  0220               	subwf	__tdiv_to_l_@f1,w
  5717  1FA5                     u6085:
  5718  1FA5  1C03               	skipc
  5719  1FA6  2FA8               	goto	u6081
  5720  1FA7  2FA9               	goto	u6080
  5721  1FA8                     u6081:
  5722  1FA8  2FB4               	goto	l3965
  5723  1FA9                     u6080:
  5724  1FA9                     l3961:
  5725  1FA9  0824               	movf	__tdiv_to_l_@f2,w
  5726  1FAA  02A0               	subwf	__tdiv_to_l_@f1,f
  5727  1FAB  0825               	movf	__tdiv_to_l_@f2+1,w
  5728  1FAC  1C03               	skipc
  5729  1FAD  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5730  1FAE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5731  1FAF  0826               	movf	__tdiv_to_l_@f2+2,w
  5732  1FB0  1C03               	skipc
  5733  1FB1  0A26               	incf	__tdiv_to_l_@f2+2,w
  5734  1FB2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5735  1FB3                     l3963:
  5736  1FB3  1428               	bsf	__tdiv_to_l_@quot,0
  5737  1FB4                     l3965:
  5738  1FB4  3001               	movlw	1
  5739  1FB5                     u6095:
  5740  1FB5  1003               	clrc
  5741  1FB6  0DA0               	rlf	__tdiv_to_l_@f1,f
  5742  1FB7  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5743  1FB8  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5744  1FB9  3EFF               	addlw	-1
  5745  1FBA  1D03               	skipz
  5746  1FBB  2FB5               	goto	u6095
  5747  1FBC                     l3967:
  5748  1FBC  3001               	movlw	1
  5749  1FBD  02AC               	subwf	__tdiv_to_l_@cntr,f
  5750  1FBE  1D03               	btfss	3,2
  5751  1FBF  2FC1               	goto	u6101
  5752  1FC0  2FC2               	goto	u6100
  5753  1FC1                     u6101:
  5754  1FC1  2F92               	goto	l3957
  5755  1FC2                     u6100:
  5756  1FC2                     l657:
  5757  1FC2  1FAD               	btfss	__tdiv_to_l_@exp1,7
  5758  1FC3  2FC5               	goto	u6111
  5759  1FC4  2FC6               	goto	u6110
  5760  1FC5                     u6111:
  5761  1FC5  2FE0               	goto	l3977
  5762  1FC6                     u6110:
  5763  1FC6                     l3969:
  5764  1FC6  082D               	movf	__tdiv_to_l_@exp1,w
  5765  1FC7  3A80               	xorlw	128
  5766  1FC8  3E97               	addlw	151
  5767  1FC9  1803               	skipnc
  5768  1FCA  2FCC               	goto	u6121
  5769  1FCB  2FCD               	goto	u6120
  5770  1FCC                     u6121:
  5771  1FCC  2FCE               	goto	l3975
  5772  1FCD                     u6120:
  5773  1FCD  2F56               	goto	l3939
  5774  1FCE                     l3975:
  5775  1FCE  3001               	movlw	1
  5776  1FCF                     u6135:
  5777  1FCF  1003               	clrc
  5778  1FD0  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  5779  1FD1  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  5780  1FD2  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  5781  1FD3  0CA8               	rrf	__tdiv_to_l_@quot,f
  5782  1FD4  3EFF               	addlw	-1
  5783  1FD5  1D03               	skipz
  5784  1FD6  2FCF               	goto	u6135
  5785  1FD7  3001               	movlw	1
  5786  1FD8  00F3               	movwf	??__tdiv_to_l_
  5787  1FD9  0873               	movf	??__tdiv_to_l_,w
  5788  1FDA  07AD               	addwf	__tdiv_to_l_@exp1,f
  5789  1FDB  1D03               	btfss	3,2
  5790  1FDC  2FDE               	goto	u6141
  5791  1FDD  2FDF               	goto	u6140
  5792  1FDE                     u6141:
  5793  1FDE  2FCE               	goto	l3975
  5794  1FDF                     u6140:
  5795  1FDF  2FF7               	goto	l3985
  5796  1FE0                     l3977:
  5797  1FE0  3018               	movlw	24
  5798  1FE1  022D               	subwf	__tdiv_to_l_@exp1,w
  5799  1FE2  1C03               	skipc
  5800  1FE3  2FE5               	goto	u6151
  5801  1FE4  2FE6               	goto	u6150
  5802  1FE5                     u6151:
  5803  1FE5  2FF2               	goto	l664
  5804  1FE6                     u6150:
  5805  1FE6  2F56               	goto	l3939
  5806  1FE7                     l3983:
  5807  1FE7  3001               	movlw	1
  5808  1FE8  00F3               	movwf	??__tdiv_to_l_
  5809  1FE9                     u6165:
  5810  1FE9  1003               	clrc
  5811  1FEA  0DA8               	rlf	__tdiv_to_l_@quot,f
  5812  1FEB  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5813  1FEC  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5814  1FED  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5815  1FEE  0BF3               	decfsz	??__tdiv_to_l_,f
  5816  1FEF  2FE9               	goto	u6165
  5817  1FF0  3001               	movlw	1
  5818  1FF1  02AD               	subwf	__tdiv_to_l_@exp1,f
  5819  1FF2                     l664:
  5820  1FF2  082D               	movf	__tdiv_to_l_@exp1,w
  5821  1FF3  1D03               	btfss	3,2
  5822  1FF4  2FF6               	goto	u6171
  5823  1FF5  2FF7               	goto	u6170
  5824  1FF6                     u6171:
  5825  1FF6  2FE7               	goto	l3983
  5826  1FF7                     u6170:
  5827  1FF7                     l3985:
  5828  1FF7  082B               	movf	__tdiv_to_l_@quot+3,w
  5829  1FF8  00A3               	movwf	?__tdiv_to_l_+3
  5830  1FF9  082A               	movf	__tdiv_to_l_@quot+2,w
  5831  1FFA  00A2               	movwf	?__tdiv_to_l_+2
  5832  1FFB  0829               	movf	__tdiv_to_l_@quot+1,w
  5833  1FFC  00A1               	movwf	?__tdiv_to_l_+1
  5834  1FFD  0828               	movf	__tdiv_to_l_@quot,w
  5835  1FFE  00A0               	movwf	?__tdiv_to_l_
  5836  1FFF                     l653:
  5837  1FFF  0008               	return
  5838  2000                     __end_of__tdiv_to_l_:
  5839                           
  5840                           	psect	text12
  5841  10C2                     __ptext12:	
  5842 ;; *************** function __div_to_l_ *****************
  5843 ;; Defined at:
  5844 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  f1              4    0[BANK0 ] unsigned long 
  5847 ;;  f2              4    4[BANK0 ] unsigned long 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  quot            4    4[COMMON] unsigned long 
  5850 ;;  exp1            1    9[COMMON] unsigned char 
  5851 ;;  cntr            1    8[COMMON] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  4    0[BANK0 ] unsigned long 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5861 ;;      Params:         0       8       0       0       0
  5862 ;;      Locals:         6       0       0       0       0
  5863 ;;      Temps:          1       0       0       0       0
  5864 ;;      Totals:         7       8       0       0       0
  5865 ;;Total ram usage:       15 bytes
  5866 ;; Hardware stack levels used: 1
  5867 ;; Hardware stack levels required when called: 2
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_sprintf
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           
  5876                           ;psect for function __div_to_l_
  5877  10C2                     __div_to_l_:
  5878  10C2                     l3989:	
  5879                           ;incstack = 0
  5880                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5881                           
  5882  10C2  1003               	clrc
  5883  10C3  1283               	bcf	3,5	;RP0=0, select bank0
  5884  10C4  1303               	bcf	3,6	;RP1=0, select bank0
  5885  10C5  0D22               	rlf	__div_to_l_@f1+2,w
  5886  10C6  0D23               	rlf	__div_to_l_@f1+3,w
  5887  10C7  00F3               	movwf	??__div_to_l_
  5888  10C8  0873               	movf	??__div_to_l_,w
  5889  10C9  00F9               	movwf	__div_to_l_@exp1
  5890  10CA  0879               	movf	__div_to_l_@exp1,w
  5891  10CB  1D03               	btfss	3,2
  5892  10CC  28CE               	goto	u6181
  5893  10CD  28CF               	goto	u6180
  5894  10CE                     u6181:
  5895  10CE  28D8               	goto	l3995
  5896  10CF                     u6180:
  5897  10CF                     l3991:
  5898  10CF  3000               	movlw	0
  5899  10D0  00A3               	movwf	?__div_to_l_+3
  5900  10D1  3000               	movlw	0
  5901  10D2  00A2               	movwf	?__div_to_l_+2
  5902  10D3  3000               	movlw	0
  5903  10D4  00A1               	movwf	?__div_to_l_+1
  5904  10D5  3000               	movlw	0
  5905  10D6  00A0               	movwf	?__div_to_l_
  5906  10D7  2981               	goto	l606
  5907  10D8                     l3995:
  5908  10D8  1003               	clrc
  5909  10D9  0D26               	rlf	__div_to_l_@f2+2,w
  5910  10DA  0D27               	rlf	__div_to_l_@f2+3,w
  5911  10DB  00F3               	movwf	??__div_to_l_
  5912  10DC  0873               	movf	??__div_to_l_,w
  5913  10DD  00F8               	movwf	__div_to_l_@cntr
  5914  10DE  0878               	movf	__div_to_l_@cntr,w
  5915  10DF  1D03               	btfss	3,2
  5916  10E0  28E2               	goto	u6191
  5917  10E1  28E3               	goto	u6190
  5918  10E2                     u6191:
  5919  10E2  28E4               	goto	l607
  5920  10E3                     u6190:
  5921  10E3  28CF               	goto	l3991
  5922  10E4                     l607:
  5923  10E4  17A2               	bsf	__div_to_l_@f1+2,7
  5924  10E5                     l4001:
  5925  10E5  30FF               	movlw	255
  5926  10E6  05A0               	andwf	__div_to_l_@f1,f
  5927  10E7  30FF               	movlw	255
  5928  10E8  05A1               	andwf	__div_to_l_@f1+1,f
  5929  10E9  30FF               	movlw	255
  5930  10EA  05A2               	andwf	__div_to_l_@f1+2,f
  5931  10EB  3000               	movlw	0
  5932  10EC  05A3               	andwf	__div_to_l_@f1+3,f
  5933  10ED                     l4003:
  5934  10ED  17A6               	bsf	__div_to_l_@f2+2,7
  5935  10EE  30FF               	movlw	255
  5936  10EF  05A4               	andwf	__div_to_l_@f2,f
  5937  10F0  30FF               	movlw	255
  5938  10F1  05A5               	andwf	__div_to_l_@f2+1,f
  5939  10F2  30FF               	movlw	255
  5940  10F3  05A6               	andwf	__div_to_l_@f2+2,f
  5941  10F4  3000               	movlw	0
  5942  10F5  05A7               	andwf	__div_to_l_@f2+3,f
  5943  10F6  3000               	movlw	0
  5944  10F7  00F7               	movwf	__div_to_l_@quot+3
  5945  10F8  3000               	movlw	0
  5946  10F9  00F6               	movwf	__div_to_l_@quot+2
  5947  10FA  3000               	movlw	0
  5948  10FB  00F5               	movwf	__div_to_l_@quot+1
  5949  10FC  3000               	movlw	0
  5950  10FD  00F4               	movwf	__div_to_l_@quot
  5951  10FE                     l4005:
  5952  10FE  307F               	movlw	127
  5953  10FF  02F9               	subwf	__div_to_l_@exp1,f
  5954  1100                     l4007:
  5955  1100  30A0               	movlw	160
  5956  1101  0778               	addwf	__div_to_l_@cntr,w
  5957  1102  00F3               	movwf	??__div_to_l_
  5958  1103  0873               	movf	??__div_to_l_,w
  5959  1104  02F9               	subwf	__div_to_l_@exp1,f
  5960  1105  3020               	movlw	32
  5961  1106  00F3               	movwf	??__div_to_l_
  5962  1107  0873               	movf	??__div_to_l_,w
  5963  1108  00F8               	movwf	__div_to_l_@cntr
  5964  1109                     l4009:
  5965  1109  3001               	movlw	1
  5966  110A  00F3               	movwf	??__div_to_l_
  5967  110B                     u6205:
  5968  110B  1003               	clrc
  5969  110C  0DF4               	rlf	__div_to_l_@quot,f
  5970  110D  0DF5               	rlf	__div_to_l_@quot+1,f
  5971  110E  0DF6               	rlf	__div_to_l_@quot+2,f
  5972  110F  0DF7               	rlf	__div_to_l_@quot+3,f
  5973  1110  0BF3               	decfsz	??__div_to_l_,f
  5974  1111  290B               	goto	u6205
  5975  1112                     l4011:
  5976  1112  0827               	movf	__div_to_l_@f2+3,w
  5977  1113  0223               	subwf	__div_to_l_@f1+3,w
  5978  1114  1D03               	skipz
  5979  1115  2920               	goto	u6215
  5980  1116  0826               	movf	__div_to_l_@f2+2,w
  5981  1117  0222               	subwf	__div_to_l_@f1+2,w
  5982  1118  1D03               	skipz
  5983  1119  2920               	goto	u6215
  5984  111A  0825               	movf	__div_to_l_@f2+1,w
  5985  111B  0221               	subwf	__div_to_l_@f1+1,w
  5986  111C  1D03               	skipz
  5987  111D  2920               	goto	u6215
  5988  111E  0824               	movf	__div_to_l_@f2,w
  5989  111F  0220               	subwf	__div_to_l_@f1,w
  5990  1120                     u6215:
  5991  1120  1C03               	skipc
  5992  1121  2923               	goto	u6211
  5993  1122  2924               	goto	u6210
  5994  1123                     u6211:
  5995  1123  2933               	goto	l4017
  5996  1124                     u6210:
  5997  1124                     l4013:
  5998  1124  0824               	movf	__div_to_l_@f2,w
  5999  1125  02A0               	subwf	__div_to_l_@f1,f
  6000  1126  0825               	movf	__div_to_l_@f2+1,w
  6001  1127  1C03               	skipc
  6002  1128  0F25               	incfsz	__div_to_l_@f2+1,w
  6003  1129  02A1               	subwf	__div_to_l_@f1+1,f
  6004  112A  0826               	movf	__div_to_l_@f2+2,w
  6005  112B  1C03               	skipc
  6006  112C  0F26               	incfsz	__div_to_l_@f2+2,w
  6007  112D  02A2               	subwf	__div_to_l_@f1+2,f
  6008  112E  0827               	movf	__div_to_l_@f2+3,w
  6009  112F  1C03               	skipc
  6010  1130  0F27               	incfsz	__div_to_l_@f2+3,w
  6011  1131  02A3               	subwf	__div_to_l_@f1+3,f
  6012  1132                     l4015:
  6013  1132  1474               	bsf	__div_to_l_@quot,0
  6014  1133                     l4017:
  6015  1133  3001               	movlw	1
  6016  1134  00F3               	movwf	??__div_to_l_
  6017  1135                     u6225:
  6018  1135  1003               	clrc
  6019  1136  0DA0               	rlf	__div_to_l_@f1,f
  6020  1137  0DA1               	rlf	__div_to_l_@f1+1,f
  6021  1138  0DA2               	rlf	__div_to_l_@f1+2,f
  6022  1139  0DA3               	rlf	__div_to_l_@f1+3,f
  6023  113A  0BF3               	decfsz	??__div_to_l_,f
  6024  113B  2935               	goto	u6225
  6025  113C                     l4019:
  6026  113C  3001               	movlw	1
  6027  113D  02F8               	subwf	__div_to_l_@cntr,f
  6028  113E  1D03               	btfss	3,2
  6029  113F  2941               	goto	u6231
  6030  1140  2942               	goto	u6230
  6031  1141                     u6231:
  6032  1141  2909               	goto	l4009
  6033  1142                     u6230:
  6034  1142                     l610:
  6035  1142  1FF9               	btfss	__div_to_l_@exp1,7
  6036  1143  2945               	goto	u6241
  6037  1144  2946               	goto	u6240
  6038  1145                     u6241:
  6039  1145  2960               	goto	l4029
  6040  1146                     u6240:
  6041  1146                     l4021:
  6042  1146  0879               	movf	__div_to_l_@exp1,w
  6043  1147  3A80               	xorlw	128
  6044  1148  3E9F               	addlw	159
  6045  1149  1803               	skipnc
  6046  114A  294C               	goto	u6251
  6047  114B  294D               	goto	u6250
  6048  114C                     u6251:
  6049  114C  294E               	goto	l4027
  6050  114D                     u6250:
  6051  114D  28CF               	goto	l3991
  6052  114E                     l4027:
  6053  114E  3001               	movlw	1
  6054  114F                     u6265:
  6055  114F  1003               	clrc
  6056  1150  0CF7               	rrf	__div_to_l_@quot+3,f
  6057  1151  0CF6               	rrf	__div_to_l_@quot+2,f
  6058  1152  0CF5               	rrf	__div_to_l_@quot+1,f
  6059  1153  0CF4               	rrf	__div_to_l_@quot,f
  6060  1154  3EFF               	addlw	-1
  6061  1155  1D03               	skipz
  6062  1156  294F               	goto	u6265
  6063  1157  3001               	movlw	1
  6064  1158  00F3               	movwf	??__div_to_l_
  6065  1159  0873               	movf	??__div_to_l_,w
  6066  115A  07F9               	addwf	__div_to_l_@exp1,f
  6067  115B  1D03               	btfss	3,2
  6068  115C  295E               	goto	u6271
  6069  115D  295F               	goto	u6270
  6070  115E                     u6271:
  6071  115E  294E               	goto	l4027
  6072  115F                     u6270:
  6073  115F  2977               	goto	l4037
  6074  1160                     l4029:
  6075  1160  3020               	movlw	32
  6076  1161  0279               	subwf	__div_to_l_@exp1,w
  6077  1162  1C03               	skipc
  6078  1163  2965               	goto	u6281
  6079  1164  2966               	goto	u6280
  6080  1165                     u6281:
  6081  1165  2972               	goto	l617
  6082  1166                     u6280:
  6083  1166  28CF               	goto	l3991
  6084  1167                     l4035:
  6085  1167  3001               	movlw	1
  6086  1168  00F3               	movwf	??__div_to_l_
  6087  1169                     u6295:
  6088  1169  1003               	clrc
  6089  116A  0DF4               	rlf	__div_to_l_@quot,f
  6090  116B  0DF5               	rlf	__div_to_l_@quot+1,f
  6091  116C  0DF6               	rlf	__div_to_l_@quot+2,f
  6092  116D  0DF7               	rlf	__div_to_l_@quot+3,f
  6093  116E  0BF3               	decfsz	??__div_to_l_,f
  6094  116F  2969               	goto	u6295
  6095  1170  3001               	movlw	1
  6096  1171  02F9               	subwf	__div_to_l_@exp1,f
  6097  1172                     l617:
  6098  1172  0879               	movf	__div_to_l_@exp1,w
  6099  1173  1D03               	btfss	3,2
  6100  1174  2976               	goto	u6301
  6101  1175  2977               	goto	u6300
  6102  1176                     u6301:
  6103  1176  2967               	goto	l4035
  6104  1177                     u6300:
  6105  1177                     l4037:
  6106  1177  0877               	movf	__div_to_l_@quot+3,w
  6107  1178  1283               	bcf	3,5	;RP0=0, select bank0
  6108  1179  1303               	bcf	3,6	;RP1=0, select bank0
  6109  117A  00A3               	movwf	?__div_to_l_+3
  6110  117B  0876               	movf	__div_to_l_@quot+2,w
  6111  117C  00A2               	movwf	?__div_to_l_+2
  6112  117D  0875               	movf	__div_to_l_@quot+1,w
  6113  117E  00A1               	movwf	?__div_to_l_+1
  6114  117F  0874               	movf	__div_to_l_@quot,w
  6115  1180  00A0               	movwf	?__div_to_l_
  6116  1181                     l606:
  6117  1181  0008               	return
  6118  1182                     __end_of__div_to_l_:
  6119                           
  6120                           	psect	text13
  6121  1E87                     __ptext13:	
  6122 ;; *************** function ___xxtofl *****************
  6123 ;; Defined at:
  6124 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  sign            1    wreg     unsigned char 
  6127 ;;  val             4    3[COMMON] long 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  sign            1    4[BANK0 ] unsigned char 
  6130 ;;  arg             4    6[BANK0 ] unsigned long 
  6131 ;;  exp             1    5[BANK0 ] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  4    3[COMMON] unsigned char 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6141 ;;      Params:         4       0       0       0       0
  6142 ;;      Locals:         0       6       0       0       0
  6143 ;;      Temps:          0       4       0       0       0
  6144 ;;      Totals:         4      10       0       0       0
  6145 ;;Total ram usage:       14 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 2
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_main
  6152 ;;		_sprintf
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function ___xxtofl
  6158  1E87                     ___xxtofl:
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6162                           ;___xxtofl@sign stored from wreg
  6163  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  6164  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  6165  1E89  00A4               	movwf	___xxtofl@sign
  6166  1E8A                     l4117:
  6167  1E8A  0824               	movf	___xxtofl@sign,w
  6168  1E8B  1903               	btfsc	3,2
  6169  1E8C  2E8E               	goto	u6541
  6170  1E8D  2E8F               	goto	u6540
  6171  1E8E                     u6541:
  6172  1E8E  2EA3               	goto	l4123
  6173  1E8F                     u6540:
  6174  1E8F                     l4119:
  6175  1E8F  1FF6               	btfss	___xxtofl@val+3,7
  6176  1E90  2E92               	goto	u6551
  6177  1E91  2E93               	goto	u6550
  6178  1E92                     u6551:
  6179  1E92  2EA3               	goto	l4123
  6180  1E93                     u6550:
  6181  1E93                     l4121:
  6182  1E93  0973               	comf	___xxtofl@val,w
  6183  1E94  00A6               	movwf	___xxtofl@arg
  6184  1E95  0974               	comf	___xxtofl@val+1,w
  6185  1E96  00A7               	movwf	___xxtofl@arg+1
  6186  1E97  0975               	comf	___xxtofl@val+2,w
  6187  1E98  00A8               	movwf	___xxtofl@arg+2
  6188  1E99  0976               	comf	___xxtofl@val+3,w
  6189  1E9A  00A9               	movwf	___xxtofl@arg+3
  6190  1E9B  0AA6               	incf	___xxtofl@arg,f
  6191  1E9C  1903               	skipnz
  6192  1E9D  0AA7               	incf	___xxtofl@arg+1,f
  6193  1E9E  1903               	skipnz
  6194  1E9F  0AA8               	incf	___xxtofl@arg+2,f
  6195  1EA0  1903               	skipnz
  6196  1EA1  0AA9               	incf	___xxtofl@arg+3,f
  6197  1EA2  2EAB               	goto	l903
  6198  1EA3                     l4123:
  6199  1EA3  0876               	movf	___xxtofl@val+3,w
  6200  1EA4  00A9               	movwf	___xxtofl@arg+3
  6201  1EA5  0875               	movf	___xxtofl@val+2,w
  6202  1EA6  00A8               	movwf	___xxtofl@arg+2
  6203  1EA7  0874               	movf	___xxtofl@val+1,w
  6204  1EA8  00A7               	movwf	___xxtofl@arg+1
  6205  1EA9  0873               	movf	___xxtofl@val,w
  6206  1EAA  00A6               	movwf	___xxtofl@arg
  6207  1EAB                     l903:
  6208  1EAB  0876               	movf	___xxtofl@val+3,w
  6209  1EAC  0475               	iorwf	___xxtofl@val+2,w
  6210  1EAD  0474               	iorwf	___xxtofl@val+1,w
  6211  1EAE  0473               	iorwf	___xxtofl@val,w
  6212  1EAF  1D03               	skipz
  6213  1EB0  2EB2               	goto	u6561
  6214  1EB1  2EB3               	goto	u6560
  6215  1EB2                     u6561:
  6216  1EB2  2EBC               	goto	l4129
  6217  1EB3                     u6560:
  6218  1EB3                     l4125:
  6219  1EB3  3000               	movlw	0
  6220  1EB4  00F6               	movwf	?___xxtofl+3
  6221  1EB5  3000               	movlw	0
  6222  1EB6  00F5               	movwf	?___xxtofl+2
  6223  1EB7  3000               	movlw	0
  6224  1EB8  00F4               	movwf	?___xxtofl+1
  6225  1EB9  3000               	movlw	0
  6226  1EBA  00F3               	movwf	?___xxtofl
  6227  1EBB  2F42               	goto	l905
  6228  1EBC                     l4129:
  6229  1EBC  3096               	movlw	150
  6230  1EBD  00A0               	movwf	??___xxtofl
  6231  1EBE  0820               	movf	??___xxtofl,w
  6232  1EBF  00A5               	movwf	___xxtofl@exp
  6233  1EC0  2ECE               	goto	l4133
  6234  1EC1                     l4131:
  6235  1EC1  3001               	movlw	1
  6236  1EC2  00A0               	movwf	??___xxtofl
  6237  1EC3  0820               	movf	??___xxtofl,w
  6238  1EC4  07A5               	addwf	___xxtofl@exp,f
  6239  1EC5  3001               	movlw	1
  6240  1EC6                     u6575:
  6241  1EC6  1003               	clrc
  6242  1EC7  0CA9               	rrf	___xxtofl@arg+3,f
  6243  1EC8  0CA8               	rrf	___xxtofl@arg+2,f
  6244  1EC9  0CA7               	rrf	___xxtofl@arg+1,f
  6245  1ECA  0CA6               	rrf	___xxtofl@arg,f
  6246  1ECB  3EFF               	addlw	-1
  6247  1ECC  1D03               	skipz
  6248  1ECD  2EC6               	goto	u6575
  6249  1ECE                     l4133:
  6250  1ECE  30FE               	movlw	254
  6251  1ECF  0529               	andwf	___xxtofl@arg+3,w
  6252  1ED0  1D03               	btfss	3,2
  6253  1ED1  2ED3               	goto	u6581
  6254  1ED2  2ED4               	goto	u6580
  6255  1ED3                     u6581:
  6256  1ED3  2EC1               	goto	l4131
  6257  1ED4                     u6580:
  6258  1ED4  2EF0               	goto	l909
  6259  1ED5                     l4135:
  6260  1ED5  3001               	movlw	1
  6261  1ED6  00A0               	movwf	??___xxtofl
  6262  1ED7  0820               	movf	??___xxtofl,w
  6263  1ED8  07A5               	addwf	___xxtofl@exp,f
  6264  1ED9                     l4137:
  6265  1ED9  3001               	movlw	1
  6266  1EDA  07A6               	addwf	___xxtofl@arg,f
  6267  1EDB  3000               	movlw	0
  6268  1EDC  1803               	skipnc
  6269  1EDD  3001               	movlw	1
  6270  1EDE  07A7               	addwf	___xxtofl@arg+1,f
  6271  1EDF  3000               	movlw	0
  6272  1EE0  1803               	skipnc
  6273  1EE1  3001               	movlw	1
  6274  1EE2  07A8               	addwf	___xxtofl@arg+2,f
  6275  1EE3  3000               	movlw	0
  6276  1EE4  1803               	skipnc
  6277  1EE5  3001               	movlw	1
  6278  1EE6  07A9               	addwf	___xxtofl@arg+3,f
  6279  1EE7                     l4139:
  6280  1EE7  3001               	movlw	1
  6281  1EE8                     u6595:
  6282  1EE8  1003               	clrc
  6283  1EE9  0CA9               	rrf	___xxtofl@arg+3,f
  6284  1EEA  0CA8               	rrf	___xxtofl@arg+2,f
  6285  1EEB  0CA7               	rrf	___xxtofl@arg+1,f
  6286  1EEC  0CA6               	rrf	___xxtofl@arg,f
  6287  1EED  3EFF               	addlw	-1
  6288  1EEE  1D03               	skipz
  6289  1EEF  2EE8               	goto	u6595
  6290  1EF0                     l909:
  6291  1EF0  30FF               	movlw	255
  6292  1EF1  0529               	andwf	___xxtofl@arg+3,w
  6293  1EF2  1D03               	btfss	3,2
  6294  1EF3  2EF5               	goto	u6601
  6295  1EF4  2EF6               	goto	u6600
  6296  1EF5                     u6601:
  6297  1EF5  2ED5               	goto	l4135
  6298  1EF6                     u6600:
  6299  1EF6  2F02               	goto	l4143
  6300  1EF7                     l4141:
  6301  1EF7  3001               	movlw	1
  6302  1EF8  02A5               	subwf	___xxtofl@exp,f
  6303  1EF9  3001               	movlw	1
  6304  1EFA  00A0               	movwf	??___xxtofl
  6305  1EFB                     u6615:
  6306  1EFB  1003               	clrc
  6307  1EFC  0DA6               	rlf	___xxtofl@arg,f
  6308  1EFD  0DA7               	rlf	___xxtofl@arg+1,f
  6309  1EFE  0DA8               	rlf	___xxtofl@arg+2,f
  6310  1EFF  0DA9               	rlf	___xxtofl@arg+3,f
  6311  1F00  0BA0               	decfsz	??___xxtofl,f
  6312  1F01  2EFB               	goto	u6615
  6313  1F02                     l4143:
  6314  1F02  1BA8               	btfsc	___xxtofl@arg+2,7
  6315  1F03  2F05               	goto	u6621
  6316  1F04  2F06               	goto	u6620
  6317  1F05                     u6621:
  6318  1F05  2F0C               	goto	l916
  6319  1F06                     u6620:
  6320  1F06                     l4145:
  6321  1F06  3002               	movlw	2
  6322  1F07  0225               	subwf	___xxtofl@exp,w
  6323  1F08  1803               	skipnc
  6324  1F09  2F0B               	goto	u6631
  6325  1F0A  2F0C               	goto	u6630
  6326  1F0B                     u6631:
  6327  1F0B  2EF7               	goto	l4141
  6328  1F0C                     u6630:
  6329  1F0C                     l916:
  6330  1F0C  1825               	btfsc	___xxtofl@exp,0
  6331  1F0D  2F0F               	goto	u6641
  6332  1F0E  2F10               	goto	u6640
  6333  1F0F                     u6641:
  6334  1F0F  2F18               	goto	l917
  6335  1F10                     u6640:
  6336  1F10                     l4147:
  6337  1F10  30FF               	movlw	255
  6338  1F11  05A6               	andwf	___xxtofl@arg,f
  6339  1F12  30FF               	movlw	255
  6340  1F13  05A7               	andwf	___xxtofl@arg+1,f
  6341  1F14  307F               	movlw	127
  6342  1F15  05A8               	andwf	___xxtofl@arg+2,f
  6343  1F16  30FF               	movlw	255
  6344  1F17  05A9               	andwf	___xxtofl@arg+3,f
  6345  1F18                     l917:
  6346  1F18  1003               	clrc
  6347  1F19  0CA5               	rrf	___xxtofl@exp,f
  6348  1F1A                     l4149:
  6349  1F1A  0825               	movf	___xxtofl@exp,w
  6350  1F1B  00A0               	movwf	??___xxtofl
  6351  1F1C  01A1               	clrf	??___xxtofl+1
  6352  1F1D  01A2               	clrf	??___xxtofl+2
  6353  1F1E  01A3               	clrf	??___xxtofl+3
  6354  1F1F  3018               	movlw	24
  6355  1F20                     u6655:
  6356  1F20  1003               	clrc
  6357  1F21  0DA0               	rlf	??___xxtofl,f
  6358  1F22  0DA1               	rlf	??___xxtofl+1,f
  6359  1F23  0DA2               	rlf	??___xxtofl+2,f
  6360  1F24  0DA3               	rlf	??___xxtofl+3,f
  6361  1F25                     u6650:
  6362  1F25  3EFF               	addlw	-1
  6363  1F26  1D03               	skipz
  6364  1F27  2F20               	goto	u6655
  6365  1F28  0820               	movf	??___xxtofl,w
  6366  1F29  04A6               	iorwf	___xxtofl@arg,f
  6367  1F2A  0821               	movf	??___xxtofl+1,w
  6368  1F2B  04A7               	iorwf	___xxtofl@arg+1,f
  6369  1F2C  0822               	movf	??___xxtofl+2,w
  6370  1F2D  04A8               	iorwf	___xxtofl@arg+2,f
  6371  1F2E  0823               	movf	??___xxtofl+3,w
  6372  1F2F  04A9               	iorwf	___xxtofl@arg+3,f
  6373  1F30                     l4151:
  6374  1F30  0824               	movf	___xxtofl@sign,w
  6375  1F31  1903               	btfsc	3,2
  6376  1F32  2F34               	goto	u6661
  6377  1F33  2F35               	goto	u6660
  6378  1F34                     u6661:
  6379  1F34  2F3A               	goto	l4157
  6380  1F35                     u6660:
  6381  1F35                     l4153:
  6382  1F35  1FF6               	btfss	___xxtofl@val+3,7
  6383  1F36  2F38               	goto	u6671
  6384  1F37  2F39               	goto	u6670
  6385  1F38                     u6671:
  6386  1F38  2F3A               	goto	l4157
  6387  1F39                     u6670:
  6388  1F39                     l4155:
  6389  1F39  17A9               	bsf	___xxtofl@arg+3,7
  6390  1F3A                     l4157:
  6391  1F3A  0829               	movf	___xxtofl@arg+3,w
  6392  1F3B  00F6               	movwf	?___xxtofl+3
  6393  1F3C  0828               	movf	___xxtofl@arg+2,w
  6394  1F3D  00F5               	movwf	?___xxtofl+2
  6395  1F3E  0827               	movf	___xxtofl@arg+1,w
  6396  1F3F  00F4               	movwf	?___xxtofl+1
  6397  1F40  0826               	movf	___xxtofl@arg,w
  6398  1F41  00F3               	movwf	?___xxtofl
  6399  1F42                     l905:
  6400  1F42  0008               	return
  6401  1F43                     __end_of___xxtofl:
  6402                           
  6403                           	psect	text14
  6404  1989                     __ptext14:	
  6405 ;; *************** function ___wmul *****************
  6406 ;; Defined at:
  6407 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  multiplier      2    3[COMMON] unsigned int 
  6410 ;;  multiplicand    2    5[COMMON] unsigned int 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  product         2    7[COMMON] unsigned int 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  2    3[COMMON] unsigned int 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6422 ;;      Params:         4       0       0       0       0
  6423 ;;      Locals:         2       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0
  6425 ;;      Totals:         6       0       0       0       0
  6426 ;;Total ram usage:        6 bytes
  6427 ;; Hardware stack levels used: 1
  6428 ;; Hardware stack levels required when called: 2
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_sprintf
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           
  6437                           ;psect for function ___wmul
  6438  1989                     ___wmul:
  6439  1989                     l3113:	
  6440                           ;incstack = 0
  6441                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6442                           
  6443  1989  01F7               	clrf	___wmul@product
  6444  198A  01F8               	clrf	___wmul@product+1
  6445  198B                     l3115:
  6446  198B  1C73               	btfss	___wmul@multiplier,0
  6447  198C  298E               	goto	u4661
  6448  198D  298F               	goto	u4660
  6449  198E                     u4661:
  6450  198E  2995               	goto	l436
  6451  198F                     u4660:
  6452  198F                     l3117:
  6453  198F  0875               	movf	___wmul@multiplicand,w
  6454  1990  07F7               	addwf	___wmul@product,f
  6455  1991  1803               	skipnc
  6456  1992  0AF8               	incf	___wmul@product+1,f
  6457  1993  0876               	movf	___wmul@multiplicand+1,w
  6458  1994  07F8               	addwf	___wmul@product+1,f
  6459  1995                     l436:
  6460  1995  3001               	movlw	1
  6461  1996                     u4675:
  6462  1996  1003               	clrc
  6463  1997  0DF5               	rlf	___wmul@multiplicand,f
  6464  1998  0DF6               	rlf	___wmul@multiplicand+1,f
  6465  1999  3EFF               	addlw	-1
  6466  199A  1D03               	skipz
  6467  199B  2996               	goto	u4675
  6468  199C                     l3119:
  6469  199C  3001               	movlw	1
  6470  199D                     u4685:
  6471  199D  1003               	clrc
  6472  199E  0CF4               	rrf	___wmul@multiplier+1,f
  6473  199F  0CF3               	rrf	___wmul@multiplier,f
  6474  19A0  3EFF               	addlw	-1
  6475  19A1  1D03               	skipz
  6476  19A2  299D               	goto	u4685
  6477  19A3                     l3121:
  6478  19A3  0873               	movf	___wmul@multiplier,w
  6479  19A4  0474               	iorwf	___wmul@multiplier+1,w
  6480  19A5  1D03               	btfss	3,2
  6481  19A6  29A8               	goto	u4691
  6482  19A7  29A9               	goto	u4690
  6483  19A8                     u4691:
  6484  19A8  298B               	goto	l3115
  6485  19A9                     u4690:
  6486  19A9                     l3123:
  6487  19A9  0878               	movf	___wmul@product+1,w
  6488  19AA  00F4               	movwf	?___wmul+1
  6489  19AB  0877               	movf	___wmul@product,w
  6490  19AC  00F3               	movwf	?___wmul
  6491  19AD                     l438:
  6492  19AD  0008               	return
  6493  19AE                     __end_of___wmul:
  6494                           
  6495                           	psect	text15
  6496  1B81                     __ptext15:	
  6497 ;; *************** function ___llmod *****************
  6498 ;; Defined at:
  6499 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  divisor         4    8[BANK0 ] unsigned long 
  6502 ;;  dividend        4   12[BANK0 ] unsigned long 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  counter         1   16[BANK0 ] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  4    8[BANK0 ] unsigned long 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6514 ;;      Params:         0       8       0       0       0
  6515 ;;      Locals:         0       1       0       0       0
  6516 ;;      Temps:          1       0       0       0       0
  6517 ;;      Totals:         1       9       0       0       0
  6518 ;;Total ram usage:       10 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; Hardware stack levels required when called: 2
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_sprintf
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           
  6529                           ;psect for function ___llmod
  6530  1B81                     ___llmod:
  6531  1B81                     l4097:	
  6532                           ;incstack = 0
  6533                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6534                           
  6535  1B81  1283               	bcf	3,5	;RP0=0, select bank0
  6536  1B82  1303               	bcf	3,6	;RP1=0, select bank0
  6537  1B83  082B               	movf	___llmod@divisor+3,w
  6538  1B84  042A               	iorwf	___llmod@divisor+2,w
  6539  1B85  0429               	iorwf	___llmod@divisor+1,w
  6540  1B86  0428               	iorwf	___llmod@divisor,w
  6541  1B87  1903               	skipnz
  6542  1B88  2B8A               	goto	u6481
  6543  1B89  2B8B               	goto	u6480
  6544  1B8A                     u6481:
  6545  1B8A  2BCE               	goto	l4113
  6546  1B8B                     u6480:
  6547  1B8B                     l4099:
  6548  1B8B  01B0               	clrf	___llmod@counter
  6549  1B8C  0AB0               	incf	___llmod@counter,f
  6550  1B8D  2B9B               	goto	l4103
  6551  1B8E                     l4101:
  6552  1B8E  3001               	movlw	1
  6553  1B8F  00F9               	movwf	??___llmod
  6554  1B90                     u6495:
  6555  1B90  1003               	clrc
  6556  1B91  0DA8               	rlf	___llmod@divisor,f
  6557  1B92  0DA9               	rlf	___llmod@divisor+1,f
  6558  1B93  0DAA               	rlf	___llmod@divisor+2,f
  6559  1B94  0DAB               	rlf	___llmod@divisor+3,f
  6560  1B95  0BF9               	decfsz	??___llmod,f
  6561  1B96  2B90               	goto	u6495
  6562  1B97  3001               	movlw	1
  6563  1B98  00F9               	movwf	??___llmod
  6564  1B99  0879               	movf	??___llmod,w
  6565  1B9A  07B0               	addwf	___llmod@counter,f
  6566  1B9B                     l4103:
  6567  1B9B  1FAB               	btfss	___llmod@divisor+3,7
  6568  1B9C  2B9E               	goto	u6501
  6569  1B9D  2B9F               	goto	u6500
  6570  1B9E                     u6501:
  6571  1B9E  2B8E               	goto	l4101
  6572  1B9F                     u6500:
  6573  1B9F                     l4105:
  6574  1B9F  082B               	movf	___llmod@divisor+3,w
  6575  1BA0  022F               	subwf	___llmod@dividend+3,w
  6576  1BA1  1D03               	skipz
  6577  1BA2  2BAD               	goto	u6515
  6578  1BA3  082A               	movf	___llmod@divisor+2,w
  6579  1BA4  022E               	subwf	___llmod@dividend+2,w
  6580  1BA5  1D03               	skipz
  6581  1BA6  2BAD               	goto	u6515
  6582  1BA7  0829               	movf	___llmod@divisor+1,w
  6583  1BA8  022D               	subwf	___llmod@dividend+1,w
  6584  1BA9  1D03               	skipz
  6585  1BAA  2BAD               	goto	u6515
  6586  1BAB  0828               	movf	___llmod@divisor,w
  6587  1BAC  022C               	subwf	___llmod@dividend,w
  6588  1BAD                     u6515:
  6589  1BAD  1C03               	skipc
  6590  1BAE  2BB0               	goto	u6511
  6591  1BAF  2BB1               	goto	u6510
  6592  1BB0                     u6511:
  6593  1BB0  2BBF               	goto	l4109
  6594  1BB1                     u6510:
  6595  1BB1                     l4107:
  6596  1BB1  0828               	movf	___llmod@divisor,w
  6597  1BB2  02AC               	subwf	___llmod@dividend,f
  6598  1BB3  0829               	movf	___llmod@divisor+1,w
  6599  1BB4  1C03               	skipc
  6600  1BB5  0F29               	incfsz	___llmod@divisor+1,w
  6601  1BB6  02AD               	subwf	___llmod@dividend+1,f
  6602  1BB7  082A               	movf	___llmod@divisor+2,w
  6603  1BB8  1C03               	skipc
  6604  1BB9  0F2A               	incfsz	___llmod@divisor+2,w
  6605  1BBA  02AE               	subwf	___llmod@dividend+2,f
  6606  1BBB  082B               	movf	___llmod@divisor+3,w
  6607  1BBC  1C03               	skipc
  6608  1BBD  0F2B               	incfsz	___llmod@divisor+3,w
  6609  1BBE  02AF               	subwf	___llmod@dividend+3,f
  6610  1BBF                     l4109:
  6611  1BBF  3001               	movlw	1
  6612  1BC0                     u6525:
  6613  1BC0  1003               	clrc
  6614  1BC1  0CAB               	rrf	___llmod@divisor+3,f
  6615  1BC2  0CAA               	rrf	___llmod@divisor+2,f
  6616  1BC3  0CA9               	rrf	___llmod@divisor+1,f
  6617  1BC4  0CA8               	rrf	___llmod@divisor,f
  6618  1BC5  3EFF               	addlw	-1
  6619  1BC6  1D03               	skipz
  6620  1BC7  2BC0               	goto	u6525
  6621  1BC8                     l4111:
  6622  1BC8  3001               	movlw	1
  6623  1BC9  02B0               	subwf	___llmod@counter,f
  6624  1BCA  1D03               	btfss	3,2
  6625  1BCB  2BCD               	goto	u6531
  6626  1BCC  2BCE               	goto	u6530
  6627  1BCD                     u6531:
  6628  1BCD  2B9F               	goto	l4105
  6629  1BCE                     u6530:
  6630  1BCE                     l4113:
  6631  1BCE  082F               	movf	___llmod@dividend+3,w
  6632  1BCF  00AB               	movwf	?___llmod+3
  6633  1BD0  082E               	movf	___llmod@dividend+2,w
  6634  1BD1  00AA               	movwf	?___llmod+2
  6635  1BD2  082D               	movf	___llmod@dividend+1,w
  6636  1BD3  00A9               	movwf	?___llmod+1
  6637  1BD4  082C               	movf	___llmod@dividend,w
  6638  1BD5  00A8               	movwf	?___llmod
  6639  1BD6                     l692:
  6640  1BD6  0008               	return
  6641  1BD7                     __end_of___llmod:
  6642                           
  6643                           	psect	text16
  6644  1C96                     __ptext16:	
  6645 ;; *************** function ___lldiv *****************
  6646 ;; Defined at:
  6647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  divisor         4    0[BANK0 ] unsigned long 
  6650 ;;  dividend        4    4[BANK0 ] unsigned long 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  quotient        4    4[COMMON] unsigned long 
  6653 ;;  counter         1    8[COMMON] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  4    0[BANK0 ] unsigned long 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6663 ;;      Params:         0       8       0       0       0
  6664 ;;      Locals:         5       0       0       0       0
  6665 ;;      Temps:          1       0       0       0       0
  6666 ;;      Totals:         6       8       0       0       0
  6667 ;;Total ram usage:       14 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 2
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_sprintf
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           
  6678                           ;psect for function ___lldiv
  6679  1C96                     ___lldiv:
  6680  1C96                     l4041:	
  6681                           ;incstack = 0
  6682                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6683                           
  6684  1C96  3000               	movlw	0
  6685  1C97  00F7               	movwf	___lldiv@quotient+3
  6686  1C98  3000               	movlw	0
  6687  1C99  00F6               	movwf	___lldiv@quotient+2
  6688  1C9A  3000               	movlw	0
  6689  1C9B  00F5               	movwf	___lldiv@quotient+1
  6690  1C9C  3000               	movlw	0
  6691  1C9D  00F4               	movwf	___lldiv@quotient
  6692  1C9E  1283               	bcf	3,5	;RP0=0, select bank0
  6693  1C9F  1303               	bcf	3,6	;RP1=0, select bank0
  6694  1CA0  0823               	movf	___lldiv@divisor+3,w
  6695  1CA1  0422               	iorwf	___lldiv@divisor+2,w
  6696  1CA2  0421               	iorwf	___lldiv@divisor+1,w
  6697  1CA3  0420               	iorwf	___lldiv@divisor,w
  6698  1CA4  1903               	skipnz
  6699  1CA5  2CA7               	goto	u6311
  6700  1CA6  2CA8               	goto	u6310
  6701  1CA7                     u6311:
  6702  1CA7  2CF5               	goto	l4061
  6703  1CA8                     u6310:
  6704  1CA8                     l4043:
  6705  1CA8  01F8               	clrf	___lldiv@counter
  6706  1CA9  0AF8               	incf	___lldiv@counter,f
  6707  1CAA  2CB8               	goto	l4047
  6708  1CAB                     l4045:
  6709  1CAB  3001               	movlw	1
  6710  1CAC  00F3               	movwf	??___lldiv
  6711  1CAD                     u6325:
  6712  1CAD  1003               	clrc
  6713  1CAE  0DA0               	rlf	___lldiv@divisor,f
  6714  1CAF  0DA1               	rlf	___lldiv@divisor+1,f
  6715  1CB0  0DA2               	rlf	___lldiv@divisor+2,f
  6716  1CB1  0DA3               	rlf	___lldiv@divisor+3,f
  6717  1CB2  0BF3               	decfsz	??___lldiv,f
  6718  1CB3  2CAD               	goto	u6325
  6719  1CB4  3001               	movlw	1
  6720  1CB5  00F3               	movwf	??___lldiv
  6721  1CB6  0873               	movf	??___lldiv,w
  6722  1CB7  07F8               	addwf	___lldiv@counter,f
  6723  1CB8                     l4047:
  6724  1CB8  1FA3               	btfss	___lldiv@divisor+3,7
  6725  1CB9  2CBB               	goto	u6331
  6726  1CBA  2CBC               	goto	u6330
  6727  1CBB                     u6331:
  6728  1CBB  2CAB               	goto	l4045
  6729  1CBC                     u6330:
  6730  1CBC                     l4049:
  6731  1CBC  3001               	movlw	1
  6732  1CBD  00F3               	movwf	??___lldiv
  6733  1CBE                     u6345:
  6734  1CBE  1003               	clrc
  6735  1CBF  0DF4               	rlf	___lldiv@quotient,f
  6736  1CC0  0DF5               	rlf	___lldiv@quotient+1,f
  6737  1CC1  0DF6               	rlf	___lldiv@quotient+2,f
  6738  1CC2  0DF7               	rlf	___lldiv@quotient+3,f
  6739  1CC3  0BF3               	decfsz	??___lldiv,f
  6740  1CC4  2CBE               	goto	u6345
  6741  1CC5                     l4051:
  6742  1CC5  0823               	movf	___lldiv@divisor+3,w
  6743  1CC6  0227               	subwf	___lldiv@dividend+3,w
  6744  1CC7  1D03               	skipz
  6745  1CC8  2CD3               	goto	u6355
  6746  1CC9  0822               	movf	___lldiv@divisor+2,w
  6747  1CCA  0226               	subwf	___lldiv@dividend+2,w
  6748  1CCB  1D03               	skipz
  6749  1CCC  2CD3               	goto	u6355
  6750  1CCD  0821               	movf	___lldiv@divisor+1,w
  6751  1CCE  0225               	subwf	___lldiv@dividend+1,w
  6752  1CCF  1D03               	skipz
  6753  1CD0  2CD3               	goto	u6355
  6754  1CD1  0820               	movf	___lldiv@divisor,w
  6755  1CD2  0224               	subwf	___lldiv@dividend,w
  6756  1CD3                     u6355:
  6757  1CD3  1C03               	skipc
  6758  1CD4  2CD6               	goto	u6351
  6759  1CD5  2CD7               	goto	u6350
  6760  1CD6                     u6351:
  6761  1CD6  2CE6               	goto	l4057
  6762  1CD7                     u6350:
  6763  1CD7                     l4053:
  6764  1CD7  0820               	movf	___lldiv@divisor,w
  6765  1CD8  02A4               	subwf	___lldiv@dividend,f
  6766  1CD9  0821               	movf	___lldiv@divisor+1,w
  6767  1CDA  1C03               	skipc
  6768  1CDB  0F21               	incfsz	___lldiv@divisor+1,w
  6769  1CDC  02A5               	subwf	___lldiv@dividend+1,f
  6770  1CDD  0822               	movf	___lldiv@divisor+2,w
  6771  1CDE  1C03               	skipc
  6772  1CDF  0F22               	incfsz	___lldiv@divisor+2,w
  6773  1CE0  02A6               	subwf	___lldiv@dividend+2,f
  6774  1CE1  0823               	movf	___lldiv@divisor+3,w
  6775  1CE2  1C03               	skipc
  6776  1CE3  0F23               	incfsz	___lldiv@divisor+3,w
  6777  1CE4  02A7               	subwf	___lldiv@dividend+3,f
  6778  1CE5                     l4055:
  6779  1CE5  1474               	bsf	___lldiv@quotient,0
  6780  1CE6                     l4057:
  6781  1CE6  3001               	movlw	1
  6782  1CE7                     u6365:
  6783  1CE7  1003               	clrc
  6784  1CE8  0CA3               	rrf	___lldiv@divisor+3,f
  6785  1CE9  0CA2               	rrf	___lldiv@divisor+2,f
  6786  1CEA  0CA1               	rrf	___lldiv@divisor+1,f
  6787  1CEB  0CA0               	rrf	___lldiv@divisor,f
  6788  1CEC  3EFF               	addlw	-1
  6789  1CED  1D03               	skipz
  6790  1CEE  2CE7               	goto	u6365
  6791  1CEF                     l4059:
  6792  1CEF  3001               	movlw	1
  6793  1CF0  02F8               	subwf	___lldiv@counter,f
  6794  1CF1  1D03               	btfss	3,2
  6795  1CF2  2CF4               	goto	u6371
  6796  1CF3  2CF5               	goto	u6370
  6797  1CF4                     u6371:
  6798  1CF4  2CBC               	goto	l4049
  6799  1CF5                     u6370:
  6800  1CF5                     l4061:
  6801  1CF5  0877               	movf	___lldiv@quotient+3,w
  6802  1CF6  00A3               	movwf	?___lldiv+3
  6803  1CF7  0876               	movf	___lldiv@quotient+2,w
  6804  1CF8  00A2               	movwf	?___lldiv+2
  6805  1CF9  0875               	movf	___lldiv@quotient+1,w
  6806  1CFA  00A1               	movwf	?___lldiv+1
  6807  1CFB  0874               	movf	___lldiv@quotient,w
  6808  1CFC  00A0               	movwf	?___lldiv
  6809  1CFD                     l472:
  6810  1CFD  0008               	return
  6811  1CFE                     __end_of___lldiv:
  6812                           
  6813                           	psect	text17
  6814  1D67                     __ptext17:	
  6815 ;; *************** function ___fltol *****************
  6816 ;; Defined at:
  6817 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  f1              4   55[BANK0 ] unsigned long 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  exp1            1   65[BANK0 ] unsigned char 
  6822 ;;  sign1           1   64[BANK0 ] unsigned char 
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  4   55[BANK0 ] long 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2, status,0
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6832 ;;      Params:         0       4       0       0       0
  6833 ;;      Locals:         0       2       0       0       0
  6834 ;;      Temps:          0       5       0       0       0
  6835 ;;      Totals:         0      11       0       0       0
  6836 ;;Total ram usage:       11 bytes
  6837 ;; Hardware stack levels used: 1
  6838 ;; Hardware stack levels required when called: 2
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_sprintf
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function ___fltol
  6848  1D67                     ___fltol:
  6849  1D67                     l3191:	
  6850                           ;incstack = 0
  6851                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6852                           
  6853  1D67  1003               	clrc
  6854  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  6855  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  6856  1D6A  0D59               	rlf	___fltol@f1+2,w
  6857  1D6B  0D5A               	rlf	___fltol@f1+3,w
  6858  1D6C  00DB               	movwf	??___fltol
  6859  1D6D  085B               	movf	??___fltol,w
  6860  1D6E  00E1               	movwf	___fltol@exp1
  6861  1D6F  0861               	movf	___fltol@exp1,w
  6862  1D70  1D03               	btfss	3,2
  6863  1D71  2D73               	goto	u4881
  6864  1D72  2D74               	goto	u4880
  6865  1D73                     u4881:
  6866  1D73  2D7D               	goto	l3197
  6867  1D74                     u4880:
  6868  1D74                     l3193:
  6869  1D74  3000               	movlw	0
  6870  1D75  00DA               	movwf	?___fltol+3
  6871  1D76  3000               	movlw	0
  6872  1D77  00D9               	movwf	?___fltol+2
  6873  1D78  3000               	movlw	0
  6874  1D79  00D8               	movwf	?___fltol+1
  6875  1D7A  3000               	movlw	0
  6876  1D7B  00D7               	movwf	?___fltol
  6877  1D7C  2DE2               	goto	l639
  6878  1D7D                     l3197:
  6879  1D7D  0857               	movf	___fltol@f1,w
  6880  1D7E  00DB               	movwf	??___fltol
  6881  1D7F  0858               	movf	___fltol@f1+1,w
  6882  1D80  00DC               	movwf	??___fltol+1
  6883  1D81  0859               	movf	___fltol@f1+2,w
  6884  1D82  00DD               	movwf	??___fltol+2
  6885  1D83  085A               	movf	___fltol@f1+3,w
  6886  1D84  00DE               	movwf	??___fltol+3
  6887  1D85  301F               	movlw	31
  6888  1D86                     u4895:
  6889  1D86  1003               	clrc
  6890  1D87  0CDE               	rrf	??___fltol+3,f
  6891  1D88  0CDD               	rrf	??___fltol+2,f
  6892  1D89  0CDC               	rrf	??___fltol+1,f
  6893  1D8A  0CDB               	rrf	??___fltol,f
  6894  1D8B                     u4890:
  6895  1D8B  3EFF               	addlw	-1
  6896  1D8C  1D03               	skipz
  6897  1D8D  2D86               	goto	u4895
  6898  1D8E  085B               	movf	??___fltol,w
  6899  1D8F  00DF               	movwf	??___fltol+4
  6900  1D90  085F               	movf	??___fltol+4,w
  6901  1D91  00E0               	movwf	___fltol@sign1
  6902  1D92                     l3199:
  6903  1D92  17D9               	bsf	___fltol@f1+2,7
  6904  1D93                     l3201:
  6905  1D93  30FF               	movlw	255
  6906  1D94  05D7               	andwf	___fltol@f1,f
  6907  1D95  30FF               	movlw	255
  6908  1D96  05D8               	andwf	___fltol@f1+1,f
  6909  1D97  30FF               	movlw	255
  6910  1D98  05D9               	andwf	___fltol@f1+2,f
  6911  1D99  3000               	movlw	0
  6912  1D9A  05DA               	andwf	___fltol@f1+3,f
  6913  1D9B                     l3203:
  6914  1D9B  3096               	movlw	150
  6915  1D9C  02E1               	subwf	___fltol@exp1,f
  6916  1D9D                     l3205:
  6917  1D9D  1FE1               	btfss	___fltol@exp1,7
  6918  1D9E  2DA0               	goto	u4901
  6919  1D9F  2DA1               	goto	u4900
  6920  1DA0                     u4901:
  6921  1DA0  2DBB               	goto	l3215
  6922  1DA1                     u4900:
  6923  1DA1                     l3207:
  6924  1DA1  0861               	movf	___fltol@exp1,w
  6925  1DA2  3A80               	xorlw	128
  6926  1DA3  3E97               	addlw	151
  6927  1DA4  1803               	skipnc
  6928  1DA5  2DA7               	goto	u4911
  6929  1DA6  2DA8               	goto	u4910
  6930  1DA7                     u4911:
  6931  1DA7  2DA9               	goto	l3213
  6932  1DA8                     u4910:
  6933  1DA8  2D74               	goto	l3193
  6934  1DA9                     l3213:
  6935  1DA9  3001               	movlw	1
  6936  1DAA                     u4925:
  6937  1DAA  1003               	clrc
  6938  1DAB  0CDA               	rrf	___fltol@f1+3,f
  6939  1DAC  0CD9               	rrf	___fltol@f1+2,f
  6940  1DAD  0CD8               	rrf	___fltol@f1+1,f
  6941  1DAE  0CD7               	rrf	___fltol@f1,f
  6942  1DAF  3EFF               	addlw	-1
  6943  1DB0  1D03               	skipz
  6944  1DB1  2DAA               	goto	u4925
  6945  1DB2  3001               	movlw	1
  6946  1DB3  00DB               	movwf	??___fltol
  6947  1DB4  085B               	movf	??___fltol,w
  6948  1DB5  07E1               	addwf	___fltol@exp1,f
  6949  1DB6  1D03               	btfss	3,2
  6950  1DB7  2DB9               	goto	u4931
  6951  1DB8  2DBA               	goto	u4930
  6952  1DB9                     u4931:
  6953  1DB9  2DA9               	goto	l3213
  6954  1DBA                     u4930:
  6955  1DBA  2DD2               	goto	l3223
  6956  1DBB                     l3215:
  6957  1DBB  3020               	movlw	32
  6958  1DBC  0261               	subwf	___fltol@exp1,w
  6959  1DBD  1C03               	skipc
  6960  1DBE  2DC0               	goto	u4941
  6961  1DBF  2DC1               	goto	u4940
  6962  1DC0                     u4941:
  6963  1DC0  2DCD               	goto	l646
  6964  1DC1                     u4940:
  6965  1DC1  2D74               	goto	l3193
  6966  1DC2                     l3221:
  6967  1DC2  3001               	movlw	1
  6968  1DC3  00DB               	movwf	??___fltol
  6969  1DC4                     u4955:
  6970  1DC4  1003               	clrc
  6971  1DC5  0DD7               	rlf	___fltol@f1,f
  6972  1DC6  0DD8               	rlf	___fltol@f1+1,f
  6973  1DC7  0DD9               	rlf	___fltol@f1+2,f
  6974  1DC8  0DDA               	rlf	___fltol@f1+3,f
  6975  1DC9  0BDB               	decfsz	??___fltol,f
  6976  1DCA  2DC4               	goto	u4955
  6977  1DCB  3001               	movlw	1
  6978  1DCC  02E1               	subwf	___fltol@exp1,f
  6979  1DCD                     l646:
  6980  1DCD  0861               	movf	___fltol@exp1,w
  6981  1DCE  1D03               	btfss	3,2
  6982  1DCF  2DD1               	goto	u4961
  6983  1DD0  2DD2               	goto	u4960
  6984  1DD1                     u4961:
  6985  1DD1  2DC2               	goto	l3221
  6986  1DD2                     u4960:
  6987  1DD2                     l3223:
  6988  1DD2  0860               	movf	___fltol@sign1,w
  6989  1DD3  1903               	btfsc	3,2
  6990  1DD4  2DD6               	goto	u4971
  6991  1DD5  2DD7               	goto	u4970
  6992  1DD6                     u4971:
  6993  1DD6  2DE2               	goto	l649
  6994  1DD7                     u4970:
  6995  1DD7                     l3225:
  6996  1DD7  09D7               	comf	___fltol@f1,f
  6997  1DD8  09D8               	comf	___fltol@f1+1,f
  6998  1DD9  09D9               	comf	___fltol@f1+2,f
  6999  1DDA  09DA               	comf	___fltol@f1+3,f
  7000  1DDB  0AD7               	incf	___fltol@f1,f
  7001  1DDC  1903               	skipnz
  7002  1DDD  0AD8               	incf	___fltol@f1+1,f
  7003  1DDE  1903               	skipnz
  7004  1DDF  0AD9               	incf	___fltol@f1+2,f
  7005  1DE0  1903               	skipnz
  7006  1DE1  0ADA               	incf	___fltol@f1+3,f
  7007  1DE2                     l649:
  7008  1DE2                     l639:
  7009  1DE2  0008               	return
  7010  1DE3                     __end_of___fltol:
  7011                           
  7012                           	psect	text18
  7013  0803                     __ptext18:	
  7014 ;; *************** function ___flsub *****************
  7015 ;; Defined at:
  7016 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  a               4    0[BANK1 ] long 
  7019 ;;  b               4    4[BANK1 ] long 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  4    0[BANK1 ] long 
  7024 ;; Registers used:
  7025 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7031 ;;      Params:         0       0       8       0       0
  7032 ;;      Locals:         0       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0
  7034 ;;      Totals:         0       0       8       0       0
  7035 ;;Total ram usage:        8 bytes
  7036 ;; Hardware stack levels used: 1
  7037 ;; Hardware stack levels required when called: 3
  7038 ;; This function calls:
  7039 ;;		___fladd
  7040 ;; This function is called by:
  7041 ;;		_sprintf
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           
  7046                           ;psect for function ___flsub
  7047  0803                     ___flsub:
  7048  0803                     l3247:	
  7049                           ;incstack = 0
  7050                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7051                           
  7052  0803  3080               	movlw	128
  7053  0804  1683               	bsf	3,5	;RP0=1, select bank1
  7054  0805  1303               	bcf	3,6	;RP1=0, select bank1
  7055  0806  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7056  0807                     l3249:
  7057  0807  0827               	movf	(___flsub@b+3)^(0+128),w
  7058  0808  1283               	bcf	3,5	;RP0=0, select bank0
  7059  0809  1303               	bcf	3,6	;RP1=0, select bank0
  7060  080A  00DB               	movwf	___fladd@b+3
  7061  080B  1683               	bsf	3,5	;RP0=1, select bank1
  7062  080C  1303               	bcf	3,6	;RP1=0, select bank1
  7063  080D  0826               	movf	(___flsub@b+2)^(0+128),w
  7064  080E  1283               	bcf	3,5	;RP0=0, select bank0
  7065  080F  1303               	bcf	3,6	;RP1=0, select bank0
  7066  0810  00DA               	movwf	___fladd@b+2
  7067  0811  1683               	bsf	3,5	;RP0=1, select bank1
  7068  0812  1303               	bcf	3,6	;RP1=0, select bank1
  7069  0813  0825               	movf	(___flsub@b+1)^(0+128),w
  7070  0814  1283               	bcf	3,5	;RP0=0, select bank0
  7071  0815  1303               	bcf	3,6	;RP1=0, select bank0
  7072  0816  00D9               	movwf	___fladd@b+1
  7073  0817  1683               	bsf	3,5	;RP0=1, select bank1
  7074  0818  1303               	bcf	3,6	;RP1=0, select bank1
  7075  0819  0824               	movf	___flsub@b^(0+128),w
  7076  081A  1283               	bcf	3,5	;RP0=0, select bank0
  7077  081B  1303               	bcf	3,6	;RP1=0, select bank0
  7078  081C  00D8               	movwf	___fladd@b
  7079  081D  1683               	bsf	3,5	;RP0=1, select bank1
  7080  081E  1303               	bcf	3,6	;RP1=0, select bank1
  7081  081F  0823               	movf	(___flsub@a+3)^(0+128),w
  7082  0820  1283               	bcf	3,5	;RP0=0, select bank0
  7083  0821  1303               	bcf	3,6	;RP1=0, select bank0
  7084  0822  00DF               	movwf	___fladd@a+3
  7085  0823  1683               	bsf	3,5	;RP0=1, select bank1
  7086  0824  1303               	bcf	3,6	;RP1=0, select bank1
  7087  0825  0822               	movf	(___flsub@a+2)^(0+128),w
  7088  0826  1283               	bcf	3,5	;RP0=0, select bank0
  7089  0827  1303               	bcf	3,6	;RP1=0, select bank0
  7090  0828  00DE               	movwf	___fladd@a+2
  7091  0829  1683               	bsf	3,5	;RP0=1, select bank1
  7092  082A  1303               	bcf	3,6	;RP1=0, select bank1
  7093  082B  0821               	movf	(___flsub@a+1)^(0+128),w
  7094  082C  1283               	bcf	3,5	;RP0=0, select bank0
  7095  082D  1303               	bcf	3,6	;RP1=0, select bank0
  7096  082E  00DD               	movwf	___fladd@a+1
  7097  082F  1683               	bsf	3,5	;RP0=1, select bank1
  7098  0830  1303               	bcf	3,6	;RP1=0, select bank1
  7099  0831  0820               	movf	___flsub@a^(0+128),w
  7100  0832  1283               	bcf	3,5	;RP0=0, select bank0
  7101  0833  1303               	bcf	3,6	;RP1=0, select bank0
  7102  0834  00DC               	movwf	___fladd@a
  7103  0835  160A  118A  22C2  120A  158A  	fcall	___fladd
  7104  083A  1283               	bcf	3,5	;RP0=0, select bank0
  7105  083B  1303               	bcf	3,6	;RP1=0, select bank0
  7106  083C  085B               	movf	?___fladd+3,w
  7107  083D  1683               	bsf	3,5	;RP0=1, select bank1
  7108  083E  1303               	bcf	3,6	;RP1=0, select bank1
  7109  083F  00A3               	movwf	(?___flsub+3)^(0+128)
  7110  0840  1283               	bcf	3,5	;RP0=0, select bank0
  7111  0841  1303               	bcf	3,6	;RP1=0, select bank0
  7112  0842  085A               	movf	?___fladd+2,w
  7113  0843  1683               	bsf	3,5	;RP0=1, select bank1
  7114  0844  1303               	bcf	3,6	;RP1=0, select bank1
  7115  0845  00A2               	movwf	(?___flsub+2)^(0+128)
  7116  0846  1283               	bcf	3,5	;RP0=0, select bank0
  7117  0847  1303               	bcf	3,6	;RP1=0, select bank0
  7118  0848  0859               	movf	?___fladd+1,w
  7119  0849  1683               	bsf	3,5	;RP0=1, select bank1
  7120  084A  1303               	bcf	3,6	;RP1=0, select bank1
  7121  084B  00A1               	movwf	(?___flsub+1)^(0+128)
  7122  084C  1283               	bcf	3,5	;RP0=0, select bank0
  7123  084D  1303               	bcf	3,6	;RP1=0, select bank0
  7124  084E  0858               	movf	?___fladd,w
  7125  084F  1683               	bsf	3,5	;RP0=1, select bank1
  7126  0850  1303               	bcf	3,6	;RP1=0, select bank1
  7127  0851  00A0               	movwf	?___flsub^(0+128)
  7128  0852                     l809:
  7129  0852  0008               	return
  7130  0853                     __end_of___flsub:
  7131                           
  7132                           	psect	text19
  7133  12C2                     __ptext19:	
  7134 ;; *************** function ___fladd *****************
  7135 ;; Defined at:
  7136 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  b               4   56[BANK0 ] long 
  7139 ;;  a               4   60[BANK0 ] long 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  grs             1   75[BANK0 ] unsigned char 
  7142 ;;  bexp            1   74[BANK0 ] unsigned char 
  7143 ;;  aexp            1   73[BANK0 ] unsigned char 
  7144 ;;  signs           1   72[BANK0 ] unsigned char 
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  4   56[BANK0 ] unsigned char 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, status,0, btemp+1
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7154 ;;      Params:         0       8       0       0       0
  7155 ;;      Locals:         0       4       0       0       0
  7156 ;;      Temps:          0       8       0       0       0
  7157 ;;      Totals:         0      20       0       0       0
  7158 ;;Total ram usage:       20 bytes
  7159 ;; Hardware stack levels used: 1
  7160 ;; Hardware stack levels required when called: 2
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_sprintf
  7165 ;;		___flsub
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function ___fladd
  7171  12C2                     ___fladd:
  7172  12C2                     l2573:	
  7173                           ;incstack = 0
  7174                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7175                           
  7176  12C2  1283               	bcf	3,5	;RP0=0, select bank0
  7177  12C3  1303               	bcf	3,6	;RP1=0, select bank0
  7178  12C4  085B               	movf	___fladd@b+3,w
  7179  12C5  3980               	andlw	128
  7180  12C6  00E0               	movwf	??___fladd
  7181  12C7  0860               	movf	??___fladd,w
  7182  12C8  00E8               	movwf	___fladd@signs
  7183  12C9                     l2575:
  7184  12C9  085B               	movf	___fladd@b+3,w
  7185  12CA  00E0               	movwf	??___fladd
  7186  12CB  0760               	addwf	??___fladd,w
  7187  12CC  00E1               	movwf	??___fladd+1
  7188  12CD  0861               	movf	??___fladd+1,w
  7189  12CE  00EA               	movwf	___fladd@bexp
  7190  12CF                     l2577:
  7191  12CF  1FDA               	btfss	___fladd@b+2,7
  7192  12D0  2AD2               	goto	u3291
  7193  12D1  2AD3               	goto	u3290
  7194  12D2                     u3291:
  7195  12D2  2AD4               	goto	l2581
  7196  12D3                     u3290:
  7197  12D3                     l2579:
  7198  12D3  146A               	bsf	___fladd@bexp,0
  7199  12D4                     l2581:
  7200  12D4  086A               	movf	___fladd@bexp,w
  7201  12D5  1903               	btfsc	3,2
  7202  12D6  2AD8               	goto	u3301
  7203  12D7  2AD9               	goto	u3300
  7204  12D8                     u3301:
  7205  12D8  2AE9               	goto	l2591
  7206  12D9                     u3300:
  7207  12D9                     l2583:
  7208  12D9  0A6A               	incf	___fladd@bexp,w
  7209  12DA  1D03               	btfss	3,2
  7210  12DB  2ADD               	goto	u3311
  7211  12DC  2ADE               	goto	u3310
  7212  12DD                     u3311:
  7213  12DD  2AE6               	goto	l2587
  7214  12DE                     u3310:
  7215  12DE                     l2585:
  7216  12DE  3000               	movlw	0
  7217  12DF  00DB               	movwf	___fladd@b+3
  7218  12E0  3000               	movlw	0
  7219  12E1  00DA               	movwf	___fladd@b+2
  7220  12E2  3000               	movlw	0
  7221  12E3  00D9               	movwf	___fladd@b+1
  7222  12E4  3000               	movlw	0
  7223  12E5  00D8               	movwf	___fladd@b
  7224  12E6                     l2587:
  7225  12E6  17DA               	bsf	___fladd@b+2,7
  7226  12E7                     l2589:
  7227  12E7  01DB               	clrf	___fladd@b+3
  7228  12E8  2AF1               	goto	l2593
  7229  12E9                     l2591:
  7230  12E9  3000               	movlw	0
  7231  12EA  00DB               	movwf	___fladd@b+3
  7232  12EB  3000               	movlw	0
  7233  12EC  00DA               	movwf	___fladd@b+2
  7234  12ED  3000               	movlw	0
  7235  12EE  00D9               	movwf	___fladd@b+1
  7236  12EF  3000               	movlw	0
  7237  12F0  00D8               	movwf	___fladd@b
  7238  12F1                     l2593:
  7239  12F1  085F               	movf	___fladd@a+3,w
  7240  12F2  3980               	andlw	128
  7241  12F3  00E0               	movwf	??___fladd
  7242  12F4  0860               	movf	??___fladd,w
  7243  12F5  00E9               	movwf	___fladd@aexp
  7244  12F6                     l2595:
  7245  12F6  0869               	movf	___fladd@aexp,w
  7246  12F7  0668               	xorwf	___fladd@signs,w
  7247  12F8  1903               	skipnz
  7248  12F9  2AFB               	goto	u3321
  7249  12FA  2AFC               	goto	u3320
  7250  12FB                     u3321:
  7251  12FB  2AFD               	goto	l2599
  7252  12FC                     u3320:
  7253  12FC                     l2597:
  7254  12FC  1768               	bsf	___fladd@signs,6
  7255  12FD                     l2599:
  7256  12FD  085F               	movf	___fladd@a+3,w
  7257  12FE  00E0               	movwf	??___fladd
  7258  12FF  0760               	addwf	??___fladd,w
  7259  1300  00E1               	movwf	??___fladd+1
  7260  1301  0861               	movf	??___fladd+1,w
  7261  1302  00E9               	movwf	___fladd@aexp
  7262  1303                     l2601:
  7263  1303  1FDE               	btfss	___fladd@a+2,7
  7264  1304  2B06               	goto	u3331
  7265  1305  2B07               	goto	u3330
  7266  1306                     u3331:
  7267  1306  2B08               	goto	l2605
  7268  1307                     u3330:
  7269  1307                     l2603:
  7270  1307  1469               	bsf	___fladd@aexp,0
  7271  1308                     l2605:
  7272  1308  0869               	movf	___fladd@aexp,w
  7273  1309  1903               	btfsc	3,2
  7274  130A  2B0C               	goto	u3341
  7275  130B  2B0D               	goto	u3340
  7276  130C                     u3341:
  7277  130C  2B1D               	goto	l2615
  7278  130D                     u3340:
  7279  130D                     l2607:
  7280  130D  0A69               	incf	___fladd@aexp,w
  7281  130E  1D03               	btfss	3,2
  7282  130F  2B11               	goto	u3351
  7283  1310  2B12               	goto	u3350
  7284  1311                     u3351:
  7285  1311  2B1A               	goto	l2611
  7286  1312                     u3350:
  7287  1312                     l2609:
  7288  1312  3000               	movlw	0
  7289  1313  00DF               	movwf	___fladd@a+3
  7290  1314  3000               	movlw	0
  7291  1315  00DE               	movwf	___fladd@a+2
  7292  1316  3000               	movlw	0
  7293  1317  00DD               	movwf	___fladd@a+1
  7294  1318  3000               	movlw	0
  7295  1319  00DC               	movwf	___fladd@a
  7296  131A                     l2611:
  7297  131A  17DE               	bsf	___fladd@a+2,7
  7298  131B                     l2613:
  7299  131B  01DF               	clrf	___fladd@a+3
  7300  131C  2B25               	goto	l763
  7301  131D                     l2615:
  7302  131D  3000               	movlw	0
  7303  131E  00DF               	movwf	___fladd@a+3
  7304  131F  3000               	movlw	0
  7305  1320  00DE               	movwf	___fladd@a+2
  7306  1321  3000               	movlw	0
  7307  1322  00DD               	movwf	___fladd@a+1
  7308  1323  3000               	movlw	0
  7309  1324  00DC               	movwf	___fladd@a
  7310  1325                     l763:
  7311  1325  086A               	movf	___fladd@bexp,w
  7312  1326  0269               	subwf	___fladd@aexp,w
  7313  1327  1803               	skipnc
  7314  1328  2B2A               	goto	u3361
  7315  1329  2B2B               	goto	u3360
  7316  132A                     u3361:
  7317  132A  2B6F               	goto	l2651
  7318  132B                     u3360:
  7319  132B                     l2617:
  7320  132B  1F68               	btfss	___fladd@signs,6
  7321  132C  2B2E               	goto	u3371
  7322  132D  2B2F               	goto	u3370
  7323  132E                     u3371:
  7324  132E  2B33               	goto	l2621
  7325  132F                     u3370:
  7326  132F                     l2619:
  7327  132F  3080               	movlw	128
  7328  1330  00E0               	movwf	??___fladd
  7329  1331  0860               	movf	??___fladd,w
  7330  1332  06E8               	xorwf	___fladd@signs,f
  7331  1333                     l2621:
  7332  1333  086A               	movf	___fladd@bexp,w
  7333  1334  00E0               	movwf	??___fladd
  7334  1335  0860               	movf	??___fladd,w
  7335  1336  00EB               	movwf	___fladd@grs
  7336  1337                     l2623:
  7337  1337  0869               	movf	___fladd@aexp,w
  7338  1338  00E0               	movwf	??___fladd
  7339  1339  0860               	movf	??___fladd,w
  7340  133A  00EA               	movwf	___fladd@bexp
  7341  133B                     l2625:
  7342  133B  086B               	movf	___fladd@grs,w
  7343  133C  00E0               	movwf	??___fladd
  7344  133D  0860               	movf	??___fladd,w
  7345  133E  00E9               	movwf	___fladd@aexp
  7346  133F                     l2627:
  7347  133F  0858               	movf	___fladd@b,w
  7348  1340  00E0               	movwf	??___fladd
  7349  1341  0860               	movf	??___fladd,w
  7350  1342  00EB               	movwf	___fladd@grs
  7351  1343                     l2629:
  7352  1343  085C               	movf	___fladd@a,w
  7353  1344  00E0               	movwf	??___fladd
  7354  1345  0860               	movf	??___fladd,w
  7355  1346  00D8               	movwf	___fladd@b
  7356  1347                     l2631:
  7357  1347  086B               	movf	___fladd@grs,w
  7358  1348  00E0               	movwf	??___fladd
  7359  1349  0860               	movf	??___fladd,w
  7360  134A  00DC               	movwf	___fladd@a
  7361  134B                     l2633:
  7362  134B  0859               	movf	___fladd@b+1,w
  7363  134C  00E0               	movwf	??___fladd
  7364  134D  0860               	movf	??___fladd,w
  7365  134E  00EB               	movwf	___fladd@grs
  7366  134F                     l2635:
  7367  134F  085D               	movf	___fladd@a+1,w
  7368  1350  00E0               	movwf	??___fladd
  7369  1351  0860               	movf	??___fladd,w
  7370  1352  00D9               	movwf	___fladd@b+1
  7371  1353                     l2637:
  7372  1353  086B               	movf	___fladd@grs,w
  7373  1354  00E0               	movwf	??___fladd
  7374  1355  0860               	movf	??___fladd,w
  7375  1356  00DD               	movwf	___fladd@a+1
  7376  1357                     l2639:
  7377  1357  085A               	movf	___fladd@b+2,w
  7378  1358  00E0               	movwf	??___fladd
  7379  1359  0860               	movf	??___fladd,w
  7380  135A  00EB               	movwf	___fladd@grs
  7381  135B                     l2641:
  7382  135B  085E               	movf	___fladd@a+2,w
  7383  135C  00E0               	movwf	??___fladd
  7384  135D  0860               	movf	??___fladd,w
  7385  135E  00DA               	movwf	___fladd@b+2
  7386  135F                     l2643:
  7387  135F  086B               	movf	___fladd@grs,w
  7388  1360  00E0               	movwf	??___fladd
  7389  1361  0860               	movf	??___fladd,w
  7390  1362  00DE               	movwf	___fladd@a+2
  7391  1363                     l2645:
  7392  1363  085B               	movf	___fladd@b+3,w
  7393  1364  00E0               	movwf	??___fladd
  7394  1365  0860               	movf	??___fladd,w
  7395  1366  00EB               	movwf	___fladd@grs
  7396  1367                     l2647:
  7397  1367  085F               	movf	___fladd@a+3,w
  7398  1368  00E0               	movwf	??___fladd
  7399  1369  0860               	movf	??___fladd,w
  7400  136A  00DB               	movwf	___fladd@b+3
  7401  136B                     l2649:
  7402  136B  086B               	movf	___fladd@grs,w
  7403  136C  00E0               	movwf	??___fladd
  7404  136D  0860               	movf	??___fladd,w
  7405  136E  00DF               	movwf	___fladd@a+3
  7406  136F                     l2651:
  7407  136F  01EB               	clrf	___fladd@grs
  7408  1370                     l2653:
  7409  1370  0869               	movf	___fladd@aexp,w
  7410  1371  00E0               	movwf	??___fladd
  7411  1372  01E1               	clrf	??___fladd+1
  7412  1373  0861               	movf	??___fladd+1,w
  7413  1374  00E3               	movwf	??___fladd+3
  7414  1375  086A               	movf	___fladd@bexp,w
  7415  1376  0260               	subwf	??___fladd,w
  7416  1377  00E2               	movwf	??___fladd+2
  7417  1378  1C03               	skipc
  7418  1379  03E3               	decf	??___fladd+3,f
  7419  137A  0863               	movf	??___fladd+3,w
  7420  137B  3A80               	xorlw	128
  7421  137C  00FF               	movwf	btemp+1
  7422  137D  3080               	movlw	128
  7423  137E  027F               	subwf	btemp+1,w
  7424  137F  1D03               	skipz
  7425  1380  2B83               	goto	u3385
  7426  1381  301A               	movlw	26
  7427  1382  0262               	subwf	??___fladd+2,w
  7428  1383                     u3385:
  7429  1383  1C03               	skipc
  7430  1384  2B86               	goto	u3381
  7431  1385  2B87               	goto	u3380
  7432  1386                     u3381:
  7433  1386  2BC4               	goto	l2669
  7434  1387                     u3380:
  7435  1387                     l2655:
  7436  1387  1283               	bcf	3,5	;RP0=0, select bank0
  7437  1388  1303               	bcf	3,6	;RP1=0, select bank0
  7438  1389  085B               	movf	___fladd@b+3,w
  7439  138A  045A               	iorwf	___fladd@b+2,w
  7440  138B  0459               	iorwf	___fladd@b+1,w
  7441  138C  0458               	iorwf	___fladd@b,w
  7442  138D  1D03               	skipz
  7443  138E  2B90               	goto	u3391
  7444  138F  2B92               	goto	u3390
  7445  1390                     u3391:
  7446  1390  3001               	movlw	1
  7447  1391  2B93               	goto	u3400
  7448  1392                     u3390:
  7449  1392  3000               	movlw	0
  7450  1393                     u3400:
  7451  1393  00E0               	movwf	??___fladd
  7452  1394  0860               	movf	??___fladd,w
  7453  1395  00EB               	movwf	___fladd@grs
  7454  1396  3000               	movlw	0
  7455  1397  00DB               	movwf	___fladd@b+3
  7456  1398  3000               	movlw	0
  7457  1399  00DA               	movwf	___fladd@b+2
  7458  139A  3000               	movlw	0
  7459  139B  00D9               	movwf	___fladd@b+1
  7460  139C  3000               	movlw	0
  7461  139D  00D8               	movwf	___fladd@b
  7462  139E  0869               	movf	___fladd@aexp,w
  7463  139F  00E0               	movwf	??___fladd
  7464  13A0  0860               	movf	??___fladd,w
  7465  13A1  00EA               	movwf	___fladd@bexp
  7466  13A2  2BCC               	goto	l767
  7467  13A3                     l769:
  7468  13A3  1C6B               	btfss	___fladd@grs,0
  7469  13A4  2BA6               	goto	u3411
  7470  13A5  2BA7               	goto	u3410
  7471  13A6                     u3411:
  7472  13A6  2BB0               	goto	l2659
  7473  13A7                     u3410:
  7474  13A7                     l2657:
  7475  13A7  086B               	movf	___fladd@grs,w
  7476  13A8  00E0               	movwf	??___fladd
  7477  13A9  1003               	clrc
  7478  13AA  0C60               	rrf	??___fladd,w
  7479  13AB  3801               	iorlw	1
  7480  13AC  00E1               	movwf	??___fladd+1
  7481  13AD  0861               	movf	??___fladd+1,w
  7482  13AE  00EB               	movwf	___fladd@grs
  7483  13AF  2BB2               	goto	l2661
  7484  13B0                     l2659:
  7485  13B0  1003               	clrc
  7486  13B1  0CEB               	rrf	___fladd@grs,f
  7487  13B2                     l2661:
  7488  13B2  1C58               	btfss	___fladd@b,0
  7489  13B3  2BB5               	goto	u3421
  7490  13B4  2BB6               	goto	u3420
  7491  13B5                     u3421:
  7492  13B5  2BB7               	goto	l2665
  7493  13B6                     u3420:
  7494  13B6                     l2663:
  7495  13B6  17EB               	bsf	___fladd@grs,7
  7496  13B7                     l2665:
  7497  13B7  3001               	movlw	1
  7498  13B8  00E0               	movwf	??___fladd
  7499  13B9                     u3435:
  7500  13B9  0D5B               	rlf	___fladd@b+3,w
  7501  13BA  0CDB               	rrf	___fladd@b+3,f
  7502  13BB  0CDA               	rrf	___fladd@b+2,f
  7503  13BC  0CD9               	rrf	___fladd@b+1,f
  7504  13BD  0CD8               	rrf	___fladd@b,f
  7505  13BE  0BE0               	decfsz	??___fladd& (0+127),f
  7506  13BF  2BB9               	goto	u3435
  7507  13C0                     l2667:
  7508  13C0  3001               	movlw	1
  7509  13C1  00E0               	movwf	??___fladd
  7510  13C2  0860               	movf	??___fladd,w
  7511  13C3  07EA               	addwf	___fladd@bexp,f
  7512  13C4                     l2669:
  7513  13C4  1283               	bcf	3,5	;RP0=0, select bank0
  7514  13C5  1303               	bcf	3,6	;RP1=0, select bank0
  7515  13C6  0869               	movf	___fladd@aexp,w
  7516  13C7  026A               	subwf	___fladd@bexp,w
  7517  13C8  1C03               	skipc
  7518  13C9  2BCB               	goto	u3441
  7519  13CA  2BCC               	goto	u3440
  7520  13CB                     u3441:
  7521  13CB  2BA3               	goto	l769
  7522  13CC                     u3440:
  7523  13CC                     l767:
  7524  13CC  1B68               	btfsc	___fladd@signs,6
  7525  13CD  2BCF               	goto	u3451
  7526  13CE  2BD0               	goto	u3450
  7527  13CF                     u3451:
  7528  13CF  2C1B               	goto	l2695
  7529  13D0                     u3450:
  7530  13D0                     l2671:
  7531  13D0  086A               	movf	___fladd@bexp,w
  7532  13D1  1D03               	btfss	3,2
  7533  13D2  2BD4               	goto	u3461
  7534  13D3  2BD5               	goto	u3460
  7535  13D4                     u3461:
  7536  13D4  2BDE               	goto	l2677
  7537  13D5                     u3460:
  7538  13D5                     l2673:
  7539  13D5  3000               	movlw	0
  7540  13D6  00DB               	movwf	?___fladd+3
  7541  13D7  3000               	movlw	0
  7542  13D8  00DA               	movwf	?___fladd+2
  7543  13D9  3000               	movlw	0
  7544  13DA  00D9               	movwf	?___fladd+1
  7545  13DB  3000               	movlw	0
  7546  13DC  00D8               	movwf	?___fladd
  7547  13DD  2D49               	goto	l776
  7548  13DE                     l2677:
  7549  13DE  085C               	movf	___fladd@a,w
  7550  13DF  07D8               	addwf	___fladd@b,f
  7551  13E0  085D               	movf	___fladd@a+1,w
  7552  13E1  1103               	clrz
  7553  13E2  1803               	skipnc
  7554  13E3  3E01               	addlw	1
  7555  13E4  1903               	skipnz
  7556  13E5  2BE7               	goto	u3471
  7557  13E6  07D9               	addwf	___fladd@b+1,f
  7558  13E7                     u3471:
  7559  13E7  085E               	movf	___fladd@a+2,w
  7560  13E8  1103               	clrz
  7561  13E9  1803               	skipnc
  7562  13EA  3E01               	addlw	1
  7563  13EB  1903               	skipnz
  7564  13EC  2BEE               	goto	u3472
  7565  13ED  07DA               	addwf	___fladd@b+2,f
  7566  13EE                     u3472:
  7567  13EE  085F               	movf	___fladd@a+3,w
  7568  13EF  1103               	clrz
  7569  13F0  1803               	skipnc
  7570  13F1  3E01               	addlw	1
  7571  13F2  1903               	skipnz
  7572  13F3  2BF5               	goto	u3473
  7573  13F4  07DB               	addwf	___fladd@b+3,f
  7574  13F5                     u3473:
  7575  13F5                     l2679:
  7576  13F5  1C5B               	btfss	___fladd@b+3,0
  7577  13F6  2BF8               	goto	u3481
  7578  13F7  2BF9               	goto	u3480
  7579  13F8                     u3481:
  7580  13F8  2CCF               	goto	l2729
  7581  13F9                     u3480:
  7582  13F9                     l2681:
  7583  13F9  1C6B               	btfss	___fladd@grs,0
  7584  13FA  2BFC               	goto	u3491
  7585  13FB  2BFD               	goto	u3490
  7586  13FC                     u3491:
  7587  13FC  2C06               	goto	l2685
  7588  13FD                     u3490:
  7589  13FD                     l2683:
  7590  13FD  086B               	movf	___fladd@grs,w
  7591  13FE  00E0               	movwf	??___fladd
  7592  13FF  1003               	clrc
  7593  1400  0C60               	rrf	??___fladd,w
  7594  1401  3801               	iorlw	1
  7595  1402  00E1               	movwf	??___fladd+1
  7596  1403  0861               	movf	??___fladd+1,w
  7597  1404  00EB               	movwf	___fladd@grs
  7598  1405  2C08               	goto	l2687
  7599  1406                     l2685:
  7600  1406  1003               	clrc
  7601  1407  0CEB               	rrf	___fladd@grs,f
  7602  1408                     l2687:
  7603  1408  1C58               	btfss	___fladd@b,0
  7604  1409  2C0B               	goto	u3501
  7605  140A  2C0C               	goto	u3500
  7606  140B                     u3501:
  7607  140B  2C0D               	goto	l2691
  7608  140C                     u3500:
  7609  140C                     l2689:
  7610  140C  17EB               	bsf	___fladd@grs,7
  7611  140D                     l2691:
  7612  140D  3001               	movlw	1
  7613  140E  00E0               	movwf	??___fladd
  7614  140F                     u3515:
  7615  140F  0D5B               	rlf	___fladd@b+3,w
  7616  1410  0CDB               	rrf	___fladd@b+3,f
  7617  1411  0CDA               	rrf	___fladd@b+2,f
  7618  1412  0CD9               	rrf	___fladd@b+1,f
  7619  1413  0CD8               	rrf	___fladd@b,f
  7620  1414  0BE0               	decfsz	??___fladd& (0+127),f
  7621  1415  2C0F               	goto	u3515
  7622  1416                     l2693:
  7623  1416  3001               	movlw	1
  7624  1417  00E0               	movwf	??___fladd
  7625  1418  0860               	movf	??___fladd,w
  7626  1419  07EA               	addwf	___fladd@bexp,f
  7627  141A  2CCF               	goto	l2729
  7628  141B                     l2695:
  7629  141B  085B               	movf	___fladd@b+3,w
  7630  141C  3A80               	xorlw	128
  7631  141D  00FF               	movwf	btemp+1
  7632  141E  085F               	movf	___fladd@a+3,w
  7633  141F  3A80               	xorlw	128
  7634  1420  027F               	subwf	btemp+1,w
  7635  1421  1D03               	skipz
  7636  1422  2C2D               	goto	u3523
  7637  1423  085E               	movf	___fladd@a+2,w
  7638  1424  025A               	subwf	___fladd@b+2,w
  7639  1425  1D03               	skipz
  7640  1426  2C2D               	goto	u3523
  7641  1427  085D               	movf	___fladd@a+1,w
  7642  1428  0259               	subwf	___fladd@b+1,w
  7643  1429  1D03               	skipz
  7644  142A  2C2D               	goto	u3523
  7645  142B  085C               	movf	___fladd@a,w
  7646  142C  0258               	subwf	___fladd@b,w
  7647  142D                     u3523:
  7648  142D  1803               	skipnc
  7649  142E  2C30               	goto	u3521
  7650  142F  2C31               	goto	u3520
  7651  1430                     u3521:
  7652  1430  2C89               	goto	l2705
  7653  1431                     u3520:
  7654  1431                     l2697:
  7655  1431  30FF               	movlw	255
  7656  1432  00E0               	movwf	??___fladd
  7657  1433  30FF               	movlw	255
  7658  1434  00E1               	movwf	??___fladd+1
  7659  1435  30FF               	movlw	255
  7660  1436  00E2               	movwf	??___fladd+2
  7661  1437  30FF               	movlw	255
  7662  1438  00E3               	movwf	??___fladd+3
  7663  1439  085C               	movf	___fladd@a,w
  7664  143A  00E4               	movwf	??___fladd+4
  7665  143B  085D               	movf	___fladd@a+1,w
  7666  143C  00E5               	movwf	??___fladd+5
  7667  143D  085E               	movf	___fladd@a+2,w
  7668  143E  00E6               	movwf	??___fladd+6
  7669  143F  085F               	movf	___fladd@a+3,w
  7670  1440  00E7               	movwf	??___fladd+7
  7671  1441  0858               	movf	___fladd@b,w
  7672  1442  02E4               	subwf	??___fladd+4,f
  7673  1443  0859               	movf	___fladd@b+1,w
  7674  1444  1C03               	skipc
  7675  1445  0F59               	incfsz	___fladd@b+1,w
  7676  1446  2C48               	goto	u3531
  7677  1447  2C49               	goto	u3532
  7678  1448                     u3531:
  7679  1448  02E5               	subwf	??___fladd+5,f
  7680  1449                     u3532:
  7681  1449  085A               	movf	___fladd@b+2,w
  7682  144A  1C03               	skipc
  7683  144B  0F5A               	incfsz	___fladd@b+2,w
  7684  144C  2C4E               	goto	u3533
  7685  144D  2C4F               	goto	u3534
  7686  144E                     u3533:
  7687  144E  02E6               	subwf	??___fladd+6,f
  7688  144F                     u3534:
  7689  144F  085B               	movf	___fladd@b+3,w
  7690  1450  1C03               	skipc
  7691  1451  0F5B               	incfsz	___fladd@b+3,w
  7692  1452  2C54               	goto	u3535
  7693  1453  2C55               	goto	u3536
  7694  1454                     u3535:
  7695  1454  02E7               	subwf	??___fladd+7,f
  7696  1455                     u3536:
  7697  1455  0864               	movf	??___fladd+4,w
  7698  1456  07E0               	addwf	??___fladd,f
  7699  1457  0865               	movf	??___fladd+5,w
  7700  1458  1803               	skipnc
  7701  1459  0F65               	incfsz	??___fladd+5,w
  7702  145A  2C5C               	goto	u3540
  7703  145B  2C5D               	goto	u3541
  7704  145C                     u3540:
  7705  145C  07E1               	addwf	??___fladd+1,f
  7706  145D                     u3541:
  7707  145D  0866               	movf	??___fladd+6,w
  7708  145E  1803               	skipnc
  7709  145F  0F66               	incfsz	??___fladd+6,w
  7710  1460  2C62               	goto	u3542
  7711  1461  2C63               	goto	u3543
  7712  1462                     u3542:
  7713  1462  07E2               	addwf	??___fladd+2,f
  7714  1463                     u3543:
  7715  1463  0867               	movf	??___fladd+7,w
  7716  1464  1803               	skipnc
  7717  1465  0A67               	incf	??___fladd+7,w
  7718  1466  07E3               	addwf	??___fladd+3,f
  7719  1467  0863               	movf	??___fladd+3,w
  7720  1468  00DB               	movwf	___fladd@b+3
  7721  1469  0862               	movf	??___fladd+2,w
  7722  146A  00DA               	movwf	___fladd@b+2
  7723  146B  0861               	movf	??___fladd+1,w
  7724  146C  00D9               	movwf	___fladd@b+1
  7725  146D  0860               	movf	??___fladd,w
  7726  146E  00D8               	movwf	___fladd@b
  7727  146F                     l2699:
  7728  146F  3080               	movlw	128
  7729  1470  00E0               	movwf	??___fladd
  7730  1471  0860               	movf	??___fladd,w
  7731  1472  06E8               	xorwf	___fladd@signs,f
  7732  1473  09EB               	comf	___fladd@grs,f
  7733  1474  0AEB               	incf	___fladd@grs,f
  7734  1475                     l2701:
  7735  1475  086B               	movf	___fladd@grs,w
  7736  1476  1D03               	btfss	3,2
  7737  1477  2C79               	goto	u3551
  7738  1478  2C7A               	goto	u3550
  7739  1479                     u3551:
  7740  1479  2C97               	goto	l784
  7741  147A                     u3550:
  7742  147A                     l2703:
  7743  147A  3001               	movlw	1
  7744  147B  07D8               	addwf	___fladd@b,f
  7745  147C  3000               	movlw	0
  7746  147D  1803               	skipnc
  7747  147E  3001               	movlw	1
  7748  147F  07D9               	addwf	___fladd@b+1,f
  7749  1480  3000               	movlw	0
  7750  1481  1803               	skipnc
  7751  1482  3001               	movlw	1
  7752  1483  07DA               	addwf	___fladd@b+2,f
  7753  1484  3000               	movlw	0
  7754  1485  1803               	skipnc
  7755  1486  3001               	movlw	1
  7756  1487  07DB               	addwf	___fladd@b+3,f
  7757  1488  2C97               	goto	l784
  7758  1489                     l2705:
  7759  1489  085C               	movf	___fladd@a,w
  7760  148A  02D8               	subwf	___fladd@b,f
  7761  148B  085D               	movf	___fladd@a+1,w
  7762  148C  1C03               	skipc
  7763  148D  0F5D               	incfsz	___fladd@a+1,w
  7764  148E  02D9               	subwf	___fladd@b+1,f
  7765  148F  085E               	movf	___fladd@a+2,w
  7766  1490  1C03               	skipc
  7767  1491  0F5E               	incfsz	___fladd@a+2,w
  7768  1492  02DA               	subwf	___fladd@b+2,f
  7769  1493  085F               	movf	___fladd@a+3,w
  7770  1494  1C03               	skipc
  7771  1495  0F5F               	incfsz	___fladd@a+3,w
  7772  1496  02DB               	subwf	___fladd@b+3,f
  7773  1497                     l784:
  7774  1497  085B               	movf	___fladd@b+3,w
  7775  1498  045A               	iorwf	___fladd@b+2,w
  7776  1499  0459               	iorwf	___fladd@b+1,w
  7777  149A  0458               	iorwf	___fladd@b,w
  7778  149B  1D03               	skipz
  7779  149C  2C9E               	goto	u3561
  7780  149D  2C9F               	goto	u3560
  7781  149E                     u3561:
  7782  149E  2CCB               	goto	l2727
  7783  149F                     u3560:
  7784  149F                     l2707:
  7785  149F  086B               	movf	___fladd@grs,w
  7786  14A0  1D03               	btfss	3,2
  7787  14A1  2CA3               	goto	u3571
  7788  14A2  2CA4               	goto	u3570
  7789  14A3                     u3571:
  7790  14A3  2CCB               	goto	l2727
  7791  14A4                     u3570:
  7792  14A4                     l2709:
  7793  14A4  3000               	movlw	0
  7794  14A5  00DB               	movwf	?___fladd+3
  7795  14A6  3000               	movlw	0
  7796  14A7  00DA               	movwf	?___fladd+2
  7797  14A8  3000               	movlw	0
  7798  14A9  00D9               	movwf	?___fladd+1
  7799  14AA  3000               	movlw	0
  7800  14AB  00D8               	movwf	?___fladd
  7801  14AC  2D49               	goto	l776
  7802  14AD                     l2713:
  7803  14AD  3001               	movlw	1
  7804  14AE  00E0               	movwf	??___fladd
  7805  14AF                     u3585:
  7806  14AF  1003               	clrc
  7807  14B0  0DD8               	rlf	___fladd@b,f
  7808  14B1  0DD9               	rlf	___fladd@b+1,f
  7809  14B2  0DDA               	rlf	___fladd@b+2,f
  7810  14B3  0DDB               	rlf	___fladd@b+3,f
  7811  14B4  0BE0               	decfsz	??___fladd,f
  7812  14B5  2CAF               	goto	u3585
  7813  14B6                     l2715:
  7814  14B6  1FEB               	btfss	___fladd@grs,7
  7815  14B7  2CB9               	goto	u3591
  7816  14B8  2CBA               	goto	u3590
  7817  14B9                     u3591:
  7818  14B9  2CBB               	goto	l788
  7819  14BA                     u3590:
  7820  14BA                     l2717:
  7821  14BA  1458               	bsf	___fladd@b,0
  7822  14BB                     l788:
  7823  14BB  1C6B               	btfss	___fladd@grs,0
  7824  14BC  2CBE               	goto	u3601
  7825  14BD  2CBF               	goto	u3600
  7826  14BE                     u3601:
  7827  14BE  2CC2               	goto	l2721
  7828  14BF                     u3600:
  7829  14BF                     l2719:
  7830  14BF  1403               	setc
  7831  14C0  0DEB               	rlf	___fladd@grs,f
  7832  14C1  2CC4               	goto	l2723
  7833  14C2                     l2721:
  7834  14C2  1003               	clrc
  7835  14C3  0DEB               	rlf	___fladd@grs,f
  7836  14C4                     l2723:
  7837  14C4  086A               	movf	___fladd@bexp,w
  7838  14C5  1903               	btfsc	3,2
  7839  14C6  2CC8               	goto	u3611
  7840  14C7  2CC9               	goto	u3610
  7841  14C8                     u3611:
  7842  14C8  2CCB               	goto	l2727
  7843  14C9                     u3610:
  7844  14C9                     l2725:
  7845  14C9  3001               	movlw	1
  7846  14CA  02EA               	subwf	___fladd@bexp,f
  7847  14CB                     l2727:
  7848  14CB  1FDA               	btfss	___fladd@b+2,7
  7849  14CC  2CCE               	goto	u3621
  7850  14CD  2CCF               	goto	u3620
  7851  14CE                     u3621:
  7852  14CE  2CAD               	goto	l2713
  7853  14CF                     u3620:
  7854  14CF                     l2729:
  7855  14CF  01E9               	clrf	___fladd@aexp
  7856  14D0                     l2731:
  7857  14D0  1FEB               	btfss	___fladd@grs,7
  7858  14D1  2CD3               	goto	u3631
  7859  14D2  2CD4               	goto	u3630
  7860  14D3                     u3631:
  7861  14D3  2CE2               	goto	l2739
  7862  14D4                     u3630:
  7863  14D4                     l2733:
  7864  14D4  086B               	movf	___fladd@grs,w
  7865  14D5  397F               	andlw	127
  7866  14D6  1903               	btfsc	3,2
  7867  14D7  2CD9               	goto	u3641
  7868  14D8  2CDA               	goto	u3640
  7869  14D9                     u3641:
  7870  14D9  2CDD               	goto	l794
  7871  14DA                     u3640:
  7872  14DA                     l2735:
  7873  14DA  01E9               	clrf	___fladd@aexp
  7874  14DB  0AE9               	incf	___fladd@aexp,f
  7875  14DC  2CE2               	goto	l2739
  7876  14DD                     l794:
  7877  14DD  1C58               	btfss	___fladd@b,0
  7878  14DE  2CE0               	goto	u3651
  7879  14DF  2CE1               	goto	u3650
  7880  14E0                     u3651:
  7881  14E0  2CE2               	goto	l2739
  7882  14E1                     u3650:
  7883  14E1  2CDA               	goto	l2735
  7884  14E2                     l2739:
  7885  14E2  0869               	movf	___fladd@aexp,w
  7886  14E3  1903               	btfsc	3,2
  7887  14E4  2CE6               	goto	u3661
  7888  14E5  2CE7               	goto	u3660
  7889  14E6                     u3661:
  7890  14E6  2D1B               	goto	l797
  7891  14E7                     u3660:
  7892  14E7                     l2741:
  7893  14E7  3001               	movlw	1
  7894  14E8  07D8               	addwf	___fladd@b,f
  7895  14E9  3000               	movlw	0
  7896  14EA  1803               	skipnc
  7897  14EB  3001               	movlw	1
  7898  14EC  07D9               	addwf	___fladd@b+1,f
  7899  14ED  3000               	movlw	0
  7900  14EE  1803               	skipnc
  7901  14EF  3001               	movlw	1
  7902  14F0  07DA               	addwf	___fladd@b+2,f
  7903  14F1  3000               	movlw	0
  7904  14F2  1803               	skipnc
  7905  14F3  3001               	movlw	1
  7906  14F4  07DB               	addwf	___fladd@b+3,f
  7907  14F5                     l2743:
  7908  14F5  1C5B               	btfss	___fladd@b+3,0
  7909  14F6  2CF8               	goto	u3671
  7910  14F7  2CF9               	goto	u3670
  7911  14F8                     u3671:
  7912  14F8  2D1B               	goto	l797
  7913  14F9                     u3670:
  7914  14F9                     l2745:
  7915  14F9  0858               	movf	___fladd@b,w
  7916  14FA  00E0               	movwf	??___fladd
  7917  14FB  0859               	movf	___fladd@b+1,w
  7918  14FC  00E1               	movwf	??___fladd+1
  7919  14FD  085A               	movf	___fladd@b+2,w
  7920  14FE  00E2               	movwf	??___fladd+2
  7921  14FF  085B               	movf	___fladd@b+3,w
  7922  1500  00E3               	movwf	??___fladd+3
  7923  1501  3001               	movlw	1
  7924  1502  00E4               	movwf	??___fladd+4
  7925  1503                     u3685:
  7926  1503  0D63               	rlf	??___fladd+3,w
  7927  1504  0CE3               	rrf	??___fladd+3,f
  7928  1505  0CE2               	rrf	??___fladd+2,f
  7929  1506  0CE1               	rrf	??___fladd+1,f
  7930  1507  0CE0               	rrf	??___fladd,f
  7931  1508                     u3680:
  7932  1508  0BE4               	decfsz	??___fladd+4,f
  7933  1509  2D03               	goto	u3685
  7934  150A  0863               	movf	??___fladd+3,w
  7935  150B  00DB               	movwf	___fladd@b+3
  7936  150C  0862               	movf	??___fladd+2,w
  7937  150D  00DA               	movwf	___fladd@b+2
  7938  150E  0861               	movf	??___fladd+1,w
  7939  150F  00D9               	movwf	___fladd@b+1
  7940  1510  0860               	movf	??___fladd,w
  7941  1511  00D8               	movwf	___fladd@b
  7942  1512  0A6A               	incf	___fladd@bexp,w
  7943  1513  1903               	btfsc	3,2
  7944  1514  2D16               	goto	u3691
  7945  1515  2D17               	goto	u3690
  7946  1516                     u3691:
  7947  1516  2D1B               	goto	l797
  7948  1517                     u3690:
  7949  1517                     l2747:
  7950  1517  3001               	movlw	1
  7951  1518  00E0               	movwf	??___fladd
  7952  1519  0860               	movf	??___fladd,w
  7953  151A  07EA               	addwf	___fladd@bexp,f
  7954  151B                     l797:
  7955  151B  0A6A               	incf	___fladd@bexp,w
  7956  151C  1903               	btfsc	3,2
  7957  151D  2D1F               	goto	u3701
  7958  151E  2D20               	goto	u3700
  7959  151F                     u3701:
  7960  151F  2D25               	goto	l2751
  7961  1520                     u3700:
  7962  1520                     l2749:
  7963  1520  086A               	movf	___fladd@bexp,w
  7964  1521  1D03               	btfss	3,2
  7965  1522  2D24               	goto	u3711
  7966  1523  2D25               	goto	u3710
  7967  1524                     u3711:
  7968  1524  2D33               	goto	l2757
  7969  1525                     u3710:
  7970  1525                     l2751:
  7971  1525  3000               	movlw	0
  7972  1526  00DB               	movwf	___fladd@b+3
  7973  1527  3000               	movlw	0
  7974  1528  00DA               	movwf	___fladd@b+2
  7975  1529  3000               	movlw	0
  7976  152A  00D9               	movwf	___fladd@b+1
  7977  152B  3000               	movlw	0
  7978  152C  00D8               	movwf	___fladd@b
  7979  152D                     l2753:
  7980  152D  086A               	movf	___fladd@bexp,w
  7981  152E  1D03               	btfss	3,2
  7982  152F  2D31               	goto	u3721
  7983  1530  2D32               	goto	u3720
  7984  1531                     u3721:
  7985  1531  2D33               	goto	l2757
  7986  1532                     u3720:
  7987  1532                     l2755:
  7988  1532  01E8               	clrf	___fladd@signs
  7989  1533                     l2757:
  7990  1533  1C6A               	btfss	___fladd@bexp,0
  7991  1534  2D36               	goto	u3731
  7992  1535  2D37               	goto	u3730
  7993  1536                     u3731:
  7994  1536  2D39               	goto	l2761
  7995  1537                     u3730:
  7996  1537                     l2759:
  7997  1537  17DA               	bsf	___fladd@b+2,7
  7998  1538  2D3D               	goto	l805
  7999  1539                     l2761:
  8000  1539  307F               	movlw	127
  8001  153A  00E0               	movwf	??___fladd
  8002  153B  0860               	movf	??___fladd,w
  8003  153C  05DA               	andwf	___fladd@b+2,f
  8004  153D                     l805:
  8005  153D  086A               	movf	___fladd@bexp,w
  8006  153E  00E0               	movwf	??___fladd
  8007  153F  1003               	clrc
  8008  1540  0C60               	rrf	??___fladd,w
  8009  1541  00E1               	movwf	??___fladd+1
  8010  1542  0861               	movf	??___fladd+1,w
  8011  1543  00DB               	movwf	___fladd@b+3
  8012  1544                     l2763:
  8013  1544  1FE8               	btfss	___fladd@signs,7
  8014  1545  2D47               	goto	u3741
  8015  1546  2D48               	goto	u3740
  8016  1547                     u3741:
  8017  1547  2D49               	goto	l806
  8018  1548                     u3740:
  8019  1548                     l2765:
  8020  1548  17DB               	bsf	___fladd@b+3,7
  8021  1549                     l806:
  8022  1549                     l776:
  8023  1549  0008               	return
  8024  154A                     __end_of___fladd:
  8025                           
  8026                           	psect	text20
  8027  18E9                     __ptext20:	
  8028 ;; *************** function ___flneg *****************
  8029 ;; Defined at:
  8030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  f1              4    3[COMMON] unsigned char 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;		None
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  4    3[COMMON] unsigned char 
  8037 ;; Registers used:
  8038 ;;		wreg
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8044 ;;      Params:         4       0       0       0       0
  8045 ;;      Locals:         0       0       0       0       0
  8046 ;;      Temps:          0       0       0       0       0
  8047 ;;      Totals:         4       0       0       0       0
  8048 ;;Total ram usage:        4 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 2
  8051 ;; This function calls:
  8052 ;;		Nothing
  8053 ;; This function is called by:
  8054 ;;		_sprintf
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           
  8059                           ;psect for function ___flneg
  8060  18E9                     ___flneg:
  8061  18E9                     l3183:	
  8062                           ;incstack = 0
  8063                           ; Regs used in ___flneg: [wreg]
  8064                           
  8065  18E9  0876               	movf	___flneg@f1+3,w
  8066  18EA  0475               	iorwf	___flneg@f1+2,w
  8067  18EB  0474               	iorwf	___flneg@f1+1,w
  8068  18EC  0473               	iorwf	___flneg@f1,w
  8069  18ED  1903               	skipnz
  8070  18EE  28F0               	goto	u4871
  8071  18EF  28F1               	goto	u4870
  8072  18F0                     u4871:
  8073  18F0  28F3               	goto	l3187
  8074  18F1                     u4870:
  8075  18F1                     l3185:
  8076  18F1  3080               	movlw	128
  8077  18F2  06F6               	xorwf	___flneg@f1+3,f
  8078  18F3                     l3187:
  8079  18F3                     l635:
  8080  18F3  0008               	return
  8081  18F4                     __end_of___flneg:
  8082                           
  8083                           	psect	text21
  8084  1DE3                     __ptext21:	
  8085 ;; *************** function ___flge *****************
  8086 ;; Defined at:
  8087 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  ff1             4    0[BANK0 ] unsigned char 
  8090 ;;  ff2             4    4[BANK0 ] unsigned char 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;		None
  8093 ;; Return value:  Size  Location     Type
  8094 ;;		None               void
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8102 ;;      Params:         0       8       0       0       0
  8103 ;;      Locals:         0       0       0       0       0
  8104 ;;      Temps:          4       0       0       0       0
  8105 ;;      Totals:         4       8       0       0       0
  8106 ;;Total ram usage:       12 bytes
  8107 ;; Hardware stack levels used: 1
  8108 ;; Hardware stack levels required when called: 2
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_sprintf
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function ___flge
  8118  1DE3                     ___flge:
  8119  1DE3                     l4077:	
  8120                           ;incstack = 0
  8121                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8122                           
  8123  1DE3  3000               	movlw	0
  8124  1DE4  1283               	bcf	3,5	;RP0=0, select bank0
  8125  1DE5  1303               	bcf	3,6	;RP1=0, select bank0
  8126  1DE6  0520               	andwf	___flge@ff1,w
  8127  1DE7  00F3               	movwf	??___flge
  8128  1DE8  3000               	movlw	0
  8129  1DE9  0521               	andwf	___flge@ff1+1,w
  8130  1DEA  00F4               	movwf	??___flge+1
  8131  1DEB  3080               	movlw	128
  8132  1DEC  0522               	andwf	___flge@ff1+2,w
  8133  1DED  00F5               	movwf	??___flge+2
  8134  1DEE  307F               	movlw	127
  8135  1DEF  0523               	andwf	___flge@ff1+3,w
  8136  1DF0  00F6               	movwf	??___flge+3
  8137  1DF1  0876               	movf	??___flge+3,w
  8138  1DF2  0475               	iorwf	??___flge+2,w
  8139  1DF3  0474               	iorwf	??___flge+1,w
  8140  1DF4  0473               	iorwf	??___flge,w
  8141  1DF5  1D03               	skipz
  8142  1DF6  2DF8               	goto	u6411
  8143  1DF7  2DF9               	goto	u6410
  8144  1DF8                     u6411:
  8145  1DF8  2E01               	goto	l627
  8146  1DF9                     u6410:
  8147  1DF9                     l4079:
  8148  1DF9  3000               	movlw	0
  8149  1DFA  00A3               	movwf	___flge@ff1+3
  8150  1DFB  3000               	movlw	0
  8151  1DFC  00A2               	movwf	___flge@ff1+2
  8152  1DFD  3000               	movlw	0
  8153  1DFE  00A1               	movwf	___flge@ff1+1
  8154  1DFF  3000               	movlw	0
  8155  1E00  00A0               	movwf	___flge@ff1
  8156  1E01                     l627:
  8157  1E01  3000               	movlw	0
  8158  1E02  0524               	andwf	___flge@ff2,w
  8159  1E03  00F3               	movwf	??___flge
  8160  1E04  3000               	movlw	0
  8161  1E05  0525               	andwf	___flge@ff2+1,w
  8162  1E06  00F4               	movwf	??___flge+1
  8163  1E07  3080               	movlw	128
  8164  1E08  0526               	andwf	___flge@ff2+2,w
  8165  1E09  00F5               	movwf	??___flge+2
  8166  1E0A  307F               	movlw	127
  8167  1E0B  0527               	andwf	___flge@ff2+3,w
  8168  1E0C  00F6               	movwf	??___flge+3
  8169  1E0D  0876               	movf	??___flge+3,w
  8170  1E0E  0475               	iorwf	??___flge+2,w
  8171  1E0F  0474               	iorwf	??___flge+1,w
  8172  1E10  0473               	iorwf	??___flge,w
  8173  1E11  1D03               	skipz
  8174  1E12  2E14               	goto	u6421
  8175  1E13  2E15               	goto	u6420
  8176  1E14                     u6421:
  8177  1E14  2E1D               	goto	l4083
  8178  1E15                     u6420:
  8179  1E15                     l4081:
  8180  1E15  3000               	movlw	0
  8181  1E16  00A7               	movwf	___flge@ff2+3
  8182  1E17  3000               	movlw	0
  8183  1E18  00A6               	movwf	___flge@ff2+2
  8184  1E19  3000               	movlw	0
  8185  1E1A  00A5               	movwf	___flge@ff2+1
  8186  1E1B  3000               	movlw	0
  8187  1E1C  00A4               	movwf	___flge@ff2
  8188  1E1D                     l4083:
  8189  1E1D  1FA3               	btfss	___flge@ff1+3,7
  8190  1E1E  2E20               	goto	u6431
  8191  1E1F  2E21               	goto	u6430
  8192  1E20                     u6431:
  8193  1E20  2E45               	goto	l4087
  8194  1E21                     u6430:
  8195  1E21                     l4085:
  8196  1E21  3000               	movlw	0
  8197  1E22  00F3               	movwf	??___flge
  8198  1E23  3000               	movlw	0
  8199  1E24  00F4               	movwf	??___flge+1
  8200  1E25  3000               	movlw	0
  8201  1E26  00F5               	movwf	??___flge+2
  8202  1E27  3080               	movlw	128
  8203  1E28  00F6               	movwf	??___flge+3
  8204  1E29  0820               	movf	___flge@ff1,w
  8205  1E2A  02F3               	subwf	??___flge,f
  8206  1E2B  0821               	movf	___flge@ff1+1,w
  8207  1E2C  1C03               	skipc
  8208  1E2D  0F21               	incfsz	___flge@ff1+1,w
  8209  1E2E  2E30               	goto	u6441
  8210  1E2F  2E31               	goto	u6442
  8211  1E30                     u6441:
  8212  1E30  02F4               	subwf	??___flge+1,f
  8213  1E31                     u6442:
  8214  1E31  0822               	movf	___flge@ff1+2,w
  8215  1E32  1C03               	skipc
  8216  1E33  0F22               	incfsz	___flge@ff1+2,w
  8217  1E34  2E36               	goto	u6443
  8218  1E35  2E37               	goto	u6444
  8219  1E36                     u6443:
  8220  1E36  02F5               	subwf	??___flge+2,f
  8221  1E37                     u6444:
  8222  1E37  0823               	movf	___flge@ff1+3,w
  8223  1E38  1C03               	skipc
  8224  1E39  0F23               	incfsz	___flge@ff1+3,w
  8225  1E3A  2E3C               	goto	u6445
  8226  1E3B  2E3D               	goto	u6446
  8227  1E3C                     u6445:
  8228  1E3C  02F6               	subwf	??___flge+3,f
  8229  1E3D                     u6446:
  8230  1E3D  0876               	movf	??___flge+3,w
  8231  1E3E  00A3               	movwf	___flge@ff1+3
  8232  1E3F  0875               	movf	??___flge+2,w
  8233  1E40  00A2               	movwf	___flge@ff1+2
  8234  1E41  0874               	movf	??___flge+1,w
  8235  1E42  00A1               	movwf	___flge@ff1+1
  8236  1E43  0873               	movf	??___flge,w
  8237  1E44  00A0               	movwf	___flge@ff1
  8238  1E45                     l4087:
  8239  1E45  1FA7               	btfss	___flge@ff2+3,7
  8240  1E46  2E48               	goto	u6451
  8241  1E47  2E49               	goto	u6450
  8242  1E48                     u6451:
  8243  1E48  2E6D               	goto	l630
  8244  1E49                     u6450:
  8245  1E49                     l4089:
  8246  1E49  3000               	movlw	0
  8247  1E4A  00F3               	movwf	??___flge
  8248  1E4B  3000               	movlw	0
  8249  1E4C  00F4               	movwf	??___flge+1
  8250  1E4D  3000               	movlw	0
  8251  1E4E  00F5               	movwf	??___flge+2
  8252  1E4F  3080               	movlw	128
  8253  1E50  00F6               	movwf	??___flge+3
  8254  1E51  0824               	movf	___flge@ff2,w
  8255  1E52  02F3               	subwf	??___flge,f
  8256  1E53  0825               	movf	___flge@ff2+1,w
  8257  1E54  1C03               	skipc
  8258  1E55  0F25               	incfsz	___flge@ff2+1,w
  8259  1E56  2E58               	goto	u6461
  8260  1E57  2E59               	goto	u6462
  8261  1E58                     u6461:
  8262  1E58  02F4               	subwf	??___flge+1,f
  8263  1E59                     u6462:
  8264  1E59  0826               	movf	___flge@ff2+2,w
  8265  1E5A  1C03               	skipc
  8266  1E5B  0F26               	incfsz	___flge@ff2+2,w
  8267  1E5C  2E5E               	goto	u6463
  8268  1E5D  2E5F               	goto	u6464
  8269  1E5E                     u6463:
  8270  1E5E  02F5               	subwf	??___flge+2,f
  8271  1E5F                     u6464:
  8272  1E5F  0827               	movf	___flge@ff2+3,w
  8273  1E60  1C03               	skipc
  8274  1E61  0F27               	incfsz	___flge@ff2+3,w
  8275  1E62  2E64               	goto	u6465
  8276  1E63  2E65               	goto	u6466
  8277  1E64                     u6465:
  8278  1E64  02F6               	subwf	??___flge+3,f
  8279  1E65                     u6466:
  8280  1E65  0876               	movf	??___flge+3,w
  8281  1E66  00A7               	movwf	___flge@ff2+3
  8282  1E67  0875               	movf	??___flge+2,w
  8283  1E68  00A6               	movwf	___flge@ff2+2
  8284  1E69  0874               	movf	??___flge+1,w
  8285  1E6A  00A5               	movwf	___flge@ff2+1
  8286  1E6B  0873               	movf	??___flge,w
  8287  1E6C  00A4               	movwf	___flge@ff2
  8288  1E6D                     l630:
  8289  1E6D  3080               	movlw	128
  8290  1E6E  06A3               	xorwf	___flge@ff1+3,f
  8291  1E6F  3080               	movlw	128
  8292  1E70  06A7               	xorwf	___flge@ff2+3,f
  8293  1E71  0827               	movf	___flge@ff2+3,w
  8294  1E72  0223               	subwf	___flge@ff1+3,w
  8295  1E73  1D03               	skipz
  8296  1E74  2E7F               	goto	u6475
  8297  1E75  0826               	movf	___flge@ff2+2,w
  8298  1E76  0222               	subwf	___flge@ff1+2,w
  8299  1E77  1D03               	skipz
  8300  1E78  2E7F               	goto	u6475
  8301  1E79  0825               	movf	___flge@ff2+1,w
  8302  1E7A  0221               	subwf	___flge@ff1+1,w
  8303  1E7B  1D03               	skipz
  8304  1E7C  2E7F               	goto	u6475
  8305  1E7D  0824               	movf	___flge@ff2,w
  8306  1E7E  0220               	subwf	___flge@ff1,w
  8307  1E7F                     u6475:
  8308  1E7F  1803               	skipnc
  8309  1E80  2E82               	goto	u6471
  8310  1E81  2E83               	goto	u6470
  8311  1E82                     u6471:
  8312  1E82  2E85               	goto	l4093
  8313  1E83                     u6470:
  8314  1E83                     l4091:
  8315  1E83  1003               	clrc
  8316  1E84  2E86               	goto	l631
  8317  1E85                     l4093:
  8318  1E85  1403               	setc
  8319  1E86                     l631:
  8320  1E86  0008               	return
  8321  1E87                     __end_of___flge:
  8322                           
  8323                           	psect	text22
  8324  1B31                     __ptext22:	
  8325 ;; *************** function ___fleq *****************
  8326 ;; Defined at:
  8327 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  ff1             4    0[BANK0 ] unsigned char 
  8330 ;;  ff2             4    4[BANK0 ] unsigned char 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;		None               void
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8342 ;;      Params:         0       8       0       0       0
  8343 ;;      Locals:         0       0       0       0       0
  8344 ;;      Temps:          4       0       0       0       0
  8345 ;;      Totals:         4       8       0       0       0
  8346 ;;Total ram usage:       12 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 2
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_sprintf
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           
  8357                           ;psect for function ___fleq
  8358  1B31                     ___fleq:
  8359  1B31                     l4065:	
  8360                           ;incstack = 0
  8361                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8362                           
  8363  1B31  3000               	movlw	0
  8364  1B32  1283               	bcf	3,5	;RP0=0, select bank0
  8365  1B33  1303               	bcf	3,6	;RP1=0, select bank0
  8366  1B34  0520               	andwf	___fleq@ff1,w
  8367  1B35  00F3               	movwf	??___fleq
  8368  1B36  3000               	movlw	0
  8369  1B37  0521               	andwf	___fleq@ff1+1,w
  8370  1B38  00F4               	movwf	??___fleq+1
  8371  1B39  3080               	movlw	128
  8372  1B3A  0522               	andwf	___fleq@ff1+2,w
  8373  1B3B  00F5               	movwf	??___fleq+2
  8374  1B3C  307F               	movlw	127
  8375  1B3D  0523               	andwf	___fleq@ff1+3,w
  8376  1B3E  00F6               	movwf	??___fleq+3
  8377  1B3F  0876               	movf	??___fleq+3,w
  8378  1B40  0475               	iorwf	??___fleq+2,w
  8379  1B41  0474               	iorwf	??___fleq+1,w
  8380  1B42  0473               	iorwf	??___fleq,w
  8381  1B43  1D03               	skipz
  8382  1B44  2B46               	goto	u6381
  8383  1B45  2B47               	goto	u6380
  8384  1B46                     u6381:
  8385  1B46  2B4F               	goto	l622
  8386  1B47                     u6380:
  8387  1B47                     l4067:
  8388  1B47  3000               	movlw	0
  8389  1B48  00A3               	movwf	___fleq@ff1+3
  8390  1B49  3000               	movlw	0
  8391  1B4A  00A2               	movwf	___fleq@ff1+2
  8392  1B4B  3000               	movlw	0
  8393  1B4C  00A1               	movwf	___fleq@ff1+1
  8394  1B4D  3000               	movlw	0
  8395  1B4E  00A0               	movwf	___fleq@ff1
  8396  1B4F                     l622:
  8397  1B4F  3000               	movlw	0
  8398  1B50  0524               	andwf	___fleq@ff2,w
  8399  1B51  00F3               	movwf	??___fleq
  8400  1B52  3000               	movlw	0
  8401  1B53  0525               	andwf	___fleq@ff2+1,w
  8402  1B54  00F4               	movwf	??___fleq+1
  8403  1B55  3080               	movlw	128
  8404  1B56  0526               	andwf	___fleq@ff2+2,w
  8405  1B57  00F5               	movwf	??___fleq+2
  8406  1B58  307F               	movlw	127
  8407  1B59  0527               	andwf	___fleq@ff2+3,w
  8408  1B5A  00F6               	movwf	??___fleq+3
  8409  1B5B  0876               	movf	??___fleq+3,w
  8410  1B5C  0475               	iorwf	??___fleq+2,w
  8411  1B5D  0474               	iorwf	??___fleq+1,w
  8412  1B5E  0473               	iorwf	??___fleq,w
  8413  1B5F  1D03               	skipz
  8414  1B60  2B62               	goto	u6391
  8415  1B61  2B63               	goto	u6390
  8416  1B62                     u6391:
  8417  1B62  2B6B               	goto	l623
  8418  1B63                     u6390:
  8419  1B63                     l4069:
  8420  1B63  3000               	movlw	0
  8421  1B64  00A7               	movwf	___fleq@ff2+3
  8422  1B65  3000               	movlw	0
  8423  1B66  00A6               	movwf	___fleq@ff2+2
  8424  1B67  3000               	movlw	0
  8425  1B68  00A5               	movwf	___fleq@ff2+1
  8426  1B69  3000               	movlw	0
  8427  1B6A  00A4               	movwf	___fleq@ff2
  8428  1B6B                     l623:
  8429  1B6B  0827               	movf	___fleq@ff2+3,w
  8430  1B6C  0623               	xorwf	___fleq@ff1+3,w
  8431  1B6D  1D03               	skipz
  8432  1B6E  2B79               	goto	u6405
  8433  1B6F  0826               	movf	___fleq@ff2+2,w
  8434  1B70  0622               	xorwf	___fleq@ff1+2,w
  8435  1B71  1D03               	skipz
  8436  1B72  2B79               	goto	u6405
  8437  1B73  0825               	movf	___fleq@ff2+1,w
  8438  1B74  0621               	xorwf	___fleq@ff1+1,w
  8439  1B75  1D03               	skipz
  8440  1B76  2B79               	goto	u6405
  8441  1B77  0824               	movf	___fleq@ff2,w
  8442  1B78  0620               	xorwf	___fleq@ff1,w
  8443  1B79                     u6405:
  8444  1B79  1903               	skipnz
  8445  1B7A  2B7C               	goto	u6401
  8446  1B7B  2B7D               	goto	u6400
  8447  1B7C                     u6401:
  8448  1B7C  2B7F               	goto	l4073
  8449  1B7D                     u6400:
  8450  1B7D                     l4071:
  8451  1B7D  1003               	clrc
  8452  1B7E  2B80               	goto	l624
  8453  1B7F                     l4073:
  8454  1B7F  1403               	setc
  8455  1B80                     l624:
  8456  1B80  0008               	return
  8457  1B81                     __end_of___fleq:
  8458                           
  8459                           	psect	text23
  8460  18F4                     __ptext23:	
  8461 ;; *************** function _limpiar *****************
  8462 ;; Defined at:
  8463 ;;		line 60 in file "lcd.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0, pclath, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8477 ;;      Params:         0       0       0       0       0
  8478 ;;      Locals:         0       0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0
  8480 ;;      Totals:         0       0       0       0       0
  8481 ;;Total ram usage:        0 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; Hardware stack levels required when called: 4
  8484 ;; This function calls:
  8485 ;;		_CMDs
  8486 ;; This function is called by:
  8487 ;;		_main
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           
  8492                           ;psect for function _limpiar
  8493  18F4                     _limpiar:
  8494  18F4                     l4161:	
  8495                           ;incstack = 0
  8496                           ; Regs used in _limpiar: [wreg+status,2+status,0+pclath+cstack]
  8497                           
  8498                           
  8499                           ;lcd.c: 61:     CMDs(0);
  8500  18F4  3000               	movlw	0
  8501  18F5  160A  158A  2169  160A  158A  	fcall	_CMDs
  8502                           
  8503                           ;lcd.c: 62:     CMDs(1);
  8504  18FA  3001               	movlw	1
  8505  18FB  160A  158A  2169  160A  158A  	fcall	_CMDs
  8506  1900                     l47:
  8507  1900  0008               	return
  8508  1901                     __end_of_limpiar:
  8509                           
  8510                           	psect	text24
  8511  19AE                     __ptext24:	
  8512 ;; *************** function _cursor *****************
  8513 ;; Defined at:
  8514 ;;		line 65 in file "lcd.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  a               1    wreg     unsigned char 
  8517 ;;  b               1    7[COMMON] unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  a               1    0[BANK0 ] unsigned char 
  8520 ;;  x               1    1[BANK0 ] unsigned char 
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  1    wreg      void 
  8523 ;; Registers used:
  8524 ;;		wreg, status,2, status,0, pclath, cstack
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8530 ;;      Params:         1       0       0       0       0
  8531 ;;      Locals:         0       2       0       0       0
  8532 ;;      Temps:          1       0       0       0       0
  8533 ;;      Totals:         2       2       0       0       0
  8534 ;;Total ram usage:        4 bytes
  8535 ;; Hardware stack levels used: 1
  8536 ;; Hardware stack levels required when called: 4
  8537 ;; This function calls:
  8538 ;;		_CMDs
  8539 ;; This function is called by:
  8540 ;;		_main
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           
  8545                           ;psect for function _cursor
  8546  19AE                     _cursor:
  8547                           
  8548                           ;incstack = 0
  8549                           ; Regs used in _cursor: [wreg+status,2+status,0+pclath+cstack]
  8550                           ;cursor@a stored from wreg
  8551  19AE  1283               	bcf	3,5	;RP0=0, select bank0
  8552  19AF  1303               	bcf	3,6	;RP1=0, select bank0
  8553  19B0  00A0               	movwf	cursor@a
  8554  19B1                     l4163:
  8555                           
  8556                           ;lcd.c: 66:     uint8_t x;;lcd.c: 67:     if (a == 1){
  8557  19B1  0320               	decf	cursor@a,w
  8558  19B2  1D03               	btfss	3,2
  8559  19B3  29B5               	goto	u6681
  8560  19B4  29B6               	goto	u6680
  8561  19B5                     u6681:
  8562  19B5  29C2               	goto	l4169
  8563  19B6                     u6680:
  8564  19B6                     l4165:
  8565                           
  8566                           ;lcd.c: 68:        x = 0x80 + b;
  8567  19B6  0877               	movf	cursor@b,w
  8568  19B7  3E80               	addlw	128
  8569  19B8  00F8               	movwf	??_cursor
  8570  19B9  0878               	movf	??_cursor,w
  8571  19BA  00A1               	movwf	cursor@x
  8572  19BB                     l4167:
  8573                           
  8574                           ;lcd.c: 69:        CMDs(x);
  8575  19BB  0821               	movf	cursor@x,w
  8576  19BC  160A  158A  2169  160A  158A  	fcall	_CMDs
  8577                           
  8578                           ;lcd.c: 70:     }
  8579  19C1  29D3               	goto	l53
  8580  19C2                     l4169:
  8581  19C2  3002               	movlw	2
  8582  19C3  0620               	xorwf	cursor@a,w
  8583  19C4  1D03               	btfss	3,2
  8584  19C5  29C7               	goto	u6691
  8585  19C6  29C8               	goto	u6690
  8586  19C7                     u6691:
  8587  19C7  29D3               	goto	l53
  8588  19C8                     u6690:
  8589  19C8                     l4171:
  8590                           
  8591                           ;lcd.c: 72:         x = 0xC0 + b;
  8592  19C8  0877               	movf	cursor@b,w
  8593  19C9  3EC0               	addlw	192
  8594  19CA  00F8               	movwf	??_cursor
  8595  19CB  0878               	movf	??_cursor,w
  8596  19CC  00A1               	movwf	cursor@x
  8597  19CD                     l4173:
  8598                           
  8599                           ;lcd.c: 73:         CMDs(x);
  8600  19CD  0821               	movf	cursor@x,w
  8601  19CE  160A  158A  2169  160A  158A  	fcall	_CMDs
  8602  19D3                     l53:
  8603  19D3  0008               	return
  8604  19D4                     __end_of_cursor:
  8605                           
  8606                           	psect	text25
  8607  1901                     __ptext25:	
  8608 ;; *************** function _config_tx *****************
  8609 ;; Defined at:
  8610 ;;		line 16 in file "uart.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;		None
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      void 
  8617 ;; Registers used:
  8618 ;;		status,2
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8624 ;;      Params:         0       0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0
  8627 ;;      Totals:         0       0       0       0       0
  8628 ;;Total ram usage:        0 bytes
  8629 ;; Hardware stack levels used: 1
  8630 ;; Hardware stack levels required when called: 2
  8631 ;; This function calls:
  8632 ;;		Nothing
  8633 ;; This function is called by:
  8634 ;;		_main
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           
  8639                           ;psect for function _config_tx
  8640  1901                     _config_tx:
  8641  1901                     l3431:	
  8642                           ;incstack = 0
  8643                           ; Regs used in _config_tx: [status,2]
  8644                           
  8645                           
  8646                           ;uart.c: 17:     TXSTAbits.CSRC = 0;
  8647  1901  1683               	bsf	3,5	;RP0=1, select bank1
  8648  1902  1303               	bcf	3,6	;RP1=0, select bank1
  8649  1903  1398               	bcf	24,7	;volatile
  8650                           
  8651                           ;uart.c: 18:     TXSTAbits.TX9 = 0;
  8652  1904  1318               	bcf	24,6	;volatile
  8653                           
  8654                           ;uart.c: 19:     TXSTAbits.TXEN = 1;
  8655  1905  1698               	bsf	24,5	;volatile
  8656                           
  8657                           ;uart.c: 20:     TXSTAbits.SYNC = 0;
  8658  1906  1218               	bcf	24,4	;volatile
  8659                           
  8660                           ;uart.c: 21:     TXSTAbits.BRGH = 1;
  8661  1907  1518               	bsf	24,2	;volatile
  8662                           
  8663                           ;uart.c: 22:     TXSTAbits.TRMT = 0;
  8664  1908  1098               	bcf	24,1	;volatile
  8665                           
  8666                           ;uart.c: 23:     TXSTAbits.TX9D = 0;
  8667  1909  1018               	bcf	24,0	;volatile
  8668                           
  8669                           ;uart.c: 24:     BAUDCTLbits.BRG16 = 0;
  8670  190A  1683               	bsf	3,5	;RP0=1, select bank3
  8671  190B  1703               	bsf	3,6	;RP1=1, select bank3
  8672  190C  1187               	bcf	7,3	;volatile
  8673  190D                     l3433:
  8674                           
  8675                           ;uart.c: 25:     TXREG=0;
  8676  190D  1283               	bcf	3,5	;RP0=0, select bank0
  8677  190E  1303               	bcf	3,6	;RP1=0, select bank0
  8678  190F  0199               	clrf	25	;volatile
  8679  1910                     l227:
  8680  1910  0008               	return
  8681  1911                     __end_of_config_tx:
  8682                           
  8683                           	psect	text26
  8684  18D7                     __ptext26:	
  8685 ;; *************** function _config_rx *****************
  8686 ;; Defined at:
  8687 ;;		line 28 in file "uart.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;		None
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		status,2
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8701 ;;      Params:         0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0
  8704 ;;      Totals:         0       0       0       0       0
  8705 ;;Total ram usage:        0 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; Hardware stack levels required when called: 2
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_main
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function _config_rx
  8717  18D7                     _config_rx:
  8718  18D7                     l3435:	
  8719                           ;incstack = 0
  8720                           ; Regs used in _config_rx: [status,2]
  8721                           
  8722                           
  8723                           ;uart.c: 29:     RCSTAbits.SPEN = 1;
  8724  18D7  1283               	bcf	3,5	;RP0=0, select bank0
  8725  18D8  1303               	bcf	3,6	;RP1=0, select bank0
  8726  18D9  1798               	bsf	24,7	;volatile
  8727                           
  8728                           ;uart.c: 30:     RCSTAbits.RX9 = 0;
  8729  18DA  1318               	bcf	24,6	;volatile
  8730                           
  8731                           ;uart.c: 31:     RCSTAbits.SREN = 0;
  8732  18DB  1298               	bcf	24,5	;volatile
  8733                           
  8734                           ;uart.c: 32:     RCSTAbits.CREN = 1;
  8735  18DC  1618               	bsf	24,4	;volatile
  8736  18DD                     l3437:
  8737                           
  8738                           ;uart.c: 33:     RCREG = 0;
  8739  18DD  019A               	clrf	26	;volatile
  8740  18DE                     l230:
  8741  18DE  0008               	return
  8742  18DF                     __end_of_config_rx:
  8743                           
  8744                           	psect	text27
  8745  1C30                     __ptext27:	
  8746 ;; *************** function _configLCD *****************
  8747 ;; Defined at:
  8748 ;;		line 77 in file "lcd.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;		None
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;		None
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      void 
  8755 ;; Registers used:
  8756 ;;		wreg, status,2, status,0, pclath, cstack
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8762 ;;      Params:         0       0       0       0       0
  8763 ;;      Locals:         0       0       0       0       0
  8764 ;;      Temps:          2       0       0       0       0
  8765 ;;      Totals:         2       0       0       0       0
  8766 ;;Total ram usage:        2 bytes
  8767 ;; Hardware stack levels used: 1
  8768 ;; Hardware stack levels required when called: 4
  8769 ;; This function calls:
  8770 ;;		_CMDs
  8771 ;; This function is called by:
  8772 ;;		_main
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           
  8777                           ;psect for function _configLCD
  8778  1C30                     _configLCD:
  8779  1C30                     l4175:	
  8780                           ;incstack = 0
  8781                           ; Regs used in _configLCD: [wreg+status,2+status,0+pclath+cstack]
  8782                           
  8783                           
  8784                           ;lcd.c: 78:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8785  1C30  301A               	movlw	26
  8786  1C31  00F8               	movwf	??_configLCD+1
  8787  1C32  30F8               	movlw	248
  8788  1C33  00F7               	movwf	??_configLCD
  8789  1C34                     u7157:
  8790  1C34  0BF7               	decfsz	??_configLCD,f
  8791  1C35  2C34               	goto	u7157
  8792  1C36  0BF8               	decfsz	??_configLCD+1,f
  8793  1C37  2C34               	goto	u7157
  8794  1C38  0000               	nop
  8795  1C39                     l4177:
  8796                           
  8797                           ;lcd.c: 79:     CMDs (0x30);
  8798  1C39  3030               	movlw	48
  8799  1C3A  160A  158A  2169  160A  158A  	fcall	_CMDs
  8800  1C3F                     l4179:
  8801                           
  8802                           ;lcd.c: 80:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8803  1C3F  3007               	movlw	7
  8804  1C40  00F8               	movwf	??_configLCD+1
  8805  1C41  307D               	movlw	125
  8806  1C42  00F7               	movwf	??_configLCD
  8807  1C43                     u7167:
  8808  1C43  0BF7               	decfsz	??_configLCD,f
  8809  1C44  2C43               	goto	u7167
  8810  1C45  0BF8               	decfsz	??_configLCD+1,f
  8811  1C46  2C43               	goto	u7167
  8812                           
  8813                           ;lcd.c: 81:     CMDs (0x30);
  8814  1C47  3030               	movlw	48
  8815  1C48  160A  158A  2169  160A  158A  	fcall	_CMDs
  8816  1C4D                     l4181:
  8817                           
  8818                           ;lcd.c: 82:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  8819  1C4D  3021               	movlw	33
  8820  1C4E  00F7               	movwf	??_configLCD
  8821  1C4F                     u7177:
  8822  1C4F  0BF7               	decfsz	??_configLCD,f
  8823  1C50  2C4F               	goto	u7177
  8824  1C51                     l4183:
  8825                           
  8826                           ;lcd.c: 83:     CMDs (0x30);
  8827  1C51  3030               	movlw	48
  8828  1C52  160A  158A  2169  160A  158A  	fcall	_CMDs
  8829                           
  8830                           ;lcd.c: 84:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  8831  1C57  3021               	movlw	33
  8832  1C58  00F7               	movwf	??_configLCD
  8833  1C59                     u7187:
  8834  1C59  0BF7               	decfsz	??_configLCD,f
  8835  1C5A  2C59               	goto	u7187
  8836  1C5B                     l4185:
  8837                           
  8838                           ;lcd.c: 85:     CMDs (0x38);
  8839  1C5B  3038               	movlw	56
  8840  1C5C  160A  158A  2169  160A  158A  	fcall	_CMDs
  8841  1C61                     l4187:
  8842                           
  8843                           ;lcd.c: 86:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8844  1C61  3013               	movlw	19
  8845  1C62  00F7               	movwf	??_configLCD
  8846  1C63                     u7197:
  8847  1C63  0BF7               	decfsz	??_configLCD,f
  8848  1C64  2C63               	goto	u7197
  8849  1C65  2C66               	nop2
  8850                           
  8851                           ;lcd.c: 87:     CMDs (0x08);
  8852  1C66  3008               	movlw	8
  8853  1C67  160A  158A  2169  160A  158A  	fcall	_CMDs
  8854  1C6C                     l4189:
  8855                           
  8856                           ;lcd.c: 88:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8857  1C6C  3013               	movlw	19
  8858  1C6D  00F7               	movwf	??_configLCD
  8859  1C6E                     u7207:
  8860  1C6E  0BF7               	decfsz	??_configLCD,f
  8861  1C6F  2C6E               	goto	u7207
  8862  1C70  2C71               	nop2
  8863  1C71                     l4191:
  8864                           
  8865                           ;lcd.c: 89:     CMDs (0x01);
  8866  1C71  3001               	movlw	1
  8867  1C72  160A  158A  2169  160A  158A  	fcall	_CMDs
  8868                           
  8869                           ;lcd.c: 90:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8870  1C77  3007               	movlw	7
  8871  1C78  00F8               	movwf	??_configLCD+1
  8872  1C79  307D               	movlw	125
  8873  1C7A  00F7               	movwf	??_configLCD
  8874  1C7B                     u7217:
  8875  1C7B  0BF7               	decfsz	??_configLCD,f
  8876  1C7C  2C7B               	goto	u7217
  8877  1C7D  0BF8               	decfsz	??_configLCD+1,f
  8878  1C7E  2C7B               	goto	u7217
  8879  1C7F                     l4193:
  8880                           
  8881                           ;lcd.c: 91:     CMDs (0x06);
  8882  1C7F  3006               	movlw	6
  8883  1C80  160A  158A  2169  160A  158A  	fcall	_CMDs
  8884  1C85                     l4195:
  8885                           
  8886                           ;lcd.c: 92:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8887  1C85  3013               	movlw	19
  8888  1C86  00F7               	movwf	??_configLCD
  8889  1C87                     u7227:
  8890  1C87  0BF7               	decfsz	??_configLCD,f
  8891  1C88  2C87               	goto	u7227
  8892  1C89  2C8A               	nop2
  8893                           
  8894                           ;lcd.c: 93:     CMDs (0x0C);
  8895  1C8A  300C               	movlw	12
  8896  1C8B  160A  158A  2169  160A  158A  	fcall	_CMDs
  8897  1C90                     l4197:
  8898                           
  8899                           ;lcd.c: 94:     _delay((unsigned long)((60)*(4000000/4000000.0)));
  8900  1C90  3013               	movlw	19
  8901  1C91  00F7               	movwf	??_configLCD
  8902  1C92                     u7237:
  8903  1C92  0BF7               	decfsz	??_configLCD,f
  8904  1C93  2C92               	goto	u7237
  8905  1C94  2C95               	nop2
  8906  1C95                     l56:
  8907  1C95  0008               	return
  8908  1C96                     __end_of_configLCD:
  8909                           
  8910                           	psect	text28
  8911  1969                     __ptext28:	
  8912 ;; *************** function _CMDs *****************
  8913 ;; Defined at:
  8914 ;;		line 50 in file "lcd.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  a               1    wreg     unsigned char 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  a               1    6[COMMON] unsigned char 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		wreg, status,2, status,0, pclath, cstack
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8928 ;;      Params:         0       0       0       0       0
  8929 ;;      Locals:         1       0       0       0       0
  8930 ;;      Temps:          2       0       0       0       0
  8931 ;;      Totals:         3       0       0       0       0
  8932 ;;Total ram usage:        3 bytes
  8933 ;; Hardware stack levels used: 1
  8934 ;; Hardware stack levels required when called: 3
  8935 ;; This function calls:
  8936 ;;		_pin
  8937 ;; This function is called by:
  8938 ;;		_limpiar
  8939 ;;		_cursor
  8940 ;;		_configLCD
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           
  8945                           ;psect for function _CMDs
  8946  1969                     _CMDs:
  8947                           
  8948                           ;incstack = 0
  8949                           ; Regs used in _CMDs: [wreg+status,2+status,0+pclath+cstack]
  8950                           ;CMDs@a stored from wreg
  8951  1969  00F6               	movwf	CMDs@a
  8952  196A                     l3869:
  8953                           
  8954                           ;lcd.c: 51:     RE0 = 0;
  8955  196A  1283               	bcf	3,5	;RP0=0, select bank0
  8956  196B  1303               	bcf	3,6	;RP1=0, select bank0
  8957  196C  1009               	bcf	9,0	;volatile
  8958  196D                     l3871:
  8959                           
  8960                           ;lcd.c: 52:     pin(a);
  8961  196D  0876               	movf	CMDs@a,w
  8962  196E  160A  158A  2269  160A  158A  	fcall	_pin
  8963  1973                     l3873:
  8964                           
  8965                           ;lcd.c: 53:     RE1 = 1;
  8966  1973  1283               	bcf	3,5	;RP0=0, select bank0
  8967  1974  1303               	bcf	3,6	;RP1=0, select bank0
  8968  1975  1489               	bsf	9,1	;volatile
  8969  1976                     l3875:
  8970                           
  8971                           ;lcd.c: 54:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8972  1976  2977               	nop2	;2 cycle nop
  8973  1977  2978               	nop2	;2 cycle nop
  8974  1978  0000               	nop
  8975  1979                     l3877:
  8976                           
  8977                           ;lcd.c: 55:     RE1 = 0;
  8978  1979  1283               	bcf	3,5	;RP0=0, select bank0
  8979  197A  1303               	bcf	3,6	;RP1=0, select bank0
  8980  197B  1089               	bcf	9,1	;volatile
  8981  197C                     l3879:
  8982                           
  8983                           ;lcd.c: 56:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8984  197C  297D               	nop2	;2 cycle nop
  8985  197D  297E               	nop2	;2 cycle nop
  8986  197E  0000               	nop
  8987  197F                     l3881:
  8988                           
  8989                           ;lcd.c: 57:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8990  197F  3003               	movlw	3
  8991  1980  00F5               	movwf	??_CMDs+1
  8992  1981  3097               	movlw	151
  8993  1982  00F4               	movwf	??_CMDs
  8994  1983                     u7247:
  8995  1983  0BF4               	decfsz	??_CMDs,f
  8996  1984  2983               	goto	u7247
  8997  1985  0BF5               	decfsz	??_CMDs+1,f
  8998  1986  2983               	goto	u7247
  8999  1987  2988               	nop2
  9000  1988                     l44:
  9001  1988  0008               	return
  9002  1989                     __end_of_CMDs:
  9003                           
  9004                           	psect	text29
  9005  0853                     __ptext29:	
  9006 ;; *************** function _configADC *****************
  9007 ;; Defined at:
  9008 ;;		line 14 in file "adc.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  ch              1    wreg     unsigned char 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  ch              1    5[COMMON] unsigned char 
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      unsigned char 
  9015 ;; Registers used:
  9016 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9022 ;;      Params:         0       0       0       0       0
  9023 ;;      Locals:         1       0       0       0       0
  9024 ;;      Temps:          2       0       0       0       0
  9025 ;;      Totals:         3       0       0       0       0
  9026 ;;Total ram usage:        3 bytes
  9027 ;; Hardware stack levels used: 1
  9028 ;; Hardware stack levels required when called: 2
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_main
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function _configADC
  9038  0853                     _configADC:
  9039                           
  9040                           ;incstack = 0
  9041                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
  9042                           ;configADC@ch stored from wreg
  9043  0853  00F5               	movwf	configADC@ch
  9044  0854                     l3343:
  9045                           
  9046                           ;adc.c: 15:     ADCON0bits.ADCS = 1;
  9047  0854  1283               	bcf	3,5	;RP0=0, select bank0
  9048  0855  1303               	bcf	3,6	;RP1=0, select bank0
  9049  0856  081F               	movf	31,w	;volatile
  9050  0857  393F               	andlw	-193
  9051  0858  3840               	iorlw	64
  9052  0859  009F               	movwf	31	;volatile
  9053  085A                     l3345:
  9054                           
  9055                           ;adc.c: 16:     ADCON1 = 0;
  9056  085A  1683               	bsf	3,5	;RP0=1, select bank1
  9057  085B  1303               	bcf	3,6	;RP1=0, select bank1
  9058  085C  019F               	clrf	31	;volatile
  9059                           
  9060                           ;adc.c: 18:     switch (ch) {
  9061  085D  28F8               	goto	l3381
  9062  085E                     l87:	
  9063                           ;adc.c: 19:         case 0:
  9064                           
  9065                           
  9066                           ;adc.c: 20:             TRISAbits.TRISA0 = 1;
  9067  085E  1405               	bsf	5,0	;volatile
  9068                           
  9069                           ;adc.c: 21:             ANSELbits.ANS0 = 1;
  9070  085F  1683               	bsf	3,5	;RP0=1, select bank3
  9071  0860  1703               	bsf	3,6	;RP1=1, select bank3
  9072  0861  1408               	bsf	8,0	;volatile
  9073  0862                     l3347:
  9074                           
  9075                           ;adc.c: 22:             ADCON0bits.CHS = 0;
  9076  0862  30C3               	movlw	-61
  9077  0863  1283               	bcf	3,5	;RP0=0, select bank0
  9078  0864  1303               	bcf	3,6	;RP1=0, select bank0
  9079  0865  059F               	andwf	31,f	;volatile
  9080                           
  9081                           ;adc.c: 23:             break;
  9082  0866  292C               	goto	l88
  9083  0867                     l89:	
  9084                           ;adc.c: 24:         case 1:
  9085                           
  9086                           
  9087                           ;adc.c: 25:             TRISAbits.TRISA1=1;
  9088  0867  1485               	bsf	5,1	;volatile
  9089                           
  9090                           ;adc.c: 26:             ANSELbits.ANS1=1;
  9091  0868  1683               	bsf	3,5	;RP0=1, select bank3
  9092  0869  1703               	bsf	3,6	;RP1=1, select bank3
  9093  086A  1488               	bsf	8,1	;volatile
  9094  086B                     l3349:
  9095                           
  9096                           ;adc.c: 27:             ADCON0bits.CHS=1;
  9097  086B  1283               	bcf	3,5	;RP0=0, select bank0
  9098  086C  1303               	bcf	3,6	;RP1=0, select bank0
  9099  086D  081F               	movf	31,w	;volatile
  9100  086E  39C3               	andlw	-61
  9101  086F  3804               	iorlw	4
  9102  0870  009F               	movwf	31	;volatile
  9103                           
  9104                           ;adc.c: 28:             break;
  9105  0871  292C               	goto	l88
  9106  0872                     l90:	
  9107                           ;adc.c: 29:         case 2:
  9108                           
  9109                           
  9110                           ;adc.c: 30:             TRISAbits.TRISA2=1;
  9111  0872  1505               	bsf	5,2	;volatile
  9112                           
  9113                           ;adc.c: 31:             ANSELbits.ANS2=1;
  9114  0873  1683               	bsf	3,5	;RP0=1, select bank3
  9115  0874  1703               	bsf	3,6	;RP1=1, select bank3
  9116  0875  1508               	bsf	8,2	;volatile
  9117  0876                     l3351:
  9118                           
  9119                           ;adc.c: 32:             ADCON0bits.CHS=2;
  9120  0876  1283               	bcf	3,5	;RP0=0, select bank0
  9121  0877  1303               	bcf	3,6	;RP1=0, select bank0
  9122  0878  081F               	movf	31,w	;volatile
  9123  0879  39C3               	andlw	-61
  9124  087A  3808               	iorlw	8
  9125  087B  009F               	movwf	31	;volatile
  9126                           
  9127                           ;adc.c: 33:             break;
  9128  087C  292C               	goto	l88
  9129  087D                     l91:	
  9130                           ;adc.c: 34:         case 3:
  9131                           
  9132                           
  9133                           ;adc.c: 35:             TRISAbits.TRISA3=1;
  9134  087D  1585               	bsf	5,3	;volatile
  9135                           
  9136                           ;adc.c: 36:             ANSELbits.ANS3=1;
  9137  087E  1683               	bsf	3,5	;RP0=1, select bank3
  9138  087F  1703               	bsf	3,6	;RP1=1, select bank3
  9139  0880  1588               	bsf	8,3	;volatile
  9140  0881                     l3353:
  9141                           
  9142                           ;adc.c: 37:             ADCON0bits.CHS=3;
  9143  0881  1283               	bcf	3,5	;RP0=0, select bank0
  9144  0882  1303               	bcf	3,6	;RP1=0, select bank0
  9145  0883  081F               	movf	31,w	;volatile
  9146  0884  39C3               	andlw	-61
  9147  0885  380C               	iorlw	12
  9148  0886  009F               	movwf	31	;volatile
  9149                           
  9150                           ;adc.c: 38:             break;
  9151  0887  292C               	goto	l88
  9152  0888                     l92:	
  9153                           ;adc.c: 39:         case 4:
  9154                           
  9155                           
  9156                           ;adc.c: 40:             TRISAbits.TRISA5=1;
  9157  0888  1685               	bsf	5,5	;volatile
  9158                           
  9159                           ;adc.c: 41:             ANSELbits.ANS4=1;
  9160  0889  1683               	bsf	3,5	;RP0=1, select bank3
  9161  088A  1703               	bsf	3,6	;RP1=1, select bank3
  9162  088B  1608               	bsf	8,4	;volatile
  9163  088C                     l3355:
  9164                           
  9165                           ;adc.c: 42:             ADCON0bits.CHS=4;
  9166  088C  1283               	bcf	3,5	;RP0=0, select bank0
  9167  088D  1303               	bcf	3,6	;RP1=0, select bank0
  9168  088E  081F               	movf	31,w	;volatile
  9169  088F  39C3               	andlw	-61
  9170  0890  3810               	iorlw	16
  9171  0891  009F               	movwf	31	;volatile
  9172                           
  9173                           ;adc.c: 43:             break;
  9174  0892  292C               	goto	l88
  9175  0893                     l93:	
  9176                           ;adc.c: 44:         case 5:
  9177                           
  9178                           
  9179                           ;adc.c: 45:             TRISEbits.TRISE0=1;
  9180  0893  1409               	bsf	9,0	;volatile
  9181                           
  9182                           ;adc.c: 46:             ANSELbits.ANS5=1;
  9183  0894  1683               	bsf	3,5	;RP0=1, select bank3
  9184  0895  1703               	bsf	3,6	;RP1=1, select bank3
  9185  0896  1688               	bsf	8,5	;volatile
  9186  0897                     l3357:
  9187                           
  9188                           ;adc.c: 47:             ADCON0bits.CHS=5;
  9189  0897  1283               	bcf	3,5	;RP0=0, select bank0
  9190  0898  1303               	bcf	3,6	;RP1=0, select bank0
  9191  0899  081F               	movf	31,w	;volatile
  9192  089A  39C3               	andlw	-61
  9193  089B  3814               	iorlw	20
  9194  089C  009F               	movwf	31	;volatile
  9195                           
  9196                           ;adc.c: 48:             break;
  9197  089D  292C               	goto	l88
  9198  089E                     l94:	
  9199                           ;adc.c: 49:         case 6:
  9200                           
  9201                           
  9202                           ;adc.c: 50:             TRISEbits.TRISE1=1;
  9203  089E  1489               	bsf	9,1	;volatile
  9204                           
  9205                           ;adc.c: 51:             ANSELbits.ANS6=1;
  9206  089F  1683               	bsf	3,5	;RP0=1, select bank3
  9207  08A0  1703               	bsf	3,6	;RP1=1, select bank3
  9208  08A1  1708               	bsf	8,6	;volatile
  9209  08A2                     l3359:
  9210                           
  9211                           ;adc.c: 52:             ADCON0bits.CHS=6;
  9212  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  9213  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  9214  08A4  081F               	movf	31,w	;volatile
  9215  08A5  39C3               	andlw	-61
  9216  08A6  3818               	iorlw	24
  9217  08A7  009F               	movwf	31	;volatile
  9218                           
  9219                           ;adc.c: 53:             break;
  9220  08A8  292C               	goto	l88
  9221  08A9                     l95:	
  9222                           ;adc.c: 54:         case 7:
  9223                           
  9224                           
  9225                           ;adc.c: 55:             TRISEbits.TRISE2=1;
  9226  08A9  1509               	bsf	9,2	;volatile
  9227                           
  9228                           ;adc.c: 56:             ANSELbits.ANS7=1;
  9229  08AA  1683               	bsf	3,5	;RP0=1, select bank3
  9230  08AB  1703               	bsf	3,6	;RP1=1, select bank3
  9231  08AC  1788               	bsf	8,7	;volatile
  9232  08AD                     l3361:
  9233                           
  9234                           ;adc.c: 57:             ADCON0bits.CHS=7;
  9235  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  9236  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  9237  08AF  081F               	movf	31,w	;volatile
  9238  08B0  39C3               	andlw	-61
  9239  08B1  381C               	iorlw	28
  9240  08B2  009F               	movwf	31	;volatile
  9241                           
  9242                           ;adc.c: 58:             break;
  9243  08B3  292C               	goto	l88
  9244  08B4                     l96:	
  9245                           ;adc.c: 59:         case 8:
  9246                           
  9247                           
  9248                           ;adc.c: 60:             TRISBbits.TRISB2=1;
  9249  08B4  1506               	bsf	6,2	;volatile
  9250                           
  9251                           ;adc.c: 61:             ANSELHbits.ANS8=1;
  9252  08B5  1683               	bsf	3,5	;RP0=1, select bank3
  9253  08B6  1703               	bsf	3,6	;RP1=1, select bank3
  9254  08B7  1409               	bsf	9,0	;volatile
  9255  08B8                     l3363:
  9256                           
  9257                           ;adc.c: 62:             ADCON0bits.CHS=8;
  9258  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  9259  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  9260  08BA  081F               	movf	31,w	;volatile
  9261  08BB  39C3               	andlw	-61
  9262  08BC  3820               	iorlw	32
  9263  08BD  009F               	movwf	31	;volatile
  9264                           
  9265                           ;adc.c: 63:             break;
  9266  08BE  292C               	goto	l88
  9267  08BF                     l97:	
  9268                           ;adc.c: 64:         case 9:
  9269                           
  9270                           
  9271                           ;adc.c: 65:             TRISBbits.TRISB3=1;
  9272  08BF  1586               	bsf	6,3	;volatile
  9273                           
  9274                           ;adc.c: 66:             ANSELHbits.ANS9=1;
  9275  08C0  1683               	bsf	3,5	;RP0=1, select bank3
  9276  08C1  1703               	bsf	3,6	;RP1=1, select bank3
  9277  08C2  1489               	bsf	9,1	;volatile
  9278  08C3                     l3365:
  9279                           
  9280                           ;adc.c: 67:             ADCON0bits.CHS=9;
  9281  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  9282  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  9283  08C5  081F               	movf	31,w	;volatile
  9284  08C6  39C3               	andlw	-61
  9285  08C7  3824               	iorlw	36
  9286  08C8  009F               	movwf	31	;volatile
  9287                           
  9288                           ;adc.c: 68:             break;
  9289  08C9  292C               	goto	l88
  9290  08CA                     l98:	
  9291                           ;adc.c: 69:         case 10:
  9292                           
  9293                           
  9294                           ;adc.c: 70:             TRISBbits.TRISB1=1;
  9295  08CA  1486               	bsf	6,1	;volatile
  9296                           
  9297                           ;adc.c: 71:             ANSELHbits.ANS10=1;
  9298  08CB  1683               	bsf	3,5	;RP0=1, select bank3
  9299  08CC  1703               	bsf	3,6	;RP1=1, select bank3
  9300  08CD  1509               	bsf	9,2	;volatile
  9301  08CE                     l3367:
  9302                           
  9303                           ;adc.c: 72:             ADCON0bits.CHS=10;
  9304  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  9305  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  9306  08D0  081F               	movf	31,w	;volatile
  9307  08D1  39C3               	andlw	-61
  9308  08D2  3828               	iorlw	40
  9309  08D3  009F               	movwf	31	;volatile
  9310                           
  9311                           ;adc.c: 73:             break;
  9312  08D4  292C               	goto	l88
  9313  08D5                     l99:	
  9314                           ;adc.c: 74:         case 11:
  9315                           
  9316                           
  9317                           ;adc.c: 75:             TRISBbits.TRISB4=1;
  9318  08D5  1606               	bsf	6,4	;volatile
  9319                           
  9320                           ;adc.c: 76:             ANSELHbits.ANS11=1;
  9321  08D6  1683               	bsf	3,5	;RP0=1, select bank3
  9322  08D7  1703               	bsf	3,6	;RP1=1, select bank3
  9323  08D8  1589               	bsf	9,3	;volatile
  9324  08D9                     l3369:
  9325                           
  9326                           ;adc.c: 77:             ADCON0bits.CHS=11;
  9327  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  9328  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  9329  08DB  081F               	movf	31,w	;volatile
  9330  08DC  39C3               	andlw	-61
  9331  08DD  382C               	iorlw	44
  9332  08DE  009F               	movwf	31	;volatile
  9333                           
  9334                           ;adc.c: 78:             break;
  9335  08DF  292C               	goto	l88
  9336  08E0                     l100:	
  9337                           ;adc.c: 79:         case 12:
  9338                           
  9339                           
  9340                           ;adc.c: 80:             TRISBbits.TRISB0=1;
  9341  08E0  1406               	bsf	6,0	;volatile
  9342                           
  9343                           ;adc.c: 81:             ANSELHbits.ANS12=1;
  9344  08E1  1683               	bsf	3,5	;RP0=1, select bank3
  9345  08E2  1703               	bsf	3,6	;RP1=1, select bank3
  9346  08E3  1609               	bsf	9,4	;volatile
  9347  08E4                     l3371:
  9348                           
  9349                           ;adc.c: 82:             ADCON0bits.CHS=12;
  9350  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  9351  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  9352  08E6  081F               	movf	31,w	;volatile
  9353  08E7  39C3               	andlw	-61
  9354  08E8  3830               	iorlw	48
  9355  08E9  009F               	movwf	31	;volatile
  9356                           
  9357                           ;adc.c: 83:             break;
  9358  08EA  292C               	goto	l88
  9359  08EB                     l101:	
  9360                           ;adc.c: 84:         case 13:
  9361                           
  9362                           
  9363                           ;adc.c: 85:             TRISBbits.TRISB5=1;
  9364  08EB  1686               	bsf	6,5	;volatile
  9365                           
  9366                           ;adc.c: 86:             ANSELHbits.ANS13=1;
  9367  08EC  1683               	bsf	3,5	;RP0=1, select bank3
  9368  08ED  1703               	bsf	3,6	;RP1=1, select bank3
  9369  08EE  1689               	bsf	9,5	;volatile
  9370  08EF                     l3373:
  9371                           
  9372                           ;adc.c: 87:             ADCON0bits.CHS=13;
  9373  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  9374  08F0  1303               	bcf	3,6	;RP1=0, select bank0
  9375  08F1  081F               	movf	31,w	;volatile
  9376  08F2  39C3               	andlw	-61
  9377  08F3  3834               	iorlw	52
  9378  08F4  009F               	movwf	31	;volatile
  9379                           
  9380                           ;adc.c: 88:             break;
  9381  08F5  292C               	goto	l88
  9382  08F6                     l3375:
  9383                           
  9384                           ;adc.c: 90:             return 0;
  9385  08F6  3000               	movlw	0
  9386  08F7  293B               	goto	l103
  9387  08F8                     l3381:
  9388  08F8  0875               	movf	configADC@ch,w
  9389  08F9  00F3               	movwf	??_configADC
  9390  08FA  01F4               	clrf	??_configADC+1
  9391                           
  9392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9393                           ; Switch size 1, requested type "simple"
  9394                           ; Number of cases is 1, Range of values is 0 to 0
  9395                           ; switch strategies available:
  9396                           ; Name         Instructions Cycles
  9397                           ; simple_byte            4     3 (average)
  9398                           ; direct_byte           11     8 (fixed)
  9399                           ; jumptable            260     6 (fixed)
  9400                           ;	Chosen strategy is simple_byte
  9401  08FB  0874               	movf	??_configADC+1,w
  9402  08FC  3A00               	xorlw	0	; case 0
  9403  08FD  1903               	skipnz
  9404  08FE  2900               	goto	l4547
  9405  08FF  28F6               	goto	l3375
  9406  0900                     l4547:
  9407                           
  9408                           ; Switch size 1, requested type "simple"
  9409                           ; Number of cases is 14, Range of values is 0 to 13
  9410                           ; switch strategies available:
  9411                           ; Name         Instructions Cycles
  9412                           ; simple_byte           43    22 (average)
  9413                           ; direct_byte           50     8 (fixed)
  9414                           ; jumptable            260     6 (fixed)
  9415                           ;	Chosen strategy is simple_byte
  9416  0900  0873               	movf	??_configADC,w
  9417  0901  3A00               	xorlw	0	; case 0
  9418  0902  1903               	skipnz
  9419  0903  285E               	goto	l87
  9420  0904  3A01               	xorlw	1	; case 1
  9421  0905  1903               	skipnz
  9422  0906  2867               	goto	l89
  9423  0907  3A03               	xorlw	3	; case 2
  9424  0908  1903               	skipnz
  9425  0909  2872               	goto	l90
  9426  090A  3A01               	xorlw	1	; case 3
  9427  090B  1903               	skipnz
  9428  090C  287D               	goto	l91
  9429  090D  3A07               	xorlw	7	; case 4
  9430  090E  1903               	skipnz
  9431  090F  2888               	goto	l92
  9432  0910  3A01               	xorlw	1	; case 5
  9433  0911  1903               	skipnz
  9434  0912  2893               	goto	l93
  9435  0913  3A03               	xorlw	3	; case 6
  9436  0914  1903               	skipnz
  9437  0915  289E               	goto	l94
  9438  0916  3A01               	xorlw	1	; case 7
  9439  0917  1903               	skipnz
  9440  0918  28A9               	goto	l95
  9441  0919  3A0F               	xorlw	15	; case 8
  9442  091A  1903               	skipnz
  9443  091B  28B4               	goto	l96
  9444  091C  3A01               	xorlw	1	; case 9
  9445  091D  1903               	skipnz
  9446  091E  28BF               	goto	l97
  9447  091F  3A03               	xorlw	3	; case 10
  9448  0920  1903               	skipnz
  9449  0921  28CA               	goto	l98
  9450  0922  3A01               	xorlw	1	; case 11
  9451  0923  1903               	skipnz
  9452  0924  28D5               	goto	l99
  9453  0925  3A07               	xorlw	7	; case 12
  9454  0926  1903               	skipnz
  9455  0927  28E0               	goto	l100
  9456  0928  3A01               	xorlw	1	; case 13
  9457  0929  1903               	skipnz
  9458  092A  28EB               	goto	l101
  9459  092B  28F6               	goto	l3375
  9460  092C                     l88:
  9461                           
  9462                           ;adc.c: 93:     ADCON0bits.ADON = 1;
  9463  092C  141F               	bsf	31,0	;volatile
  9464  092D                     l3383:
  9465                           
  9466                           ;adc.c: 94:     _delay((unsigned long)((0.25)*(4000000/4000.0)));
  9467  092D  3053               	movlw	83
  9468  092E  00F3               	movwf	??_configADC
  9469  092F                     u7257:
  9470  092F  0BF3               	decfsz	??_configADC,f
  9471  0930  292F               	goto	u7257
  9472  0931                     l3385:
  9473                           
  9474                           ;adc.c: 95:     ADCON0bits.GO = 1;
  9475  0931  1283               	bcf	3,5	;RP0=0, select bank0
  9476  0932  1303               	bcf	3,6	;RP1=0, select bank0
  9477  0933  149F               	bsf	31,1	;volatile
  9478  0934                     l3387:
  9479                           
  9480                           ;adc.c: 98:     if (ADCON0bits.GO_DONE == 1){
  9481  0934  1C9F               	btfss	31,1	;volatile
  9482  0935  2937               	goto	u5231
  9483  0936  2938               	goto	u5230
  9484  0937                     u5231:
  9485  0937  2939               	goto	l105
  9486  0938                     u5230:
  9487  0938  2934               	goto	l3387
  9488  0939                     l105:	
  9489                           ;adc.c: 101:     else{
  9490                           
  9491                           
  9492                           ;adc.c: 102:         ADCON0bits.ADON = 0;
  9493  0939  101F               	bcf	31,0	;volatile
  9494  093A                     l3393:
  9495                           
  9496                           ;adc.c: 103:         return ADRESH;
  9497  093A  081E               	movf	30,w	;volatile
  9498  093B                     l103:
  9499  093B  0008               	return
  9500  093C                     __end_of_configADC:
  9501                           
  9502                           	psect	text30
  9503  194B                     __ptext30:	
  9504 ;; *************** function _config *****************
  9505 ;; Defined at:
  9506 ;;		line 90 in file "lab2.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      void 
  9513 ;; Registers used:
  9514 ;;		status,2
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9520 ;;      Params:         0       0       0       0       0
  9521 ;;      Locals:         0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0
  9523 ;;      Totals:         0       0       0       0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used: 1
  9526 ;; Hardware stack levels required when called: 2
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_main
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           
  9535                           ;psect for function _config
  9536  194B                     _config:
  9537  194B                     l3409:	
  9538                           ;incstack = 0
  9539                           ; Regs used in _config: [status,2]
  9540                           
  9541                           
  9542                           ;lab2.c: 91:     ANSEL = 0;
  9543  194B  1683               	bsf	3,5	;RP0=1, select bank3
  9544  194C  1703               	bsf	3,6	;RP1=1, select bank3
  9545  194D  0188               	clrf	8	;volatile
  9546                           
  9547                           ;lab2.c: 92:     ANSELH = 0;
  9548  194E  0189               	clrf	9	;volatile
  9549                           
  9550                           ;lab2.c: 93:     PORTD = 0;
  9551  194F  1283               	bcf	3,5	;RP0=0, select bank0
  9552  1950  1303               	bcf	3,6	;RP1=0, select bank0
  9553  1951  0188               	clrf	8	;volatile
  9554                           
  9555                           ;lab2.c: 94:     PORTE = 0;
  9556  1952  0189               	clrf	9	;volatile
  9557                           
  9558                           ;lab2.c: 95:     PORTC = 0;
  9559  1953  0187               	clrf	7	;volatile
  9560                           
  9561                           ;lab2.c: 96:     TRISA = 0;
  9562  1954  1683               	bsf	3,5	;RP0=1, select bank1
  9563  1955  1303               	bcf	3,6	;RP1=0, select bank1
  9564  1956  0185               	clrf	5	;volatile
  9565  1957                     l3411:
  9566                           
  9567                           ;lab2.c: 97:     TRISCbits.TRISC6 = 0;
  9568  1957  1307               	bcf	7,6	;volatile
  9569  1958                     l3413:
  9570                           
  9571                           ;lab2.c: 98:     TRISCbits.TRISC7 = 1;
  9572  1958  1787               	bsf	7,7	;volatile
  9573                           
  9574                           ;lab2.c: 99:     TRISD = 0;
  9575  1959  0188               	clrf	8	;volatile
  9576                           
  9577                           ;lab2.c: 100:     TRISE = 0;
  9578  195A  0189               	clrf	9	;volatile
  9579  195B                     l3415:
  9580                           
  9581                           ;lab2.c: 102:     INTCONbits.PEIE = 1;
  9582  195B  170B               	bsf	11,6	;volatile
  9583  195C                     l3417:
  9584                           
  9585                           ;lab2.c: 103:     PIE1bits.RCIE = 1;
  9586  195C  168C               	bsf	12,5	;volatile
  9587  195D                     l3419:
  9588                           
  9589                           ;lab2.c: 104:     PIR1bits.RCIF = 0;
  9590  195D  1283               	bcf	3,5	;RP0=0, select bank0
  9591  195E  1303               	bcf	3,6	;RP1=0, select bank0
  9592  195F  128C               	bcf	12,5	;volatile
  9593  1960                     l3421:
  9594                           
  9595                           ;lab2.c: 105:     INTCONbits.GIE = 1;
  9596  1960  178B               	bsf	11,7	;volatile
  9597  1961                     l3423:
  9598                           
  9599                           ;lab2.c: 106:     PIE1bits.TXIE = 0;
  9600  1961  1683               	bsf	3,5	;RP0=1, select bank1
  9601  1962  1303               	bcf	3,6	;RP1=0, select bank1
  9602  1963  120C               	bcf	12,4	;volatile
  9603  1964                     l3425:
  9604                           
  9605                           ;lab2.c: 107:     PIR1bits.RCIF = 1;
  9606  1964  1283               	bcf	3,5	;RP0=0, select bank0
  9607  1965  1303               	bcf	3,6	;RP1=0, select bank0
  9608  1966  168C               	bsf	12,5	;volatile
  9609  1967                     l3427:
  9610                           
  9611                           ;lab2.c: 108:     PIR1bits.TXIF = 1;
  9612  1967  160C               	bsf	12,4	;volatile
  9613  1968                     l199:
  9614  1968  0008               	return
  9615  1969                     __end_of_config:
  9616                           
  9617                           	psect	text31
  9618  18CA                     __ptext31:	
  9619 ;; *************** function _baud *****************
  9620 ;; Defined at:
  9621 ;;		line 12 in file "uart.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;		None
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;		None
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  1    wreg      void 
  9628 ;; Registers used:
  9629 ;;		wreg
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9635 ;;      Params:         0       0       0       0       0
  9636 ;;      Locals:         0       0       0       0       0
  9637 ;;      Temps:          0       0       0       0       0
  9638 ;;      Totals:         0       0       0       0       0
  9639 ;;Total ram usage:        0 bytes
  9640 ;; Hardware stack levels used: 1
  9641 ;; Hardware stack levels required when called: 2
  9642 ;; This function calls:
  9643 ;;		Nothing
  9644 ;; This function is called by:
  9645 ;;		_main
  9646 ;; This function uses a non-reentrant model
  9647 ;;
  9648                           
  9649                           
  9650                           ;psect for function _baud
  9651  18CA                     _baud:
  9652  18CA                     l3429:	
  9653                           ;incstack = 0
  9654                           ; Regs used in _baud: [wreg]
  9655                           
  9656                           
  9657                           ;uart.c: 13:     SPBRG = 25;
  9658  18CA  3019               	movlw	25
  9659  18CB  1683               	bsf	3,5	;RP0=1, select bank1
  9660  18CC  1303               	bcf	3,6	;RP1=0, select bank1
  9661  18CD  0099               	movwf	25	;volatile
  9662  18CE                     l224:
  9663  18CE  0008               	return
  9664  18CF                     __end_of_baud:
  9665                           
  9666                           	psect	text32
  9667  192D                     __ptext32:	
  9668 ;; *************** function _ESCString *****************
  9669 ;; Defined at:
  9670 ;;		line 39 in file "uart.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  a               1    wreg     PTR unsigned char 
  9673 ;;		 -> BUFFER(20), 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  a               1    5[COMMON] PTR unsigned char 
  9676 ;;		 -> BUFFER(20), 
  9677 ;;  i               1    6[COMMON] unsigned char 
  9678 ;; Return value:  Size  Location     Type
  9679 ;;                  1    wreg      void 
  9680 ;; Registers used:
  9681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9687 ;;      Params:         0       0       0       0       0
  9688 ;;      Locals:         2       0       0       0       0
  9689 ;;      Temps:          1       0       0       0       0
  9690 ;;      Totals:         3       0       0       0       0
  9691 ;;Total ram usage:        3 bytes
  9692 ;; Hardware stack levels used: 1
  9693 ;; Hardware stack levels required when called: 3
  9694 ;; This function calls:
  9695 ;;		_ESC
  9696 ;; This function is called by:
  9697 ;;		_main
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           
  9702                           ;psect for function _ESCString
  9703  192D                     _ESCString:
  9704                           
  9705                           ;incstack = 0
  9706                           ; Regs used in _ESCString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9707                           ;ESCString@a stored from wreg
  9708  192D  00F5               	movwf	ESCString@a
  9709  192E                     l3677:
  9710                           
  9711                           ;uart.c: 40:     uint8_t i;;uart.c: 41:     for(i=0;a[i]!='\0';i++){
  9712  192E  01F6               	clrf	ESCString@i
  9713  192F  293F               	goto	l3683
  9714  1930                     l3679:
  9715                           
  9716                           ;uart.c: 42:         ESC(a[i]);
  9717  1930  0876               	movf	ESCString@i,w
  9718  1931  0775               	addwf	ESCString@a,w
  9719  1932  00F4               	movwf	??_ESCString
  9720  1933  0874               	movf	??_ESCString,w
  9721  1934  0084               	movwf	4
  9722  1935  0800               	movf	0,w
  9723  1936  160A  158A  20DF  160A  158A  	fcall	_ESC
  9724  193B                     l3681:
  9725                           
  9726                           ;uart.c: 43:     }
  9727  193B  3001               	movlw	1
  9728  193C  00F4               	movwf	??_ESCString
  9729  193D  0874               	movf	??_ESCString,w
  9730  193E  07F6               	addwf	ESCString@i,f
  9731  193F                     l3683:
  9732  193F  0876               	movf	ESCString@i,w
  9733  1940  0775               	addwf	ESCString@a,w
  9734  1941  00F4               	movwf	??_ESCString
  9735  1942  0874               	movf	??_ESCString,w
  9736  1943  0084               	movwf	4
  9737  1944  1383               	bcf	3,7	;select IRP bank0
  9738  1945  0800               	movf	0,w
  9739  1946  1D03               	btfss	3,2
  9740  1947  2949               	goto	u5661
  9741  1948  294A               	goto	u5660
  9742  1949                     u5661:
  9743  1949  2930               	goto	l3679
  9744  194A                     u5660:
  9745  194A                     l242:
  9746  194A  0008               	return
  9747  194B                     __end_of_ESCString:
  9748                           
  9749                           	psect	text33
  9750  18DF                     __ptext33:	
  9751 ;; *************** function _ESC *****************
  9752 ;; Defined at:
  9753 ;;		line 35 in file "uart.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  a               1    wreg     unsigned char 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  a               1    3[COMMON] unsigned char 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      void 
  9760 ;; Registers used:
  9761 ;;		wreg
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9767 ;;      Params:         0       0       0       0       0
  9768 ;;      Locals:         1       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0
  9770 ;;      Totals:         1       0       0       0       0
  9771 ;;Total ram usage:        1 bytes
  9772 ;; Hardware stack levels used: 1
  9773 ;; Hardware stack levels required when called: 2
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		_main
  9778 ;;		_ESCString
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           
  9783                           ;psect for function _ESC
  9784  18DF                     _ESC:
  9785                           
  9786                           ;incstack = 0
  9787                           ; Regs used in _ESC: [wreg]
  9788                           ;ESC@a stored from wreg
  9789  18DF  00F3               	movwf	ESC@a
  9790  18E0                     l2935:
  9791  18E0                     l233:	
  9792                           ;uart.c: 36:     while(!TXIF);
  9793                           
  9794  18E0  1283               	bcf	3,5	;RP0=0, select bank0
  9795  18E1  1303               	bcf	3,6	;RP1=0, select bank0
  9796  18E2  1E0C               	btfss	12,4	;volatile
  9797  18E3  28E5               	goto	u4121
  9798  18E4  28E6               	goto	u4120
  9799  18E5                     u4121:
  9800  18E5  28E0               	goto	l233
  9801  18E6                     u4120:
  9802  18E6                     l2937:
  9803                           
  9804                           ;uart.c: 37:     TXREG=a;
  9805  18E6  0873               	movf	ESC@a,w
  9806  18E7  0099               	movwf	25	;volatile
  9807  18E8                     l236:
  9808  18E8  0008               	return
  9809  18E9                     __end_of_ESC:
  9810                           
  9811                           	psect	text34
  9812  1AA7                     __ptext34:	
  9813 ;; *************** function _ESCLCD *****************
  9814 ;; Defined at:
  9815 ;;		line 107 in file "lcd.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  a               2    6[COMMON] PTR unsigned char 
  9818 ;;		 -> BUFFER(20), STR_1(15), 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  i               2    8[COMMON] int 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1    wreg      void 
  9823 ;; Registers used:
  9824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9830 ;;      Params:         2       0       0       0       0
  9831 ;;      Locals:         2       0       0       0       0
  9832 ;;      Temps:          0       3       0       0       0
  9833 ;;      Totals:         4       3       0       0       0
  9834 ;;Total ram usage:        7 bytes
  9835 ;; Hardware stack levels used: 1
  9836 ;; Hardware stack levels required when called: 4
  9837 ;; This function calls:
  9838 ;;		_ESCchar
  9839 ;; This function is called by:
  9840 ;;		_main
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           
  9845                           ;psect for function _ESCLCD
  9846  1AA7                     _ESCLCD:
  9847  1AA7                     l4199:	
  9848                           ;incstack = 0
  9849                           ; Regs used in _ESCLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9850                           
  9851                           
  9852                           ;lcd.c: 108:     int i;;lcd.c: 109:  for(i=0;a[i]!='\0';i++)
  9853  1AA7  01F8               	clrf	ESCLCD@i
  9854  1AA8  01F9               	clrf	ESCLCD@i+1
  9855  1AA9  2ACC               	goto	l4205
  9856  1AAA                     l4201:
  9857                           
  9858                           ;lcd.c: 110:  ESCchar(a[i]);
  9859  1AAA  0878               	movf	ESCLCD@i,w
  9860  1AAB  0776               	addwf	ESCLCD@a,w
  9861  1AAC  00A1               	movwf	??_ESCLCD+1
  9862  1AAD  0877               	movf	ESCLCD@a+1,w
  9863  1AAE  00A0               	movwf	??_ESCLCD
  9864  1AAF  1803               	skipnc
  9865  1AB0  0AA0               	incf	??_ESCLCD,f
  9866  1AB1  1FF8               	btfss	ESCLCD@i,7
  9867  1AB2  2AB4               	goto	u6700
  9868  1AB3  03A0               	decf	??_ESCLCD,f
  9869  1AB4                     u6700:
  9870  1AB4  1283               	bcf	3,5	;RP0=0, select bank0
  9871  1AB5  1303               	bcf	3,6	;RP1=0, select bank0
  9872  1AB6  0820               	movf	??_ESCLCD,w
  9873  1AB7  00A2               	movwf	??_ESCLCD+2
  9874  1AB8  0822               	movf	??_ESCLCD+2,w
  9875  1AB9  00FF               	movwf	btemp+1
  9876  1ABA  0821               	movf	??_ESCLCD+1,w
  9877  1ABB  0084               	movwf	4
  9878  1ABC  160A  118A  2000  160A  158A  	fcall	stringtab
  9879  1AC1  160A  158A  2111  160A  158A  	fcall	_ESCchar
  9880  1AC6                     l4203:
  9881  1AC6  3001               	movlw	1
  9882  1AC7  07F8               	addwf	ESCLCD@i,f
  9883  1AC8  1803               	skipnc
  9884  1AC9  0AF9               	incf	ESCLCD@i+1,f
  9885  1ACA  3000               	movlw	0
  9886  1ACB  07F9               	addwf	ESCLCD@i+1,f
  9887  1ACC                     l4205:
  9888  1ACC  0878               	movf	ESCLCD@i,w
  9889  1ACD  0776               	addwf	ESCLCD@a,w
  9890  1ACE  1283               	bcf	3,5	;RP0=0, select bank0
  9891  1ACF  1303               	bcf	3,6	;RP1=0, select bank0
  9892  1AD0  00A1               	movwf	??_ESCLCD+1
  9893  1AD1  0877               	movf	ESCLCD@a+1,w
  9894  1AD2  00A0               	movwf	??_ESCLCD
  9895  1AD3  1803               	skipnc
  9896  1AD4  0AA0               	incf	??_ESCLCD,f
  9897  1AD5  1FF8               	btfss	ESCLCD@i,7
  9898  1AD6  2AD8               	goto	u6710
  9899  1AD7  03A0               	decf	??_ESCLCD,f
  9900  1AD8                     u6710:
  9901  1AD8  1283               	bcf	3,5	;RP0=0, select bank0
  9902  1AD9  1303               	bcf	3,6	;RP1=0, select bank0
  9903  1ADA  0820               	movf	??_ESCLCD,w
  9904  1ADB  00A2               	movwf	??_ESCLCD+2
  9905  1ADC  0822               	movf	??_ESCLCD+2,w
  9906  1ADD  00FF               	movwf	btemp+1
  9907  1ADE  0821               	movf	??_ESCLCD+1,w
  9908  1ADF  0084               	movwf	4
  9909  1AE0  160A  118A  2000  160A  158A  	fcall	stringtab
  9910  1AE5  3A00               	xorlw	0
  9911  1AE6  1D03               	skipz
  9912  1AE7  2AE9               	goto	u6721
  9913  1AE8  2AEA               	goto	u6720
  9914  1AE9                     u6721:
  9915  1AE9  2AAA               	goto	l4201
  9916  1AEA                     u6720:
  9917  1AEA                     l65:
  9918  1AEA  0008               	return
  9919  1AEB                     __end_of_ESCLCD:
  9920                           
  9921                           	psect	text35
  9922  1911                     __ptext35:	
  9923 ;; *************** function _ESCchar *****************
  9924 ;; Defined at:
  9925 ;;		line 97 in file "lcd.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  a               1    wreg     unsigned char 
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;  a               1    5[COMMON] unsigned char 
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2, status,0, pclath, cstack
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9939 ;;      Params:         0       0       0       0       0
  9940 ;;      Locals:         1       0       0       0       0
  9941 ;;      Temps:          1       0       0       0       0
  9942 ;;      Totals:         2       0       0       0       0
  9943 ;;Total ram usage:        2 bytes
  9944 ;; Hardware stack levels used: 1
  9945 ;; Hardware stack levels required when called: 3
  9946 ;; This function calls:
  9947 ;;		_pin
  9948 ;; This function is called by:
  9949 ;;		_ESCLCD
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           
  9954                           ;psect for function _ESCchar
  9955  1911                     _ESCchar:
  9956                           
  9957                           ;incstack = 0
  9958                           ; Regs used in _ESCchar: [wreg+status,2+status,0+pclath+cstack]
  9959                           ;ESCchar@a stored from wreg
  9960  1911  00F5               	movwf	ESCchar@a
  9961  1912                     l3883:
  9962                           
  9963                           ;lcd.c: 98:     RE0 = 1;
  9964  1912  1283               	bcf	3,5	;RP0=0, select bank0
  9965  1913  1303               	bcf	3,6	;RP1=0, select bank0
  9966  1914  1409               	bsf	9,0	;volatile
  9967  1915                     l3885:
  9968                           
  9969                           ;lcd.c: 99:     pin(a);
  9970  1915  0875               	movf	ESCchar@a,w
  9971  1916  160A  158A  2269  160A  158A  	fcall	_pin
  9972  191B                     l3887:
  9973                           
  9974                           ;lcd.c: 100:     RE1 = 1;
  9975  191B  1283               	bcf	3,5	;RP0=0, select bank0
  9976  191C  1303               	bcf	3,6	;RP1=0, select bank0
  9977  191D  1489               	bsf	9,1	;volatile
  9978  191E                     l3889:
  9979                           
  9980                           ;lcd.c: 101:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9981  191E  291F               	nop2	;2 cycle nop
  9982  191F  2920               	nop2	;2 cycle nop
  9983  1920  0000               	nop
  9984  1921                     l3891:
  9985                           
  9986                           ;lcd.c: 102:     RE1 = 0;
  9987  1921  1283               	bcf	3,5	;RP0=0, select bank0
  9988  1922  1303               	bcf	3,6	;RP1=0, select bank0
  9989  1923  1089               	bcf	9,1	;volatile
  9990  1924                     l3893:
  9991                           
  9992                           ;lcd.c: 103:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9993  1924  2925               	nop2	;2 cycle nop
  9994  1925  2926               	nop2	;2 cycle nop
  9995  1926  0000               	nop
  9996  1927                     l3895:
  9997                           
  9998                           ;lcd.c: 104:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  9999  1927  3010               	movlw	16
 10000  1928  00F4               	movwf	??_ESCchar
 10001  1929                     u7267:
 10002  1929  0BF4               	decfsz	??_ESCchar,f
 10003  192A  2929               	goto	u7267
 10004  192B  0000               	nop
 10005  192C                     l59:
 10006  192C  0008               	return
 10007  192D                     __end_of_ESCchar:
 10008                           
 10009                           	psect	text36
 10010  1A69                     __ptext36:	
 10011 ;; *************** function _pin *****************
 10012 ;; Defined at:
 10013 ;;		line 15 in file "lcd.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  a               1    wreg     unsigned char 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  a               1    3[COMMON] unsigned char 
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      void 
 10020 ;; Registers used:
 10021 ;;		wreg
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10027 ;;      Params:         0       0       0       0       0
 10028 ;;      Locals:         1       0       0       0       0
 10029 ;;      Temps:          0       0       0       0       0
 10030 ;;      Totals:         1       0       0       0       0
 10031 ;;Total ram usage:        1 bytes
 10032 ;; Hardware stack levels used: 1
 10033 ;; Hardware stack levels required when called: 2
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_CMDs
 10038 ;;		_ESCchar
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           
 10043                           ;psect for function _pin
 10044  1A69                     _pin:
 10045                           
 10046                           ;incstack = 0
 10047                           ; Regs used in _pin: [wreg]
 10048                           ;pin@a stored from wreg
 10049  1A69  00F3               	movwf	pin@a
 10050  1A6A                     l3807:
 10051                           
 10052                           ;lcd.c: 16:     if(a & 1){
 10053  1A6A  1C73               	btfss	pin@a,0
 10054  1A6B  2A6D               	goto	u5701
 10055  1A6C  2A6E               	goto	u5700
 10056  1A6D                     u5701:
 10057  1A6D  2A72               	goto	l25
 10058  1A6E                     u5700:
 10059  1A6E                     l3809:
 10060                           
 10061                           ;lcd.c: 17:         RD0=1;}
 10062  1A6E  1283               	bcf	3,5	;RP0=0, select bank0
 10063  1A6F  1303               	bcf	3,6	;RP1=0, select bank0
 10064  1A70  1408               	bsf	8,0	;volatile
 10065  1A71  2A75               	goto	l26
 10066  1A72                     l25:	
 10067                           ;lcd.c: 18:     else{
 10068                           
 10069                           
 10070                           ;lcd.c: 19:         RD0=0;}
 10071  1A72  1283               	bcf	3,5	;RP0=0, select bank0
 10072  1A73  1303               	bcf	3,6	;RP1=0, select bank0
 10073  1A74  1008               	bcf	8,0	;volatile
 10074  1A75                     l26:
 10075                           
 10076                           ;lcd.c: 20:     if(a & 2){
 10077  1A75  1CF3               	btfss	pin@a,1
 10078  1A76  2A78               	goto	u5711
 10079  1A77  2A79               	goto	u5710
 10080  1A78                     u5711:
 10081  1A78  2A7B               	goto	l27
 10082  1A79                     u5710:
 10083  1A79                     l3811:
 10084                           
 10085                           ;lcd.c: 21:         RD1=1;}
 10086  1A79  1488               	bsf	8,1	;volatile
 10087  1A7A  2A7C               	goto	l28
 10088  1A7B                     l27:	
 10089                           ;lcd.c: 22:     else{
 10090                           
 10091                           
 10092                           ;lcd.c: 23:         RD1=0;}
 10093  1A7B  1088               	bcf	8,1	;volatile
 10094  1A7C                     l28:
 10095                           
 10096                           ;lcd.c: 24:     if(a & 4){
 10097  1A7C  1D73               	btfss	pin@a,2
 10098  1A7D  2A7F               	goto	u5721
 10099  1A7E  2A80               	goto	u5720
 10100  1A7F                     u5721:
 10101  1A7F  2A82               	goto	l29
 10102  1A80                     u5720:
 10103  1A80                     l3813:
 10104                           
 10105                           ;lcd.c: 25:         RD2=1;}
 10106  1A80  1508               	bsf	8,2	;volatile
 10107  1A81  2A83               	goto	l30
 10108  1A82                     l29:	
 10109                           ;lcd.c: 26:     else{
 10110                           
 10111                           
 10112                           ;lcd.c: 27:         RD2=0;}
 10113  1A82  1108               	bcf	8,2	;volatile
 10114  1A83                     l30:
 10115                           
 10116                           ;lcd.c: 28:     if(a & 8){
 10117  1A83  1DF3               	btfss	pin@a,3
 10118  1A84  2A86               	goto	u5731
 10119  1A85  2A87               	goto	u5730
 10120  1A86                     u5731:
 10121  1A86  2A89               	goto	l31
 10122  1A87                     u5730:
 10123  1A87                     l3815:
 10124                           
 10125                           ;lcd.c: 29:         RD3=1;}
 10126  1A87  1588               	bsf	8,3	;volatile
 10127  1A88  2A8A               	goto	l32
 10128  1A89                     l31:	
 10129                           ;lcd.c: 30:     else{
 10130                           
 10131                           
 10132                           ;lcd.c: 31:         RD3=0;}
 10133  1A89  1188               	bcf	8,3	;volatile
 10134  1A8A                     l32:
 10135                           
 10136                           ;lcd.c: 32:     if(a & 16){
 10137  1A8A  1E73               	btfss	pin@a,4
 10138  1A8B  2A8D               	goto	u5741
 10139  1A8C  2A8E               	goto	u5740
 10140  1A8D                     u5741:
 10141  1A8D  2A90               	goto	l33
 10142  1A8E                     u5740:
 10143  1A8E                     l3817:
 10144                           
 10145                           ;lcd.c: 33:         RD4=1;}
 10146  1A8E  1608               	bsf	8,4	;volatile
 10147  1A8F  2A91               	goto	l34
 10148  1A90                     l33:	
 10149                           ;lcd.c: 34:     else{
 10150                           
 10151                           
 10152                           ;lcd.c: 35:         RD4=0;}
 10153  1A90  1208               	bcf	8,4	;volatile
 10154  1A91                     l34:
 10155                           
 10156                           ;lcd.c: 36:     if(a & 32){
 10157  1A91  1EF3               	btfss	pin@a,5
 10158  1A92  2A94               	goto	u5751
 10159  1A93  2A95               	goto	u5750
 10160  1A94                     u5751:
 10161  1A94  2A97               	goto	l35
 10162  1A95                     u5750:
 10163  1A95                     l3819:
 10164                           
 10165                           ;lcd.c: 37:         RD5=1;}
 10166  1A95  1688               	bsf	8,5	;volatile
 10167  1A96  2A98               	goto	l36
 10168  1A97                     l35:	
 10169                           ;lcd.c: 38:     else{
 10170                           
 10171                           
 10172                           ;lcd.c: 39:         RD5=0;}
 10173  1A97  1288               	bcf	8,5	;volatile
 10174  1A98                     l36:
 10175                           
 10176                           ;lcd.c: 40:     if(a & 64){
 10177  1A98  1F73               	btfss	pin@a,6
 10178  1A99  2A9B               	goto	u5761
 10179  1A9A  2A9C               	goto	u5760
 10180  1A9B                     u5761:
 10181  1A9B  2A9E               	goto	l37
 10182  1A9C                     u5760:
 10183  1A9C                     l3821:
 10184                           
 10185                           ;lcd.c: 41:         RD6=1;}
 10186  1A9C  1708               	bsf	8,6	;volatile
 10187  1A9D  2A9F               	goto	l38
 10188  1A9E                     l37:	
 10189                           ;lcd.c: 42:     else{
 10190                           
 10191                           
 10192                           ;lcd.c: 43:         RD6=0;}
 10193  1A9E  1308               	bcf	8,6	;volatile
 10194  1A9F                     l38:
 10195                           
 10196                           ;lcd.c: 44:     if(a & 128){
 10197  1A9F  1FF3               	btfss	pin@a,7
 10198  1AA0  2AA2               	goto	u5771
 10199  1AA1  2AA3               	goto	u5770
 10200  1AA2                     u5771:
 10201  1AA2  2AA5               	goto	l39
 10202  1AA3                     u5770:
 10203  1AA3                     l3823:
 10204                           
 10205                           ;lcd.c: 45:         RD7=1;}
 10206  1AA3  1788               	bsf	8,7	;volatile
 10207  1AA4  2AA6               	goto	l41
 10208  1AA5                     l39:	
 10209                           ;lcd.c: 46:     else{
 10210                           
 10211                           
 10212                           ;lcd.c: 47:         RD7=0;}
 10213  1AA5  1388               	bcf	8,7	;volatile
 10214  1AA6                     l41:
 10215  1AA6  0008               	return
 10216  1AA7                     __end_of_pin:
 10217                           
 10218                           	psect	text37
 10219  19FD                     __ptext37:	
 10220 ;; *************** function _isr *****************
 10221 ;; Defined at:
 10222 ;;		line 46 in file "lab2.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		wreg, status,2, status,0, pclath, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10236 ;;      Params:         0       0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0
 10238 ;;      Temps:          3       0       0       0       0
 10239 ;;      Totals:         3       0       0       0       0
 10240 ;;Total ram usage:        3 bytes
 10241 ;; Hardware stack levels used: 1
 10242 ;; Hardware stack levels required when called: 1
 10243 ;; This function calls:
 10244 ;;		_LEER
 10245 ;; This function is called by:
 10246 ;;		Interrupt level 1
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           
 10251                           ;psect for function _isr
 10252  19FD                     _isr:
 10253  19FD                     i1l3685:
 10254                           
 10255                           ;lab2.c: 47:     if (RCIF == 1) {
 10256  19FD  1283               	bcf	3,5	;RP0=0, select bank0
 10257  19FE  1303               	bcf	3,6	;RP1=0, select bank0
 10258  19FF  1E8C               	btfss	12,5	;volatile
 10259  1A00  2A02               	goto	u567_21
 10260  1A01  2A03               	goto	u567_20
 10261  1A02                     u567_21:
 10262  1A02  2A28               	goto	i1l188
 10263  1A03                     u567_20:
 10264  1A03                     i1l3687:
 10265                           
 10266                           ;lab2.c: 48:         RCIF = 0;
 10267  1A03  128C               	bcf	12,5	;volatile
 10268  1A04                     i1l3689:
 10269                           
 10270                           ;lab2.c: 49:         lectura = LEER();
 10271  1A04  160A  158A  20CF  160A  158A  	fcall	_LEER
 10272  1A09  00F0               	movwf	??_isr
 10273  1A0A  0870               	movf	??_isr,w
 10274  1A0B  00FA               	movwf	_lectura
 10275  1A0C                     i1l3691:
 10276                           
 10277                           ;lab2.c: 50:         if (lectura == '+'){
 10278  1A0C  302B               	movlw	43
 10279  1A0D  067A               	xorwf	_lectura,w
 10280  1A0E  1D03               	btfss	3,2
 10281  1A0F  2A11               	goto	u568_21
 10282  1A10  2A12               	goto	u568_20
 10283  1A11                     u568_21:
 10284  1A11  2A1A               	goto	i1l3695
 10285  1A12                     u568_20:
 10286  1A12                     i1l3693:
 10287                           
 10288                           ;lab2.c: 51:             num = num + 1;}
 10289  1A12  1683               	bsf	3,5	;RP0=1, select bank1
 10290  1A13  1303               	bcf	3,6	;RP1=0, select bank1
 10291  1A14  0859               	movf	_num^(0+128),w
 10292  1A15  3E01               	addlw	1
 10293  1A16  00F0               	movwf	??_isr
 10294  1A17  0870               	movf	??_isr,w
 10295  1A18  00D9               	movwf	_num^(0+128)
 10296  1A19  2A28               	goto	i1l188
 10297  1A1A                     i1l3695:
 10298  1A1A  302D               	movlw	45
 10299  1A1B  067A               	xorwf	_lectura,w
 10300  1A1C  1D03               	btfss	3,2
 10301  1A1D  2A1F               	goto	u569_21
 10302  1A1E  2A20               	goto	u569_20
 10303  1A1F                     u569_21:
 10304  1A1F  2A28               	goto	i1l185
 10305  1A20                     u569_20:
 10306  1A20                     i1l3697:
 10307                           
 10308                           ;lab2.c: 53:             num = num - 1;}
 10309  1A20  1683               	bsf	3,5	;RP0=1, select bank1
 10310  1A21  1303               	bcf	3,6	;RP1=0, select bank1
 10311  1A22  0859               	movf	_num^(0+128),w
 10312  1A23  3EFF               	addlw	255
 10313  1A24  00F0               	movwf	??_isr
 10314  1A25  0870               	movf	??_isr,w
 10315  1A26  00D9               	movwf	_num^(0+128)
 10316  1A27  2A28               	goto	i1l188
 10317  1A28                     i1l185:
 10318  1A28                     i1l188:
 10319  1A28  0872               	movf	??_isr+2,w
 10320  1A29  008A               	movwf	10
 10321  1A2A  0E71               	swapf	??_isr+1,w
 10322  1A2B  0083               	movwf	3
 10323  1A2C  0EFE               	swapf	btemp,f
 10324  1A2D  0E7E               	swapf	btemp,w
 10325  1A2E  0009               	retfie
 10326  1A2F                     __end_of_isr:
 10327                           
 10328                           	psect	intentry
 10329  0004                     __pintentry:	
 10330                           ;incstack = 0
 10331                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 10332                           
 10333  0004                     interrupt_function:
 10334  007E                     saved_w	set	btemp
 10335  0004  00FE               	movwf	btemp
 10336  0005  0E03               	swapf	3,w
 10337  0006  00F1               	movwf	??_isr+1
 10338  0007  080A               	movf	10,w
 10339  0008  00F2               	movwf	??_isr+2
 10340  0009  160A  158A  29FD   	ljmp	_isr
 10341                           
 10342                           	psect	text38
 10343  18CF                     __ptext38:	
 10344 ;; *************** function _LEER *****************
 10345 ;; Defined at:
 10346 ;;		line 45 in file "uart.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;		None
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;		None
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      unsigned char 
 10353 ;; Registers used:
 10354 ;;		wreg
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10360 ;;      Params:         0       0       0       0       0
 10361 ;;      Locals:         0       0       0       0       0
 10362 ;;      Temps:          0       0       0       0       0
 10363 ;;      Totals:         0       0       0       0       0
 10364 ;;Total ram usage:        0 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		_isr
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _LEER
 10375  18CF                     _LEER:
 10376  18CF                     i1l3403:	
 10377                           ;incstack = 0
 10378                           ; Regs used in _LEER: [wreg]
 10379                           
 10380  18CF                     i1l245:	
 10381                           ;uart.c: 46:   while(!RCIF);
 10382                           
 10383  18CF  1283               	bcf	3,5	;RP0=0, select bank0
 10384  18D0  1303               	bcf	3,6	;RP1=0, select bank0
 10385  18D1  1E8C               	btfss	12,5	;volatile
 10386  18D2  28D4               	goto	u524_21
 10387  18D3  28D5               	goto	u524_20
 10388  18D4                     u524_21:
 10389  18D4  28CF               	goto	i1l245
 10390  18D5                     u524_20:
 10391  18D5                     i1l3405:
 10392                           
 10393                           ;uart.c: 47:   return RCREG;
 10394  18D5  081A               	movf	26,w	;volatile
 10395  18D6                     i1l248:
 10396  18D6  0008               	return
 10397  18D7                     __end_of_LEER:
 10398  007E                     btemp	set	126	;btemp
 10399  007E                     wtemp0	set	126
 10400                           
 10401                           	psect	config
 10402                           
 10403                           ;Config register CONFIG1 @ 0x2007
 10404                           ;	Oscillator Selection bits
 10405                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10406                           ;	Watchdog Timer Enable bit
 10407                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10408                           ;	Power-up Timer Enable bit
 10409                           ;	PWRTE = OFF, PWRT disabled
 10410                           ;	RE3/MCLR pin function select bit
 10411                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10412                           ;	Code Protection bit
 10413                           ;	CP = OFF, Program memory code protection is disabled
 10414                           ;	Data Code Protection bit
 10415                           ;	CPD = OFF, Data memory code protection is disabled
 10416                           ;	Brown Out Reset Selection bits
 10417                           ;	BOREN = OFF, BOR disabled
 10418                           ;	Internal External Switchover bit
 10419                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10420                           ;	Fail-Safe Clock Monitor Enabled bit
 10421                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10422                           ;	Low Voltage Programming Enable bit
 10423                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10424                           ;	In-Circuit Debugger Mode bit
 10425                           ;	DEBUG = 0x1, unprogrammed default
 10426  2007                     	org	8199
 10427  2007  20D4               	dw	8404
 10428                           
 10429                           ;Config register CONFIG2 @ 0x2008
 10430                           ;	Brown-out Reset Selection bit
 10431                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10432                           ;	Flash Program Memory Self Write Enable bits
 10433                           ;	WRT = OFF, Write protection off
 10434  2008                     	org	8200
 10435  2008  3FFF               	dw	16383
 10436                           
 10437                           	psect	text1_split_1
 10438  001D                     u6840:
 10439  001D                     l4291:
 10440  001D  1683               	bsf	3,5	;RP0=1, select bank1
 10441  001E  1303               	bcf	3,6	;RP1=0, select bank1
 10442  001F  084D               	movf	(sprintf@fval+3)^(0+128),w
 10443  0020  1283               	bcf	3,5	;RP0=0, select bank0
 10444  0021  1303               	bcf	3,6	;RP1=0, select bank0
 10445  0022  00A3               	movwf	___fleq@ff1+3
 10446  0023  1683               	bsf	3,5	;RP0=1, select bank1
 10447  0024  1303               	bcf	3,6	;RP1=0, select bank1
 10448  0025  084C               	movf	(sprintf@fval+2)^(0+128),w
 10449  0026  1283               	bcf	3,5	;RP0=0, select bank0
 10450  0027  1303               	bcf	3,6	;RP1=0, select bank0
 10451  0028  00A2               	movwf	___fleq@ff1+2
 10452  0029  1683               	bsf	3,5	;RP0=1, select bank1
 10453  002A  1303               	bcf	3,6	;RP1=0, select bank1
 10454  002B  084B               	movf	(sprintf@fval+1)^(0+128),w
 10455  002C  1283               	bcf	3,5	;RP0=0, select bank0
 10456  002D  1303               	bcf	3,6	;RP1=0, select bank0
 10457  002E  00A1               	movwf	___fleq@ff1+1
 10458  002F  1683               	bsf	3,5	;RP0=1, select bank1
 10459  0030  1303               	bcf	3,6	;RP1=0, select bank1
 10460  0031  084A               	movf	sprintf@fval^(0+128),w
 10461  0032  1283               	bcf	3,5	;RP0=0, select bank0
 10462  0033  1303               	bcf	3,6	;RP1=0, select bank0
 10463  0034  00A0               	movwf	___fleq@ff1
 10464  0035  3000               	movlw	0
 10465  0036  00A7               	movwf	___fleq@ff2+3
 10466  0037  3000               	movlw	0
 10467  0038  00A6               	movwf	___fleq@ff2+2
 10468  0039  3000               	movlw	0
 10469  003A  00A5               	movwf	___fleq@ff2+1
 10470  003B  3000               	movlw	0
 10471  003C  00A4               	movwf	___fleq@ff2
 10472  003D  160A  158A  2331  120A  118A  	fcall	___fleq
 10473  0042  1803               	btfsc	3,0
 10474  0043  2845               	goto	u6851
 10475  0044  2846               	goto	u6850
 10476  0045                     u6851:
 10477  0045  2928               	goto	l4311
 10478  0046                     u6850:
 10479  0046                     l4293:
 10480  0046  1683               	bsf	3,5	;RP0=1, select bank1
 10481  0047  1303               	bcf	3,6	;RP1=0, select bank1
 10482  0048  084D               	movf	(sprintf@fval+3)^(0+128),w
 10483  0049  1283               	bcf	3,5	;RP0=0, select bank0
 10484  004A  1303               	bcf	3,6	;RP1=0, select bank0
 10485  004B  00DA               	movwf	___fltol@f1+3
 10486  004C  1683               	bsf	3,5	;RP0=1, select bank1
 10487  004D  1303               	bcf	3,6	;RP1=0, select bank1
 10488  004E  084C               	movf	(sprintf@fval+2)^(0+128),w
 10489  004F  1283               	bcf	3,5	;RP0=0, select bank0
 10490  0050  1303               	bcf	3,6	;RP1=0, select bank0
 10491  0051  00D9               	movwf	___fltol@f1+2
 10492  0052  1683               	bsf	3,5	;RP0=1, select bank1
 10493  0053  1303               	bcf	3,6	;RP1=0, select bank1
 10494  0054  084B               	movf	(sprintf@fval+1)^(0+128),w
 10495  0055  1283               	bcf	3,5	;RP0=0, select bank0
 10496  0056  1303               	bcf	3,6	;RP1=0, select bank0
 10497  0057  00D8               	movwf	___fltol@f1+1
 10498  0058  1683               	bsf	3,5	;RP0=1, select bank1
 10499  0059  1303               	bcf	3,6	;RP1=0, select bank1
 10500  005A  084A               	movf	sprintf@fval^(0+128),w
 10501  005B  1283               	bcf	3,5	;RP0=0, select bank0
 10502  005C  1303               	bcf	3,6	;RP1=0, select bank0
 10503  005D  00D7               	movwf	___fltol@f1
 10504  005E  160A  158A  2567  120A  118A  	fcall	___fltol
 10505  0063  1283               	bcf	3,5	;RP0=0, select bank0
 10506  0064  1303               	bcf	3,6	;RP1=0, select bank0
 10507  0065  085A               	movf	?___fltol+3,w
 10508  0066  0459               	iorwf	?___fltol+2,w
 10509  0067  0458               	iorwf	?___fltol+1,w
 10510  0068  0457               	iorwf	?___fltol,w
 10511  0069  1D03               	skipz
 10512  006A  286C               	goto	u6861
 10513  006B  286D               	goto	u6860
 10514  006C                     u6861:
 10515  006C  2928               	goto	l4311
 10516  006D                     u6860:
 10517  006D                     l4295:
 10518  006D  1683               	bsf	3,5	;RP0=1, select bank1
 10519  006E  1303               	bcf	3,6	;RP1=0, select bank1
 10520  006F  0840               	movf	(sprintf@eexp+1)^(0+128),w
 10521  0070  3A80               	xorlw	128
 10522  0071  00FF               	movwf	btemp+1
 10523  0072  3080               	movlw	128
 10524  0073  027F               	subwf	btemp+1,w
 10525  0074  1D03               	skipz
 10526  0075  2878               	goto	u6875
 10527  0076  3002               	movlw	2
 10528  0077  023F               	subwf	sprintf@eexp^(0+128),w
 10529  0078                     u6875:
 10530  0078  1C03               	skipc
 10531  0079  287B               	goto	u6871
 10532  007A  287C               	goto	u6870
 10533  007B                     u6871:
 10534  007B  2928               	goto	l4311
 10535  007C                     u6870:
 10536  007C                     l4297:
 10537                           
 10538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10539  007C  1683               	bsf	3,5	;RP0=1, select bank1
 10540  007D  1303               	bcf	3,6	;RP1=0, select bank1
 10541  007E  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10542  007F  1283               	bcf	3,5	;RP0=0, select bank0
 10543  0080  1303               	bcf	3,6	;RP1=0, select bank0
 10544  0081  00A3               	movwf	___flge@ff1+3
 10545  0082  1683               	bsf	3,5	;RP0=1, select bank1
 10546  0083  1303               	bcf	3,6	;RP1=0, select bank1
 10547  0084  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10548  0085  1283               	bcf	3,5	;RP0=0, select bank0
 10549  0086  1303               	bcf	3,6	;RP1=0, select bank0
 10550  0087  00A2               	movwf	___flge@ff1+2
 10551  0088  1683               	bsf	3,5	;RP0=1, select bank1
 10552  0089  1303               	bcf	3,6	;RP1=0, select bank1
 10553  008A  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10554  008B  1283               	bcf	3,5	;RP0=0, select bank0
 10555  008C  1303               	bcf	3,6	;RP1=0, select bank0
 10556  008D  00A1               	movwf	___flge@ff1+1
 10557  008E  1683               	bsf	3,5	;RP0=1, select bank1
 10558  008F  1303               	bcf	3,6	;RP1=0, select bank1
 10559  0090  0841               	movf	sprintf@tmpval^(0+128),w
 10560  0091  1283               	bcf	3,5	;RP0=0, select bank0
 10561  0092  1303               	bcf	3,6	;RP1=0, select bank0
 10562  0093  00A0               	movwf	___flge@ff1
 10563  0094  3040               	movlw	64
 10564  0095  00A7               	movwf	___flge@ff2+3
 10565  0096  3089               	movlw	137
 10566  0097  00A6               	movwf	___flge@ff2+2
 10567  0098  3070               	movlw	112
 10568  0099  00A5               	movwf	___flge@ff2+1
 10569  009A  305F               	movlw	95
 10570  009B  00A4               	movwf	___flge@ff2
 10571  009C  160A  158A  25E3  120A  118A  	fcall	___flge
 10572  00A1  1803               	btfsc	3,0
 10573  00A2  28A4               	goto	u6881
 10574  00A3  28A5               	goto	u6880
 10575  00A4                     u6881:
 10576  00A4  28AE               	goto	l4301
 10577  00A5                     u6880:
 10578  00A5                     l4299:
 10579                           
 10580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10581  00A5  30F7               	movlw	247
 10582  00A6  1683               	bsf	3,5	;RP0=1, select bank1
 10583  00A7  1303               	bcf	3,6	;RP1=0, select bank1
 10584  00A8  07BF               	addwf	sprintf@eexp^(0+128),f
 10585  00A9  1803               	skipnc
 10586  00AA  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10587  00AB  30FF               	movlw	255
 10588  00AC  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10589                           
 10590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10591  00AD  28B6               	goto	l4303
 10592  00AE                     l4301:
 10593                           
 10594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10595  00AE  30F8               	movlw	248
 10596  00AF  1683               	bsf	3,5	;RP0=1, select bank1
 10597  00B0  1303               	bcf	3,6	;RP1=0, select bank1
 10598  00B1  07BF               	addwf	sprintf@eexp^(0+128),f
 10599  00B2  1803               	skipnc
 10600  00B3  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10601  00B4  30FF               	movlw	255
 10602  00B5  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10603  00B6                     l4303:
 10604                           
 10605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10606  00B6  083F               	movf	sprintf@eexp^(0+128),w
 10607  00B7  120A  158A  249D  120A  118A  	fcall	_scale
 10608  00BC  1283               	bcf	3,5	;RP0=0, select bank0
 10609  00BD  1303               	bcf	3,6	;RP1=0, select bank0
 10610  00BE  0847               	movf	?_scale+3,w
 10611  00BF  1683               	bsf	3,5	;RP0=1, select bank1
 10612  00C0  1303               	bcf	3,6	;RP1=0, select bank1
 10613  00C1  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10614  00C2  1283               	bcf	3,5	;RP0=0, select bank0
 10615  00C3  1303               	bcf	3,6	;RP1=0, select bank0
 10616  00C4  0846               	movf	?_scale+2,w
 10617  00C5  1683               	bsf	3,5	;RP0=1, select bank1
 10618  00C6  1303               	bcf	3,6	;RP1=0, select bank1
 10619  00C7  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10620  00C8  1283               	bcf	3,5	;RP0=0, select bank0
 10621  00C9  1303               	bcf	3,6	;RP1=0, select bank0
 10622  00CA  0845               	movf	?_scale+1,w
 10623  00CB  1683               	bsf	3,5	;RP0=1, select bank1
 10624  00CC  1303               	bcf	3,6	;RP1=0, select bank1
 10625  00CD  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10626  00CE  1283               	bcf	3,5	;RP0=0, select bank0
 10627  00CF  1303               	bcf	3,6	;RP1=0, select bank0
 10628  00D0  0844               	movf	?_scale,w
 10629  00D1  1683               	bsf	3,5	;RP0=1, select bank1
 10630  00D2  1303               	bcf	3,6	;RP1=0, select bank1
 10631  00D3  00C1               	movwf	sprintf@tmpval^(0+128)
 10632  00D4                     l4305:
 10633  00D4  084D               	movf	(sprintf@fval+3)^(0+128),w
 10634  00D5  1283               	bcf	3,5	;RP0=0, select bank0
 10635  00D6  1303               	bcf	3,6	;RP1=0, select bank0
 10636  00D7  00A3               	movwf	__div_to_l_@f1+3
 10637  00D8  1683               	bsf	3,5	;RP0=1, select bank1
 10638  00D9  1303               	bcf	3,6	;RP1=0, select bank1
 10639  00DA  084C               	movf	(sprintf@fval+2)^(0+128),w
 10640  00DB  1283               	bcf	3,5	;RP0=0, select bank0
 10641  00DC  1303               	bcf	3,6	;RP1=0, select bank0
 10642  00DD  00A2               	movwf	__div_to_l_@f1+2
 10643  00DE  1683               	bsf	3,5	;RP0=1, select bank1
 10644  00DF  1303               	bcf	3,6	;RP1=0, select bank1
 10645  00E0  084B               	movf	(sprintf@fval+1)^(0+128),w
 10646  00E1  1283               	bcf	3,5	;RP0=0, select bank0
 10647  00E2  1303               	bcf	3,6	;RP1=0, select bank0
 10648  00E3  00A1               	movwf	__div_to_l_@f1+1
 10649  00E4  1683               	bsf	3,5	;RP0=1, select bank1
 10650  00E5  1303               	bcf	3,6	;RP1=0, select bank1
 10651  00E6  084A               	movf	sprintf@fval^(0+128),w
 10652  00E7  1283               	bcf	3,5	;RP0=0, select bank0
 10653  00E8  1303               	bcf	3,6	;RP1=0, select bank0
 10654  00E9  00A0               	movwf	__div_to_l_@f1
 10655  00EA  1683               	bsf	3,5	;RP0=1, select bank1
 10656  00EB  1303               	bcf	3,6	;RP1=0, select bank1
 10657  00EC  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 10658  00ED  1283               	bcf	3,5	;RP0=0, select bank0
 10659  00EE  1303               	bcf	3,6	;RP1=0, select bank0
 10660  00EF  00A7               	movwf	__div_to_l_@f2+3
 10661  00F0  1683               	bsf	3,5	;RP0=1, select bank1
 10662  00F1  1303               	bcf	3,6	;RP1=0, select bank1
 10663  00F2  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 10664  00F3  1283               	bcf	3,5	;RP0=0, select bank0
 10665  00F4  1303               	bcf	3,6	;RP1=0, select bank0
 10666  00F5  00A6               	movwf	__div_to_l_@f2+2
 10667  00F6  1683               	bsf	3,5	;RP0=1, select bank1
 10668  00F7  1303               	bcf	3,6	;RP1=0, select bank1
 10669  00F8  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 10670  00F9  1283               	bcf	3,5	;RP0=0, select bank0
 10671  00FA  1303               	bcf	3,6	;RP1=0, select bank0
 10672  00FB  00A5               	movwf	__div_to_l_@f2+1
 10673  00FC  1683               	bsf	3,5	;RP0=1, select bank1
 10674  00FD  1303               	bcf	3,6	;RP1=0, select bank1
 10675  00FE  0841               	movf	sprintf@tmpval^(0+128),w
 10676  00FF  1283               	bcf	3,5	;RP0=0, select bank0
 10677  0100  1303               	bcf	3,6	;RP1=0, select bank0
 10678  0101  00A4               	movwf	__div_to_l_@f2
 10679  0102  160A  118A  20C2  120A  118A  	fcall	__div_to_l_
 10680  0107  1283               	bcf	3,5	;RP0=0, select bank0
 10681  0108  1303               	bcf	3,6	;RP1=0, select bank0
 10682  0109  0823               	movf	?__div_to_l_+3,w
 10683  010A  1683               	bsf	3,5	;RP0=1, select bank1
 10684  010B  1303               	bcf	3,6	;RP1=0, select bank1
 10685  010C  00C8               	movwf	(sprintf@val+3)^(0+128)
 10686  010D  1283               	bcf	3,5	;RP0=0, select bank0
 10687  010E  1303               	bcf	3,6	;RP1=0, select bank0
 10688  010F  0822               	movf	?__div_to_l_+2,w
 10689  0110  1683               	bsf	3,5	;RP0=1, select bank1
 10690  0111  1303               	bcf	3,6	;RP1=0, select bank1
 10691  0112  00C7               	movwf	(sprintf@val+2)^(0+128)
 10692  0113  1283               	bcf	3,5	;RP0=0, select bank0
 10693  0114  1303               	bcf	3,6	;RP1=0, select bank0
 10694  0115  0821               	movf	?__div_to_l_+1,w
 10695  0116  1683               	bsf	3,5	;RP0=1, select bank1
 10696  0117  1303               	bcf	3,6	;RP1=0, select bank1
 10697  0118  00C6               	movwf	(sprintf@val+1)^(0+128)
 10698  0119  1283               	bcf	3,5	;RP0=0, select bank0
 10699  011A  1303               	bcf	3,6	;RP1=0, select bank0
 10700  011B  0820               	movf	?__div_to_l_,w
 10701  011C  1683               	bsf	3,5	;RP0=1, select bank1
 10702  011D  1303               	bcf	3,6	;RP1=0, select bank1
 10703  011E  00C5               	movwf	sprintf@val^(0+128)
 10704  011F                     l4309:
 10705                           
 10706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10707  011F  3000               	movlw	0
 10708  0120  00CD               	movwf	(sprintf@fval+3)^(0+128)
 10709  0121  3000               	movlw	0
 10710  0122  00CC               	movwf	(sprintf@fval+2)^(0+128)
 10711  0123  3000               	movlw	0
 10712  0124  00CB               	movwf	(sprintf@fval+1)^(0+128)
 10713  0125  3000               	movlw	0
 10714  0126  00CA               	movwf	sprintf@fval^(0+128)
 10715                           
 10716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10717  0127  298E               	goto	l4317
 10718  0128                     l4311:
 10719                           
 10720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10721  0128  1683               	bsf	3,5	;RP0=1, select bank1
 10722  0129  1303               	bcf	3,6	;RP1=0, select bank1
 10723  012A  084D               	movf	(sprintf@fval+3)^(0+128),w
 10724  012B  1283               	bcf	3,5	;RP0=0, select bank0
 10725  012C  1303               	bcf	3,6	;RP1=0, select bank0
 10726  012D  00DA               	movwf	___fltol@f1+3
 10727  012E  1683               	bsf	3,5	;RP0=1, select bank1
 10728  012F  1303               	bcf	3,6	;RP1=0, select bank1
 10729  0130  084C               	movf	(sprintf@fval+2)^(0+128),w
 10730  0131  1283               	bcf	3,5	;RP0=0, select bank0
 10731  0132  1303               	bcf	3,6	;RP1=0, select bank0
 10732  0133  00D9               	movwf	___fltol@f1+2
 10733  0134  1683               	bsf	3,5	;RP0=1, select bank1
 10734  0135  1303               	bcf	3,6	;RP1=0, select bank1
 10735  0136  084B               	movf	(sprintf@fval+1)^(0+128),w
 10736  0137  1283               	bcf	3,5	;RP0=0, select bank0
 10737  0138  1303               	bcf	3,6	;RP1=0, select bank0
 10738  0139  00D8               	movwf	___fltol@f1+1
 10739  013A  1683               	bsf	3,5	;RP0=1, select bank1
 10740  013B  1303               	bcf	3,6	;RP1=0, select bank1
 10741  013C  084A               	movf	sprintf@fval^(0+128),w
 10742  013D  1283               	bcf	3,5	;RP0=0, select bank0
 10743  013E  1303               	bcf	3,6	;RP1=0, select bank0
 10744  013F  00D7               	movwf	___fltol@f1
 10745  0140  160A  158A  2567  120A  118A  	fcall	___fltol
 10746  0145  1283               	bcf	3,5	;RP0=0, select bank0
 10747  0146  1303               	bcf	3,6	;RP1=0, select bank0
 10748  0147  085A               	movf	?___fltol+3,w
 10749  0148  1683               	bsf	3,5	;RP0=1, select bank1
 10750  0149  1303               	bcf	3,6	;RP1=0, select bank1
 10751  014A  00C8               	movwf	(sprintf@val+3)^(0+128)
 10752  014B  1283               	bcf	3,5	;RP0=0, select bank0
 10753  014C  1303               	bcf	3,6	;RP1=0, select bank0
 10754  014D  0859               	movf	?___fltol+2,w
 10755  014E  1683               	bsf	3,5	;RP0=1, select bank1
 10756  014F  1303               	bcf	3,6	;RP1=0, select bank1
 10757  0150  00C7               	movwf	(sprintf@val+2)^(0+128)
 10758  0151  1283               	bcf	3,5	;RP0=0, select bank0
 10759  0152  1303               	bcf	3,6	;RP1=0, select bank0
 10760  0153  0858               	movf	?___fltol+1,w
 10761  0154  1683               	bsf	3,5	;RP0=1, select bank1
 10762  0155  1303               	bcf	3,6	;RP1=0, select bank1
 10763  0156  00C6               	movwf	(sprintf@val+1)^(0+128)
 10764  0157  1283               	bcf	3,5	;RP0=0, select bank0
 10765  0158  1303               	bcf	3,6	;RP1=0, select bank0
 10766  0159  0857               	movf	?___fltol,w
 10767  015A  1683               	bsf	3,5	;RP0=1, select bank1
 10768  015B  1303               	bcf	3,6	;RP1=0, select bank1
 10769  015C  00C5               	movwf	sprintf@val^(0+128)
 10770  015D                     l4313:
 10771                           
 10772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10773  015D  0848               	movf	(sprintf@val+3)^(0+128),w
 10774  015E  00F6               	movwf	___xxtofl@val+3
 10775  015F  0847               	movf	(sprintf@val+2)^(0+128),w
 10776  0160  00F5               	movwf	___xxtofl@val+2
 10777  0161  0846               	movf	(sprintf@val+1)^(0+128),w
 10778  0162  00F4               	movwf	___xxtofl@val+1
 10779  0163  0845               	movf	sprintf@val^(0+128),w
 10780  0164  00F3               	movwf	___xxtofl@val
 10781  0165  3000               	movlw	0
 10782  0166  160A  158A  2687  120A  118A  	fcall	___xxtofl
 10783  016B  0876               	movf	?___xxtofl+3,w
 10784  016C  1683               	bsf	3,5	;RP0=1, select bank1
 10785  016D  1303               	bcf	3,6	;RP1=0, select bank1
 10786  016E  00A3               	movwf	(___flsub@a+3)^(0+128)
 10787  016F  0875               	movf	?___xxtofl+2,w
 10788  0170  00A2               	movwf	(___flsub@a+2)^(0+128)
 10789  0171  0874               	movf	?___xxtofl+1,w
 10790  0172  00A1               	movwf	(___flsub@a+1)^(0+128)
 10791  0173  0873               	movf	?___xxtofl,w
 10792  0174  00A0               	movwf	___flsub@a^(0+128)
 10793  0175  084D               	movf	(sprintf@fval+3)^(0+128),w
 10794  0176  00A7               	movwf	(___flsub@b+3)^(0+128)
 10795  0177  084C               	movf	(sprintf@fval+2)^(0+128),w
 10796  0178  00A6               	movwf	(___flsub@b+2)^(0+128)
 10797  0179  084B               	movf	(sprintf@fval+1)^(0+128),w
 10798  017A  00A5               	movwf	(___flsub@b+1)^(0+128)
 10799  017B  084A               	movf	sprintf@fval^(0+128),w
 10800  017C  00A4               	movwf	___flsub@b^(0+128)
 10801  017D  120A  158A  2003  120A  118A  	fcall	___flsub
 10802  0182  1683               	bsf	3,5	;RP0=1, select bank1
 10803  0183  1303               	bcf	3,6	;RP1=0, select bank1
 10804  0184  0823               	movf	(?___flsub+3)^(0+128),w
 10805  0185  00CD               	movwf	(sprintf@fval+3)^(0+128)
 10806  0186  0822               	movf	(?___flsub+2)^(0+128),w
 10807  0187  00CC               	movwf	(sprintf@fval+2)^(0+128)
 10808  0188  0821               	movf	(?___flsub+1)^(0+128),w
 10809  0189  00CB               	movwf	(sprintf@fval+1)^(0+128)
 10810  018A  0820               	movf	?___flsub^(0+128),w
 10811  018B  00CA               	movwf	sprintf@fval^(0+128)
 10812  018C                     l4315:
 10813                           
 10814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10815  018C  01BF               	clrf	sprintf@eexp^(0+128)
 10816  018D  01C0               	clrf	(sprintf@eexp+1)^(0+128)
 10817  018E                     l4317:
 10818                           
 10819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10820  018E  01D0               	clrf	sprintf@c^(0+128)
 10821  018F  0AD0               	incf	sprintf@c^(0+128),f
 10822  0190                     l4323:
 10823                           
 10824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10825  0190  0850               	movf	sprintf@c^(0+128),w
 10826  0191  00B3               	movwf	??_sprintf^(0+128)
 10827  0192  3001               	movlw	1
 10828  0193                     u6895:
 10829  0193  1003               	clrc
 10830  0194  0DB3               	rlf	??_sprintf^(0+128),f
 10831  0195  3EFF               	addlw	-1
 10832  0196  1D03               	skipz
 10833  0197  2993               	goto	u6895
 10834  0198  1003               	clrc
 10835  0199  0D33               	rlf	??_sprintf^(0+128),w
 10836  019A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10837  019B  0084               	movwf	4
 10838  019C  160A  118A  200A  120A  118A  	fcall	stringdir
 10839  01A1  00B4               	movwf	(??_sprintf+1)^(0+128)
 10840  01A2  160A  118A  200A  120A  118A  	fcall	stringdir
 10841  01A7  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
 10842  01A8  160A  118A  200A  120A  118A  	fcall	stringdir
 10843  01AD  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
 10844  01AE  160A  118A  200A  120A  118A  	fcall	stringdir
 10845  01B3  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
 10846  01B4  0837               	movf	(??_sprintf+4)^(0+128),w
 10847  01B5  0248               	subwf	(sprintf@val+3)^(0+128),w
 10848  01B6  1D03               	skipz
 10849  01B7  29C2               	goto	u6905
 10850  01B8  0836               	movf	(??_sprintf+3)^(0+128),w
 10851  01B9  0247               	subwf	(sprintf@val+2)^(0+128),w
 10852  01BA  1D03               	skipz
 10853  01BB  29C2               	goto	u6905
 10854  01BC  0835               	movf	(??_sprintf+2)^(0+128),w
 10855  01BD  0246               	subwf	(sprintf@val+1)^(0+128),w
 10856  01BE  1D03               	skipz
 10857  01BF  29C2               	goto	u6905
 10858  01C0  0834               	movf	(??_sprintf+1)^(0+128),w
 10859  01C1  0245               	subwf	sprintf@val^(0+128),w
 10860  01C2                     u6905:
 10861  01C2  1803               	skipnc
 10862  01C3  29C5               	goto	u6901
 10863  01C4  29C6               	goto	u6900
 10864  01C5                     u6901:
 10865  01C5  29C7               	goto	l4327
 10866  01C6                     u6900:
 10867  01C6  29D1               	goto	l4329
 10868  01C7                     l4327:
 10869  01C7  3001               	movlw	1
 10870  01C8  00B3               	movwf	??_sprintf^(0+128)
 10871  01C9  0833               	movf	??_sprintf^(0+128),w
 10872  01CA  07D0               	addwf	sprintf@c^(0+128),f
 10873  01CB  300A               	movlw	10
 10874  01CC  0650               	xorwf	sprintf@c^(0+128),w
 10875  01CD  1D03               	btfss	3,2
 10876  01CE  29D0               	goto	u6911
 10877  01CF  29D1               	goto	u6910
 10878  01D0                     u6911:
 10879  01D0  2990               	goto	l4323
 10880  01D1                     u6910:
 10881  01D1                     l4329:
 10882                           
 10883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
 10884  01D1  3003               	movlw	3
 10885  01D2  053D               	andwf	sprintf@flag^(0+128),w
 10886  01D3  00B3               	movwf	??_sprintf^(0+128)
 10887  01D4  3000               	movlw	0
 10888  01D5  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10889  01D6  00B4               	movwf	(??_sprintf+1)^(0+128)
 10890  01D7  0833               	movf	??_sprintf^(0+128),w
 10891  01D8  0434               	iorwf	(??_sprintf^(0+128)+1),w
 10892  01D9  1903               	btfsc	3,2
 10893  01DA  29DC               	goto	u6921
 10894  01DB  29DD               	goto	u6920
 10895  01DC                     u6921:
 10896  01DC  2A8F               	goto	l404
 10897  01DD                     u6920:
 10898  01DD                     l4331:
 10899                           
 10900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10901  01DD  302D               	movlw	45
 10902  01DE  00B3               	movwf	??_sprintf^(0+128)
 10903  01DF  0849               	movf	sprintf@sp^(0+128),w
 10904  01E0  0084               	movwf	4
 10905  01E1  0833               	movf	??_sprintf^(0+128),w
 10906  01E2  1383               	bcf	3,7	;select IRP bank0
 10907  01E3  0080               	movwf	0
 10908  01E4                     l4333:
 10909  01E4  3001               	movlw	1
 10910  01E5  00B3               	movwf	??_sprintf^(0+128)
 10911  01E6  0833               	movf	??_sprintf^(0+128),w
 10912  01E7  07C9               	addwf	sprintf@sp^(0+128),f
 10913  01E8  2A8F               	goto	l404
 10914  01E9                     l4335:
 10915                           
 10916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10917  01E9  0850               	movf	sprintf@c^(0+128),w
 10918  01EA  00B3               	movwf	??_sprintf^(0+128)
 10919  01EB  3001               	movlw	1
 10920  01EC                     u6935:
 10921  01EC  1003               	clrc
 10922  01ED  0DB3               	rlf	??_sprintf^(0+128),f
 10923  01EE  3EFF               	addlw	-1
 10924  01EF  1D03               	skipz
 10925  01F0  29EC               	goto	u6935
 10926  01F1  1003               	clrc
 10927  01F2  0D33               	rlf	??_sprintf^(0+128),w
 10928  01F3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10929  01F4  0084               	movwf	4
 10930  01F5  160A  118A  200A  120A  118A  	fcall	stringdir
 10931  01FA  1283               	bcf	3,5	;RP0=0, select bank0
 10932  01FB  1303               	bcf	3,6	;RP1=0, select bank0
 10933  01FC  00A0               	movwf	___lldiv@divisor
 10934  01FD  160A  118A  200A  120A  118A  	fcall	stringdir
 10935  0202  00A1               	movwf	___lldiv@divisor+1
 10936  0203  160A  118A  200A  120A  118A  	fcall	stringdir
 10937  0208  00A2               	movwf	___lldiv@divisor+2
 10938  0209  160A  118A  200A  120A  118A  	fcall	stringdir
 10939  020E  00A3               	movwf	___lldiv@divisor+3
 10940  020F  1683               	bsf	3,5	;RP0=1, select bank1
 10941  0210  1303               	bcf	3,6	;RP1=0, select bank1
 10942  0211  0848               	movf	(sprintf@val+3)^(0+128),w
 10943  0212  1283               	bcf	3,5	;RP0=0, select bank0
 10944  0213  1303               	bcf	3,6	;RP1=0, select bank0
 10945  0214  00A7               	movwf	___lldiv@dividend+3
 10946  0215  1683               	bsf	3,5	;RP0=1, select bank1
 10947  0216  1303               	bcf	3,6	;RP1=0, select bank1
 10948  0217  0847               	movf	(sprintf@val+2)^(0+128),w
 10949  0218  1283               	bcf	3,5	;RP0=0, select bank0
 10950  0219  1303               	bcf	3,6	;RP1=0, select bank0
 10951  021A  00A6               	movwf	___lldiv@dividend+2
 10952  021B  1683               	bsf	3,5	;RP0=1, select bank1
 10953  021C  1303               	bcf	3,6	;RP1=0, select bank1
 10954  021D  0846               	movf	(sprintf@val+1)^(0+128),w
 10955  021E  1283               	bcf	3,5	;RP0=0, select bank0
 10956  021F  1303               	bcf	3,6	;RP1=0, select bank0
 10957  0220  00A5               	movwf	___lldiv@dividend+1
 10958  0221  1683               	bsf	3,5	;RP0=1, select bank1
 10959  0222  1303               	bcf	3,6	;RP1=0, select bank1
 10960  0223  0845               	movf	sprintf@val^(0+128),w
 10961  0224  1283               	bcf	3,5	;RP0=0, select bank0
 10962  0225  1303               	bcf	3,6	;RP1=0, select bank0
 10963  0226  00A4               	movwf	___lldiv@dividend
 10964  0227  160A  158A  2496  120A  118A  	fcall	___lldiv
 10965  022C  1283               	bcf	3,5	;RP0=0, select bank0
 10966  022D  1303               	bcf	3,6	;RP1=0, select bank0
 10967  022E  0823               	movf	?___lldiv+3,w
 10968  022F  1683               	bsf	3,5	;RP0=1, select bank1
 10969  0230  1303               	bcf	3,6	;RP1=0, select bank1
 10970  0231  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 10971  0232  1283               	bcf	3,5	;RP0=0, select bank0
 10972  0233  1303               	bcf	3,6	;RP1=0, select bank0
 10973  0234  0822               	movf	?___lldiv+2,w
 10974  0235  1683               	bsf	3,5	;RP0=1, select bank1
 10975  0236  1303               	bcf	3,6	;RP1=0, select bank1
 10976  0237  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 10977  0238  1283               	bcf	3,5	;RP0=0, select bank0
 10978  0239  1303               	bcf	3,6	;RP1=0, select bank0
 10979  023A  0821               	movf	?___lldiv+1,w
 10980  023B  1683               	bsf	3,5	;RP0=1, select bank1
 10981  023C  1303               	bcf	3,6	;RP1=0, select bank1
 10982  023D  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 10983  023E  1283               	bcf	3,5	;RP0=0, select bank0
 10984  023F  1303               	bcf	3,6	;RP1=0, select bank0
 10985  0240  0820               	movf	?___lldiv,w
 10986  0241  1683               	bsf	3,5	;RP0=1, select bank1
 10987  0242  1303               	bcf	3,6	;RP1=0, select bank1
 10988  0243  00C1               	movwf	sprintf@tmpval^(0+128)
 10989  0244                     l4337:
 10990                           
 10991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10992  0244  3000               	movlw	0
 10993  0245  1283               	bcf	3,5	;RP0=0, select bank0
 10994  0246  1303               	bcf	3,6	;RP1=0, select bank0
 10995  0247  00AB               	movwf	___llmod@divisor+3
 10996  0248  3000               	movlw	0
 10997  0249  00AA               	movwf	___llmod@divisor+2
 10998  024A  3000               	movlw	0
 10999  024B  00A9               	movwf	___llmod@divisor+1
 11000  024C  300A               	movlw	10
 11001  024D  00A8               	movwf	___llmod@divisor
 11002  024E  1683               	bsf	3,5	;RP0=1, select bank1
 11003  024F  1303               	bcf	3,6	;RP1=0, select bank1
 11004  0250  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 11005  0251  1283               	bcf	3,5	;RP0=0, select bank0
 11006  0252  1303               	bcf	3,6	;RP1=0, select bank0
 11007  0253  00AF               	movwf	___llmod@dividend+3
 11008  0254  1683               	bsf	3,5	;RP0=1, select bank1
 11009  0255  1303               	bcf	3,6	;RP1=0, select bank1
 11010  0256  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 11011  0257  1283               	bcf	3,5	;RP0=0, select bank0
 11012  0258  1303               	bcf	3,6	;RP1=0, select bank0
 11013  0259  00AE               	movwf	___llmod@dividend+2
 11014  025A  1683               	bsf	3,5	;RP0=1, select bank1
 11015  025B  1303               	bcf	3,6	;RP1=0, select bank1
 11016  025C  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 11017  025D  1283               	bcf	3,5	;RP0=0, select bank0
 11018  025E  1303               	bcf	3,6	;RP1=0, select bank0
 11019  025F  00AD               	movwf	___llmod@dividend+1
 11020  0260  1683               	bsf	3,5	;RP0=1, select bank1
 11021  0261  1303               	bcf	3,6	;RP1=0, select bank1
 11022  0262  0841               	movf	sprintf@tmpval^(0+128),w
 11023  0263  1283               	bcf	3,5	;RP0=0, select bank0
 11024  0264  1303               	bcf	3,6	;RP1=0, select bank0
 11025  0265  00AC               	movwf	___llmod@dividend
 11026  0266  160A  158A  2381  120A  118A  	fcall	___llmod
 11027  026B  1283               	bcf	3,5	;RP0=0, select bank0
 11028  026C  1303               	bcf	3,6	;RP1=0, select bank0
 11029  026D  082B               	movf	?___llmod+3,w
 11030  026E  1683               	bsf	3,5	;RP0=1, select bank1
 11031  026F  1303               	bcf	3,6	;RP1=0, select bank1
 11032  0270  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11033  0271  1283               	bcf	3,5	;RP0=0, select bank0
 11034  0272  1303               	bcf	3,6	;RP1=0, select bank0
 11035  0273  082A               	movf	?___llmod+2,w
 11036  0274  1683               	bsf	3,5	;RP0=1, select bank1
 11037  0275  1303               	bcf	3,6	;RP1=0, select bank1
 11038  0276  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11039  0277  1283               	bcf	3,5	;RP0=0, select bank0
 11040  0278  1303               	bcf	3,6	;RP1=0, select bank0
 11041  0279  0829               	movf	?___llmod+1,w
 11042  027A  1683               	bsf	3,5	;RP0=1, select bank1
 11043  027B  1303               	bcf	3,6	;RP1=0, select bank1
 11044  027C  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11045  027D  1283               	bcf	3,5	;RP0=0, select bank0
 11046  027E  1303               	bcf	3,6	;RP1=0, select bank0
 11047  027F  0828               	movf	?___llmod,w
 11048  0280  1683               	bsf	3,5	;RP0=1, select bank1
 11049  0281  1303               	bcf	3,6	;RP1=0, select bank1
 11050  0282  00C1               	movwf	sprintf@tmpval^(0+128)
 11051  0283                     l4339:
 11052                           
 11053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11054  0283  0841               	movf	sprintf@tmpval^(0+128),w
 11055  0284  3E30               	addlw	48
 11056  0285  00B3               	movwf	??_sprintf^(0+128)
 11057  0286  0849               	movf	sprintf@sp^(0+128),w
 11058  0287  0084               	movwf	4
 11059  0288  0833               	movf	??_sprintf^(0+128),w
 11060  0289  1383               	bcf	3,7	;select IRP bank0
 11061  028A  0080               	movwf	0
 11062  028B  3001               	movlw	1
 11063  028C  00B3               	movwf	??_sprintf^(0+128)
 11064  028D  0833               	movf	??_sprintf^(0+128),w
 11065  028E  07C9               	addwf	sprintf@sp^(0+128),f
 11066  028F                     l404:	
 11067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
 11068                           
 11069                           
 11070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11071  028F  3001               	movlw	1
 11072  0290  02D0               	subwf	sprintf@c^(0+128),f
 11073  0291  0A50               	incf	sprintf@c^(0+128),w
 11074  0292  1D03               	btfss	3,2
 11075  0293  2A95               	goto	u6941
 11076  0294  2A96               	goto	u6940
 11077  0295                     u6941:
 11078  0295  29E9               	goto	l4335
 11079  0296                     u6940:
 11080  0296  2AAA               	goto	l4347
 11081  0297                     l4341:
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11084  0297  3030               	movlw	48
 11085  0298  1683               	bsf	3,5	;RP0=1, select bank1
 11086  0299  1303               	bcf	3,6	;RP1=0, select bank1
 11087  029A  00B3               	movwf	??_sprintf^(0+128)
 11088  029B  0849               	movf	sprintf@sp^(0+128),w
 11089  029C  0084               	movwf	4
 11090  029D  0833               	movf	??_sprintf^(0+128),w
 11091  029E  1383               	bcf	3,7	;select IRP bank0
 11092  029F  0080               	movwf	0
 11093  02A0                     l4343:
 11094  02A0  3001               	movlw	1
 11095  02A1  00B3               	movwf	??_sprintf^(0+128)
 11096  02A2  0833               	movf	??_sprintf^(0+128),w
 11097  02A3  07C9               	addwf	sprintf@sp^(0+128),f
 11098  02A4                     l4345:
 11099                           
 11100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11101  02A4  30FF               	movlw	255
 11102  02A5  07BF               	addwf	sprintf@eexp^(0+128),f
 11103  02A6  1803               	skipnc
 11104  02A7  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 11105  02A8  30FF               	movlw	255
 11106  02A9  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 11107  02AA                     l4347:
 11108                           
 11109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11110  02AA  0840               	movf	(sprintf@eexp+1)^(0+128),w
 11111  02AB  3A80               	xorlw	128
 11112  02AC  00FF               	movwf	btemp+1
 11113  02AD  3080               	movlw	128
 11114  02AE  027F               	subwf	btemp+1,w
 11115  02AF  1D03               	skipz
 11116  02B0  2AB3               	goto	u6955
 11117  02B1  3001               	movlw	1
 11118  02B2  023F               	subwf	sprintf@eexp^(0+128),w
 11119  02B3                     u6955:
 11120  02B3  1803               	skipnc
 11121  02B4  2AB6               	goto	u6951
 11122  02B5  2AB7               	goto	u6950
 11123  02B6                     u6951:
 11124  02B6  2A97               	goto	l4341
 11125  02B7                     u6950:
 11126  02B7                     l4349:
 11127                           
 11128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11129  02B7  1683               	bsf	3,5	;RP0=1, select bank1
 11130  02B8  1303               	bcf	3,6	;RP1=0, select bank1
 11131  02B9  084F               	movf	(sprintf@prec+1)^(0+128),w
 11132  02BA  3A80               	xorlw	128
 11133  02BB  00FF               	movwf	btemp+1
 11134  02BC  3080               	movlw	128
 11135  02BD  027F               	subwf	btemp+1,w
 11136  02BE  1D03               	skipz
 11137  02BF  2AC2               	goto	u6965
 11138  02C0  3009               	movlw	9
 11139  02C1  024E               	subwf	sprintf@prec^(0+128),w
 11140  02C2                     u6965:
 11141  02C2  1C03               	skipc
 11142  02C3  2AC5               	goto	u6961
 11143  02C4  2AC6               	goto	u6960
 11144  02C5                     u6961:
 11145  02C5  2ACD               	goto	l4353
 11146  02C6                     u6960:
 11147  02C6                     l4351:
 11148                           
 11149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11150  02C6  3008               	movlw	8
 11151  02C7  1683               	bsf	3,5	;RP0=1, select bank1
 11152  02C8  1303               	bcf	3,6	;RP1=0, select bank1
 11153  02C9  00B3               	movwf	??_sprintf^(0+128)
 11154  02CA  0833               	movf	??_sprintf^(0+128),w
 11155  02CB  00D0               	movwf	sprintf@c^(0+128)
 11156  02CC  2AD3               	goto	l411
 11157  02CD                     l4353:
 11158                           
 11159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11160  02CD  1683               	bsf	3,5	;RP0=1, select bank1
 11161  02CE  1303               	bcf	3,6	;RP1=0, select bank1
 11162  02CF  084E               	movf	sprintf@prec^(0+128),w
 11163  02D0  00B3               	movwf	??_sprintf^(0+128)
 11164  02D1  0833               	movf	??_sprintf^(0+128),w
 11165  02D2  00D0               	movwf	sprintf@c^(0+128)
 11166  02D3                     l411:
 11167                           
 11168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11169  02D3  0850               	movf	sprintf@c^(0+128),w
 11170  02D4  00B3               	movwf	??_sprintf^(0+128)
 11171  02D5  01B4               	clrf	(??_sprintf^(0+128)+1)
 11172  02D6  0833               	movf	??_sprintf^(0+128),w
 11173  02D7  02CE               	subwf	sprintf@prec^(0+128),f
 11174  02D8  0834               	movf	(??_sprintf+1)^(0+128),w
 11175  02D9  1C03               	skipc
 11176  02DA  03CF               	decf	(sprintf@prec+1)^(0+128),f
 11177  02DB  02CF               	subwf	(sprintf@prec+1)^(0+128),f
 11178  02DC                     l4355:
 11179                           
 11180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11181  02DC  0850               	movf	sprintf@c^(0+128),w
 11182  02DD  1903               	btfsc	3,2
 11183  02DE  2AE0               	goto	u6971
 11184  02DF  2AE1               	goto	u6970
 11185  02E0                     u6971:
 11186  02E0  2AEC               	goto	l4361
 11187  02E1                     u6970:
 11188  02E1                     l4357:
 11189                           
 11190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11191  02E1  302E               	movlw	46
 11192  02E2  00B3               	movwf	??_sprintf^(0+128)
 11193  02E3  0849               	movf	sprintf@sp^(0+128),w
 11194  02E4  0084               	movwf	4
 11195  02E5  0833               	movf	??_sprintf^(0+128),w
 11196  02E6  1383               	bcf	3,7	;select IRP bank0
 11197  02E7  0080               	movwf	0
 11198  02E8                     l4359:
 11199  02E8  3001               	movlw	1
 11200  02E9  00B3               	movwf	??_sprintf^(0+128)
 11201  02EA  0833               	movf	??_sprintf^(0+128),w
 11202  02EB  07C9               	addwf	sprintf@sp^(0+128),f
 11203  02EC                     l4361:
 11204                           
 11205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11206  02EC  0850               	movf	sprintf@c^(0+128),w
 11207  02ED  120A  158A  249D  120A  118A  	fcall	_scale
 11208  02F2  1283               	bcf	3,5	;RP0=0, select bank0
 11209  02F3  1303               	bcf	3,6	;RP1=0, select bank0
 11210  02F4  0847               	movf	?_scale+3,w
 11211  02F5  1683               	bsf	3,5	;RP0=1, select bank1
 11212  02F6  1303               	bcf	3,6	;RP1=0, select bank1
 11213  02F7  00BB               	movwf	(_sprintf$1270+3)^(0+128)
 11214  02F8  1283               	bcf	3,5	;RP0=0, select bank0
 11215  02F9  1303               	bcf	3,6	;RP1=0, select bank0
 11216  02FA  0846               	movf	?_scale+2,w
 11217  02FB  1683               	bsf	3,5	;RP0=1, select bank1
 11218  02FC  1303               	bcf	3,6	;RP1=0, select bank1
 11219  02FD  00BA               	movwf	(_sprintf$1270+2)^(0+128)
 11220  02FE  1283               	bcf	3,5	;RP0=0, select bank0
 11221  02FF  1303               	bcf	3,6	;RP1=0, select bank0
 11222  0300  0845               	movf	?_scale+1,w
 11223  0301  1683               	bsf	3,5	;RP0=1, select bank1
 11224  0302  1303               	bcf	3,6	;RP1=0, select bank1
 11225  0303  00B9               	movwf	(_sprintf$1270+1)^(0+128)
 11226  0304  1283               	bcf	3,5	;RP0=0, select bank0
 11227  0305  1303               	bcf	3,6	;RP1=0, select bank0
 11228  0306  0844               	movf	?_scale,w
 11229  0307  1683               	bsf	3,5	;RP0=1, select bank1
 11230  0308  1303               	bcf	3,6	;RP1=0, select bank1
 11231  0309  00B8               	movwf	_sprintf$1270^(0+128)
 11232  030A                     l4363:
 11233                           
 11234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11235  030A  083B               	movf	(_sprintf$1270+3)^(0+128),w
 11236  030B  1283               	bcf	3,5	;RP0=0, select bank0
 11237  030C  1303               	bcf	3,6	;RP1=0, select bank0
 11238  030D  00B1               	movwf	___flmul@a+3
 11239  030E  1683               	bsf	3,5	;RP0=1, select bank1
 11240  030F  1303               	bcf	3,6	;RP1=0, select bank1
 11241  0310  083A               	movf	(_sprintf$1270+2)^(0+128),w
 11242  0311  1283               	bcf	3,5	;RP0=0, select bank0
 11243  0312  1303               	bcf	3,6	;RP1=0, select bank0
 11244  0313  00B0               	movwf	___flmul@a+2
 11245  0314  1683               	bsf	3,5	;RP0=1, select bank1
 11246  0315  1303               	bcf	3,6	;RP1=0, select bank1
 11247  0316  0839               	movf	(_sprintf$1270+1)^(0+128),w
 11248  0317  1283               	bcf	3,5	;RP0=0, select bank0
 11249  0318  1303               	bcf	3,6	;RP1=0, select bank0
 11250  0319  00AF               	movwf	___flmul@a+1
 11251  031A  1683               	bsf	3,5	;RP0=1, select bank1
 11252  031B  1303               	bcf	3,6	;RP1=0, select bank1
 11253  031C  0838               	movf	_sprintf$1270^(0+128),w
 11254  031D  1283               	bcf	3,5	;RP0=0, select bank0
 11255  031E  1303               	bcf	3,6	;RP1=0, select bank0
 11256  031F  00AE               	movwf	___flmul@a
 11257  0320  1683               	bsf	3,5	;RP0=1, select bank1
 11258  0321  1303               	bcf	3,6	;RP1=0, select bank1
 11259  0322  084D               	movf	(sprintf@fval+3)^(0+128),w
 11260  0323  1283               	bcf	3,5	;RP0=0, select bank0
 11261  0324  1303               	bcf	3,6	;RP1=0, select bank0
 11262  0325  00AD               	movwf	___flmul@b+3
 11263  0326  1683               	bsf	3,5	;RP0=1, select bank1
 11264  0327  1303               	bcf	3,6	;RP1=0, select bank1
 11265  0328  084C               	movf	(sprintf@fval+2)^(0+128),w
 11266  0329  1283               	bcf	3,5	;RP0=0, select bank0
 11267  032A  1303               	bcf	3,6	;RP1=0, select bank0
 11268  032B  00AC               	movwf	___flmul@b+2
 11269  032C  1683               	bsf	3,5	;RP0=1, select bank1
 11270  032D  1303               	bcf	3,6	;RP1=0, select bank1
 11271  032E  084B               	movf	(sprintf@fval+1)^(0+128),w
 11272  032F  1283               	bcf	3,5	;RP0=0, select bank0
 11273  0330  1303               	bcf	3,6	;RP1=0, select bank0
 11274  0331  00AB               	movwf	___flmul@b+1
 11275  0332  1683               	bsf	3,5	;RP0=1, select bank1
 11276  0333  1303               	bcf	3,6	;RP1=0, select bank1
 11277  0334  084A               	movf	sprintf@fval^(0+128),w
 11278  0335  1283               	bcf	3,5	;RP0=0, select bank0
 11279  0336  1303               	bcf	3,6	;RP1=0, select bank0
 11280  0337  00AA               	movwf	___flmul@b
 11281  0338  120A  158A  213C  120A  118A  	fcall	___flmul
 11282  033D  1283               	bcf	3,5	;RP0=0, select bank0
 11283  033E  1303               	bcf	3,6	;RP1=0, select bank0
 11284  033F  082D               	movf	?___flmul+3,w
 11285  0340  00DA               	movwf	___fltol@f1+3
 11286  0341  082C               	movf	?___flmul+2,w
 11287  0342  00D9               	movwf	___fltol@f1+2
 11288  0343  082B               	movf	?___flmul+1,w
 11289  0344  00D8               	movwf	___fltol@f1+1
 11290  0345  082A               	movf	?___flmul,w
 11291  0346  00D7               	movwf	___fltol@f1
 11292  0347  160A  158A  2567  120A  118A  	fcall	___fltol
 11293  034C  1283               	bcf	3,5	;RP0=0, select bank0
 11294  034D  1303               	bcf	3,6	;RP1=0, select bank0
 11295  034E  085A               	movf	?___fltol+3,w
 11296  034F  1683               	bsf	3,5	;RP0=1, select bank1
 11297  0350  1303               	bcf	3,6	;RP1=0, select bank1
 11298  0351  00C8               	movwf	(sprintf@val+3)^(0+128)
 11299  0352  1283               	bcf	3,5	;RP0=0, select bank0
 11300  0353  1303               	bcf	3,6	;RP1=0, select bank0
 11301  0354  0859               	movf	?___fltol+2,w
 11302  0355  1683               	bsf	3,5	;RP0=1, select bank1
 11303  0356  1303               	bcf	3,6	;RP1=0, select bank1
 11304  0357  00C7               	movwf	(sprintf@val+2)^(0+128)
 11305  0358  1283               	bcf	3,5	;RP0=0, select bank0
 11306  0359  1303               	bcf	3,6	;RP1=0, select bank0
 11307  035A  0858               	movf	?___fltol+1,w
 11308  035B  1683               	bsf	3,5	;RP0=1, select bank1
 11309  035C  1303               	bcf	3,6	;RP1=0, select bank1
 11310  035D  00C6               	movwf	(sprintf@val+1)^(0+128)
 11311  035E  1283               	bcf	3,5	;RP0=0, select bank0
 11312  035F  1303               	bcf	3,6	;RP1=0, select bank0
 11313  0360  0857               	movf	?___fltol,w
 11314  0361  1683               	bsf	3,5	;RP0=1, select bank1
 11315  0362  1303               	bcf	3,6	;RP1=0, select bank1
 11316  0363  00C5               	movwf	sprintf@val^(0+128)
 11317                           
 11318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11319  0364  2C66               	goto	l4373
 11320  0365                     l4365:
 11321                           
 11322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11323  0365  0850               	movf	sprintf@c^(0+128),w
 11324  0366  00B3               	movwf	??_sprintf^(0+128)
 11325  0367  3001               	movlw	1
 11326  0368                     u6985:
 11327  0368  1003               	clrc
 11328  0369  0DB3               	rlf	??_sprintf^(0+128),f
 11329  036A  3EFF               	addlw	-1
 11330  036B  1D03               	skipz
 11331  036C  2B68               	goto	u6985
 11332  036D  1003               	clrc
 11333  036E  0D33               	rlf	??_sprintf^(0+128),w
 11334  036F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11335  0370  0084               	movwf	4
 11336  0371  160A  118A  200A  120A  118A  	fcall	stringdir
 11337  0376  1283               	bcf	3,5	;RP0=0, select bank0
 11338  0377  1303               	bcf	3,6	;RP1=0, select bank0
 11339  0378  00A0               	movwf	___lldiv@divisor
 11340  0379  160A  118A  200A  120A  118A  	fcall	stringdir
 11341  037E  00A1               	movwf	___lldiv@divisor+1
 11342  037F  160A  118A  200A  120A  118A  	fcall	stringdir
 11343  0384  00A2               	movwf	___lldiv@divisor+2
 11344  0385  160A  118A  200A  120A  118A  	fcall	stringdir
 11345  038A  00A3               	movwf	___lldiv@divisor+3
 11346  038B  1683               	bsf	3,5	;RP0=1, select bank1
 11347  038C  1303               	bcf	3,6	;RP1=0, select bank1
 11348  038D  0848               	movf	(sprintf@val+3)^(0+128),w
 11349  038E  1283               	bcf	3,5	;RP0=0, select bank0
 11350  038F  1303               	bcf	3,6	;RP1=0, select bank0
 11351  0390  00A7               	movwf	___lldiv@dividend+3
 11352  0391  1683               	bsf	3,5	;RP0=1, select bank1
 11353  0392  1303               	bcf	3,6	;RP1=0, select bank1
 11354  0393  0847               	movf	(sprintf@val+2)^(0+128),w
 11355  0394  1283               	bcf	3,5	;RP0=0, select bank0
 11356  0395  1303               	bcf	3,6	;RP1=0, select bank0
 11357  0396  00A6               	movwf	___lldiv@dividend+2
 11358  0397  1683               	bsf	3,5	;RP0=1, select bank1
 11359  0398  1303               	bcf	3,6	;RP1=0, select bank1
 11360  0399  0846               	movf	(sprintf@val+1)^(0+128),w
 11361  039A  1283               	bcf	3,5	;RP0=0, select bank0
 11362  039B  1303               	bcf	3,6	;RP1=0, select bank0
 11363  039C  00A5               	movwf	___lldiv@dividend+1
 11364  039D  1683               	bsf	3,5	;RP0=1, select bank1
 11365  039E  1303               	bcf	3,6	;RP1=0, select bank1
 11366  039F  0845               	movf	sprintf@val^(0+128),w
 11367  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 11368  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 11369  03A2  00A4               	movwf	___lldiv@dividend
 11370  03A3  160A  158A  2496  120A  118A  	fcall	___lldiv
 11371  03A8  1283               	bcf	3,5	;RP0=0, select bank0
 11372  03A9  1303               	bcf	3,6	;RP1=0, select bank0
 11373  03AA  0823               	movf	?___lldiv+3,w
 11374  03AB  1683               	bsf	3,5	;RP0=1, select bank1
 11375  03AC  1303               	bcf	3,6	;RP1=0, select bank1
 11376  03AD  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11377  03AE  1283               	bcf	3,5	;RP0=0, select bank0
 11378  03AF  1303               	bcf	3,6	;RP1=0, select bank0
 11379  03B0  0822               	movf	?___lldiv+2,w
 11380  03B1  1683               	bsf	3,5	;RP0=1, select bank1
 11381  03B2  1303               	bcf	3,6	;RP1=0, select bank1
 11382  03B3  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11383  03B4  1283               	bcf	3,5	;RP0=0, select bank0
 11384  03B5  1303               	bcf	3,6	;RP1=0, select bank0
 11385  03B6  0821               	movf	?___lldiv+1,w
 11386  03B7  1683               	bsf	3,5	;RP0=1, select bank1
 11387  03B8  1303               	bcf	3,6	;RP1=0, select bank1
 11388  03B9  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11389  03BA  1283               	bcf	3,5	;RP0=0, select bank0
 11390  03BB  1303               	bcf	3,6	;RP1=0, select bank0
 11391  03BC  0820               	movf	?___lldiv,w
 11392  03BD  1683               	bsf	3,5	;RP0=1, select bank1
 11393  03BE  1303               	bcf	3,6	;RP1=0, select bank1
 11394  03BF  00C1               	movwf	sprintf@tmpval^(0+128)
 11395  03C0                     l4367:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11398  03C0  3000               	movlw	0
 11399  03C1  1283               	bcf	3,5	;RP0=0, select bank0
 11400  03C2  1303               	bcf	3,6	;RP1=0, select bank0
 11401  03C3  00AB               	movwf	___llmod@divisor+3
 11402  03C4  3000               	movlw	0
 11403  03C5  00AA               	movwf	___llmod@divisor+2
 11404  03C6  3000               	movlw	0
 11405  03C7  00A9               	movwf	___llmod@divisor+1
 11406  03C8  300A               	movlw	10
 11407  03C9  00A8               	movwf	___llmod@divisor
 11408  03CA  1683               	bsf	3,5	;RP0=1, select bank1
 11409  03CB  1303               	bcf	3,6	;RP1=0, select bank1
 11410  03CC  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 11411  03CD  1283               	bcf	3,5	;RP0=0, select bank0
 11412  03CE  1303               	bcf	3,6	;RP1=0, select bank0
 11413  03CF  00AF               	movwf	___llmod@dividend+3
 11414  03D0  1683               	bsf	3,5	;RP0=1, select bank1
 11415  03D1  1303               	bcf	3,6	;RP1=0, select bank1
 11416  03D2  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 11417  03D3  1283               	bcf	3,5	;RP0=0, select bank0
 11418  03D4  1303               	bcf	3,6	;RP1=0, select bank0
 11419  03D5  00AE               	movwf	___llmod@dividend+2
 11420  03D6  1683               	bsf	3,5	;RP0=1, select bank1
 11421  03D7  1303               	bcf	3,6	;RP1=0, select bank1
 11422  03D8  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 11423  03D9  1283               	bcf	3,5	;RP0=0, select bank0
 11424  03DA  1303               	bcf	3,6	;RP1=0, select bank0
 11425  03DB  00AD               	movwf	___llmod@dividend+1
 11426  03DC  1683               	bsf	3,5	;RP0=1, select bank1
 11427  03DD  1303               	bcf	3,6	;RP1=0, select bank1
 11428  03DE  0841               	movf	sprintf@tmpval^(0+128),w
 11429  03DF  1283               	bcf	3,5	;RP0=0, select bank0
 11430  03E0  1303               	bcf	3,6	;RP1=0, select bank0
 11431  03E1  00AC               	movwf	___llmod@dividend
 11432  03E2  160A  158A  2381  120A  118A  	fcall	___llmod
 11433  03E7  1283               	bcf	3,5	;RP0=0, select bank0
 11434  03E8  1303               	bcf	3,6	;RP1=0, select bank0
 11435  03E9  082B               	movf	?___llmod+3,w
 11436  03EA  1683               	bsf	3,5	;RP0=1, select bank1
 11437  03EB  1303               	bcf	3,6	;RP1=0, select bank1
 11438  03EC  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11439  03ED  1283               	bcf	3,5	;RP0=0, select bank0
 11440  03EE  1303               	bcf	3,6	;RP1=0, select bank0
 11441  03EF  082A               	movf	?___llmod+2,w
 11442  03F0  1683               	bsf	3,5	;RP0=1, select bank1
 11443  03F1  1303               	bcf	3,6	;RP1=0, select bank1
 11444  03F2  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11445  03F3  1283               	bcf	3,5	;RP0=0, select bank0
 11446  03F4  1303               	bcf	3,6	;RP1=0, select bank0
 11447  03F5  0829               	movf	?___llmod+1,w
 11448  03F6  1683               	bsf	3,5	;RP0=1, select bank1
 11449  03F7  1303               	bcf	3,6	;RP1=0, select bank1
 11450  03F8  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11451  03F9  1283               	bcf	3,5	;RP0=0, select bank0
 11452  03FA  1303               	bcf	3,6	;RP1=0, select bank0
 11453  03FB  0828               	movf	?___llmod,w
 11454  03FC  1683               	bsf	3,5	;RP0=1, select bank1
 11455  03FD  1303               	bcf	3,6	;RP1=0, select bank1
 11456  03FE  00C1               	movwf	sprintf@tmpval^(0+128)
 11457  03FF                     l4369:
 11458                           
 11459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11460  03FF  0841               	movf	sprintf@tmpval^(0+128),w
 11461  0400  3E30               	addlw	48
 11462  0401  00B3               	movwf	??_sprintf^(0+128)
 11463  0402  0849               	movf	sprintf@sp^(0+128),w
 11464  0403  0084               	movwf	4
 11465  0404  0833               	movf	??_sprintf^(0+128),w
 11466  0405  1383               	bcf	3,7	;select IRP bank0
 11467  0406  0080               	movwf	0
 11468  0407  3001               	movlw	1
 11469  0408  00B3               	movwf	??_sprintf^(0+128)
 11470  0409  0833               	movf	??_sprintf^(0+128),w
 11471  040A  07C9               	addwf	sprintf@sp^(0+128),f
 11472  040B                     l4371:
 11473                           
 11474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11475  040B  0850               	movf	sprintf@c^(0+128),w
 11476  040C  00B3               	movwf	??_sprintf^(0+128)
 11477  040D  3001               	movlw	1
 11478  040E                     u6995:
 11479  040E  1003               	clrc
 11480  040F  0DB3               	rlf	??_sprintf^(0+128),f
 11481  0410  3EFF               	addlw	-1
 11482  0411  1D03               	skipz
 11483  0412  2C0E               	goto	u6995
 11484  0413  1003               	clrc
 11485  0414  0D33               	rlf	??_sprintf^(0+128),w
 11486  0415  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11487  0416  0084               	movwf	4
 11488  0417  160A  118A  200A  120A  118A  	fcall	stringdir
 11489  041C  1283               	bcf	3,5	;RP0=0, select bank0
 11490  041D  1303               	bcf	3,6	;RP1=0, select bank0
 11491  041E  00A8               	movwf	___llmod@divisor
 11492  041F  160A  118A  200A  120A  118A  	fcall	stringdir
 11493  0424  00A9               	movwf	___llmod@divisor+1
 11494  0425  160A  118A  200A  120A  118A  	fcall	stringdir
 11495  042A  00AA               	movwf	___llmod@divisor+2
 11496  042B  160A  118A  200A  120A  118A  	fcall	stringdir
 11497  0430  00AB               	movwf	___llmod@divisor+3
 11498  0431  1683               	bsf	3,5	;RP0=1, select bank1
 11499  0432  1303               	bcf	3,6	;RP1=0, select bank1
 11500  0433  0848               	movf	(sprintf@val+3)^(0+128),w
 11501  0434  1283               	bcf	3,5	;RP0=0, select bank0
 11502  0435  1303               	bcf	3,6	;RP1=0, select bank0
 11503  0436  00AF               	movwf	___llmod@dividend+3
 11504  0437  1683               	bsf	3,5	;RP0=1, select bank1
 11505  0438  1303               	bcf	3,6	;RP1=0, select bank1
 11506  0439  0847               	movf	(sprintf@val+2)^(0+128),w
 11507  043A  1283               	bcf	3,5	;RP0=0, select bank0
 11508  043B  1303               	bcf	3,6	;RP1=0, select bank0
 11509  043C  00AE               	movwf	___llmod@dividend+2
 11510  043D  1683               	bsf	3,5	;RP0=1, select bank1
 11511  043E  1303               	bcf	3,6	;RP1=0, select bank1
 11512  043F  0846               	movf	(sprintf@val+1)^(0+128),w
 11513  0440  1283               	bcf	3,5	;RP0=0, select bank0
 11514  0441  1303               	bcf	3,6	;RP1=0, select bank0
 11515  0442  00AD               	movwf	___llmod@dividend+1
 11516  0443  1683               	bsf	3,5	;RP0=1, select bank1
 11517  0444  1303               	bcf	3,6	;RP1=0, select bank1
 11518  0445  0845               	movf	sprintf@val^(0+128),w
 11519  0446  1283               	bcf	3,5	;RP0=0, select bank0
 11520  0447  1303               	bcf	3,6	;RP1=0, select bank0
 11521  0448  00AC               	movwf	___llmod@dividend
 11522  0449  160A  158A  2381  120A  118A  	fcall	___llmod
 11523  044E  1283               	bcf	3,5	;RP0=0, select bank0
 11524  044F  1303               	bcf	3,6	;RP1=0, select bank0
 11525  0450  082B               	movf	?___llmod+3,w
 11526  0451  1683               	bsf	3,5	;RP0=1, select bank1
 11527  0452  1303               	bcf	3,6	;RP1=0, select bank1
 11528  0453  00C8               	movwf	(sprintf@val+3)^(0+128)
 11529  0454  1283               	bcf	3,5	;RP0=0, select bank0
 11530  0455  1303               	bcf	3,6	;RP1=0, select bank0
 11531  0456  082A               	movf	?___llmod+2,w
 11532  0457  1683               	bsf	3,5	;RP0=1, select bank1
 11533  0458  1303               	bcf	3,6	;RP1=0, select bank1
 11534  0459  00C7               	movwf	(sprintf@val+2)^(0+128)
 11535  045A  1283               	bcf	3,5	;RP0=0, select bank0
 11536  045B  1303               	bcf	3,6	;RP1=0, select bank0
 11537  045C  0829               	movf	?___llmod+1,w
 11538  045D  1683               	bsf	3,5	;RP0=1, select bank1
 11539  045E  1303               	bcf	3,6	;RP1=0, select bank1
 11540  045F  00C6               	movwf	(sprintf@val+1)^(0+128)
 11541  0460  1283               	bcf	3,5	;RP0=0, select bank0
 11542  0461  1303               	bcf	3,6	;RP1=0, select bank0
 11543  0462  0828               	movf	?___llmod,w
 11544  0463  1683               	bsf	3,5	;RP0=1, select bank1
 11545  0464  1303               	bcf	3,6	;RP1=0, select bank1
 11546  0465  00C5               	movwf	sprintf@val^(0+128)
 11547  0466                     l4373:
 11548                           
 11549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11550  0466  3001               	movlw	1
 11551  0467  02D0               	subwf	sprintf@c^(0+128),f
 11552  0468  0A50               	incf	sprintf@c^(0+128),w
 11553  0469  1D03               	btfss	3,2
 11554  046A  2C6C               	goto	u7001
 11555  046B  2C6D               	goto	u7000
 11556  046C                     u7001:
 11557  046C  2B65               	goto	l4365
 11558  046D                     u7000:
 11559  046D  2C7F               	goto	l4381
 11560  046E                     l4375:
 11561                           
 11562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11563  046E  3030               	movlw	48
 11564  046F  00B3               	movwf	??_sprintf^(0+128)
 11565  0470  0849               	movf	sprintf@sp^(0+128),w
 11566  0471  0084               	movwf	4
 11567  0472  0833               	movf	??_sprintf^(0+128),w
 11568  0473  1383               	bcf	3,7	;select IRP bank0
 11569  0474  0080               	movwf	0
 11570  0475                     l4377:
 11571  0475  3001               	movlw	1
 11572  0476  00B3               	movwf	??_sprintf^(0+128)
 11573  0477  0833               	movf	??_sprintf^(0+128),w
 11574  0478  07C9               	addwf	sprintf@sp^(0+128),f
 11575  0479                     l4379:
 11576                           
 11577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11578  0479  30FF               	movlw	255
 11579  047A  07CE               	addwf	sprintf@prec^(0+128),f
 11580  047B  1803               	skipnc
 11581  047C  0ACF               	incf	(sprintf@prec+1)^(0+128),f
 11582  047D  30FF               	movlw	255
 11583  047E  07CF               	addwf	(sprintf@prec+1)^(0+128),f
 11584  047F                     l4381:
 11585                           
 11586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11587  047F  084E               	movf	sprintf@prec^(0+128),w
 11588  0480  044F               	iorwf	(sprintf@prec+1)^(0+128),w
 11589  0481  1D03               	btfss	3,2
 11590  0482  2C84               	goto	u7011
 11591  0483  2C85               	goto	u7010
 11592  0484                     u7011:
 11593  0484  2C6E               	goto	l4375
 11594  0485                     u7010:
 11595  0485  2DC0               	goto	l4433
 11596  0486                     l4383:
 11597                           
 11598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11599  0486  083C               	movf	sprintf@ap^(0+128),w
 11600  0487  0084               	movwf	4
 11601  0488  1383               	bcf	3,7	;select IRP bank0
 11602  0489  0800               	movf	0,w
 11603  048A  00B3               	movwf	??_sprintf^(0+128)
 11604  048B  0A84               	incf	4,f
 11605  048C  0800               	movf	0,w
 11606  048D  00B4               	movwf	(??_sprintf^(0+128)+1)
 11607  048E  0833               	movf	??_sprintf^(0+128),w
 11608  048F  00C5               	movwf	sprintf@val^(0+128)
 11609  0490  0834               	movf	(??_sprintf+1)^(0+128),w
 11610  0491  00C6               	movwf	(sprintf@val+1)^(0+128)
 11611  0492  3000               	movlw	0
 11612  0493  1BC6               	btfsc	(sprintf@val+1)^(0+128),7
 11613  0494  30FF               	movlw	255
 11614  0495  00C7               	movwf	(sprintf@val+2)^(0+128)
 11615  0496  00C8               	movwf	(sprintf@val+3)^(0+128)
 11616  0497                     l4385:
 11617  0497  3002               	movlw	2
 11618  0498  00B3               	movwf	??_sprintf^(0+128)
 11619  0499  0833               	movf	??_sprintf^(0+128),w
 11620  049A  07BC               	addwf	sprintf@ap^(0+128),f
 11621  049B                     l4387:
 11622                           
 11623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11624  049B  1FC8               	btfss	(sprintf@val+3)^(0+128),7
 11625  049C  2C9E               	goto	u7021
 11626  049D  2C9F               	goto	u7020
 11627  049E                     u7021:
 11628  049E  2CAE               	goto	l4393
 11629  049F                     u7020:
 11630  049F                     l4389:
 11631                           
 11632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11633  049F  3003               	movlw	3
 11634  04A0  04BD               	iorwf	sprintf@flag^(0+128),f
 11635  04A1  3000               	movlw	0
 11636  04A2  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
 11637  04A3                     l4391:
 11638                           
 11639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11640  04A3  09C5               	comf	sprintf@val^(0+128),f
 11641  04A4  09C6               	comf	(sprintf@val+1)^(0+128),f
 11642  04A5  09C7               	comf	(sprintf@val+2)^(0+128),f
 11643  04A6  09C8               	comf	(sprintf@val+3)^(0+128),f
 11644  04A7  0AC5               	incf	sprintf@val^(0+128),f
 11645  04A8  1903               	skipnz
 11646  04A9  0AC6               	incf	(sprintf@val+1)^(0+128),f
 11647  04AA  1903               	skipnz
 11648  04AB  0AC7               	incf	(sprintf@val+2)^(0+128),f
 11649  04AC  1903               	skipnz
 11650  04AD  0AC8               	incf	(sprintf@val+3)^(0+128),f
 11651  04AE                     l4393:
 11652                           
 11653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11654  04AE  084E               	movf	sprintf@prec^(0+128),w
 11655  04AF  044F               	iorwf	(sprintf@prec+1)^(0+128),w
 11656  04B0  1D03               	btfss	3,2
 11657  04B1  2CB3               	goto	u7031
 11658  04B2  2CB4               	goto	u7030
 11659  04B3                     u7031:
 11660  04B3  2CC2               	goto	l4399
 11661  04B4                     u7030:
 11662  04B4                     l4395:
 11663  04B4  0848               	movf	(sprintf@val+3)^(0+128),w
 11664  04B5  0447               	iorwf	(sprintf@val+2)^(0+128),w
 11665  04B6  0446               	iorwf	(sprintf@val+1)^(0+128),w
 11666  04B7  0445               	iorwf	sprintf@val^(0+128),w
 11667  04B8  1D03               	skipz
 11668  04B9  2CBB               	goto	u7041
 11669  04BA  2CBC               	goto	u7040
 11670  04BB                     u7041:
 11671  04BB  2CC2               	goto	l4399
 11672  04BC                     u7040:
 11673  04BC                     l4397:
 11674                           
 11675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11676  04BC  3001               	movlw	1
 11677  04BD  07CE               	addwf	sprintf@prec^(0+128),f
 11678  04BE  1803               	skipnc
 11679  04BF  0ACF               	incf	(sprintf@prec+1)^(0+128),f
 11680  04C0  3000               	movlw	0
 11681  04C1  07CF               	addwf	(sprintf@prec+1)^(0+128),f
 11682  04C2                     l4399:
 11683                           
 11684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11685  04C2  01D0               	clrf	sprintf@c^(0+128)
 11686  04C3  0AD0               	incf	sprintf@c^(0+128),f
 11687  04C4                     l4405:
 11688                           
 11689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11690  04C4  0850               	movf	sprintf@c^(0+128),w
 11691  04C5  00B3               	movwf	??_sprintf^(0+128)
 11692  04C6  3001               	movlw	1
 11693  04C7                     u7055:
 11694  04C7  1003               	clrc
 11695  04C8  0DB3               	rlf	??_sprintf^(0+128),f
 11696  04C9  3EFF               	addlw	-1
 11697  04CA  1D03               	skipz
 11698  04CB  2CC7               	goto	u7055
 11699  04CC  1003               	clrc
 11700  04CD  0D33               	rlf	??_sprintf^(0+128),w
 11701  04CE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11702  04CF  0084               	movwf	4
 11703  04D0  160A  118A  200A  120A  118A  	fcall	stringdir
 11704  04D5  00B4               	movwf	(??_sprintf+1)^(0+128)
 11705  04D6  160A  118A  200A  120A  118A  	fcall	stringdir
 11706  04DB  00B5               	movwf	((??_sprintf+1)^(0+128)+1)
 11707  04DC  160A  118A  200A  120A  118A  	fcall	stringdir
 11708  04E1  00B6               	movwf	((??_sprintf+1)^(0+128)+2)
 11709  04E2  160A  118A  200A  120A  118A  	fcall	stringdir
 11710  04E7  00B7               	movwf	((??_sprintf+1)^(0+128)+3)
 11711  04E8  0837               	movf	(??_sprintf+4)^(0+128),w
 11712  04E9  0248               	subwf	(sprintf@val+3)^(0+128),w
 11713  04EA  1D03               	skipz
 11714  04EB  2CF6               	goto	u7065
 11715  04EC  0836               	movf	(??_sprintf+3)^(0+128),w
 11716  04ED  0247               	subwf	(sprintf@val+2)^(0+128),w
 11717  04EE  1D03               	skipz
 11718  04EF  2CF6               	goto	u7065
 11719  04F0  0835               	movf	(??_sprintf+2)^(0+128),w
 11720  04F1  0246               	subwf	(sprintf@val+1)^(0+128),w
 11721  04F2  1D03               	skipz
 11722  04F3  2CF6               	goto	u7065
 11723  04F4  0834               	movf	(??_sprintf+1)^(0+128),w
 11724  04F5  0245               	subwf	sprintf@val^(0+128),w
 11725  04F6                     u7065:
 11726  04F6  1803               	skipnc
 11727  04F7  2CF9               	goto	u7061
 11728  04F8  2CFA               	goto	u7060
 11729  04F9                     u7061:
 11730  04F9  2CFB               	goto	l4409
 11731  04FA                     u7060:
 11732  04FA  2D05               	goto	l4411
 11733  04FB                     l4409:
 11734  04FB  3001               	movlw	1
 11735  04FC  00B3               	movwf	??_sprintf^(0+128)
 11736  04FD  0833               	movf	??_sprintf^(0+128),w
 11737  04FE  07D0               	addwf	sprintf@c^(0+128),f
 11738  04FF  300A               	movlw	10
 11739  0500  0650               	xorwf	sprintf@c^(0+128),w
 11740  0501  1D03               	btfss	3,2
 11741  0502  2D04               	goto	u7071
 11742  0503  2D05               	goto	u7070
 11743  0504                     u7071:
 11744  0504  2CC4               	goto	l4405
 11745  0505                     u7070:
 11746  0505                     l4411:
 11747                           
 11748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11749  0505  084F               	movf	(sprintf@prec+1)^(0+128),w
 11750  0506  3A80               	xorlw	128
 11751  0507  3C80               	sublw	128
 11752  0508  1D03               	skipz
 11753  0509  2D0C               	goto	u7085
 11754  050A  084E               	movf	sprintf@prec^(0+128),w
 11755  050B  0250               	subwf	sprintf@c^(0+128),w
 11756  050C                     u7085:
 11757  050C  1803               	skipnc
 11758  050D  2D0F               	goto	u7081
 11759  050E  2D10               	goto	u7080
 11760  050F                     u7081:
 11761  050F  2D11               	goto	l4415
 11762  0510                     u7080:
 11763  0510                     l4413:
 11764  0510  2D29               	goto	l4419
 11765  0511                     l4415:
 11766  0511  1683               	bsf	3,5	;RP0=1, select bank1
 11767  0512  1303               	bcf	3,6	;RP1=0, select bank1
 11768  0513  084F               	movf	(sprintf@prec+1)^(0+128),w
 11769  0514  3A80               	xorlw	128
 11770  0515  00B3               	movwf	??_sprintf^(0+128)
 11771  0516  3080               	movlw	128
 11772  0517  0233               	subwf	??_sprintf^(0+128),w
 11773  0518  1D03               	skipz
 11774  0519  2D1C               	goto	u7095
 11775  051A  0850               	movf	sprintf@c^(0+128),w
 11776  051B  024E               	subwf	sprintf@prec^(0+128),w
 11777  051C                     u7095:
 11778  051C  1803               	skipnc
 11779  051D  2D1F               	goto	u7091
 11780  051E  2D20               	goto	u7090
 11781  051F                     u7091:
 11782  051F  2D29               	goto	l4419
 11783  0520                     u7090:
 11784  0520                     l4417:
 11785                           
 11786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11787  0520  1683               	bsf	3,5	;RP0=1, select bank1
 11788  0521  1303               	bcf	3,6	;RP1=0, select bank1
 11789  0522  0850               	movf	sprintf@c^(0+128),w
 11790  0523  00B3               	movwf	??_sprintf^(0+128)
 11791  0524  01B4               	clrf	(??_sprintf^(0+128)+1)
 11792  0525  0833               	movf	??_sprintf^(0+128),w
 11793  0526  00CE               	movwf	sprintf@prec^(0+128)
 11794  0527  0834               	movf	(??_sprintf+1)^(0+128),w
 11795  0528  00CF               	movwf	(sprintf@prec+1)^(0+128)
 11796  0529                     l4419:
 11797                           
 11798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11799  0529  3003               	movlw	3
 11800  052A  1683               	bsf	3,5	;RP0=1, select bank1
 11801  052B  1303               	bcf	3,6	;RP1=0, select bank1
 11802  052C  053D               	andwf	sprintf@flag^(0+128),w
 11803  052D  00B3               	movwf	??_sprintf^(0+128)
 11804  052E  3000               	movlw	0
 11805  052F  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11806  0530  00B4               	movwf	(??_sprintf+1)^(0+128)
 11807  0531  0833               	movf	??_sprintf^(0+128),w
 11808  0532  0434               	iorwf	(??_sprintf^(0+128)+1),w
 11809  0533  1903               	btfsc	3,2
 11810  0534  2D36               	goto	u7101
 11811  0535  2D37               	goto	u7100
 11812  0536                     u7101:
 11813  0536  2DB2               	goto	l4431
 11814  0537                     u7100:
 11815  0537                     l4421:
 11816                           
 11817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11818  0537  302D               	movlw	45
 11819  0538  00B3               	movwf	??_sprintf^(0+128)
 11820  0539  0849               	movf	sprintf@sp^(0+128),w
 11821  053A  0084               	movwf	4
 11822  053B  0833               	movf	??_sprintf^(0+128),w
 11823  053C  1383               	bcf	3,7	;select IRP bank0
 11824  053D  0080               	movwf	0
 11825  053E                     l4423:
 11826  053E  3001               	movlw	1
 11827  053F  00B3               	movwf	??_sprintf^(0+128)
 11828  0540  0833               	movf	??_sprintf^(0+128),w
 11829  0541  07C9               	addwf	sprintf@sp^(0+128),f
 11830  0542  2DB2               	goto	l4431
 11831  0543                     l4425:
 11832                           
 11833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11834  0543  3000               	movlw	0
 11835  0544  1283               	bcf	3,5	;RP0=0, select bank0
 11836  0545  1303               	bcf	3,6	;RP1=0, select bank0
 11837  0546  00AB               	movwf	___llmod@divisor+3
 11838  0547  3000               	movlw	0
 11839  0548  00AA               	movwf	___llmod@divisor+2
 11840  0549  3000               	movlw	0
 11841  054A  00A9               	movwf	___llmod@divisor+1
 11842  054B  300A               	movlw	10
 11843  054C  00A8               	movwf	___llmod@divisor
 11844  054D  1683               	bsf	3,5	;RP0=1, select bank1
 11845  054E  1303               	bcf	3,6	;RP1=0, select bank1
 11846  054F  084E               	movf	sprintf@prec^(0+128),w
 11847  0550  00B3               	movwf	??_sprintf^(0+128)
 11848  0551  3001               	movlw	1
 11849  0552                     u7115:
 11850  0552  1003               	clrc
 11851  0553  0DB3               	rlf	??_sprintf^(0+128),f
 11852  0554  3EFF               	addlw	-1
 11853  0555  1D03               	skipz
 11854  0556  2D52               	goto	u7115
 11855  0557  1003               	clrc
 11856  0558  0D33               	rlf	??_sprintf^(0+128),w
 11857  0559  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11858  055A  0084               	movwf	4
 11859  055B  160A  118A  200A  120A  118A  	fcall	stringdir
 11860  0560  1283               	bcf	3,5	;RP0=0, select bank0
 11861  0561  1303               	bcf	3,6	;RP1=0, select bank0
 11862  0562  00A0               	movwf	___lldiv@divisor
 11863  0563  160A  118A  200A  120A  118A  	fcall	stringdir
 11864  0568  00A1               	movwf	___lldiv@divisor+1
 11865  0569  160A  118A  200A  120A  118A  	fcall	stringdir
 11866  056E  00A2               	movwf	___lldiv@divisor+2
 11867  056F  160A  118A  200A  120A  118A  	fcall	stringdir
 11868  0574  00A3               	movwf	___lldiv@divisor+3
 11869  0575  1683               	bsf	3,5	;RP0=1, select bank1
 11870  0576  1303               	bcf	3,6	;RP1=0, select bank1
 11871  0577  0848               	movf	(sprintf@val+3)^(0+128),w
 11872  0578  1283               	bcf	3,5	;RP0=0, select bank0
 11873  0579  1303               	bcf	3,6	;RP1=0, select bank0
 11874  057A  00A7               	movwf	___lldiv@dividend+3
 11875  057B  1683               	bsf	3,5	;RP0=1, select bank1
 11876  057C  1303               	bcf	3,6	;RP1=0, select bank1
 11877  057D  0847               	movf	(sprintf@val+2)^(0+128),w
 11878  057E  1283               	bcf	3,5	;RP0=0, select bank0
 11879  057F  1303               	bcf	3,6	;RP1=0, select bank0
 11880  0580  00A6               	movwf	___lldiv@dividend+2
 11881  0581  1683               	bsf	3,5	;RP0=1, select bank1
 11882  0582  1303               	bcf	3,6	;RP1=0, select bank1
 11883  0583  0846               	movf	(sprintf@val+1)^(0+128),w
 11884  0584  1283               	bcf	3,5	;RP0=0, select bank0
 11885  0585  1303               	bcf	3,6	;RP1=0, select bank0
 11886  0586  00A5               	movwf	___lldiv@dividend+1
 11887  0587  1683               	bsf	3,5	;RP0=1, select bank1
 11888  0588  1303               	bcf	3,6	;RP1=0, select bank1
 11889  0589  0845               	movf	sprintf@val^(0+128),w
 11890  058A  1283               	bcf	3,5	;RP0=0, select bank0
 11891  058B  1303               	bcf	3,6	;RP1=0, select bank0
 11892  058C  00A4               	movwf	___lldiv@dividend
 11893  058D  160A  158A  2496  120A  118A  	fcall	___lldiv
 11894  0592  1283               	bcf	3,5	;RP0=0, select bank0
 11895  0593  1303               	bcf	3,6	;RP1=0, select bank0
 11896  0594  0823               	movf	?___lldiv+3,w
 11897  0595  00AF               	movwf	___llmod@dividend+3
 11898  0596  0822               	movf	?___lldiv+2,w
 11899  0597  00AE               	movwf	___llmod@dividend+2
 11900  0598  0821               	movf	?___lldiv+1,w
 11901  0599  00AD               	movwf	___llmod@dividend+1
 11902  059A  0820               	movf	?___lldiv,w
 11903  059B  00AC               	movwf	___llmod@dividend
 11904  059C  160A  158A  2381  120A  118A  	fcall	___llmod
 11905  05A1  1283               	bcf	3,5	;RP0=0, select bank0
 11906  05A2  1303               	bcf	3,6	;RP1=0, select bank0
 11907  05A3  0828               	movf	?___llmod,w
 11908  05A4  3E30               	addlw	48
 11909  05A5  1683               	bsf	3,5	;RP0=1, select bank1
 11910  05A6  1303               	bcf	3,6	;RP1=0, select bank1
 11911  05A7  00B4               	movwf	(??_sprintf+1)^(0+128)
 11912  05A8  0834               	movf	(??_sprintf+1)^(0+128),w
 11913  05A9  00D0               	movwf	sprintf@c^(0+128)
 11914  05AA                     l4427:
 11915                           
 11916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11917  05AA  0850               	movf	sprintf@c^(0+128),w
 11918  05AB  00B3               	movwf	??_sprintf^(0+128)
 11919  05AC  0849               	movf	sprintf@sp^(0+128),w
 11920  05AD  0084               	movwf	4
 11921  05AE  0833               	movf	??_sprintf^(0+128),w
 11922  05AF  1383               	bcf	3,7	;select IRP bank0
 11923  05B0  0080               	movwf	0
 11924  05B1  2D3E               	goto	l4423
 11925  05B2                     l4431:
 11926                           
 11927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11928  05B2  30FF               	movlw	255
 11929  05B3  07CE               	addwf	sprintf@prec^(0+128),f
 11930  05B4  1803               	skipnc
 11931  05B5  0ACF               	incf	(sprintf@prec+1)^(0+128),f
 11932  05B6  30FF               	movlw	255
 11933  05B7  07CF               	addwf	(sprintf@prec+1)^(0+128),f
 11934  05B8  0A4E               	incf	sprintf@prec^(0+128),w
 11935  05B9  1D03               	skipz
 11936  05BA  2DBF               	goto	u7121
 11937  05BB  0A4F               	incf	(sprintf@prec+1)^(0+128),w
 11938  05BC  1D03               	btfss	3,2
 11939  05BD  2DBF               	goto	u7121
 11940  05BE  2DC0               	goto	u7120
 11941  05BF                     u7121:
 11942  05BF  2D43               	goto	l4425
 11943  05C0                     u7120:
 11944  05C0                     l4433:
 11945                           
 11946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11947  05C0  3001               	movlw	1
 11948  05C1  07A8               	addwf	sprintf@f^(0+128),f
 11949  05C2  30FF               	movlw	-1
 11950  05C3  0728               	addwf	sprintf@f^(0+128),w
 11951  05C4  0084               	movwf	4
 11952  05C5  160A  118A  200A  120A  118A  	fcall	stringdir
 11953  05CA  00B3               	movwf	??_sprintf^(0+128)
 11954  05CB  0833               	movf	??_sprintf^(0+128),w
 11955  05CC  00D0               	movwf	sprintf@c^(0+128)
 11956  05CD  0850               	movf	sprintf@c^(0+128),w
 11957  05CE  1D03               	btfss	3,2
 11958  05CF  2DD1               	goto	u7131
 11959  05D0  2DD4               	goto	u7130
 11960  05D1                     u7131:
 11961  05D1  160A  118A  2D54   	goto	l4209
 11962  05D4                     u7130:
 11963  05D4                     l4435:
 11964                           
 11965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11966  05D4  0849               	movf	sprintf@sp^(0+128),w
 11967  05D5  0084               	movwf	4
 11968  05D6  1383               	bcf	3,7	;select IRP bank0
 11969  05D7  0180               	clrf	0
 11970  05D8                     l432:
 11971  05D8  0008               	return
 11972  05D9                     __end_of_sprintf:

Data Sizes:
    Strings     30
    Constant    144
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     80      80
    BANK1            80     49      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    ESCString@a	PTR unsigned char  size(1) Largest target is 20
		 -> BUFFER(BANK1[20]), 

    ESCLCD@a	PTR unsigned char  size(2) Largest target is 20
		 -> BUFFER(BANK1[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_ESCLCD
    _sprintf->___llmod
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    _limpiar->_CMDs
    _cursor->_CMDs
    _configLCD->_CMDs
    _CMDs->_pin
    _ESCString->_ESC
    _ESCLCD->_ESCchar
    _ESCchar->_pin

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   42568
                                             76 BANK0      4     4      0
                                _ESC
                             _ESCLCD
                          _ESCString
                            ___flmul
                           ___xxtofl
                               _baud
                             _config
                          _configADC
                          _configLCD
                          _config_rx
                          _config_tx
                             _cursor
                            _limpiar
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   35138
                                              8 BANK1     41    30     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8239
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _limpiar                                              0     0      0     279
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _cursor                                               4     3      1     651
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (1) _config_tx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configLCD                                            2     2      0     279
                                              7 COMMON     2     2      0
                               _CMDs
 ---------------------------------------------------------------------------------
 (2) _CMDs                                                 3     3      0     279
                                              4 COMMON     3     3      0
                                _pin
 ---------------------------------------------------------------------------------
 (1) _configADC                                            3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _baud                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCString                                            3     3      0     145
                                              4 COMMON     3     3      0
                                _ESC
 ---------------------------------------------------------------------------------
 (2) _ESC                                                  1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ESCLCD                                               7     5      2     589
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                            _ESCchar
 ---------------------------------------------------------------------------------
 (2) _ESCchar                                              2     2      0     279
                                              4 COMMON     2     2      0
                                _pin
 ---------------------------------------------------------------------------------
 (3) _pin                                                  1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                               _LEER
 ---------------------------------------------------------------------------------
 (6) _LEER                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESC
   _ESCLCD
     _ESCchar
       _pin
   _ESCString
     _ESC
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _baud
   _config
   _configADC
   _configLCD
     _CMDs
       _pin
   _config_rx
   _config_tx
   _cursor
     _CMDs
   _limpiar
     _CMDs
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)
   _LEER

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AB       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     31      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AB      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 01 16:55:19 2021

                      pc 0002                       l30 1A83                       l31 1A89  
                     l32 1A8A                       l41 1AA6                       l33 1A90  
                     l25 1A72                       l34 1A91                       l26 1A75  
                     l35 1A97                       l27 1A7B                       l36 1A98  
                     l28 1A7C                       l44 1988                       l37 1A9E  
                     l29 1A82                       l53 19D3                       l38 1A9F  
                     l39 1AA5                       l47 1900                       l56 1C95  
                     l65 1AEA                       l90 0872                       l59 192C  
                     l91 087D                       l92 0888                       l93 0893  
                     l94 089E                       l95 08A9                       l87 085E  
                     l96 08B4                       l88 092C                       l97 08BF  
                     l89 0867                       l98 08CA                       l99 08D5  
           ___awdiv@sign 0026                       fsr 0004      ___wmul@multiplicand 0075  
    __Umul8_16@word_mpld 0022                      l100 08E0                      l101 08EB  
                    l103 093B                      l105 0939                      l230 18DE  
                    l224 18CE                      l233 18E0                      l242 194A  
                    l227 1910                      l411 02D3                      l236 18E8  
                    l404 028F                      l350 07E5                      l432 05D8  
                    l610 1142                      l602 1C2F                      l436 1995  
                    l357 0FFF                      l622 1B4F                      l630 1E6D  
                    l438 19AD                      l606 1181                      l199 1968  
                    l623 1B6B                      l631 1E86                      l607 10E4  
                    l624 1B80                      l472 1CFD                      l376 15BD  
                    l617 1172                      l627 1E01                      l635 18F3  
                    l805 153D                      l653 1FFF                      l806 1549  
                    l646 1DCD                      l654 1F71                      l742 1B30  
                    l639 1DE2                      l903 1EAB                      l664 1FF2  
                    l752 1A68                      l809 0852                      l649 1DE2  
                    l905 1F42                      l657 1FC2                      l763 1325  
                    l923 07F7                      l692 1BD6                      l916 1F0C  
                    l917 1F18                      l909 1EF0                      l589 1D66  
                    l767 13CC                      l871 0C90                      l784 1497  
                    l776 1549                      l880 19FC                      l769 13A3  
                    l865 0C08                      l794 14DD                      l859 0C9C  
                    l788 14BB                      l797 151B                      l878 19EA  
                    _ESC 18DF                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RE0 0048                      _RD3 0043  
                    _RE1 0049                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      _isr 19FD  
                    _pin 1A69                      _num 00D9                      fsr0 0004  
                    indf 0000             ___awmod@sign 0079             ___flmul@aexp 003C  
           ___flmul@bexp 003D             ___flmul@sign 0037             ___flmul@temp 0042  
           ___flmul@prod 003E                     ESC@a 0073                     ?_ESC 0070  
           ___fltol@exp1 0061          __end_of_ESCchar 192D                     l3001 07EE  
                   l3003 07F4                     l3005 07F6                     l3201 1D93  
                   l3121 19A3                     l3113 1989                     l4001 10E5  
                   l3203 1D9B                     l3123 19A9                     l3115 198B  
                   l4011 1112                     l4003 10ED                     l2411 19D7  
                   l3221 1DC2                     l3213 1DA9                     l3205 1D9D  
                   l4101 1B8E                     l3117 198F                     l4021 1146  
                   l4013 1124                     l4005 10FE                     l2421 19F8  
                   l2413 19D9                     l2501 1BF2                     l3223 1DD2  
                   l3207 1DA1                     l3215 1DBB                     l4111 1BC8  
                   l4103 1B9B                     l3119 199C                     l4015 1132  
                   l4007 1100                     l2415 19E0                     l2511 1C0E  
                   l2503 1BF5                     l4201 1AAA                     l2601 1303  
                   l3225 1DD7                     l4041 1C96                     l4105 1B9F  
                   l4113 1BCE                     l4121 1E93                     l4017 1133  
                   l4009 1109                     l2417 19E4                     l2521 1C2B  
                   l2513 1C14                     l2505 1BFC                     l4203 1AC6  
                   l3411 1957                     l2611 131A                     l2603 1307  
                   l4051 1CC5                     l4043 1CA8                     l4107 1BB1  
                   l4131 1EC1                     l4123 1EA3                     l4035 1167  
                   l4027 114E                     l4019 113C                     l2419 19F3  
                   l2531 1AF8                     l2515 1C1B                     l2507 1C00  
                   l4211 155A                     l4205 1ACC                     l3421 1960  
                   l3413 1958                     l2701 1475                     l2621 1333  
                   l2613 131B                     l2605 1308                     l4053 1CD7  
                   l4045 1CAB                     l4061 1CF5                     l4109 1BBF  
                   l4141 1EF7                     l4133 1ECE                     l4125 1EB3  
                   l4117 1E8A                     l4037 1177                     l4029 1160  
                   l2541 1B1E                     l2533 1AFF                     l2525 1AEB  
                   l2509 1C04                     l2517 1C21                     l4301 00AE  
                   l4221 1575                     l4213 1561                     l3423 1961  
                   l3415 195B                     l3351 0876                     l3343 0854  
                   l3431 1901                     l4071 1B7D                     l3183 18E9  
                   l2703 147A                     l2631 1347                     l2623 1337  
                   l2607 130D                     l2615 131D                     l3247 0803  
                   l3191 1D67                     l4055 1CE5                     l4047 1CB8  
                   l4151 1F30                     l4143 1F02                     l4135 1ED5  
                   l4119 1E8F                     l2543 1B1F                     l2535 1B03  
                   l2527 1AEF                     l2551 1A2F                     l2519 1C26  
                   l4303 00B6                     l4311 0128                     l4231 15A8  
                   l4223 1579                     l4215 1566                     l4207 154D  
                   l3425 1964                     l3417 195C                     l3409 194B  
                   l3361 08AD                     l3353 0881                     l3345 085A  
                   l3433 190D                     l4161 18F4                     l4073 1B7F  
                   l4065 1B31                     l4081 1E15                     l3185 18F1  
                   l2721 14C2                     l2713 14AD                     l2705 1489  
                   l2641 135B                     l2633 134B                     l2625 133B  
                   l2617 132B                     l2609 1312                     l3249 0807  
                   l3193 1D74                     l4057 1CE6                     l4049 1CBC  
                   l4153 1F35                     l4145 1F06                     l4137 1ED9  
                   l4129 1EBC                     l2801 098E                     l2545 1B26  
                   l2537 1B07                     l2529 1AF5                     l2561 1A47  
                   l2553 1A35                     l4313 015D                     l4305 00D4  
                   l4241 15E1                     l4225 157C                     l4233 15B9  
                   l4217 1568                     l4209 1554                     l3427 1967  
                   l3419 195D                     l3371 08E4                     l3363 08B8  
                   l3355 088C                     l3347 0862                     l3435 18D7  
                   l4171 19C8                     l4163 19B1                     l4067 1B47  
                   l4091 1E83                     l4083 1E1D                     l3187 18F3  
                   l2731 14D0                     l2723 14C4                     l2715 14B6  
                   l2707 149F                     l2643 135F                     l2635 134F  
                   l2627 133F                     l2619 132F                     l2651 136F  
                   l4059 1CEF                     l4155 1F39                     l4147 1F10  
                   l4139 1EE7                     l2811 09A9                     l2803 0996  
                   l2539 1B18                     l2547 1B2C                     l2563 1A51  
                   l2555 1A38                     l2491 1BDC                     l4411 0505  
                   l4331 01DD                     l4323 0190                     l4315 018C  
                   l4251 1609                     l4243 15EF                     l4235 15BB  
                   l4227 1591                     l4219 1574                     l3429 18CA  
                   l3373 08EF                     l3365 08C3                     l3357 0897  
                   l3349 086B                     l3381 08F8                     l4181 1C4D  
                   l3437 18DD                     l4173 19CD                     l4165 19B6  
                   l4069 1B63                     l4093 1E85                     l4085 1E21  
                   l4077 1DE3                     l2741 14E7                     l2733 14D4  
                   l2725 14C9                     l2717 14BA                     l2709 14A4  
                   l2661 13B2                     l2653 1370                     l2645 1363  
                   l2637 1353                     l2629 1343                     l2581 12D4  
                   l2573 12C2                     l3197 1D7D                     l4157 1F3A  
                   l4149 1F1A                     l2901 0C89                     l2821 0A2B  
                   l2813 09B9                     l2805 099B                     l2565 1A57  
                   l2557 1A3F                     l2493 1BE1                     l4421 0537  
                   l4413 0510                     l4405 04C4                     l4341 0297  
                   l4333 01E4                     l4317 018E                     l4309 011F  
                   l4261 1678                     l4253 1630                     l4245 15F3  
                   l4229 15A4                     l3383 092D                     l3375 08F6  
                   l3367 08CE                     l3359 08A2                     l4191 1C71  
                   l4183 1C51                     l4175 1C30                     l4167 19BB  
                   l4087 1E45                     l4079 1DF9                     l2751 1525  
                   l2743 14F5                     l2735 14DA                     l2719 14BF  
                   l2727 14CB                     l2671 13D0                     l2663 13B6  
                   l2655 1387                     l2647 1367                     l2639 1357  
                   l2583 12D9                     l2591 12E9                     l2575 12C9  
                   l3199 1D92                     l2903 0C94                     l2831 0A99  
                   l2823 0A47                     l2815 09C6                     l2807 09A0  
                   l2567 1A5E                     l2559 1A43                     l2495 1BE3  
                   l2487 1BD7                     l4423 053E                     l4431 05B2  
                   l4415 0511                     l4351 02C6                     l4343 02A0  
                   l4335 01E9                     l4327 01C7                     l4271 16C3  
                   l4263 1683                     l4255 1649                     l4247 15F7  
                   l4239 15BF                     l3393 093A                     l3385 0931  
                   l3369 08D9                     l4193 1C7F                     l4185 1C5B  
                   l4177 1C39                     l4169 19C2                     l4089 1E49  
                   l2761 1539                     l2753 152D                     l2745 14F9  
                   l2681 13F9                     l2729 14CF                     l2673 13D5  
                   l2665 13B7                     l2657 13A7                     l2649 136B  
                   l2593 12F1                     l2585 12DE                     l2577 12CF  
                   l4097 1B81                     l2841 0B29                     l2833 0AA9  
                   l2825 0A63                     l2817 09E3                     l2569 1A64  
                   l2497 1BE7                     l2489 1BD8                     l4425 0543  
                   l4417 0520                     l4409 04FB                     l4361 02EC  
                   l4353 02CD                     l4345 02A4                     l4337 0244  
                   l4329 01D1                     l4281 1763                     l4273 16C9  
                   l4265 1689                     l4257 164D                     l4249 1605  
                   l4433 05C0                     l3811 1A79                     l3387 0934  
                   l4195 1C85                     l4187 1C61                     l4179 1C3F  
                   l2763 1544                     l2755 1532                     l2747 1517  
                   l2739 14E2                     l2691 140D                     l2683 13FD  
                   l2667 13C0                     l2659 13B0                     l2595 12F6  
                   l2587 12E6                     l2579 12D3                     l4099 1B8B  
                   l2851 0BBD                     l2843 0B39                     l2835 0AC6  
                   l2827 0A6C                     l2819 09FF                     l2771 0949  
                   l2499 1BEC                     l4427 05AA                     l4419 0529  
                   l4371 040B                     l4363 030A                     l4355 02DC  
                   l4347 02AA                     l4339 0283                     l4291 001D  
                   l4283 178C                     l4275 16E8                     l4267 169C  
                   l4259 1651                     l4435 05D4                     l4451 1191  
                   l3821 1A9C                     l3813 1A80                     l4197 1C90  
                   l4189 1C6C                     l2765 1548                     l2757 1533  
                   l2749 1520                     l2693 1416                     l2685 1406  
                   l2677 13DE                     l2669 13C4                     l2597 12FC  
                   l2589 12E7                     l2861 0BE2                     l2853 0BCB  
                   l2845 0B66                     l2837 0ADF                     l2829 0A7C  
                   l2781 0960                     l2773 094D                     l2941 05E2  
                   l3901 0CA6                     l4381 047F                     l4365 0365  
                   l4373 0466                     l4357 02E1                     l4349 02B7  
                   l4293 0046                     l4277 1733                     l4269 16BF  
                   l4285 1794                     l4461 11AD                     l4453 1196  
                   l4445 1182                     l3823 1AA3                     l3815 1A87  
                   l3807 1A6A                     l4199 1AA7                     l2935 18E0  
                   l2759 1537                     l2687 1408                     l2679 13F5  
                   l2695 141B                     l2599 12FD                     l2871 0C05  
                   l2855 0BD4                     l2863 0BE8                     l2847 0B8C  
                   l2839 0AFC                     l2791 0979                     l2783 0962  
                   l2775 094E                     l2767 093C                     l3831 1D0A  
                   l3911 0D9E                     l3903 0CAD                     l4391 04A3  
                   l4375 046E                     l4367 03C0                     l4359 02E8  
                   l4295 006D                     l4287 17A3                     l4279 175A  
                   l4383 0486                     l4471 1260                     l4463 11B6  
                   l4455 119B                     l4447 1187                     l3817 1A8E  
                   l3809 1A6E                     l2937 18E6                     l3681 193B  
                   l2697 1431                     l2689 140C                     l2881 0C24  
                   l2865 0BEC                     l2857 0BD8                     l2849 0BB4  
                   l2793 097A                     l2785 096A                     l2777 0953  
                   l2769 0943                     l2953 07A2                     l3841 1D1B  
                   l3833 1D0C                     l3825 1CFE                     l3921 0E5A  
                   l4393 04AE                     l4385 0497                     l4377 0475  
                   l4369 03FF                     l4297 007C                     l4289 17EA  
                   l4545 15D3                     l4481 12AA                     l4473 128D  
                   l4465 11C3                     l4457 11A0                     l4449 118C  
                   l3819 1A95                     l3683 193F                     l4547 0900  
                   l2699 146F                     l2891 0C6A                     l2883 0C3D  
                   l2875 0C0D                     l2867 0BED                     l2859 0BD9  
                   l2795 097F                     l2787 096F                     l2779 0958  
                   l2947 06F1                     l2939 05DC                     l3851 1D33  
                   l3843 1D21                     l3835 1D10                     l3827 1D01  
                   l3915 0E26                     l4395 04B4                     l4387 049B  
                   l4379 0479                     l4299 00A5                     l4483 12B0  
                   l4475 1295                     l4467 11D0                     l4459 11A5  
                   l3677 192E                     l2893 0C74                     l2877 0C12  
                   l2885 0C43                     l2869 0BF1                     l2797 0984  
                   l2789 0975                     l2949 06F7                     l3853 1D44  
                   l3845 1D24                     l3861 1D58                     l3837 1D15  
                   l3829 1D05                     l3933 0FD3                     l3909 0D97  
                   l4397 04BC                     l4389 049F                     l4477 129E  
                   l4469 1218                     l3679 1930                     l3871 196D  
                   l3951 1F78                     l3943 1F5F                     l2895 0C76  
                   l2887 0C50                     l2879 0C20                     l2799 098C  
                   l3863 1D5D                     l3855 1D4A                     l3847 1D2B  
                   l3839 1D19                     l3927 0F44                     l3919 0E53  
                   l4399 04C2                     l4479 12A4                     l3881 197F  
                   l3873 1973                     l3961 1FA9                     l3953 1F87  
                   l3937 1F43                     l2897 0C84                     l2889 0C5B  
                   l3865 1D62                     l3857 1D4B                     l3849 1D2F  
                   l3929 0F4B                     l3891 1921                     l3883 1912  
                   l3875 1976                     l3963 1FB3                     l3955 1F89  
                   l3939 1F56                     l2899 0C88                     l3859 1D52  
                   l3893 1924                     l3885 1915                     l3877 1979  
                   l3869 196A                     l3965 1FB4                     l3957 1F92  
                   l3949 1F72                     l2997 07E7                     l3895 1927  
                   l3887 191B                     l3879 197C                     l3991 10CF  
                   l3983 1FE7                     l3975 1FCE                     l3967 1FBC  
                   l3959 1F9B                     l2999 07E8                     l3889 191E  
                   l3985 1FF7                     l3969 1FC6                     l3977 1FE0  
                   l3897 0CA0                     l3995 10D8                     l3899 0CA4  
                   ?_isr 0070                     l3989 10C2                     ?_pin 0070  
                   STR_1 10A0                     STR_2 10AF                     _CMDs 1969  
                   u3110 1C04                     u3111 1C03                     u4000 0BD8  
                   u3200 1B18                     u3120 1C0E                     _LEER 18CF  
                   u4001 0BD7                     u3201 1B17                     u3121 1C0D  
                   u3105 1BF6                     u3300 12D9                     u4100 0C6A  
                   u4020 0BEC                     u3220 1B2C                     u3140 1C21  
                   u3301 12D8                     u4101 0C69                     u4021 0BEB  
                   u3221 1B2B                     u3205 1B14                     u3141 1C20  
                   u3125 1C0A                     u3310 12DE                     u4110 0C88  
                   u4030 0BF1                     u3230 1A35                     u3150 1C26  
                   u3070 1BDC                     u3311 12DD                     u4111 0C87  
                   u4031 0BF0                     u4015 0BDB                     u3215 1B20  
                   u3231 1A34                     u3151 1C25                     u3135 1C15  
                   u3071 1BDB                     u4120 18E6                     u3400 1393  
                   u3320 12FC                     u4040 0C05                     u3160 1AF5  
                   u3080 1BE7                     u4121 18E5                     u3321 12FB  
                   u4105 0C66                     u4041 0C04                     u3161 1AF4  
                   u3081 1BE6                     u3410 13A7                     u3330 1307  
                   u4050 0C0C                     u3250 1A47                     u4130 05E2  
                   u3090 1BF2                     u3411 13A6                     u3331 1306  
                   u4051 0C0B                     u3251 1A46                     u4131 05E1  
                   u3091 1BF1                     u3500 140C                     u3420 13B6  
                   u3340 130D                     u4060 0C12                     u3180 1B07  
                   u3260 1A51                     u3501 140B                     u3421 13B5  
                   u3341 130C                     u4061 0C11                     u3181 1B06  
                   u3261 1A50                     u3245 1A39                     u4205 07AD  
                   u3350 1312                     u4070 0C24                     u3351 1311  
                   u4071 0C23                     u3175 1AF9                     u3600 14BF  
                   u3520 1431                     u3440 13CC                     u3360 132B  
                   u4080 0C33                     u3280 1A64                     u3601 14BE  
                   u3521 1430                     u3441 13CB                     u3361 132A  
                   u3281 1A63                     u3265 1A4D                     u4145 05FF  
                   u3610 14C9                     u3450 13D0                     u3370 132F  
                   u3290 12D3                     u4090 0C50                     u4170 06F7  
                   u6010 0F4B                     u3611 14C8                     u3531 1448  
                   u3523 142D                     u3515 140F                     u3451 13CF  
                   u3435 13B9                     u3371 132E                     u3291 12D2  
                   u4091 0C4F                     u3195 1B08                     u3275 1A58  
                   u4171 06F6                     u4155 065B                     u6011 0F4A  
                   u3700 1520                     u3620 14CF                     u3540 145C  
                   u3532 1449                     u3460 13D5                     u3380 1387  
                   u6100 1FC2                     u3701 151F                     u3621 14CE  
                   u3541 145D                     u3533 144E                     u3461 13D4  
                   u3381 1386                     u6101 1FC1                     u4085 0C2E  
                   u4165 06B0                     u6005 0F03                     u5230 0938  
                   u3710 1525                     u3630 14D4                     u3550 147A  
                   u3542 1462                     u3534 144F                     u3390 1392  
                   u6110 1FC6                     u5231 0937                     u3711 1524  
                   u3631 14D3                     u3551 1479                     u3543 1463  
                   u3535 1454                     u3471 13E7                     u3391 1390  
                   u6111 1FC5                     u4095 0C4C                     u3720 1532  
                   u3640 14DA                     u3560 149F                     u3536 1455  
                   u3480 13F9                     u3472 13EE                     u6120 1FCD  
                   u3800 0984                     u7000 046D                     u3721 1531  
                   u3641 14D9                     u3561 149E                     u3481 13F8  
                   u3473 13F5                     u3385 1383                     u6121 1FCC  
                   u3801 0983                     u4185 0714                     u6025 0F5E  
                   u7001 046C                     u3730 1537                     u3650 14E1  
                   u3570 14A4                     u3490 13FD                     u6210 1124  
                   u6050 1F56                     u3810 099B                     u7010 0485  
                   u3731 1536                     u3651 14E0                     u3571 14A3  
                   u3491 13FC                     u6211 1123                     u6051 1F55  
                   u3811 099A                     u4195 0761                     u6035 0F9A  
                   u7011 0484                     u3740 1548                     u3660 14E7  
                   u6300 1177                     u6140 1FDF                     u6060 1F70  
                   u2860 19E4                     u3820 09A0                     u4380 07EE  
                   u7100 0537                     u7020 049F                     u3741 1547  
                   u3661 14E6                     u6301 1176                     u6205 110B  
                   u6141 1FDE                     u6061 1F6F                     u2861 19E3  
                   u3821 099F                     u4381 07ED                     u6045 0FD6  
                   u7101 0536                     u7021 049E                     u3670 14F9  
                   u3590 14BA                     u6310 1CA8                     u6230 1142  
                   u6150 1FE6                     u3750 094D                     u4390 07F4  
                   u7030 04B4                     u3671 14F8                     u3591 14B9  
                   u6311 1CA7                     u6231 1141                     u6215 1120  
                   u6151 1FE5                     u6135 1FCF                     u3911 0AEE  
                   u3831 09F1                     u3751 094C                     u4391 07F3  
                   u7031 04B3                     u6400 1B7D                     u3680 1508  
                   u6240 1146                     u6080 1FA9                     u2880 19F8  
                   u3912 0AF5                     u3832 09F8                     u3760 0953  
                   u7120 05C0                     u7040 04BC                     u6401 1B7C  
                   u3585 14AF                     u6241 1145                     u6225 1135  
                   u6081 1FA8                     u2881 19F7                     u3921 0B1B  
                   u3913 0AFC                     u3905 0AC8                     u3841 0A0D  
                   u3833 09FF                     u3761 0952                     u7121 05BF  
                   u7041 04BB                     u6410 1DF9                     u3690 1517  
                   u6330 1CBC                     u6250 114D                     u6170 1FF7  
                   u3922 0B22                     u3842 0A14                     u3770 0958  
                   u7130 05D4                     u6411 1DF8                     u3691 1516  
                   u6331 1CBB                     u6251 114C                     u6171 1FF6  
                   u6075 1F94                     u2875 19EB                     u3931 0B48  
                   u3923 0B29                     u3851 0A39                     u3843 0A1B  
                   u3771 0957                     u7131 05D1                     u7115 0552  
                   u5700 1A6E                     u6420 1E15                     u4900 1DA1  
                   u6500 1B9F                     u4660 198F                     u6180 10CF  
                   u3940 0B72                     u3932 0B4F                     u3852 0A40  
                   u3780 0979                     u7060 04FA                     _RCIF 0065  
                   u5701 1A6D                     u6405 1B79                     u6421 1E14  
                   u3685 1503                     u4901 1DA0                     u6325 1CAD  
                   u6501 1B9E                     u4661 198E                     u6181 10CE  
                   u6165 1FE9                     u6085 1FA5                     u3933 0B56  
                   u3861 0A55                     u3853 0A47                     u3781 0978  
                   u7061 04F9                     u5710 1A79                     u6430 1E21  
                   u4910 1DA8                     u6350 1CD7                     u6510 1BB1  
                   u6270 115F                     u6190 10E3                     u3862 0A5C  
                   u3790 097F                     u7070 0505                     u5711 1A78  
                   u7207 1C6E                     u6431 1E20                     u4911 1DA7  
                   u6351 1CD6                     u6511 1BB0                     u6271 115E  
                   u6191 10E2                     u6095 1FB5                     u3951 0B7E  
                   u3863 0A63                     u3791 097E                     u7071 0504  
                   u7055 04C7                     u5720 1A80                     u6600 1EF6  
                   u6280 1166                     u3960 0B9A                     u3952 0B85  
                   u5800 1D21                     u7080 0510                     u5721 1A7F  
                   u7217 1C7B                     u6441 1E30                     u6345 1CBE  
                   u6601 1EF5                     u6281 1165                     u6265 114F  
                   u3953 0B8C                     u3945 0B6D                     u3881 0A8B  
                   u5801 1D20                     u7081 050F                     u7065 04F6  
                   u5730 1A87                     u6450 1E49                     u6442 1E31  
                   u4930 1DBA                     u6370 1CF5                     u6530 1BCE  
                   u4690 19A9                     u3882 0A92                     u7090 0520  
                   u5731 1A86                     u7227 1C87                     u6451 1E48  
                   u6443 1E36                     u4931 1DB9                     u6371 1CF4  
                   u6355 1CD3                     u6531 1BCD                     u6515 1BAD  
                   u4691 19A8                     u4675 1996                     u3971 0BA6  
                   u3891 0AB8                     u3883 0A99                     u3875 0A65  
                   u7091 051F                     u7147 12B8                     u5740 1A8E  
                   u6700 1AB4                     u5660 194A                     u6380 1B47  
                   u6444 1E37                     u4940 1DC1                     u6620 1F06  
                   u6540 1E8F                     u3972 0BAD                     u3892 0ABF  
                   u5820 1D33                     u5741 1A8D                     u5661 1949  
                   u7237 1C92                     u7157 1C34                     u6381 1B46  
                   u6461 1E58                     u6445 1E3C                     u4941 1DC0  
                   u4925 1DAA                     u6365 1CE7                     u6525 1BC0  
                   u4685 199D                     u6621 1F05                     u6541 1E8E  
                   u3973 0BB4                     u3965 0B95                     u3893 0AC6  
                   u5821 1D32                     u7085 050C                     u5750 1A95  
                   u6710 1AD8                     u6390 1B63                     u6470 1E83  
                   u6462 1E59                     u6446 1E3D                     u4870 18F1  
                   u6630 1F0C                     u6550 1E93                     u5751 1A94  
                   u7247 1983                     u7167 1C43                     u6391 1B62  
                   u6471 1E82                     u6463 1E5E                     u4871 18F0  
                   u6631 1F0B                     u6615 1EFB                     u6551 1E92  
                   u6295 1169                     u5815 1D25                     u7095 051C  
                   u5760 1A9C                     u6720 1AEA                     u6464 1E5F  
                   u4960 1DD2                     u4880 1D74                     u6480 1B8B  
                   u6640 1F10                     u6560 1EB3                     u5840 1D44  
                   u6800 16C3                     u5761 1A9B                     u6721 1AE9  
                   u7257 092F                     u7177 1C4F                     u6465 1E64  
                   u4961 1DD1                     u4881 1D73                     u6481 1B8A  
                   u6641 1F0F                     u6561 1EB2                     u3985 0BB6  
                   u5841 1D43                     u5905 0CCF                     u6801 16C2  
                   u5770 1AA3                     u6466 1E65                     u4970 1DD7  
                   u4890 1D8B                     u6650 1F25                     u5930 0D9E  
                   u6810 175A                     u6730 155A                     u5771 1AA2  
                   u7267 1929                     u7187 1C59                     u6475 1E7F  
                   u4971 1DD6                     u4955 1DC4                     u3995 0BCD  
                   u5835 1D34                     u5931 0D9D                     u5915 0D0B  
                   u6811 1759                     u6731 1559                     u6660 1F35  
                   u6580 1ED4                     u5860 1D58                     u5780 1D05  
                   u6900 01C6                     u6820 178C                     u6740 1574  
                   u7197 1C63                     u6661 1F34                     u6581 1ED3  
                   u5861 1D57                     u5845 1D40                     u5781 1D04  
                   u5925 0D56                     u6901 01C5                     u6821 178B  
                   u6741 1573                     u6670 1F39                     u5870 1D5D  
                   u5790 1D10                     u6910 01D1                     u6830 17A3  
                   u6750 15B8                     u4895 1D86                     u6495 1B90  
                   u6671 1F38                     u6655 1F20                     u6575 1EC6  
                   u5871 1D5C                     u5855 1D4C                     u5791 1D0F  
                   u6911 01D0                     u6831 17A2                     u6751 15B7  
                   u6680 19B6                     u5880 0CA4                     u6920 01DD  
                   u6840 001D                     u6760 15EF                     u6681 19B5  
                   u5945 0DB1                     u5881 0CA3                     u6921 01DC  
                   u6905 01C2                     u6841 17FA                     u6761 15EC  
                   u6690 19C8                     u5970 0E5A                     u5890 0CAD  
                   u6850 0046                     u6770 15F3                     u6691 19C7  
                   u6595 1EE8                     u5971 0E59                     u5955 0DED  
                   u5891 0CAC                     u6851 0045                     u6835 179F  
                   u6771 15F2                     u6940 0296                     u6860 006D  
                   u6780 1630                     u5965 0E29                     u6941 0295  
                   u6861 006C                     u6845 17F5                     u6781 162F  
                   u6950 02B7                     u6870 007C                     u6790 1678  
                   u6951 02B6                     u6935 01EC                     u6871 007B  
                   u6791 1677                     u6960 02C6                     u6880 00A5  
                   u5985 0E7C                     u6961 02C5                     u6881 00A4  
                   u6970 02E1                     u5995 0EB8                     u6971 02E0  
                   u6955 02B3                     u6875 0078                     u6965 02C2  
                   u6895 0193                     u6985 0368                     u6995 040E  
                   _TXIF 0064                     _adc0 00DB                     _adc1 00DA  
                   _baud 18CA                     _main 1182                     _num1 00D5  
                   _num2 00D1                     btemp 007E                     pin@a 0073  
                   start 000C             _sprintf$1270 00B8       __size_of_ESCString 001E  
                  ??_ESC 0073                    ??_isr 0070                    ??_pin 0073  
                  CMDs@a 0076                    ?_CMDs 0070                    ?_LEER 0070  
                  ?_baud 0070            ___fltol@sign1 0060          __end_of___fladd 154A  
                  ?_main 0070          __end_of___awdiv 1D67          __end_of___flneg 18F4  
        __end_of___awmod 1C30          __end_of___flmul 0C9D          __end_of___flsub 0853  
        __end_of___fltol 1DE3                    _ANSEL 0188          __end_of___lldiv 1CFE  
        ___awdiv@divisor 0020          __end_of___llmod 1BD7          __end_of___lwdiv 1B31  
                  i1l245 18CF                    i1l248 18D6                    i1l185 1A28  
        __end_of___lwmod 1A69                    i1l188 1A28          ___awdiv@counter 0025  
                  _RCREG 001A                    _SPBRG 0099                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
        __end_of_dpowers 10A0                    _scale 0C9D          __end_of_isdigit 07F8  
        __end_of_limpiar 1901                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 05D9             __end_of_CMDs 1989  
           __end_of_LEER 18D7          __initialization 000F             __end_of_baud 18CF  
           __end_of_main 12C2                   ??_CMDs 0074                   ??_LEER 0070  
                 ??_baud 0073                   ??_main 006C     __size_of__tdiv_to_l_ 00BD  
              ??_ESCchar 0074        __end_of_ESCString 194B                   _ADCON1 009F  
       ___llmod@dividend 002C                   ?_scale 0044                   _ADRESH 001E  
       ___awdiv@dividend 0022                   _ANSELH 0189                   _BUFFER 00DC  
                 _ESCLCD 1AA7                   i1l3403 18CF                   i1l3405 18D5  
                 i1l3691 1A0C                   i1l3693 1A12                   i1l3685 19FD  
                 i1l3695 1A1A                   i1l3687 1A03                   i1l3697 1A20  
                 i1l3689 1A04                   u524_20 18D5                   u524_21 18D4  
                 u567_20 1A03                   u567_21 1A02                   u568_20 1A12  
                 u568_21 1A11                   u569_20 1A20                   u569_21 1A1F  
       __end_of___xxtofl 1F43         __end_of__powers_ 1044                   ___flge 1DE3  
                 ___fleq 1B31                ??___fladd 0060                   ___wmul 1989  
              ??___awdiv 0024                ??___flneg 0077                ??___awmod 0077  
              ??___flmul 0032                ??___flsub 007A                ??___fltol 005B  
              ??___lldiv 0073                ??___llmod 0079                ??___lwdiv 0079  
              ??___lwmod 0077                   _config 194B                   _cursor 19AE  
                 _fround 05D9         ___awdiv@quotient 0027          ___awmod@divisor 0073  
        ___awmod@counter 0078                ??_isdigit 0073                ??_limpiar 0077  
     __size_of__Umul8_16 0029                   saved_w 007E                ??_sprintf 00B3  
             ___flge@ff1 0020               ___flge@ff2 0024             ___xxtofl@arg 0026  
           ___xxtofl@exp 0025             ___xxtofl@val 0073               ___fleq@ff1 0020  
             ___fleq@ff2 0024  __end_of__initialization 0019               ___flneg@f1 0073  
             ___fltol@f1 0057           __pcstackCOMMON 0070            __end_of_scale 1000  
             __div_to_l_ 10C2       __size_of_configADC 00E9       __size_of_configLCD 0066  
     __size_of_config_rx 0008       __size_of_config_tx 0010          __div_to_l_@exp1 0079  
        __div_to_l_@cntr 0078                  ??_scale 0048                  ESCLCD@a 0076  
                ESCLCD@i 0078          __div_to_l_@quot 0074                  ?_ESCLCD 0076  
             __pbssBANK1 00D1            __div_to_l_@f1 0020            __div_to_l_@f2 0024  
      __end_of__Umul8_16 19FD               __pmaintext 1182                  ?___flge 0020  
                ?___fleq 0020                  ?___wmul 0073               __pintentry 0004  
                ?_config 0070                  ?_cursor 0077                  ?_fround 0044  
              ?___xxtofl 0073                  _ESCchar 1911               __stringtab 1000  
        __size_of_ESCLCD 0044        __end_of__npowers_ 1078               _scale$1269 0052  
      __end_of_configADC 093C        __end_of_configLCD 1C96        __end_of_config_rx 18DF  
      __end_of_config_tx 1911          __size_of___flge 00A4          __size_of___fleq 0050  
                ___fladd 12C2                  ___awdiv 1CFE                  ___flneg 18E9  
                ___awmod 1BD7                  ___flmul 093C                  ___flsub 0803  
                ___fltol 1D67                  ___lldiv 1C96          __size_of___wmul 0025  
                ___llmod 1B81                  ___lwdiv 1AEB                  ___lwmod 1A2F  
        __size_of_config 001E                _ANSELbits 0188          __size_of_cursor 0026  
        __size_of_fround 020D                  __ptext1 154A                  __ptext2 0C9D  
                __ptext3 1BD7                  __ptext4 1CFE                  __ptext5 07E6  
                __ptext6 05D9                  __ptext7 1A2F                  __ptext8 1AEB  
                __ptext9 093C             __size_of_ESC 000A              ?__div_to_l_ 0020  
                _lectura 007A                  _dpowers 1078                  _isdigit 07E6  
           __size_of_isr 0032             __size_of_pin 003E               ??___xxtofl 0020  
                _limpiar 18F4         ___awmod@dividend 0075                  _sprintf 154A  
                clrloop0 07F9     end_of_initialization 0019                _ESCString 192D  
                cursor@a 0020                  cursor@b 0077                  cursor@x 0021  
        ___lldiv@divisor 0020          ___lldiv@counter 0078                _RCSTAbits 0018  
                psplit$0 B0033           __tdiv_to_l_@f1 0020           __tdiv_to_l_@f2 0024  
          ??__tdiv_to_l_ 0073              ___fladd@grs 006B            ___xxtofl@sign 0024  
              _TRISAbits 0085                _TRISBbits 0086                _TRISCbits 0087  
              _TRISEbits 0089               ?_ESCString 0070              ___flmul@grs 0038  
         __end_of_ESCLCD 1AEB                _TXSTAbits 0098      __size_of__div_to_l_ 00C0  
         __end_of___flge 1E87           __end_of___fleq 1B81           __end_of___wmul 19AE  
      pnum$text1_split_1 0033              _BAUDCTLbits 0187           __end_of_config 1969  
         __end_of_cursor 19D4           __end_of_fround 07E6      start_initialization 000F  
            __end_of_ESC 18E9               ESCString@a 0075               ESCString@i 0076  
    __end_of__tdiv_to_l_ 2000              __end_of_isr 1A2F              __end_of_pin 1AA7  
               ??_ESCLCD 0020          ___llmod@divisor 0028          ___llmod@counter 0030  
               ??___flge 0073                 ??___fleq 0073                 ??___wmul 0077  
              __Umul8_16 19D4                 ??_config 0073                 ??_cursor 0078  
               ??_fround 0048            sprintf@tmpval 00C1                ___fladd@a 005C  
              ___fladd@b 0058               fround@prec 0057                ___flmul@a 002E  
               ?_ESCchar 0070                ___flmul@b 002A              __pbssCOMMON 007A  
              ___flsub@a 00A0                ___flsub@b 00A4                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0        __size_of___xxtofl 00BC  
           _isdigit$1079 0073                 ESCchar@a 0075              ??_ESCString 0074  
            sprintf@flag 00BD              sprintf@eexp 00BF              sprintf@fval 00CA  
            sprintf@prec 00CE         ___lwdiv@dividend 0022                 ?___fladd 0058  
               ?___awdiv 0020                 ?___flneg 0073                 ?___awmod 0073  
               ?___flmul 002A                 ?___flsub 00A0                 ?___fltol 0057  
               ?___lldiv 0020                 ?___llmod 0028                __npowers_ 1044  
             ?__Umul8_16 0073                 ?___lwdiv 0020                 ?___lwmod 0073  
              _configADC 0853                _configLCD 1C30                _config_rx 18D7  
              _config_tx 1901                __pstrings 1000              __tdiv_to_l_ 1F43  
           ??__div_to_l_ 0073                 ?_isdigit 0070                 ?_limpiar 0070  
       ___lwdiv@quotient 0024                 ?_sprintf 00A8           __size_of_scale 0363  
      interrupt_function 0004           ___wmul@product 0077                clear_ram0 07F8  
               _PIE1bits 008C                 _PIR1bits 000C       __end_of__div_to_l_ 1182  
             ?_configADC 0070               ?_configLCD 0070               ?_config_rx 0070  
             ?_config_tx 0070               _ADCON0bits 001F              __stringbase 100F  
      ___wmul@multiplier 0073         __size_of_ESCchar 001C              ??__Umul8_16 0075  
       __size_of___fladd 0288         __size_of___awdiv 0069         __size_of___flneg 000B  
       __size_of___awmod 0059         __size_of___flmul 0361         __size_of___flsub 0050  
       __size_of___fltol 007C         __size_of___lldiv 0068         __size_of___llmod 0056  
       __size_of___lwdiv 0046         __size_of___lwmod 003A              _fround$1267 0053  
            _fround$1268 004F       __end_of__stringtab 1010               _ANSELHbits 0189  
             sprintf@val 00C5                 ___xxtofl 1E87         __size_of_isdigit 0012  
       __size_of_limpiar 000D          ___lwdiv@divisor 0020          ___lwdiv@counter 0026  
               __ptext10 19D4                 __ptext11 1F43                 __ptext20 18E9  
               __ptext12 10C2                 __ptext21 1DE3                 __ptext13 1E87  
               __ptext30 194B                 __ptext22 1B31                 __ptext14 1989  
               __ptext31 18CA                 __ptext23 18F4                 __ptext15 1B81  
               __ptext32 192D                 __ptext24 19AE                 __ptext16 1C96  
               __ptext33 18DF                 __ptext25 1901                 __ptext17 1D67  
               __ptext34 1AA7                 __ptext26 18D7                 __ptext18 0803  
               __ptext35 1911                 __ptext27 1C30                 __ptext19 12C2  
               __ptext36 1A69                 __ptext28 1969                 __ptext37 19FD  
               __ptext29 0853                 __ptext38 18CF                 __powers_ 1010  
       __size_of_sprintf F08F            __size_of_CMDs 0020            __size_of_LEER 0008  
          __size_of_baud 0005            __size_of_main 0140                pnum$text1 000B  
            ??_configADC 0073              ??_configLCD 0077              ??_config_rx 0073  
            ??_config_tx 0073               _INTCONbits 000B                 isdigit@c 0074  
               scale@scl 0056                 intlevel1 0000                sprintf@ap 00BC  
       __tdiv_to_l_@exp1 002D         __tdiv_to_l_@cntr 002C                sprintf@sp 00C9  
       __tdiv_to_l_@quot 0028         ___lwmod@dividend 0075         ___lldiv@dividend 0024  
              stringcode 100A             ?__tdiv_to_l_ 0020   __Umul8_16@multiplicand 0073  
               sprintf@c 00D0                 sprintf@f 00A8         ___lldiv@quotient 0074  
        ___lwmod@divisor 0073          ___lwmod@counter 0078                 stringdir 100A  
               stringtab 1000            ___fladd@signs 0068             ___fladd@aexp 0069  
           ___fladd@bexp 006A     __Umul8_16@multiplier 0024              configADC@ch 0075  
      __Umul8_16@product 0020  
