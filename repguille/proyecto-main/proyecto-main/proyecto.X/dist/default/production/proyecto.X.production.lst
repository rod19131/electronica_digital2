

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 02 03:24:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0088                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  008F                     	;# 
   525  0090                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  0105                     	;# 
   544  0107                     	;# 
   545  0108                     	;# 
   546  0109                     	;# 
   547  010C                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  0185                     	;# 
   553  0187                     	;# 
   554  0188                     	;# 
   555  0189                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558                           
   559                           	psect	strings
   560  0800                     __pstrings:
   561  0800                     stringtab:
   562  0800                     __stringtab:
   563                           
   564                           ;	String table - string pointers are 1 byte each
   565  0800  1BFF               	btfsc	btemp+1,7
   566  0801  280A               	ljmp	stringcode
   567  0802  1383               	bcf	3,7
   568  0803  187F               	btfsc	btemp+1,0
   569  0804  1783               	bsf	3,7
   570  0805  0800               	movf	0,w
   571  0806  0A84               	incf	4,f
   572  0807  1903               	skipnz
   573  0808  0AFF               	incf	btemp+1,f
   574  0809  0008               	return
   575  080A                     stringcode:
   576  080A                     stringdir:
   577  080A  3008               	movlw	high stringdir
   578  080B  008A               	movwf	10
   579  080C  0804               	movf	4,w
   580  080D  0A84               	incf	4,f
   581  080E  0782               	addwf	2,f
   582  080F                     __stringbase:
   583  080F  3400               	retlw	0
   584  0810                     __end_of__stringtab:
   585  0810                     __powers_:
   586  0810  3400               	retlw	0
   587  0811  3400               	retlw	0
   588  0812  3480               	retlw	128
   589  0813  343F               	retlw	63
   590  0814  3400               	retlw	0
   591  0815  3400               	retlw	0
   592  0816  3420               	retlw	32
   593  0817  3441               	retlw	65
   594  0818  3400               	retlw	0
   595  0819  3400               	retlw	0
   596  081A  34C8               	retlw	200
   597  081B  3442               	retlw	66
   598  081C  3400               	retlw	0
   599  081D  3400               	retlw	0
   600  081E  347A               	retlw	122
   601  081F  3444               	retlw	68
   602  0820  3400               	retlw	0
   603  0821  3440               	retlw	64
   604  0822  341C               	retlw	28
   605  0823  3446               	retlw	70
   606  0824  3400               	retlw	0
   607  0825  3450               	retlw	80
   608  0826  34C3               	retlw	195
   609  0827  3447               	retlw	71
   610  0828  3400               	retlw	0
   611  0829  3424               	retlw	36
   612  082A  3474               	retlw	116
   613  082B  3449               	retlw	73
   614  082C  3480               	retlw	128
   615  082D  3496               	retlw	150
   616  082E  3418               	retlw	24
   617  082F  344B               	retlw	75
   618  0830  3420               	retlw	32
   619  0831  34BC               	retlw	188
   620  0832  34BE               	retlw	190
   621  0833  344C               	retlw	76
   622  0834  3428               	retlw	40
   623  0835  346B               	retlw	107
   624  0836  346E               	retlw	110
   625  0837  344E               	retlw	78
   626  0838  34F9               	retlw	249
   627  0839  3402               	retlw	2
   628  083A  3415               	retlw	21
   629  083B  3450               	retlw	80
   630  083C  34EC               	retlw	236
   631  083D  3478               	retlw	120
   632  083E  34AD               	retlw	173
   633  083F  3460               	retlw	96
   634  0840  34CA               	retlw	202
   635  0841  34F2               	retlw	242
   636  0842  3449               	retlw	73
   637  0843  3471               	retlw	113
   638  0844                     __end_of__powers_:
   639  0844                     __npowers_:
   640  0844  3400               	retlw	0
   641  0845  3400               	retlw	0
   642  0846  3480               	retlw	128
   643  0847  343F               	retlw	63
   644  0848  34CD               	retlw	205
   645  0849  34CC               	retlw	204
   646  084A  34CC               	retlw	204
   647  084B  343D               	retlw	61
   648  084C  340A               	retlw	10
   649  084D  34D7               	retlw	215
   650  084E  3423               	retlw	35
   651  084F  343C               	retlw	60
   652  0850  346F               	retlw	111
   653  0851  3412               	retlw	18
   654  0852  3483               	retlw	131
   655  0853  343A               	retlw	58
   656  0854  3417               	retlw	23
   657  0855  34B7               	retlw	183
   658  0856  34D1               	retlw	209
   659  0857  3438               	retlw	56
   660  0858  34AC               	retlw	172
   661  0859  34C5               	retlw	197
   662  085A  3427               	retlw	39
   663  085B  3437               	retlw	55
   664  085C  34BD               	retlw	189
   665  085D  3437               	retlw	55
   666  085E  3486               	retlw	134
   667  085F  3435               	retlw	53
   668  0860  3495               	retlw	149
   669  0861  34BF               	retlw	191
   670  0862  34D6               	retlw	214
   671  0863  3433               	retlw	51
   672  0864  3477               	retlw	119
   673  0865  34CC               	retlw	204
   674  0866  342B               	retlw	43
   675  0867  3432               	retlw	50
   676  0868  345F               	retlw	95
   677  0869  3470               	retlw	112
   678  086A  3489               	retlw	137
   679  086B  3430               	retlw	48
   680  086C  34FF               	retlw	255
   681  086D  34E6               	retlw	230
   682  086E  34DB               	retlw	219
   683  086F  342E               	retlw	46
   684  0870  3408               	retlw	8
   685  0871  34E5               	retlw	229
   686  0872  343C               	retlw	60
   687  0873  341E               	retlw	30
   688  0874  3460               	retlw	96
   689  0875  3442               	retlw	66
   690  0876  34A2               	retlw	162
   691  0877  340D               	retlw	13
   692  0878                     __end_of__npowers_:
   693  0878                     _dpowers:
   694  0878  3401               	retlw	1
   695  0879  3400               	retlw	0
   696  087A  3400               	retlw	0
   697  087B  3400               	retlw	0
   698  087C  340A               	retlw	10
   699  087D  3400               	retlw	0
   700  087E  3400               	retlw	0
   701  087F  3400               	retlw	0
   702  0880  3464               	retlw	100
   703  0881  3400               	retlw	0
   704  0882  3400               	retlw	0
   705  0883  3400               	retlw	0
   706  0884  34E8               	retlw	232
   707  0885  3403               	retlw	3
   708  0886  3400               	retlw	0
   709  0887  3400               	retlw	0
   710  0888  3410               	retlw	16
   711  0889  3427               	retlw	39
   712  088A  3400               	retlw	0
   713  088B  3400               	retlw	0
   714  088C  34A0               	retlw	160
   715  088D  3486               	retlw	134
   716  088E  3401               	retlw	1
   717  088F  3400               	retlw	0
   718  0890  3440               	retlw	64
   719  0891  3442               	retlw	66
   720  0892  340F               	retlw	15
   721  0893  3400               	retlw	0
   722  0894  3480               	retlw	128
   723  0895  3496               	retlw	150
   724  0896  3498               	retlw	152
   725  0897  3400               	retlw	0
   726  0898  3400               	retlw	0
   727  0899  34E1               	retlw	225
   728  089A  34F5               	retlw	245
   729  089B  3405               	retlw	5
   730  089C  3400               	retlw	0
   731  089D  34CA               	retlw	202
   732  089E  349A               	retlw	154
   733  089F  343B               	retlw	59
   734  08A0                     __end_of_dpowers:
   735  0013                     _SSPBUF	set	19
   736  0014                     _SSPCON	set	20
   737  0019                     _TXREG	set	25
   738  000D                     _PIR2bits	set	13
   739  0018                     _RCSTAbits	set	24
   740  0009                     _PORTE	set	9
   741  0008                     _PORTD	set	8
   742  0007                     _PORTC	set	7
   743  000B                     _INTCONbits	set	11
   744  001A                     _RCREG	set	26
   745  000C                     _PIR1bits	set	12
   746  0005                     _PORTA	set	5
   747  0006                     _PORTB	set	6
   748  001F                     _ADCON0bits	set	31
   749  0063                     _SSPIF	set	99
   750  005E                     _PEIE	set	94
   751  005F                     _GIE	set	95
   752  0039                     _RC1	set	57
   753  0038                     _RC0	set	56
   754  0047                     _RD7	set	71
   755  0046                     _RD6	set	70
   756  0045                     _RD5	set	69
   757  0044                     _RD4	set	68
   758  0043                     _RD3	set	67
   759  0042                     _RD2	set	66
   760  0041                     _RD1	set	65
   761  0040                     _RD0	set	64
   762  0091                     _SSPCON2bits	set	145
   763  0087                     _TRISCbits	set	135
   764  0094                     _SSPSTAT	set	148
   765  0093                     _SSPADD	set	147
   766  0091                     _SSPCON2	set	145
   767  009A                     _SPBRGH	set	154
   768  0099                     _SPBRG	set	153
   769  0098                     _TXSTAbits	set	152
   770  008C                     _PIE1bits	set	140
   771  008F                     _OSCCONbits	set	143
   772  0087                     _TRISC	set	135
   773  0088                     _TRISD	set	136
   774  0086                     _TRISB	set	134
   775  0085                     _TRISA	set	133
   776  009F                     _ADCON1bits	set	159
   777  0463                     _SSPIE	set	1123
   778  043C                     _TRISC4	set	1084
   779  043B                     _TRISC3	set	1083
   780  010C                     _EEDAT	set	268
   781  010D                     _EEADR	set	269
   782  018D                     _EECON2	set	397
   783  018C                     _EECON1bits	set	396
   784  0187                     _BAUDCTLbits	set	391
   785  0188                     _ANSEL	set	392
   786  08A0                     STR_2:
   787  08A0  3425               	retlw	37	;'%'
   788  08A1  342E               	retlw	46	;'.'
   789  08A2  3431               	retlw	49	;'1'
   790  08A3  3466               	retlw	102	;'f'
   791  08A4  3420               	retlw	32	;' '
   792  08A5  3420               	retlw	32	;' '
   793  08A6  3425               	retlw	37	;'%'
   794  08A7  342E               	retlw	46	;'.'
   795  08A8  3431               	retlw	49	;'1'
   796  08A9  3466               	retlw	102	;'f'
   797  08AA  3420               	retlw	32	;' '
   798  08AB  3420               	retlw	32	;' '
   799  08AC  3425               	retlw	37	;'%'
   800  08AD  342E               	retlw	46	;'.'
   801  08AE  3431               	retlw	49	;'1'
   802  08AF  3466               	retlw	102	;'f'
   803  08B0  3420               	retlw	32	;' '
   804  08B1  3425               	retlw	37	;'%'
   805  08B2  3464               	retlw	100	;'d'
   806  08B3  340A               	retlw	10
   807  08B4  3400               	retlw	0
   808  08B5                     STR_1:
   809  08B5  3453               	retlw	83	;'S'
   810  08B6  3431               	retlw	49	;'1'
   811  08B7  3420               	retlw	32	;' '
   812  08B8  3420               	retlw	32	;' '
   813  08B9  3453               	retlw	83	;'S'
   814  08BA  3432               	retlw	50	;'2'
   815  08BB  3420               	retlw	32	;' '
   816  08BC  3420               	retlw	32	;' '
   817  08BD  3453               	retlw	83	;'S'
   818  08BE  3433               	retlw	51	;'3'
   819  08BF  3420               	retlw	32	;' '
   820  08C0  3420               	retlw	32	;' '
   821  08C1  3453               	retlw	83	;'S'
   822  08C2  3434               	retlw	52	;'4'
   823  08C3  3400               	retlw	0
   824                           
   825                           	psect	cinit
   826  07E7                     start_initialization:	
   827                           ; #config settings
   828                           
   829  07E7                     __initialization:
   830                           
   831                           ; Clear objects allocated to BANK0
   832  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   833  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   834  07E9  01EE               	clrf	__pbssBANK0& (0+127)
   835                           
   836                           ; Clear objects allocated to BANK1
   837  07EA  1383               	bcf	3,7	;select IRP bank0
   838  07EB  30E1               	movlw	low __pbssBANK1
   839  07EC  0084               	movwf	4
   840  07ED  30ED               	movlw	low (__pbssBANK1+12)
   841  07EE  160A  158A  214A  120A  118A  	fcall	clear_ram0
   842                           
   843                           ; Clear objects allocated to BANK3
   844  07F3  1783               	bsf	3,7	;select IRP bank2
   845  07F4  3090               	movlw	low __pbssBANK3
   846  07F5  0084               	movwf	4
   847  07F6  30A4               	movlw	low (__pbssBANK3+20)
   848  07F7  160A  158A  214A  120A  118A  	fcall	clear_ram0
   849  07FC                     end_of_initialization:	
   850                           ;End of C runtime variable initialization code
   851                           
   852  07FC                     __end_of__initialization:
   853  07FC  0183               	clrf	3
   854  07FD  160A  118A  2B63   	ljmp	_main	;jump to C main() function
   855                           
   856                           	psect	bssBANK0
   857  006E                     __pbssBANK0:
   858  006E                     _a:
   859  006E                     	ds	1
   860                           
   861                           	psect	bssBANK1
   862  00E1                     __pbssBANK1:
   863  00E1                     _S2:
   864  00E1                     	ds	4
   865  00E5                     _S1:
   866  00E5                     	ds	4
   867  00E9                     _s3:
   868  00E9                     	ds	1
   869  00EA                     _pc:
   870  00EA                     	ds	1
   871  00EB                     _s2:
   872  00EB                     	ds	1
   873  00EC                     _s1:
   874  00EC                     	ds	1
   875                           
   876                           	psect	bssBANK3
   877  0190                     __pbssBANK3:
   878  0190                     _volt:
   879  0190                     	ds	16
   880  01A0                     _S3:
   881  01A0                     	ds	4
   882                           
   883                           	psect	clrtext
   884  194A                     clear_ram0:	
   885                           ;	Called with FSR containing the base address, and
   886                           ;	W with the last address+1
   887                           
   888  194A  0064               	clrwdt	;clear the watchdog before getting into this loop
   889  194B                     clrloop0:
   890  194B  0180               	clrf	0	;clear RAM location pointed to by FSR
   891  194C  0A84               	incf	4,f	;increment pointer
   892  194D  0604               	xorwf	4,w	;XOR with final address
   893  194E  1903               	btfsc	3,2	;have we reached the end yet?
   894  194F  3400               	retlw	0	;all done for this memory range, return
   895  1950  0604               	xorwf	4,w	;XOR again to restore value
   896  1951  294B               	goto	clrloop0	;do the next byte
   897                           
   898                           	psect	cstackBANK1
   899  00A0                     __pcstackBANK1:
   900  00A0                     ?_sprintf:
   901  00A0                     sprintf@f:	
   902                           ; 2 bytes @ 0x0
   903                           
   904                           
   905                           ; 1 bytes @ 0x0
   906  00A0                     	ds	15
   907  00AF                     ??_sprintf:
   908                           
   909                           ; 1 bytes @ 0xF
   910  00AF                     	ds	5
   911  00B4                     _sprintf$1353:
   912                           
   913                           ; 4 bytes @ 0x14
   914  00B4                     	ds	4
   915  00B8                     sprintf@ap:
   916                           
   917                           ; 1 bytes @ 0x18
   918  00B8                     	ds	1
   919  00B9                     sprintf@flag:
   920                           
   921                           ; 2 bytes @ 0x19
   922  00B9                     	ds	2
   923  00BB                     sprintf@eexp:
   924                           
   925                           ; 2 bytes @ 0x1B
   926  00BB                     	ds	2
   927  00BD                     sprintf@tmpval:
   928                           
   929                           ; 4 bytes @ 0x1D
   930  00BD                     	ds	4
   931  00C1                     sprintf@val:
   932                           
   933                           ; 4 bytes @ 0x21
   934  00C1                     	ds	4
   935  00C5                     sprintf@sp:
   936                           
   937                           ; 1 bytes @ 0x25
   938  00C5                     	ds	1
   939  00C6                     sprintf@fval:
   940                           
   941                           ; 4 bytes @ 0x26
   942  00C6                     	ds	4
   943  00CA                     sprintf@prec:
   944                           
   945                           ; 2 bytes @ 0x2A
   946  00CA                     	ds	2
   947  00CC                     sprintf@c:
   948                           
   949                           ; 1 bytes @ 0x2C
   950  00CC                     	ds	1
   951  00CD                     ??_main:
   952                           
   953                           ; 1 bytes @ 0x2D
   954  00CD                     	ds	4
   955  00D1                     main@volt:
   956                           
   957                           ; 16 bytes @ 0x31
   958  00D1                     	ds	16
   959                           
   960                           	psect	cstackCOMMON
   961  0070                     __pcstackCOMMON:
   962  0070                     ?_isdigit:
   963  0070                     ?___fleq:	
   964                           ; 1 bit 
   965                           
   966  0070                     ?___flge:	
   967                           ; 1 bit 
   968                           
   969  0070                     ?_setup:	
   970                           ; 1 bit 
   971                           
   972  0070                     ?_I2C_Master_Start:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ??_I2C_Master_Start:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_I2C_Master_Write:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_I2C_Master_Stop:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ??_I2C_Master_Stop:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_enviocadena:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ??_isdigit:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_Lcd_Port:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ??_Lcd_Port:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?_Lcd_Cmd:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ?_Lcd_Clear:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_Lcd_Init:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?_Lcd_Write_Char:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?_ADC_config:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ??_ADC_config:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?_main:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_enviocaracter:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ??_enviocaracter:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ?_I2C_Master_Wait:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ??_I2C_Master_Wait:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ?_I2C_Master_Read:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ?__Umul8_16:	
  1036                           ; 2 bytes @ 0x0
  1037                           
  1038  0070                     ?___wmul:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041  0070                     ?___awmod:	
  1042                           ; 2 bytes @ 0x0
  1043                           
  1044  0070                     ?___lwmod:	
  1045                           ; 2 bytes @ 0x0
  1046                           
  1047  0070                     ?__tdiv_to_l_:	
  1048                           ; 2 bytes @ 0x0
  1049                           
  1050  0070                     ?__div_to_l_:	
  1051                           ; 4 bytes @ 0x0
  1052                           
  1053  0070                     ?___lldiv:	
  1054                           ; 4 bytes @ 0x0
  1055                           
  1056  0070                     ?___flneg:	
  1057                           ; 4 bytes @ 0x0
  1058                           
  1059  0070                     ?___xxtofl:	
  1060                           ; 4 bytes @ 0x0
  1061                           
  1062  0070                     Lcd_Port@a:	
  1063                           ; 4 bytes @ 0x0
  1064                           
  1065  0070                     enviocaracter@a:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     __Umul8_16@multiplicand:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     _isdigit$1146:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     I2C_Master_Write@d:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     I2C_Master_Read@a:	
  1078                           ; 2 bytes @ 0x0
  1079                           
  1080  0070                     ___wmul@multiplier:	
  1081                           ; 2 bytes @ 0x0
  1082                           
  1083  0070                     ___awmod@divisor:	
  1084                           ; 2 bytes @ 0x0
  1085                           
  1086  0070                     ___lwmod@divisor:	
  1087                           ; 2 bytes @ 0x0
  1088                           
  1089  0070                     ___lldiv@divisor:	
  1090                           ; 2 bytes @ 0x0
  1091                           
  1092  0070                     __div_to_l_@f1:	
  1093                           ; 4 bytes @ 0x0
  1094                           
  1095  0070                     ___fleq@ff1:	
  1096                           ; 4 bytes @ 0x0
  1097                           
  1098  0070                     ___flge@ff1:	
  1099                           ; 4 bytes @ 0x0
  1100                           
  1101  0070                     ___flneg@f1:	
  1102                           ; 4 bytes @ 0x0
  1103                           
  1104  0070                     __tdiv_to_l_@f1:	
  1105                           ; 4 bytes @ 0x0
  1106                           
  1107  0070                     ___xxtofl@val:	
  1108                           ; 4 bytes @ 0x0
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x0
  1112  0070                     	ds	1
  1113  0071                     ??_enviocadena:
  1114  0071                     ??_Lcd_Cmd:	
  1115                           ; 1 bytes @ 0x1
  1116                           
  1117  0071                     ??_Lcd_Write_Char:	
  1118                           ; 1 bytes @ 0x1
  1119                           
  1120  0071                     isdigit@c:	
  1121                           ; 1 bytes @ 0x1
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x1
  1125  0071                     	ds	1
  1126  0072                     ??_I2C_Master_Write:
  1127  0072                     ??_I2C_Master_Read:	
  1128                           ; 1 bytes @ 0x2
  1129                           
  1130  0072                     ??__Umul8_16:	
  1131                           ; 1 bytes @ 0x2
  1132                           
  1133  0072                     Lcd_Write_Char@a:	
  1134                           ; 1 bytes @ 0x2
  1135                           
  1136  0072                     ADC_config@frec:	
  1137                           ; 1 bytes @ 0x2
  1138                           
  1139  0072                     enviocadena@cadena:	
  1140                           ; 1 bytes @ 0x2
  1141                           
  1142  0072                     ___wmul@multiplicand:	
  1143                           ; 1 bytes @ 0x2
  1144                           
  1145  0072                     ___awmod@dividend:	
  1146                           ; 2 bytes @ 0x2
  1147                           
  1148  0072                     ___lwmod@dividend:	
  1149                           ; 2 bytes @ 0x2
  1150                           
  1151                           
  1152                           ; 2 bytes @ 0x2
  1153  0072                     	ds	1
  1154  0073                     ??_setup:
  1155  0073                     ?_Lcd_Write_String:	
  1156                           ; 1 bytes @ 0x3
  1157                           
  1158  0073                     Lcd_Cmd@a:	
  1159                           ; 1 bytes @ 0x3
  1160                           
  1161  0073                     Lcd_Write_String@a:	
  1162                           ; 1 bytes @ 0x3
  1163                           
  1164                           
  1165                           ; 2 bytes @ 0x3
  1166  0073                     	ds	1
  1167  0074                     ??_Lcd_Clear:
  1168  0074                     ?_Lcd_Set_Cursor:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171  0074                     ??_Lcd_Init:	
  1172                           ; 1 bytes @ 0x4
  1173                           
  1174  0074                     ??___wmul:	
  1175                           ; 1 bytes @ 0x4
  1176                           
  1177  0074                     ??___awmod:	
  1178                           ; 1 bytes @ 0x4
  1179                           
  1180  0074                     ??___flneg:	
  1181                           ; 1 bytes @ 0x4
  1182                           
  1183  0074                     ??___lwmod:	
  1184                           ; 1 bytes @ 0x4
  1185                           
  1186  0074                     ??___xxtofl:	
  1187                           ; 1 bytes @ 0x4
  1188                           
  1189  0074                     Lcd_Set_Cursor@b:	
  1190                           ; 1 bytes @ 0x4
  1191                           
  1192  0074                     I2C_Master_Read@temp:	
  1193                           ; 1 bytes @ 0x4
  1194                           
  1195  0074                     ___wmul@product:	
  1196                           ; 2 bytes @ 0x4
  1197                           
  1198  0074                     __Umul8_16@product:	
  1199                           ; 2 bytes @ 0x4
  1200                           
  1201  0074                     ___lldiv@dividend:	
  1202                           ; 2 bytes @ 0x4
  1203                           
  1204  0074                     __div_to_l_@f2:	
  1205                           ; 4 bytes @ 0x4
  1206                           
  1207  0074                     ___fleq@ff2:	
  1208                           ; 4 bytes @ 0x4
  1209                           
  1210  0074                     ___flge@ff2:	
  1211                           ; 4 bytes @ 0x4
  1212                           
  1213  0074                     __tdiv_to_l_@f2:	
  1214                           ; 4 bytes @ 0x4
  1215                           
  1216                           
  1217                           ; 4 bytes @ 0x4
  1218  0074                     	ds	1
  1219  0075                     ??_Lcd_Set_Cursor:
  1220  0075                     ??_Lcd_Write_String:	
  1221                           ; 1 bytes @ 0x5
  1222                           
  1223  0075                     ___awmod@counter:	
  1224                           ; 1 bytes @ 0x5
  1225                           
  1226  0075                     ___lwmod@counter:	
  1227                           ; 1 bytes @ 0x5
  1228                           
  1229                           
  1230                           ; 1 bytes @ 0x5
  1231  0075                     	ds	1
  1232  0076                     ?___lwdiv:
  1233  0076                     Lcd_Set_Cursor@a:	
  1234                           ; 2 bytes @ 0x6
  1235                           
  1236  0076                     ___awmod@sign:	
  1237                           ; 1 bytes @ 0x6
  1238                           
  1239  0076                     ___lwdiv@divisor:	
  1240                           ; 1 bytes @ 0x6
  1241                           
  1242  0076                     __Umul8_16@word_mpld:	
  1243                           ; 2 bytes @ 0x6
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x6
  1247  0076                     	ds	1
  1248  0077                     ?___awdiv:
  1249  0077                     Lcd_Set_Cursor@temp:	
  1250                           ; 2 bytes @ 0x7
  1251                           
  1252  0077                     ___awdiv@divisor:	
  1253                           ; 1 bytes @ 0x7
  1254                           
  1255                           
  1256                           ; 2 bytes @ 0x7
  1257  0077                     	ds	1
  1258  0078                     ??__tdiv_to_l_:
  1259  0078                     ??__div_to_l_:	
  1260                           ; 1 bytes @ 0x8
  1261                           
  1262  0078                     ??___lldiv:	
  1263                           ; 1 bytes @ 0x8
  1264                           
  1265  0078                     ??___fleq:	
  1266                           ; 1 bytes @ 0x8
  1267                           
  1268  0078                     ??___flge:	
  1269                           ; 1 bytes @ 0x8
  1270                           
  1271  0078                     __Umul8_16@multiplier:	
  1272                           ; 1 bytes @ 0x8
  1273                           
  1274  0078                     ___xxtofl@sign:	
  1275                           ; 1 bytes @ 0x8
  1276                           
  1277  0078                     Lcd_Write_String@i:	
  1278                           ; 1 bytes @ 0x8
  1279                           
  1280  0078                     ___lwdiv@dividend:	
  1281                           ; 2 bytes @ 0x8
  1282                           
  1283                           
  1284                           ; 2 bytes @ 0x8
  1285  0078                     	ds	1
  1286  0079                     ___xxtofl@exp:
  1287  0079                     ___awdiv@dividend:	
  1288                           ; 1 bytes @ 0x9
  1289                           
  1290  0079                     ___lldiv@quotient:	
  1291                           ; 2 bytes @ 0x9
  1292                           
  1293                           
  1294                           ; 4 bytes @ 0x9
  1295  0079                     	ds	1
  1296  007A                     ??___lwdiv:
  1297  007A                     ___xxtofl@arg:	
  1298                           ; 1 bytes @ 0xA
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0xA
  1302  007A                     	ds	1
  1303  007B                     ??___awdiv:
  1304  007B                     ___lwdiv@quotient:	
  1305                           ; 1 bytes @ 0xB
  1306                           
  1307                           
  1308                           ; 2 bytes @ 0xB
  1309  007B                     	ds	2
  1310  007D                     ___lldiv@counter:
  1311  007D                     ___lwdiv@counter:	
  1312                           ; 1 bytes @ 0xD
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0xD
  1316  007D                     	ds	1
  1317  007E                     ??___flsub:
  1318                           
  1319                           	psect	cstackBANK0
  1320  0020                     __pcstackBANK0:	
  1321                           ; 1 bytes @ 0xE
  1322                           
  1323  0020                     ?_I2C_Master_Init:
  1324  0020                     ?___llmod:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0020                     ___awdiv@counter:	
  1328                           ; 4 bytes @ 0x0
  1329                           
  1330  0020                     I2C_Master_Init@c:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0020                     __div_to_l_@quot:	
  1334                           ; 4 bytes @ 0x0
  1335                           
  1336  0020                     __tdiv_to_l_@quot:	
  1337                           ; 4 bytes @ 0x0
  1338                           
  1339  0020                     ___llmod@divisor:	
  1340                           ; 4 bytes @ 0x0
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0x0
  1344  0020                     	ds	1
  1345  0021                     ___awdiv@sign:
  1346                           
  1347                           ; 1 bytes @ 0x1
  1348  0021                     	ds	1
  1349  0022                     ___awdiv@quotient:
  1350                           
  1351                           ; 2 bytes @ 0x2
  1352  0022                     	ds	2
  1353  0024                     ??_I2C_Master_Init:
  1354  0024                     ?___flmul:	
  1355                           ; 1 bytes @ 0x4
  1356                           
  1357  0024                     __div_to_l_@cntr:	
  1358                           ; 4 bytes @ 0x4
  1359                           
  1360  0024                     __tdiv_to_l_@cntr:	
  1361                           ; 1 bytes @ 0x4
  1362                           
  1363  0024                     ___llmod@dividend:	
  1364                           ; 1 bytes @ 0x4
  1365                           
  1366  0024                     ___flmul@b:	
  1367                           ; 4 bytes @ 0x4
  1368                           
  1369                           
  1370                           ; 4 bytes @ 0x4
  1371  0024                     	ds	1
  1372  0025                     __div_to_l_@exp1:
  1373  0025                     __tdiv_to_l_@exp1:	
  1374                           ; 1 bytes @ 0x5
  1375                           
  1376                           
  1377                           ; 1 bytes @ 0x5
  1378  0025                     	ds	3
  1379  0028                     ??___llmod:
  1380  0028                     ___flmul@a:	
  1381                           ; 1 bytes @ 0x8
  1382                           
  1383                           
  1384                           ; 4 bytes @ 0x8
  1385  0028                     	ds	1
  1386  0029                     ___llmod@counter:
  1387                           
  1388                           ; 1 bytes @ 0x9
  1389  0029                     	ds	3
  1390  002C                     ??___flmul:
  1391                           
  1392                           ; 1 bytes @ 0xC
  1393  002C                     	ds	5
  1394  0031                     ___flmul@sign:
  1395                           
  1396                           ; 1 bytes @ 0x11
  1397  0031                     	ds	1
  1398  0032                     ___flmul@grs:
  1399                           
  1400                           ; 4 bytes @ 0x12
  1401  0032                     	ds	4
  1402  0036                     ___flmul@aexp:
  1403                           
  1404                           ; 1 bytes @ 0x16
  1405  0036                     	ds	1
  1406  0037                     ___flmul@bexp:
  1407                           
  1408                           ; 1 bytes @ 0x17
  1409  0037                     	ds	1
  1410  0038                     ___flmul@prod:
  1411                           
  1412                           ; 4 bytes @ 0x18
  1413  0038                     	ds	4
  1414  003C                     ___flmul@temp:
  1415                           
  1416                           ; 2 bytes @ 0x1C
  1417  003C                     	ds	2
  1418  003E                     ?_fround:
  1419  003E                     ?_scale:	
  1420                           ; 4 bytes @ 0x1E
  1421                           
  1422                           
  1423                           ; 4 bytes @ 0x1E
  1424  003E                     	ds	4
  1425  0042                     ??_fround:
  1426  0042                     ??_scale:	
  1427                           ; 1 bytes @ 0x22
  1428                           
  1429                           
  1430                           ; 1 bytes @ 0x22
  1431  0042                     	ds	7
  1432  0049                     _fround$1351:
  1433                           
  1434                           ; 4 bytes @ 0x29
  1435  0049                     	ds	3
  1436  004C                     _scale$1352:
  1437                           
  1438                           ; 4 bytes @ 0x2C
  1439  004C                     	ds	1
  1440  004D                     _fround$1350:
  1441                           
  1442                           ; 4 bytes @ 0x2D
  1443  004D                     	ds	3
  1444  0050                     scale@scl:
  1445                           
  1446                           ; 1 bytes @ 0x30
  1447  0050                     	ds	1
  1448  0051                     ?___fltol:
  1449  0051                     fround@prec:	
  1450                           ; 4 bytes @ 0x31
  1451                           
  1452  0051                     ___fltol@f1:	
  1453                           ; 1 bytes @ 0x31
  1454                           
  1455                           
  1456                           ; 4 bytes @ 0x31
  1457  0051                     	ds	1
  1458  0052                     ?___fladd:
  1459  0052                     ___fladd@b:	
  1460                           ; 4 bytes @ 0x32
  1461                           
  1462                           
  1463                           ; 4 bytes @ 0x32
  1464  0052                     	ds	3
  1465  0055                     ??___fltol:
  1466                           
  1467                           ; 1 bytes @ 0x35
  1468  0055                     	ds	1
  1469  0056                     ___fladd@a:
  1470                           
  1471                           ; 4 bytes @ 0x36
  1472  0056                     	ds	4
  1473  005A                     ??___fladd:
  1474  005A                     ___fltol@sign1:	
  1475                           ; 1 bytes @ 0x3A
  1476                           
  1477                           
  1478                           ; 1 bytes @ 0x3A
  1479  005A                     	ds	1
  1480  005B                     ___fltol@exp1:
  1481                           
  1482                           ; 1 bytes @ 0x3B
  1483  005B                     	ds	7
  1484  0062                     ___fladd@signs:
  1485                           
  1486                           ; 1 bytes @ 0x42
  1487  0062                     	ds	1
  1488  0063                     ___fladd@aexp:
  1489                           
  1490                           ; 1 bytes @ 0x43
  1491  0063                     	ds	1
  1492  0064                     ___fladd@bexp:
  1493                           
  1494                           ; 1 bytes @ 0x44
  1495  0064                     	ds	1
  1496  0065                     ___fladd@grs:
  1497                           
  1498                           ; 1 bytes @ 0x45
  1499  0065                     	ds	1
  1500  0066                     ?___flsub:
  1501  0066                     ___flsub@a:	
  1502                           ; 4 bytes @ 0x46
  1503                           
  1504                           
  1505                           ; 4 bytes @ 0x46
  1506  0066                     	ds	4
  1507  006A                     ___flsub@b:
  1508                           
  1509                           ; 4 bytes @ 0x4A
  1510  006A                     	ds	4
  1511                           
  1512                           	psect	maintext
  1513  1363                     __pmaintext:	
  1514 ;;
  1515 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1516 ;;
  1517 ;; *************** function _main *****************
  1518 ;; Defined at:
  1519 ;;		line 46 in file "pro.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  volt           16   49[BANK1 ] unsigned char [16]
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : B00/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0      16       0       0
  1535 ;;      Temps:          0       0       4       0       0
  1536 ;;      Totals:         0       0      20       0       0
  1537 ;;Total ram usage:       20 bytes
  1538 ;; Hardware stack levels required when called: 4
  1539 ;; This function calls:
  1540 ;;		_I2C_Master_Init
  1541 ;;		_I2C_Master_Read
  1542 ;;		_I2C_Master_Start
  1543 ;;		_I2C_Master_Stop
  1544 ;;		_I2C_Master_Write
  1545 ;;		_Lcd_Clear
  1546 ;;		_Lcd_Init
  1547 ;;		_Lcd_Set_Cursor
  1548 ;;		_Lcd_Write_String
  1549 ;;		___flmul
  1550 ;;		___xxtofl
  1551 ;;		_enviocadena
  1552 ;;		_setup
  1553 ;;		_sprintf
  1554 ;; This function is called by:
  1555 ;;		Startup code after reset
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _main
  1561  1363                     _main:
  1562  1363                     l3931:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1565                           
  1566                           
  1567                           ;pro.c: 47:     S1= s1*0.0260;
  1568  1363  160A  158A  2348  160A  118A  	fcall	_setup
  1569  1368                     l3933:
  1570                           
  1571                           ;pro.c: 48:     S2= s2*0.0196;;pro.c: 49:     S3 = s3-68;
  1572  1368  160A  158A  2418  160A  118A  	fcall	_Lcd_Init
  1573  136D                     l3935:
  1574                           
  1575                           ;pro.c: 50:     sprintf(volt, "%.1f  %.1f  %.1f %d\n", S1, S2, S3, pc);
  1576  136D  160A  158A  2186  160A  118A  	fcall	_Lcd_Clear
  1577  1372                     l3937:
  1578                           
  1579                           ;pro.c: 51:     enviocadena(volt);
  1580  1372  01F4               	clrf	Lcd_Set_Cursor@b
  1581  1373  0AF4               	incf	Lcd_Set_Cursor@b,f
  1582  1374  3001               	movlw	1
  1583  1375  160A  158A  2204  160A  118A  	fcall	_Lcd_Set_Cursor
  1584  137A                     l3939:
  1585                           
  1586                           ;pro.c: 52:     Lcd_Set_Cursor(2,1);
  1587  137A  30A6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1588  137B  00F3               	movwf	Lcd_Write_String@a
  1589  137C  3080               	movlw	128
  1590  137D  00F4               	movwf	Lcd_Write_String@a+1
  1591  137E  120A  118A  2004  160A  118A  	fcall	_Lcd_Write_String
  1592  1383                     l3941:
  1593                           
  1594                           ;pro.c: 53:     Lcd_Write_String(volt);
  1595  1383  3000               	movlw	0
  1596  1384  1283               	bcf	3,5	;RP0=0, select bank0
  1597  1385  1303               	bcf	3,6	;RP1=0, select bank0
  1598  1386  00A3               	movwf	I2C_Master_Init@c+3
  1599  1387  3001               	movlw	1
  1600  1388  00A2               	movwf	I2C_Master_Init@c+2
  1601  1389  3086               	movlw	134
  1602  138A  00A1               	movwf	I2C_Master_Init@c+1
  1603  138B  30A0               	movlw	160
  1604  138C  00A0               	movwf	I2C_Master_Init@c
  1605  138D  160A  158A  2298  160A  118A  	fcall	_I2C_Master_Init
  1606  1392                     l3943:
  1607                           
  1608                           ;pro.c: 56:         switch (RCREG){
  1609  1392  160A  158A  2152  160A  118A  	fcall	_I2C_Master_Start
  1610  1397                     l3945:
  1611                           
  1612                           ;pro.c: 57:             case 43:
  1613  1397  3051               	movlw	81
  1614  1398  00F0               	movwf	I2C_Master_Write@d
  1615  1399  3000               	movlw	0
  1616  139A  00F1               	movwf	I2C_Master_Write@d+1
  1617  139B  160A  158A  2164  160A  118A  	fcall	_I2C_Master_Write
  1618  13A0                     l3947:
  1619                           
  1620                           ;pro.c: 58:                 pc++;
  1621  13A0  3000               	movlw	0
  1622  13A1  00F0               	movwf	I2C_Master_Read@a
  1623  13A2  00F1               	movwf	I2C_Master_Read@a+1
  1624  13A3  160A  118A  2003  160A  118A  	fcall	_I2C_Master_Read
  1625  13A8  0870               	movf	?_I2C_Master_Read,w
  1626  13A9  1283               	bcf	3,5	;RP0=0, select bank0
  1627  13AA  1303               	bcf	3,6	;RP1=0, select bank0
  1628  13AB  0086               	movwf	6	;volatile
  1629  13AC                     l3949:
  1630                           
  1631                           ;pro.c: 59:                 break;
  1632  13AC  160A  158A  215B  160A  118A  	fcall	_I2C_Master_Stop
  1633  13B1                     l3951:
  1634                           
  1635                           ;pro.c: 60: 
  1636  13B1  3082               	movlw	130
  1637  13B2  1683               	bsf	3,5	;RP0=1, select bank1
  1638  13B3  1303               	bcf	3,6	;RP1=0, select bank1
  1639  13B4  00CE               	movwf	(??_main^(0+128)+1)
  1640  13B5  30DD               	movlw	221
  1641  13B6  00CD               	movwf	??_main^(0+128)
  1642  13B7                     u5747:
  1643  13B7  0BCD               	decfsz	??_main^(0+128),f
  1644  13B8  2BB7               	goto	u5747
  1645  13B9  0BCE               	decfsz	(??_main^(0+128)+1),f
  1646  13BA  2BB7               	goto	u5747
  1647  13BB                     l3953:
  1648                           
  1649                           ;pro.c: 61:             case 45:
  1650  13BB  160A  158A  2152  160A  118A  	fcall	_I2C_Master_Start
  1651  13C0                     l3955:
  1652                           
  1653                           ;pro.c: 62:                 pc--;
  1654  13C0  3061               	movlw	97
  1655  13C1  00F0               	movwf	I2C_Master_Write@d
  1656  13C2  3000               	movlw	0
  1657  13C3  00F1               	movwf	I2C_Master_Write@d+1
  1658  13C4  160A  158A  2164  160A  118A  	fcall	_I2C_Master_Write
  1659  13C9                     l3957:
  1660                           
  1661                           ;pro.c: 63:                 break;
  1662  13C9  3000               	movlw	0
  1663  13CA  00F0               	movwf	I2C_Master_Read@a
  1664  13CB  00F1               	movwf	I2C_Master_Read@a+1
  1665  13CC  160A  118A  2003  160A  118A  	fcall	_I2C_Master_Read
  1666  13D1  0870               	movf	?_I2C_Master_Read,w
  1667  13D2  1683               	bsf	3,5	;RP0=1, select bank1
  1668  13D3  1303               	bcf	3,6	;RP1=0, select bank1
  1669  13D4  00CD               	movwf	??_main^(0+128)
  1670  13D5  084D               	movf	??_main^(0+128),w
  1671  13D6  00EB               	movwf	_s2^(0+128)
  1672  13D7                     l3959:
  1673                           
  1674                           ;pro.c: 64:                 }
  1675  13D7  160A  158A  215B  160A  118A  	fcall	_I2C_Master_Stop
  1676  13DC                     l3961:
  1677                           
  1678                           ;pro.c: 65:     }
  1679  13DC  3082               	movlw	130
  1680  13DD  1683               	bsf	3,5	;RP0=1, select bank1
  1681  13DE  1303               	bcf	3,6	;RP1=0, select bank1
  1682  13DF  00CE               	movwf	(??_main^(0+128)+1)
  1683  13E0  30DD               	movlw	221
  1684  13E1  00CD               	movwf	??_main^(0+128)
  1685  13E2                     u5757:
  1686  13E2  0BCD               	decfsz	??_main^(0+128),f
  1687  13E3  2BE2               	goto	u5757
  1688  13E4  0BCE               	decfsz	(??_main^(0+128)+1),f
  1689  13E5  2BE2               	goto	u5757
  1690  13E6                     l3963:
  1691                           
  1692                           ;pro.c: 66:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1693  13E6  160A  158A  2152  160A  118A  	fcall	_I2C_Master_Start
  1694  13EB                     l3965:
  1695                           
  1696                           ;pro.c: 67:     }return;}
  1697  13EB  3080               	movlw	128
  1698  13EC  00F0               	movwf	I2C_Master_Write@d
  1699  13ED  3000               	movlw	0
  1700  13EE  00F1               	movwf	I2C_Master_Write@d+1
  1701  13EF  160A  158A  2164  160A  118A  	fcall	_I2C_Master_Write
  1702  13F4                     l3967:
  1703                           
  1704                           ;pro.c: 68: 
  1705  13F4  30F3               	movlw	243
  1706  13F5  00F0               	movwf	I2C_Master_Write@d
  1707  13F6  3000               	movlw	0
  1708  13F7  00F1               	movwf	I2C_Master_Write@d+1
  1709  13F8  160A  158A  2164  160A  118A  	fcall	_I2C_Master_Write
  1710  13FD                     l3969:
  1711                           
  1712                           ;pro.c: 69: void setup(void){
  1713  13FD  160A  158A  215B  160A  118A  	fcall	_I2C_Master_Stop
  1714  1402                     l3971:
  1715                           
  1716                           ;pro.c: 70: 
  1717  1402  3002               	movlw	2
  1718  1403  1683               	bsf	3,5	;RP0=1, select bank1
  1719  1404  1303               	bcf	3,6	;RP1=0, select bank1
  1720  1405  00CF               	movwf	(??_main^(0+128)+2)
  1721  1406  3004               	movlw	4
  1722  1407  00CE               	movwf	(??_main^(0+128)+1)
  1723  1408  30B9               	movlw	185
  1724  1409  00CD               	movwf	??_main^(0+128)
  1725  140A                     u5767:
  1726  140A  0BCD               	decfsz	??_main^(0+128),f
  1727  140B  2C0A               	goto	u5767
  1728  140C  0BCE               	decfsz	(??_main^(0+128)+1),f
  1729  140D  2C0A               	goto	u5767
  1730  140E  0BCF               	decfsz	(??_main^(0+128)+2),f
  1731  140F  2C0A               	goto	u5767
  1732  1410  2C11               	nop2
  1733  1411                     l3973:
  1734                           
  1735                           ;pro.c: 71:     ANSEL = 0;
  1736  1411  160A  158A  2152  160A  118A  	fcall	_I2C_Master_Start
  1737  1416                     l3975:
  1738                           
  1739                           ;pro.c: 72: 
  1740  1416  3081               	movlw	129
  1741  1417  00F0               	movwf	I2C_Master_Write@d
  1742  1418  3000               	movlw	0
  1743  1419  00F1               	movwf	I2C_Master_Write@d+1
  1744  141A  160A  158A  2164  160A  118A  	fcall	_I2C_Master_Write
  1745  141F                     l3977:
  1746                           
  1747                           ;pro.c: 73: 
  1748  141F  3000               	movlw	0
  1749  1420  00F0               	movwf	I2C_Master_Read@a
  1750  1421  00F1               	movwf	I2C_Master_Read@a+1
  1751  1422  160A  118A  2003  160A  118A  	fcall	_I2C_Master_Read
  1752  1427  0870               	movf	?_I2C_Master_Read,w
  1753  1428  1283               	bcf	3,5	;RP0=0, select bank0
  1754  1429  1303               	bcf	3,6	;RP1=0, select bank0
  1755  142A  0085               	movwf	5	;volatile
  1756  142B                     l3979:
  1757                           
  1758                           ;pro.c: 74: 
  1759  142B  160A  158A  215B  160A  118A  	fcall	_I2C_Master_Stop
  1760  1430                     l3981:
  1761                           
  1762                           ;pro.c: 75:     TRISA = 0x00;
  1763  1430  3082               	movlw	130
  1764  1431  1683               	bsf	3,5	;RP0=1, select bank1
  1765  1432  1303               	bcf	3,6	;RP1=0, select bank1
  1766  1433  00CE               	movwf	(??_main^(0+128)+1)
  1767  1434  30DD               	movlw	221
  1768  1435  00CD               	movwf	??_main^(0+128)
  1769  1436                     u5777:
  1770  1436  0BCD               	decfsz	??_main^(0+128),f
  1771  1437  2C36               	goto	u5777
  1772  1438  0BCE               	decfsz	(??_main^(0+128)+1),f
  1773  1439  2C36               	goto	u5777
  1774  143A                     l3983:
  1775                           
  1776                           ;pro.c: 76:     TRISB = 0x00;
  1777  143A  1283               	bcf	3,5	;RP0=0, select bank0
  1778  143B  1303               	bcf	3,6	;RP1=0, select bank0
  1779  143C  0806               	movf	6,w	;volatile
  1780  143D  1683               	bsf	3,5	;RP0=1, select bank1
  1781  143E  1303               	bcf	3,6	;RP1=0, select bank1
  1782  143F  00CD               	movwf	??_main^(0+128)
  1783  1440  084D               	movf	??_main^(0+128),w
  1784  1441  00EC               	movwf	_s1^(0+128)
  1785  1442                     l3985:
  1786                           
  1787                           ;pro.c: 77:     TRISD = 0x00;
  1788  1442  1283               	bcf	3,5	;RP0=0, select bank0
  1789  1443  1303               	bcf	3,6	;RP1=0, select bank0
  1790  1444  0805               	movf	5,w	;volatile
  1791  1445  1683               	bsf	3,5	;RP0=1, select bank1
  1792  1446  1303               	bcf	3,6	;RP1=0, select bank1
  1793  1447  00CD               	movwf	??_main^(0+128)
  1794  1448  084D               	movf	??_main^(0+128),w
  1795  1449  00E9               	movwf	_s3^(0+128)	;volatile
  1796  144A                     l3987:
  1797                           
  1798                           ;pro.c: 78:     TRISC = 0x80;
  1799  144A  303C               	movlw	60
  1800  144B  1283               	bcf	3,5	;RP0=0, select bank0
  1801  144C  1303               	bcf	3,6	;RP1=0, select bank0
  1802  144D  00A7               	movwf	___flmul@b+3
  1803  144E  30D4               	movlw	212
  1804  144F  00A6               	movwf	___flmul@b+2
  1805  1450  30FD               	movlw	253
  1806  1451  00A5               	movwf	___flmul@b+1
  1807  1452  30F4               	movlw	244
  1808  1453  00A4               	movwf	___flmul@b
  1809  1454  1683               	bsf	3,5	;RP0=1, select bank1
  1810  1455  1303               	bcf	3,6	;RP1=0, select bank1
  1811  1456  086C               	movf	_s1^(0+128),w
  1812  1457  00CD               	movwf	??_main^(0+128)
  1813  1458  01CE               	clrf	(??_main^(0+128)+1)
  1814  1459  01CF               	clrf	(??_main^(0+128)+2)
  1815  145A  01D0               	clrf	(??_main^(0+128)+3)
  1816  145B  0850               	movf	(??_main+3)^(0+128),w
  1817  145C  00F3               	movwf	___xxtofl@val+3
  1818  145D  084F               	movf	(??_main+2)^(0+128),w
  1819  145E  00F2               	movwf	___xxtofl@val+2
  1820  145F  084E               	movf	(??_main+1)^(0+128),w
  1821  1460  00F1               	movwf	___xxtofl@val+1
  1822  1461  084D               	movf	??_main^(0+128),w
  1823  1462  00F0               	movwf	___xxtofl@val
  1824  1463  3001               	movlw	1
  1825  1464  160A  158A  2689  160A  118A  	fcall	___xxtofl
  1826  1469  0873               	movf	?___xxtofl+3,w
  1827  146A  1283               	bcf	3,5	;RP0=0, select bank0
  1828  146B  1303               	bcf	3,6	;RP1=0, select bank0
  1829  146C  00AB               	movwf	___flmul@a+3
  1830  146D  0872               	movf	?___xxtofl+2,w
  1831  146E  00AA               	movwf	___flmul@a+2
  1832  146F  0871               	movf	?___xxtofl+1,w
  1833  1470  00A9               	movwf	___flmul@a+1
  1834  1471  0870               	movf	?___xxtofl,w
  1835  1472  00A8               	movwf	___flmul@a
  1836  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  1837  1478  1283               	bcf	3,5	;RP0=0, select bank0
  1838  1479  1303               	bcf	3,6	;RP1=0, select bank0
  1839  147A  0827               	movf	?___flmul+3,w
  1840  147B  1683               	bsf	3,5	;RP0=1, select bank1
  1841  147C  1303               	bcf	3,6	;RP1=0, select bank1
  1842  147D  00E8               	movwf	(_S1+3)^(0+128)
  1843  147E  1283               	bcf	3,5	;RP0=0, select bank0
  1844  147F  1303               	bcf	3,6	;RP1=0, select bank0
  1845  1480  0826               	movf	?___flmul+2,w
  1846  1481  1683               	bsf	3,5	;RP0=1, select bank1
  1847  1482  1303               	bcf	3,6	;RP1=0, select bank1
  1848  1483  00E7               	movwf	(_S1+2)^(0+128)
  1849  1484  1283               	bcf	3,5	;RP0=0, select bank0
  1850  1485  1303               	bcf	3,6	;RP1=0, select bank0
  1851  1486  0825               	movf	?___flmul+1,w
  1852  1487  1683               	bsf	3,5	;RP0=1, select bank1
  1853  1488  1303               	bcf	3,6	;RP1=0, select bank1
  1854  1489  00E6               	movwf	(_S1+1)^(0+128)
  1855  148A  1283               	bcf	3,5	;RP0=0, select bank0
  1856  148B  1303               	bcf	3,6	;RP1=0, select bank0
  1857  148C  0824               	movf	?___flmul,w
  1858  148D  1683               	bsf	3,5	;RP0=1, select bank1
  1859  148E  1303               	bcf	3,6	;RP1=0, select bank1
  1860  148F  00E5               	movwf	_S1^(0+128)
  1861  1490                     l3989:
  1862                           
  1863                           ;pro.c: 79: 
  1864  1490  303C               	movlw	60
  1865  1491  1283               	bcf	3,5	;RP0=0, select bank0
  1866  1492  1303               	bcf	3,6	;RP1=0, select bank0
  1867  1493  00A7               	movwf	___flmul@b+3
  1868  1494  30A0               	movlw	160
  1869  1495  00A6               	movwf	___flmul@b+2
  1870  1496  3090               	movlw	144
  1871  1497  00A5               	movwf	___flmul@b+1
  1872  1498  302E               	movlw	46
  1873  1499  00A4               	movwf	___flmul@b
  1874  149A  1683               	bsf	3,5	;RP0=1, select bank1
  1875  149B  1303               	bcf	3,6	;RP1=0, select bank1
  1876  149C  086B               	movf	_s2^(0+128),w
  1877  149D  00CD               	movwf	??_main^(0+128)
  1878  149E  01CE               	clrf	(??_main^(0+128)+1)
  1879  149F  01CF               	clrf	(??_main^(0+128)+2)
  1880  14A0  01D0               	clrf	(??_main^(0+128)+3)
  1881  14A1  0850               	movf	(??_main+3)^(0+128),w
  1882  14A2  00F3               	movwf	___xxtofl@val+3
  1883  14A3  084F               	movf	(??_main+2)^(0+128),w
  1884  14A4  00F2               	movwf	___xxtofl@val+2
  1885  14A5  084E               	movf	(??_main+1)^(0+128),w
  1886  14A6  00F1               	movwf	___xxtofl@val+1
  1887  14A7  084D               	movf	??_main^(0+128),w
  1888  14A8  00F0               	movwf	___xxtofl@val
  1889  14A9  3001               	movlw	1
  1890  14AA  160A  158A  2689  160A  118A  	fcall	___xxtofl
  1891  14AF  0873               	movf	?___xxtofl+3,w
  1892  14B0  1283               	bcf	3,5	;RP0=0, select bank0
  1893  14B1  1303               	bcf	3,6	;RP1=0, select bank0
  1894  14B2  00AB               	movwf	___flmul@a+3
  1895  14B3  0872               	movf	?___xxtofl+2,w
  1896  14B4  00AA               	movwf	___flmul@a+2
  1897  14B5  0871               	movf	?___xxtofl+1,w
  1898  14B6  00A9               	movwf	___flmul@a+1
  1899  14B7  0870               	movf	?___xxtofl,w
  1900  14B8  00A8               	movwf	___flmul@a
  1901  14B9  120A  158A  249F  160A  118A  	fcall	___flmul
  1902  14BE  1283               	bcf	3,5	;RP0=0, select bank0
  1903  14BF  1303               	bcf	3,6	;RP1=0, select bank0
  1904  14C0  0827               	movf	?___flmul+3,w
  1905  14C1  1683               	bsf	3,5	;RP0=1, select bank1
  1906  14C2  1303               	bcf	3,6	;RP1=0, select bank1
  1907  14C3  00E4               	movwf	(_S2+3)^(0+128)
  1908  14C4  1283               	bcf	3,5	;RP0=0, select bank0
  1909  14C5  1303               	bcf	3,6	;RP1=0, select bank0
  1910  14C6  0826               	movf	?___flmul+2,w
  1911  14C7  1683               	bsf	3,5	;RP0=1, select bank1
  1912  14C8  1303               	bcf	3,6	;RP1=0, select bank1
  1913  14C9  00E3               	movwf	(_S2+2)^(0+128)
  1914  14CA  1283               	bcf	3,5	;RP0=0, select bank0
  1915  14CB  1303               	bcf	3,6	;RP1=0, select bank0
  1916  14CC  0825               	movf	?___flmul+1,w
  1917  14CD  1683               	bsf	3,5	;RP0=1, select bank1
  1918  14CE  1303               	bcf	3,6	;RP1=0, select bank1
  1919  14CF  00E2               	movwf	(_S2+1)^(0+128)
  1920  14D0  1283               	bcf	3,5	;RP0=0, select bank0
  1921  14D1  1303               	bcf	3,6	;RP1=0, select bank0
  1922  14D2  0824               	movf	?___flmul,w
  1923  14D3  1683               	bsf	3,5	;RP0=1, select bank1
  1924  14D4  1303               	bcf	3,6	;RP1=0, select bank1
  1925  14D5  00E1               	movwf	_S2^(0+128)
  1926  14D6                     l3991:
  1927                           
  1928                           ;pro.c: 80: 
  1929  14D6  0869               	movf	_s3^(0+128),w	;volatile
  1930  14D7  3EBC               	addlw	188
  1931  14D8  00F0               	movwf	___xxtofl@val
  1932  14D9  30FF               	movlw	255
  1933  14DA  1803               	skipnc
  1934  14DB  3000               	movlw	0
  1935  14DC  00F1               	movwf	___xxtofl@val+1
  1936  14DD  01F2               	clrf	___xxtofl@val+2
  1937  14DE  1BF1               	btfsc	___xxtofl@val+1,7
  1938  14DF  03F2               	decf	___xxtofl@val+2,f
  1939  14E0  0872               	movf	___xxtofl@val+2,w
  1940  14E1  00F3               	movwf	___xxtofl@val+3
  1941  14E2  3001               	movlw	1
  1942  14E3  160A  158A  2689  160A  118A  	fcall	___xxtofl
  1943  14E8  0873               	movf	?___xxtofl+3,w
  1944  14E9  1683               	bsf	3,5	;RP0=1, select bank3
  1945  14EA  1703               	bsf	3,6	;RP1=1, select bank3
  1946  14EB  00A3               	movwf	(_S3+3)^(0+384)
  1947  14EC  0872               	movf	?___xxtofl+2,w
  1948  14ED  00A2               	movwf	(_S3+2)^(0+384)
  1949  14EE  0871               	movf	?___xxtofl+1,w
  1950  14EF  00A1               	movwf	(_S3+1)^(0+384)
  1951  14F0  0870               	movf	?___xxtofl,w
  1952  14F1  00A0               	movwf	_S3^(0+384)
  1953  14F2                     l3993:
  1954                           
  1955                           ;pro.c: 81: 
  1956  14F2  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1957  14F3  1683               	bsf	3,5	;RP0=1, select bank1
  1958  14F4  1303               	bcf	3,6	;RP1=0, select bank1
  1959  14F5  00CD               	movwf	??_main^(0+128)
  1960  14F6  084D               	movf	??_main^(0+128),w
  1961  14F7  00A0               	movwf	sprintf@f^(0+128)
  1962  14F8  0868               	movf	(_S1+3)^(0+128),w
  1963  14F9  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1964  14FA  0867               	movf	(_S1+2)^(0+128),w
  1965  14FB  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1966  14FC  0866               	movf	(_S1+1)^(0+128),w
  1967  14FD  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1968  14FE  0865               	movf	_S1^(0+128),w
  1969  14FF  00A1               	movwf	(?_sprintf^(0+128)+1)
  1970  1500  0864               	movf	(_S2+3)^(0+128),w
  1971  1501  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1972  1502  0863               	movf	(_S2+2)^(0+128),w
  1973  1503  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1974  1504  0862               	movf	(_S2+1)^(0+128),w
  1975  1505  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1976  1506  0861               	movf	_S2^(0+128),w
  1977  1507  00A5               	movwf	(?_sprintf^(0+128)+5)
  1978  1508  1683               	bsf	3,5	;RP0=1, select bank3
  1979  1509  1703               	bsf	3,6	;RP1=1, select bank3
  1980  150A  0823               	movf	(_S3+3)^(0+384),w
  1981  150B  1683               	bsf	3,5	;RP0=1, select bank1
  1982  150C  1303               	bcf	3,6	;RP1=0, select bank1
  1983  150D  00AC               	movwf	((?_sprintf+3)^(0+128)+9)
  1984  150E  1683               	bsf	3,5	;RP0=1, select bank3
  1985  150F  1703               	bsf	3,6	;RP1=1, select bank3
  1986  1510  0822               	movf	(_S3+2)^(0+384),w
  1987  1511  1683               	bsf	3,5	;RP0=1, select bank1
  1988  1512  1303               	bcf	3,6	;RP1=0, select bank1
  1989  1513  00AB               	movwf	((?_sprintf+2)^(0+128)+9)
  1990  1514  1683               	bsf	3,5	;RP0=1, select bank3
  1991  1515  1703               	bsf	3,6	;RP1=1, select bank3
  1992  1516  0821               	movf	(_S3+1)^(0+384),w
  1993  1517  1683               	bsf	3,5	;RP0=1, select bank1
  1994  1518  1303               	bcf	3,6	;RP1=0, select bank1
  1995  1519  00AA               	movwf	((?_sprintf+1)^(0+128)+9)
  1996  151A  1683               	bsf	3,5	;RP0=1, select bank3
  1997  151B  1703               	bsf	3,6	;RP1=1, select bank3
  1998  151C  0820               	movf	_S3^(0+384),w
  1999  151D  1683               	bsf	3,5	;RP0=1, select bank1
  2000  151E  1303               	bcf	3,6	;RP1=0, select bank1
  2001  151F  00A9               	movwf	(?_sprintf^(0+128)+9)
  2002  1520  086A               	movf	_pc^(0+128),w
  2003  1521  00CE               	movwf	(??_main+1)^(0+128)
  2004  1522  01CF               	clrf	((??_main+1)^(0+128)+1)
  2005  1523  084E               	movf	(??_main+1)^(0+128),w
  2006  1524  00AD               	movwf	(?_sprintf^(0+128)+13)
  2007  1525  084F               	movf	(??_main+2)^(0+128),w
  2008  1526  00AE               	movwf	((?_sprintf+1)^(0+128)+13)
  2009  1527  30D1               	movlw	(low (main@volt| 0))& (0+255)
  2010  1528  120A  118A  2046  160A  118A  	fcall	_sprintf
  2011  152D                     l3995:
  2012                           
  2013                           ;pro.c: 82:     OSCCONbits.IRCF = 7;
  2014  152D  30D1               	movlw	(low (main@volt| 0))& (0+255)
  2015  152E  160A  158A  21E5  160A  118A  	fcall	_enviocadena
  2016                           
  2017                           ;pro.c: 83:     OSCCONbits.SCS = 1;
  2018  1533  01F4               	clrf	Lcd_Set_Cursor@b
  2019  1534  0AF4               	incf	Lcd_Set_Cursor@b,f
  2020  1535  3002               	movlw	2
  2021  1536  160A  158A  2204  160A  118A  	fcall	_Lcd_Set_Cursor
  2022  153B                     l3997:
  2023                           
  2024                           ;pro.c: 84: 
  2025  153B  30D1               	movlw	(low (main@volt| 0))& (0+255)
  2026  153C  00F3               	movwf	Lcd_Write_String@a
  2027  153D  3000               	movlw	0
  2028  153E  00F4               	movwf	Lcd_Write_String@a+1
  2029  153F  120A  118A  2004  160A  118A  	fcall	_Lcd_Write_String
  2030  1544                     l3999:
  2031                           
  2032                           ;pro.c: 85: 
  2033  1544  1283               	bcf	3,5	;RP0=0, select bank0
  2034  1545  1303               	bcf	3,6	;RP1=0, select bank0
  2035  1546  1E8C               	btfss	12,5	;volatile
  2036  1547  2D49               	goto	u5731
  2037  1548  2D4A               	goto	u5730
  2038  1549                     u5731:
  2039  1549  2D65               	goto	l4011
  2040  154A                     u5730:
  2041  154A  2D53               	goto	l4009
  2042  154B                     l4003:
  2043                           
  2044                           ;pro.c: 89:     INTCONbits.PEIE = 1;
  2045  154B  3001               	movlw	1
  2046  154C  00CD               	movwf	??_main^(0+128)
  2047  154D  084D               	movf	??_main^(0+128),w
  2048  154E  07EA               	addwf	_pc^(0+128),f
  2049                           
  2050                           ;pro.c: 90:     PIE1bits.RCIE = 0;
  2051  154F  2D65               	goto	l4011
  2052  1550                     l4005:
  2053                           
  2054                           ;pro.c: 93: 
  2055  1550  3001               	movlw	1
  2056  1551  02EA               	subwf	_pc^(0+128),f
  2057                           
  2058                           ;pro.c: 94:     PORTA = 0x00;
  2059  1552  2D65               	goto	l4011
  2060  1553                     l4009:
  2061  1553  081A               	movf	26,w	;volatile
  2062  1554  1683               	bsf	3,5	;RP0=1, select bank1
  2063  1555  1303               	bcf	3,6	;RP1=0, select bank1
  2064  1556  00CD               	movwf	??_main^(0+128)
  2065  1557  01CE               	clrf	(??_main^(0+128)+1)
  2066                           
  2067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2068                           ; Switch size 1, requested type "simple"
  2069                           ; Number of cases is 1, Range of values is 0 to 0
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte            4     3 (average)
  2073                           ; direct_byte           11     8 (fixed)
  2074                           ; jumptable            260     6 (fixed)
  2075                           ;	Chosen strategy is simple_byte
  2076  1558  084E               	movf	(??_main+1)^(0+128),w
  2077  1559  3A00               	xorlw	0	; case 0
  2078  155A  1903               	skipnz
  2079  155B  2D5D               	goto	l4091
  2080  155C  2D65               	goto	l4011
  2081  155D                     l4091:
  2082                           
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 2, Range of values is 43 to 45
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte            7     4 (average)
  2088                           ; direct_byte           20    11 (fixed)
  2089                           ; jumptable            263     9 (fixed)
  2090                           ;	Chosen strategy is simple_byte
  2091  155D  084D               	movf	??_main^(0+128),w
  2092  155E  3A2B               	xorlw	43	; case 43
  2093  155F  1903               	skipnz
  2094  1560  2D4B               	goto	l4003
  2095  1561  3A06               	xorlw	6	; case 45
  2096  1562  1903               	skipnz
  2097  1563  2D50               	goto	l4005
  2098  1564  2D65               	goto	l4011
  2099  1565                     l4011:
  2100                           
  2101                           ;pro.c: 97:     PORTD = 0x00;
  2102  1565  3002               	movlw	2
  2103  1566  1683               	bsf	3,5	;RP0=1, select bank1
  2104  1567  1303               	bcf	3,6	;RP1=0, select bank1
  2105  1568  00CF               	movwf	(??_main^(0+128)+2)
  2106  1569  3004               	movlw	4
  2107  156A  00CE               	movwf	(??_main^(0+128)+1)
  2108  156B  30B9               	movlw	185
  2109  156C  00CD               	movwf	??_main^(0+128)
  2110  156D                     u5787:
  2111  156D  0BCD               	decfsz	??_main^(0+128),f
  2112  156E  2D6D               	goto	u5787
  2113  156F  0BCE               	decfsz	(??_main^(0+128)+1),f
  2114  1570  2D6D               	goto	u5787
  2115  1571  0BCF               	decfsz	(??_main^(0+128)+2),f
  2116  1572  2D6D               	goto	u5787
  2117  1573  2D74               	nop2
  2118  1574  2B92               	goto	l3943
  2119  1575  120A  118A  2800   	ljmp	start
  2120  1578                     __end_of_main:
  2121                           
  2122                           	psect	text1
  2123  0046                     __ptext1:	
  2124 ;; *************** function _sprintf *****************
  2125 ;; Defined at:
  2126 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  sp              1    wreg     PTR unsigned char 
  2129 ;;		 -> main@volt(16), 
  2130 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2131 ;;		 -> STR_2(21), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  2134 ;;		 -> main@volt(16), 
  2135 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  2136 ;;  val             4   33[BANK1 ] unsigned long 
  2137 ;;  tmpval          4   29[BANK1 ] struct .
  2138 ;;  prec            2   42[BANK1 ] int 
  2139 ;;  eexp            2   27[BANK1 ] int 
  2140 ;;  flag            2   25[BANK1 ] unsigned short 
  2141 ;;  cp              2    0        PTR const unsigned char 
  2142 ;;  len             2    0        unsigned int 
  2143 ;;  width           2    0        int 
  2144 ;;  c               1   44[BANK1 ] unsigned char 
  2145 ;;  ap              1   24[BANK1 ] PTR void [1]
  2146 ;;		 -> ?_sprintf(2), 
  2147 ;;  d               1    0        unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  2    0[BANK1 ] int 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0      15       0       0
  2158 ;;      Locals:         0       0      25       0       0
  2159 ;;      Temps:          0       0       5       0       0
  2160 ;;      Totals:         0       0      45       0       0
  2161 ;;Total ram usage:       45 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 3
  2164 ;; This function calls:
  2165 ;;		___awdiv
  2166 ;;		___fladd
  2167 ;;		___fleq
  2168 ;;		___flge
  2169 ;;		___flmul
  2170 ;;		___flneg
  2171 ;;		___flsub
  2172 ;;		___fltol
  2173 ;;		___lldiv
  2174 ;;		___llmod
  2175 ;;		___wmul
  2176 ;;		___xxtofl
  2177 ;;		__div_to_l_
  2178 ;;		__tdiv_to_l_
  2179 ;;		_fround
  2180 ;;		_isdigit
  2181 ;;		_scale
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _sprintf
  2189  0046                     _sprintf:
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2193                           ;sprintf@sp stored from wreg
  2194  0046  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0047  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0048  00C5               	movwf	sprintf@sp^(0+128)
  2197  0049                     l3679:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2200  0049  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2201  004A  00AF               	movwf	??_sprintf^(0+128)
  2202  004B  082F               	movf	??_sprintf^(0+128),w
  2203  004C  00B8               	movwf	sprintf@ap^(0+128)
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2206  004D  2FD0               	goto	l3905
  2207  004E                     l3681:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2210  004E  3025               	movlw	37
  2211  004F  064C               	xorwf	sprintf@c^(0+128),w
  2212  0050  1903               	btfsc	3,2
  2213  0051  2853               	goto	u5301
  2214  0052  2854               	goto	u5300
  2215  0053                     u5301:
  2216  0053  2860               	goto	l3687
  2217  0054                     u5300:
  2218  0054                     l3683:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2221  0054  084C               	movf	sprintf@c^(0+128),w
  2222  0055  00AF               	movwf	??_sprintf^(0+128)
  2223  0056  0845               	movf	sprintf@sp^(0+128),w
  2224  0057  0084               	movwf	4
  2225  0058  082F               	movf	??_sprintf^(0+128),w
  2226  0059  1383               	bcf	3,7	;select IRP bank0
  2227  005A  0080               	movwf	0
  2228  005B                     l3685:
  2229  005B  3001               	movlw	1
  2230  005C  00AF               	movwf	??_sprintf^(0+128)
  2231  005D  082F               	movf	??_sprintf^(0+128),w
  2232  005E  07C5               	addwf	sprintf@sp^(0+128),f
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2235  005F  2FD0               	goto	l3905
  2236  0060                     l3687:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2239  0060  01B9               	clrf	sprintf@flag^(0+128)
  2240  0061  01BA               	clrf	(sprintf@flag+1)^(0+128)
  2241  0062                     l3689:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2244  0062  0820               	movf	sprintf@f^(0+128),w
  2245  0063  0084               	movwf	4
  2246  0064  120A  158A  200A  120A  118A  	fcall	stringdir
  2247  0069  3A2E               	xorlw	46
  2248  006A  1D03               	skipz
  2249  006B  286D               	goto	u5311
  2250  006C  286E               	goto	u5310
  2251  006D                     u5311:
  2252  006D  28B3               	goto	l3705
  2253  006E                     u5310:
  2254  006E                     l3691:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2257  006E  173A               	bsf	(sprintf@flag^(0+128)+1),6
  2258  006F                     l3693:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  2261  006F  3001               	movlw	1
  2262  0070  00AF               	movwf	??_sprintf^(0+128)
  2263  0071  082F               	movf	??_sprintf^(0+128),w
  2264  0072  07A0               	addwf	sprintf@f^(0+128),f
  2265  0073                     l3695:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2268  0073  01CA               	clrf	sprintf@prec^(0+128)
  2269  0074  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2272  0075  28A2               	goto	l3703
  2273  0076                     l3697:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2276  0076  300A               	movlw	10
  2277  0077  00F0               	movwf	___wmul@multiplier
  2278  0078  3000               	movlw	0
  2279  0079  00F1               	movwf	___wmul@multiplier+1
  2280  007A  1683               	bsf	3,5	;RP0=1, select bank1
  2281  007B  1303               	bcf	3,6	;RP1=0, select bank1
  2282  007C  084B               	movf	(sprintf@prec+1)^(0+128),w
  2283  007D  00F3               	movwf	___wmul@multiplicand+1
  2284  007E  084A               	movf	sprintf@prec^(0+128),w
  2285  007F  00F2               	movwf	___wmul@multiplicand
  2286  0080  160A  158A  224C  120A  118A  	fcall	___wmul
  2287  0085  0871               	movf	?___wmul+1,w
  2288  0086  1683               	bsf	3,5	;RP0=1, select bank1
  2289  0087  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0088  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2291  0089  0870               	movf	?___wmul,w
  2292  008A  00CA               	movwf	sprintf@prec^(0+128)
  2293  008B                     l3699:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2296  008B  0820               	movf	sprintf@f^(0+128),w
  2297  008C  0084               	movwf	4
  2298  008D  120A  158A  200A  120A  118A  	fcall	stringdir
  2299  0092  3ED0               	addlw	208
  2300  0093  00AF               	movwf	??_sprintf^(0+128)
  2301  0094  30FF               	movlw	255
  2302  0095  1803               	skipnc
  2303  0096  3000               	movlw	0
  2304  0097  00B0               	movwf	(??_sprintf^(0+128)+1)
  2305  0098  082F               	movf	??_sprintf^(0+128),w
  2306  0099  07CA               	addwf	sprintf@prec^(0+128),f
  2307  009A  1803               	skipnc
  2308  009B  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2309  009C  0830               	movf	(??_sprintf+1)^(0+128),w
  2310  009D  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2311  009E                     l3701:
  2312  009E  3001               	movlw	1
  2313  009F  00AF               	movwf	??_sprintf^(0+128)
  2314  00A0  082F               	movf	??_sprintf^(0+128),w
  2315  00A1  07A0               	addwf	sprintf@f^(0+128),f
  2316  00A2                     l3703:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2319  00A2  0820               	movf	sprintf@f^(0+128),w
  2320  00A3  0084               	movwf	4
  2321  00A4  120A  158A  200A  120A  118A  	fcall	stringdir
  2322  00A9  160A  158A  21A3  120A  118A  	fcall	_isdigit
  2323  00AE  1803               	btfsc	3,0
  2324  00AF  28B1               	goto	u5321
  2325  00B0  28B2               	goto	u5320
  2326  00B1                     u5321:
  2327  00B1  2876               	goto	l3697
  2328  00B2                     u5320:
  2329  00B2  28B9               	goto	l3711
  2330  00B3                     l3705:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2333  00B3  01CA               	clrf	sprintf@prec^(0+128)
  2334  00B4  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2335  00B5                     l3707:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2338  00B5  163A               	bsf	(sprintf@flag^(0+128)+1),4
  2339  00B6  28B9               	goto	l3711
  2340  00B7                     l414:	
  2341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2342                           
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2345  00B7  153A               	bsf	(sprintf@flag^(0+128)+1),2
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  2348  00B8  28DB               	goto	l3713
  2349  00B9                     l3711:
  2350  00B9  3001               	movlw	1
  2351  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2352  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2353  00BC  07A0               	addwf	sprintf@f^(0+128),f
  2354  00BD  30FF               	movlw	-1
  2355  00BE  0720               	addwf	sprintf@f^(0+128),w
  2356  00BF  0084               	movwf	4
  2357  00C0  120A  158A  200A  120A  118A  	fcall	stringdir
  2358  00C5  00CC               	movwf	sprintf@c^(0+128)
  2359  00C6  00AF               	movwf	??_sprintf^(0+128)
  2360  00C7  01B0               	clrf	(??_sprintf^(0+128)+1)
  2361                           
  2362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2363                           ; Switch size 1, requested type "simple"
  2364                           ; Number of cases is 1, Range of values is 0 to 0
  2365                           ; switch strategies available:
  2366                           ; Name         Instructions Cycles
  2367                           ; simple_byte            4     3 (average)
  2368                           ; direct_byte           11     8 (fixed)
  2369                           ; jumptable            260     6 (fixed)
  2370                           ;	Chosen strategy is simple_byte
  2371  00C8  0830               	movf	(??_sprintf+1)^(0+128),w
  2372  00C9  3A00               	xorlw	0	; case 0
  2373  00CA  1903               	skipnz
  2374  00CB  28CD               	goto	l4093
  2375  00CC  2FD0               	goto	l3905
  2376  00CD                     l4093:
  2377                           
  2378                           ; Switch size 1, requested type "simple"
  2379                           ; Number of cases is 4, Range of values is 0 to 105
  2380                           ; switch strategies available:
  2381                           ; Name         Instructions Cycles
  2382                           ; simple_byte           13     7 (average)
  2383                           ; jumptable            260     6 (fixed)
  2384                           ;	Chosen strategy is simple_byte
  2385  00CD  082F               	movf	??_sprintf^(0+128),w
  2386  00CE  3A00               	xorlw	0	; case 0
  2387  00CF  1903               	skipnz
  2388  00D0  2FE2               	goto	l3907
  2389  00D1  3A64               	xorlw	100	; case 100
  2390  00D2  1903               	skipnz
  2391  00D3  28DB               	goto	l3713
  2392  00D4  3A02               	xorlw	2	; case 102
  2393  00D5  1903               	skipnz
  2394  00D6  28B7               	goto	l414
  2395  00D7  3A0F               	xorlw	15	; case 105
  2396  00D8  1903               	skipnz
  2397  00D9  28DB               	goto	l3713
  2398  00DA  2FD0               	goto	l3905
  2399  00DB                     l3713:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2402  00DB  3000               	movlw	0
  2403  00DC  0539               	andwf	sprintf@flag^(0+128),w
  2404  00DD  00AF               	movwf	??_sprintf^(0+128)
  2405  00DE  3007               	movlw	7
  2406  00DF  053A               	andwf	(sprintf@flag+1)^(0+128),w
  2407  00E0  00B0               	movwf	(??_sprintf+1)^(0+128)
  2408  00E1  082F               	movf	??_sprintf^(0+128),w
  2409  00E2  0430               	iorwf	(??_sprintf^(0+128)+1),w
  2410  00E3  1903               	btfsc	3,2
  2411  00E4  28E6               	goto	u5331
  2412  00E5  28E7               	goto	u5330
  2413  00E6                     u5331:
  2414  00E6  2EA8               	goto	l3855
  2415  00E7                     u5330:
  2416  00E7                     l3715:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2419  00E7  1E3A               	btfss	(sprintf@flag+1)^(0+128),4
  2420  00E8  28EA               	goto	u5341
  2421  00E9  28EB               	goto	u5340
  2422  00EA                     u5341:
  2423  00EA  28EF               	goto	l3719
  2424  00EB                     u5340:
  2425  00EB                     l3717:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2428  00EB  3006               	movlw	6
  2429  00EC  00CA               	movwf	sprintf@prec^(0+128)
  2430  00ED  3000               	movlw	0
  2431  00EE  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2432  00EF                     l3719:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2435  00EF  0838               	movf	sprintf@ap^(0+128),w
  2436  00F0  0084               	movwf	4
  2437  00F1  1383               	bcf	3,7	;select IRP bank0
  2438  00F2  0800               	movf	0,w
  2439  00F3  00C6               	movwf	sprintf@fval^(0+128)
  2440  00F4  0A84               	incf	4,f
  2441  00F5  0800               	movf	0,w
  2442  00F6  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2443  00F7  0A84               	incf	4,f
  2444  00F8  0800               	movf	0,w
  2445  00F9  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2446  00FA  0A84               	incf	4,f
  2447  00FB  0800               	movf	0,w
  2448  00FC  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2449  00FD                     l3721:
  2450  00FD  3004               	movlw	4
  2451  00FE  00AF               	movwf	??_sprintf^(0+128)
  2452  00FF  082F               	movf	??_sprintf^(0+128),w
  2453  0100  07B8               	addwf	sprintf@ap^(0+128),f
  2454  0101                     l3723:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2457  0101  0849               	movf	(sprintf@fval+3)^(0+128),w
  2458  0102  00F3               	movwf	___flge@ff1+3
  2459  0103  0848               	movf	(sprintf@fval+2)^(0+128),w
  2460  0104  00F2               	movwf	___flge@ff1+2
  2461  0105  0847               	movf	(sprintf@fval+1)^(0+128),w
  2462  0106  00F1               	movwf	___flge@ff1+1
  2463  0107  0846               	movf	sprintf@fval^(0+128),w
  2464  0108  00F0               	movwf	___flge@ff1
  2465  0109  3000               	movlw	0
  2466  010A  00F7               	movwf	___flge@ff2+3
  2467  010B  3000               	movlw	0
  2468  010C  00F6               	movwf	___flge@ff2+2
  2469  010D  3000               	movlw	0
  2470  010E  00F5               	movwf	___flge@ff2+1
  2471  010F  3000               	movlw	0
  2472  0110  00F4               	movwf	___flge@ff2
  2473  0111  160A  158A  25E7  120A  118A  	fcall	___flge
  2474  0116  1803               	btfsc	3,0
  2475  0117  2919               	goto	u5351
  2476  0118  291A               	goto	u5350
  2477  0119                     u5351:
  2478  0119  2937               	goto	l3729
  2479  011A                     u5350:
  2480  011A                     l3725:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2483  011A  1683               	bsf	3,5	;RP0=1, select bank1
  2484  011B  1303               	bcf	3,6	;RP1=0, select bank1
  2485  011C  0849               	movf	(sprintf@fval+3)^(0+128),w
  2486  011D  00F3               	movwf	___flneg@f1+3
  2487  011E  0848               	movf	(sprintf@fval+2)^(0+128),w
  2488  011F  00F2               	movwf	___flneg@f1+2
  2489  0120  0847               	movf	(sprintf@fval+1)^(0+128),w
  2490  0121  00F1               	movwf	___flneg@f1+1
  2491  0122  0846               	movf	sprintf@fval^(0+128),w
  2492  0123  00F0               	movwf	___flneg@f1
  2493  0124  160A  158A  216E  120A  118A  	fcall	___flneg
  2494  0129  0873               	movf	?___flneg+3,w
  2495  012A  1683               	bsf	3,5	;RP0=1, select bank1
  2496  012B  1303               	bcf	3,6	;RP1=0, select bank1
  2497  012C  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2498  012D  0872               	movf	?___flneg+2,w
  2499  012E  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2500  012F  0871               	movf	?___flneg+1,w
  2501  0130  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2502  0131  0870               	movf	?___flneg,w
  2503  0132  00C6               	movwf	sprintf@fval^(0+128)
  2504  0133                     l3727:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2507  0133  3003               	movlw	3
  2508  0134  04B9               	iorwf	sprintf@flag^(0+128),f
  2509  0135  3000               	movlw	0
  2510  0136  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  2511  0137                     l3729:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2514  0137  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0138  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0139  01BB               	clrf	sprintf@eexp^(0+128)
  2517  013A  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2518  013B                     l3731:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2521  013B  0849               	movf	(sprintf@fval+3)^(0+128),w
  2522  013C  00F3               	movwf	___fleq@ff1+3
  2523  013D  0848               	movf	(sprintf@fval+2)^(0+128),w
  2524  013E  00F2               	movwf	___fleq@ff1+2
  2525  013F  0847               	movf	(sprintf@fval+1)^(0+128),w
  2526  0140  00F1               	movwf	___fleq@ff1+1
  2527  0141  0846               	movf	sprintf@fval^(0+128),w
  2528  0142  00F0               	movwf	___fleq@ff1
  2529  0143  3000               	movlw	0
  2530  0144  00F7               	movwf	___fleq@ff2+3
  2531  0145  3000               	movlw	0
  2532  0146  00F6               	movwf	___fleq@ff2+2
  2533  0147  3000               	movlw	0
  2534  0148  00F5               	movwf	___fleq@ff2+1
  2535  0149  3000               	movlw	0
  2536  014A  00F4               	movwf	___fleq@ff2
  2537  014B  160A  158A  23CA  120A  118A  	fcall	___fleq
  2538  0150  1803               	btfsc	3,0
  2539  0151  2953               	goto	u5361
  2540  0152  2954               	goto	u5360
  2541  0153                     u5361:
  2542  0153  2A44               	goto	l3757
  2543  0154                     u5360:
  2544  0154                     l3733:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2547  0154  1003               	clrc
  2548  0155  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0156  1303               	bcf	3,6	;RP1=0, select bank1
  2550  0157  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  2551  0158  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  2552  0159  3E82               	addlw	130
  2553  015A  00BB               	movwf	sprintf@eexp^(0+128)
  2554  015B  30FF               	movlw	255
  2555  015C  1803               	skipnc
  2556  015D  3000               	movlw	0
  2557  015E  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2558  015F                     l3735:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2561  015F  30FF               	movlw	255
  2562  0160  07BB               	addwf	sprintf@eexp^(0+128),f
  2563  0161  1803               	skipnc
  2564  0162  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2565  0163  30FF               	movlw	255
  2566  0164  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2567  0165                     l3737:
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2570  0165  3003               	movlw	3
  2571  0166  00F0               	movwf	___wmul@multiplier
  2572  0167  3000               	movlw	0
  2573  0168  00F1               	movwf	___wmul@multiplier+1
  2574  0169  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2575  016A  00F3               	movwf	___wmul@multiplicand+1
  2576  016B  083B               	movf	sprintf@eexp^(0+128),w
  2577  016C  00F2               	movwf	___wmul@multiplicand
  2578  016D  160A  158A  224C  120A  118A  	fcall	___wmul
  2579  0172  0871               	movf	?___wmul+1,w
  2580  0173  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0174  1303               	bcf	3,6	;RP1=0, select bank1
  2582  0175  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2583  0176  0870               	movf	?___wmul,w
  2584  0177  00BB               	movwf	sprintf@eexp^(0+128)
  2585  0178                     l3739:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2588  0178  300A               	movlw	10
  2589  0179  00F7               	movwf	___awdiv@divisor
  2590  017A  3000               	movlw	0
  2591  017B  00F8               	movwf	___awdiv@divisor+1
  2592  017C  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2593  017D  00FA               	movwf	___awdiv@dividend+1
  2594  017E  083B               	movf	sprintf@eexp^(0+128),w
  2595  017F  00F9               	movwf	___awdiv@dividend
  2596  0180  160A  118A  2031  120A  118A  	fcall	___awdiv
  2597  0185  0878               	movf	?___awdiv+1,w
  2598  0186  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0187  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0188  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2601  0189  0877               	movf	?___awdiv,w
  2602  018A  00BB               	movwf	sprintf@eexp^(0+128)
  2603  018B                     l3741:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2606  018B  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2607  018C  298E               	goto	u5371
  2608  018D  298F               	goto	u5370
  2609  018E                     u5371:
  2610  018E  2995               	goto	l3745
  2611  018F                     u5370:
  2612  018F                     l3743:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2615  018F  30FF               	movlw	255
  2616  0190  07BB               	addwf	sprintf@eexp^(0+128),f
  2617  0191  1803               	skipnc
  2618  0192  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2619  0193  30FF               	movlw	255
  2620  0194  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2621  0195                     l3745:
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2624  0195  033B               	decf	sprintf@eexp^(0+128),w
  2625  0196  3AFF               	xorlw	255
  2626  0197  120A  158A  2140  120A  118A  	fcall	_scale
  2627  019C  1283               	bcf	3,5	;RP0=0, select bank0
  2628  019D  1303               	bcf	3,6	;RP1=0, select bank0
  2629  019E  0841               	movf	?_scale+3,w
  2630  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2631  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  2632  01A1  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  2633  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2634  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  2635  01A4  0840               	movf	?_scale+2,w
  2636  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2637  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2638  01A7  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  2639  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2640  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2641  01AA  083F               	movf	?_scale+1,w
  2642  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2643  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2644  01AD  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  2645  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2646  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2647  01B0  083E               	movf	?_scale,w
  2648  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2649  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2650  01B3  00BD               	movwf	sprintf@tmpval^(0+128)
  2651  01B4                     l3747:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2654  01B4  0849               	movf	(sprintf@fval+3)^(0+128),w
  2655  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2656  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2657  01B7  00A7               	movwf	___flmul@b+3
  2658  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2659  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2660  01BA  0848               	movf	(sprintf@fval+2)^(0+128),w
  2661  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2662  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2663  01BD  00A6               	movwf	___flmul@b+2
  2664  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2665  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2666  01C0  0847               	movf	(sprintf@fval+1)^(0+128),w
  2667  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2668  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2669  01C3  00A5               	movwf	___flmul@b+1
  2670  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2671  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  2672  01C6  0846               	movf	sprintf@fval^(0+128),w
  2673  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2674  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2675  01C9  00A4               	movwf	___flmul@b
  2676  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  2677  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  2678  01CC  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2679  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2680  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2681  01CF  00AB               	movwf	___flmul@a+3
  2682  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2683  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2684  01D2  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2685  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2686  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2687  01D5  00AA               	movwf	___flmul@a+2
  2688  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2689  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2690  01D8  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2691  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2692  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2693  01DB  00A9               	movwf	___flmul@a+1
  2694  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2695  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  2696  01DE  083D               	movf	sprintf@tmpval^(0+128),w
  2697  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2698  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2699  01E1  00A8               	movwf	___flmul@a
  2700  01E2  120A  158A  249F  120A  118A  	fcall	___flmul
  2701  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2702  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2703  01E9  0827               	movf	?___flmul+3,w
  2704  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  2705  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  2706  01EC  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  2707  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2708  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2709  01EF  0826               	movf	?___flmul+2,w
  2710  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2711  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2712  01F2  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  2713  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2714  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2715  01F5  0825               	movf	?___flmul+1,w
  2716  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2717  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2718  01F8  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  2719  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2720  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2721  01FB  0824               	movf	?___flmul,w
  2722  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  2723  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  2724  01FE  00BD               	movwf	sprintf@tmpval^(0+128)
  2725  01FF                     l3749:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2728  01FF  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2729  0200  00F3               	movwf	___flge@ff1+3
  2730  0201  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2731  0202  00F2               	movwf	___flge@ff1+2
  2732  0203  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2733  0204  00F1               	movwf	___flge@ff1+1
  2734  0205  083D               	movf	sprintf@tmpval^(0+128),w
  2735  0206  00F0               	movwf	___flge@ff1
  2736  0207  303F               	movlw	63
  2737  0208  00F7               	movwf	___flge@ff2+3
  2738  0209  3080               	movlw	128
  2739  020A  00F6               	movwf	___flge@ff2+2
  2740  020B  3000               	movlw	0
  2741  020C  00F5               	movwf	___flge@ff2+1
  2742  020D  3000               	movlw	0
  2743  020E  00F4               	movwf	___flge@ff2
  2744  020F  160A  158A  25E7  120A  118A  	fcall	___flge
  2745  0214  1803               	btfsc	3,0
  2746  0215  2A17               	goto	u5381
  2747  0216  2A18               	goto	u5380
  2748  0217                     u5381:
  2749  0217  2A21               	goto	l3753
  2750  0218                     u5380:
  2751  0218                     l3751:
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2754  0218  30FF               	movlw	255
  2755  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2756  021A  1303               	bcf	3,6	;RP1=0, select bank1
  2757  021B  07BB               	addwf	sprintf@eexp^(0+128),f
  2758  021C  1803               	skipnc
  2759  021D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2760  021E  30FF               	movlw	255
  2761  021F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2762  0220  2A44               	goto	l3757
  2763  0221                     l3753:
  2764  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2765  0222  1303               	bcf	3,6	;RP1=0, select bank1
  2766  0223  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2767  0224  00F3               	movwf	___flge@ff1+3
  2768  0225  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2769  0226  00F2               	movwf	___flge@ff1+2
  2770  0227  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  2771  0228  00F1               	movwf	___flge@ff1+1
  2772  0229  083D               	movf	sprintf@tmpval^(0+128),w
  2773  022A  00F0               	movwf	___flge@ff1
  2774  022B  3041               	movlw	65
  2775  022C  00F7               	movwf	___flge@ff2+3
  2776  022D  3020               	movlw	32
  2777  022E  00F6               	movwf	___flge@ff2+2
  2778  022F  3000               	movlw	0
  2779  0230  00F5               	movwf	___flge@ff2+1
  2780  0231  3000               	movlw	0
  2781  0232  00F4               	movwf	___flge@ff2
  2782  0233  160A  158A  25E7  120A  118A  	fcall	___flge
  2783  0238  1C03               	btfss	3,0
  2784  0239  2A3B               	goto	u5391
  2785  023A  2A3C               	goto	u5390
  2786  023B                     u5391:
  2787  023B  2A44               	goto	l3757
  2788  023C                     u5390:
  2789  023C                     l3755:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2792  023C  3001               	movlw	1
  2793  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2794  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2795  023F  07BB               	addwf	sprintf@eexp^(0+128),f
  2796  0240  1803               	skipnc
  2797  0241  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2798  0242  3000               	movlw	0
  2799  0243  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2800  0244                     l3757:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2803  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0246  084B               	movf	(sprintf@prec+1)^(0+128),w
  2806  0247  3A80               	xorlw	128
  2807  0248  00FF               	movwf	btemp+1
  2808  0249  3080               	movlw	128
  2809  024A  027F               	subwf	btemp+1,w
  2810  024B  1D03               	skipz
  2811  024C  2A4F               	goto	u5405
  2812  024D  300D               	movlw	13
  2813  024E  024A               	subwf	sprintf@prec^(0+128),w
  2814  024F                     u5405:
  2815  024F  1803               	skipnc
  2816  0250  2A52               	goto	u5401
  2817  0251  2A53               	goto	u5400
  2818  0252                     u5401:
  2819  0252  2A9A               	goto	l3761
  2820  0253                     u5400:
  2821  0253                     l3759:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2824  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2825  0254  1303               	bcf	3,6	;RP1=0, select bank1
  2826  0255  084A               	movf	sprintf@prec^(0+128),w
  2827  0256  160A  118A  2158  120A  118A  	fcall	_fround
  2828  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2829  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2830  025D  0841               	movf	?_fround+3,w
  2831  025E  00D5               	movwf	___fladd@b+3
  2832  025F  0840               	movf	?_fround+2,w
  2833  0260  00D4               	movwf	___fladd@b+2
  2834  0261  083F               	movf	?_fround+1,w
  2835  0262  00D3               	movwf	___fladd@b+1
  2836  0263  083E               	movf	?_fround,w
  2837  0264  00D2               	movwf	___fladd@b
  2838  0265  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0266  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0267  0849               	movf	(sprintf@fval+3)^(0+128),w
  2841  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2843  026A  00D9               	movwf	___fladd@a+3
  2844  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2845  026C  1303               	bcf	3,6	;RP1=0, select bank1
  2846  026D  0848               	movf	(sprintf@fval+2)^(0+128),w
  2847  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2848  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0270  00D8               	movwf	___fladd@a+2
  2850  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2852  0273  0847               	movf	(sprintf@fval+1)^(0+128),w
  2853  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0276  00D7               	movwf	___fladd@a+1
  2856  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2857  0278  1303               	bcf	3,6	;RP1=0, select bank1
  2858  0279  0846               	movf	sprintf@fval^(0+128),w
  2859  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2860  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2861  027C  00D6               	movwf	___fladd@a
  2862  027D  160A  118A  2578  120A  118A  	fcall	___fladd
  2863  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0284  0855               	movf	?___fladd+3,w
  2866  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2867  0286  1303               	bcf	3,6	;RP1=0, select bank1
  2868  0287  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2869  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2871  028A  0854               	movf	?___fladd+2,w
  2872  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2873  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2874  028D  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2875  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2876  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0290  0853               	movf	?___fladd+1,w
  2878  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2879  0292  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0293  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2881  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0296  0852               	movf	?___fladd,w
  2884  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2885  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2886  0299  00C6               	movwf	sprintf@fval^(0+128)
  2887  029A                     l3761:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2890  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2891  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2892  029C  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2893  029D  3A80               	xorlw	128
  2894  029E  00FF               	movwf	btemp+1
  2895  029F  3080               	movlw	128
  2896  02A0  027F               	subwf	btemp+1,w
  2897  02A1  1D03               	skipz
  2898  02A2  2AA5               	goto	u5415
  2899  02A3  300A               	movlw	10
  2900  02A4  023B               	subwf	sprintf@eexp^(0+128),w
  2901  02A5                     u5415:
  2902  02A5  1803               	skipnc
  2903  02A6  2AA8               	goto	u5411
  2904  02A7  2AA9               	goto	u5410
  2905  02A8                     u5411:
  2906  02A8  2AFA               	goto	l3769
  2907  02A9                     u5410:
  2908  02A9                     l3763:
  2909  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2910  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2911  02AB  0849               	movf	(sprintf@fval+3)^(0+128),w
  2912  02AC  00F3               	movwf	___fleq@ff1+3
  2913  02AD  0848               	movf	(sprintf@fval+2)^(0+128),w
  2914  02AE  00F2               	movwf	___fleq@ff1+2
  2915  02AF  0847               	movf	(sprintf@fval+1)^(0+128),w
  2916  02B0  00F1               	movwf	___fleq@ff1+1
  2917  02B1  0846               	movf	sprintf@fval^(0+128),w
  2918  02B2  00F0               	movwf	___fleq@ff1
  2919  02B3  3000               	movlw	0
  2920  02B4  00F7               	movwf	___fleq@ff2+3
  2921  02B5  3000               	movlw	0
  2922  02B6  00F6               	movwf	___fleq@ff2+2
  2923  02B7  3000               	movlw	0
  2924  02B8  00F5               	movwf	___fleq@ff2+1
  2925  02B9  3000               	movlw	0
  2926  02BA  00F4               	movwf	___fleq@ff2
  2927  02BB  160A  158A  23CA  120A  118A  	fcall	___fleq
  2928  02C0  1803               	btfsc	3,0
  2929  02C1  2AC3               	goto	u5421
  2930  02C2  2AC4               	goto	u5420
  2931  02C3                     u5421:
  2932  02C3  2B6C               	goto	l3783
  2933  02C4                     u5420:
  2934  02C4                     l3765:
  2935  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2936  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2937  02C6  0849               	movf	(sprintf@fval+3)^(0+128),w
  2938  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2939  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2940  02C9  00D4               	movwf	___fltol@f1+3
  2941  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2942  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  2943  02CC  0848               	movf	(sprintf@fval+2)^(0+128),w
  2944  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2945  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2946  02CF  00D3               	movwf	___fltol@f1+2
  2947  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2948  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2949  02D2  0847               	movf	(sprintf@fval+1)^(0+128),w
  2950  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2951  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2952  02D5  00D2               	movwf	___fltol@f1+1
  2953  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2954  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2955  02D8  0846               	movf	sprintf@fval^(0+128),w
  2956  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2957  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2958  02DB  00D1               	movwf	___fltol@f1
  2959  02DC  120A  158A  20C4  120A  118A  	fcall	___fltol
  2960  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2961  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2962  02E3  0854               	movf	?___fltol+3,w
  2963  02E4  0453               	iorwf	?___fltol+2,w
  2964  02E5  0452               	iorwf	?___fltol+1,w
  2965  02E6  0451               	iorwf	?___fltol,w
  2966  02E7  1D03               	skipz
  2967  02E8  2AEA               	goto	u5431
  2968  02E9  2AEB               	goto	u5430
  2969  02EA                     u5431:
  2970  02EA  2B6C               	goto	l3783
  2971  02EB                     u5430:
  2972  02EB                     l3767:
  2973  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2974  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2975  02ED  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2976  02EE  3A80               	xorlw	128
  2977  02EF  00FF               	movwf	btemp+1
  2978  02F0  3080               	movlw	128
  2979  02F1  027F               	subwf	btemp+1,w
  2980  02F2  1D03               	skipz
  2981  02F3  2AF6               	goto	u5445
  2982  02F4  3002               	movlw	2
  2983  02F5  023B               	subwf	sprintf@eexp^(0+128),w
  2984  02F6                     u5445:
  2985  02F6  1C03               	skipc
  2986  02F7  2AF9               	goto	u5441
  2987  02F8  2AFA               	goto	u5440
  2988  02F9                     u5441:
  2989  02F9  2B6C               	goto	l3783
  2990  02FA                     u5440:
  2991  02FA                     l3769:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2994  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2995  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2996  02FC  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  2997  02FD  00F3               	movwf	___flge@ff1+3
  2998  02FE  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  2999  02FF  00F2               	movwf	___flge@ff1+2
  3000  0300  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  3001  0301  00F1               	movwf	___flge@ff1+1
  3002  0302  083D               	movf	sprintf@tmpval^(0+128),w
  3003  0303  00F0               	movwf	___flge@ff1
  3004  0304  3040               	movlw	64
  3005  0305  00F7               	movwf	___flge@ff2+3
  3006  0306  3089               	movlw	137
  3007  0307  00F6               	movwf	___flge@ff2+2
  3008  0308  3070               	movlw	112
  3009  0309  00F5               	movwf	___flge@ff2+1
  3010  030A  305F               	movlw	95
  3011  030B  00F4               	movwf	___flge@ff2
  3012  030C  160A  158A  25E7  120A  118A  	fcall	___flge
  3013  0311  1803               	btfsc	3,0
  3014  0312  2B14               	goto	u5451
  3015  0313  2B15               	goto	u5450
  3016  0314                     u5451:
  3017  0314  2B1E               	goto	l3773
  3018  0315                     u5450:
  3019  0315                     l3771:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3022  0315  30F7               	movlw	247
  3023  0316  1683               	bsf	3,5	;RP0=1, select bank1
  3024  0317  1303               	bcf	3,6	;RP1=0, select bank1
  3025  0318  07BB               	addwf	sprintf@eexp^(0+128),f
  3026  0319  1803               	skipnc
  3027  031A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3028  031B  30FF               	movlw	255
  3029  031C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3032  031D  2B26               	goto	l3775
  3033  031E                     l3773:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3036  031E  30F8               	movlw	248
  3037  031F  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0320  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0321  07BB               	addwf	sprintf@eexp^(0+128),f
  3040  0322  1803               	skipnc
  3041  0323  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3042  0324  30FF               	movlw	255
  3043  0325  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3044  0326                     l3775:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3047  0326  083B               	movf	sprintf@eexp^(0+128),w
  3048  0327  120A  158A  2140  120A  118A  	fcall	_scale
  3049  032C  1283               	bcf	3,5	;RP0=0, select bank0
  3050  032D  1303               	bcf	3,6	;RP1=0, select bank0
  3051  032E  0841               	movf	?_scale+3,w
  3052  032F  1683               	bsf	3,5	;RP0=1, select bank1
  3053  0330  1303               	bcf	3,6	;RP1=0, select bank1
  3054  0331  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  3055  0332  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0333  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0334  0840               	movf	?_scale+2,w
  3058  0335  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0336  1303               	bcf	3,6	;RP1=0, select bank1
  3060  0337  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  3061  0338  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0339  1303               	bcf	3,6	;RP1=0, select bank0
  3063  033A  083F               	movf	?_scale+1,w
  3064  033B  1683               	bsf	3,5	;RP0=1, select bank1
  3065  033C  1303               	bcf	3,6	;RP1=0, select bank1
  3066  033D  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  3067  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3068  033F  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0340  083E               	movf	?_scale,w
  3070  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3071  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3072  0343  00BD               	movwf	sprintf@tmpval^(0+128)
  3073  0344                     l3777:
  3074  0344  0849               	movf	(sprintf@fval+3)^(0+128),w
  3075  0345  00F3               	movwf	__div_to_l_@f1+3
  3076  0346  0848               	movf	(sprintf@fval+2)^(0+128),w
  3077  0347  00F2               	movwf	__div_to_l_@f1+2
  3078  0348  0847               	movf	(sprintf@fval+1)^(0+128),w
  3079  0349  00F1               	movwf	__div_to_l_@f1+1
  3080  034A  0846               	movf	sprintf@fval^(0+128),w
  3081  034B  00F0               	movwf	__div_to_l_@f1
  3082  034C  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  3083  034D  00F7               	movwf	__div_to_l_@f2+3
  3084  034E  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  3085  034F  00F6               	movwf	__div_to_l_@f2+2
  3086  0350  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  3087  0351  00F5               	movwf	__div_to_l_@f2+1
  3088  0352  083D               	movf	sprintf@tmpval^(0+128),w
  3089  0353  00F4               	movwf	__div_to_l_@f2
  3090  0354  160A  118A  209A  120A  118A  	fcall	__div_to_l_
  3091  0359  0873               	movf	?__div_to_l_+3,w
  3092  035A  1683               	bsf	3,5	;RP0=1, select bank1
  3093  035B  1303               	bcf	3,6	;RP1=0, select bank1
  3094  035C  00C4               	movwf	(sprintf@val+3)^(0+128)
  3095  035D  0872               	movf	?__div_to_l_+2,w
  3096  035E  00C3               	movwf	(sprintf@val+2)^(0+128)
  3097  035F  0871               	movf	?__div_to_l_+1,w
  3098  0360  00C2               	movwf	(sprintf@val+1)^(0+128)
  3099  0361  0870               	movf	?__div_to_l_,w
  3100  0362  00C1               	movwf	sprintf@val^(0+128)
  3101  0363                     l3781:
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3104  0363  3000               	movlw	0
  3105  0364  00C9               	movwf	(sprintf@fval+3)^(0+128)
  3106  0365  3000               	movlw	0
  3107  0366  00C8               	movwf	(sprintf@fval+2)^(0+128)
  3108  0367  3000               	movlw	0
  3109  0368  00C7               	movwf	(sprintf@fval+1)^(0+128)
  3110  0369  3000               	movlw	0
  3111  036A  00C6               	movwf	sprintf@fval^(0+128)
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3114  036B  2BF0               	goto	l3789
  3115  036C                     l3783:
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3118  036C  1683               	bsf	3,5	;RP0=1, select bank1
  3119  036D  1303               	bcf	3,6	;RP1=0, select bank1
  3120  036E  0849               	movf	(sprintf@fval+3)^(0+128),w
  3121  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3123  0371  00D4               	movwf	___fltol@f1+3
  3124  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0373  1303               	bcf	3,6	;RP1=0, select bank1
  3126  0374  0848               	movf	(sprintf@fval+2)^(0+128),w
  3127  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0377  00D3               	movwf	___fltol@f1+2
  3130  0378  1683               	bsf	3,5	;RP0=1, select bank1
  3131  0379  1303               	bcf	3,6	;RP1=0, select bank1
  3132  037A  0847               	movf	(sprintf@fval+1)^(0+128),w
  3133  037B  1283               	bcf	3,5	;RP0=0, select bank0
  3134  037C  1303               	bcf	3,6	;RP1=0, select bank0
  3135  037D  00D2               	movwf	___fltol@f1+1
  3136  037E  1683               	bsf	3,5	;RP0=1, select bank1
  3137  037F  1303               	bcf	3,6	;RP1=0, select bank1
  3138  0380  0846               	movf	sprintf@fval^(0+128),w
  3139  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0383  00D1               	movwf	___fltol@f1
  3142  0384  120A  158A  20C4  120A  118A  	fcall	___fltol
  3143  0389  1283               	bcf	3,5	;RP0=0, select bank0
  3144  038A  1303               	bcf	3,6	;RP1=0, select bank0
  3145  038B  0854               	movf	?___fltol+3,w
  3146  038C  1683               	bsf	3,5	;RP0=1, select bank1
  3147  038D  1303               	bcf	3,6	;RP1=0, select bank1
  3148  038E  00C4               	movwf	(sprintf@val+3)^(0+128)
  3149  038F  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0390  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0391  0853               	movf	?___fltol+2,w
  3152  0392  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0393  1303               	bcf	3,6	;RP1=0, select bank1
  3154  0394  00C3               	movwf	(sprintf@val+2)^(0+128)
  3155  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0397  0852               	movf	?___fltol+1,w
  3158  0398  1683               	bsf	3,5	;RP0=1, select bank1
  3159  0399  1303               	bcf	3,6	;RP1=0, select bank1
  3160  039A  00C2               	movwf	(sprintf@val+1)^(0+128)
  3161  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3162  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3163  039D  0851               	movf	?___fltol,w
  3164  039E  1683               	bsf	3,5	;RP0=1, select bank1
  3165  039F  1303               	bcf	3,6	;RP1=0, select bank1
  3166  03A0  00C1               	movwf	sprintf@val^(0+128)
  3167  03A1                     l3785:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3170  03A1  0844               	movf	(sprintf@val+3)^(0+128),w
  3171  03A2  00F3               	movwf	___xxtofl@val+3
  3172  03A3  0843               	movf	(sprintf@val+2)^(0+128),w
  3173  03A4  00F2               	movwf	___xxtofl@val+2
  3174  03A5  0842               	movf	(sprintf@val+1)^(0+128),w
  3175  03A6  00F1               	movwf	___xxtofl@val+1
  3176  03A7  0841               	movf	sprintf@val^(0+128),w
  3177  03A8  00F0               	movwf	___xxtofl@val
  3178  03A9  3000               	movlw	0
  3179  03AA  160A  158A  2689  120A  118A  	fcall	___xxtofl
  3180  03AF  0873               	movf	?___xxtofl+3,w
  3181  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  3182  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  3183  03B2  00E9               	movwf	___flsub@a+3
  3184  03B3  0872               	movf	?___xxtofl+2,w
  3185  03B4  00E8               	movwf	___flsub@a+2
  3186  03B5  0871               	movf	?___xxtofl+1,w
  3187  03B6  00E7               	movwf	___flsub@a+1
  3188  03B7  0870               	movf	?___xxtofl,w
  3189  03B8  00E6               	movwf	___flsub@a
  3190  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  3191  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  3192  03BB  0849               	movf	(sprintf@fval+3)^(0+128),w
  3193  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3194  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3195  03BE  00ED               	movwf	___flsub@b+3
  3196  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  3197  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  3198  03C1  0848               	movf	(sprintf@fval+2)^(0+128),w
  3199  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3200  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3201  03C4  00EC               	movwf	___flsub@b+2
  3202  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3203  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3204  03C7  0847               	movf	(sprintf@fval+1)^(0+128),w
  3205  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3206  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3207  03CA  00EB               	movwf	___flsub@b+1
  3208  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  3209  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  3210  03CD  0846               	movf	sprintf@fval^(0+128),w
  3211  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3212  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3213  03D0  00EA               	movwf	___flsub@b
  3214  03D1  160A  158A  2228  120A  118A  	fcall	___flsub
  3215  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  3216  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  3217  03D8  0869               	movf	?___flsub+3,w
  3218  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  3219  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  3220  03DB  00C9               	movwf	(sprintf@fval+3)^(0+128)
  3221  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3222  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  3223  03DE  0868               	movf	?___flsub+2,w
  3224  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  3225  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  3226  03E1  00C8               	movwf	(sprintf@fval+2)^(0+128)
  3227  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3228  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3229  03E4  0867               	movf	?___flsub+1,w
  3230  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  3231  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  3232  03E7  00C7               	movwf	(sprintf@fval+1)^(0+128)
  3233  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3234  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3235  03EA  0866               	movf	?___flsub,w
  3236  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3237  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  3238  03ED  00C6               	movwf	sprintf@fval^(0+128)
  3239  03EE                     l3787:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3242  03EE  01BB               	clrf	sprintf@eexp^(0+128)
  3243  03EF  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3244  03F0                     l3789:
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3247  03F0  01CC               	clrf	sprintf@c^(0+128)
  3248  03F1  0ACC               	incf	sprintf@c^(0+128),f
  3249  03F2                     l3795:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3252  03F2  084C               	movf	sprintf@c^(0+128),w
  3253  03F3  00AF               	movwf	??_sprintf^(0+128)
  3254  03F4  3001               	movlw	1
  3255  03F5                     u5465:
  3256  03F5  1003               	clrc
  3257  03F6  0DAF               	rlf	??_sprintf^(0+128),f
  3258  03F7  3EFF               	addlw	-1
  3259  03F8  1D03               	skipz
  3260  03F9  2BF5               	goto	u5465
  3261  03FA  1003               	clrc
  3262  03FB  0D2F               	rlf	??_sprintf^(0+128),w
  3263  03FC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3264  03FD  0084               	movwf	4
  3265  03FE  120A  158A  200A  120A  118A  	fcall	stringdir
  3266  0403  00B0               	movwf	(??_sprintf+1)^(0+128)
  3267  0404  120A  158A  200A  120A  118A  	fcall	stringdir
  3268  0409  00B1               	movwf	((??_sprintf+1)^(0+128)+1)
  3269  040A  120A  158A  200A  120A  118A  	fcall	stringdir
  3270  040F  00B2               	movwf	((??_sprintf+1)^(0+128)+2)
  3271  0410  120A  158A  200A  120A  118A  	fcall	stringdir
  3272  0415  00B3               	movwf	((??_sprintf+1)^(0+128)+3)
  3273  0416  0833               	movf	(??_sprintf+4)^(0+128),w
  3274  0417  0244               	subwf	(sprintf@val+3)^(0+128),w
  3275  0418  1D03               	skipz
  3276  0419  2C24               	goto	u5475
  3277  041A  0832               	movf	(??_sprintf+3)^(0+128),w
  3278  041B  0243               	subwf	(sprintf@val+2)^(0+128),w
  3279  041C  1D03               	skipz
  3280  041D  2C24               	goto	u5475
  3281  041E  0831               	movf	(??_sprintf+2)^(0+128),w
  3282  041F  0242               	subwf	(sprintf@val+1)^(0+128),w
  3283  0420  1D03               	skipz
  3284  0421  2C24               	goto	u5475
  3285  0422  0830               	movf	(??_sprintf+1)^(0+128),w
  3286  0423  0241               	subwf	sprintf@val^(0+128),w
  3287  0424                     u5475:
  3288  0424  1803               	skipnc
  3289  0425  2C27               	goto	u5471
  3290  0426  2C28               	goto	u5470
  3291  0427                     u5471:
  3292  0427  2C29               	goto	l3799
  3293  0428                     u5470:
  3294  0428  2C33               	goto	l3801
  3295  0429                     l3799:
  3296  0429  3001               	movlw	1
  3297  042A  00AF               	movwf	??_sprintf^(0+128)
  3298  042B  082F               	movf	??_sprintf^(0+128),w
  3299  042C  07CC               	addwf	sprintf@c^(0+128),f
  3300  042D  300A               	movlw	10
  3301  042E  064C               	xorwf	sprintf@c^(0+128),w
  3302  042F  1D03               	btfss	3,2
  3303  0430  2C32               	goto	u5481
  3304  0431  2C33               	goto	u5480
  3305  0432                     u5481:
  3306  0432  2BF2               	goto	l3795
  3307  0433                     u5480:
  3308  0433                     l3801:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3311  0433  3003               	movlw	3
  3312  0434  0539               	andwf	sprintf@flag^(0+128),w
  3313  0435  00AF               	movwf	??_sprintf^(0+128)
  3314  0436  3000               	movlw	0
  3315  0437  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3316  0438  00B0               	movwf	(??_sprintf+1)^(0+128)
  3317  0439  082F               	movf	??_sprintf^(0+128),w
  3318  043A  0430               	iorwf	(??_sprintf^(0+128)+1),w
  3319  043B  1903               	btfsc	3,2
  3320  043C  2C3E               	goto	u5491
  3321  043D  2C3F               	goto	u5490
  3322  043E                     u5491:
  3323  043E  2CD1               	goto	l442
  3324  043F                     u5490:
  3325  043F                     l3803:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3328  043F  302D               	movlw	45
  3329  0440  00AF               	movwf	??_sprintf^(0+128)
  3330  0441  0845               	movf	sprintf@sp^(0+128),w
  3331  0442  0084               	movwf	4
  3332  0443  082F               	movf	??_sprintf^(0+128),w
  3333  0444  1383               	bcf	3,7	;select IRP bank0
  3334  0445  0080               	movwf	0
  3335  0446                     l3805:
  3336  0446  3001               	movlw	1
  3337  0447  00AF               	movwf	??_sprintf^(0+128)
  3338  0448  082F               	movf	??_sprintf^(0+128),w
  3339  0449  07C5               	addwf	sprintf@sp^(0+128),f
  3340  044A  2CD1               	goto	l442
  3341  044B                     l3807:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3344  044B  084C               	movf	sprintf@c^(0+128),w
  3345  044C  00AF               	movwf	??_sprintf^(0+128)
  3346  044D  3001               	movlw	1
  3347  044E                     u5505:
  3348  044E  1003               	clrc
  3349  044F  0DAF               	rlf	??_sprintf^(0+128),f
  3350  0450  3EFF               	addlw	-1
  3351  0451  1D03               	skipz
  3352  0452  2C4E               	goto	u5505
  3353  0453  1003               	clrc
  3354  0454  0D2F               	rlf	??_sprintf^(0+128),w
  3355  0455  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3356  0456  0084               	movwf	4
  3357  0457  120A  158A  200A  120A  118A  	fcall	stringdir
  3358  045C  00F0               	movwf	___lldiv@divisor
  3359  045D  120A  158A  200A  120A  118A  	fcall	stringdir
  3360  0462  00F1               	movwf	___lldiv@divisor+1
  3361  0463  120A  158A  200A  120A  118A  	fcall	stringdir
  3362  0468  00F2               	movwf	___lldiv@divisor+2
  3363  0469  120A  158A  200A  120A  118A  	fcall	stringdir
  3364  046E  00F3               	movwf	___lldiv@divisor+3
  3365  046F  0844               	movf	(sprintf@val+3)^(0+128),w
  3366  0470  00F7               	movwf	___lldiv@dividend+3
  3367  0471  0843               	movf	(sprintf@val+2)^(0+128),w
  3368  0472  00F6               	movwf	___lldiv@dividend+2
  3369  0473  0842               	movf	(sprintf@val+1)^(0+128),w
  3370  0474  00F5               	movwf	___lldiv@dividend+1
  3371  0475  0841               	movf	sprintf@val^(0+128),w
  3372  0476  00F4               	movwf	___lldiv@dividend
  3373  0477  160A  158A  2518  120A  118A  	fcall	___lldiv
  3374  047C  0873               	movf	?___lldiv+3,w
  3375  047D  1683               	bsf	3,5	;RP0=1, select bank1
  3376  047E  1303               	bcf	3,6	;RP1=0, select bank1
  3377  047F  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  3378  0480  0872               	movf	?___lldiv+2,w
  3379  0481  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  3380  0482  0871               	movf	?___lldiv+1,w
  3381  0483  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  3382  0484  0870               	movf	?___lldiv,w
  3383  0485  00BD               	movwf	sprintf@tmpval^(0+128)
  3384  0486                     l3809:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3387  0486  3000               	movlw	0
  3388  0487  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0488  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0489  00A3               	movwf	___llmod@divisor+3
  3391  048A  3000               	movlw	0
  3392  048B  00A2               	movwf	___llmod@divisor+2
  3393  048C  3000               	movlw	0
  3394  048D  00A1               	movwf	___llmod@divisor+1
  3395  048E  300A               	movlw	10
  3396  048F  00A0               	movwf	___llmod@divisor
  3397  0490  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0491  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0492  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  3400  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0495  00A7               	movwf	___llmod@dividend+3
  3403  0496  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0497  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0498  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  3406  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3407  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3408  049B  00A6               	movwf	___llmod@dividend+2
  3409  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3410  049D  1303               	bcf	3,6	;RP1=0, select bank1
  3411  049E  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  3412  049F  1283               	bcf	3,5	;RP0=0, select bank0
  3413  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  3414  04A1  00A5               	movwf	___llmod@dividend+1
  3415  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  3416  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  3417  04A4  083D               	movf	sprintf@tmpval^(0+128),w
  3418  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  3419  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  3420  04A7  00A4               	movwf	___llmod@dividend
  3421  04A8  160A  158A  2469  120A  118A  	fcall	___llmod
  3422  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3423  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3424  04AF  0823               	movf	?___llmod+3,w
  3425  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3426  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  3427  04B2  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  3428  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3429  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3430  04B5  0822               	movf	?___llmod+2,w
  3431  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  3432  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  3433  04B8  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  3434  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3435  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3436  04BB  0821               	movf	?___llmod+1,w
  3437  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  3438  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  3439  04BE  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  3440  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3441  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3442  04C1  0820               	movf	?___llmod,w
  3443  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  3444  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  3445  04C4  00BD               	movwf	sprintf@tmpval^(0+128)
  3446  04C5                     l3811:
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3449  04C5  083D               	movf	sprintf@tmpval^(0+128),w
  3450  04C6  3E30               	addlw	48
  3451  04C7  00AF               	movwf	??_sprintf^(0+128)
  3452  04C8  0845               	movf	sprintf@sp^(0+128),w
  3453  04C9  0084               	movwf	4
  3454  04CA  082F               	movf	??_sprintf^(0+128),w
  3455  04CB  1383               	bcf	3,7	;select IRP bank0
  3456  04CC  0080               	movwf	0
  3457  04CD  3001               	movlw	1
  3458  04CE  00AF               	movwf	??_sprintf^(0+128)
  3459  04CF  082F               	movf	??_sprintf^(0+128),w
  3460  04D0  07C5               	addwf	sprintf@sp^(0+128),f
  3461  04D1                     l442:	
  3462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
  3463                           
  3464                           
  3465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3466  04D1  3001               	movlw	1
  3467  04D2  02CC               	subwf	sprintf@c^(0+128),f
  3468  04D3  0A4C               	incf	sprintf@c^(0+128),w
  3469  04D4  1D03               	btfss	3,2
  3470  04D5  2CD7               	goto	u5511
  3471  04D6  2CD8               	goto	u5510
  3472  04D7                     u5511:
  3473  04D7  2C4B               	goto	l3807
  3474  04D8                     u5510:
  3475  04D8  2CEC               	goto	l3819
  3476  04D9                     l3813:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3479  04D9  3030               	movlw	48
  3480  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3481  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3482  04DC  00AF               	movwf	??_sprintf^(0+128)
  3483  04DD  0845               	movf	sprintf@sp^(0+128),w
  3484  04DE  0084               	movwf	4
  3485  04DF  082F               	movf	??_sprintf^(0+128),w
  3486  04E0  1383               	bcf	3,7	;select IRP bank0
  3487  04E1  0080               	movwf	0
  3488  04E2                     l3815:
  3489  04E2  3001               	movlw	1
  3490  04E3  00AF               	movwf	??_sprintf^(0+128)
  3491  04E4  082F               	movf	??_sprintf^(0+128),w
  3492  04E5  07C5               	addwf	sprintf@sp^(0+128),f
  3493  04E6                     l3817:
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3496  04E6  30FF               	movlw	255
  3497  04E7  07BB               	addwf	sprintf@eexp^(0+128),f
  3498  04E8  1803               	skipnc
  3499  04E9  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3500  04EA  30FF               	movlw	255
  3501  04EB  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3502  04EC                     l3819:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3505  04EC  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3506  04ED  3A80               	xorlw	128
  3507  04EE  00FF               	movwf	btemp+1
  3508  04EF  3080               	movlw	128
  3509  04F0  027F               	subwf	btemp+1,w
  3510  04F1  1D03               	skipz
  3511  04F2  2CF5               	goto	u5525
  3512  04F3  3001               	movlw	1
  3513  04F4  023B               	subwf	sprintf@eexp^(0+128),w
  3514  04F5                     u5525:
  3515  04F5  1803               	skipnc
  3516  04F6  2CF8               	goto	u5521
  3517  04F7  2CF9               	goto	u5520
  3518  04F8                     u5521:
  3519  04F8  2CD9               	goto	l3813
  3520  04F9                     u5520:
  3521  04F9                     l3821:
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3524  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  3525  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  3526  04FB  084B               	movf	(sprintf@prec+1)^(0+128),w
  3527  04FC  3A80               	xorlw	128
  3528  04FD  00FF               	movwf	btemp+1
  3529  04FE  3080               	movlw	128
  3530  04FF  027F               	subwf	btemp+1,w
  3531  0500  1D03               	skipz
  3532  0501  2D04               	goto	u5535
  3533  0502  3009               	movlw	9
  3534  0503  024A               	subwf	sprintf@prec^(0+128),w
  3535  0504                     u5535:
  3536  0504  1C03               	skipc
  3537  0505  2D07               	goto	u5531
  3538  0506  2D08               	goto	u5530
  3539  0507                     u5531:
  3540  0507  2D0F               	goto	l3825
  3541  0508                     u5530:
  3542  0508                     l3823:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3545  0508  3008               	movlw	8
  3546  0509  1683               	bsf	3,5	;RP0=1, select bank1
  3547  050A  1303               	bcf	3,6	;RP1=0, select bank1
  3548  050B  00AF               	movwf	??_sprintf^(0+128)
  3549  050C  082F               	movf	??_sprintf^(0+128),w
  3550  050D  00CC               	movwf	sprintf@c^(0+128)
  3551  050E  2D15               	goto	l449
  3552  050F                     l3825:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3555  050F  1683               	bsf	3,5	;RP0=1, select bank1
  3556  0510  1303               	bcf	3,6	;RP1=0, select bank1
  3557  0511  084A               	movf	sprintf@prec^(0+128),w
  3558  0512  00AF               	movwf	??_sprintf^(0+128)
  3559  0513  082F               	movf	??_sprintf^(0+128),w
  3560  0514  00CC               	movwf	sprintf@c^(0+128)
  3561  0515                     l449:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3564  0515  084C               	movf	sprintf@c^(0+128),w
  3565  0516  00AF               	movwf	??_sprintf^(0+128)
  3566  0517  01B0               	clrf	(??_sprintf^(0+128)+1)
  3567  0518  082F               	movf	??_sprintf^(0+128),w
  3568  0519  02CA               	subwf	sprintf@prec^(0+128),f
  3569  051A  0830               	movf	(??_sprintf+1)^(0+128),w
  3570  051B  1C03               	skipc
  3571  051C  03CB               	decf	(sprintf@prec+1)^(0+128),f
  3572  051D  02CB               	subwf	(sprintf@prec+1)^(0+128),f
  3573  051E                     l3827:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3576  051E  084C               	movf	sprintf@c^(0+128),w
  3577  051F  1903               	btfsc	3,2
  3578  0520  2D22               	goto	u5541
  3579  0521  2D23               	goto	u5540
  3580  0522                     u5541:
  3581  0522  2D2E               	goto	l3833
  3582  0523                     u5540:
  3583  0523                     l3829:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3586  0523  302E               	movlw	46
  3587  0524  00AF               	movwf	??_sprintf^(0+128)
  3588  0525  0845               	movf	sprintf@sp^(0+128),w
  3589  0526  0084               	movwf	4
  3590  0527  082F               	movf	??_sprintf^(0+128),w
  3591  0528  1383               	bcf	3,7	;select IRP bank0
  3592  0529  0080               	movwf	0
  3593  052A                     l3831:
  3594  052A  3001               	movlw	1
  3595  052B  00AF               	movwf	??_sprintf^(0+128)
  3596  052C  082F               	movf	??_sprintf^(0+128),w
  3597  052D  07C5               	addwf	sprintf@sp^(0+128),f
  3598  052E                     l3833:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3601  052E  084C               	movf	sprintf@c^(0+128),w
  3602  052F  120A  158A  2140  120A  118A  	fcall	_scale
  3603  0534  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0535  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0536  0841               	movf	?_scale+3,w
  3606  0537  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0538  1303               	bcf	3,6	;RP1=0, select bank1
  3608  0539  00B7               	movwf	(_sprintf$1353+3)^(0+128)
  3609  053A  1283               	bcf	3,5	;RP0=0, select bank0
  3610  053B  1303               	bcf	3,6	;RP1=0, select bank0
  3611  053C  0840               	movf	?_scale+2,w
  3612  053D  1683               	bsf	3,5	;RP0=1, select bank1
  3613  053E  1303               	bcf	3,6	;RP1=0, select bank1
  3614  053F  00B6               	movwf	(_sprintf$1353+2)^(0+128)
  3615  0540  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0541  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0542  083F               	movf	?_scale+1,w
  3618  0543  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0544  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0545  00B5               	movwf	(_sprintf$1353+1)^(0+128)
  3621  0546  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0547  1303               	bcf	3,6	;RP1=0, select bank0
  3623  0548  083E               	movf	?_scale,w
  3624  0549  1683               	bsf	3,5	;RP0=1, select bank1
  3625  054A  1303               	bcf	3,6	;RP1=0, select bank1
  3626  054B  00B4               	movwf	_sprintf$1353^(0+128)
  3627  054C                     l3835:
  3628                           
  3629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3630  054C  0837               	movf	(_sprintf$1353+3)^(0+128),w
  3631  054D  1283               	bcf	3,5	;RP0=0, select bank0
  3632  054E  1303               	bcf	3,6	;RP1=0, select bank0
  3633  054F  00AB               	movwf	___flmul@a+3
  3634  0550  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0551  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0552  0836               	movf	(_sprintf$1353+2)^(0+128),w
  3637  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0555  00AA               	movwf	___flmul@a+2
  3640  0556  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0557  1303               	bcf	3,6	;RP1=0, select bank1
  3642  0558  0835               	movf	(_sprintf$1353+1)^(0+128),w
  3643  0559  1283               	bcf	3,5	;RP0=0, select bank0
  3644  055A  1303               	bcf	3,6	;RP1=0, select bank0
  3645  055B  00A9               	movwf	___flmul@a+1
  3646  055C  1683               	bsf	3,5	;RP0=1, select bank1
  3647  055D  1303               	bcf	3,6	;RP1=0, select bank1
  3648  055E  0834               	movf	_sprintf$1353^(0+128),w
  3649  055F  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0560  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0561  00A8               	movwf	___flmul@a
  3652  0562  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0563  1303               	bcf	3,6	;RP1=0, select bank1
  3654  0564  0849               	movf	(sprintf@fval+3)^(0+128),w
  3655  0565  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0566  1303               	bcf	3,6	;RP1=0, select bank0
  3657  0567  00A7               	movwf	___flmul@b+3
  3658  0568  1683               	bsf	3,5	;RP0=1, select bank1
  3659  0569  1303               	bcf	3,6	;RP1=0, select bank1
  3660  056A  0848               	movf	(sprintf@fval+2)^(0+128),w
  3661  056B  1283               	bcf	3,5	;RP0=0, select bank0
  3662  056C  1303               	bcf	3,6	;RP1=0, select bank0
  3663  056D  00A6               	movwf	___flmul@b+2
  3664  056E  1683               	bsf	3,5	;RP0=1, select bank1
  3665  056F  1303               	bcf	3,6	;RP1=0, select bank1
  3666  0570  0847               	movf	(sprintf@fval+1)^(0+128),w
  3667  0571  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0572  1303               	bcf	3,6	;RP1=0, select bank0
  3669  0573  00A5               	movwf	___flmul@b+1
  3670  0574  1683               	bsf	3,5	;RP0=1, select bank1
  3671  0575  1303               	bcf	3,6	;RP1=0, select bank1
  3672  0576  0846               	movf	sprintf@fval^(0+128),w
  3673  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3674  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3675  0579  00A4               	movwf	___flmul@b
  3676  057A  120A  158A  249F  120A  118A  	fcall	___flmul
  3677  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0581  0827               	movf	?___flmul+3,w
  3680  0582  00D4               	movwf	___fltol@f1+3
  3681  0583  0826               	movf	?___flmul+2,w
  3682  0584  00D3               	movwf	___fltol@f1+2
  3683  0585  0825               	movf	?___flmul+1,w
  3684  0586  00D2               	movwf	___fltol@f1+1
  3685  0587  0824               	movf	?___flmul,w
  3686  0588  00D1               	movwf	___fltol@f1
  3687  0589  120A  158A  20C4  120A  118A  	fcall	___fltol
  3688  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3689  058F  1303               	bcf	3,6	;RP1=0, select bank0
  3690  0590  0854               	movf	?___fltol+3,w
  3691  0591  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0592  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0593  00C4               	movwf	(sprintf@val+3)^(0+128)
  3694  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0595  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0596  0853               	movf	?___fltol+2,w
  3697  0597  1683               	bsf	3,5	;RP0=1, select bank1
  3698  0598  1303               	bcf	3,6	;RP1=0, select bank1
  3699  0599  00C3               	movwf	(sprintf@val+2)^(0+128)
  3700  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3701  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3702  059C  0852               	movf	?___fltol+1,w
  3703  059D  1683               	bsf	3,5	;RP0=1, select bank1
  3704  059E  1303               	bcf	3,6	;RP1=0, select bank1
  3705  059F  00C2               	movwf	(sprintf@val+1)^(0+128)
  3706  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3707  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3708  05A2  0851               	movf	?___fltol,w
  3709  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3710  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3711  05A5  00C1               	movwf	sprintf@val^(0+128)
  3712                           
  3713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3714  05A6  2E88               	goto	l3845
  3715  05A7                     l3837:
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3718  05A7  084C               	movf	sprintf@c^(0+128),w
  3719  05A8  00AF               	movwf	??_sprintf^(0+128)
  3720  05A9  3001               	movlw	1
  3721  05AA                     u5555:
  3722  05AA  1003               	clrc
  3723  05AB  0DAF               	rlf	??_sprintf^(0+128),f
  3724  05AC  3EFF               	addlw	-1
  3725  05AD  1D03               	skipz
  3726  05AE  2DAA               	goto	u5555
  3727  05AF  1003               	clrc
  3728  05B0  0D2F               	rlf	??_sprintf^(0+128),w
  3729  05B1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3730  05B2  0084               	movwf	4
  3731  05B3  120A  158A  200A  120A  118A  	fcall	stringdir
  3732  05B8  00F0               	movwf	___lldiv@divisor
  3733  05B9  120A  158A  200A  120A  118A  	fcall	stringdir
  3734  05BE  00F1               	movwf	___lldiv@divisor+1
  3735  05BF  120A  158A  200A  120A  118A  	fcall	stringdir
  3736  05C4  00F2               	movwf	___lldiv@divisor+2
  3737  05C5  120A  158A  200A  120A  118A  	fcall	stringdir
  3738  05CA  00F3               	movwf	___lldiv@divisor+3
  3739  05CB  0844               	movf	(sprintf@val+3)^(0+128),w
  3740  05CC  00F7               	movwf	___lldiv@dividend+3
  3741  05CD  0843               	movf	(sprintf@val+2)^(0+128),w
  3742  05CE  00F6               	movwf	___lldiv@dividend+2
  3743  05CF  0842               	movf	(sprintf@val+1)^(0+128),w
  3744  05D0  00F5               	movwf	___lldiv@dividend+1
  3745  05D1  0841               	movf	sprintf@val^(0+128),w
  3746  05D2  00F4               	movwf	___lldiv@dividend
  3747  05D3  160A  158A  2518  120A  118A  	fcall	___lldiv
  3748  05D8  0873               	movf	?___lldiv+3,w
  3749  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3750  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3751  05DB  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  3752  05DC  0872               	movf	?___lldiv+2,w
  3753  05DD  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  3754  05DE  0871               	movf	?___lldiv+1,w
  3755  05DF  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  3756  05E0  0870               	movf	?___lldiv,w
  3757  05E1  00BD               	movwf	sprintf@tmpval^(0+128)
  3758  05E2                     l3839:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3761  05E2  3000               	movlw	0
  3762  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3763  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3764  05E5  00A3               	movwf	___llmod@divisor+3
  3765  05E6  3000               	movlw	0
  3766  05E7  00A2               	movwf	___llmod@divisor+2
  3767  05E8  3000               	movlw	0
  3768  05E9  00A1               	movwf	___llmod@divisor+1
  3769  05EA  300A               	movlw	10
  3770  05EB  00A0               	movwf	___llmod@divisor
  3771  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3772  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3773  05EE  0840               	movf	(sprintf@tmpval+3)^(0+128),w
  3774  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3775  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3776  05F1  00A7               	movwf	___llmod@dividend+3
  3777  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3778  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3779  05F4  083F               	movf	(sprintf@tmpval+2)^(0+128),w
  3780  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3781  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3782  05F7  00A6               	movwf	___llmod@dividend+2
  3783  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  3784  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  3785  05FA  083E               	movf	(sprintf@tmpval+1)^(0+128),w
  3786  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3787  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3788  05FD  00A5               	movwf	___llmod@dividend+1
  3789  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3790  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  3791  0600  083D               	movf	sprintf@tmpval^(0+128),w
  3792  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0603  00A4               	movwf	___llmod@dividend
  3795  0604  160A  158A  2469  120A  118A  	fcall	___llmod
  3796  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3797  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3798  060B  0823               	movf	?___llmod+3,w
  3799  060C  1683               	bsf	3,5	;RP0=1, select bank1
  3800  060D  1303               	bcf	3,6	;RP1=0, select bank1
  3801  060E  00C0               	movwf	(sprintf@tmpval+3)^(0+128)
  3802  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0611  0822               	movf	?___llmod+2,w
  3805  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3806  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3807  0614  00BF               	movwf	(sprintf@tmpval+2)^(0+128)
  3808  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3810  0617  0821               	movf	?___llmod+1,w
  3811  0618  1683               	bsf	3,5	;RP0=1, select bank1
  3812  0619  1303               	bcf	3,6	;RP1=0, select bank1
  3813  061A  00BE               	movwf	(sprintf@tmpval+1)^(0+128)
  3814  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3815  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3816  061D  0820               	movf	?___llmod,w
  3817  061E  1683               	bsf	3,5	;RP0=1, select bank1
  3818  061F  1303               	bcf	3,6	;RP1=0, select bank1
  3819  0620  00BD               	movwf	sprintf@tmpval^(0+128)
  3820  0621                     l3841:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3823  0621  083D               	movf	sprintf@tmpval^(0+128),w
  3824  0622  3E30               	addlw	48
  3825  0623  00AF               	movwf	??_sprintf^(0+128)
  3826  0624  0845               	movf	sprintf@sp^(0+128),w
  3827  0625  0084               	movwf	4
  3828  0626  082F               	movf	??_sprintf^(0+128),w
  3829  0627  1383               	bcf	3,7	;select IRP bank0
  3830  0628  0080               	movwf	0
  3831  0629  3001               	movlw	1
  3832  062A  00AF               	movwf	??_sprintf^(0+128)
  3833  062B  082F               	movf	??_sprintf^(0+128),w
  3834  062C  07C5               	addwf	sprintf@sp^(0+128),f
  3835  062D                     l3843:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3838  062D  084C               	movf	sprintf@c^(0+128),w
  3839  062E  00AF               	movwf	??_sprintf^(0+128)
  3840  062F  3001               	movlw	1
  3841  0630                     u5565:
  3842  0630  1003               	clrc
  3843  0631  0DAF               	rlf	??_sprintf^(0+128),f
  3844  0632  3EFF               	addlw	-1
  3845  0633  1D03               	skipz
  3846  0634  2E30               	goto	u5565
  3847  0635  1003               	clrc
  3848  0636  0D2F               	rlf	??_sprintf^(0+128),w
  3849  0637  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3850  0638  0084               	movwf	4
  3851  0639  120A  158A  200A  120A  118A  	fcall	stringdir
  3852  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3853  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3854  0640  00A0               	movwf	___llmod@divisor
  3855  0641  120A  158A  200A  120A  118A  	fcall	stringdir
  3856  0646  00A1               	movwf	___llmod@divisor+1
  3857  0647  120A  158A  200A  120A  118A  	fcall	stringdir
  3858  064C  00A2               	movwf	___llmod@divisor+2
  3859  064D  120A  158A  200A  120A  118A  	fcall	stringdir
  3860  0652  00A3               	movwf	___llmod@divisor+3
  3861  0653  1683               	bsf	3,5	;RP0=1, select bank1
  3862  0654  1303               	bcf	3,6	;RP1=0, select bank1
  3863  0655  0844               	movf	(sprintf@val+3)^(0+128),w
  3864  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0657  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0658  00A7               	movwf	___llmod@dividend+3
  3867  0659  1683               	bsf	3,5	;RP0=1, select bank1
  3868  065A  1303               	bcf	3,6	;RP1=0, select bank1
  3869  065B  0843               	movf	(sprintf@val+2)^(0+128),w
  3870  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3871  065D  1303               	bcf	3,6	;RP1=0, select bank0
  3872  065E  00A6               	movwf	___llmod@dividend+2
  3873  065F  1683               	bsf	3,5	;RP0=1, select bank1
  3874  0660  1303               	bcf	3,6	;RP1=0, select bank1
  3875  0661  0842               	movf	(sprintf@val+1)^(0+128),w
  3876  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3877  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3878  0664  00A5               	movwf	___llmod@dividend+1
  3879  0665  1683               	bsf	3,5	;RP0=1, select bank1
  3880  0666  1303               	bcf	3,6	;RP1=0, select bank1
  3881  0667  0841               	movf	sprintf@val^(0+128),w
  3882  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3884  066A  00A4               	movwf	___llmod@dividend
  3885  066B  160A  158A  2469  120A  118A  	fcall	___llmod
  3886  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0671  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0672  0823               	movf	?___llmod+3,w
  3889  0673  1683               	bsf	3,5	;RP0=1, select bank1
  3890  0674  1303               	bcf	3,6	;RP1=0, select bank1
  3891  0675  00C4               	movwf	(sprintf@val+3)^(0+128)
  3892  0676  1283               	bcf	3,5	;RP0=0, select bank0
  3893  0677  1303               	bcf	3,6	;RP1=0, select bank0
  3894  0678  0822               	movf	?___llmod+2,w
  3895  0679  1683               	bsf	3,5	;RP0=1, select bank1
  3896  067A  1303               	bcf	3,6	;RP1=0, select bank1
  3897  067B  00C3               	movwf	(sprintf@val+2)^(0+128)
  3898  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3899  067D  1303               	bcf	3,6	;RP1=0, select bank0
  3900  067E  0821               	movf	?___llmod+1,w
  3901  067F  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0680  1303               	bcf	3,6	;RP1=0, select bank1
  3903  0681  00C2               	movwf	(sprintf@val+1)^(0+128)
  3904  0682  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0683  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0684  0820               	movf	?___llmod,w
  3907  0685  1683               	bsf	3,5	;RP0=1, select bank1
  3908  0686  1303               	bcf	3,6	;RP1=0, select bank1
  3909  0687  00C1               	movwf	sprintf@val^(0+128)
  3910  0688                     l3845:
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3913  0688  3001               	movlw	1
  3914  0689  02CC               	subwf	sprintf@c^(0+128),f
  3915  068A  0A4C               	incf	sprintf@c^(0+128),w
  3916  068B  1D03               	btfss	3,2
  3917  068C  2E8E               	goto	u5571
  3918  068D  2E8F               	goto	u5570
  3919  068E                     u5571:
  3920  068E  2DA7               	goto	l3837
  3921  068F                     u5570:
  3922  068F  2EA1               	goto	l3853
  3923  0690                     l3847:
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3926  0690  3030               	movlw	48
  3927  0691  00AF               	movwf	??_sprintf^(0+128)
  3928  0692  0845               	movf	sprintf@sp^(0+128),w
  3929  0693  0084               	movwf	4
  3930  0694  082F               	movf	??_sprintf^(0+128),w
  3931  0695  1383               	bcf	3,7	;select IRP bank0
  3932  0696  0080               	movwf	0
  3933  0697                     l3849:
  3934  0697  3001               	movlw	1
  3935  0698  00AF               	movwf	??_sprintf^(0+128)
  3936  0699  082F               	movf	??_sprintf^(0+128),w
  3937  069A  07C5               	addwf	sprintf@sp^(0+128),f
  3938  069B                     l3851:
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3941  069B  30FF               	movlw	255
  3942  069C  07CA               	addwf	sprintf@prec^(0+128),f
  3943  069D  1803               	skipnc
  3944  069E  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  3945  069F  30FF               	movlw	255
  3946  06A0  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  3947  06A1                     l3853:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3950  06A1  084A               	movf	sprintf@prec^(0+128),w
  3951  06A2  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  3952  06A3  1D03               	btfss	3,2
  3953  06A4  2EA6               	goto	u5581
  3954  06A5  2EA7               	goto	u5580
  3955  06A6                     u5581:
  3956  06A6  2E90               	goto	l3847
  3957  06A7                     u5580:
  3958  06A7  2FD0               	goto	l3905
  3959  06A8                     l3855:
  3960                           
  3961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3962  06A8  0838               	movf	sprintf@ap^(0+128),w
  3963  06A9  0084               	movwf	4
  3964  06AA  1383               	bcf	3,7	;select IRP bank0
  3965  06AB  0800               	movf	0,w
  3966  06AC  00AF               	movwf	??_sprintf^(0+128)
  3967  06AD  0A84               	incf	4,f
  3968  06AE  0800               	movf	0,w
  3969  06AF  00B0               	movwf	(??_sprintf^(0+128)+1)
  3970  06B0  082F               	movf	??_sprintf^(0+128),w
  3971  06B1  00C1               	movwf	sprintf@val^(0+128)
  3972  06B2  0830               	movf	(??_sprintf+1)^(0+128),w
  3973  06B3  00C2               	movwf	(sprintf@val+1)^(0+128)
  3974  06B4  3000               	movlw	0
  3975  06B5  1BC2               	btfsc	(sprintf@val+1)^(0+128),7
  3976  06B6  30FF               	movlw	255
  3977  06B7  00C3               	movwf	(sprintf@val+2)^(0+128)
  3978  06B8  00C4               	movwf	(sprintf@val+3)^(0+128)
  3979  06B9                     l3857:
  3980  06B9  3002               	movlw	2
  3981  06BA  00AF               	movwf	??_sprintf^(0+128)
  3982  06BB  082F               	movf	??_sprintf^(0+128),w
  3983  06BC  07B8               	addwf	sprintf@ap^(0+128),f
  3984  06BD                     l3859:
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3987  06BD  1FC4               	btfss	(sprintf@val+3)^(0+128),7
  3988  06BE  2EC0               	goto	u5591
  3989  06BF  2EC1               	goto	u5590
  3990  06C0                     u5591:
  3991  06C0  2ED0               	goto	l3865
  3992  06C1                     u5590:
  3993  06C1                     l3861:
  3994                           
  3995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3996  06C1  3003               	movlw	3
  3997  06C2  04B9               	iorwf	sprintf@flag^(0+128),f
  3998  06C3  3000               	movlw	0
  3999  06C4  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  4000  06C5                     l3863:
  4001                           
  4002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4003  06C5  09C1               	comf	sprintf@val^(0+128),f
  4004  06C6  09C2               	comf	(sprintf@val+1)^(0+128),f
  4005  06C7  09C3               	comf	(sprintf@val+2)^(0+128),f
  4006  06C8  09C4               	comf	(sprintf@val+3)^(0+128),f
  4007  06C9  0AC1               	incf	sprintf@val^(0+128),f
  4008  06CA  1903               	skipnz
  4009  06CB  0AC2               	incf	(sprintf@val+1)^(0+128),f
  4010  06CC  1903               	skipnz
  4011  06CD  0AC3               	incf	(sprintf@val+2)^(0+128),f
  4012  06CE  1903               	skipnz
  4013  06CF  0AC4               	incf	(sprintf@val+3)^(0+128),f
  4014  06D0                     l3865:
  4015                           
  4016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  4017  06D0  084A               	movf	sprintf@prec^(0+128),w
  4018  06D1  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  4019  06D2  1D03               	btfss	3,2
  4020  06D3  2ED5               	goto	u5601
  4021  06D4  2ED6               	goto	u5600
  4022  06D5                     u5601:
  4023  06D5  2EE4               	goto	l3871
  4024  06D6                     u5600:
  4025  06D6                     l3867:
  4026  06D6  0844               	movf	(sprintf@val+3)^(0+128),w
  4027  06D7  0443               	iorwf	(sprintf@val+2)^(0+128),w
  4028  06D8  0442               	iorwf	(sprintf@val+1)^(0+128),w
  4029  06D9  0441               	iorwf	sprintf@val^(0+128),w
  4030  06DA  1D03               	skipz
  4031  06DB  2EDD               	goto	u5611
  4032  06DC  2EDE               	goto	u5610
  4033  06DD                     u5611:
  4034  06DD  2EE4               	goto	l3871
  4035  06DE                     u5610:
  4036  06DE                     l3869:
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4039  06DE  3001               	movlw	1
  4040  06DF  07CA               	addwf	sprintf@prec^(0+128),f
  4041  06E0  1803               	skipnc
  4042  06E1  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  4043  06E2  3000               	movlw	0
  4044  06E3  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  4045  06E4                     l3871:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4048  06E4  01CC               	clrf	sprintf@c^(0+128)
  4049  06E5  0ACC               	incf	sprintf@c^(0+128),f
  4050  06E6                     l3877:
  4051                           
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4053  06E6  084C               	movf	sprintf@c^(0+128),w
  4054  06E7  00AF               	movwf	??_sprintf^(0+128)
  4055  06E8  3001               	movlw	1
  4056  06E9                     u5625:
  4057  06E9  1003               	clrc
  4058  06EA  0DAF               	rlf	??_sprintf^(0+128),f
  4059  06EB  3EFF               	addlw	-1
  4060  06EC  1D03               	skipz
  4061  06ED  2EE9               	goto	u5625
  4062  06EE  1003               	clrc
  4063  06EF  0D2F               	rlf	??_sprintf^(0+128),w
  4064  06F0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4065  06F1  0084               	movwf	4
  4066  06F2  120A  158A  200A  120A  118A  	fcall	stringdir
  4067  06F7  00B0               	movwf	(??_sprintf+1)^(0+128)
  4068  06F8  120A  158A  200A  120A  118A  	fcall	stringdir
  4069  06FD  00B1               	movwf	((??_sprintf+1)^(0+128)+1)
  4070  06FE  120A  158A  200A  120A  118A  	fcall	stringdir
  4071  0703  00B2               	movwf	((??_sprintf+1)^(0+128)+2)
  4072  0704  120A  158A  200A  120A  118A  	fcall	stringdir
  4073  0709  00B3               	movwf	((??_sprintf+1)^(0+128)+3)
  4074  070A  0833               	movf	(??_sprintf+4)^(0+128),w
  4075  070B  0244               	subwf	(sprintf@val+3)^(0+128),w
  4076  070C  1D03               	skipz
  4077  070D  2F18               	goto	u5635
  4078  070E  0832               	movf	(??_sprintf+3)^(0+128),w
  4079  070F  0243               	subwf	(sprintf@val+2)^(0+128),w
  4080  0710  1D03               	skipz
  4081  0711  2F18               	goto	u5635
  4082  0712  0831               	movf	(??_sprintf+2)^(0+128),w
  4083  0713  0242               	subwf	(sprintf@val+1)^(0+128),w
  4084  0714  1D03               	skipz
  4085  0715  2F18               	goto	u5635
  4086  0716  0830               	movf	(??_sprintf+1)^(0+128),w
  4087  0717  0241               	subwf	sprintf@val^(0+128),w
  4088  0718                     u5635:
  4089  0718  1803               	skipnc
  4090  0719  2F1B               	goto	u5631
  4091  071A  2F1C               	goto	u5630
  4092  071B                     u5631:
  4093  071B  2F1D               	goto	l3881
  4094  071C                     u5630:
  4095  071C  2F27               	goto	l3883
  4096  071D                     l3881:
  4097  071D  3001               	movlw	1
  4098  071E  00AF               	movwf	??_sprintf^(0+128)
  4099  071F  082F               	movf	??_sprintf^(0+128),w
  4100  0720  07CC               	addwf	sprintf@c^(0+128),f
  4101  0721  300A               	movlw	10
  4102  0722  064C               	xorwf	sprintf@c^(0+128),w
  4103  0723  1D03               	btfss	3,2
  4104  0724  2F26               	goto	u5641
  4105  0725  2F27               	goto	u5640
  4106  0726                     u5641:
  4107  0726  2EE6               	goto	l3877
  4108  0727                     u5640:
  4109  0727                     l3883:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4112  0727  084B               	movf	(sprintf@prec+1)^(0+128),w
  4113  0728  3A80               	xorlw	128
  4114  0729  3C80               	sublw	128
  4115  072A  1D03               	skipz
  4116  072B  2F2E               	goto	u5655
  4117  072C  084A               	movf	sprintf@prec^(0+128),w
  4118  072D  024C               	subwf	sprintf@c^(0+128),w
  4119  072E                     u5655:
  4120  072E  1803               	skipnc
  4121  072F  2F31               	goto	u5651
  4122  0730  2F32               	goto	u5650
  4123  0731                     u5651:
  4124  0731  2F33               	goto	l3887
  4125  0732                     u5650:
  4126  0732                     l3885:
  4127  0732  2F4B               	goto	l3891
  4128  0733                     l3887:
  4129  0733  1683               	bsf	3,5	;RP0=1, select bank1
  4130  0734  1303               	bcf	3,6	;RP1=0, select bank1
  4131  0735  084B               	movf	(sprintf@prec+1)^(0+128),w
  4132  0736  3A80               	xorlw	128
  4133  0737  00AF               	movwf	??_sprintf^(0+128)
  4134  0738  3080               	movlw	128
  4135  0739  022F               	subwf	??_sprintf^(0+128),w
  4136  073A  1D03               	skipz
  4137  073B  2F3E               	goto	u5665
  4138  073C  084C               	movf	sprintf@c^(0+128),w
  4139  073D  024A               	subwf	sprintf@prec^(0+128),w
  4140  073E                     u5665:
  4141  073E  1803               	skipnc
  4142  073F  2F41               	goto	u5661
  4143  0740  2F42               	goto	u5660
  4144  0741                     u5661:
  4145  0741  2F4B               	goto	l3891
  4146  0742                     u5660:
  4147  0742                     l3889:
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4150  0742  1683               	bsf	3,5	;RP0=1, select bank1
  4151  0743  1303               	bcf	3,6	;RP1=0, select bank1
  4152  0744  084C               	movf	sprintf@c^(0+128),w
  4153  0745  00AF               	movwf	??_sprintf^(0+128)
  4154  0746  01B0               	clrf	(??_sprintf^(0+128)+1)
  4155  0747  082F               	movf	??_sprintf^(0+128),w
  4156  0748  00CA               	movwf	sprintf@prec^(0+128)
  4157  0749  0830               	movf	(??_sprintf+1)^(0+128),w
  4158  074A  00CB               	movwf	(sprintf@prec+1)^(0+128)
  4159  074B                     l3891:
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4162  074B  3003               	movlw	3
  4163  074C  1683               	bsf	3,5	;RP0=1, select bank1
  4164  074D  1303               	bcf	3,6	;RP1=0, select bank1
  4165  074E  0539               	andwf	sprintf@flag^(0+128),w
  4166  074F  00AF               	movwf	??_sprintf^(0+128)
  4167  0750  3000               	movlw	0
  4168  0751  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4169  0752  00B0               	movwf	(??_sprintf+1)^(0+128)
  4170  0753  082F               	movf	??_sprintf^(0+128),w
  4171  0754  0430               	iorwf	(??_sprintf^(0+128)+1),w
  4172  0755  1903               	btfsc	3,2
  4173  0756  2F58               	goto	u5671
  4174  0757  2F59               	goto	u5670
  4175  0758                     u5671:
  4176  0758  2FC2               	goto	l3903
  4177  0759                     u5670:
  4178  0759                     l3893:
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4181  0759  302D               	movlw	45
  4182  075A  00AF               	movwf	??_sprintf^(0+128)
  4183  075B  0845               	movf	sprintf@sp^(0+128),w
  4184  075C  0084               	movwf	4
  4185  075D  082F               	movf	??_sprintf^(0+128),w
  4186  075E  1383               	bcf	3,7	;select IRP bank0
  4187  075F  0080               	movwf	0
  4188  0760                     l3895:
  4189  0760  3001               	movlw	1
  4190  0761  00AF               	movwf	??_sprintf^(0+128)
  4191  0762  082F               	movf	??_sprintf^(0+128),w
  4192  0763  07C5               	addwf	sprintf@sp^(0+128),f
  4193  0764  2FC2               	goto	l3903
  4194  0765                     l3897:
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4197  0765  3000               	movlw	0
  4198  0766  1283               	bcf	3,5	;RP0=0, select bank0
  4199  0767  1303               	bcf	3,6	;RP1=0, select bank0
  4200  0768  00A3               	movwf	___llmod@divisor+3
  4201  0769  3000               	movlw	0
  4202  076A  00A2               	movwf	___llmod@divisor+2
  4203  076B  3000               	movlw	0
  4204  076C  00A1               	movwf	___llmod@divisor+1
  4205  076D  300A               	movlw	10
  4206  076E  00A0               	movwf	___llmod@divisor
  4207  076F  1683               	bsf	3,5	;RP0=1, select bank1
  4208  0770  1303               	bcf	3,6	;RP1=0, select bank1
  4209  0771  084A               	movf	sprintf@prec^(0+128),w
  4210  0772  00AF               	movwf	??_sprintf^(0+128)
  4211  0773  3001               	movlw	1
  4212  0774                     u5685:
  4213  0774  1003               	clrc
  4214  0775  0DAF               	rlf	??_sprintf^(0+128),f
  4215  0776  3EFF               	addlw	-1
  4216  0777  1D03               	skipz
  4217  0778  2F74               	goto	u5685
  4218  0779  1003               	clrc
  4219  077A  0D2F               	rlf	??_sprintf^(0+128),w
  4220  077B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4221  077C  0084               	movwf	4
  4222  077D  120A  158A  200A  120A  118A  	fcall	stringdir
  4223  0782  00F0               	movwf	___lldiv@divisor
  4224  0783  120A  158A  200A  120A  118A  	fcall	stringdir
  4225  0788  00F1               	movwf	___lldiv@divisor+1
  4226  0789  120A  158A  200A  120A  118A  	fcall	stringdir
  4227  078E  00F2               	movwf	___lldiv@divisor+2
  4228  078F  120A  158A  200A  120A  118A  	fcall	stringdir
  4229  0794  00F3               	movwf	___lldiv@divisor+3
  4230  0795  0844               	movf	(sprintf@val+3)^(0+128),w
  4231  0796  00F7               	movwf	___lldiv@dividend+3
  4232  0797  0843               	movf	(sprintf@val+2)^(0+128),w
  4233  0798  00F6               	movwf	___lldiv@dividend+2
  4234  0799  0842               	movf	(sprintf@val+1)^(0+128),w
  4235  079A  00F5               	movwf	___lldiv@dividend+1
  4236  079B  0841               	movf	sprintf@val^(0+128),w
  4237  079C  00F4               	movwf	___lldiv@dividend
  4238  079D  160A  158A  2518  120A  118A  	fcall	___lldiv
  4239  07A2  0873               	movf	?___lldiv+3,w
  4240  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4241  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4242  07A5  00A7               	movwf	___llmod@dividend+3
  4243  07A6  0872               	movf	?___lldiv+2,w
  4244  07A7  00A6               	movwf	___llmod@dividend+2
  4245  07A8  0871               	movf	?___lldiv+1,w
  4246  07A9  00A5               	movwf	___llmod@dividend+1
  4247  07AA  0870               	movf	?___lldiv,w
  4248  07AB  00A4               	movwf	___llmod@dividend
  4249  07AC  160A  158A  2469  120A  118A  	fcall	___llmod
  4250  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4251  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4252  07B3  0820               	movf	?___llmod,w
  4253  07B4  3E30               	addlw	48
  4254  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  4255  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  4256  07B7  00B0               	movwf	(??_sprintf+1)^(0+128)
  4257  07B8  0830               	movf	(??_sprintf+1)^(0+128),w
  4258  07B9  00CC               	movwf	sprintf@c^(0+128)
  4259  07BA                     l3899:
  4260                           
  4261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4262  07BA  084C               	movf	sprintf@c^(0+128),w
  4263  07BB  00AF               	movwf	??_sprintf^(0+128)
  4264  07BC  0845               	movf	sprintf@sp^(0+128),w
  4265  07BD  0084               	movwf	4
  4266  07BE  082F               	movf	??_sprintf^(0+128),w
  4267  07BF  1383               	bcf	3,7	;select IRP bank0
  4268  07C0  0080               	movwf	0
  4269  07C1  2F60               	goto	l3895
  4270  07C2                     l3903:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4273  07C2  30FF               	movlw	255
  4274  07C3  07CA               	addwf	sprintf@prec^(0+128),f
  4275  07C4  1803               	skipnc
  4276  07C5  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  4277  07C6  30FF               	movlw	255
  4278  07C7  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  4279  07C8  0A4A               	incf	sprintf@prec^(0+128),w
  4280  07C9  1D03               	skipz
  4281  07CA  2FCF               	goto	u5691
  4282  07CB  0A4B               	incf	(sprintf@prec+1)^(0+128),w
  4283  07CC  1D03               	btfss	3,2
  4284  07CD  2FCF               	goto	u5691
  4285  07CE  2FD0               	goto	u5690
  4286  07CF                     u5691:
  4287  07CF  2F65               	goto	l3897
  4288  07D0                     u5690:
  4289  07D0                     l3905:
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4292  07D0  3001               	movlw	1
  4293  07D1  07A0               	addwf	sprintf@f^(0+128),f
  4294  07D2  30FF               	movlw	-1
  4295  07D3  0720               	addwf	sprintf@f^(0+128),w
  4296  07D4  0084               	movwf	4
  4297  07D5  120A  158A  200A  120A  118A  	fcall	stringdir
  4298  07DA  00AF               	movwf	??_sprintf^(0+128)
  4299  07DB  082F               	movf	??_sprintf^(0+128),w
  4300  07DC  00CC               	movwf	sprintf@c^(0+128)
  4301  07DD  084C               	movf	sprintf@c^(0+128),w
  4302  07DE  1D03               	btfss	3,2
  4303  07DF  2FE1               	goto	u5701
  4304  07E0  2FE2               	goto	u5700
  4305  07E1                     u5701:
  4306  07E1  284E               	goto	l3681
  4307  07E2                     u5700:
  4308  07E2                     l3907:
  4309                           
  4310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4311  07E2  0845               	movf	sprintf@sp^(0+128),w
  4312  07E3  0084               	movwf	4
  4313  07E4  1383               	bcf	3,7	;select IRP bank0
  4314  07E5  0180               	clrf	0
  4315  07E6                     l470:
  4316  07E6  0008               	return
  4317  07E7                     __end_of_sprintf:
  4318                           
  4319                           	psect	text2
  4320  0940                     __ptext2:	
  4321 ;; *************** function _scale *****************
  4322 ;; Defined at:
  4323 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  scl             1    wreg     char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  scl             1   48[BANK0 ] char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  4   30[BANK0 ] char 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       4       0       0       0
  4338 ;;      Locals:         0       5       0       0       0
  4339 ;;      Temps:          0      10       0       0       0
  4340 ;;      Totals:         0      19       0       0       0
  4341 ;;Total ram usage:       19 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 2
  4344 ;; This function calls:
  4345 ;;		___awdiv
  4346 ;;		___awmod
  4347 ;;		___flmul
  4348 ;; This function is called by:
  4349 ;;		_sprintf
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           
  4354                           ;psect for function _scale
  4355  0940                     _scale:
  4356                           
  4357                           ;incstack = 0
  4358                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4359                           ;scale@scl stored from wreg
  4360  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4362  0942  00D0               	movwf	scale@scl
  4363  0943                     l3211:
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4366  0943  1FD0               	btfss	scale@scl,7
  4367  0944  2946               	goto	u4261
  4368  0945  2947               	goto	u4260
  4369  0946                     u4261:
  4370  0946  2AF4               	goto	l3233
  4371  0947                     u4260:
  4372  0947                     l3213:
  4373                           
  4374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4375  0947  09D0               	comf	scale@scl,f
  4376  0948  0AD0               	incf	scale@scl,f
  4377  0949                     l3215:
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4380  0949  0850               	movf	scale@scl,w
  4381  094A  3A80               	xorlw	128
  4382  094B  3E12               	addlw	-238
  4383  094C  1C03               	skipc
  4384  094D  294F               	goto	u4271
  4385  094E  2950               	goto	u4270
  4386  094F                     u4271:
  4387  094F  2A38               	goto	l3223
  4388  0950                     u4270:
  4389  0950                     l3217:
  4390                           
  4391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4392  0950  300A               	movlw	10
  4393  0951  00F7               	movwf	___awdiv@divisor
  4394  0952  3000               	movlw	0
  4395  0953  00F8               	movwf	___awdiv@divisor+1
  4396  0954  0850               	movf	scale@scl,w
  4397  0955  00F2               	movwf	___awmod@dividend
  4398  0956  01F3               	clrf	___awmod@dividend+1
  4399  0957  1BF2               	btfsc	___awmod@dividend,7
  4400  0958  03F3               	decf	___awmod@dividend+1,f
  4401  0959  3064               	movlw	100
  4402  095A  00F0               	movwf	___awmod@divisor
  4403  095B  3000               	movlw	0
  4404  095C  00F1               	movwf	___awmod@divisor+1
  4405  095D  160A  158A  24BF  120A  158A  	fcall	___awmod
  4406  0962  0871               	movf	?___awmod+1,w
  4407  0963  00FA               	movwf	___awdiv@dividend+1
  4408  0964  0870               	movf	?___awmod,w
  4409  0965  00F9               	movwf	___awdiv@dividend
  4410  0966  160A  118A  2031  120A  158A  	fcall	___awdiv
  4411  096B  0877               	movf	?___awdiv,w
  4412  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4413  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4414  096E  00C2               	movwf	??_scale
  4415  096F  3001               	movlw	1
  4416  0970                     u4285:
  4417  0970  1003               	clrc
  4418  0971  0DC2               	rlf	??_scale,f
  4419  0972  3EFF               	addlw	-1
  4420  0973  1D03               	skipz
  4421  0974  2970               	goto	u4285
  4422  0975  1003               	clrc
  4423  0976  0D42               	rlf	??_scale,w
  4424  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4425  0978  0084               	movwf	4
  4426  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  4427  097E  00C3               	movwf	??_scale+1
  4428  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  4429  0984  00C4               	movwf	??_scale+2
  4430  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  4431  098A  00C5               	movwf	??_scale+3
  4432  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  4433  0990  00C6               	movwf	??_scale+4
  4434  0991  0846               	movf	??_scale+4,w
  4435  0992  00A7               	movwf	___flmul@b+3
  4436  0993  0845               	movf	??_scale+3,w
  4437  0994  00A6               	movwf	___flmul@b+2
  4438  0995  0844               	movf	??_scale+2,w
  4439  0996  00A5               	movwf	___flmul@b+1
  4440  0997  0843               	movf	??_scale+1,w
  4441  0998  00A4               	movwf	___flmul@b
  4442  0999  3064               	movlw	100
  4443  099A  00F7               	movwf	___awdiv@divisor
  4444  099B  3000               	movlw	0
  4445  099C  00F8               	movwf	___awdiv@divisor+1
  4446  099D  0850               	movf	scale@scl,w
  4447  099E  00F9               	movwf	___awdiv@dividend
  4448  099F  01FA               	clrf	___awdiv@dividend+1
  4449  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4450  09A1  03FA               	decf	___awdiv@dividend+1,f
  4451  09A2  160A  118A  2031  120A  158A  	fcall	___awdiv
  4452  09A7  0877               	movf	?___awdiv,w
  4453  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4454  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4455  09AA  00C7               	movwf	??_scale+5
  4456  09AB  3001               	movlw	1
  4457  09AC                     u4295:
  4458  09AC  1003               	clrc
  4459  09AD  0DC7               	rlf	??_scale+5,f
  4460  09AE  3EFF               	addlw	-1
  4461  09AF  1D03               	skipz
  4462  09B0  29AC               	goto	u4295
  4463  09B1  1003               	clrc
  4464  09B2  0D47               	rlf	??_scale+5,w
  4465  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4466  09B4  0084               	movwf	4
  4467  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4468  09BA  00C8               	movwf	??_scale+6
  4469  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4470  09C0  00C9               	movwf	??_scale+7
  4471  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4472  09C6  00CA               	movwf	??_scale+8
  4473  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4474  09CC  00CB               	movwf	??_scale+9
  4475  09CD  084B               	movf	??_scale+9,w
  4476  09CE  00AB               	movwf	___flmul@a+3
  4477  09CF  084A               	movf	??_scale+8,w
  4478  09D0  00AA               	movwf	___flmul@a+2
  4479  09D1  0849               	movf	??_scale+7,w
  4480  09D2  00A9               	movwf	___flmul@a+1
  4481  09D3  0848               	movf	??_scale+6,w
  4482  09D4  00A8               	movwf	___flmul@a
  4483  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4484  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4485  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4486  09DC  0827               	movf	?___flmul+3,w
  4487  09DD  00CF               	movwf	_scale$1352+3
  4488  09DE  0826               	movf	?___flmul+2,w
  4489  09DF  00CE               	movwf	_scale$1352+2
  4490  09E0  0825               	movf	?___flmul+1,w
  4491  09E1  00CD               	movwf	_scale$1352+1
  4492  09E2  0824               	movf	?___flmul,w
  4493  09E3  00CC               	movwf	_scale$1352
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4496  09E4  300A               	movlw	10
  4497  09E5  00F0               	movwf	___awmod@divisor
  4498  09E6  3000               	movlw	0
  4499  09E7  00F1               	movwf	___awmod@divisor+1
  4500  09E8  0850               	movf	scale@scl,w
  4501  09E9  00F2               	movwf	___awmod@dividend
  4502  09EA  01F3               	clrf	___awmod@dividend+1
  4503  09EB  1BF2               	btfsc	___awmod@dividend,7
  4504  09EC  03F3               	decf	___awmod@dividend+1,f
  4505  09ED  160A  158A  24BF  120A  158A  	fcall	___awmod
  4506  09F2  0870               	movf	?___awmod,w
  4507  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4508  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4509  09F5  00C2               	movwf	??_scale
  4510  09F6  3001               	movlw	1
  4511  09F7                     u4305:
  4512  09F7  1003               	clrc
  4513  09F8  0DC2               	rlf	??_scale,f
  4514  09F9  3EFF               	addlw	-1
  4515  09FA  1D03               	skipz
  4516  09FB  29F7               	goto	u4305
  4517  09FC  1003               	clrc
  4518  09FD  0D42               	rlf	??_scale,w
  4519  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4520  09FF  0084               	movwf	4
  4521  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4522  0A05  00C3               	movwf	??_scale+1
  4523  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4524  0A0B  00C4               	movwf	??_scale+2
  4525  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4526  0A11  00C5               	movwf	??_scale+3
  4527  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4528  0A17  00C6               	movwf	??_scale+4
  4529  0A18  0846               	movf	??_scale+4,w
  4530  0A19  00A7               	movwf	___flmul@b+3
  4531  0A1A  0845               	movf	??_scale+3,w
  4532  0A1B  00A6               	movwf	___flmul@b+2
  4533  0A1C  0844               	movf	??_scale+2,w
  4534  0A1D  00A5               	movwf	___flmul@b+1
  4535  0A1E  0843               	movf	??_scale+1,w
  4536  0A1F  00A4               	movwf	___flmul@b
  4537  0A20  084F               	movf	_scale$1352+3,w
  4538  0A21  00AB               	movwf	___flmul@a+3
  4539  0A22  084E               	movf	_scale$1352+2,w
  4540  0A23  00AA               	movwf	___flmul@a+2
  4541  0A24  084D               	movf	_scale$1352+1,w
  4542  0A25  00A9               	movwf	___flmul@a+1
  4543  0A26  084C               	movf	_scale$1352,w
  4544  0A27  00A8               	movwf	___flmul@a
  4545  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4546  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0A2F  0827               	movf	?___flmul+3,w
  4549  0A30  00C1               	movwf	?_scale+3
  4550  0A31  0826               	movf	?___flmul+2,w
  4551  0A32  00C0               	movwf	?_scale+2
  4552  0A33  0825               	movf	?___flmul+1,w
  4553  0A34  00BF               	movwf	?_scale+1
  4554  0A35  0824               	movf	?___flmul,w
  4555  0A36  00BE               	movwf	?_scale
  4556  0A37  2C9E               	goto	l395
  4557  0A38                     l3223:
  4558  0A38  0850               	movf	scale@scl,w
  4559  0A39  3A80               	xorlw	128
  4560  0A3A  3E75               	addlw	-139
  4561  0A3B  1C03               	skipc
  4562  0A3C  2A3E               	goto	u4311
  4563  0A3D  2A3F               	goto	u4310
  4564  0A3E                     u4311:
  4565  0A3E  2AC7               	goto	l3229
  4566  0A3F                     u4310:
  4567  0A3F                     l3225:
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4570  0A3F  300A               	movlw	10
  4571  0A40  00F0               	movwf	___awmod@divisor
  4572  0A41  3000               	movlw	0
  4573  0A42  00F1               	movwf	___awmod@divisor+1
  4574  0A43  0850               	movf	scale@scl,w
  4575  0A44  00F2               	movwf	___awmod@dividend
  4576  0A45  01F3               	clrf	___awmod@dividend+1
  4577  0A46  1BF2               	btfsc	___awmod@dividend,7
  4578  0A47  03F3               	decf	___awmod@dividend+1,f
  4579  0A48  160A  158A  24BF  120A  158A  	fcall	___awmod
  4580  0A4D  0870               	movf	?___awmod,w
  4581  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0A50  00C2               	movwf	??_scale
  4584  0A51  3001               	movlw	1
  4585  0A52                     u4325:
  4586  0A52  1003               	clrc
  4587  0A53  0DC2               	rlf	??_scale,f
  4588  0A54  3EFF               	addlw	-1
  4589  0A55  1D03               	skipz
  4590  0A56  2A52               	goto	u4325
  4591  0A57  1003               	clrc
  4592  0A58  0D42               	rlf	??_scale,w
  4593  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4594  0A5A  0084               	movwf	4
  4595  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4596  0A60  00C3               	movwf	??_scale+1
  4597  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4598  0A66  00C4               	movwf	??_scale+2
  4599  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4600  0A6C  00C5               	movwf	??_scale+3
  4601  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4602  0A72  00C6               	movwf	??_scale+4
  4603  0A73  0846               	movf	??_scale+4,w
  4604  0A74  00A7               	movwf	___flmul@b+3
  4605  0A75  0845               	movf	??_scale+3,w
  4606  0A76  00A6               	movwf	___flmul@b+2
  4607  0A77  0844               	movf	??_scale+2,w
  4608  0A78  00A5               	movwf	___flmul@b+1
  4609  0A79  0843               	movf	??_scale+1,w
  4610  0A7A  00A4               	movwf	___flmul@b
  4611  0A7B  300A               	movlw	10
  4612  0A7C  00F7               	movwf	___awdiv@divisor
  4613  0A7D  3000               	movlw	0
  4614  0A7E  00F8               	movwf	___awdiv@divisor+1
  4615  0A7F  0850               	movf	scale@scl,w
  4616  0A80  00F9               	movwf	___awdiv@dividend
  4617  0A81  01FA               	clrf	___awdiv@dividend+1
  4618  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4619  0A83  03FA               	decf	___awdiv@dividend+1,f
  4620  0A84  160A  118A  2031  120A  158A  	fcall	___awdiv
  4621  0A89  0877               	movf	?___awdiv,w
  4622  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4623  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4624  0A8C  00C7               	movwf	??_scale+5
  4625  0A8D  3001               	movlw	1
  4626  0A8E                     u4335:
  4627  0A8E  1003               	clrc
  4628  0A8F  0DC7               	rlf	??_scale+5,f
  4629  0A90  3EFF               	addlw	-1
  4630  0A91  1D03               	skipz
  4631  0A92  2A8E               	goto	u4335
  4632  0A93  1003               	clrc
  4633  0A94  0D47               	rlf	??_scale+5,w
  4634  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4635  0A96  0084               	movwf	4
  4636  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4637  0A9C  00C8               	movwf	??_scale+6
  4638  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4639  0AA2  00C9               	movwf	??_scale+7
  4640  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4641  0AA8  00CA               	movwf	??_scale+8
  4642  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4643  0AAE  00CB               	movwf	??_scale+9
  4644  0AAF  084B               	movf	??_scale+9,w
  4645  0AB0  00AB               	movwf	___flmul@a+3
  4646  0AB1  084A               	movf	??_scale+8,w
  4647  0AB2  00AA               	movwf	___flmul@a+2
  4648  0AB3  0849               	movf	??_scale+7,w
  4649  0AB4  00A9               	movwf	___flmul@a+1
  4650  0AB5  0848               	movf	??_scale+6,w
  4651  0AB6  00A8               	movwf	___flmul@a
  4652  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4653  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4655  0ABE  0827               	movf	?___flmul+3,w
  4656  0ABF  00C1               	movwf	?_scale+3
  4657  0AC0  0826               	movf	?___flmul+2,w
  4658  0AC1  00C0               	movwf	?_scale+2
  4659  0AC2  0825               	movf	?___flmul+1,w
  4660  0AC3  00BF               	movwf	?_scale+1
  4661  0AC4  0824               	movf	?___flmul,w
  4662  0AC5  00BE               	movwf	?_scale
  4663  0AC6  2C9E               	goto	l395
  4664  0AC7                     l3229:
  4665                           
  4666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4667  0AC7  0850               	movf	scale@scl,w
  4668  0AC8  00C2               	movwf	??_scale
  4669  0AC9  3001               	movlw	1
  4670  0ACA                     u4345:
  4671  0ACA  1003               	clrc
  4672  0ACB  0DC2               	rlf	??_scale,f
  4673  0ACC  3EFF               	addlw	-1
  4674  0ACD  1D03               	skipz
  4675  0ACE  2ACA               	goto	u4345
  4676  0ACF  1003               	clrc
  4677  0AD0  0D42               	rlf	??_scale,w
  4678  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4679  0AD2  0084               	movwf	4
  4680  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4681  0AD8  00C3               	movwf	??_scale+1
  4682  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4683  0ADE  00C4               	movwf	??_scale+2
  4684  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4685  0AE4  00C5               	movwf	??_scale+3
  4686  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4687  0AEA  00C6               	movwf	??_scale+4
  4688  0AEB  0846               	movf	??_scale+4,w
  4689  0AEC  00C1               	movwf	?_scale+3
  4690  0AED  0845               	movf	??_scale+3,w
  4691  0AEE  00C0               	movwf	?_scale+2
  4692  0AEF  0844               	movf	??_scale+2,w
  4693  0AF0  00BF               	movwf	?_scale+1
  4694  0AF1  0843               	movf	??_scale+1,w
  4695  0AF2  00BE               	movwf	?_scale
  4696  0AF3  2C9E               	goto	l395
  4697  0AF4                     l3233:
  4698                           
  4699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4700  0AF4  0850               	movf	scale@scl,w
  4701  0AF5  3A80               	xorlw	128
  4702  0AF6  3E12               	addlw	-238
  4703  0AF7  1C03               	skipc
  4704  0AF8  2AFA               	goto	u4351
  4705  0AF9  2AFB               	goto	u4350
  4706  0AFA                     u4351:
  4707  0AFA  2BE3               	goto	l3241
  4708  0AFB                     u4350:
  4709  0AFB                     l3235:
  4710                           
  4711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4712  0AFB  300A               	movlw	10
  4713  0AFC  00F7               	movwf	___awdiv@divisor
  4714  0AFD  3000               	movlw	0
  4715  0AFE  00F8               	movwf	___awdiv@divisor+1
  4716  0AFF  0850               	movf	scale@scl,w
  4717  0B00  00F2               	movwf	___awmod@dividend
  4718  0B01  01F3               	clrf	___awmod@dividend+1
  4719  0B02  1BF2               	btfsc	___awmod@dividend,7
  4720  0B03  03F3               	decf	___awmod@dividend+1,f
  4721  0B04  3064               	movlw	100
  4722  0B05  00F0               	movwf	___awmod@divisor
  4723  0B06  3000               	movlw	0
  4724  0B07  00F1               	movwf	___awmod@divisor+1
  4725  0B08  160A  158A  24BF  120A  158A  	fcall	___awmod
  4726  0B0D  0871               	movf	?___awmod+1,w
  4727  0B0E  00FA               	movwf	___awdiv@dividend+1
  4728  0B0F  0870               	movf	?___awmod,w
  4729  0B10  00F9               	movwf	___awdiv@dividend
  4730  0B11  160A  118A  2031  120A  158A  	fcall	___awdiv
  4731  0B16  0877               	movf	?___awdiv,w
  4732  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4733  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4734  0B19  00C2               	movwf	??_scale
  4735  0B1A  3001               	movlw	1
  4736  0B1B                     u4365:
  4737  0B1B  1003               	clrc
  4738  0B1C  0DC2               	rlf	??_scale,f
  4739  0B1D  3EFF               	addlw	-1
  4740  0B1E  1D03               	skipz
  4741  0B1F  2B1B               	goto	u4365
  4742  0B20  1003               	clrc
  4743  0B21  0D42               	rlf	??_scale,w
  4744  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4745  0B23  0084               	movwf	4
  4746  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4747  0B29  00C3               	movwf	??_scale+1
  4748  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4749  0B2F  00C4               	movwf	??_scale+2
  4750  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4751  0B35  00C5               	movwf	??_scale+3
  4752  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4753  0B3B  00C6               	movwf	??_scale+4
  4754  0B3C  0846               	movf	??_scale+4,w
  4755  0B3D  00A7               	movwf	___flmul@b+3
  4756  0B3E  0845               	movf	??_scale+3,w
  4757  0B3F  00A6               	movwf	___flmul@b+2
  4758  0B40  0844               	movf	??_scale+2,w
  4759  0B41  00A5               	movwf	___flmul@b+1
  4760  0B42  0843               	movf	??_scale+1,w
  4761  0B43  00A4               	movwf	___flmul@b
  4762  0B44  3064               	movlw	100
  4763  0B45  00F7               	movwf	___awdiv@divisor
  4764  0B46  3000               	movlw	0
  4765  0B47  00F8               	movwf	___awdiv@divisor+1
  4766  0B48  0850               	movf	scale@scl,w
  4767  0B49  00F9               	movwf	___awdiv@dividend
  4768  0B4A  01FA               	clrf	___awdiv@dividend+1
  4769  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4770  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4771  0B4D  160A  118A  2031  120A  158A  	fcall	___awdiv
  4772  0B52  0877               	movf	?___awdiv,w
  4773  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0B55  00C7               	movwf	??_scale+5
  4776  0B56  3001               	movlw	1
  4777  0B57                     u4375:
  4778  0B57  1003               	clrc
  4779  0B58  0DC7               	rlf	??_scale+5,f
  4780  0B59  3EFF               	addlw	-1
  4781  0B5A  1D03               	skipz
  4782  0B5B  2B57               	goto	u4375
  4783  0B5C  1003               	clrc
  4784  0B5D  0D47               	rlf	??_scale+5,w
  4785  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4786  0B5F  0084               	movwf	4
  4787  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4788  0B65  00C8               	movwf	??_scale+6
  4789  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4790  0B6B  00C9               	movwf	??_scale+7
  4791  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4792  0B71  00CA               	movwf	??_scale+8
  4793  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4794  0B77  00CB               	movwf	??_scale+9
  4795  0B78  084B               	movf	??_scale+9,w
  4796  0B79  00AB               	movwf	___flmul@a+3
  4797  0B7A  084A               	movf	??_scale+8,w
  4798  0B7B  00AA               	movwf	___flmul@a+2
  4799  0B7C  0849               	movf	??_scale+7,w
  4800  0B7D  00A9               	movwf	___flmul@a+1
  4801  0B7E  0848               	movf	??_scale+6,w
  4802  0B7F  00A8               	movwf	___flmul@a
  4803  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4804  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4805  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4806  0B87  0827               	movf	?___flmul+3,w
  4807  0B88  00CF               	movwf	_scale$1352+3
  4808  0B89  0826               	movf	?___flmul+2,w
  4809  0B8A  00CE               	movwf	_scale$1352+2
  4810  0B8B  0825               	movf	?___flmul+1,w
  4811  0B8C  00CD               	movwf	_scale$1352+1
  4812  0B8D  0824               	movf	?___flmul,w
  4813  0B8E  00CC               	movwf	_scale$1352
  4814                           
  4815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4816  0B8F  300A               	movlw	10
  4817  0B90  00F0               	movwf	___awmod@divisor
  4818  0B91  3000               	movlw	0
  4819  0B92  00F1               	movwf	___awmod@divisor+1
  4820  0B93  0850               	movf	scale@scl,w
  4821  0B94  00F2               	movwf	___awmod@dividend
  4822  0B95  01F3               	clrf	___awmod@dividend+1
  4823  0B96  1BF2               	btfsc	___awmod@dividend,7
  4824  0B97  03F3               	decf	___awmod@dividend+1,f
  4825  0B98  160A  158A  24BF  120A  158A  	fcall	___awmod
  4826  0B9D  0870               	movf	?___awmod,w
  4827  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0BA0  00C2               	movwf	??_scale
  4830  0BA1  3001               	movlw	1
  4831  0BA2                     u4385:
  4832  0BA2  1003               	clrc
  4833  0BA3  0DC2               	rlf	??_scale,f
  4834  0BA4  3EFF               	addlw	-1
  4835  0BA5  1D03               	skipz
  4836  0BA6  2BA2               	goto	u4385
  4837  0BA7  1003               	clrc
  4838  0BA8  0D42               	rlf	??_scale,w
  4839  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4840  0BAA  0084               	movwf	4
  4841  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4842  0BB0  00C3               	movwf	??_scale+1
  4843  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4844  0BB6  00C4               	movwf	??_scale+2
  4845  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4846  0BBC  00C5               	movwf	??_scale+3
  4847  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4848  0BC2  00C6               	movwf	??_scale+4
  4849  0BC3  0846               	movf	??_scale+4,w
  4850  0BC4  00A7               	movwf	___flmul@b+3
  4851  0BC5  0845               	movf	??_scale+3,w
  4852  0BC6  00A6               	movwf	___flmul@b+2
  4853  0BC7  0844               	movf	??_scale+2,w
  4854  0BC8  00A5               	movwf	___flmul@b+1
  4855  0BC9  0843               	movf	??_scale+1,w
  4856  0BCA  00A4               	movwf	___flmul@b
  4857  0BCB  084F               	movf	_scale$1352+3,w
  4858  0BCC  00AB               	movwf	___flmul@a+3
  4859  0BCD  084E               	movf	_scale$1352+2,w
  4860  0BCE  00AA               	movwf	___flmul@a+2
  4861  0BCF  084D               	movf	_scale$1352+1,w
  4862  0BD0  00A9               	movwf	___flmul@a+1
  4863  0BD1  084C               	movf	_scale$1352,w
  4864  0BD2  00A8               	movwf	___flmul@a
  4865  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4866  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0BDA  0827               	movf	?___flmul+3,w
  4869  0BDB  00C1               	movwf	?_scale+3
  4870  0BDC  0826               	movf	?___flmul+2,w
  4871  0BDD  00C0               	movwf	?_scale+2
  4872  0BDE  0825               	movf	?___flmul+1,w
  4873  0BDF  00BF               	movwf	?_scale+1
  4874  0BE0  0824               	movf	?___flmul,w
  4875  0BE1  00BE               	movwf	?_scale
  4876  0BE2  2C9E               	goto	l395
  4877  0BE3                     l3241:
  4878  0BE3  0850               	movf	scale@scl,w
  4879  0BE4  3A80               	xorlw	128
  4880  0BE5  3E75               	addlw	-139
  4881  0BE6  1C03               	skipc
  4882  0BE7  2BE9               	goto	u4391
  4883  0BE8  2BEA               	goto	u4390
  4884  0BE9                     u4391:
  4885  0BE9  2C72               	goto	l3247
  4886  0BEA                     u4390:
  4887  0BEA                     l3243:
  4888                           
  4889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4890  0BEA  300A               	movlw	10
  4891  0BEB  00F0               	movwf	___awmod@divisor
  4892  0BEC  3000               	movlw	0
  4893  0BED  00F1               	movwf	___awmod@divisor+1
  4894  0BEE  0850               	movf	scale@scl,w
  4895  0BEF  00F2               	movwf	___awmod@dividend
  4896  0BF0  01F3               	clrf	___awmod@dividend+1
  4897  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4898  0BF2  03F3               	decf	___awmod@dividend+1,f
  4899  0BF3  160A  158A  24BF  120A  158A  	fcall	___awmod
  4900  0BF8  0870               	movf	?___awmod,w
  4901  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4903  0BFB  00C2               	movwf	??_scale
  4904  0BFC  3001               	movlw	1
  4905  0BFD                     u4405:
  4906  0BFD  1003               	clrc
  4907  0BFE  0DC2               	rlf	??_scale,f
  4908  0BFF  3EFF               	addlw	-1
  4909  0C00  1D03               	skipz
  4910  0C01  2BFD               	goto	u4405
  4911  0C02  1003               	clrc
  4912  0C03  0D42               	rlf	??_scale,w
  4913  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4914  0C05  0084               	movwf	4
  4915  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4916  0C0B  00C3               	movwf	??_scale+1
  4917  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4918  0C11  00C4               	movwf	??_scale+2
  4919  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4920  0C17  00C5               	movwf	??_scale+3
  4921  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4922  0C1D  00C6               	movwf	??_scale+4
  4923  0C1E  0846               	movf	??_scale+4,w
  4924  0C1F  00A7               	movwf	___flmul@b+3
  4925  0C20  0845               	movf	??_scale+3,w
  4926  0C21  00A6               	movwf	___flmul@b+2
  4927  0C22  0844               	movf	??_scale+2,w
  4928  0C23  00A5               	movwf	___flmul@b+1
  4929  0C24  0843               	movf	??_scale+1,w
  4930  0C25  00A4               	movwf	___flmul@b
  4931  0C26  300A               	movlw	10
  4932  0C27  00F7               	movwf	___awdiv@divisor
  4933  0C28  3000               	movlw	0
  4934  0C29  00F8               	movwf	___awdiv@divisor+1
  4935  0C2A  0850               	movf	scale@scl,w
  4936  0C2B  00F9               	movwf	___awdiv@dividend
  4937  0C2C  01FA               	clrf	___awdiv@dividend+1
  4938  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4939  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4940  0C2F  160A  118A  2031  120A  158A  	fcall	___awdiv
  4941  0C34  0877               	movf	?___awdiv,w
  4942  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0C37  00C7               	movwf	??_scale+5
  4945  0C38  3001               	movlw	1
  4946  0C39                     u4415:
  4947  0C39  1003               	clrc
  4948  0C3A  0DC7               	rlf	??_scale+5,f
  4949  0C3B  3EFF               	addlw	-1
  4950  0C3C  1D03               	skipz
  4951  0C3D  2C39               	goto	u4415
  4952  0C3E  1003               	clrc
  4953  0C3F  0D47               	rlf	??_scale+5,w
  4954  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4955  0C41  0084               	movwf	4
  4956  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4957  0C47  00C8               	movwf	??_scale+6
  4958  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4959  0C4D  00C9               	movwf	??_scale+7
  4960  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4961  0C53  00CA               	movwf	??_scale+8
  4962  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4963  0C59  00CB               	movwf	??_scale+9
  4964  0C5A  084B               	movf	??_scale+9,w
  4965  0C5B  00AB               	movwf	___flmul@a+3
  4966  0C5C  084A               	movf	??_scale+8,w
  4967  0C5D  00AA               	movwf	___flmul@a+2
  4968  0C5E  0849               	movf	??_scale+7,w
  4969  0C5F  00A9               	movwf	___flmul@a+1
  4970  0C60  0848               	movf	??_scale+6,w
  4971  0C61  00A8               	movwf	___flmul@a
  4972  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4973  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4974  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4975  0C69  0827               	movf	?___flmul+3,w
  4976  0C6A  00C1               	movwf	?_scale+3
  4977  0C6B  0826               	movf	?___flmul+2,w
  4978  0C6C  00C0               	movwf	?_scale+2
  4979  0C6D  0825               	movf	?___flmul+1,w
  4980  0C6E  00BF               	movwf	?_scale+1
  4981  0C6F  0824               	movf	?___flmul,w
  4982  0C70  00BE               	movwf	?_scale
  4983  0C71  2C9E               	goto	l395
  4984  0C72                     l3247:
  4985                           
  4986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4987  0C72  0850               	movf	scale@scl,w
  4988  0C73  00C2               	movwf	??_scale
  4989  0C74  3001               	movlw	1
  4990  0C75                     u4425:
  4991  0C75  1003               	clrc
  4992  0C76  0DC2               	rlf	??_scale,f
  4993  0C77  3EFF               	addlw	-1
  4994  0C78  1D03               	skipz
  4995  0C79  2C75               	goto	u4425
  4996  0C7A  1003               	clrc
  4997  0C7B  0D42               	rlf	??_scale,w
  4998  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4999  0C7D  0084               	movwf	4
  5000  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  5001  0C83  00C3               	movwf	??_scale+1
  5002  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  5003  0C89  00C4               	movwf	??_scale+2
  5004  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  5005  0C8F  00C5               	movwf	??_scale+3
  5006  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  5007  0C95  00C6               	movwf	??_scale+4
  5008  0C96  0846               	movf	??_scale+4,w
  5009  0C97  00C1               	movwf	?_scale+3
  5010  0C98  0845               	movf	??_scale+3,w
  5011  0C99  00C0               	movwf	?_scale+2
  5012  0C9A  0844               	movf	??_scale+2,w
  5013  0C9B  00BF               	movwf	?_scale+1
  5014  0C9C  0843               	movf	??_scale+1,w
  5015  0C9D  00BE               	movwf	?_scale
  5016  0C9E                     l395:
  5017  0C9E  0008               	return
  5018  0C9F                     __end_of_scale:
  5019                           
  5020                           	psect	text3
  5021  1CBF                     __ptext3:	
  5022 ;; *************** function ___awmod *****************
  5023 ;; Defined at:
  5024 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  divisor         2    0[COMMON] int 
  5027 ;;  dividend        2    2[COMMON] int 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  sign            1    6[COMMON] unsigned char 
  5030 ;;  counter         1    5[COMMON] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  2    0[COMMON] int 
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, status,0
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5040 ;;      Params:         4       0       0       0       0
  5041 ;;      Locals:         2       0       0       0       0
  5042 ;;      Temps:          1       0       0       0       0
  5043 ;;      Totals:         7       0       0       0       0
  5044 ;;Total ram usage:        7 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_scale
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function ___awmod
  5055  1CBF                     ___awmod:
  5056  1CBF                     l2671:	
  5057                           ;incstack = 0
  5058                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5059                           
  5060  1CBF  01F6               	clrf	___awmod@sign
  5061  1CC0                     l2673:
  5062  1CC0  1FF3               	btfss	___awmod@dividend+1,7
  5063  1CC1  2CC3               	goto	u3091
  5064  1CC2  2CC4               	goto	u3090
  5065  1CC3                     u3091:
  5066  1CC3  2CCB               	goto	l2679
  5067  1CC4                     u3090:
  5068  1CC4                     l2675:
  5069  1CC4  09F2               	comf	___awmod@dividend,f
  5070  1CC5  09F3               	comf	___awmod@dividend+1,f
  5071  1CC6  0AF2               	incf	___awmod@dividend,f
  5072  1CC7  1903               	skipnz
  5073  1CC8  0AF3               	incf	___awmod@dividend+1,f
  5074  1CC9                     l2677:
  5075  1CC9  01F6               	clrf	___awmod@sign
  5076  1CCA  0AF6               	incf	___awmod@sign,f
  5077  1CCB                     l2679:
  5078  1CCB  1FF1               	btfss	___awmod@divisor+1,7
  5079  1CCC  2CCE               	goto	u3101
  5080  1CCD  2CCF               	goto	u3100
  5081  1CCE                     u3101:
  5082  1CCE  2CD4               	goto	l2683
  5083  1CCF                     u3100:
  5084  1CCF                     l2681:
  5085  1CCF  09F0               	comf	___awmod@divisor,f
  5086  1CD0  09F1               	comf	___awmod@divisor+1,f
  5087  1CD1  0AF0               	incf	___awmod@divisor,f
  5088  1CD2  1903               	skipnz
  5089  1CD3  0AF1               	incf	___awmod@divisor+1,f
  5090  1CD4                     l2683:
  5091  1CD4  0870               	movf	___awmod@divisor,w
  5092  1CD5  0471               	iorwf	___awmod@divisor+1,w
  5093  1CD6  1903               	btfsc	3,2
  5094  1CD7  2CD9               	goto	u3111
  5095  1CD8  2CDA               	goto	u3110
  5096  1CD9                     u3111:
  5097  1CD9  2D09               	goto	l2701
  5098  1CDA                     u3110:
  5099  1CDA                     l2685:
  5100  1CDA  01F5               	clrf	___awmod@counter
  5101  1CDB  0AF5               	incf	___awmod@counter,f
  5102  1CDC  2CE8               	goto	l2691
  5103  1CDD                     l2687:
  5104  1CDD  3001               	movlw	1
  5105  1CDE                     u3125:
  5106  1CDE  1003               	clrc
  5107  1CDF  0DF0               	rlf	___awmod@divisor,f
  5108  1CE0  0DF1               	rlf	___awmod@divisor+1,f
  5109  1CE1  3EFF               	addlw	-1
  5110  1CE2  1D03               	skipz
  5111  1CE3  2CDE               	goto	u3125
  5112  1CE4                     l2689:
  5113  1CE4  3001               	movlw	1
  5114  1CE5  00F4               	movwf	??___awmod
  5115  1CE6  0874               	movf	??___awmod,w
  5116  1CE7  07F5               	addwf	___awmod@counter,f
  5117  1CE8                     l2691:
  5118  1CE8  1FF1               	btfss	___awmod@divisor+1,7
  5119  1CE9  2CEB               	goto	u3131
  5120  1CEA  2CEC               	goto	u3130
  5121  1CEB                     u3131:
  5122  1CEB  2CDD               	goto	l2687
  5123  1CEC                     u3130:
  5124  1CEC                     l2693:
  5125  1CEC  0871               	movf	___awmod@divisor+1,w
  5126  1CED  0273               	subwf	___awmod@dividend+1,w
  5127  1CEE  1D03               	skipz
  5128  1CEF  2CF2               	goto	u3145
  5129  1CF0  0870               	movf	___awmod@divisor,w
  5130  1CF1  0272               	subwf	___awmod@dividend,w
  5131  1CF2                     u3145:
  5132  1CF2  1C03               	skipc
  5133  1CF3  2CF5               	goto	u3141
  5134  1CF4  2CF6               	goto	u3140
  5135  1CF5                     u3141:
  5136  1CF5  2CFC               	goto	l2697
  5137  1CF6                     u3140:
  5138  1CF6                     l2695:
  5139  1CF6  0870               	movf	___awmod@divisor,w
  5140  1CF7  02F2               	subwf	___awmod@dividend,f
  5141  1CF8  0871               	movf	___awmod@divisor+1,w
  5142  1CF9  1C03               	skipc
  5143  1CFA  03F3               	decf	___awmod@dividend+1,f
  5144  1CFB  02F3               	subwf	___awmod@dividend+1,f
  5145  1CFC                     l2697:
  5146  1CFC  3001               	movlw	1
  5147  1CFD                     u3155:
  5148  1CFD  1003               	clrc
  5149  1CFE  0CF1               	rrf	___awmod@divisor+1,f
  5150  1CFF  0CF0               	rrf	___awmod@divisor,f
  5151  1D00  3EFF               	addlw	-1
  5152  1D01  1D03               	skipz
  5153  1D02  2CFD               	goto	u3155
  5154  1D03                     l2699:
  5155  1D03  3001               	movlw	1
  5156  1D04  02F5               	subwf	___awmod@counter,f
  5157  1D05  1D03               	btfss	3,2
  5158  1D06  2D08               	goto	u3161
  5159  1D07  2D09               	goto	u3160
  5160  1D08                     u3161:
  5161  1D08  2CEC               	goto	l2693
  5162  1D09                     u3160:
  5163  1D09                     l2701:
  5164  1D09  0876               	movf	___awmod@sign,w
  5165  1D0A  1903               	btfsc	3,2
  5166  1D0B  2D0D               	goto	u3171
  5167  1D0C  2D0E               	goto	u3170
  5168  1D0D                     u3171:
  5169  1D0D  2D13               	goto	l2705
  5170  1D0E                     u3170:
  5171  1D0E                     l2703:
  5172  1D0E  09F2               	comf	___awmod@dividend,f
  5173  1D0F  09F3               	comf	___awmod@dividend+1,f
  5174  1D10  0AF2               	incf	___awmod@dividend,f
  5175  1D11  1903               	skipnz
  5176  1D12  0AF3               	incf	___awmod@dividend+1,f
  5177  1D13                     l2705:
  5178  1D13  0873               	movf	___awmod@dividend+1,w
  5179  1D14  00F1               	movwf	?___awmod+1
  5180  1D15  0872               	movf	___awmod@dividend,w
  5181  1D16  00F0               	movwf	?___awmod
  5182  1D17                     l640:
  5183  1D17  0008               	return
  5184  1D18                     __end_of___awmod:
  5185                           
  5186                           	psect	text4
  5187  1031                     __ptext4:	
  5188 ;; *************** function ___awdiv *****************
  5189 ;; Defined at:
  5190 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  divisor         2    7[COMMON] int 
  5193 ;;  dividend        2    9[COMMON] int 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  quotient        2    2[BANK0 ] int 
  5196 ;;  sign            1    1[BANK0 ] unsigned char 
  5197 ;;  counter         1    0[BANK0 ] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  2    7[COMMON] int 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         4       0       0       0       0
  5208 ;;      Locals:         0       4       0       0       0
  5209 ;;      Temps:          1       0       0       0       0
  5210 ;;      Totals:         5       4       0       0       0
  5211 ;;Total ram usage:        9 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_scale
  5217 ;;		_sprintf
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           
  5222                           ;psect for function ___awdiv
  5223  1031                     ___awdiv:
  5224  1031                     l2627:	
  5225                           ;incstack = 0
  5226                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5227                           
  5228  1031  1283               	bcf	3,5	;RP0=0, select bank0
  5229  1032  1303               	bcf	3,6	;RP1=0, select bank0
  5230  1033  01A1               	clrf	___awdiv@sign
  5231  1034                     l2629:
  5232  1034  1FF8               	btfss	___awdiv@divisor+1,7
  5233  1035  2837               	goto	u2991
  5234  1036  2838               	goto	u2990
  5235  1037                     u2991:
  5236  1037  283F               	goto	l2635
  5237  1038                     u2990:
  5238  1038                     l2631:
  5239  1038  09F7               	comf	___awdiv@divisor,f
  5240  1039  09F8               	comf	___awdiv@divisor+1,f
  5241  103A  0AF7               	incf	___awdiv@divisor,f
  5242  103B  1903               	skipnz
  5243  103C  0AF8               	incf	___awdiv@divisor+1,f
  5244  103D                     l2633:
  5245  103D  01A1               	clrf	___awdiv@sign
  5246  103E  0AA1               	incf	___awdiv@sign,f
  5247  103F                     l2635:
  5248  103F  1FFA               	btfss	___awdiv@dividend+1,7
  5249  1040  2842               	goto	u3001
  5250  1041  2843               	goto	u3000
  5251  1042                     u3001:
  5252  1042  284C               	goto	l2641
  5253  1043                     u3000:
  5254  1043                     l2637:
  5255  1043  09F9               	comf	___awdiv@dividend,f
  5256  1044  09FA               	comf	___awdiv@dividend+1,f
  5257  1045  0AF9               	incf	___awdiv@dividend,f
  5258  1046  1903               	skipnz
  5259  1047  0AFA               	incf	___awdiv@dividend+1,f
  5260  1048                     l2639:
  5261  1048  3001               	movlw	1
  5262  1049  00FB               	movwf	??___awdiv
  5263  104A  087B               	movf	??___awdiv,w
  5264  104B  06A1               	xorwf	___awdiv@sign,f
  5265  104C                     l2641:
  5266  104C  01A2               	clrf	___awdiv@quotient
  5267  104D  01A3               	clrf	___awdiv@quotient+1
  5268  104E                     l2643:
  5269  104E  0877               	movf	___awdiv@divisor,w
  5270  104F  0478               	iorwf	___awdiv@divisor+1,w
  5271  1050  1903               	btfsc	3,2
  5272  1051  2853               	goto	u3011
  5273  1052  2854               	goto	u3010
  5274  1053                     u3011:
  5275  1053  288B               	goto	l2663
  5276  1054                     u3010:
  5277  1054                     l2645:
  5278  1054  01A0               	clrf	___awdiv@counter
  5279  1055  0AA0               	incf	___awdiv@counter,f
  5280  1056  2862               	goto	l2651
  5281  1057                     l2647:
  5282  1057  3001               	movlw	1
  5283  1058                     u3025:
  5284  1058  1003               	clrc
  5285  1059  0DF7               	rlf	___awdiv@divisor,f
  5286  105A  0DF8               	rlf	___awdiv@divisor+1,f
  5287  105B  3EFF               	addlw	-1
  5288  105C  1D03               	skipz
  5289  105D  2858               	goto	u3025
  5290  105E                     l2649:
  5291  105E  3001               	movlw	1
  5292  105F  00FB               	movwf	??___awdiv
  5293  1060  087B               	movf	??___awdiv,w
  5294  1061  07A0               	addwf	___awdiv@counter,f
  5295  1062                     l2651:
  5296  1062  1FF8               	btfss	___awdiv@divisor+1,7
  5297  1063  2865               	goto	u3031
  5298  1064  2866               	goto	u3030
  5299  1065                     u3031:
  5300  1065  2857               	goto	l2647
  5301  1066                     u3030:
  5302  1066                     l2653:
  5303  1066  3001               	movlw	1
  5304  1067                     u3045:
  5305  1067  1003               	clrc
  5306  1068  0DA2               	rlf	___awdiv@quotient,f
  5307  1069  0DA3               	rlf	___awdiv@quotient+1,f
  5308  106A  3EFF               	addlw	-1
  5309  106B  1D03               	skipz
  5310  106C  2867               	goto	u3045
  5311  106D  0878               	movf	___awdiv@divisor+1,w
  5312  106E  027A               	subwf	___awdiv@dividend+1,w
  5313  106F  1D03               	skipz
  5314  1070  2873               	goto	u3055
  5315  1071  0877               	movf	___awdiv@divisor,w
  5316  1072  0279               	subwf	___awdiv@dividend,w
  5317  1073                     u3055:
  5318  1073  1C03               	skipc
  5319  1074  2876               	goto	u3051
  5320  1075  2877               	goto	u3050
  5321  1076                     u3051:
  5322  1076  287E               	goto	l2659
  5323  1077                     u3050:
  5324  1077                     l2655:
  5325  1077  0877               	movf	___awdiv@divisor,w
  5326  1078  02F9               	subwf	___awdiv@dividend,f
  5327  1079  0878               	movf	___awdiv@divisor+1,w
  5328  107A  1C03               	skipc
  5329  107B  03FA               	decf	___awdiv@dividend+1,f
  5330  107C  02FA               	subwf	___awdiv@dividend+1,f
  5331  107D                     l2657:
  5332  107D  1422               	bsf	___awdiv@quotient,0
  5333  107E                     l2659:
  5334  107E  3001               	movlw	1
  5335  107F                     u3065:
  5336  107F  1003               	clrc
  5337  1080  0CF8               	rrf	___awdiv@divisor+1,f
  5338  1081  0CF7               	rrf	___awdiv@divisor,f
  5339  1082  3EFF               	addlw	-1
  5340  1083  1D03               	skipz
  5341  1084  287F               	goto	u3065
  5342  1085                     l2661:
  5343  1085  3001               	movlw	1
  5344  1086  02A0               	subwf	___awdiv@counter,f
  5345  1087  1D03               	btfss	3,2
  5346  1088  288A               	goto	u3071
  5347  1089  288B               	goto	u3070
  5348  108A                     u3071:
  5349  108A  2866               	goto	l2653
  5350  108B                     u3070:
  5351  108B                     l2663:
  5352  108B  0821               	movf	___awdiv@sign,w
  5353  108C  1903               	btfsc	3,2
  5354  108D  288F               	goto	u3081
  5355  108E  2890               	goto	u3080
  5356  108F                     u3081:
  5357  108F  2895               	goto	l2667
  5358  1090                     u3080:
  5359  1090                     l2665:
  5360  1090  09A2               	comf	___awdiv@quotient,f
  5361  1091  09A3               	comf	___awdiv@quotient+1,f
  5362  1092  0AA2               	incf	___awdiv@quotient,f
  5363  1093  1903               	skipnz
  5364  1094  0AA3               	incf	___awdiv@quotient+1,f
  5365  1095                     l2667:
  5366  1095  0823               	movf	___awdiv@quotient+1,w
  5367  1096  00F8               	movwf	?___awdiv+1
  5368  1097  0822               	movf	___awdiv@quotient,w
  5369  1098  00F7               	movwf	?___awdiv
  5370  1099                     l627:
  5371  1099  0008               	return
  5372  109A                     __end_of___awdiv:
  5373                           
  5374                           	psect	text5
  5375  19A3                     __ptext5:	
  5376 ;; *************** function _isdigit *****************
  5377 ;; Defined at:
  5378 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  c               1    wreg     unsigned char 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  c               1    1[COMMON] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;		None               void
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5392 ;;      Params:         0       0       0       0       0
  5393 ;;      Locals:         2       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0
  5395 ;;      Totals:         2       0       0       0       0
  5396 ;;Total ram usage:        2 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		_sprintf
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function _isdigit
  5407  19A3                     _isdigit:
  5408                           
  5409                           ;incstack = 0
  5410                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5411                           ;isdigit@c stored from wreg
  5412  19A3  00F1               	movwf	isdigit@c
  5413  19A4                     l3251:
  5414  19A4  01F0               	clrf	_isdigit$1146
  5415  19A5                     l3253:
  5416  19A5  303A               	movlw	58
  5417  19A6  0271               	subwf	isdigit@c,w
  5418  19A7  1803               	skipnc
  5419  19A8  29AA               	goto	u4431
  5420  19A9  29AB               	goto	u4430
  5421  19AA                     u4431:
  5422  19AA  29B3               	goto	l3259
  5423  19AB                     u4430:
  5424  19AB                     l3255:
  5425  19AB  3030               	movlw	48
  5426  19AC  0271               	subwf	isdigit@c,w
  5427  19AD  1C03               	skipc
  5428  19AE  29B0               	goto	u4441
  5429  19AF  29B1               	goto	u4440
  5430  19B0                     u4441:
  5431  19B0  29B3               	goto	l3259
  5432  19B1                     u4440:
  5433  19B1                     l3257:
  5434  19B1  01F0               	clrf	_isdigit$1146
  5435  19B2  0AF0               	incf	_isdigit$1146,f
  5436  19B3                     l3259:
  5437  19B3  0C70               	rrf	_isdigit$1146,w
  5438  19B4                     l961:
  5439  19B4  0008               	return
  5440  19B5                     __end_of_isdigit:
  5441                           
  5442                           	psect	text6
  5443  1158                     __ptext6:	
  5444 ;; *************** function _fround *****************
  5445 ;; Defined at:
  5446 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  prec            1    wreg     unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  prec            1   49[BANK0 ] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  4   30[BANK0 ] unsigned char 
  5453 ;; Registers used:
  5454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5460 ;;      Params:         0       4       0       0       0
  5461 ;;      Locals:         0       9       0       0       0
  5462 ;;      Temps:          0       7       0       0       0
  5463 ;;      Totals:         0      20       0       0       0
  5464 ;;Total ram usage:       20 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; Hardware stack levels required when called: 2
  5467 ;; This function calls:
  5468 ;;		___flmul
  5469 ;;		___lwdiv
  5470 ;;		___lwmod
  5471 ;; This function is called by:
  5472 ;;		_sprintf
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function _fround
  5478  1158                     _fround:
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5482                           ;fround@prec stored from wreg
  5483  1158  1283               	bcf	3,5	;RP0=0, select bank0
  5484  1159  1303               	bcf	3,6	;RP1=0, select bank0
  5485  115A  00D1               	movwf	fround@prec
  5486  115B                     l3193:
  5487                           
  5488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5489  115B  306E               	movlw	110
  5490  115C  0251               	subwf	fround@prec,w
  5491  115D  1C03               	skipc
  5492  115E  2960               	goto	u4181
  5493  115F  2961               	goto	u4180
  5494  1160                     u4181:
  5495  1160  2A6E               	goto	l3201
  5496  1161                     u4180:
  5497  1161                     l3195:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5500  1161  303F               	movlw	63
  5501  1162  00A7               	movwf	___flmul@b+3
  5502  1163  3000               	movlw	0
  5503  1164  00A6               	movwf	___flmul@b+2
  5504  1165  3000               	movlw	0
  5505  1166  00A5               	movwf	___flmul@b+1
  5506  1167  3000               	movlw	0
  5507  1168  00A4               	movwf	___flmul@b
  5508  1169  3064               	movlw	100
  5509  116A  00F6               	movwf	___lwdiv@divisor
  5510  116B  3000               	movlw	0
  5511  116C  00F7               	movwf	___lwdiv@divisor+1
  5512  116D  0851               	movf	fround@prec,w
  5513  116E  00C2               	movwf	??_fround
  5514  116F  01C3               	clrf	??_fround+1
  5515  1170  0842               	movf	??_fround,w
  5516  1171  00F8               	movwf	___lwdiv@dividend
  5517  1172  0843               	movf	??_fround+1,w
  5518  1173  00F9               	movwf	___lwdiv@dividend+1
  5519  1174  160A  158A  2386  160A  118A  	fcall	___lwdiv
  5520  1179  0876               	movf	?___lwdiv,w
  5521  117A  1283               	bcf	3,5	;RP0=0, select bank0
  5522  117B  1303               	bcf	3,6	;RP1=0, select bank0
  5523  117C  00C4               	movwf	??_fround+2
  5524  117D  3001               	movlw	1
  5525  117E                     u4195:
  5526  117E  1003               	clrc
  5527  117F  0DC4               	rlf	??_fround+2,f
  5528  1180  3EFF               	addlw	-1
  5529  1181  1D03               	skipz
  5530  1182  297E               	goto	u4195
  5531  1183  1003               	clrc
  5532  1184  0D44               	rlf	??_fround+2,w
  5533  1185  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5534  1186  0084               	movwf	4
  5535  1187  120A  158A  200A  160A  118A  	fcall	stringdir
  5536  118C  00C5               	movwf	??_fround+3
  5537  118D  120A  158A  200A  160A  118A  	fcall	stringdir
  5538  1192  00C6               	movwf	??_fround+4
  5539  1193  120A  158A  200A  160A  118A  	fcall	stringdir
  5540  1198  00C7               	movwf	??_fround+5
  5541  1199  120A  158A  200A  160A  118A  	fcall	stringdir
  5542  119E  00C8               	movwf	??_fround+6
  5543  119F  0848               	movf	??_fround+6,w
  5544  11A0  00AB               	movwf	___flmul@a+3
  5545  11A1  0847               	movf	??_fround+5,w
  5546  11A2  00AA               	movwf	___flmul@a+2
  5547  11A3  0846               	movf	??_fround+4,w
  5548  11A4  00A9               	movwf	___flmul@a+1
  5549  11A5  0845               	movf	??_fround+3,w
  5550  11A6  00A8               	movwf	___flmul@a
  5551  11A7  120A  158A  249F  160A  118A  	fcall	___flmul
  5552  11AC  1283               	bcf	3,5	;RP0=0, select bank0
  5553  11AD  1303               	bcf	3,6	;RP1=0, select bank0
  5554  11AE  0827               	movf	?___flmul+3,w
  5555  11AF  00D0               	movwf	_fround$1350+3
  5556  11B0  0826               	movf	?___flmul+2,w
  5557  11B1  00CF               	movwf	_fround$1350+2
  5558  11B2  0825               	movf	?___flmul+1,w
  5559  11B3  00CE               	movwf	_fround$1350+1
  5560  11B4  0824               	movf	?___flmul,w
  5561  11B5  00CD               	movwf	_fround$1350
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5564  11B6  300A               	movlw	10
  5565  11B7  00F6               	movwf	___lwdiv@divisor
  5566  11B8  3000               	movlw	0
  5567  11B9  00F7               	movwf	___lwdiv@divisor+1
  5568  11BA  0851               	movf	fround@prec,w
  5569  11BB  00C2               	movwf	??_fround
  5570  11BC  01C3               	clrf	??_fround+1
  5571  11BD  0842               	movf	??_fround,w
  5572  11BE  00F2               	movwf	___lwmod@dividend
  5573  11BF  0843               	movf	??_fround+1,w
  5574  11C0  00F3               	movwf	___lwmod@dividend+1
  5575  11C1  3064               	movlw	100
  5576  11C2  00F0               	movwf	___lwmod@divisor
  5577  11C3  3000               	movlw	0
  5578  11C4  00F1               	movwf	___lwmod@divisor+1
  5579  11C5  160A  158A  22D0  160A  118A  	fcall	___lwmod
  5580  11CA  0871               	movf	?___lwmod+1,w
  5581  11CB  00F9               	movwf	___lwdiv@dividend+1
  5582  11CC  0870               	movf	?___lwmod,w
  5583  11CD  00F8               	movwf	___lwdiv@dividend
  5584  11CE  160A  158A  2386  160A  118A  	fcall	___lwdiv
  5585  11D3  0876               	movf	?___lwdiv,w
  5586  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  5587  11D5  1303               	bcf	3,6	;RP1=0, select bank0
  5588  11D6  00C4               	movwf	??_fround+2
  5589  11D7  3001               	movlw	1
  5590  11D8                     u4205:
  5591  11D8  1003               	clrc
  5592  11D9  0DC4               	rlf	??_fround+2,f
  5593  11DA  3EFF               	addlw	-1
  5594  11DB  1D03               	skipz
  5595  11DC  29D8               	goto	u4205
  5596  11DD  1003               	clrc
  5597  11DE  0D44               	rlf	??_fround+2,w
  5598  11DF  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5599  11E0  0084               	movwf	4
  5600  11E1  120A  158A  200A  160A  118A  	fcall	stringdir
  5601  11E6  00C5               	movwf	??_fround+3
  5602  11E7  120A  158A  200A  160A  118A  	fcall	stringdir
  5603  11EC  00C6               	movwf	??_fround+4
  5604  11ED  120A  158A  200A  160A  118A  	fcall	stringdir
  5605  11F2  00C7               	movwf	??_fround+5
  5606  11F3  120A  158A  200A  160A  118A  	fcall	stringdir
  5607  11F8  00C8               	movwf	??_fround+6
  5608  11F9  0848               	movf	??_fround+6,w
  5609  11FA  00A7               	movwf	___flmul@b+3
  5610  11FB  0847               	movf	??_fround+5,w
  5611  11FC  00A6               	movwf	___flmul@b+2
  5612  11FD  0846               	movf	??_fround+4,w
  5613  11FE  00A5               	movwf	___flmul@b+1
  5614  11FF  0845               	movf	??_fround+3,w
  5615  1200  00A4               	movwf	___flmul@b
  5616  1201  0850               	movf	_fround$1350+3,w
  5617  1202  00AB               	movwf	___flmul@a+3
  5618  1203  084F               	movf	_fround$1350+2,w
  5619  1204  00AA               	movwf	___flmul@a+2
  5620  1205  084E               	movf	_fround$1350+1,w
  5621  1206  00A9               	movwf	___flmul@a+1
  5622  1207  084D               	movf	_fround$1350,w
  5623  1208  00A8               	movwf	___flmul@a
  5624  1209  120A  158A  249F  160A  118A  	fcall	___flmul
  5625  120E  1283               	bcf	3,5	;RP0=0, select bank0
  5626  120F  1303               	bcf	3,6	;RP1=0, select bank0
  5627  1210  0827               	movf	?___flmul+3,w
  5628  1211  00CC               	movwf	_fround$1351+3
  5629  1212  0826               	movf	?___flmul+2,w
  5630  1213  00CB               	movwf	_fround$1351+2
  5631  1214  0825               	movf	?___flmul+1,w
  5632  1215  00CA               	movwf	_fround$1351+1
  5633  1216  0824               	movf	?___flmul,w
  5634  1217  00C9               	movwf	_fround$1351
  5635                           
  5636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5637  1218  300A               	movlw	10
  5638  1219  00F0               	movwf	___lwmod@divisor
  5639  121A  3000               	movlw	0
  5640  121B  00F1               	movwf	___lwmod@divisor+1
  5641  121C  0851               	movf	fround@prec,w
  5642  121D  00C2               	movwf	??_fround
  5643  121E  01C3               	clrf	??_fround+1
  5644  121F  0842               	movf	??_fround,w
  5645  1220  00F2               	movwf	___lwmod@dividend
  5646  1221  0843               	movf	??_fround+1,w
  5647  1222  00F3               	movwf	___lwmod@dividend+1
  5648  1223  160A  158A  22D0  160A  118A  	fcall	___lwmod
  5649  1228  0870               	movf	?___lwmod,w
  5650  1229  1283               	bcf	3,5	;RP0=0, select bank0
  5651  122A  1303               	bcf	3,6	;RP1=0, select bank0
  5652  122B  00C4               	movwf	??_fround+2
  5653  122C  3001               	movlw	1
  5654  122D                     u4215:
  5655  122D  1003               	clrc
  5656  122E  0DC4               	rlf	??_fround+2,f
  5657  122F  3EFF               	addlw	-1
  5658  1230  1D03               	skipz
  5659  1231  2A2D               	goto	u4215
  5660  1232  1003               	clrc
  5661  1233  0D44               	rlf	??_fround+2,w
  5662  1234  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5663  1235  0084               	movwf	4
  5664  1236  120A  158A  200A  160A  118A  	fcall	stringdir
  5665  123B  00C5               	movwf	??_fround+3
  5666  123C  120A  158A  200A  160A  118A  	fcall	stringdir
  5667  1241  00C6               	movwf	??_fround+4
  5668  1242  120A  158A  200A  160A  118A  	fcall	stringdir
  5669  1247  00C7               	movwf	??_fround+5
  5670  1248  120A  158A  200A  160A  118A  	fcall	stringdir
  5671  124D  00C8               	movwf	??_fround+6
  5672  124E  0848               	movf	??_fround+6,w
  5673  124F  00A7               	movwf	___flmul@b+3
  5674  1250  0847               	movf	??_fround+5,w
  5675  1251  00A6               	movwf	___flmul@b+2
  5676  1252  0846               	movf	??_fround+4,w
  5677  1253  00A5               	movwf	___flmul@b+1
  5678  1254  0845               	movf	??_fround+3,w
  5679  1255  00A4               	movwf	___flmul@b
  5680  1256  084C               	movf	_fround$1351+3,w
  5681  1257  00AB               	movwf	___flmul@a+3
  5682  1258  084B               	movf	_fround$1351+2,w
  5683  1259  00AA               	movwf	___flmul@a+2
  5684  125A  084A               	movf	_fround$1351+1,w
  5685  125B  00A9               	movwf	___flmul@a+1
  5686  125C  0849               	movf	_fround$1351,w
  5687  125D  00A8               	movwf	___flmul@a
  5688  125E  120A  158A  249F  160A  118A  	fcall	___flmul
  5689  1263  1283               	bcf	3,5	;RP0=0, select bank0
  5690  1264  1303               	bcf	3,6	;RP1=0, select bank0
  5691  1265  0827               	movf	?___flmul+3,w
  5692  1266  00C1               	movwf	?_fround+3
  5693  1267  0826               	movf	?___flmul+2,w
  5694  1268  00C0               	movwf	?_fround+2
  5695  1269  0825               	movf	?___flmul+1,w
  5696  126A  00BF               	movwf	?_fround+1
  5697  126B  0824               	movf	?___flmul,w
  5698  126C  00BE               	movwf	?_fround
  5699  126D  2B62               	goto	l388
  5700  126E                     l3201:
  5701  126E  300B               	movlw	11
  5702  126F  0251               	subwf	fround@prec,w
  5703  1270  1C03               	skipc
  5704  1271  2A73               	goto	u4221
  5705  1272  2A74               	goto	u4220
  5706  1273                     u4221:
  5707  1273  2B1F               	goto	l3207
  5708  1274                     u4220:
  5709  1274                     l3203:
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5712  1274  303F               	movlw	63
  5713  1275  00A7               	movwf	___flmul@b+3
  5714  1276  3000               	movlw	0
  5715  1277  00A6               	movwf	___flmul@b+2
  5716  1278  3000               	movlw	0
  5717  1279  00A5               	movwf	___flmul@b+1
  5718  127A  3000               	movlw	0
  5719  127B  00A4               	movwf	___flmul@b
  5720  127C  300A               	movlw	10
  5721  127D  00F6               	movwf	___lwdiv@divisor
  5722  127E  3000               	movlw	0
  5723  127F  00F7               	movwf	___lwdiv@divisor+1
  5724  1280  0851               	movf	fround@prec,w
  5725  1281  00C2               	movwf	??_fround
  5726  1282  01C3               	clrf	??_fround+1
  5727  1283  0842               	movf	??_fround,w
  5728  1284  00F8               	movwf	___lwdiv@dividend
  5729  1285  0843               	movf	??_fround+1,w
  5730  1286  00F9               	movwf	___lwdiv@dividend+1
  5731  1287  160A  158A  2386  160A  118A  	fcall	___lwdiv
  5732  128C  0876               	movf	?___lwdiv,w
  5733  128D  1283               	bcf	3,5	;RP0=0, select bank0
  5734  128E  1303               	bcf	3,6	;RP1=0, select bank0
  5735  128F  00C4               	movwf	??_fround+2
  5736  1290  3001               	movlw	1
  5737  1291                     u4235:
  5738  1291  1003               	clrc
  5739  1292  0DC4               	rlf	??_fround+2,f
  5740  1293  3EFF               	addlw	-1
  5741  1294  1D03               	skipz
  5742  1295  2A91               	goto	u4235
  5743  1296  1003               	clrc
  5744  1297  0D44               	rlf	??_fround+2,w
  5745  1298  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5746  1299  0084               	movwf	4
  5747  129A  120A  158A  200A  160A  118A  	fcall	stringdir
  5748  129F  00C5               	movwf	??_fround+3
  5749  12A0  120A  158A  200A  160A  118A  	fcall	stringdir
  5750  12A5  00C6               	movwf	??_fround+4
  5751  12A6  120A  158A  200A  160A  118A  	fcall	stringdir
  5752  12AB  00C7               	movwf	??_fround+5
  5753  12AC  120A  158A  200A  160A  118A  	fcall	stringdir
  5754  12B1  00C8               	movwf	??_fround+6
  5755  12B2  0848               	movf	??_fround+6,w
  5756  12B3  00AB               	movwf	___flmul@a+3
  5757  12B4  0847               	movf	??_fround+5,w
  5758  12B5  00AA               	movwf	___flmul@a+2
  5759  12B6  0846               	movf	??_fround+4,w
  5760  12B7  00A9               	movwf	___flmul@a+1
  5761  12B8  0845               	movf	??_fround+3,w
  5762  12B9  00A8               	movwf	___flmul@a
  5763  12BA  120A  158A  249F  160A  118A  	fcall	___flmul
  5764  12BF  1283               	bcf	3,5	;RP0=0, select bank0
  5765  12C0  1303               	bcf	3,6	;RP1=0, select bank0
  5766  12C1  0827               	movf	?___flmul+3,w
  5767  12C2  00D0               	movwf	_fround$1350+3
  5768  12C3  0826               	movf	?___flmul+2,w
  5769  12C4  00CF               	movwf	_fround$1350+2
  5770  12C5  0825               	movf	?___flmul+1,w
  5771  12C6  00CE               	movwf	_fround$1350+1
  5772  12C7  0824               	movf	?___flmul,w
  5773  12C8  00CD               	movwf	_fround$1350
  5774                           
  5775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5776  12C9  300A               	movlw	10
  5777  12CA  00F0               	movwf	___lwmod@divisor
  5778  12CB  3000               	movlw	0
  5779  12CC  00F1               	movwf	___lwmod@divisor+1
  5780  12CD  0851               	movf	fround@prec,w
  5781  12CE  00C2               	movwf	??_fround
  5782  12CF  01C3               	clrf	??_fround+1
  5783  12D0  0842               	movf	??_fround,w
  5784  12D1  00F2               	movwf	___lwmod@dividend
  5785  12D2  0843               	movf	??_fround+1,w
  5786  12D3  00F3               	movwf	___lwmod@dividend+1
  5787  12D4  160A  158A  22D0  160A  118A  	fcall	___lwmod
  5788  12D9  0870               	movf	?___lwmod,w
  5789  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  5790  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  5791  12DC  00C4               	movwf	??_fround+2
  5792  12DD  3001               	movlw	1
  5793  12DE                     u4245:
  5794  12DE  1003               	clrc
  5795  12DF  0DC4               	rlf	??_fround+2,f
  5796  12E0  3EFF               	addlw	-1
  5797  12E1  1D03               	skipz
  5798  12E2  2ADE               	goto	u4245
  5799  12E3  1003               	clrc
  5800  12E4  0D44               	rlf	??_fround+2,w
  5801  12E5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5802  12E6  0084               	movwf	4
  5803  12E7  120A  158A  200A  160A  118A  	fcall	stringdir
  5804  12EC  00C5               	movwf	??_fround+3
  5805  12ED  120A  158A  200A  160A  118A  	fcall	stringdir
  5806  12F2  00C6               	movwf	??_fround+4
  5807  12F3  120A  158A  200A  160A  118A  	fcall	stringdir
  5808  12F8  00C7               	movwf	??_fround+5
  5809  12F9  120A  158A  200A  160A  118A  	fcall	stringdir
  5810  12FE  00C8               	movwf	??_fround+6
  5811  12FF  0848               	movf	??_fround+6,w
  5812  1300  00A7               	movwf	___flmul@b+3
  5813  1301  0847               	movf	??_fround+5,w
  5814  1302  00A6               	movwf	___flmul@b+2
  5815  1303  0846               	movf	??_fround+4,w
  5816  1304  00A5               	movwf	___flmul@b+1
  5817  1305  0845               	movf	??_fround+3,w
  5818  1306  00A4               	movwf	___flmul@b
  5819  1307  0850               	movf	_fround$1350+3,w
  5820  1308  00AB               	movwf	___flmul@a+3
  5821  1309  084F               	movf	_fround$1350+2,w
  5822  130A  00AA               	movwf	___flmul@a+2
  5823  130B  084E               	movf	_fround$1350+1,w
  5824  130C  00A9               	movwf	___flmul@a+1
  5825  130D  084D               	movf	_fround$1350,w
  5826  130E  00A8               	movwf	___flmul@a
  5827  130F  120A  158A  249F  160A  118A  	fcall	___flmul
  5828  1314  1283               	bcf	3,5	;RP0=0, select bank0
  5829  1315  1303               	bcf	3,6	;RP1=0, select bank0
  5830  1316  0827               	movf	?___flmul+3,w
  5831  1317  00C1               	movwf	?_fround+3
  5832  1318  0826               	movf	?___flmul+2,w
  5833  1319  00C0               	movwf	?_fround+2
  5834  131A  0825               	movf	?___flmul+1,w
  5835  131B  00BF               	movwf	?_fround+1
  5836  131C  0824               	movf	?___flmul,w
  5837  131D  00BE               	movwf	?_fround
  5838  131E  2B62               	goto	l388
  5839  131F                     l3207:
  5840                           
  5841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5842  131F  303F               	movlw	63
  5843  1320  00A7               	movwf	___flmul@b+3
  5844  1321  3000               	movlw	0
  5845  1322  00A6               	movwf	___flmul@b+2
  5846  1323  3000               	movlw	0
  5847  1324  00A5               	movwf	___flmul@b+1
  5848  1325  3000               	movlw	0
  5849  1326  00A4               	movwf	___flmul@b
  5850  1327  0851               	movf	fround@prec,w
  5851  1328  00C2               	movwf	??_fround
  5852  1329  3001               	movlw	1
  5853  132A                     u4255:
  5854  132A  1003               	clrc
  5855  132B  0DC2               	rlf	??_fround,f
  5856  132C  3EFF               	addlw	-1
  5857  132D  1D03               	skipz
  5858  132E  2B2A               	goto	u4255
  5859  132F  1003               	clrc
  5860  1330  0D42               	rlf	??_fround,w
  5861  1331  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5862  1332  0084               	movwf	4
  5863  1333  120A  158A  200A  160A  118A  	fcall	stringdir
  5864  1338  00C3               	movwf	??_fround+1
  5865  1339  120A  158A  200A  160A  118A  	fcall	stringdir
  5866  133E  00C4               	movwf	??_fround+2
  5867  133F  120A  158A  200A  160A  118A  	fcall	stringdir
  5868  1344  00C5               	movwf	??_fround+3
  5869  1345  120A  158A  200A  160A  118A  	fcall	stringdir
  5870  134A  00C6               	movwf	??_fround+4
  5871  134B  0846               	movf	??_fround+4,w
  5872  134C  00AB               	movwf	___flmul@a+3
  5873  134D  0845               	movf	??_fround+3,w
  5874  134E  00AA               	movwf	___flmul@a+2
  5875  134F  0844               	movf	??_fround+2,w
  5876  1350  00A9               	movwf	___flmul@a+1
  5877  1351  0843               	movf	??_fround+1,w
  5878  1352  00A8               	movwf	___flmul@a
  5879  1353  120A  158A  249F  160A  118A  	fcall	___flmul
  5880  1358  1283               	bcf	3,5	;RP0=0, select bank0
  5881  1359  1303               	bcf	3,6	;RP1=0, select bank0
  5882  135A  0827               	movf	?___flmul+3,w
  5883  135B  00C1               	movwf	?_fround+3
  5884  135C  0826               	movf	?___flmul+2,w
  5885  135D  00C0               	movwf	?_fround+2
  5886  135E  0825               	movf	?___flmul+1,w
  5887  135F  00BF               	movwf	?_fround+1
  5888  1360  0824               	movf	?___flmul,w
  5889  1361  00BE               	movwf	?_fround
  5890  1362                     l388:
  5891  1362  0008               	return
  5892  1363                     __end_of_fround:
  5893                           
  5894                           	psect	text7
  5895  1AD0                     __ptext7:	
  5896 ;; *************** function ___lwmod *****************
  5897 ;; Defined at:
  5898 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  divisor         2    0[COMMON] unsigned int 
  5901 ;;  dividend        2    2[COMMON] unsigned int 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  counter         1    5[COMMON] unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  2    0[COMMON] unsigned int 
  5906 ;; Registers used:
  5907 ;;		wreg, status,2, status,0
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5913 ;;      Params:         4       0       0       0       0
  5914 ;;      Locals:         1       0       0       0       0
  5915 ;;      Temps:          1       0       0       0       0
  5916 ;;      Totals:         6       0       0       0       0
  5917 ;;Total ram usage:        6 bytes
  5918 ;; Hardware stack levels used: 1
  5919 ;; This function calls:
  5920 ;;		Nothing
  5921 ;; This function is called by:
  5922 ;;		_fround
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function ___lwmod
  5928  1AD0                     ___lwmod:
  5929  1AD0                     l2735:	
  5930                           ;incstack = 0
  5931                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5932                           
  5933  1AD0  0870               	movf	___lwmod@divisor,w
  5934  1AD1  0471               	iorwf	___lwmod@divisor+1,w
  5935  1AD2  1903               	btfsc	3,2
  5936  1AD3  2AD5               	goto	u3251
  5937  1AD4  2AD6               	goto	u3250
  5938  1AD5                     u3251:
  5939  1AD5  2B05               	goto	l2753
  5940  1AD6                     u3250:
  5941  1AD6                     l2737:
  5942  1AD6  01F5               	clrf	___lwmod@counter
  5943  1AD7  0AF5               	incf	___lwmod@counter,f
  5944  1AD8  2AE4               	goto	l2743
  5945  1AD9                     l2739:
  5946  1AD9  3001               	movlw	1
  5947  1ADA                     u3265:
  5948  1ADA  1003               	clrc
  5949  1ADB  0DF0               	rlf	___lwmod@divisor,f
  5950  1ADC  0DF1               	rlf	___lwmod@divisor+1,f
  5951  1ADD  3EFF               	addlw	-1
  5952  1ADE  1D03               	skipz
  5953  1ADF  2ADA               	goto	u3265
  5954  1AE0                     l2741:
  5955  1AE0  3001               	movlw	1
  5956  1AE1  00F4               	movwf	??___lwmod
  5957  1AE2  0874               	movf	??___lwmod,w
  5958  1AE3  07F5               	addwf	___lwmod@counter,f
  5959  1AE4                     l2743:
  5960  1AE4  1FF1               	btfss	___lwmod@divisor+1,7
  5961  1AE5  2AE7               	goto	u3271
  5962  1AE6  2AE8               	goto	u3270
  5963  1AE7                     u3271:
  5964  1AE7  2AD9               	goto	l2739
  5965  1AE8                     u3270:
  5966  1AE8                     l2745:
  5967  1AE8  0871               	movf	___lwmod@divisor+1,w
  5968  1AE9  0273               	subwf	___lwmod@dividend+1,w
  5969  1AEA  1D03               	skipz
  5970  1AEB  2AEE               	goto	u3285
  5971  1AEC  0870               	movf	___lwmod@divisor,w
  5972  1AED  0272               	subwf	___lwmod@dividend,w
  5973  1AEE                     u3285:
  5974  1AEE  1C03               	skipc
  5975  1AEF  2AF1               	goto	u3281
  5976  1AF0  2AF2               	goto	u3280
  5977  1AF1                     u3281:
  5978  1AF1  2AF8               	goto	l2749
  5979  1AF2                     u3280:
  5980  1AF2                     l2747:
  5981  1AF2  0870               	movf	___lwmod@divisor,w
  5982  1AF3  02F2               	subwf	___lwmod@dividend,f
  5983  1AF4  0871               	movf	___lwmod@divisor+1,w
  5984  1AF5  1C03               	skipc
  5985  1AF6  03F3               	decf	___lwmod@dividend+1,f
  5986  1AF7  02F3               	subwf	___lwmod@dividend+1,f
  5987  1AF8                     l2749:
  5988  1AF8  3001               	movlw	1
  5989  1AF9                     u3295:
  5990  1AF9  1003               	clrc
  5991  1AFA  0CF1               	rrf	___lwmod@divisor+1,f
  5992  1AFB  0CF0               	rrf	___lwmod@divisor,f
  5993  1AFC  3EFF               	addlw	-1
  5994  1AFD  1D03               	skipz
  5995  1AFE  2AF9               	goto	u3295
  5996  1AFF                     l2751:
  5997  1AFF  3001               	movlw	1
  5998  1B00  02F5               	subwf	___lwmod@counter,f
  5999  1B01  1D03               	btfss	3,2
  6000  1B02  2B04               	goto	u3301
  6001  1B03  2B05               	goto	u3300
  6002  1B04                     u3301:
  6003  1B04  2AE8               	goto	l2745
  6004  1B05                     u3300:
  6005  1B05                     l2753:
  6006  1B05  0873               	movf	___lwmod@dividend+1,w
  6007  1B06  00F1               	movwf	?___lwmod+1
  6008  1B07  0872               	movf	___lwmod@dividend,w
  6009  1B08  00F0               	movwf	?___lwmod
  6010  1B09                     l790:
  6011  1B09  0008               	return
  6012  1B0A                     __end_of___lwmod:
  6013                           
  6014                           	psect	text8
  6015  1B86                     __ptext8:	
  6016 ;; *************** function ___lwdiv *****************
  6017 ;; Defined at:
  6018 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  divisor         2    6[COMMON] unsigned int 
  6021 ;;  dividend        2    8[COMMON] unsigned int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  quotient        2   11[COMMON] unsigned int 
  6024 ;;  counter         1   13[COMMON] unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  2    6[COMMON] unsigned int 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6034 ;;      Params:         4       0       0       0       0
  6035 ;;      Locals:         3       0       0       0       0
  6036 ;;      Temps:          1       0       0       0       0
  6037 ;;      Totals:         8       0       0       0       0
  6038 ;;Total ram usage:        8 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_fround
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function ___lwdiv
  6049  1B86                     ___lwdiv:
  6050  1B86                     l2709:	
  6051                           ;incstack = 0
  6052                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6053                           
  6054  1B86  01FB               	clrf	___lwdiv@quotient
  6055  1B87  01FC               	clrf	___lwdiv@quotient+1
  6056  1B88                     l2711:
  6057  1B88  0876               	movf	___lwdiv@divisor,w
  6058  1B89  0477               	iorwf	___lwdiv@divisor+1,w
  6059  1B8A  1903               	btfsc	3,2
  6060  1B8B  2B8D               	goto	u3181
  6061  1B8C  2B8E               	goto	u3180
  6062  1B8D                     u3181:
  6063  1B8D  2BC5               	goto	l2731
  6064  1B8E                     u3180:
  6065  1B8E                     l2713:
  6066  1B8E  01FD               	clrf	___lwdiv@counter
  6067  1B8F  0AFD               	incf	___lwdiv@counter,f
  6068  1B90  2B9C               	goto	l2719
  6069  1B91                     l2715:
  6070  1B91  3001               	movlw	1
  6071  1B92                     u3195:
  6072  1B92  1003               	clrc
  6073  1B93  0DF6               	rlf	___lwdiv@divisor,f
  6074  1B94  0DF7               	rlf	___lwdiv@divisor+1,f
  6075  1B95  3EFF               	addlw	-1
  6076  1B96  1D03               	skipz
  6077  1B97  2B92               	goto	u3195
  6078  1B98                     l2717:
  6079  1B98  3001               	movlw	1
  6080  1B99  00FA               	movwf	??___lwdiv
  6081  1B9A  087A               	movf	??___lwdiv,w
  6082  1B9B  07FD               	addwf	___lwdiv@counter,f
  6083  1B9C                     l2719:
  6084  1B9C  1FF7               	btfss	___lwdiv@divisor+1,7
  6085  1B9D  2B9F               	goto	u3201
  6086  1B9E  2BA0               	goto	u3200
  6087  1B9F                     u3201:
  6088  1B9F  2B91               	goto	l2715
  6089  1BA0                     u3200:
  6090  1BA0                     l2721:
  6091  1BA0  3001               	movlw	1
  6092  1BA1                     u3215:
  6093  1BA1  1003               	clrc
  6094  1BA2  0DFB               	rlf	___lwdiv@quotient,f
  6095  1BA3  0DFC               	rlf	___lwdiv@quotient+1,f
  6096  1BA4  3EFF               	addlw	-1
  6097  1BA5  1D03               	skipz
  6098  1BA6  2BA1               	goto	u3215
  6099  1BA7  0877               	movf	___lwdiv@divisor+1,w
  6100  1BA8  0279               	subwf	___lwdiv@dividend+1,w
  6101  1BA9  1D03               	skipz
  6102  1BAA  2BAD               	goto	u3225
  6103  1BAB  0876               	movf	___lwdiv@divisor,w
  6104  1BAC  0278               	subwf	___lwdiv@dividend,w
  6105  1BAD                     u3225:
  6106  1BAD  1C03               	skipc
  6107  1BAE  2BB0               	goto	u3221
  6108  1BAF  2BB1               	goto	u3220
  6109  1BB0                     u3221:
  6110  1BB0  2BB8               	goto	l2727
  6111  1BB1                     u3220:
  6112  1BB1                     l2723:
  6113  1BB1  0876               	movf	___lwdiv@divisor,w
  6114  1BB2  02F8               	subwf	___lwdiv@dividend,f
  6115  1BB3  0877               	movf	___lwdiv@divisor+1,w
  6116  1BB4  1C03               	skipc
  6117  1BB5  03F9               	decf	___lwdiv@dividend+1,f
  6118  1BB6  02F9               	subwf	___lwdiv@dividend+1,f
  6119  1BB7                     l2725:
  6120  1BB7  147B               	bsf	___lwdiv@quotient,0
  6121  1BB8                     l2727:
  6122  1BB8  3001               	movlw	1
  6123  1BB9                     u3235:
  6124  1BB9  1003               	clrc
  6125  1BBA  0CF7               	rrf	___lwdiv@divisor+1,f
  6126  1BBB  0CF6               	rrf	___lwdiv@divisor,f
  6127  1BBC  3EFF               	addlw	-1
  6128  1BBD  1D03               	skipz
  6129  1BBE  2BB9               	goto	u3235
  6130  1BBF                     l2729:
  6131  1BBF  3001               	movlw	1
  6132  1BC0  02FD               	subwf	___lwdiv@counter,f
  6133  1BC1  1D03               	btfss	3,2
  6134  1BC2  2BC4               	goto	u3241
  6135  1BC3  2BC5               	goto	u3240
  6136  1BC4                     u3241:
  6137  1BC4  2BA0               	goto	l2721
  6138  1BC5                     u3240:
  6139  1BC5                     l2731:
  6140  1BC5  087C               	movf	___lwdiv@quotient+1,w
  6141  1BC6  00F7               	movwf	?___lwdiv+1
  6142  1BC7  087B               	movf	___lwdiv@quotient,w
  6143  1BC8  00F6               	movwf	?___lwdiv
  6144  1BC9                     l780:
  6145  1BC9  0008               	return
  6146  1BCA                     __end_of___lwdiv:
  6147                           
  6148                           	psect	text9
  6149  0C9F                     __ptext9:	
  6150 ;; *************** function ___flmul *****************
  6151 ;; Defined at:
  6152 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  b               4    4[BANK0 ] unsigned int 
  6155 ;;  a               4    8[BANK0 ] unsigned int 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  prod            4   24[BANK0 ] struct .
  6158 ;;  grs             4   18[BANK0 ] unsigned long 
  6159 ;;  temp            2   28[BANK0 ] struct .
  6160 ;;  bexp            1   23[BANK0 ] unsigned char 
  6161 ;;  aexp            1   22[BANK0 ] unsigned char 
  6162 ;;  sign            1   17[BANK0 ] unsigned char 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  4    4[BANK0 ] unsigned char 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6172 ;;      Params:         0       8       0       0       0
  6173 ;;      Locals:         0      13       0       0       0
  6174 ;;      Temps:          0       5       0       0       0
  6175 ;;      Totals:         0      26       0       0       0
  6176 ;;Total ram usage:       26 bytes
  6177 ;; Hardware stack levels used: 1
  6178 ;; Hardware stack levels required when called: 1
  6179 ;; This function calls:
  6180 ;;		__Umul8_16
  6181 ;; This function is called by:
  6182 ;;		_main
  6183 ;;		_fround
  6184 ;;		_scale
  6185 ;;		_sprintf
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           
  6190                           ;psect for function ___flmul
  6191  0C9F                     ___flmul:
  6192  0C9F                     l2951:	
  6193                           ;incstack = 0
  6194                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6195                           
  6196  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  6198  0CA1  0827               	movf	___flmul@b+3,w
  6199  0CA2  3980               	andlw	128
  6200  0CA3  00AC               	movwf	??___flmul
  6201  0CA4  082C               	movf	??___flmul,w
  6202  0CA5  00B1               	movwf	___flmul@sign
  6203  0CA6                     l2953:
  6204  0CA6  0827               	movf	___flmul@b+3,w
  6205  0CA7  00AC               	movwf	??___flmul
  6206  0CA8  072C               	addwf	??___flmul,w
  6207  0CA9  00AD               	movwf	??___flmul+1
  6208  0CAA  082D               	movf	??___flmul+1,w
  6209  0CAB  00B7               	movwf	___flmul@bexp
  6210  0CAC                     l2955:
  6211  0CAC  1FA6               	btfss	___flmul@b+2,7
  6212  0CAD  2CAF               	goto	u3771
  6213  0CAE  2CB0               	goto	u3770
  6214  0CAF                     u3771:
  6215  0CAF  2CB1               	goto	l2959
  6216  0CB0                     u3770:
  6217  0CB0                     l2957:
  6218  0CB0  1437               	bsf	___flmul@bexp,0
  6219  0CB1                     l2959:
  6220  0CB1  0837               	movf	___flmul@bexp,w
  6221  0CB2  1903               	btfsc	3,2
  6222  0CB3  2CB5               	goto	u3781
  6223  0CB4  2CB6               	goto	u3780
  6224  0CB5                     u3781:
  6225  0CB5  2CC5               	goto	l2967
  6226  0CB6                     u3780:
  6227  0CB6                     l2961:
  6228  0CB6  0A37               	incf	___flmul@bexp,w
  6229  0CB7  1D03               	btfss	3,2
  6230  0CB8  2CBA               	goto	u3791
  6231  0CB9  2CBB               	goto	u3790
  6232  0CBA                     u3791:
  6233  0CBA  2CC3               	goto	l2965
  6234  0CBB                     u3790:
  6235  0CBB                     l2963:
  6236  0CBB  3000               	movlw	0
  6237  0CBC  00A7               	movwf	___flmul@b+3
  6238  0CBD  3000               	movlw	0
  6239  0CBE  00A6               	movwf	___flmul@b+2
  6240  0CBF  3000               	movlw	0
  6241  0CC0  00A5               	movwf	___flmul@b+1
  6242  0CC1  3000               	movlw	0
  6243  0CC2  00A4               	movwf	___flmul@b
  6244  0CC3                     l2965:
  6245  0CC3  17A6               	bsf	___flmul@b+2,7
  6246  0CC4  2CCD               	goto	l2969
  6247  0CC5                     l2967:
  6248  0CC5  3000               	movlw	0
  6249  0CC6  00A7               	movwf	___flmul@b+3
  6250  0CC7  3000               	movlw	0
  6251  0CC8  00A6               	movwf	___flmul@b+2
  6252  0CC9  3000               	movlw	0
  6253  0CCA  00A5               	movwf	___flmul@b+1
  6254  0CCB  3000               	movlw	0
  6255  0CCC  00A4               	movwf	___flmul@b
  6256  0CCD                     l2969:
  6257  0CCD  082B               	movf	___flmul@a+3,w
  6258  0CCE  3980               	andlw	128
  6259  0CCF  00AC               	movwf	??___flmul
  6260  0CD0  082C               	movf	??___flmul,w
  6261  0CD1  06B1               	xorwf	___flmul@sign,f
  6262  0CD2                     l2971:
  6263  0CD2  082B               	movf	___flmul@a+3,w
  6264  0CD3  00AC               	movwf	??___flmul
  6265  0CD4  072C               	addwf	??___flmul,w
  6266  0CD5  00AD               	movwf	??___flmul+1
  6267  0CD6  082D               	movf	??___flmul+1,w
  6268  0CD7  00B6               	movwf	___flmul@aexp
  6269  0CD8                     l2973:
  6270  0CD8  1FAA               	btfss	___flmul@a+2,7
  6271  0CD9  2CDB               	goto	u3801
  6272  0CDA  2CDC               	goto	u3800
  6273  0CDB                     u3801:
  6274  0CDB  2CDD               	goto	l2977
  6275  0CDC                     u3800:
  6276  0CDC                     l2975:
  6277  0CDC  1436               	bsf	___flmul@aexp,0
  6278  0CDD                     l2977:
  6279  0CDD  0836               	movf	___flmul@aexp,w
  6280  0CDE  1903               	btfsc	3,2
  6281  0CDF  2CE1               	goto	u3811
  6282  0CE0  2CE2               	goto	u3810
  6283  0CE1                     u3811:
  6284  0CE1  2CF1               	goto	l2985
  6285  0CE2                     u3810:
  6286  0CE2                     l2979:
  6287  0CE2  0A36               	incf	___flmul@aexp,w
  6288  0CE3  1D03               	btfss	3,2
  6289  0CE4  2CE6               	goto	u3821
  6290  0CE5  2CE7               	goto	u3820
  6291  0CE6                     u3821:
  6292  0CE6  2CEF               	goto	l2983
  6293  0CE7                     u3820:
  6294  0CE7                     l2981:
  6295  0CE7  3000               	movlw	0
  6296  0CE8  00AB               	movwf	___flmul@a+3
  6297  0CE9  3000               	movlw	0
  6298  0CEA  00AA               	movwf	___flmul@a+2
  6299  0CEB  3000               	movlw	0
  6300  0CEC  00A9               	movwf	___flmul@a+1
  6301  0CED  3000               	movlw	0
  6302  0CEE  00A8               	movwf	___flmul@a
  6303  0CEF                     l2983:
  6304  0CEF  17AA               	bsf	___flmul@a+2,7
  6305  0CF0  2CF9               	goto	l2987
  6306  0CF1                     l2985:
  6307  0CF1  3000               	movlw	0
  6308  0CF2  00AB               	movwf	___flmul@a+3
  6309  0CF3  3000               	movlw	0
  6310  0CF4  00AA               	movwf	___flmul@a+2
  6311  0CF5  3000               	movlw	0
  6312  0CF6  00A9               	movwf	___flmul@a+1
  6313  0CF7  3000               	movlw	0
  6314  0CF8  00A8               	movwf	___flmul@a
  6315  0CF9                     l2987:
  6316  0CF9  0836               	movf	___flmul@aexp,w
  6317  0CFA  1903               	btfsc	3,2
  6318  0CFB  2CFD               	goto	u3831
  6319  0CFC  2CFE               	goto	u3830
  6320  0CFD                     u3831:
  6321  0CFD  2D03               	goto	l2991
  6322  0CFE                     u3830:
  6323  0CFE                     l2989:
  6324  0CFE  0837               	movf	___flmul@bexp,w
  6325  0CFF  1D03               	btfss	3,2
  6326  0D00  2D02               	goto	u3841
  6327  0D01  2D03               	goto	u3840
  6328  0D02                     u3841:
  6329  0D02  2D0C               	goto	l2995
  6330  0D03                     u3840:
  6331  0D03                     l2991:
  6332  0D03  3000               	movlw	0
  6333  0D04  00A7               	movwf	?___flmul+3
  6334  0D05  3000               	movlw	0
  6335  0D06  00A6               	movwf	?___flmul+2
  6336  0D07  3000               	movlw	0
  6337  0D08  00A5               	movwf	?___flmul+1
  6338  0D09  3000               	movlw	0
  6339  0D0A  00A4               	movwf	?___flmul
  6340  0D0B  2FFF               	goto	l897
  6341  0D0C                     l2995:
  6342  0D0C  0824               	movf	___flmul@b,w
  6343  0D0D  00AC               	movwf	??___flmul
  6344  0D0E  082C               	movf	??___flmul,w
  6345  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  6346  0D10  082A               	movf	___flmul@a+2,w
  6347  0D11  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6348  0D16  0871               	movf	?__Umul8_16+1,w
  6349  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6350  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6351  0D19  00BD               	movwf	___flmul@temp+1
  6352  0D1A  0870               	movf	?__Umul8_16,w
  6353  0D1B  00BC               	movwf	___flmul@temp
  6354  0D1C                     l2997:
  6355  0D1C  083C               	movf	___flmul@temp,w
  6356  0D1D  00AC               	movwf	??___flmul
  6357  0D1E  01AD               	clrf	??___flmul+1
  6358  0D1F  01AE               	clrf	??___flmul+2
  6359  0D20  01AF               	clrf	??___flmul+3
  6360  0D21  082F               	movf	??___flmul+3,w
  6361  0D22  00B5               	movwf	___flmul@grs+3
  6362  0D23  082E               	movf	??___flmul+2,w
  6363  0D24  00B4               	movwf	___flmul@grs+2
  6364  0D25  082D               	movf	??___flmul+1,w
  6365  0D26  00B3               	movwf	___flmul@grs+1
  6366  0D27  082C               	movf	??___flmul,w
  6367  0D28  00B2               	movwf	___flmul@grs
  6368  0D29                     l2999:
  6369  0D29  083D               	movf	___flmul@temp+1,w
  6370  0D2A  00AC               	movwf	??___flmul
  6371  0D2B  01AD               	clrf	??___flmul+1
  6372  0D2C  01AE               	clrf	??___flmul+2
  6373  0D2D  01AF               	clrf	??___flmul+3
  6374  0D2E  082F               	movf	??___flmul+3,w
  6375  0D2F  00BB               	movwf	___flmul@prod+3
  6376  0D30  082E               	movf	??___flmul+2,w
  6377  0D31  00BA               	movwf	___flmul@prod+2
  6378  0D32  082D               	movf	??___flmul+1,w
  6379  0D33  00B9               	movwf	___flmul@prod+1
  6380  0D34  082C               	movf	??___flmul,w
  6381  0D35  00B8               	movwf	___flmul@prod
  6382  0D36  0825               	movf	___flmul@b+1,w
  6383  0D37  00AC               	movwf	??___flmul
  6384  0D38  082C               	movf	??___flmul,w
  6385  0D39  00F0               	movwf	__Umul8_16@multiplicand
  6386  0D3A  0829               	movf	___flmul@a+1,w
  6387  0D3B  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6388  0D40  0871               	movf	?__Umul8_16+1,w
  6389  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0D43  00BD               	movwf	___flmul@temp+1
  6392  0D44  0870               	movf	?__Umul8_16,w
  6393  0D45  00BC               	movwf	___flmul@temp
  6394  0D46                     l3001:
  6395  0D46  083C               	movf	___flmul@temp,w
  6396  0D47  00AC               	movwf	??___flmul
  6397  0D48  01AD               	clrf	??___flmul+1
  6398  0D49  01AE               	clrf	??___flmul+2
  6399  0D4A  01AF               	clrf	??___flmul+3
  6400  0D4B  082C               	movf	??___flmul,w
  6401  0D4C  07B2               	addwf	___flmul@grs,f
  6402  0D4D  082D               	movf	??___flmul+1,w
  6403  0D4E  1103               	clrz
  6404  0D4F  1803               	skipnc
  6405  0D50  3E01               	addlw	1
  6406  0D51  1903               	skipnz
  6407  0D52  2D54               	goto	u3851
  6408  0D53  07B3               	addwf	___flmul@grs+1,f
  6409  0D54                     u3851:
  6410  0D54  082E               	movf	??___flmul+2,w
  6411  0D55  1103               	clrz
  6412  0D56  1803               	skipnc
  6413  0D57  3E01               	addlw	1
  6414  0D58  1903               	skipnz
  6415  0D59  2D5B               	goto	u3852
  6416  0D5A  07B4               	addwf	___flmul@grs+2,f
  6417  0D5B                     u3852:
  6418  0D5B  082F               	movf	??___flmul+3,w
  6419  0D5C  1103               	clrz
  6420  0D5D  1803               	skipnc
  6421  0D5E  3E01               	addlw	1
  6422  0D5F  1903               	skipnz
  6423  0D60  2D62               	goto	u3853
  6424  0D61  07B5               	addwf	___flmul@grs+3,f
  6425  0D62                     u3853:
  6426  0D62                     l3003:
  6427  0D62  083D               	movf	___flmul@temp+1,w
  6428  0D63  00AC               	movwf	??___flmul
  6429  0D64  01AD               	clrf	??___flmul+1
  6430  0D65  01AE               	clrf	??___flmul+2
  6431  0D66  01AF               	clrf	??___flmul+3
  6432  0D67  082C               	movf	??___flmul,w
  6433  0D68  07B8               	addwf	___flmul@prod,f
  6434  0D69  082D               	movf	??___flmul+1,w
  6435  0D6A  1103               	clrz
  6436  0D6B  1803               	skipnc
  6437  0D6C  3E01               	addlw	1
  6438  0D6D  1903               	skipnz
  6439  0D6E  2D70               	goto	u3861
  6440  0D6F  07B9               	addwf	___flmul@prod+1,f
  6441  0D70                     u3861:
  6442  0D70  082E               	movf	??___flmul+2,w
  6443  0D71  1103               	clrz
  6444  0D72  1803               	skipnc
  6445  0D73  3E01               	addlw	1
  6446  0D74  1903               	skipnz
  6447  0D75  2D77               	goto	u3862
  6448  0D76  07BA               	addwf	___flmul@prod+2,f
  6449  0D77                     u3862:
  6450  0D77  082F               	movf	??___flmul+3,w
  6451  0D78  1103               	clrz
  6452  0D79  1803               	skipnc
  6453  0D7A  3E01               	addlw	1
  6454  0D7B  1903               	skipnz
  6455  0D7C  2D7E               	goto	u3863
  6456  0D7D  07BB               	addwf	___flmul@prod+3,f
  6457  0D7E                     u3863:
  6458  0D7E  0826               	movf	___flmul@b+2,w
  6459  0D7F  00AC               	movwf	??___flmul
  6460  0D80  082C               	movf	??___flmul,w
  6461  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6462  0D82  0828               	movf	___flmul@a,w
  6463  0D83  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6464  0D88  0871               	movf	?__Umul8_16+1,w
  6465  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0D8B  00BD               	movwf	___flmul@temp+1
  6468  0D8C  0870               	movf	?__Umul8_16,w
  6469  0D8D  00BC               	movwf	___flmul@temp
  6470  0D8E                     l3005:
  6471  0D8E  083C               	movf	___flmul@temp,w
  6472  0D8F  00AC               	movwf	??___flmul
  6473  0D90  01AD               	clrf	??___flmul+1
  6474  0D91  01AE               	clrf	??___flmul+2
  6475  0D92  01AF               	clrf	??___flmul+3
  6476  0D93  082C               	movf	??___flmul,w
  6477  0D94  07B2               	addwf	___flmul@grs,f
  6478  0D95  082D               	movf	??___flmul+1,w
  6479  0D96  1103               	clrz
  6480  0D97  1803               	skipnc
  6481  0D98  3E01               	addlw	1
  6482  0D99  1903               	skipnz
  6483  0D9A  2D9C               	goto	u3871
  6484  0D9B  07B3               	addwf	___flmul@grs+1,f
  6485  0D9C                     u3871:
  6486  0D9C  082E               	movf	??___flmul+2,w
  6487  0D9D  1103               	clrz
  6488  0D9E  1803               	skipnc
  6489  0D9F  3E01               	addlw	1
  6490  0DA0  1903               	skipnz
  6491  0DA1  2DA3               	goto	u3872
  6492  0DA2  07B4               	addwf	___flmul@grs+2,f
  6493  0DA3                     u3872:
  6494  0DA3  082F               	movf	??___flmul+3,w
  6495  0DA4  1103               	clrz
  6496  0DA5  1803               	skipnc
  6497  0DA6  3E01               	addlw	1
  6498  0DA7  1903               	skipnz
  6499  0DA8  2DAA               	goto	u3873
  6500  0DA9  07B5               	addwf	___flmul@grs+3,f
  6501  0DAA                     u3873:
  6502  0DAA                     l3007:
  6503  0DAA  083D               	movf	___flmul@temp+1,w
  6504  0DAB  00AC               	movwf	??___flmul
  6505  0DAC  01AD               	clrf	??___flmul+1
  6506  0DAD  01AE               	clrf	??___flmul+2
  6507  0DAE  01AF               	clrf	??___flmul+3
  6508  0DAF  082C               	movf	??___flmul,w
  6509  0DB0  07B8               	addwf	___flmul@prod,f
  6510  0DB1  082D               	movf	??___flmul+1,w
  6511  0DB2  1103               	clrz
  6512  0DB3  1803               	skipnc
  6513  0DB4  3E01               	addlw	1
  6514  0DB5  1903               	skipnz
  6515  0DB6  2DB8               	goto	u3881
  6516  0DB7  07B9               	addwf	___flmul@prod+1,f
  6517  0DB8                     u3881:
  6518  0DB8  082E               	movf	??___flmul+2,w
  6519  0DB9  1103               	clrz
  6520  0DBA  1803               	skipnc
  6521  0DBB  3E01               	addlw	1
  6522  0DBC  1903               	skipnz
  6523  0DBD  2DBF               	goto	u3882
  6524  0DBE  07BA               	addwf	___flmul@prod+2,f
  6525  0DBF                     u3882:
  6526  0DBF  082F               	movf	??___flmul+3,w
  6527  0DC0  1103               	clrz
  6528  0DC1  1803               	skipnc
  6529  0DC2  3E01               	addlw	1
  6530  0DC3  1903               	skipnz
  6531  0DC4  2DC6               	goto	u3883
  6532  0DC5  07BB               	addwf	___flmul@prod+3,f
  6533  0DC6                     u3883:
  6534  0DC6                     l3009:
  6535  0DC6  3008               	movlw	8
  6536  0DC7  00AC               	movwf	??___flmul
  6537  0DC8                     u3895:
  6538  0DC8  1003               	clrc
  6539  0DC9  0DB2               	rlf	___flmul@grs,f
  6540  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6541  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6542  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6543  0DCD  0BAC               	decfsz	??___flmul,f
  6544  0DCE  2DC8               	goto	u3895
  6545  0DCF                     l3011:
  6546  0DCF  0825               	movf	___flmul@b+1,w
  6547  0DD0  00AC               	movwf	??___flmul
  6548  0DD1  082C               	movf	??___flmul,w
  6549  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6550  0DD3  0828               	movf	___flmul@a,w
  6551  0DD4  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6552  0DD9  0871               	movf	?__Umul8_16+1,w
  6553  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6554  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6555  0DDC  00BD               	movwf	___flmul@temp+1
  6556  0DDD  0870               	movf	?__Umul8_16,w
  6557  0DDE  00BC               	movwf	___flmul@temp
  6558  0DDF                     l3013:
  6559  0DDF  083C               	movf	___flmul@temp,w
  6560  0DE0  00AC               	movwf	??___flmul
  6561  0DE1  083D               	movf	___flmul@temp+1,w
  6562  0DE2  00AD               	movwf	??___flmul+1
  6563  0DE3  01AE               	clrf	??___flmul+2
  6564  0DE4  01AF               	clrf	??___flmul+3
  6565  0DE5  082C               	movf	??___flmul,w
  6566  0DE6  07B2               	addwf	___flmul@grs,f
  6567  0DE7  082D               	movf	??___flmul+1,w
  6568  0DE8  1103               	clrz
  6569  0DE9  1803               	skipnc
  6570  0DEA  3E01               	addlw	1
  6571  0DEB  1903               	skipnz
  6572  0DEC  2DEE               	goto	u3901
  6573  0DED  07B3               	addwf	___flmul@grs+1,f
  6574  0DEE                     u3901:
  6575  0DEE  082E               	movf	??___flmul+2,w
  6576  0DEF  1103               	clrz
  6577  0DF0  1803               	skipnc
  6578  0DF1  3E01               	addlw	1
  6579  0DF2  1903               	skipnz
  6580  0DF3  2DF5               	goto	u3902
  6581  0DF4  07B4               	addwf	___flmul@grs+2,f
  6582  0DF5                     u3902:
  6583  0DF5  082F               	movf	??___flmul+3,w
  6584  0DF6  1103               	clrz
  6585  0DF7  1803               	skipnc
  6586  0DF8  3E01               	addlw	1
  6587  0DF9  1903               	skipnz
  6588  0DFA  2DFC               	goto	u3903
  6589  0DFB  07B5               	addwf	___flmul@grs+3,f
  6590  0DFC                     u3903:
  6591  0DFC                     l3015:
  6592  0DFC  0824               	movf	___flmul@b,w
  6593  0DFD  00AC               	movwf	??___flmul
  6594  0DFE  082C               	movf	??___flmul,w
  6595  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6596  0E00  0829               	movf	___flmul@a+1,w
  6597  0E01  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6598  0E06  0871               	movf	?__Umul8_16+1,w
  6599  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6600  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6601  0E09  00BD               	movwf	___flmul@temp+1
  6602  0E0A  0870               	movf	?__Umul8_16,w
  6603  0E0B  00BC               	movwf	___flmul@temp
  6604  0E0C                     l3017:
  6605  0E0C  083C               	movf	___flmul@temp,w
  6606  0E0D  00AC               	movwf	??___flmul
  6607  0E0E  083D               	movf	___flmul@temp+1,w
  6608  0E0F  00AD               	movwf	??___flmul+1
  6609  0E10  01AE               	clrf	??___flmul+2
  6610  0E11  01AF               	clrf	??___flmul+3
  6611  0E12  082C               	movf	??___flmul,w
  6612  0E13  07B2               	addwf	___flmul@grs,f
  6613  0E14  082D               	movf	??___flmul+1,w
  6614  0E15  1103               	clrz
  6615  0E16  1803               	skipnc
  6616  0E17  3E01               	addlw	1
  6617  0E18  1903               	skipnz
  6618  0E19  2E1B               	goto	u3911
  6619  0E1A  07B3               	addwf	___flmul@grs+1,f
  6620  0E1B                     u3911:
  6621  0E1B  082E               	movf	??___flmul+2,w
  6622  0E1C  1103               	clrz
  6623  0E1D  1803               	skipnc
  6624  0E1E  3E01               	addlw	1
  6625  0E1F  1903               	skipnz
  6626  0E20  2E22               	goto	u3912
  6627  0E21  07B4               	addwf	___flmul@grs+2,f
  6628  0E22                     u3912:
  6629  0E22  082F               	movf	??___flmul+3,w
  6630  0E23  1103               	clrz
  6631  0E24  1803               	skipnc
  6632  0E25  3E01               	addlw	1
  6633  0E26  1903               	skipnz
  6634  0E27  2E29               	goto	u3913
  6635  0E28  07B5               	addwf	___flmul@grs+3,f
  6636  0E29                     u3913:
  6637  0E29                     l3019:
  6638  0E29  3008               	movlw	8
  6639  0E2A  00AC               	movwf	??___flmul
  6640  0E2B                     u3925:
  6641  0E2B  1003               	clrc
  6642  0E2C  0DB2               	rlf	___flmul@grs,f
  6643  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6644  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6645  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6646  0E30  0BAC               	decfsz	??___flmul,f
  6647  0E31  2E2B               	goto	u3925
  6648  0E32  0824               	movf	___flmul@b,w
  6649  0E33  00AC               	movwf	??___flmul
  6650  0E34  082C               	movf	??___flmul,w
  6651  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6652  0E36  0828               	movf	___flmul@a,w
  6653  0E37  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6654  0E3C  0871               	movf	?__Umul8_16+1,w
  6655  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6656  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6657  0E3F  00BD               	movwf	___flmul@temp+1
  6658  0E40  0870               	movf	?__Umul8_16,w
  6659  0E41  00BC               	movwf	___flmul@temp
  6660  0E42                     l3021:
  6661  0E42  083C               	movf	___flmul@temp,w
  6662  0E43  00AC               	movwf	??___flmul
  6663  0E44  083D               	movf	___flmul@temp+1,w
  6664  0E45  00AD               	movwf	??___flmul+1
  6665  0E46  01AE               	clrf	??___flmul+2
  6666  0E47  01AF               	clrf	??___flmul+3
  6667  0E48  082C               	movf	??___flmul,w
  6668  0E49  07B2               	addwf	___flmul@grs,f
  6669  0E4A  082D               	movf	??___flmul+1,w
  6670  0E4B  1103               	clrz
  6671  0E4C  1803               	skipnc
  6672  0E4D  3E01               	addlw	1
  6673  0E4E  1903               	skipnz
  6674  0E4F  2E51               	goto	u3931
  6675  0E50  07B3               	addwf	___flmul@grs+1,f
  6676  0E51                     u3931:
  6677  0E51  082E               	movf	??___flmul+2,w
  6678  0E52  1103               	clrz
  6679  0E53  1803               	skipnc
  6680  0E54  3E01               	addlw	1
  6681  0E55  1903               	skipnz
  6682  0E56  2E58               	goto	u3932
  6683  0E57  07B4               	addwf	___flmul@grs+2,f
  6684  0E58                     u3932:
  6685  0E58  082F               	movf	??___flmul+3,w
  6686  0E59  1103               	clrz
  6687  0E5A  1803               	skipnc
  6688  0E5B  3E01               	addlw	1
  6689  0E5C  1903               	skipnz
  6690  0E5D  2E5F               	goto	u3933
  6691  0E5E  07B5               	addwf	___flmul@grs+3,f
  6692  0E5F                     u3933:
  6693  0E5F                     l3023:
  6694  0E5F  0825               	movf	___flmul@b+1,w
  6695  0E60  00AC               	movwf	??___flmul
  6696  0E61  082C               	movf	??___flmul,w
  6697  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6698  0E63  082A               	movf	___flmul@a+2,w
  6699  0E64  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6700  0E69  0871               	movf	?__Umul8_16+1,w
  6701  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6702  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6703  0E6C  00BD               	movwf	___flmul@temp+1
  6704  0E6D  0870               	movf	?__Umul8_16,w
  6705  0E6E  00BC               	movwf	___flmul@temp
  6706  0E6F  083C               	movf	___flmul@temp,w
  6707  0E70  00AC               	movwf	??___flmul
  6708  0E71  083D               	movf	___flmul@temp+1,w
  6709  0E72  00AD               	movwf	??___flmul+1
  6710  0E73  01AE               	clrf	??___flmul+2
  6711  0E74  01AF               	clrf	??___flmul+3
  6712  0E75  082C               	movf	??___flmul,w
  6713  0E76  07B8               	addwf	___flmul@prod,f
  6714  0E77  082D               	movf	??___flmul+1,w
  6715  0E78  1103               	clrz
  6716  0E79  1803               	skipnc
  6717  0E7A  3E01               	addlw	1
  6718  0E7B  1903               	skipnz
  6719  0E7C  2E7E               	goto	u3941
  6720  0E7D  07B9               	addwf	___flmul@prod+1,f
  6721  0E7E                     u3941:
  6722  0E7E  082E               	movf	??___flmul+2,w
  6723  0E7F  1103               	clrz
  6724  0E80  1803               	skipnc
  6725  0E81  3E01               	addlw	1
  6726  0E82  1903               	skipnz
  6727  0E83  2E85               	goto	u3942
  6728  0E84  07BA               	addwf	___flmul@prod+2,f
  6729  0E85                     u3942:
  6730  0E85  082F               	movf	??___flmul+3,w
  6731  0E86  1103               	clrz
  6732  0E87  1803               	skipnc
  6733  0E88  3E01               	addlw	1
  6734  0E89  1903               	skipnz
  6735  0E8A  2E8C               	goto	u3943
  6736  0E8B  07BB               	addwf	___flmul@prod+3,f
  6737  0E8C                     u3943:
  6738  0E8C                     l3025:
  6739  0E8C  0826               	movf	___flmul@b+2,w
  6740  0E8D  00AC               	movwf	??___flmul
  6741  0E8E  082C               	movf	??___flmul,w
  6742  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6743  0E90  0829               	movf	___flmul@a+1,w
  6744  0E91  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6745  0E96  0871               	movf	?__Umul8_16+1,w
  6746  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6748  0E99  00BD               	movwf	___flmul@temp+1
  6749  0E9A  0870               	movf	?__Umul8_16,w
  6750  0E9B  00BC               	movwf	___flmul@temp
  6751  0E9C                     l3027:
  6752  0E9C  083C               	movf	___flmul@temp,w
  6753  0E9D  00AC               	movwf	??___flmul
  6754  0E9E  083D               	movf	___flmul@temp+1,w
  6755  0E9F  00AD               	movwf	??___flmul+1
  6756  0EA0  01AE               	clrf	??___flmul+2
  6757  0EA1  01AF               	clrf	??___flmul+3
  6758  0EA2  082C               	movf	??___flmul,w
  6759  0EA3  07B8               	addwf	___flmul@prod,f
  6760  0EA4  082D               	movf	??___flmul+1,w
  6761  0EA5  1103               	clrz
  6762  0EA6  1803               	skipnc
  6763  0EA7  3E01               	addlw	1
  6764  0EA8  1903               	skipnz
  6765  0EA9  2EAB               	goto	u3951
  6766  0EAA  07B9               	addwf	___flmul@prod+1,f
  6767  0EAB                     u3951:
  6768  0EAB  082E               	movf	??___flmul+2,w
  6769  0EAC  1103               	clrz
  6770  0EAD  1803               	skipnc
  6771  0EAE  3E01               	addlw	1
  6772  0EAF  1903               	skipnz
  6773  0EB0  2EB2               	goto	u3952
  6774  0EB1  07BA               	addwf	___flmul@prod+2,f
  6775  0EB2                     u3952:
  6776  0EB2  082F               	movf	??___flmul+3,w
  6777  0EB3  1103               	clrz
  6778  0EB4  1803               	skipnc
  6779  0EB5  3E01               	addlw	1
  6780  0EB6  1903               	skipnz
  6781  0EB7  2EB9               	goto	u3953
  6782  0EB8  07BB               	addwf	___flmul@prod+3,f
  6783  0EB9                     u3953:
  6784  0EB9  0826               	movf	___flmul@b+2,w
  6785  0EBA  00AC               	movwf	??___flmul
  6786  0EBB  082C               	movf	??___flmul,w
  6787  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6788  0EBD  082A               	movf	___flmul@a+2,w
  6789  0EBE  160A  158A  2271  120A  158A  	fcall	__Umul8_16
  6790  0EC3  0871               	movf	?__Umul8_16+1,w
  6791  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6792  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6793  0EC6  00BD               	movwf	___flmul@temp+1
  6794  0EC7  0870               	movf	?__Umul8_16,w
  6795  0EC8  00BC               	movwf	___flmul@temp
  6796  0EC9                     l3029:
  6797  0EC9  083C               	movf	___flmul@temp,w
  6798  0ECA  00AC               	movwf	??___flmul
  6799  0ECB  083D               	movf	___flmul@temp+1,w
  6800  0ECC  00AD               	movwf	??___flmul+1
  6801  0ECD  01AE               	clrf	??___flmul+2
  6802  0ECE  01AF               	clrf	??___flmul+3
  6803  0ECF  3008               	movlw	8
  6804  0ED0                     u3965:
  6805  0ED0  1003               	clrc
  6806  0ED1  0DAC               	rlf	??___flmul,f
  6807  0ED2  0DAD               	rlf	??___flmul+1,f
  6808  0ED3  0DAE               	rlf	??___flmul+2,f
  6809  0ED4  0DAF               	rlf	??___flmul+3,f
  6810  0ED5                     u3960:
  6811  0ED5  3EFF               	addlw	-1
  6812  0ED6  1D03               	skipz
  6813  0ED7  2ED0               	goto	u3965
  6814  0ED8  082C               	movf	??___flmul,w
  6815  0ED9  07B8               	addwf	___flmul@prod,f
  6816  0EDA  082D               	movf	??___flmul+1,w
  6817  0EDB  1103               	clrz
  6818  0EDC  1803               	skipnc
  6819  0EDD  3E01               	addlw	1
  6820  0EDE  1903               	skipnz
  6821  0EDF  2EE1               	goto	u3971
  6822  0EE0  07B9               	addwf	___flmul@prod+1,f
  6823  0EE1                     u3971:
  6824  0EE1  082E               	movf	??___flmul+2,w
  6825  0EE2  1103               	clrz
  6826  0EE3  1803               	skipnc
  6827  0EE4  3E01               	addlw	1
  6828  0EE5  1903               	skipnz
  6829  0EE6  2EE8               	goto	u3972
  6830  0EE7  07BA               	addwf	___flmul@prod+2,f
  6831  0EE8                     u3972:
  6832  0EE8  082F               	movf	??___flmul+3,w
  6833  0EE9  1103               	clrz
  6834  0EEA  1803               	skipnc
  6835  0EEB  3E01               	addlw	1
  6836  0EEC  1903               	skipnz
  6837  0EED  2EEF               	goto	u3973
  6838  0EEE  07BB               	addwf	___flmul@prod+3,f
  6839  0EEF                     u3973:
  6840  0EEF                     l3031:
  6841  0EEF  0832               	movf	___flmul@grs,w
  6842  0EF0  00AC               	movwf	??___flmul
  6843  0EF1  0833               	movf	___flmul@grs+1,w
  6844  0EF2  00AD               	movwf	??___flmul+1
  6845  0EF3  0834               	movf	___flmul@grs+2,w
  6846  0EF4  00AE               	movwf	??___flmul+2
  6847  0EF5  0835               	movf	___flmul@grs+3,w
  6848  0EF6  00AF               	movwf	??___flmul+3
  6849  0EF7  3018               	movlw	24
  6850  0EF8                     u3985:
  6851  0EF8  1003               	clrc
  6852  0EF9  0CAF               	rrf	??___flmul+3,f
  6853  0EFA  0CAE               	rrf	??___flmul+2,f
  6854  0EFB  0CAD               	rrf	??___flmul+1,f
  6855  0EFC  0CAC               	rrf	??___flmul,f
  6856  0EFD                     u3980:
  6857  0EFD  3EFF               	addlw	-1
  6858  0EFE  1D03               	skipz
  6859  0EFF  2EF8               	goto	u3985
  6860  0F00  082C               	movf	??___flmul,w
  6861  0F01  07B8               	addwf	___flmul@prod,f
  6862  0F02  082D               	movf	??___flmul+1,w
  6863  0F03  1103               	clrz
  6864  0F04  1803               	skipnc
  6865  0F05  3E01               	addlw	1
  6866  0F06  1903               	skipnz
  6867  0F07  2F09               	goto	u3991
  6868  0F08  07B9               	addwf	___flmul@prod+1,f
  6869  0F09                     u3991:
  6870  0F09  082E               	movf	??___flmul+2,w
  6871  0F0A  1103               	clrz
  6872  0F0B  1803               	skipnc
  6873  0F0C  3E01               	addlw	1
  6874  0F0D  1903               	skipnz
  6875  0F0E  2F10               	goto	u3992
  6876  0F0F  07BA               	addwf	___flmul@prod+2,f
  6877  0F10                     u3992:
  6878  0F10  082F               	movf	??___flmul+3,w
  6879  0F11  1103               	clrz
  6880  0F12  1803               	skipnc
  6881  0F13  3E01               	addlw	1
  6882  0F14  1903               	skipnz
  6883  0F15  2F17               	goto	u3993
  6884  0F16  07BB               	addwf	___flmul@prod+3,f
  6885  0F17                     u3993:
  6886  0F17                     l3033:
  6887  0F17  3008               	movlw	8
  6888  0F18  00AC               	movwf	??___flmul
  6889  0F19                     u4005:
  6890  0F19  1003               	clrc
  6891  0F1A  0DB2               	rlf	___flmul@grs,f
  6892  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6893  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6894  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6895  0F1E  0BAC               	decfsz	??___flmul,f
  6896  0F1F  2F19               	goto	u4005
  6897  0F20                     l3035:
  6898  0F20  0837               	movf	___flmul@bexp,w
  6899  0F21  0736               	addwf	___flmul@aexp,w
  6900  0F22  00AC               	movwf	??___flmul
  6901  0F23  01AD               	clrf	??___flmul+1
  6902  0F24  0DAD               	rlf	??___flmul+1,f
  6903  0F25  082C               	movf	??___flmul,w
  6904  0F26  3E82               	addlw	130
  6905  0F27  00BC               	movwf	___flmul@temp
  6906  0F28  082D               	movf	??___flmul+1,w
  6907  0F29  1803               	skipnc
  6908  0F2A  3E01               	addlw	1
  6909  0F2B  3EFF               	addlw	255
  6910  0F2C  00BD               	movwf	___flmul@temp+1
  6911  0F2D  2F4B               	goto	l3047
  6912  0F2E                     l3037:
  6913  0F2E  3001               	movlw	1
  6914  0F2F  00AC               	movwf	??___flmul
  6915  0F30                     u4015:
  6916  0F30  1003               	clrc
  6917  0F31  0DB8               	rlf	___flmul@prod,f
  6918  0F32  0DB9               	rlf	___flmul@prod+1,f
  6919  0F33  0DBA               	rlf	___flmul@prod+2,f
  6920  0F34  0DBB               	rlf	___flmul@prod+3,f
  6921  0F35  0BAC               	decfsz	??___flmul,f
  6922  0F36  2F30               	goto	u4015
  6923  0F37                     l3039:
  6924  0F37  1FB5               	btfss	___flmul@grs+3,7
  6925  0F38  2F3A               	goto	u4021
  6926  0F39  2F3B               	goto	u4020
  6927  0F3A                     u4021:
  6928  0F3A  2F3C               	goto	l3043
  6929  0F3B                     u4020:
  6930  0F3B                     l3041:
  6931  0F3B  1438               	bsf	___flmul@prod,0
  6932  0F3C                     l3043:
  6933  0F3C  3001               	movlw	1
  6934  0F3D  00AC               	movwf	??___flmul
  6935  0F3E                     u4035:
  6936  0F3E  1003               	clrc
  6937  0F3F  0DB2               	rlf	___flmul@grs,f
  6938  0F40  0DB3               	rlf	___flmul@grs+1,f
  6939  0F41  0DB4               	rlf	___flmul@grs+2,f
  6940  0F42  0DB5               	rlf	___flmul@grs+3,f
  6941  0F43  0BAC               	decfsz	??___flmul,f
  6942  0F44  2F3E               	goto	u4035
  6943  0F45                     l3045:
  6944  0F45  30FF               	movlw	255
  6945  0F46  07BC               	addwf	___flmul@temp,f
  6946  0F47  1803               	skipnc
  6947  0F48  0ABD               	incf	___flmul@temp+1,f
  6948  0F49  30FF               	movlw	255
  6949  0F4A  07BD               	addwf	___flmul@temp+1,f
  6950  0F4B                     l3047:
  6951  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6952  0F4C  2F4E               	goto	u4041
  6953  0F4D  2F4F               	goto	u4040
  6954  0F4E                     u4041:
  6955  0F4E  2F2E               	goto	l3037
  6956  0F4F                     u4040:
  6957  0F4F                     l3049:
  6958  0F4F  01B6               	clrf	___flmul@aexp
  6959  0F50                     l3051:
  6960  0F50  1FB5               	btfss	___flmul@grs+3,7
  6961  0F51  2F53               	goto	u4051
  6962  0F52  2F54               	goto	u4050
  6963  0F53                     u4051:
  6964  0F53  2F70               	goto	l3059
  6965  0F54                     u4050:
  6966  0F54                     l3053:
  6967  0F54  30FF               	movlw	255
  6968  0F55  0532               	andwf	___flmul@grs,w
  6969  0F56  00AC               	movwf	??___flmul
  6970  0F57  30FF               	movlw	255
  6971  0F58  0533               	andwf	___flmul@grs+1,w
  6972  0F59  00AD               	movwf	??___flmul+1
  6973  0F5A  30FF               	movlw	255
  6974  0F5B  0534               	andwf	___flmul@grs+2,w
  6975  0F5C  00AE               	movwf	??___flmul+2
  6976  0F5D  307F               	movlw	127
  6977  0F5E  0535               	andwf	___flmul@grs+3,w
  6978  0F5F  00AF               	movwf	??___flmul+3
  6979  0F60  082F               	movf	??___flmul+3,w
  6980  0F61  042E               	iorwf	??___flmul+2,w
  6981  0F62  042D               	iorwf	??___flmul+1,w
  6982  0F63  042C               	iorwf	??___flmul,w
  6983  0F64  1903               	skipnz
  6984  0F65  2F67               	goto	u4061
  6985  0F66  2F68               	goto	u4060
  6986  0F67                     u4061:
  6987  0F67  2F6B               	goto	l903
  6988  0F68                     u4060:
  6989  0F68                     l3055:
  6990  0F68  01B6               	clrf	___flmul@aexp
  6991  0F69  0AB6               	incf	___flmul@aexp,f
  6992  0F6A  2F70               	goto	l3059
  6993  0F6B                     l903:
  6994  0F6B  1C38               	btfss	___flmul@prod,0
  6995  0F6C  2F6E               	goto	u4071
  6996  0F6D  2F6F               	goto	u4070
  6997  0F6E                     u4071:
  6998  0F6E  2F70               	goto	l3059
  6999  0F6F                     u4070:
  7000  0F6F  2F68               	goto	l3055
  7001  0F70                     l3059:
  7002  0F70  0836               	movf	___flmul@aexp,w
  7003  0F71  1903               	btfsc	3,2
  7004  0F72  2F74               	goto	u4081
  7005  0F73  2F75               	goto	u4080
  7006  0F74                     u4081:
  7007  0F74  2FA6               	goto	l3069
  7008  0F75                     u4080:
  7009  0F75                     l3061:
  7010  0F75  3001               	movlw	1
  7011  0F76  07B8               	addwf	___flmul@prod,f
  7012  0F77  3000               	movlw	0
  7013  0F78  1803               	skipnc
  7014  0F79  3001               	movlw	1
  7015  0F7A  07B9               	addwf	___flmul@prod+1,f
  7016  0F7B  3000               	movlw	0
  7017  0F7C  1803               	skipnc
  7018  0F7D  3001               	movlw	1
  7019  0F7E  07BA               	addwf	___flmul@prod+2,f
  7020  0F7F  3000               	movlw	0
  7021  0F80  1803               	skipnc
  7022  0F81  3001               	movlw	1
  7023  0F82  07BB               	addwf	___flmul@prod+3,f
  7024  0F83                     l3063:
  7025  0F83  1C3B               	btfss	___flmul@prod+3,0
  7026  0F84  2F86               	goto	u4091
  7027  0F85  2F87               	goto	u4090
  7028  0F86                     u4091:
  7029  0F86  2FA6               	goto	l3069
  7030  0F87                     u4090:
  7031  0F87                     l3065:
  7032  0F87  0838               	movf	___flmul@prod,w
  7033  0F88  00AC               	movwf	??___flmul
  7034  0F89  0839               	movf	___flmul@prod+1,w
  7035  0F8A  00AD               	movwf	??___flmul+1
  7036  0F8B  083A               	movf	___flmul@prod+2,w
  7037  0F8C  00AE               	movwf	??___flmul+2
  7038  0F8D  083B               	movf	___flmul@prod+3,w
  7039  0F8E  00AF               	movwf	??___flmul+3
  7040  0F8F  3001               	movlw	1
  7041  0F90  00B0               	movwf	??___flmul+4
  7042  0F91                     u4105:
  7043  0F91  0D2F               	rlf	??___flmul+3,w
  7044  0F92  0CAF               	rrf	??___flmul+3,f
  7045  0F93  0CAE               	rrf	??___flmul+2,f
  7046  0F94  0CAD               	rrf	??___flmul+1,f
  7047  0F95  0CAC               	rrf	??___flmul,f
  7048  0F96                     u4100:
  7049  0F96  0BB0               	decfsz	??___flmul+4,f
  7050  0F97  2F91               	goto	u4105
  7051  0F98  082F               	movf	??___flmul+3,w
  7052  0F99  00BB               	movwf	___flmul@prod+3
  7053  0F9A  082E               	movf	??___flmul+2,w
  7054  0F9B  00BA               	movwf	___flmul@prod+2
  7055  0F9C  082D               	movf	??___flmul+1,w
  7056  0F9D  00B9               	movwf	___flmul@prod+1
  7057  0F9E  082C               	movf	??___flmul,w
  7058  0F9F  00B8               	movwf	___flmul@prod
  7059  0FA0                     l3067:
  7060  0FA0  3001               	movlw	1
  7061  0FA1  07BC               	addwf	___flmul@temp,f
  7062  0FA2  1803               	skipnc
  7063  0FA3  0ABD               	incf	___flmul@temp+1,f
  7064  0FA4  3000               	movlw	0
  7065  0FA5  07BD               	addwf	___flmul@temp+1,f
  7066  0FA6                     l3069:
  7067  0FA6  083D               	movf	___flmul@temp+1,w
  7068  0FA7  3A80               	xorlw	128
  7069  0FA8  00FF               	movwf	btemp+1
  7070  0FA9  3080               	movlw	128
  7071  0FAA  027F               	subwf	btemp+1,w
  7072  0FAB  1D03               	skipz
  7073  0FAC  2FAF               	goto	u4115
  7074  0FAD  30FF               	movlw	255
  7075  0FAE  023C               	subwf	___flmul@temp,w
  7076  0FAF                     u4115:
  7077  0FAF  1C03               	skipc
  7078  0FB0  2FB2               	goto	u4111
  7079  0FB1  2FB3               	goto	u4110
  7080  0FB2                     u4111:
  7081  0FB2  2FBE               	goto	l3073
  7082  0FB3                     u4110:
  7083  0FB3                     l3071:
  7084  0FB3  307F               	movlw	127
  7085  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  7086  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  7087  0FB6  00BB               	movwf	___flmul@prod+3
  7088  0FB7  3080               	movlw	128
  7089  0FB8  00BA               	movwf	___flmul@prod+2
  7090  0FB9  3000               	movlw	0
  7091  0FBA  00B9               	movwf	___flmul@prod+1
  7092  0FBB  3000               	movlw	0
  7093  0FBC  00B8               	movwf	___flmul@prod
  7094  0FBD  2FF3               	goto	l909
  7095  0FBE                     l3073:
  7096  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  7097  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  7098  0FC0  083D               	movf	___flmul@temp+1,w
  7099  0FC1  3A80               	xorlw	128
  7100  0FC2  00FF               	movwf	btemp+1
  7101  0FC3  3080               	movlw	128
  7102  0FC4  027F               	subwf	btemp+1,w
  7103  0FC5  1D03               	skipz
  7104  0FC6  2FC9               	goto	u4125
  7105  0FC7  3001               	movlw	1
  7106  0FC8  023C               	subwf	___flmul@temp,w
  7107  0FC9                     u4125:
  7108  0FC9  1803               	skipnc
  7109  0FCA  2FCC               	goto	u4121
  7110  0FCB  2FCD               	goto	u4120
  7111  0FCC                     u4121:
  7112  0FCC  2FD9               	goto	l3079
  7113  0FCD                     u4120:
  7114  0FCD                     l3075:
  7115  0FCD  3000               	movlw	0
  7116  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  7117  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  7118  0FD0  00BB               	movwf	___flmul@prod+3
  7119  0FD1  3000               	movlw	0
  7120  0FD2  00BA               	movwf	___flmul@prod+2
  7121  0FD3  3000               	movlw	0
  7122  0FD4  00B9               	movwf	___flmul@prod+1
  7123  0FD5  3000               	movlw	0
  7124  0FD6  00B8               	movwf	___flmul@prod
  7125  0FD7                     l3077:
  7126  0FD7  01B1               	clrf	___flmul@sign
  7127  0FD8  2FF3               	goto	l909
  7128  0FD9                     l3079:
  7129  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  7130  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  7131  0FDB  083C               	movf	___flmul@temp,w
  7132  0FDC  00AC               	movwf	??___flmul
  7133  0FDD  082C               	movf	??___flmul,w
  7134  0FDE  00B7               	movwf	___flmul@bexp
  7135  0FDF  30FF               	movlw	255
  7136  0FE0  05B8               	andwf	___flmul@prod,f
  7137  0FE1  30FF               	movlw	255
  7138  0FE2  05B9               	andwf	___flmul@prod+1,f
  7139  0FE3  307F               	movlw	127
  7140  0FE4  05BA               	andwf	___flmul@prod+2,f
  7141  0FE5  3000               	movlw	0
  7142  0FE6  05BB               	andwf	___flmul@prod+3,f
  7143  0FE7                     l3081:
  7144  0FE7  1C37               	btfss	___flmul@bexp,0
  7145  0FE8  2FEA               	goto	u4131
  7146  0FE9  2FEB               	goto	u4130
  7147  0FEA                     u4131:
  7148  0FEA  2FEC               	goto	l3085
  7149  0FEB                     u4130:
  7150  0FEB                     l3083:
  7151  0FEB  17BA               	bsf	___flmul@prod+2,7
  7152  0FEC                     l3085:
  7153  0FEC  0837               	movf	___flmul@bexp,w
  7154  0FED  00AC               	movwf	??___flmul
  7155  0FEE  1003               	clrc
  7156  0FEF  0C2C               	rrf	??___flmul,w
  7157  0FF0  00AD               	movwf	??___flmul+1
  7158  0FF1  082D               	movf	??___flmul+1,w
  7159  0FF2  00BB               	movwf	___flmul@prod+3
  7160  0FF3                     l909:
  7161  0FF3  0831               	movf	___flmul@sign,w
  7162  0FF4  00AC               	movwf	??___flmul
  7163  0FF5  082C               	movf	??___flmul,w
  7164  0FF6  04BB               	iorwf	___flmul@prod+3,f
  7165  0FF7                     l3087:
  7166  0FF7  083B               	movf	___flmul@prod+3,w
  7167  0FF8  00A7               	movwf	?___flmul+3
  7168  0FF9  083A               	movf	___flmul@prod+2,w
  7169  0FFA  00A6               	movwf	?___flmul+2
  7170  0FFB  0839               	movf	___flmul@prod+1,w
  7171  0FFC  00A5               	movwf	?___flmul+1
  7172  0FFD  0838               	movf	___flmul@prod,w
  7173  0FFE  00A4               	movwf	?___flmul
  7174  0FFF                     l897:
  7175  0FFF  0008               	return
  7176  1000                     __end_of___flmul:
  7177                           
  7178                           	psect	text10
  7179  1A71                     __ptext10:	
  7180 ;; *************** function __Umul8_16 *****************
  7181 ;; Defined at:
  7182 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  multiplier      1    wreg     unsigned char 
  7185 ;;  multiplicand    1    0[COMMON] unsigned char 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  multiplier      1    8[COMMON] unsigned char 
  7188 ;;  word_mpld       2    6[COMMON] unsigned int 
  7189 ;;  product         2    4[COMMON] unsigned int 
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  2    0[COMMON] unsigned int 
  7192 ;; Registers used:
  7193 ;;		wreg, status,2, status,0
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7199 ;;      Params:         2       0       0       0       0
  7200 ;;      Locals:         5       0       0       0       0
  7201 ;;      Temps:          2       0       0       0       0
  7202 ;;      Totals:         9       0       0       0       0
  7203 ;;Total ram usage:        9 bytes
  7204 ;; Hardware stack levels used: 1
  7205 ;; This function calls:
  7206 ;;		Nothing
  7207 ;; This function is called by:
  7208 ;;		___flmul
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           
  7213                           ;psect for function __Umul8_16
  7214  1A71                     __Umul8_16:
  7215                           
  7216                           ;incstack = 0
  7217                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7218                           ;__Umul8_16@multiplier stored from wreg
  7219  1A71  00F8               	movwf	__Umul8_16@multiplier
  7220  1A72                     l2595:
  7221  1A72  01F4               	clrf	__Umul8_16@product
  7222  1A73  01F5               	clrf	__Umul8_16@product+1
  7223  1A74                     l2597:
  7224  1A74  0870               	movf	__Umul8_16@multiplicand,w
  7225  1A75  00F2               	movwf	??__Umul8_16
  7226  1A76  01F3               	clrf	??__Umul8_16+1
  7227  1A77  0872               	movf	??__Umul8_16,w
  7228  1A78  00F6               	movwf	__Umul8_16@word_mpld
  7229  1A79  0873               	movf	??__Umul8_16+1,w
  7230  1A7A  00F7               	movwf	__Umul8_16@word_mpld+1
  7231  1A7B                     l2599:
  7232  1A7B  1C78               	btfss	__Umul8_16@multiplier,0
  7233  1A7C  2A7E               	goto	u2881
  7234  1A7D  2A7F               	goto	u2880
  7235  1A7E                     u2881:
  7236  1A7E  2A85               	goto	l916
  7237  1A7F                     u2880:
  7238  1A7F                     l2601:
  7239  1A7F  0876               	movf	__Umul8_16@word_mpld,w
  7240  1A80  07F4               	addwf	__Umul8_16@product,f
  7241  1A81  1803               	skipnc
  7242  1A82  0AF5               	incf	__Umul8_16@product+1,f
  7243  1A83  0877               	movf	__Umul8_16@word_mpld+1,w
  7244  1A84  07F5               	addwf	__Umul8_16@product+1,f
  7245  1A85                     l916:
  7246  1A85  3001               	movlw	1
  7247  1A86                     u2895:
  7248  1A86  1003               	clrc
  7249  1A87  0DF6               	rlf	__Umul8_16@word_mpld,f
  7250  1A88  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7251  1A89  3EFF               	addlw	-1
  7252  1A8A  1D03               	skipz
  7253  1A8B  2A86               	goto	u2895
  7254  1A8C  1003               	clrc
  7255  1A8D  0CF8               	rrf	__Umul8_16@multiplier,f
  7256  1A8E                     l2603:
  7257  1A8E  0878               	movf	__Umul8_16@multiplier,w
  7258  1A8F  1D03               	btfss	3,2
  7259  1A90  2A92               	goto	u2901
  7260  1A91  2A93               	goto	u2900
  7261  1A92                     u2901:
  7262  1A92  2A7B               	goto	l2599
  7263  1A93                     u2900:
  7264  1A93                     l2605:
  7265  1A93  0875               	movf	__Umul8_16@product+1,w
  7266  1A94  00F1               	movwf	?__Umul8_16+1
  7267  1A95  0874               	movf	__Umul8_16@product,w
  7268  1A96  00F0               	movwf	?__Umul8_16
  7269  1A97                     l918:
  7270  1A97  0008               	return
  7271  1A98                     __end_of__Umul8_16:
  7272                           
  7273                           	psect	text11
  7274  1F43                     __ptext11:	
  7275 ;; *************** function __tdiv_to_l_ *****************
  7276 ;; Defined at:
  7277 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  f1              4    0[COMMON] float 
  7280 ;;  f2              4    4[COMMON] float 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  quot            4    0[BANK0 ] unsigned long 
  7283 ;;  exp1            1    5[BANK0 ] unsigned char 
  7284 ;;  cntr            1    4[BANK0 ] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  4    0[COMMON] unsigned long 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, status,0
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7294 ;;      Params:         8       0       0       0       0
  7295 ;;      Locals:         0       6       0       0       0
  7296 ;;      Temps:          4       0       0       0       0
  7297 ;;      Totals:        12       6       0       0       0
  7298 ;;Total ram usage:       18 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_sprintf
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           
  7308                           ;psect for function __tdiv_to_l_
  7309  1F43                     __tdiv_to_l_:
  7310  1F43                     l3263:	
  7311                           ;incstack = 0
  7312                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7313                           
  7314  1F43  0870               	movf	__tdiv_to_l_@f1,w
  7315  1F44  00F8               	movwf	??__tdiv_to_l_
  7316  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  7317  1F46  00F9               	movwf	??__tdiv_to_l_+1
  7318  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  7319  1F48  00FA               	movwf	??__tdiv_to_l_+2
  7320  1F49  1003               	clrc
  7321  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  7322  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  7323  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  7324  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  7325  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  7326  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  7327  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  7328  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  7329  1F52  1D03               	btfss	3,2
  7330  1F53  2F55               	goto	u4451
  7331  1F54  2F56               	goto	u4450
  7332  1F55                     u4451:
  7333  1F55  2F5F               	goto	l3269
  7334  1F56                     u4450:
  7335  1F56                     l3265:
  7336  1F56  3000               	movlw	0
  7337  1F57  00F3               	movwf	?__tdiv_to_l_+3
  7338  1F58  3000               	movlw	0
  7339  1F59  00F2               	movwf	?__tdiv_to_l_+2
  7340  1F5A  3000               	movlw	0
  7341  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  7342  1F5C  3000               	movlw	0
  7343  1F5D  00F0               	movwf	?__tdiv_to_l_
  7344  1F5E  2FFF               	goto	l691
  7345  1F5F                     l3269:
  7346  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  7347  1F60  00F8               	movwf	??__tdiv_to_l_
  7348  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  7349  1F62  00F9               	movwf	??__tdiv_to_l_+1
  7350  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  7351  1F64  00FA               	movwf	??__tdiv_to_l_+2
  7352  1F65  1003               	clrc
  7353  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  7354  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  7355  1F68  00FB               	movwf	??__tdiv_to_l_+3
  7356  1F69  087B               	movf	??__tdiv_to_l_+3,w
  7357  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  7358  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  7359  1F6C  1D03               	btfss	3,2
  7360  1F6D  2F6F               	goto	u4461
  7361  1F6E  2F70               	goto	u4460
  7362  1F6F                     u4461:
  7363  1F6F  2F71               	goto	l692
  7364  1F70                     u4460:
  7365  1F70  2F56               	goto	l3265
  7366  1F71                     l692:
  7367  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7368  1F72                     l3275:
  7369  1F72  30FF               	movlw	255
  7370  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  7371  1F74  30FF               	movlw	255
  7372  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7373  1F76  3000               	movlw	0
  7374  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7375  1F78                     l3277:
  7376  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7377  1F79  30FF               	movlw	255
  7378  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  7379  1F7B  30FF               	movlw	255
  7380  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7381  1F7D  3000               	movlw	0
  7382  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7383  1F7F  3000               	movlw	0
  7384  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  7385  1F81  3000               	movlw	0
  7386  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  7387  1F83  3000               	movlw	0
  7388  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  7389  1F85  3000               	movlw	0
  7390  1F86  00A0               	movwf	__tdiv_to_l_@quot
  7391  1F87                     l3279:
  7392  1F87  307F               	movlw	127
  7393  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  7394  1F89                     l3281:
  7395  1F89  3098               	movlw	152
  7396  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  7397  1F8B  00F8               	movwf	??__tdiv_to_l_
  7398  1F8C  0878               	movf	??__tdiv_to_l_,w
  7399  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  7400  1F8E  3018               	movlw	24
  7401  1F8F  00F8               	movwf	??__tdiv_to_l_
  7402  1F90  0878               	movf	??__tdiv_to_l_,w
  7403  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  7404  1F92                     l3283:
  7405  1F92  3001               	movlw	1
  7406  1F93  00F8               	movwf	??__tdiv_to_l_
  7407  1F94                     u4475:
  7408  1F94  1003               	clrc
  7409  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  7410  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7411  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7412  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7413  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  7414  1F9A  2F94               	goto	u4475
  7415  1F9B                     l3285:
  7416  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  7417  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  7418  1F9D  1D03               	skipz
  7419  1F9E  2FA5               	goto	u4485
  7420  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  7421  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  7422  1FA1  1D03               	skipz
  7423  1FA2  2FA5               	goto	u4485
  7424  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  7425  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  7426  1FA5                     u4485:
  7427  1FA5  1C03               	skipc
  7428  1FA6  2FA8               	goto	u4481
  7429  1FA7  2FA9               	goto	u4480
  7430  1FA8                     u4481:
  7431  1FA8  2FB4               	goto	l3291
  7432  1FA9                     u4480:
  7433  1FA9                     l3287:
  7434  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  7435  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  7436  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  7437  1FAC  1C03               	skipc
  7438  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7439  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7440  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  7441  1FB0  1C03               	skipc
  7442  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  7443  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7444  1FB3                     l3289:
  7445  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  7446  1FB4                     l3291:
  7447  1FB4  3001               	movlw	1
  7448  1FB5                     u4495:
  7449  1FB5  1003               	clrc
  7450  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  7451  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7452  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7453  1FB9  3EFF               	addlw	-1
  7454  1FBA  1D03               	skipz
  7455  1FBB  2FB5               	goto	u4495
  7456  1FBC                     l3293:
  7457  1FBC  3001               	movlw	1
  7458  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  7459  1FBE  1D03               	btfss	3,2
  7460  1FBF  2FC1               	goto	u4501
  7461  1FC0  2FC2               	goto	u4500
  7462  1FC1                     u4501:
  7463  1FC1  2F92               	goto	l3283
  7464  1FC2                     u4500:
  7465  1FC2                     l695:
  7466  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7467  1FC3  2FC5               	goto	u4511
  7468  1FC4  2FC6               	goto	u4510
  7469  1FC5                     u4511:
  7470  1FC5  2FE0               	goto	l3303
  7471  1FC6                     u4510:
  7472  1FC6                     l3295:
  7473  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  7474  1FC7  3A80               	xorlw	128
  7475  1FC8  3E97               	addlw	151
  7476  1FC9  1803               	skipnc
  7477  1FCA  2FCC               	goto	u4521
  7478  1FCB  2FCD               	goto	u4520
  7479  1FCC                     u4521:
  7480  1FCC  2FCE               	goto	l3301
  7481  1FCD                     u4520:
  7482  1FCD  2F56               	goto	l3265
  7483  1FCE                     l3301:
  7484  1FCE  3001               	movlw	1
  7485  1FCF                     u4535:
  7486  1FCF  1003               	clrc
  7487  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7488  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7489  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7490  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  7491  1FD4  3EFF               	addlw	-1
  7492  1FD5  1D03               	skipz
  7493  1FD6  2FCF               	goto	u4535
  7494  1FD7  3001               	movlw	1
  7495  1FD8  00F8               	movwf	??__tdiv_to_l_
  7496  1FD9  0878               	movf	??__tdiv_to_l_,w
  7497  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  7498  1FDB  1D03               	btfss	3,2
  7499  1FDC  2FDE               	goto	u4541
  7500  1FDD  2FDF               	goto	u4540
  7501  1FDE                     u4541:
  7502  1FDE  2FCE               	goto	l3301
  7503  1FDF                     u4540:
  7504  1FDF  2FF7               	goto	l3311
  7505  1FE0                     l3303:
  7506  1FE0  3018               	movlw	24
  7507  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  7508  1FE2  1C03               	skipc
  7509  1FE3  2FE5               	goto	u4551
  7510  1FE4  2FE6               	goto	u4550
  7511  1FE5                     u4551:
  7512  1FE5  2FF2               	goto	l702
  7513  1FE6                     u4550:
  7514  1FE6  2F56               	goto	l3265
  7515  1FE7                     l3309:
  7516  1FE7  3001               	movlw	1
  7517  1FE8  00F8               	movwf	??__tdiv_to_l_
  7518  1FE9                     u4565:
  7519  1FE9  1003               	clrc
  7520  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  7521  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7522  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7523  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7524  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  7525  1FEF  2FE9               	goto	u4565
  7526  1FF0  3001               	movlw	1
  7527  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  7528  1FF2                     l702:
  7529  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  7530  1FF3  1D03               	btfss	3,2
  7531  1FF4  2FF6               	goto	u4571
  7532  1FF5  2FF7               	goto	u4570
  7533  1FF6                     u4571:
  7534  1FF6  2FE7               	goto	l3309
  7535  1FF7                     u4570:
  7536  1FF7                     l3311:
  7537  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  7538  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  7539  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  7540  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  7541  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  7542  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  7543  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  7544  1FFE  00F0               	movwf	?__tdiv_to_l_
  7545  1FFF                     l691:
  7546  1FFF  0008               	return
  7547  2000                     __end_of__tdiv_to_l_:
  7548                           
  7549                           	psect	text12
  7550  109A                     __ptext12:	
  7551 ;; *************** function __div_to_l_ *****************
  7552 ;; Defined at:
  7553 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  f1              4    0[COMMON] unsigned long 
  7556 ;;  f2              4    4[COMMON] unsigned long 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  quot            4    0[BANK0 ] unsigned long 
  7559 ;;  exp1            1    5[BANK0 ] unsigned char 
  7560 ;;  cntr            1    4[BANK0 ] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  4    0[COMMON] unsigned long 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7570 ;;      Params:         8       0       0       0       0
  7571 ;;      Locals:         0       6       0       0       0
  7572 ;;      Temps:          1       0       0       0       0
  7573 ;;      Totals:         9       6       0       0       0
  7574 ;;Total ram usage:       15 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_sprintf
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           
  7584                           ;psect for function __div_to_l_
  7585  109A                     __div_to_l_:
  7586  109A                     l3315:	
  7587                           ;incstack = 0
  7588                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7589                           
  7590  109A  1003               	clrc
  7591  109B  0D72               	rlf	__div_to_l_@f1+2,w
  7592  109C  0D73               	rlf	__div_to_l_@f1+3,w
  7593  109D  00F8               	movwf	??__div_to_l_
  7594  109E  0878               	movf	??__div_to_l_,w
  7595  109F  1283               	bcf	3,5	;RP0=0, select bank0
  7596  10A0  1303               	bcf	3,6	;RP1=0, select bank0
  7597  10A1  00A5               	movwf	__div_to_l_@exp1
  7598  10A2  0825               	movf	__div_to_l_@exp1,w
  7599  10A3  1D03               	btfss	3,2
  7600  10A4  28A6               	goto	u4581
  7601  10A5  28A7               	goto	u4580
  7602  10A6                     u4581:
  7603  10A6  28B0               	goto	l3321
  7604  10A7                     u4580:
  7605  10A7                     l3317:
  7606  10A7  3000               	movlw	0
  7607  10A8  00F3               	movwf	?__div_to_l_+3
  7608  10A9  3000               	movlw	0
  7609  10AA  00F2               	movwf	?__div_to_l_+2
  7610  10AB  3000               	movlw	0
  7611  10AC  00F1               	movwf	?__div_to_l_+1
  7612  10AD  3000               	movlw	0
  7613  10AE  00F0               	movwf	?__div_to_l_
  7614  10AF  2957               	goto	l644
  7615  10B0                     l3321:
  7616  10B0  1003               	clrc
  7617  10B1  0D76               	rlf	__div_to_l_@f2+2,w
  7618  10B2  0D77               	rlf	__div_to_l_@f2+3,w
  7619  10B3  00F8               	movwf	??__div_to_l_
  7620  10B4  0878               	movf	??__div_to_l_,w
  7621  10B5  00A4               	movwf	__div_to_l_@cntr
  7622  10B6  0824               	movf	__div_to_l_@cntr,w
  7623  10B7  1D03               	btfss	3,2
  7624  10B8  28BA               	goto	u4591
  7625  10B9  28BB               	goto	u4590
  7626  10BA                     u4591:
  7627  10BA  28BC               	goto	l645
  7628  10BB                     u4590:
  7629  10BB  28A7               	goto	l3317
  7630  10BC                     l645:
  7631  10BC  17F2               	bsf	__div_to_l_@f1+2,7
  7632  10BD                     l3327:
  7633  10BD  30FF               	movlw	255
  7634  10BE  05F0               	andwf	__div_to_l_@f1,f
  7635  10BF  30FF               	movlw	255
  7636  10C0  05F1               	andwf	__div_to_l_@f1+1,f
  7637  10C1  30FF               	movlw	255
  7638  10C2  05F2               	andwf	__div_to_l_@f1+2,f
  7639  10C3  3000               	movlw	0
  7640  10C4  05F3               	andwf	__div_to_l_@f1+3,f
  7641  10C5                     l3329:
  7642  10C5  17F6               	bsf	__div_to_l_@f2+2,7
  7643  10C6  30FF               	movlw	255
  7644  10C7  05F4               	andwf	__div_to_l_@f2,f
  7645  10C8  30FF               	movlw	255
  7646  10C9  05F5               	andwf	__div_to_l_@f2+1,f
  7647  10CA  30FF               	movlw	255
  7648  10CB  05F6               	andwf	__div_to_l_@f2+2,f
  7649  10CC  3000               	movlw	0
  7650  10CD  05F7               	andwf	__div_to_l_@f2+3,f
  7651  10CE  3000               	movlw	0
  7652  10CF  00A3               	movwf	__div_to_l_@quot+3
  7653  10D0  3000               	movlw	0
  7654  10D1  00A2               	movwf	__div_to_l_@quot+2
  7655  10D2  3000               	movlw	0
  7656  10D3  00A1               	movwf	__div_to_l_@quot+1
  7657  10D4  3000               	movlw	0
  7658  10D5  00A0               	movwf	__div_to_l_@quot
  7659  10D6                     l3331:
  7660  10D6  307F               	movlw	127
  7661  10D7  02A5               	subwf	__div_to_l_@exp1,f
  7662  10D8                     l3333:
  7663  10D8  30A0               	movlw	160
  7664  10D9  0724               	addwf	__div_to_l_@cntr,w
  7665  10DA  00F8               	movwf	??__div_to_l_
  7666  10DB  0878               	movf	??__div_to_l_,w
  7667  10DC  02A5               	subwf	__div_to_l_@exp1,f
  7668  10DD  3020               	movlw	32
  7669  10DE  00F8               	movwf	??__div_to_l_
  7670  10DF  0878               	movf	??__div_to_l_,w
  7671  10E0  00A4               	movwf	__div_to_l_@cntr
  7672  10E1                     l3335:
  7673  10E1  3001               	movlw	1
  7674  10E2  00F8               	movwf	??__div_to_l_
  7675  10E3                     u4605:
  7676  10E3  1003               	clrc
  7677  10E4  0DA0               	rlf	__div_to_l_@quot,f
  7678  10E5  0DA1               	rlf	__div_to_l_@quot+1,f
  7679  10E6  0DA2               	rlf	__div_to_l_@quot+2,f
  7680  10E7  0DA3               	rlf	__div_to_l_@quot+3,f
  7681  10E8  0BF8               	decfsz	??__div_to_l_,f
  7682  10E9  28E3               	goto	u4605
  7683  10EA                     l3337:
  7684  10EA  0877               	movf	__div_to_l_@f2+3,w
  7685  10EB  0273               	subwf	__div_to_l_@f1+3,w
  7686  10EC  1D03               	skipz
  7687  10ED  28F8               	goto	u4615
  7688  10EE  0876               	movf	__div_to_l_@f2+2,w
  7689  10EF  0272               	subwf	__div_to_l_@f1+2,w
  7690  10F0  1D03               	skipz
  7691  10F1  28F8               	goto	u4615
  7692  10F2  0875               	movf	__div_to_l_@f2+1,w
  7693  10F3  0271               	subwf	__div_to_l_@f1+1,w
  7694  10F4  1D03               	skipz
  7695  10F5  28F8               	goto	u4615
  7696  10F6  0874               	movf	__div_to_l_@f2,w
  7697  10F7  0270               	subwf	__div_to_l_@f1,w
  7698  10F8                     u4615:
  7699  10F8  1C03               	skipc
  7700  10F9  28FB               	goto	u4611
  7701  10FA  28FC               	goto	u4610
  7702  10FB                     u4611:
  7703  10FB  290B               	goto	l3343
  7704  10FC                     u4610:
  7705  10FC                     l3339:
  7706  10FC  0874               	movf	__div_to_l_@f2,w
  7707  10FD  02F0               	subwf	__div_to_l_@f1,f
  7708  10FE  0875               	movf	__div_to_l_@f2+1,w
  7709  10FF  1C03               	skipc
  7710  1100  0F75               	incfsz	__div_to_l_@f2+1,w
  7711  1101  02F1               	subwf	__div_to_l_@f1+1,f
  7712  1102  0876               	movf	__div_to_l_@f2+2,w
  7713  1103  1C03               	skipc
  7714  1104  0F76               	incfsz	__div_to_l_@f2+2,w
  7715  1105  02F2               	subwf	__div_to_l_@f1+2,f
  7716  1106  0877               	movf	__div_to_l_@f2+3,w
  7717  1107  1C03               	skipc
  7718  1108  0F77               	incfsz	__div_to_l_@f2+3,w
  7719  1109  02F3               	subwf	__div_to_l_@f1+3,f
  7720  110A                     l3341:
  7721  110A  1420               	bsf	__div_to_l_@quot,0
  7722  110B                     l3343:
  7723  110B  3001               	movlw	1
  7724  110C  00F8               	movwf	??__div_to_l_
  7725  110D                     u4625:
  7726  110D  1003               	clrc
  7727  110E  0DF0               	rlf	__div_to_l_@f1,f
  7728  110F  0DF1               	rlf	__div_to_l_@f1+1,f
  7729  1110  0DF2               	rlf	__div_to_l_@f1+2,f
  7730  1111  0DF3               	rlf	__div_to_l_@f1+3,f
  7731  1112  0BF8               	decfsz	??__div_to_l_,f
  7732  1113  290D               	goto	u4625
  7733  1114                     l3345:
  7734  1114  3001               	movlw	1
  7735  1115  02A4               	subwf	__div_to_l_@cntr,f
  7736  1116  1D03               	btfss	3,2
  7737  1117  2919               	goto	u4631
  7738  1118  291A               	goto	u4630
  7739  1119                     u4631:
  7740  1119  28E1               	goto	l3335
  7741  111A                     u4630:
  7742  111A                     l648:
  7743  111A  1FA5               	btfss	__div_to_l_@exp1,7
  7744  111B  291D               	goto	u4641
  7745  111C  291E               	goto	u4640
  7746  111D                     u4641:
  7747  111D  2938               	goto	l3355
  7748  111E                     u4640:
  7749  111E                     l3347:
  7750  111E  0825               	movf	__div_to_l_@exp1,w
  7751  111F  3A80               	xorlw	128
  7752  1120  3E9F               	addlw	159
  7753  1121  1803               	skipnc
  7754  1122  2924               	goto	u4651
  7755  1123  2925               	goto	u4650
  7756  1124                     u4651:
  7757  1124  2926               	goto	l3353
  7758  1125                     u4650:
  7759  1125  28A7               	goto	l3317
  7760  1126                     l3353:
  7761  1126  3001               	movlw	1
  7762  1127                     u4665:
  7763  1127  1003               	clrc
  7764  1128  0CA3               	rrf	__div_to_l_@quot+3,f
  7765  1129  0CA2               	rrf	__div_to_l_@quot+2,f
  7766  112A  0CA1               	rrf	__div_to_l_@quot+1,f
  7767  112B  0CA0               	rrf	__div_to_l_@quot,f
  7768  112C  3EFF               	addlw	-1
  7769  112D  1D03               	skipz
  7770  112E  2927               	goto	u4665
  7771  112F  3001               	movlw	1
  7772  1130  00F8               	movwf	??__div_to_l_
  7773  1131  0878               	movf	??__div_to_l_,w
  7774  1132  07A5               	addwf	__div_to_l_@exp1,f
  7775  1133  1D03               	btfss	3,2
  7776  1134  2936               	goto	u4671
  7777  1135  2937               	goto	u4670
  7778  1136                     u4671:
  7779  1136  2926               	goto	l3353
  7780  1137                     u4670:
  7781  1137  294F               	goto	l3363
  7782  1138                     l3355:
  7783  1138  3020               	movlw	32
  7784  1139  0225               	subwf	__div_to_l_@exp1,w
  7785  113A  1C03               	skipc
  7786  113B  293D               	goto	u4681
  7787  113C  293E               	goto	u4680
  7788  113D                     u4681:
  7789  113D  294A               	goto	l655
  7790  113E                     u4680:
  7791  113E  28A7               	goto	l3317
  7792  113F                     l3361:
  7793  113F  3001               	movlw	1
  7794  1140  00F8               	movwf	??__div_to_l_
  7795  1141                     u4695:
  7796  1141  1003               	clrc
  7797  1142  0DA0               	rlf	__div_to_l_@quot,f
  7798  1143  0DA1               	rlf	__div_to_l_@quot+1,f
  7799  1144  0DA2               	rlf	__div_to_l_@quot+2,f
  7800  1145  0DA3               	rlf	__div_to_l_@quot+3,f
  7801  1146  0BF8               	decfsz	??__div_to_l_,f
  7802  1147  2941               	goto	u4695
  7803  1148  3001               	movlw	1
  7804  1149  02A5               	subwf	__div_to_l_@exp1,f
  7805  114A                     l655:
  7806  114A  0825               	movf	__div_to_l_@exp1,w
  7807  114B  1D03               	btfss	3,2
  7808  114C  294E               	goto	u4701
  7809  114D  294F               	goto	u4700
  7810  114E                     u4701:
  7811  114E  293F               	goto	l3361
  7812  114F                     u4700:
  7813  114F                     l3363:
  7814  114F  0823               	movf	__div_to_l_@quot+3,w
  7815  1150  00F3               	movwf	?__div_to_l_+3
  7816  1151  0822               	movf	__div_to_l_@quot+2,w
  7817  1152  00F2               	movwf	?__div_to_l_+2
  7818  1153  0821               	movf	__div_to_l_@quot+1,w
  7819  1154  00F1               	movwf	?__div_to_l_+1
  7820  1155  0820               	movf	__div_to_l_@quot,w
  7821  1156  00F0               	movwf	?__div_to_l_
  7822  1157                     l644:
  7823  1157  0008               	return
  7824  1158                     __end_of__div_to_l_:
  7825                           
  7826                           	psect	text13
  7827  1E89                     __ptext13:	
  7828 ;; *************** function ___xxtofl *****************
  7829 ;; Defined at:
  7830 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  sign            1    wreg     unsigned char 
  7833 ;;  val             4    0[COMMON] long 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  sign            1    8[COMMON] unsigned char 
  7836 ;;  arg             4   10[COMMON] unsigned long 
  7837 ;;  exp             1    9[COMMON] unsigned char 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  4    0[COMMON] unsigned char 
  7840 ;; Registers used:
  7841 ;;		wreg, status,2, status,0
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7847 ;;      Params:         4       0       0       0       0
  7848 ;;      Locals:         6       0       0       0       0
  7849 ;;      Temps:          4       0       0       0       0
  7850 ;;      Totals:        14       0       0       0       0
  7851 ;;Total ram usage:       14 bytes
  7852 ;; Hardware stack levels used: 1
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_main
  7857 ;;		_sprintf
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function ___xxtofl
  7863  1E89                     ___xxtofl:
  7864                           
  7865                           ;incstack = 0
  7866                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7867                           ;___xxtofl@sign stored from wreg
  7868  1E89  00F8               	movwf	___xxtofl@sign
  7869  1E8A                     l3507:
  7870  1E8A  0878               	movf	___xxtofl@sign,w
  7871  1E8B  1903               	btfsc	3,2
  7872  1E8C  2E8E               	goto	u5091
  7873  1E8D  2E8F               	goto	u5090
  7874  1E8E                     u5091:
  7875  1E8E  2EA3               	goto	l3513
  7876  1E8F                     u5090:
  7877  1E8F                     l3509:
  7878  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  7879  1E90  2E92               	goto	u5101
  7880  1E91  2E93               	goto	u5100
  7881  1E92                     u5101:
  7882  1E92  2EA3               	goto	l3513
  7883  1E93                     u5100:
  7884  1E93                     l3511:
  7885  1E93  0970               	comf	___xxtofl@val,w
  7886  1E94  00FA               	movwf	___xxtofl@arg
  7887  1E95  0971               	comf	___xxtofl@val+1,w
  7888  1E96  00FB               	movwf	___xxtofl@arg+1
  7889  1E97  0972               	comf	___xxtofl@val+2,w
  7890  1E98  00FC               	movwf	___xxtofl@arg+2
  7891  1E99  0973               	comf	___xxtofl@val+3,w
  7892  1E9A  00FD               	movwf	___xxtofl@arg+3
  7893  1E9B  0AFA               	incf	___xxtofl@arg,f
  7894  1E9C  1903               	skipnz
  7895  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  7896  1E9E  1903               	skipnz
  7897  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  7898  1EA0  1903               	skipnz
  7899  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  7900  1EA2  2EAB               	goto	l941
  7901  1EA3                     l3513:
  7902  1EA3  0873               	movf	___xxtofl@val+3,w
  7903  1EA4  00FD               	movwf	___xxtofl@arg+3
  7904  1EA5  0872               	movf	___xxtofl@val+2,w
  7905  1EA6  00FC               	movwf	___xxtofl@arg+2
  7906  1EA7  0871               	movf	___xxtofl@val+1,w
  7907  1EA8  00FB               	movwf	___xxtofl@arg+1
  7908  1EA9  0870               	movf	___xxtofl@val,w
  7909  1EAA  00FA               	movwf	___xxtofl@arg
  7910  1EAB                     l941:
  7911  1EAB  0873               	movf	___xxtofl@val+3,w
  7912  1EAC  0472               	iorwf	___xxtofl@val+2,w
  7913  1EAD  0471               	iorwf	___xxtofl@val+1,w
  7914  1EAE  0470               	iorwf	___xxtofl@val,w
  7915  1EAF  1D03               	skipz
  7916  1EB0  2EB2               	goto	u5111
  7917  1EB1  2EB3               	goto	u5110
  7918  1EB2                     u5111:
  7919  1EB2  2EBC               	goto	l3519
  7920  1EB3                     u5110:
  7921  1EB3                     l3515:
  7922  1EB3  3000               	movlw	0
  7923  1EB4  00F3               	movwf	?___xxtofl+3
  7924  1EB5  3000               	movlw	0
  7925  1EB6  00F2               	movwf	?___xxtofl+2
  7926  1EB7  3000               	movlw	0
  7927  1EB8  00F1               	movwf	?___xxtofl+1
  7928  1EB9  3000               	movlw	0
  7929  1EBA  00F0               	movwf	?___xxtofl
  7930  1EBB  2F42               	goto	l943
  7931  1EBC                     l3519:
  7932  1EBC  3096               	movlw	150
  7933  1EBD  00F4               	movwf	??___xxtofl
  7934  1EBE  0874               	movf	??___xxtofl,w
  7935  1EBF  00F9               	movwf	___xxtofl@exp
  7936  1EC0  2ECE               	goto	l3523
  7937  1EC1                     l3521:
  7938  1EC1  3001               	movlw	1
  7939  1EC2  00F4               	movwf	??___xxtofl
  7940  1EC3  0874               	movf	??___xxtofl,w
  7941  1EC4  07F9               	addwf	___xxtofl@exp,f
  7942  1EC5  3001               	movlw	1
  7943  1EC6                     u5125:
  7944  1EC6  1003               	clrc
  7945  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  7946  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  7947  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  7948  1ECA  0CFA               	rrf	___xxtofl@arg,f
  7949  1ECB  3EFF               	addlw	-1
  7950  1ECC  1D03               	skipz
  7951  1ECD  2EC6               	goto	u5125
  7952  1ECE                     l3523:
  7953  1ECE  30FE               	movlw	254
  7954  1ECF  057D               	andwf	___xxtofl@arg+3,w
  7955  1ED0  1D03               	btfss	3,2
  7956  1ED1  2ED3               	goto	u5131
  7957  1ED2  2ED4               	goto	u5130
  7958  1ED3                     u5131:
  7959  1ED3  2EC1               	goto	l3521
  7960  1ED4                     u5130:
  7961  1ED4  2EF0               	goto	l947
  7962  1ED5                     l3525:
  7963  1ED5  3001               	movlw	1
  7964  1ED6  00F4               	movwf	??___xxtofl
  7965  1ED7  0874               	movf	??___xxtofl,w
  7966  1ED8  07F9               	addwf	___xxtofl@exp,f
  7967  1ED9                     l3527:
  7968  1ED9  3001               	movlw	1
  7969  1EDA  07FA               	addwf	___xxtofl@arg,f
  7970  1EDB  3000               	movlw	0
  7971  1EDC  1803               	skipnc
  7972  1EDD  3001               	movlw	1
  7973  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  7974  1EDF  3000               	movlw	0
  7975  1EE0  1803               	skipnc
  7976  1EE1  3001               	movlw	1
  7977  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  7978  1EE3  3000               	movlw	0
  7979  1EE4  1803               	skipnc
  7980  1EE5  3001               	movlw	1
  7981  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  7982  1EE7                     l3529:
  7983  1EE7  3001               	movlw	1
  7984  1EE8                     u5145:
  7985  1EE8  1003               	clrc
  7986  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  7987  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  7988  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  7989  1EEC  0CFA               	rrf	___xxtofl@arg,f
  7990  1EED  3EFF               	addlw	-1
  7991  1EEE  1D03               	skipz
  7992  1EEF  2EE8               	goto	u5145
  7993  1EF0                     l947:
  7994  1EF0  30FF               	movlw	255
  7995  1EF1  057D               	andwf	___xxtofl@arg+3,w
  7996  1EF2  1D03               	btfss	3,2
  7997  1EF3  2EF5               	goto	u5151
  7998  1EF4  2EF6               	goto	u5150
  7999  1EF5                     u5151:
  8000  1EF5  2ED5               	goto	l3525
  8001  1EF6                     u5150:
  8002  1EF6  2F02               	goto	l3533
  8003  1EF7                     l3531:
  8004  1EF7  3001               	movlw	1
  8005  1EF8  02F9               	subwf	___xxtofl@exp,f
  8006  1EF9  3001               	movlw	1
  8007  1EFA  00F4               	movwf	??___xxtofl
  8008  1EFB                     u5165:
  8009  1EFB  1003               	clrc
  8010  1EFC  0DFA               	rlf	___xxtofl@arg,f
  8011  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
  8012  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
  8013  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
  8014  1F00  0BF4               	decfsz	??___xxtofl,f
  8015  1F01  2EFB               	goto	u5165
  8016  1F02                     l3533:
  8017  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
  8018  1F03  2F05               	goto	u5171
  8019  1F04  2F06               	goto	u5170
  8020  1F05                     u5171:
  8021  1F05  2F0C               	goto	l954
  8022  1F06                     u5170:
  8023  1F06                     l3535:
  8024  1F06  3002               	movlw	2
  8025  1F07  0279               	subwf	___xxtofl@exp,w
  8026  1F08  1803               	skipnc
  8027  1F09  2F0B               	goto	u5181
  8028  1F0A  2F0C               	goto	u5180
  8029  1F0B                     u5181:
  8030  1F0B  2EF7               	goto	l3531
  8031  1F0C                     u5180:
  8032  1F0C                     l954:
  8033  1F0C  1879               	btfsc	___xxtofl@exp,0
  8034  1F0D  2F0F               	goto	u5191
  8035  1F0E  2F10               	goto	u5190
  8036  1F0F                     u5191:
  8037  1F0F  2F18               	goto	l955
  8038  1F10                     u5190:
  8039  1F10                     l3537:
  8040  1F10  30FF               	movlw	255
  8041  1F11  05FA               	andwf	___xxtofl@arg,f
  8042  1F12  30FF               	movlw	255
  8043  1F13  05FB               	andwf	___xxtofl@arg+1,f
  8044  1F14  307F               	movlw	127
  8045  1F15  05FC               	andwf	___xxtofl@arg+2,f
  8046  1F16  30FF               	movlw	255
  8047  1F17  05FD               	andwf	___xxtofl@arg+3,f
  8048  1F18                     l955:
  8049  1F18  1003               	clrc
  8050  1F19  0CF9               	rrf	___xxtofl@exp,f
  8051  1F1A                     l3539:
  8052  1F1A  0879               	movf	___xxtofl@exp,w
  8053  1F1B  00F4               	movwf	??___xxtofl
  8054  1F1C  01F5               	clrf	??___xxtofl+1
  8055  1F1D  01F6               	clrf	??___xxtofl+2
  8056  1F1E  01F7               	clrf	??___xxtofl+3
  8057  1F1F  3018               	movlw	24
  8058  1F20                     u5205:
  8059  1F20  1003               	clrc
  8060  1F21  0DF4               	rlf	??___xxtofl,f
  8061  1F22  0DF5               	rlf	??___xxtofl+1,f
  8062  1F23  0DF6               	rlf	??___xxtofl+2,f
  8063  1F24  0DF7               	rlf	??___xxtofl+3,f
  8064  1F25                     u5200:
  8065  1F25  3EFF               	addlw	-1
  8066  1F26  1D03               	skipz
  8067  1F27  2F20               	goto	u5205
  8068  1F28  0874               	movf	??___xxtofl,w
  8069  1F29  04FA               	iorwf	___xxtofl@arg,f
  8070  1F2A  0875               	movf	??___xxtofl+1,w
  8071  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
  8072  1F2C  0876               	movf	??___xxtofl+2,w
  8073  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
  8074  1F2E  0877               	movf	??___xxtofl+3,w
  8075  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
  8076  1F30                     l3541:
  8077  1F30  0878               	movf	___xxtofl@sign,w
  8078  1F31  1903               	btfsc	3,2
  8079  1F32  2F34               	goto	u5211
  8080  1F33  2F35               	goto	u5210
  8081  1F34                     u5211:
  8082  1F34  2F3A               	goto	l3547
  8083  1F35                     u5210:
  8084  1F35                     l3543:
  8085  1F35  1FF3               	btfss	___xxtofl@val+3,7
  8086  1F36  2F38               	goto	u5221
  8087  1F37  2F39               	goto	u5220
  8088  1F38                     u5221:
  8089  1F38  2F3A               	goto	l3547
  8090  1F39                     u5220:
  8091  1F39                     l3545:
  8092  1F39  17FD               	bsf	___xxtofl@arg+3,7
  8093  1F3A                     l3547:
  8094  1F3A  087D               	movf	___xxtofl@arg+3,w
  8095  1F3B  00F3               	movwf	?___xxtofl+3
  8096  1F3C  087C               	movf	___xxtofl@arg+2,w
  8097  1F3D  00F2               	movwf	?___xxtofl+2
  8098  1F3E  087B               	movf	___xxtofl@arg+1,w
  8099  1F3F  00F1               	movwf	?___xxtofl+1
  8100  1F40  087A               	movf	___xxtofl@arg,w
  8101  1F41  00F0               	movwf	?___xxtofl
  8102  1F42                     l943:
  8103  1F42  0008               	return
  8104  1F43                     __end_of___xxtofl:
  8105                           
  8106                           	psect	text14
  8107  1A4C                     __ptext14:	
  8108 ;; *************** function ___wmul *****************
  8109 ;; Defined at:
  8110 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  multiplier      2    0[COMMON] unsigned int 
  8113 ;;  multiplicand    2    2[COMMON] unsigned int 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;  product         2    4[COMMON] unsigned int 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  2    0[COMMON] unsigned int 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8125 ;;      Params:         4       0       0       0       0
  8126 ;;      Locals:         2       0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0
  8128 ;;      Totals:         6       0       0       0       0
  8129 ;;Total ram usage:        6 bytes
  8130 ;; Hardware stack levels used: 1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_sprintf
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function ___wmul
  8140  1A4C                     ___wmul:
  8141  1A4C                     l3367:	
  8142                           ;incstack = 0
  8143                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8144                           
  8145  1A4C  01F4               	clrf	___wmul@product
  8146  1A4D  01F5               	clrf	___wmul@product+1
  8147  1A4E                     l3369:
  8148  1A4E  1C70               	btfss	___wmul@multiplier,0
  8149  1A4F  2A51               	goto	u4711
  8150  1A50  2A52               	goto	u4710
  8151  1A51                     u4711:
  8152  1A51  2A58               	goto	l474
  8153  1A52                     u4710:
  8154  1A52                     l3371:
  8155  1A52  0872               	movf	___wmul@multiplicand,w
  8156  1A53  07F4               	addwf	___wmul@product,f
  8157  1A54  1803               	skipnc
  8158  1A55  0AF5               	incf	___wmul@product+1,f
  8159  1A56  0873               	movf	___wmul@multiplicand+1,w
  8160  1A57  07F5               	addwf	___wmul@product+1,f
  8161  1A58                     l474:
  8162  1A58  3001               	movlw	1
  8163  1A59                     u4725:
  8164  1A59  1003               	clrc
  8165  1A5A  0DF2               	rlf	___wmul@multiplicand,f
  8166  1A5B  0DF3               	rlf	___wmul@multiplicand+1,f
  8167  1A5C  3EFF               	addlw	-1
  8168  1A5D  1D03               	skipz
  8169  1A5E  2A59               	goto	u4725
  8170  1A5F                     l3373:
  8171  1A5F  3001               	movlw	1
  8172  1A60                     u4735:
  8173  1A60  1003               	clrc
  8174  1A61  0CF1               	rrf	___wmul@multiplier+1,f
  8175  1A62  0CF0               	rrf	___wmul@multiplier,f
  8176  1A63  3EFF               	addlw	-1
  8177  1A64  1D03               	skipz
  8178  1A65  2A60               	goto	u4735
  8179  1A66                     l3375:
  8180  1A66  0870               	movf	___wmul@multiplier,w
  8181  1A67  0471               	iorwf	___wmul@multiplier+1,w
  8182  1A68  1D03               	btfss	3,2
  8183  1A69  2A6B               	goto	u4741
  8184  1A6A  2A6C               	goto	u4740
  8185  1A6B                     u4741:
  8186  1A6B  2A4E               	goto	l3369
  8187  1A6C                     u4740:
  8188  1A6C                     l3377:
  8189  1A6C  0875               	movf	___wmul@product+1,w
  8190  1A6D  00F1               	movwf	?___wmul+1
  8191  1A6E  0874               	movf	___wmul@product,w
  8192  1A6F  00F0               	movwf	?___wmul
  8193  1A70                     l476:
  8194  1A70  0008               	return
  8195  1A71                     __end_of___wmul:
  8196                           
  8197                           	psect	text15
  8198  1C69                     __ptext15:	
  8199 ;; *************** function ___llmod *****************
  8200 ;; Defined at:
  8201 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  divisor         4    0[BANK0 ] unsigned long 
  8204 ;;  dividend        4    4[BANK0 ] unsigned long 
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  counter         1    9[BANK0 ] unsigned char 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  4    0[BANK0 ] unsigned long 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8216 ;;      Params:         0       8       0       0       0
  8217 ;;      Locals:         0       1       0       0       0
  8218 ;;      Temps:          0       1       0       0       0
  8219 ;;      Totals:         0      10       0       0       0
  8220 ;;Total ram usage:       10 bytes
  8221 ;; Hardware stack levels used: 1
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_sprintf
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function ___llmod
  8231  1C69                     ___llmod:
  8232  1C69                     l3481:	
  8233                           ;incstack = 0
  8234                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8235                           
  8236  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  8237  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  8238  1C6B  0823               	movf	___llmod@divisor+3,w
  8239  1C6C  0422               	iorwf	___llmod@divisor+2,w
  8240  1C6D  0421               	iorwf	___llmod@divisor+1,w
  8241  1C6E  0420               	iorwf	___llmod@divisor,w
  8242  1C6F  1903               	skipnz
  8243  1C70  2C72               	goto	u5031
  8244  1C71  2C73               	goto	u5030
  8245  1C72                     u5031:
  8246  1C72  2CB6               	goto	l3497
  8247  1C73                     u5030:
  8248  1C73                     l3483:
  8249  1C73  01A9               	clrf	___llmod@counter
  8250  1C74  0AA9               	incf	___llmod@counter,f
  8251  1C75  2C83               	goto	l3487
  8252  1C76                     l3485:
  8253  1C76  3001               	movlw	1
  8254  1C77  00A8               	movwf	??___llmod
  8255  1C78                     u5045:
  8256  1C78  1003               	clrc
  8257  1C79  0DA0               	rlf	___llmod@divisor,f
  8258  1C7A  0DA1               	rlf	___llmod@divisor+1,f
  8259  1C7B  0DA2               	rlf	___llmod@divisor+2,f
  8260  1C7C  0DA3               	rlf	___llmod@divisor+3,f
  8261  1C7D  0BA8               	decfsz	??___llmod,f
  8262  1C7E  2C78               	goto	u5045
  8263  1C7F  3001               	movlw	1
  8264  1C80  00A8               	movwf	??___llmod
  8265  1C81  0828               	movf	??___llmod,w
  8266  1C82  07A9               	addwf	___llmod@counter,f
  8267  1C83                     l3487:
  8268  1C83  1FA3               	btfss	___llmod@divisor+3,7
  8269  1C84  2C86               	goto	u5051
  8270  1C85  2C87               	goto	u5050
  8271  1C86                     u5051:
  8272  1C86  2C76               	goto	l3485
  8273  1C87                     u5050:
  8274  1C87                     l3489:
  8275  1C87  0823               	movf	___llmod@divisor+3,w
  8276  1C88  0227               	subwf	___llmod@dividend+3,w
  8277  1C89  1D03               	skipz
  8278  1C8A  2C95               	goto	u5065
  8279  1C8B  0822               	movf	___llmod@divisor+2,w
  8280  1C8C  0226               	subwf	___llmod@dividend+2,w
  8281  1C8D  1D03               	skipz
  8282  1C8E  2C95               	goto	u5065
  8283  1C8F  0821               	movf	___llmod@divisor+1,w
  8284  1C90  0225               	subwf	___llmod@dividend+1,w
  8285  1C91  1D03               	skipz
  8286  1C92  2C95               	goto	u5065
  8287  1C93  0820               	movf	___llmod@divisor,w
  8288  1C94  0224               	subwf	___llmod@dividend,w
  8289  1C95                     u5065:
  8290  1C95  1C03               	skipc
  8291  1C96  2C98               	goto	u5061
  8292  1C97  2C99               	goto	u5060
  8293  1C98                     u5061:
  8294  1C98  2CA7               	goto	l3493
  8295  1C99                     u5060:
  8296  1C99                     l3491:
  8297  1C99  0820               	movf	___llmod@divisor,w
  8298  1C9A  02A4               	subwf	___llmod@dividend,f
  8299  1C9B  0821               	movf	___llmod@divisor+1,w
  8300  1C9C  1C03               	skipc
  8301  1C9D  0F21               	incfsz	___llmod@divisor+1,w
  8302  1C9E  02A5               	subwf	___llmod@dividend+1,f
  8303  1C9F  0822               	movf	___llmod@divisor+2,w
  8304  1CA0  1C03               	skipc
  8305  1CA1  0F22               	incfsz	___llmod@divisor+2,w
  8306  1CA2  02A6               	subwf	___llmod@dividend+2,f
  8307  1CA3  0823               	movf	___llmod@divisor+3,w
  8308  1CA4  1C03               	skipc
  8309  1CA5  0F23               	incfsz	___llmod@divisor+3,w
  8310  1CA6  02A7               	subwf	___llmod@dividend+3,f
  8311  1CA7                     l3493:
  8312  1CA7  3001               	movlw	1
  8313  1CA8                     u5075:
  8314  1CA8  1003               	clrc
  8315  1CA9  0CA3               	rrf	___llmod@divisor+3,f
  8316  1CAA  0CA2               	rrf	___llmod@divisor+2,f
  8317  1CAB  0CA1               	rrf	___llmod@divisor+1,f
  8318  1CAC  0CA0               	rrf	___llmod@divisor,f
  8319  1CAD  3EFF               	addlw	-1
  8320  1CAE  1D03               	skipz
  8321  1CAF  2CA8               	goto	u5075
  8322  1CB0                     l3495:
  8323  1CB0  3001               	movlw	1
  8324  1CB1  02A9               	subwf	___llmod@counter,f
  8325  1CB2  1D03               	btfss	3,2
  8326  1CB3  2CB5               	goto	u5081
  8327  1CB4  2CB6               	goto	u5080
  8328  1CB5                     u5081:
  8329  1CB5  2C87               	goto	l3489
  8330  1CB6                     u5080:
  8331  1CB6                     l3497:
  8332  1CB6  0827               	movf	___llmod@dividend+3,w
  8333  1CB7  00A3               	movwf	?___llmod+3
  8334  1CB8  0826               	movf	___llmod@dividend+2,w
  8335  1CB9  00A2               	movwf	?___llmod+2
  8336  1CBA  0825               	movf	___llmod@dividend+1,w
  8337  1CBB  00A1               	movwf	?___llmod+1
  8338  1CBC  0824               	movf	___llmod@dividend,w
  8339  1CBD  00A0               	movwf	?___llmod
  8340  1CBE                     l730:
  8341  1CBE  0008               	return
  8342  1CBF                     __end_of___llmod:
  8343                           
  8344                           	psect	text16
  8345  08C4                     __ptext16:	
  8346 ;; *************** function ___fltol *****************
  8347 ;; Defined at:
  8348 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  f1              4   49[BANK0 ] unsigned long 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  exp1            1   59[BANK0 ] unsigned char 
  8353 ;;  sign1           1   58[BANK0 ] unsigned char 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  4   49[BANK0 ] long 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8363 ;;      Params:         0       4       0       0       0
  8364 ;;      Locals:         0       2       0       0       0
  8365 ;;      Temps:          0       5       0       0       0
  8366 ;;      Totals:         0      11       0       0       0
  8367 ;;Total ram usage:       11 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_sprintf
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           
  8377                           ;psect for function ___fltol
  8378  08C4                     ___fltol:
  8379  08C4                     l3445:	
  8380                           ;incstack = 0
  8381                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8382                           
  8383  08C4  1003               	clrc
  8384  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  8385  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  8386  08C7  0D53               	rlf	___fltol@f1+2,w
  8387  08C8  0D54               	rlf	___fltol@f1+3,w
  8388  08C9  00D5               	movwf	??___fltol
  8389  08CA  0855               	movf	??___fltol,w
  8390  08CB  00DB               	movwf	___fltol@exp1
  8391  08CC  085B               	movf	___fltol@exp1,w
  8392  08CD  1D03               	btfss	3,2
  8393  08CE  28D0               	goto	u4931
  8394  08CF  28D1               	goto	u4930
  8395  08D0                     u4931:
  8396  08D0  28DA               	goto	l3451
  8397  08D1                     u4930:
  8398  08D1                     l3447:
  8399  08D1  3000               	movlw	0
  8400  08D2  00D4               	movwf	?___fltol+3
  8401  08D3  3000               	movlw	0
  8402  08D4  00D3               	movwf	?___fltol+2
  8403  08D5  3000               	movlw	0
  8404  08D6  00D2               	movwf	?___fltol+1
  8405  08D7  3000               	movlw	0
  8406  08D8  00D1               	movwf	?___fltol
  8407  08D9  293F               	goto	l677
  8408  08DA                     l3451:
  8409  08DA  0851               	movf	___fltol@f1,w
  8410  08DB  00D5               	movwf	??___fltol
  8411  08DC  0852               	movf	___fltol@f1+1,w
  8412  08DD  00D6               	movwf	??___fltol+1
  8413  08DE  0853               	movf	___fltol@f1+2,w
  8414  08DF  00D7               	movwf	??___fltol+2
  8415  08E0  0854               	movf	___fltol@f1+3,w
  8416  08E1  00D8               	movwf	??___fltol+3
  8417  08E2  301F               	movlw	31
  8418  08E3                     u4945:
  8419  08E3  1003               	clrc
  8420  08E4  0CD8               	rrf	??___fltol+3,f
  8421  08E5  0CD7               	rrf	??___fltol+2,f
  8422  08E6  0CD6               	rrf	??___fltol+1,f
  8423  08E7  0CD5               	rrf	??___fltol,f
  8424  08E8                     u4940:
  8425  08E8  3EFF               	addlw	-1
  8426  08E9  1D03               	skipz
  8427  08EA  28E3               	goto	u4945
  8428  08EB  0855               	movf	??___fltol,w
  8429  08EC  00D9               	movwf	??___fltol+4
  8430  08ED  0859               	movf	??___fltol+4,w
  8431  08EE  00DA               	movwf	___fltol@sign1
  8432  08EF                     l3453:
  8433  08EF  17D3               	bsf	___fltol@f1+2,7
  8434  08F0                     l3455:
  8435  08F0  30FF               	movlw	255
  8436  08F1  05D1               	andwf	___fltol@f1,f
  8437  08F2  30FF               	movlw	255
  8438  08F3  05D2               	andwf	___fltol@f1+1,f
  8439  08F4  30FF               	movlw	255
  8440  08F5  05D3               	andwf	___fltol@f1+2,f
  8441  08F6  3000               	movlw	0
  8442  08F7  05D4               	andwf	___fltol@f1+3,f
  8443  08F8                     l3457:
  8444  08F8  3096               	movlw	150
  8445  08F9  02DB               	subwf	___fltol@exp1,f
  8446  08FA                     l3459:
  8447  08FA  1FDB               	btfss	___fltol@exp1,7
  8448  08FB  28FD               	goto	u4951
  8449  08FC  28FE               	goto	u4950
  8450  08FD                     u4951:
  8451  08FD  2918               	goto	l3469
  8452  08FE                     u4950:
  8453  08FE                     l3461:
  8454  08FE  085B               	movf	___fltol@exp1,w
  8455  08FF  3A80               	xorlw	128
  8456  0900  3E97               	addlw	151
  8457  0901  1803               	skipnc
  8458  0902  2904               	goto	u4961
  8459  0903  2905               	goto	u4960
  8460  0904                     u4961:
  8461  0904  2906               	goto	l3467
  8462  0905                     u4960:
  8463  0905  28D1               	goto	l3447
  8464  0906                     l3467:
  8465  0906  3001               	movlw	1
  8466  0907                     u4975:
  8467  0907  1003               	clrc
  8468  0908  0CD4               	rrf	___fltol@f1+3,f
  8469  0909  0CD3               	rrf	___fltol@f1+2,f
  8470  090A  0CD2               	rrf	___fltol@f1+1,f
  8471  090B  0CD1               	rrf	___fltol@f1,f
  8472  090C  3EFF               	addlw	-1
  8473  090D  1D03               	skipz
  8474  090E  2907               	goto	u4975
  8475  090F  3001               	movlw	1
  8476  0910  00D5               	movwf	??___fltol
  8477  0911  0855               	movf	??___fltol,w
  8478  0912  07DB               	addwf	___fltol@exp1,f
  8479  0913  1D03               	btfss	3,2
  8480  0914  2916               	goto	u4981
  8481  0915  2917               	goto	u4980
  8482  0916                     u4981:
  8483  0916  2906               	goto	l3467
  8484  0917                     u4980:
  8485  0917  292F               	goto	l3477
  8486  0918                     l3469:
  8487  0918  3020               	movlw	32
  8488  0919  025B               	subwf	___fltol@exp1,w
  8489  091A  1C03               	skipc
  8490  091B  291D               	goto	u4991
  8491  091C  291E               	goto	u4990
  8492  091D                     u4991:
  8493  091D  292A               	goto	l684
  8494  091E                     u4990:
  8495  091E  28D1               	goto	l3447
  8496  091F                     l3475:
  8497  091F  3001               	movlw	1
  8498  0920  00D5               	movwf	??___fltol
  8499  0921                     u5005:
  8500  0921  1003               	clrc
  8501  0922  0DD1               	rlf	___fltol@f1,f
  8502  0923  0DD2               	rlf	___fltol@f1+1,f
  8503  0924  0DD3               	rlf	___fltol@f1+2,f
  8504  0925  0DD4               	rlf	___fltol@f1+3,f
  8505  0926  0BD5               	decfsz	??___fltol,f
  8506  0927  2921               	goto	u5005
  8507  0928  3001               	movlw	1
  8508  0929  02DB               	subwf	___fltol@exp1,f
  8509  092A                     l684:
  8510  092A  085B               	movf	___fltol@exp1,w
  8511  092B  1D03               	btfss	3,2
  8512  092C  292E               	goto	u5011
  8513  092D  292F               	goto	u5010
  8514  092E                     u5011:
  8515  092E  291F               	goto	l3475
  8516  092F                     u5010:
  8517  092F                     l3477:
  8518  092F  085A               	movf	___fltol@sign1,w
  8519  0930  1903               	btfsc	3,2
  8520  0931  2933               	goto	u5021
  8521  0932  2934               	goto	u5020
  8522  0933                     u5021:
  8523  0933  293F               	goto	l687
  8524  0934                     u5020:
  8525  0934                     l3479:
  8526  0934  09D1               	comf	___fltol@f1,f
  8527  0935  09D2               	comf	___fltol@f1+1,f
  8528  0936  09D3               	comf	___fltol@f1+2,f
  8529  0937  09D4               	comf	___fltol@f1+3,f
  8530  0938  0AD1               	incf	___fltol@f1,f
  8531  0939  1903               	skipnz
  8532  093A  0AD2               	incf	___fltol@f1+1,f
  8533  093B  1903               	skipnz
  8534  093C  0AD3               	incf	___fltol@f1+2,f
  8535  093D  1903               	skipnz
  8536  093E  0AD4               	incf	___fltol@f1+3,f
  8537  093F                     l687:
  8538  093F                     l677:
  8539  093F  0008               	return
  8540  0940                     __end_of___fltol:
  8541                           
  8542                           	psect	text17
  8543  1A28                     __ptext17:	
  8544 ;; *************** function ___flsub *****************
  8545 ;; Defined at:
  8546 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  a               4   70[BANK0 ] long 
  8549 ;;  b               4   74[BANK0 ] long 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  4   70[BANK0 ] long 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8561 ;;      Params:         0       8       0       0       0
  8562 ;;      Locals:         0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0
  8564 ;;      Totals:         0       8       0       0       0
  8565 ;;Total ram usage:        8 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; Hardware stack levels required when called: 1
  8568 ;; This function calls:
  8569 ;;		___fladd
  8570 ;; This function is called by:
  8571 ;;		_sprintf
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           
  8576                           ;psect for function ___flsub
  8577  1A28                     ___flsub:
  8578  1A28                     l3501:	
  8579                           ;incstack = 0
  8580                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8581                           
  8582  1A28  3080               	movlw	128
  8583  1A29  1283               	bcf	3,5	;RP0=0, select bank0
  8584  1A2A  1303               	bcf	3,6	;RP1=0, select bank0
  8585  1A2B  06E9               	xorwf	___flsub@a+3,f
  8586  1A2C                     l3503:
  8587  1A2C  086D               	movf	___flsub@b+3,w
  8588  1A2D  00D5               	movwf	___fladd@b+3
  8589  1A2E  086C               	movf	___flsub@b+2,w
  8590  1A2F  00D4               	movwf	___fladd@b+2
  8591  1A30  086B               	movf	___flsub@b+1,w
  8592  1A31  00D3               	movwf	___fladd@b+1
  8593  1A32  086A               	movf	___flsub@b,w
  8594  1A33  00D2               	movwf	___fladd@b
  8595  1A34  0869               	movf	___flsub@a+3,w
  8596  1A35  00D9               	movwf	___fladd@a+3
  8597  1A36  0868               	movf	___flsub@a+2,w
  8598  1A37  00D8               	movwf	___fladd@a+2
  8599  1A38  0867               	movf	___flsub@a+1,w
  8600  1A39  00D7               	movwf	___fladd@a+1
  8601  1A3A  0866               	movf	___flsub@a,w
  8602  1A3B  00D6               	movwf	___fladd@a
  8603  1A3C  160A  118A  2578  160A  158A  	fcall	___fladd
  8604  1A41  1283               	bcf	3,5	;RP0=0, select bank0
  8605  1A42  1303               	bcf	3,6	;RP1=0, select bank0
  8606  1A43  0855               	movf	?___fladd+3,w
  8607  1A44  00E9               	movwf	?___flsub+3
  8608  1A45  0854               	movf	?___fladd+2,w
  8609  1A46  00E8               	movwf	?___flsub+2
  8610  1A47  0853               	movf	?___fladd+1,w
  8611  1A48  00E7               	movwf	?___flsub+1
  8612  1A49  0852               	movf	?___fladd,w
  8613  1A4A  00E6               	movwf	?___flsub
  8614  1A4B                     l847:
  8615  1A4B  0008               	return
  8616  1A4C                     __end_of___flsub:
  8617                           
  8618                           	psect	text18
  8619  1578                     __ptext18:	
  8620 ;; *************** function ___fladd *****************
  8621 ;; Defined at:
  8622 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  b               4   50[BANK0 ] long 
  8625 ;;  a               4   54[BANK0 ] long 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  grs             1   69[BANK0 ] unsigned char 
  8628 ;;  bexp            1   68[BANK0 ] unsigned char 
  8629 ;;  aexp            1   67[BANK0 ] unsigned char 
  8630 ;;  signs           1   66[BANK0 ] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  4   50[BANK0 ] unsigned char 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2, status,0, btemp+1
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8640 ;;      Params:         0       8       0       0       0
  8641 ;;      Locals:         0       4       0       0       0
  8642 ;;      Temps:          0       8       0       0       0
  8643 ;;      Totals:         0      20       0       0       0
  8644 ;;Total ram usage:       20 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_sprintf
  8650 ;;		___flsub
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           
  8655                           ;psect for function ___fladd
  8656  1578                     ___fladd:
  8657  1578                     l2757:	
  8658                           ;incstack = 0
  8659                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8660                           
  8661  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8662  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8663  157A  0855               	movf	___fladd@b+3,w
  8664  157B  3980               	andlw	128
  8665  157C  00DA               	movwf	??___fladd
  8666  157D  085A               	movf	??___fladd,w
  8667  157E  00E2               	movwf	___fladd@signs
  8668  157F                     l2759:
  8669  157F  0855               	movf	___fladd@b+3,w
  8670  1580  00DA               	movwf	??___fladd
  8671  1581  075A               	addwf	??___fladd,w
  8672  1582  00DB               	movwf	??___fladd+1
  8673  1583  085B               	movf	??___fladd+1,w
  8674  1584  00E4               	movwf	___fladd@bexp
  8675  1585                     l2761:
  8676  1585  1FD4               	btfss	___fladd@b+2,7
  8677  1586  2D88               	goto	u3311
  8678  1587  2D89               	goto	u3310
  8679  1588                     u3311:
  8680  1588  2D8A               	goto	l2765
  8681  1589                     u3310:
  8682  1589                     l2763:
  8683  1589  1464               	bsf	___fladd@bexp,0
  8684  158A                     l2765:
  8685  158A  0864               	movf	___fladd@bexp,w
  8686  158B  1903               	btfsc	3,2
  8687  158C  2D8E               	goto	u3321
  8688  158D  2D8F               	goto	u3320
  8689  158E                     u3321:
  8690  158E  2D9F               	goto	l2775
  8691  158F                     u3320:
  8692  158F                     l2767:
  8693  158F  0A64               	incf	___fladd@bexp,w
  8694  1590  1D03               	btfss	3,2
  8695  1591  2D93               	goto	u3331
  8696  1592  2D94               	goto	u3330
  8697  1593                     u3331:
  8698  1593  2D9C               	goto	l2771
  8699  1594                     u3330:
  8700  1594                     l2769:
  8701  1594  3000               	movlw	0
  8702  1595  00D5               	movwf	___fladd@b+3
  8703  1596  3000               	movlw	0
  8704  1597  00D4               	movwf	___fladd@b+2
  8705  1598  3000               	movlw	0
  8706  1599  00D3               	movwf	___fladd@b+1
  8707  159A  3000               	movlw	0
  8708  159B  00D2               	movwf	___fladd@b
  8709  159C                     l2771:
  8710  159C  17D4               	bsf	___fladd@b+2,7
  8711  159D                     l2773:
  8712  159D  01D5               	clrf	___fladd@b+3
  8713  159E  2DA7               	goto	l2777
  8714  159F                     l2775:
  8715  159F  3000               	movlw	0
  8716  15A0  00D5               	movwf	___fladd@b+3
  8717  15A1  3000               	movlw	0
  8718  15A2  00D4               	movwf	___fladd@b+2
  8719  15A3  3000               	movlw	0
  8720  15A4  00D3               	movwf	___fladd@b+1
  8721  15A5  3000               	movlw	0
  8722  15A6  00D2               	movwf	___fladd@b
  8723  15A7                     l2777:
  8724  15A7  0859               	movf	___fladd@a+3,w
  8725  15A8  3980               	andlw	128
  8726  15A9  00DA               	movwf	??___fladd
  8727  15AA  085A               	movf	??___fladd,w
  8728  15AB  00E3               	movwf	___fladd@aexp
  8729  15AC                     l2779:
  8730  15AC  0863               	movf	___fladd@aexp,w
  8731  15AD  0662               	xorwf	___fladd@signs,w
  8732  15AE  1903               	skipnz
  8733  15AF  2DB1               	goto	u3341
  8734  15B0  2DB2               	goto	u3340
  8735  15B1                     u3341:
  8736  15B1  2DB3               	goto	l2783
  8737  15B2                     u3340:
  8738  15B2                     l2781:
  8739  15B2  1762               	bsf	___fladd@signs,6
  8740  15B3                     l2783:
  8741  15B3  0859               	movf	___fladd@a+3,w
  8742  15B4  00DA               	movwf	??___fladd
  8743  15B5  075A               	addwf	??___fladd,w
  8744  15B6  00DB               	movwf	??___fladd+1
  8745  15B7  085B               	movf	??___fladd+1,w
  8746  15B8  00E3               	movwf	___fladd@aexp
  8747  15B9                     l2785:
  8748  15B9  1FD8               	btfss	___fladd@a+2,7
  8749  15BA  2DBC               	goto	u3351
  8750  15BB  2DBD               	goto	u3350
  8751  15BC                     u3351:
  8752  15BC  2DBE               	goto	l2789
  8753  15BD                     u3350:
  8754  15BD                     l2787:
  8755  15BD  1463               	bsf	___fladd@aexp,0
  8756  15BE                     l2789:
  8757  15BE  0863               	movf	___fladd@aexp,w
  8758  15BF  1903               	btfsc	3,2
  8759  15C0  2DC2               	goto	u3361
  8760  15C1  2DC3               	goto	u3360
  8761  15C2                     u3361:
  8762  15C2  2DD3               	goto	l2799
  8763  15C3                     u3360:
  8764  15C3                     l2791:
  8765  15C3  0A63               	incf	___fladd@aexp,w
  8766  15C4  1D03               	btfss	3,2
  8767  15C5  2DC7               	goto	u3371
  8768  15C6  2DC8               	goto	u3370
  8769  15C7                     u3371:
  8770  15C7  2DD0               	goto	l2795
  8771  15C8                     u3370:
  8772  15C8                     l2793:
  8773  15C8  3000               	movlw	0
  8774  15C9  00D9               	movwf	___fladd@a+3
  8775  15CA  3000               	movlw	0
  8776  15CB  00D8               	movwf	___fladd@a+2
  8777  15CC  3000               	movlw	0
  8778  15CD  00D7               	movwf	___fladd@a+1
  8779  15CE  3000               	movlw	0
  8780  15CF  00D6               	movwf	___fladd@a
  8781  15D0                     l2795:
  8782  15D0  17D8               	bsf	___fladd@a+2,7
  8783  15D1                     l2797:
  8784  15D1  01D9               	clrf	___fladd@a+3
  8785  15D2  2DDB               	goto	l801
  8786  15D3                     l2799:
  8787  15D3  3000               	movlw	0
  8788  15D4  00D9               	movwf	___fladd@a+3
  8789  15D5  3000               	movlw	0
  8790  15D6  00D8               	movwf	___fladd@a+2
  8791  15D7  3000               	movlw	0
  8792  15D8  00D7               	movwf	___fladd@a+1
  8793  15D9  3000               	movlw	0
  8794  15DA  00D6               	movwf	___fladd@a
  8795  15DB                     l801:
  8796  15DB  0864               	movf	___fladd@bexp,w
  8797  15DC  0263               	subwf	___fladd@aexp,w
  8798  15DD  1803               	skipnc
  8799  15DE  2DE0               	goto	u3381
  8800  15DF  2DE1               	goto	u3380
  8801  15E0                     u3381:
  8802  15E0  2E25               	goto	l2835
  8803  15E1                     u3380:
  8804  15E1                     l2801:
  8805  15E1  1F62               	btfss	___fladd@signs,6
  8806  15E2  2DE4               	goto	u3391
  8807  15E3  2DE5               	goto	u3390
  8808  15E4                     u3391:
  8809  15E4  2DE9               	goto	l2805
  8810  15E5                     u3390:
  8811  15E5                     l2803:
  8812  15E5  3080               	movlw	128
  8813  15E6  00DA               	movwf	??___fladd
  8814  15E7  085A               	movf	??___fladd,w
  8815  15E8  06E2               	xorwf	___fladd@signs,f
  8816  15E9                     l2805:
  8817  15E9  0864               	movf	___fladd@bexp,w
  8818  15EA  00DA               	movwf	??___fladd
  8819  15EB  085A               	movf	??___fladd,w
  8820  15EC  00E5               	movwf	___fladd@grs
  8821  15ED                     l2807:
  8822  15ED  0863               	movf	___fladd@aexp,w
  8823  15EE  00DA               	movwf	??___fladd
  8824  15EF  085A               	movf	??___fladd,w
  8825  15F0  00E4               	movwf	___fladd@bexp
  8826  15F1                     l2809:
  8827  15F1  0865               	movf	___fladd@grs,w
  8828  15F2  00DA               	movwf	??___fladd
  8829  15F3  085A               	movf	??___fladd,w
  8830  15F4  00E3               	movwf	___fladd@aexp
  8831  15F5                     l2811:
  8832  15F5  0852               	movf	___fladd@b,w
  8833  15F6  00DA               	movwf	??___fladd
  8834  15F7  085A               	movf	??___fladd,w
  8835  15F8  00E5               	movwf	___fladd@grs
  8836  15F9                     l2813:
  8837  15F9  0856               	movf	___fladd@a,w
  8838  15FA  00DA               	movwf	??___fladd
  8839  15FB  085A               	movf	??___fladd,w
  8840  15FC  00D2               	movwf	___fladd@b
  8841  15FD                     l2815:
  8842  15FD  0865               	movf	___fladd@grs,w
  8843  15FE  00DA               	movwf	??___fladd
  8844  15FF  085A               	movf	??___fladd,w
  8845  1600  00D6               	movwf	___fladd@a
  8846  1601                     l2817:
  8847  1601  0853               	movf	___fladd@b+1,w
  8848  1602  00DA               	movwf	??___fladd
  8849  1603  085A               	movf	??___fladd,w
  8850  1604  00E5               	movwf	___fladd@grs
  8851  1605                     l2819:
  8852  1605  0857               	movf	___fladd@a+1,w
  8853  1606  00DA               	movwf	??___fladd
  8854  1607  085A               	movf	??___fladd,w
  8855  1608  00D3               	movwf	___fladd@b+1
  8856  1609                     l2821:
  8857  1609  0865               	movf	___fladd@grs,w
  8858  160A  00DA               	movwf	??___fladd
  8859  160B  085A               	movf	??___fladd,w
  8860  160C  00D7               	movwf	___fladd@a+1
  8861  160D                     l2823:
  8862  160D  0854               	movf	___fladd@b+2,w
  8863  160E  00DA               	movwf	??___fladd
  8864  160F  085A               	movf	??___fladd,w
  8865  1610  00E5               	movwf	___fladd@grs
  8866  1611                     l2825:
  8867  1611  0858               	movf	___fladd@a+2,w
  8868  1612  00DA               	movwf	??___fladd
  8869  1613  085A               	movf	??___fladd,w
  8870  1614  00D4               	movwf	___fladd@b+2
  8871  1615                     l2827:
  8872  1615  0865               	movf	___fladd@grs,w
  8873  1616  00DA               	movwf	??___fladd
  8874  1617  085A               	movf	??___fladd,w
  8875  1618  00D8               	movwf	___fladd@a+2
  8876  1619                     l2829:
  8877  1619  0855               	movf	___fladd@b+3,w
  8878  161A  00DA               	movwf	??___fladd
  8879  161B  085A               	movf	??___fladd,w
  8880  161C  00E5               	movwf	___fladd@grs
  8881  161D                     l2831:
  8882  161D  0859               	movf	___fladd@a+3,w
  8883  161E  00DA               	movwf	??___fladd
  8884  161F  085A               	movf	??___fladd,w
  8885  1620  00D5               	movwf	___fladd@b+3
  8886  1621                     l2833:
  8887  1621  0865               	movf	___fladd@grs,w
  8888  1622  00DA               	movwf	??___fladd
  8889  1623  085A               	movf	??___fladd,w
  8890  1624  00D9               	movwf	___fladd@a+3
  8891  1625                     l2835:
  8892  1625  01E5               	clrf	___fladd@grs
  8893  1626                     l2837:
  8894  1626  0863               	movf	___fladd@aexp,w
  8895  1627  00DA               	movwf	??___fladd
  8896  1628  01DB               	clrf	??___fladd+1
  8897  1629  085B               	movf	??___fladd+1,w
  8898  162A  00DD               	movwf	??___fladd+3
  8899  162B  0864               	movf	___fladd@bexp,w
  8900  162C  025A               	subwf	??___fladd,w
  8901  162D  00DC               	movwf	??___fladd+2
  8902  162E  1C03               	skipc
  8903  162F  03DD               	decf	??___fladd+3,f
  8904  1630  085D               	movf	??___fladd+3,w
  8905  1631  3A80               	xorlw	128
  8906  1632  00FF               	movwf	btemp+1
  8907  1633  3080               	movlw	128
  8908  1634  027F               	subwf	btemp+1,w
  8909  1635  1D03               	skipz
  8910  1636  2E39               	goto	u3405
  8911  1637  301A               	movlw	26
  8912  1638  025C               	subwf	??___fladd+2,w
  8913  1639                     u3405:
  8914  1639  1C03               	skipc
  8915  163A  2E3C               	goto	u3401
  8916  163B  2E3D               	goto	u3400
  8917  163C                     u3401:
  8918  163C  2E7A               	goto	l2853
  8919  163D                     u3400:
  8920  163D                     l2839:
  8921  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8922  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8923  163F  0855               	movf	___fladd@b+3,w
  8924  1640  0454               	iorwf	___fladd@b+2,w
  8925  1641  0453               	iorwf	___fladd@b+1,w
  8926  1642  0452               	iorwf	___fladd@b,w
  8927  1643  1D03               	skipz
  8928  1644  2E46               	goto	u3411
  8929  1645  2E48               	goto	u3410
  8930  1646                     u3411:
  8931  1646  3001               	movlw	1
  8932  1647  2E49               	goto	u3420
  8933  1648                     u3410:
  8934  1648  3000               	movlw	0
  8935  1649                     u3420:
  8936  1649  00DA               	movwf	??___fladd
  8937  164A  085A               	movf	??___fladd,w
  8938  164B  00E5               	movwf	___fladd@grs
  8939  164C  3000               	movlw	0
  8940  164D  00D5               	movwf	___fladd@b+3
  8941  164E  3000               	movlw	0
  8942  164F  00D4               	movwf	___fladd@b+2
  8943  1650  3000               	movlw	0
  8944  1651  00D3               	movwf	___fladd@b+1
  8945  1652  3000               	movlw	0
  8946  1653  00D2               	movwf	___fladd@b
  8947  1654  0863               	movf	___fladd@aexp,w
  8948  1655  00DA               	movwf	??___fladd
  8949  1656  085A               	movf	??___fladd,w
  8950  1657  00E4               	movwf	___fladd@bexp
  8951  1658  2E82               	goto	l805
  8952  1659                     l807:
  8953  1659  1C65               	btfss	___fladd@grs,0
  8954  165A  2E5C               	goto	u3431
  8955  165B  2E5D               	goto	u3430
  8956  165C                     u3431:
  8957  165C  2E66               	goto	l2843
  8958  165D                     u3430:
  8959  165D                     l2841:
  8960  165D  0865               	movf	___fladd@grs,w
  8961  165E  00DA               	movwf	??___fladd
  8962  165F  1003               	clrc
  8963  1660  0C5A               	rrf	??___fladd,w
  8964  1661  3801               	iorlw	1
  8965  1662  00DB               	movwf	??___fladd+1
  8966  1663  085B               	movf	??___fladd+1,w
  8967  1664  00E5               	movwf	___fladd@grs
  8968  1665  2E68               	goto	l2845
  8969  1666                     l2843:
  8970  1666  1003               	clrc
  8971  1667  0CE5               	rrf	___fladd@grs,f
  8972  1668                     l2845:
  8973  1668  1C52               	btfss	___fladd@b,0
  8974  1669  2E6B               	goto	u3441
  8975  166A  2E6C               	goto	u3440
  8976  166B                     u3441:
  8977  166B  2E6D               	goto	l2849
  8978  166C                     u3440:
  8979  166C                     l2847:
  8980  166C  17E5               	bsf	___fladd@grs,7
  8981  166D                     l2849:
  8982  166D  3001               	movlw	1
  8983  166E  00DA               	movwf	??___fladd
  8984  166F                     u3455:
  8985  166F  0D55               	rlf	___fladd@b+3,w
  8986  1670  0CD5               	rrf	___fladd@b+3,f
  8987  1671  0CD4               	rrf	___fladd@b+2,f
  8988  1672  0CD3               	rrf	___fladd@b+1,f
  8989  1673  0CD2               	rrf	___fladd@b,f
  8990  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8991  1675  2E6F               	goto	u3455
  8992  1676                     l2851:
  8993  1676  3001               	movlw	1
  8994  1677  00DA               	movwf	??___fladd
  8995  1678  085A               	movf	??___fladd,w
  8996  1679  07E4               	addwf	___fladd@bexp,f
  8997  167A                     l2853:
  8998  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8999  167B  1303               	bcf	3,6	;RP1=0, select bank0
  9000  167C  0863               	movf	___fladd@aexp,w
  9001  167D  0264               	subwf	___fladd@bexp,w
  9002  167E  1C03               	skipc
  9003  167F  2E81               	goto	u3461
  9004  1680  2E82               	goto	u3460
  9005  1681                     u3461:
  9006  1681  2E59               	goto	l807
  9007  1682                     u3460:
  9008  1682                     l805:
  9009  1682  1B62               	btfsc	___fladd@signs,6
  9010  1683  2E85               	goto	u3471
  9011  1684  2E86               	goto	u3470
  9012  1685                     u3471:
  9013  1685  2ED1               	goto	l2879
  9014  1686                     u3470:
  9015  1686                     l2855:
  9016  1686  0864               	movf	___fladd@bexp,w
  9017  1687  1D03               	btfss	3,2
  9018  1688  2E8A               	goto	u3481
  9019  1689  2E8B               	goto	u3480
  9020  168A                     u3481:
  9021  168A  2E94               	goto	l2861
  9022  168B                     u3480:
  9023  168B                     l2857:
  9024  168B  3000               	movlw	0
  9025  168C  00D5               	movwf	?___fladd+3
  9026  168D  3000               	movlw	0
  9027  168E  00D4               	movwf	?___fladd+2
  9028  168F  3000               	movlw	0
  9029  1690  00D3               	movwf	?___fladd+1
  9030  1691  3000               	movlw	0
  9031  1692  00D2               	movwf	?___fladd
  9032  1693  2FFF               	goto	l814
  9033  1694                     l2861:
  9034  1694  0856               	movf	___fladd@a,w
  9035  1695  07D2               	addwf	___fladd@b,f
  9036  1696  0857               	movf	___fladd@a+1,w
  9037  1697  1103               	clrz
  9038  1698  1803               	skipnc
  9039  1699  3E01               	addlw	1
  9040  169A  1903               	skipnz
  9041  169B  2E9D               	goto	u3491
  9042  169C  07D3               	addwf	___fladd@b+1,f
  9043  169D                     u3491:
  9044  169D  0858               	movf	___fladd@a+2,w
  9045  169E  1103               	clrz
  9046  169F  1803               	skipnc
  9047  16A0  3E01               	addlw	1
  9048  16A1  1903               	skipnz
  9049  16A2  2EA4               	goto	u3492
  9050  16A3  07D4               	addwf	___fladd@b+2,f
  9051  16A4                     u3492:
  9052  16A4  0859               	movf	___fladd@a+3,w
  9053  16A5  1103               	clrz
  9054  16A6  1803               	skipnc
  9055  16A7  3E01               	addlw	1
  9056  16A8  1903               	skipnz
  9057  16A9  2EAB               	goto	u3493
  9058  16AA  07D5               	addwf	___fladd@b+3,f
  9059  16AB                     u3493:
  9060  16AB                     l2863:
  9061  16AB  1C55               	btfss	___fladd@b+3,0
  9062  16AC  2EAE               	goto	u3501
  9063  16AD  2EAF               	goto	u3500
  9064  16AE                     u3501:
  9065  16AE  2F85               	goto	l2913
  9066  16AF                     u3500:
  9067  16AF                     l2865:
  9068  16AF  1C65               	btfss	___fladd@grs,0
  9069  16B0  2EB2               	goto	u3511
  9070  16B1  2EB3               	goto	u3510
  9071  16B2                     u3511:
  9072  16B2  2EBC               	goto	l2869
  9073  16B3                     u3510:
  9074  16B3                     l2867:
  9075  16B3  0865               	movf	___fladd@grs,w
  9076  16B4  00DA               	movwf	??___fladd
  9077  16B5  1003               	clrc
  9078  16B6  0C5A               	rrf	??___fladd,w
  9079  16B7  3801               	iorlw	1
  9080  16B8  00DB               	movwf	??___fladd+1
  9081  16B9  085B               	movf	??___fladd+1,w
  9082  16BA  00E5               	movwf	___fladd@grs
  9083  16BB  2EBE               	goto	l2871
  9084  16BC                     l2869:
  9085  16BC  1003               	clrc
  9086  16BD  0CE5               	rrf	___fladd@grs,f
  9087  16BE                     l2871:
  9088  16BE  1C52               	btfss	___fladd@b,0
  9089  16BF  2EC1               	goto	u3521
  9090  16C0  2EC2               	goto	u3520
  9091  16C1                     u3521:
  9092  16C1  2EC3               	goto	l2875
  9093  16C2                     u3520:
  9094  16C2                     l2873:
  9095  16C2  17E5               	bsf	___fladd@grs,7
  9096  16C3                     l2875:
  9097  16C3  3001               	movlw	1
  9098  16C4  00DA               	movwf	??___fladd
  9099  16C5                     u3535:
  9100  16C5  0D55               	rlf	___fladd@b+3,w
  9101  16C6  0CD5               	rrf	___fladd@b+3,f
  9102  16C7  0CD4               	rrf	___fladd@b+2,f
  9103  16C8  0CD3               	rrf	___fladd@b+1,f
  9104  16C9  0CD2               	rrf	___fladd@b,f
  9105  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  9106  16CB  2EC5               	goto	u3535
  9107  16CC                     l2877:
  9108  16CC  3001               	movlw	1
  9109  16CD  00DA               	movwf	??___fladd
  9110  16CE  085A               	movf	??___fladd,w
  9111  16CF  07E4               	addwf	___fladd@bexp,f
  9112  16D0  2F85               	goto	l2913
  9113  16D1                     l2879:
  9114  16D1  0855               	movf	___fladd@b+3,w
  9115  16D2  3A80               	xorlw	128
  9116  16D3  00FF               	movwf	btemp+1
  9117  16D4  0859               	movf	___fladd@a+3,w
  9118  16D5  3A80               	xorlw	128
  9119  16D6  027F               	subwf	btemp+1,w
  9120  16D7  1D03               	skipz
  9121  16D8  2EE3               	goto	u3543
  9122  16D9  0858               	movf	___fladd@a+2,w
  9123  16DA  0254               	subwf	___fladd@b+2,w
  9124  16DB  1D03               	skipz
  9125  16DC  2EE3               	goto	u3543
  9126  16DD  0857               	movf	___fladd@a+1,w
  9127  16DE  0253               	subwf	___fladd@b+1,w
  9128  16DF  1D03               	skipz
  9129  16E0  2EE3               	goto	u3543
  9130  16E1  0856               	movf	___fladd@a,w
  9131  16E2  0252               	subwf	___fladd@b,w
  9132  16E3                     u3543:
  9133  16E3  1803               	skipnc
  9134  16E4  2EE6               	goto	u3541
  9135  16E5  2EE7               	goto	u3540
  9136  16E6                     u3541:
  9137  16E6  2F3F               	goto	l2889
  9138  16E7                     u3540:
  9139  16E7                     l2881:
  9140  16E7  30FF               	movlw	255
  9141  16E8  00DA               	movwf	??___fladd
  9142  16E9  30FF               	movlw	255
  9143  16EA  00DB               	movwf	??___fladd+1
  9144  16EB  30FF               	movlw	255
  9145  16EC  00DC               	movwf	??___fladd+2
  9146  16ED  30FF               	movlw	255
  9147  16EE  00DD               	movwf	??___fladd+3
  9148  16EF  0856               	movf	___fladd@a,w
  9149  16F0  00DE               	movwf	??___fladd+4
  9150  16F1  0857               	movf	___fladd@a+1,w
  9151  16F2  00DF               	movwf	??___fladd+5
  9152  16F3  0858               	movf	___fladd@a+2,w
  9153  16F4  00E0               	movwf	??___fladd+6
  9154  16F5  0859               	movf	___fladd@a+3,w
  9155  16F6  00E1               	movwf	??___fladd+7
  9156  16F7  0852               	movf	___fladd@b,w
  9157  16F8  02DE               	subwf	??___fladd+4,f
  9158  16F9  0853               	movf	___fladd@b+1,w
  9159  16FA  1C03               	skipc
  9160  16FB  0F53               	incfsz	___fladd@b+1,w
  9161  16FC  2EFE               	goto	u3551
  9162  16FD  2EFF               	goto	u3552
  9163  16FE                     u3551:
  9164  16FE  02DF               	subwf	??___fladd+5,f
  9165  16FF                     u3552:
  9166  16FF  0854               	movf	___fladd@b+2,w
  9167  1700  1C03               	skipc
  9168  1701  0F54               	incfsz	___fladd@b+2,w
  9169  1702  2F04               	goto	u3553
  9170  1703  2F05               	goto	u3554
  9171  1704                     u3553:
  9172  1704  02E0               	subwf	??___fladd+6,f
  9173  1705                     u3554:
  9174  1705  0855               	movf	___fladd@b+3,w
  9175  1706  1C03               	skipc
  9176  1707  0F55               	incfsz	___fladd@b+3,w
  9177  1708  2F0A               	goto	u3555
  9178  1709  2F0B               	goto	u3556
  9179  170A                     u3555:
  9180  170A  02E1               	subwf	??___fladd+7,f
  9181  170B                     u3556:
  9182  170B  085E               	movf	??___fladd+4,w
  9183  170C  07DA               	addwf	??___fladd,f
  9184  170D  085F               	movf	??___fladd+5,w
  9185  170E  1803               	skipnc
  9186  170F  0F5F               	incfsz	??___fladd+5,w
  9187  1710  2F12               	goto	u3560
  9188  1711  2F13               	goto	u3561
  9189  1712                     u3560:
  9190  1712  07DB               	addwf	??___fladd+1,f
  9191  1713                     u3561:
  9192  1713  0860               	movf	??___fladd+6,w
  9193  1714  1803               	skipnc
  9194  1715  0F60               	incfsz	??___fladd+6,w
  9195  1716  2F18               	goto	u3562
  9196  1717  2F19               	goto	u3563
  9197  1718                     u3562:
  9198  1718  07DC               	addwf	??___fladd+2,f
  9199  1719                     u3563:
  9200  1719  0861               	movf	??___fladd+7,w
  9201  171A  1803               	skipnc
  9202  171B  0A61               	incf	??___fladd+7,w
  9203  171C  07DD               	addwf	??___fladd+3,f
  9204  171D  085D               	movf	??___fladd+3,w
  9205  171E  00D5               	movwf	___fladd@b+3
  9206  171F  085C               	movf	??___fladd+2,w
  9207  1720  00D4               	movwf	___fladd@b+2
  9208  1721  085B               	movf	??___fladd+1,w
  9209  1722  00D3               	movwf	___fladd@b+1
  9210  1723  085A               	movf	??___fladd,w
  9211  1724  00D2               	movwf	___fladd@b
  9212  1725                     l2883:
  9213  1725  3080               	movlw	128
  9214  1726  00DA               	movwf	??___fladd
  9215  1727  085A               	movf	??___fladd,w
  9216  1728  06E2               	xorwf	___fladd@signs,f
  9217  1729  09E5               	comf	___fladd@grs,f
  9218  172A  0AE5               	incf	___fladd@grs,f
  9219  172B                     l2885:
  9220  172B  0865               	movf	___fladd@grs,w
  9221  172C  1D03               	btfss	3,2
  9222  172D  2F2F               	goto	u3571
  9223  172E  2F30               	goto	u3570
  9224  172F                     u3571:
  9225  172F  2F4D               	goto	l822
  9226  1730                     u3570:
  9227  1730                     l2887:
  9228  1730  3001               	movlw	1
  9229  1731  07D2               	addwf	___fladd@b,f
  9230  1732  3000               	movlw	0
  9231  1733  1803               	skipnc
  9232  1734  3001               	movlw	1
  9233  1735  07D3               	addwf	___fladd@b+1,f
  9234  1736  3000               	movlw	0
  9235  1737  1803               	skipnc
  9236  1738  3001               	movlw	1
  9237  1739  07D4               	addwf	___fladd@b+2,f
  9238  173A  3000               	movlw	0
  9239  173B  1803               	skipnc
  9240  173C  3001               	movlw	1
  9241  173D  07D5               	addwf	___fladd@b+3,f
  9242  173E  2F4D               	goto	l822
  9243  173F                     l2889:
  9244  173F  0856               	movf	___fladd@a,w
  9245  1740  02D2               	subwf	___fladd@b,f
  9246  1741  0857               	movf	___fladd@a+1,w
  9247  1742  1C03               	skipc
  9248  1743  0F57               	incfsz	___fladd@a+1,w
  9249  1744  02D3               	subwf	___fladd@b+1,f
  9250  1745  0858               	movf	___fladd@a+2,w
  9251  1746  1C03               	skipc
  9252  1747  0F58               	incfsz	___fladd@a+2,w
  9253  1748  02D4               	subwf	___fladd@b+2,f
  9254  1749  0859               	movf	___fladd@a+3,w
  9255  174A  1C03               	skipc
  9256  174B  0F59               	incfsz	___fladd@a+3,w
  9257  174C  02D5               	subwf	___fladd@b+3,f
  9258  174D                     l822:
  9259  174D  0855               	movf	___fladd@b+3,w
  9260  174E  0454               	iorwf	___fladd@b+2,w
  9261  174F  0453               	iorwf	___fladd@b+1,w
  9262  1750  0452               	iorwf	___fladd@b,w
  9263  1751  1D03               	skipz
  9264  1752  2F54               	goto	u3581
  9265  1753  2F55               	goto	u3580
  9266  1754                     u3581:
  9267  1754  2F81               	goto	l2911
  9268  1755                     u3580:
  9269  1755                     l2891:
  9270  1755  0865               	movf	___fladd@grs,w
  9271  1756  1D03               	btfss	3,2
  9272  1757  2F59               	goto	u3591
  9273  1758  2F5A               	goto	u3590
  9274  1759                     u3591:
  9275  1759  2F81               	goto	l2911
  9276  175A                     u3590:
  9277  175A                     l2893:
  9278  175A  3000               	movlw	0
  9279  175B  00D5               	movwf	?___fladd+3
  9280  175C  3000               	movlw	0
  9281  175D  00D4               	movwf	?___fladd+2
  9282  175E  3000               	movlw	0
  9283  175F  00D3               	movwf	?___fladd+1
  9284  1760  3000               	movlw	0
  9285  1761  00D2               	movwf	?___fladd
  9286  1762  2FFF               	goto	l814
  9287  1763                     l2897:
  9288  1763  3001               	movlw	1
  9289  1764  00DA               	movwf	??___fladd
  9290  1765                     u3605:
  9291  1765  1003               	clrc
  9292  1766  0DD2               	rlf	___fladd@b,f
  9293  1767  0DD3               	rlf	___fladd@b+1,f
  9294  1768  0DD4               	rlf	___fladd@b+2,f
  9295  1769  0DD5               	rlf	___fladd@b+3,f
  9296  176A  0BDA               	decfsz	??___fladd,f
  9297  176B  2F65               	goto	u3605
  9298  176C                     l2899:
  9299  176C  1FE5               	btfss	___fladd@grs,7
  9300  176D  2F6F               	goto	u3611
  9301  176E  2F70               	goto	u3610
  9302  176F                     u3611:
  9303  176F  2F71               	goto	l826
  9304  1770                     u3610:
  9305  1770                     l2901:
  9306  1770  1452               	bsf	___fladd@b,0
  9307  1771                     l826:
  9308  1771  1C65               	btfss	___fladd@grs,0
  9309  1772  2F74               	goto	u3621
  9310  1773  2F75               	goto	u3620
  9311  1774                     u3621:
  9312  1774  2F78               	goto	l2905
  9313  1775                     u3620:
  9314  1775                     l2903:
  9315  1775  1403               	setc
  9316  1776  0DE5               	rlf	___fladd@grs,f
  9317  1777  2F7A               	goto	l2907
  9318  1778                     l2905:
  9319  1778  1003               	clrc
  9320  1779  0DE5               	rlf	___fladd@grs,f
  9321  177A                     l2907:
  9322  177A  0864               	movf	___fladd@bexp,w
  9323  177B  1903               	btfsc	3,2
  9324  177C  2F7E               	goto	u3631
  9325  177D  2F7F               	goto	u3630
  9326  177E                     u3631:
  9327  177E  2F81               	goto	l2911
  9328  177F                     u3630:
  9329  177F                     l2909:
  9330  177F  3001               	movlw	1
  9331  1780  02E4               	subwf	___fladd@bexp,f
  9332  1781                     l2911:
  9333  1781  1FD4               	btfss	___fladd@b+2,7
  9334  1782  2F84               	goto	u3641
  9335  1783  2F85               	goto	u3640
  9336  1784                     u3641:
  9337  1784  2F63               	goto	l2897
  9338  1785                     u3640:
  9339  1785                     l2913:
  9340  1785  01E3               	clrf	___fladd@aexp
  9341  1786                     l2915:
  9342  1786  1FE5               	btfss	___fladd@grs,7
  9343  1787  2F89               	goto	u3651
  9344  1788  2F8A               	goto	u3650
  9345  1789                     u3651:
  9346  1789  2F98               	goto	l2923
  9347  178A                     u3650:
  9348  178A                     l2917:
  9349  178A  0865               	movf	___fladd@grs,w
  9350  178B  397F               	andlw	127
  9351  178C  1903               	btfsc	3,2
  9352  178D  2F8F               	goto	u3661
  9353  178E  2F90               	goto	u3660
  9354  178F                     u3661:
  9355  178F  2F93               	goto	l832
  9356  1790                     u3660:
  9357  1790                     l2919:
  9358  1790  01E3               	clrf	___fladd@aexp
  9359  1791  0AE3               	incf	___fladd@aexp,f
  9360  1792  2F98               	goto	l2923
  9361  1793                     l832:
  9362  1793  1C52               	btfss	___fladd@b,0
  9363  1794  2F96               	goto	u3671
  9364  1795  2F97               	goto	u3670
  9365  1796                     u3671:
  9366  1796  2F98               	goto	l2923
  9367  1797                     u3670:
  9368  1797  2F90               	goto	l2919
  9369  1798                     l2923:
  9370  1798  0863               	movf	___fladd@aexp,w
  9371  1799  1903               	btfsc	3,2
  9372  179A  2F9C               	goto	u3681
  9373  179B  2F9D               	goto	u3680
  9374  179C                     u3681:
  9375  179C  2FD1               	goto	l835
  9376  179D                     u3680:
  9377  179D                     l2925:
  9378  179D  3001               	movlw	1
  9379  179E  07D2               	addwf	___fladd@b,f
  9380  179F  3000               	movlw	0
  9381  17A0  1803               	skipnc
  9382  17A1  3001               	movlw	1
  9383  17A2  07D3               	addwf	___fladd@b+1,f
  9384  17A3  3000               	movlw	0
  9385  17A4  1803               	skipnc
  9386  17A5  3001               	movlw	1
  9387  17A6  07D4               	addwf	___fladd@b+2,f
  9388  17A7  3000               	movlw	0
  9389  17A8  1803               	skipnc
  9390  17A9  3001               	movlw	1
  9391  17AA  07D5               	addwf	___fladd@b+3,f
  9392  17AB                     l2927:
  9393  17AB  1C55               	btfss	___fladd@b+3,0
  9394  17AC  2FAE               	goto	u3691
  9395  17AD  2FAF               	goto	u3690
  9396  17AE                     u3691:
  9397  17AE  2FD1               	goto	l835
  9398  17AF                     u3690:
  9399  17AF                     l2929:
  9400  17AF  0852               	movf	___fladd@b,w
  9401  17B0  00DA               	movwf	??___fladd
  9402  17B1  0853               	movf	___fladd@b+1,w
  9403  17B2  00DB               	movwf	??___fladd+1
  9404  17B3  0854               	movf	___fladd@b+2,w
  9405  17B4  00DC               	movwf	??___fladd+2
  9406  17B5  0855               	movf	___fladd@b+3,w
  9407  17B6  00DD               	movwf	??___fladd+3
  9408  17B7  3001               	movlw	1
  9409  17B8  00DE               	movwf	??___fladd+4
  9410  17B9                     u3705:
  9411  17B9  0D5D               	rlf	??___fladd+3,w
  9412  17BA  0CDD               	rrf	??___fladd+3,f
  9413  17BB  0CDC               	rrf	??___fladd+2,f
  9414  17BC  0CDB               	rrf	??___fladd+1,f
  9415  17BD  0CDA               	rrf	??___fladd,f
  9416  17BE                     u3700:
  9417  17BE  0BDE               	decfsz	??___fladd+4,f
  9418  17BF  2FB9               	goto	u3705
  9419  17C0  085D               	movf	??___fladd+3,w
  9420  17C1  00D5               	movwf	___fladd@b+3
  9421  17C2  085C               	movf	??___fladd+2,w
  9422  17C3  00D4               	movwf	___fladd@b+2
  9423  17C4  085B               	movf	??___fladd+1,w
  9424  17C5  00D3               	movwf	___fladd@b+1
  9425  17C6  085A               	movf	??___fladd,w
  9426  17C7  00D2               	movwf	___fladd@b
  9427  17C8  0A64               	incf	___fladd@bexp,w
  9428  17C9  1903               	btfsc	3,2
  9429  17CA  2FCC               	goto	u3711
  9430  17CB  2FCD               	goto	u3710
  9431  17CC                     u3711:
  9432  17CC  2FD1               	goto	l835
  9433  17CD                     u3710:
  9434  17CD                     l2931:
  9435  17CD  3001               	movlw	1
  9436  17CE  00DA               	movwf	??___fladd
  9437  17CF  085A               	movf	??___fladd,w
  9438  17D0  07E4               	addwf	___fladd@bexp,f
  9439  17D1                     l835:
  9440  17D1  0A64               	incf	___fladd@bexp,w
  9441  17D2  1903               	btfsc	3,2
  9442  17D3  2FD5               	goto	u3721
  9443  17D4  2FD6               	goto	u3720
  9444  17D5                     u3721:
  9445  17D5  2FDB               	goto	l2935
  9446  17D6                     u3720:
  9447  17D6                     l2933:
  9448  17D6  0864               	movf	___fladd@bexp,w
  9449  17D7  1D03               	btfss	3,2
  9450  17D8  2FDA               	goto	u3731
  9451  17D9  2FDB               	goto	u3730
  9452  17DA                     u3731:
  9453  17DA  2FE9               	goto	l2941
  9454  17DB                     u3730:
  9455  17DB                     l2935:
  9456  17DB  3000               	movlw	0
  9457  17DC  00D5               	movwf	___fladd@b+3
  9458  17DD  3000               	movlw	0
  9459  17DE  00D4               	movwf	___fladd@b+2
  9460  17DF  3000               	movlw	0
  9461  17E0  00D3               	movwf	___fladd@b+1
  9462  17E1  3000               	movlw	0
  9463  17E2  00D2               	movwf	___fladd@b
  9464  17E3                     l2937:
  9465  17E3  0864               	movf	___fladd@bexp,w
  9466  17E4  1D03               	btfss	3,2
  9467  17E5  2FE7               	goto	u3741
  9468  17E6  2FE8               	goto	u3740
  9469  17E7                     u3741:
  9470  17E7  2FE9               	goto	l2941
  9471  17E8                     u3740:
  9472  17E8                     l2939:
  9473  17E8  01E2               	clrf	___fladd@signs
  9474  17E9                     l2941:
  9475  17E9  1C64               	btfss	___fladd@bexp,0
  9476  17EA  2FEC               	goto	u3751
  9477  17EB  2FED               	goto	u3750
  9478  17EC                     u3751:
  9479  17EC  2FEF               	goto	l2945
  9480  17ED                     u3750:
  9481  17ED                     l2943:
  9482  17ED  17D4               	bsf	___fladd@b+2,7
  9483  17EE  2FF3               	goto	l843
  9484  17EF                     l2945:
  9485  17EF  307F               	movlw	127
  9486  17F0  00DA               	movwf	??___fladd
  9487  17F1  085A               	movf	??___fladd,w
  9488  17F2  05D4               	andwf	___fladd@b+2,f
  9489  17F3                     l843:
  9490  17F3  0864               	movf	___fladd@bexp,w
  9491  17F4  00DA               	movwf	??___fladd
  9492  17F5  1003               	clrc
  9493  17F6  0C5A               	rrf	??___fladd,w
  9494  17F7  00DB               	movwf	??___fladd+1
  9495  17F8  085B               	movf	??___fladd+1,w
  9496  17F9  00D5               	movwf	___fladd@b+3
  9497  17FA                     l2947:
  9498  17FA  1FE2               	btfss	___fladd@signs,7
  9499  17FB  2FFD               	goto	u3761
  9500  17FC  2FFE               	goto	u3760
  9501  17FD                     u3761:
  9502  17FD  2FFF               	goto	l844
  9503  17FE                     u3760:
  9504  17FE                     l2949:
  9505  17FE  17D5               	bsf	___fladd@b+3,7
  9506  17FF                     l844:
  9507  17FF                     l814:
  9508  17FF  0008               	return
  9509  1800                     __end_of___fladd:
  9510                           
  9511                           	psect	text19
  9512  196E                     __ptext19:	
  9513 ;; *************** function ___flneg *****************
  9514 ;; Defined at:
  9515 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  f1              4    0[COMMON] unsigned char 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  4    0[COMMON] unsigned char 
  9522 ;; Registers used:
  9523 ;;		wreg
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9529 ;;      Params:         4       0       0       0       0
  9530 ;;      Locals:         0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0
  9532 ;;      Totals:         4       0       0       0       0
  9533 ;;Total ram usage:        4 bytes
  9534 ;; Hardware stack levels used: 1
  9535 ;; This function calls:
  9536 ;;		Nothing
  9537 ;; This function is called by:
  9538 ;;		_sprintf
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           
  9543                           ;psect for function ___flneg
  9544  196E                     ___flneg:
  9545  196E                     l3437:	
  9546                           ;incstack = 0
  9547                           ; Regs used in ___flneg: [wreg]
  9548                           
  9549  196E  0873               	movf	___flneg@f1+3,w
  9550  196F  0472               	iorwf	___flneg@f1+2,w
  9551  1970  0471               	iorwf	___flneg@f1+1,w
  9552  1971  0470               	iorwf	___flneg@f1,w
  9553  1972  1903               	skipnz
  9554  1973  2975               	goto	u4921
  9555  1974  2976               	goto	u4920
  9556  1975                     u4921:
  9557  1975  2978               	goto	l3441
  9558  1976                     u4920:
  9559  1976                     l3439:
  9560  1976  3080               	movlw	128
  9561  1977  06F3               	xorwf	___flneg@f1+3,f
  9562  1978                     l3441:
  9563  1978                     l673:
  9564  1978  0008               	return
  9565  1979                     __end_of___flneg:
  9566                           
  9567                           	psect	text20
  9568  1DE7                     __ptext20:	
  9569 ;; *************** function ___flge *****************
  9570 ;; Defined at:
  9571 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  ff1             4    0[COMMON] unsigned char 
  9574 ;;  ff2             4    4[COMMON] unsigned char 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;		None               void
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9586 ;;      Params:         8       0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0
  9588 ;;      Temps:          4       0       0       0       0
  9589 ;;      Totals:        12       0       0       0       0
  9590 ;;Total ram usage:       12 bytes
  9591 ;; Hardware stack levels used: 1
  9592 ;; This function calls:
  9593 ;;		Nothing
  9594 ;; This function is called by:
  9595 ;;		_sprintf
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           
  9600                           ;psect for function ___flge
  9601  1DE7                     ___flge:
  9602  1DE7                     l3417:	
  9603                           ;incstack = 0
  9604                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9605                           
  9606  1DE7  3000               	movlw	0
  9607  1DE8  0570               	andwf	___flge@ff1,w
  9608  1DE9  00F8               	movwf	??___flge
  9609  1DEA  3000               	movlw	0
  9610  1DEB  0571               	andwf	___flge@ff1+1,w
  9611  1DEC  00F9               	movwf	??___flge+1
  9612  1DED  3080               	movlw	128
  9613  1DEE  0572               	andwf	___flge@ff1+2,w
  9614  1DEF  00FA               	movwf	??___flge+2
  9615  1DF0  307F               	movlw	127
  9616  1DF1  0573               	andwf	___flge@ff1+3,w
  9617  1DF2  00FB               	movwf	??___flge+3
  9618  1DF3  087B               	movf	??___flge+3,w
  9619  1DF4  047A               	iorwf	??___flge+2,w
  9620  1DF5  0479               	iorwf	??___flge+1,w
  9621  1DF6  0478               	iorwf	??___flge,w
  9622  1DF7  1D03               	skipz
  9623  1DF8  2DFA               	goto	u4851
  9624  1DF9  2DFB               	goto	u4850
  9625  1DFA                     u4851:
  9626  1DFA  2E03               	goto	l665
  9627  1DFB                     u4850:
  9628  1DFB                     l3419:
  9629  1DFB  3000               	movlw	0
  9630  1DFC  00F3               	movwf	___flge@ff1+3
  9631  1DFD  3000               	movlw	0
  9632  1DFE  00F2               	movwf	___flge@ff1+2
  9633  1DFF  3000               	movlw	0
  9634  1E00  00F1               	movwf	___flge@ff1+1
  9635  1E01  3000               	movlw	0
  9636  1E02  00F0               	movwf	___flge@ff1
  9637  1E03                     l665:
  9638  1E03  3000               	movlw	0
  9639  1E04  0574               	andwf	___flge@ff2,w
  9640  1E05  00F8               	movwf	??___flge
  9641  1E06  3000               	movlw	0
  9642  1E07  0575               	andwf	___flge@ff2+1,w
  9643  1E08  00F9               	movwf	??___flge+1
  9644  1E09  3080               	movlw	128
  9645  1E0A  0576               	andwf	___flge@ff2+2,w
  9646  1E0B  00FA               	movwf	??___flge+2
  9647  1E0C  307F               	movlw	127
  9648  1E0D  0577               	andwf	___flge@ff2+3,w
  9649  1E0E  00FB               	movwf	??___flge+3
  9650  1E0F  087B               	movf	??___flge+3,w
  9651  1E10  047A               	iorwf	??___flge+2,w
  9652  1E11  0479               	iorwf	??___flge+1,w
  9653  1E12  0478               	iorwf	??___flge,w
  9654  1E13  1D03               	skipz
  9655  1E14  2E16               	goto	u4861
  9656  1E15  2E17               	goto	u4860
  9657  1E16                     u4861:
  9658  1E16  2E1F               	goto	l3423
  9659  1E17                     u4860:
  9660  1E17                     l3421:
  9661  1E17  3000               	movlw	0
  9662  1E18  00F7               	movwf	___flge@ff2+3
  9663  1E19  3000               	movlw	0
  9664  1E1A  00F6               	movwf	___flge@ff2+2
  9665  1E1B  3000               	movlw	0
  9666  1E1C  00F5               	movwf	___flge@ff2+1
  9667  1E1D  3000               	movlw	0
  9668  1E1E  00F4               	movwf	___flge@ff2
  9669  1E1F                     l3423:
  9670  1E1F  1FF3               	btfss	___flge@ff1+3,7
  9671  1E20  2E22               	goto	u4871
  9672  1E21  2E23               	goto	u4870
  9673  1E22                     u4871:
  9674  1E22  2E47               	goto	l3427
  9675  1E23                     u4870:
  9676  1E23                     l3425:
  9677  1E23  3000               	movlw	0
  9678  1E24  00F8               	movwf	??___flge
  9679  1E25  3000               	movlw	0
  9680  1E26  00F9               	movwf	??___flge+1
  9681  1E27  3000               	movlw	0
  9682  1E28  00FA               	movwf	??___flge+2
  9683  1E29  3080               	movlw	128
  9684  1E2A  00FB               	movwf	??___flge+3
  9685  1E2B  0870               	movf	___flge@ff1,w
  9686  1E2C  02F8               	subwf	??___flge,f
  9687  1E2D  0871               	movf	___flge@ff1+1,w
  9688  1E2E  1C03               	skipc
  9689  1E2F  0F71               	incfsz	___flge@ff1+1,w
  9690  1E30  2E32               	goto	u4881
  9691  1E31  2E33               	goto	u4882
  9692  1E32                     u4881:
  9693  1E32  02F9               	subwf	??___flge+1,f
  9694  1E33                     u4882:
  9695  1E33  0872               	movf	___flge@ff1+2,w
  9696  1E34  1C03               	skipc
  9697  1E35  0F72               	incfsz	___flge@ff1+2,w
  9698  1E36  2E38               	goto	u4883
  9699  1E37  2E39               	goto	u4884
  9700  1E38                     u4883:
  9701  1E38  02FA               	subwf	??___flge+2,f
  9702  1E39                     u4884:
  9703  1E39  0873               	movf	___flge@ff1+3,w
  9704  1E3A  1C03               	skipc
  9705  1E3B  0F73               	incfsz	___flge@ff1+3,w
  9706  1E3C  2E3E               	goto	u4885
  9707  1E3D  2E3F               	goto	u4886
  9708  1E3E                     u4885:
  9709  1E3E  02FB               	subwf	??___flge+3,f
  9710  1E3F                     u4886:
  9711  1E3F  087B               	movf	??___flge+3,w
  9712  1E40  00F3               	movwf	___flge@ff1+3
  9713  1E41  087A               	movf	??___flge+2,w
  9714  1E42  00F2               	movwf	___flge@ff1+2
  9715  1E43  0879               	movf	??___flge+1,w
  9716  1E44  00F1               	movwf	___flge@ff1+1
  9717  1E45  0878               	movf	??___flge,w
  9718  1E46  00F0               	movwf	___flge@ff1
  9719  1E47                     l3427:
  9720  1E47  1FF7               	btfss	___flge@ff2+3,7
  9721  1E48  2E4A               	goto	u4891
  9722  1E49  2E4B               	goto	u4890
  9723  1E4A                     u4891:
  9724  1E4A  2E6F               	goto	l668
  9725  1E4B                     u4890:
  9726  1E4B                     l3429:
  9727  1E4B  3000               	movlw	0
  9728  1E4C  00F8               	movwf	??___flge
  9729  1E4D  3000               	movlw	0
  9730  1E4E  00F9               	movwf	??___flge+1
  9731  1E4F  3000               	movlw	0
  9732  1E50  00FA               	movwf	??___flge+2
  9733  1E51  3080               	movlw	128
  9734  1E52  00FB               	movwf	??___flge+3
  9735  1E53  0874               	movf	___flge@ff2,w
  9736  1E54  02F8               	subwf	??___flge,f
  9737  1E55  0875               	movf	___flge@ff2+1,w
  9738  1E56  1C03               	skipc
  9739  1E57  0F75               	incfsz	___flge@ff2+1,w
  9740  1E58  2E5A               	goto	u4901
  9741  1E59  2E5B               	goto	u4902
  9742  1E5A                     u4901:
  9743  1E5A  02F9               	subwf	??___flge+1,f
  9744  1E5B                     u4902:
  9745  1E5B  0876               	movf	___flge@ff2+2,w
  9746  1E5C  1C03               	skipc
  9747  1E5D  0F76               	incfsz	___flge@ff2+2,w
  9748  1E5E  2E60               	goto	u4903
  9749  1E5F  2E61               	goto	u4904
  9750  1E60                     u4903:
  9751  1E60  02FA               	subwf	??___flge+2,f
  9752  1E61                     u4904:
  9753  1E61  0877               	movf	___flge@ff2+3,w
  9754  1E62  1C03               	skipc
  9755  1E63  0F77               	incfsz	___flge@ff2+3,w
  9756  1E64  2E66               	goto	u4905
  9757  1E65  2E67               	goto	u4906
  9758  1E66                     u4905:
  9759  1E66  02FB               	subwf	??___flge+3,f
  9760  1E67                     u4906:
  9761  1E67  087B               	movf	??___flge+3,w
  9762  1E68  00F7               	movwf	___flge@ff2+3
  9763  1E69  087A               	movf	??___flge+2,w
  9764  1E6A  00F6               	movwf	___flge@ff2+2
  9765  1E6B  0879               	movf	??___flge+1,w
  9766  1E6C  00F5               	movwf	___flge@ff2+1
  9767  1E6D  0878               	movf	??___flge,w
  9768  1E6E  00F4               	movwf	___flge@ff2
  9769  1E6F                     l668:
  9770  1E6F  3080               	movlw	128
  9771  1E70  06F3               	xorwf	___flge@ff1+3,f
  9772  1E71  3080               	movlw	128
  9773  1E72  06F7               	xorwf	___flge@ff2+3,f
  9774  1E73  0877               	movf	___flge@ff2+3,w
  9775  1E74  0273               	subwf	___flge@ff1+3,w
  9776  1E75  1D03               	skipz
  9777  1E76  2E81               	goto	u4915
  9778  1E77  0876               	movf	___flge@ff2+2,w
  9779  1E78  0272               	subwf	___flge@ff1+2,w
  9780  1E79  1D03               	skipz
  9781  1E7A  2E81               	goto	u4915
  9782  1E7B  0875               	movf	___flge@ff2+1,w
  9783  1E7C  0271               	subwf	___flge@ff1+1,w
  9784  1E7D  1D03               	skipz
  9785  1E7E  2E81               	goto	u4915
  9786  1E7F  0874               	movf	___flge@ff2,w
  9787  1E80  0270               	subwf	___flge@ff1,w
  9788  1E81                     u4915:
  9789  1E81  1803               	skipnc
  9790  1E82  2E84               	goto	u4911
  9791  1E83  2E85               	goto	u4910
  9792  1E84                     u4911:
  9793  1E84  2E87               	goto	l3433
  9794  1E85                     u4910:
  9795  1E85                     l3431:
  9796  1E85  1003               	clrc
  9797  1E86  2E88               	goto	l669
  9798  1E87                     l3433:
  9799  1E87  1403               	setc
  9800  1E88                     l669:
  9801  1E88  0008               	return
  9802  1E89                     __end_of___flge:
  9803                           
  9804                           	psect	text21
  9805  1BCA                     __ptext21:	
  9806 ;; *************** function ___fleq *****************
  9807 ;; Defined at:
  9808 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  ff1             4    0[COMMON] unsigned char 
  9811 ;;  ff2             4    4[COMMON] unsigned char 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;		None
  9814 ;; Return value:  Size  Location     Type
  9815 ;;		None               void
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9823 ;;      Params:         8       0       0       0       0
  9824 ;;      Locals:         0       0       0       0       0
  9825 ;;      Temps:          4       0       0       0       0
  9826 ;;      Totals:        12       0       0       0       0
  9827 ;;Total ram usage:       12 bytes
  9828 ;; Hardware stack levels used: 1
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_sprintf
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function ___fleq
  9838  1BCA                     ___fleq:
  9839  1BCA                     l3405:	
  9840                           ;incstack = 0
  9841                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9842                           
  9843  1BCA  3000               	movlw	0
  9844  1BCB  0570               	andwf	___fleq@ff1,w
  9845  1BCC  00F8               	movwf	??___fleq
  9846  1BCD  3000               	movlw	0
  9847  1BCE  0571               	andwf	___fleq@ff1+1,w
  9848  1BCF  00F9               	movwf	??___fleq+1
  9849  1BD0  3080               	movlw	128
  9850  1BD1  0572               	andwf	___fleq@ff1+2,w
  9851  1BD2  00FA               	movwf	??___fleq+2
  9852  1BD3  307F               	movlw	127
  9853  1BD4  0573               	andwf	___fleq@ff1+3,w
  9854  1BD5  00FB               	movwf	??___fleq+3
  9855  1BD6  087B               	movf	??___fleq+3,w
  9856  1BD7  047A               	iorwf	??___fleq+2,w
  9857  1BD8  0479               	iorwf	??___fleq+1,w
  9858  1BD9  0478               	iorwf	??___fleq,w
  9859  1BDA  1D03               	skipz
  9860  1BDB  2BDD               	goto	u4821
  9861  1BDC  2BDE               	goto	u4820
  9862  1BDD                     u4821:
  9863  1BDD  2BE6               	goto	l660
  9864  1BDE                     u4820:
  9865  1BDE                     l3407:
  9866  1BDE  3000               	movlw	0
  9867  1BDF  00F3               	movwf	___fleq@ff1+3
  9868  1BE0  3000               	movlw	0
  9869  1BE1  00F2               	movwf	___fleq@ff1+2
  9870  1BE2  3000               	movlw	0
  9871  1BE3  00F1               	movwf	___fleq@ff1+1
  9872  1BE4  3000               	movlw	0
  9873  1BE5  00F0               	movwf	___fleq@ff1
  9874  1BE6                     l660:
  9875  1BE6  3000               	movlw	0
  9876  1BE7  0574               	andwf	___fleq@ff2,w
  9877  1BE8  00F8               	movwf	??___fleq
  9878  1BE9  3000               	movlw	0
  9879  1BEA  0575               	andwf	___fleq@ff2+1,w
  9880  1BEB  00F9               	movwf	??___fleq+1
  9881  1BEC  3080               	movlw	128
  9882  1BED  0576               	andwf	___fleq@ff2+2,w
  9883  1BEE  00FA               	movwf	??___fleq+2
  9884  1BEF  307F               	movlw	127
  9885  1BF0  0577               	andwf	___fleq@ff2+3,w
  9886  1BF1  00FB               	movwf	??___fleq+3
  9887  1BF2  087B               	movf	??___fleq+3,w
  9888  1BF3  047A               	iorwf	??___fleq+2,w
  9889  1BF4  0479               	iorwf	??___fleq+1,w
  9890  1BF5  0478               	iorwf	??___fleq,w
  9891  1BF6  1D03               	skipz
  9892  1BF7  2BF9               	goto	u4831
  9893  1BF8  2BFA               	goto	u4830
  9894  1BF9                     u4831:
  9895  1BF9  2C02               	goto	l661
  9896  1BFA                     u4830:
  9897  1BFA                     l3409:
  9898  1BFA  3000               	movlw	0
  9899  1BFB  00F7               	movwf	___fleq@ff2+3
  9900  1BFC  3000               	movlw	0
  9901  1BFD  00F6               	movwf	___fleq@ff2+2
  9902  1BFE  3000               	movlw	0
  9903  1BFF  00F5               	movwf	___fleq@ff2+1
  9904  1C00  3000               	movlw	0
  9905  1C01  00F4               	movwf	___fleq@ff2
  9906  1C02                     l661:
  9907  1C02  0877               	movf	___fleq@ff2+3,w
  9908  1C03  0673               	xorwf	___fleq@ff1+3,w
  9909  1C04  1D03               	skipz
  9910  1C05  2C10               	goto	u4845
  9911  1C06  0876               	movf	___fleq@ff2+2,w
  9912  1C07  0672               	xorwf	___fleq@ff1+2,w
  9913  1C08  1D03               	skipz
  9914  1C09  2C10               	goto	u4845
  9915  1C0A  0875               	movf	___fleq@ff2+1,w
  9916  1C0B  0671               	xorwf	___fleq@ff1+1,w
  9917  1C0C  1D03               	skipz
  9918  1C0D  2C10               	goto	u4845
  9919  1C0E  0874               	movf	___fleq@ff2,w
  9920  1C0F  0670               	xorwf	___fleq@ff1,w
  9921  1C10                     u4845:
  9922  1C10  1903               	skipnz
  9923  1C11  2C13               	goto	u4841
  9924  1C12  2C14               	goto	u4840
  9925  1C13                     u4841:
  9926  1C13  2C16               	goto	l3413
  9927  1C14                     u4840:
  9928  1C14                     l3411:
  9929  1C14  1003               	clrc
  9930  1C15  2C17               	goto	l662
  9931  1C16                     l3413:
  9932  1C16  1403               	setc
  9933  1C17                     l662:
  9934  1C17  0008               	return
  9935  1C18                     __end_of___fleq:
  9936                           
  9937                           	psect	text22
  9938  1B48                     __ptext22:	
  9939 ;; *************** function _setup *****************
  9940 ;; Defined at:
  9941 ;;		line 100 in file "pro.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;		None
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;		None
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1    wreg      void 
  9948 ;; Registers used:
  9949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9955 ;;      Params:         0       0       0       0       0
  9956 ;;      Locals:         0       0       0       0       0
  9957 ;;      Temps:          0       0       0       0       0
  9958 ;;      Totals:         0       0       0       0       0
  9959 ;;Total ram usage:        0 bytes
  9960 ;; Hardware stack levels used: 1
  9961 ;; Hardware stack levels required when called: 1
  9962 ;; This function calls:
  9963 ;;		_ADC_config
  9964 ;; This function is called by:
  9965 ;;		_main
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           
  9970                           ;psect for function _setup
  9971  1B48                     _setup:
  9972  1B48                     l3583:	
  9973                           ;incstack = 0
  9974                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9975                           
  9976                           
  9977                           ;pro.c: 102: 
  9978  1B48  1683               	bsf	3,5	;RP0=1, select bank3
  9979  1B49  1703               	bsf	3,6	;RP1=1, select bank3
  9980  1B4A  0188               	clrf	8	;volatile
  9981                           
  9982                           ;pro.c: 106:     BAUDCTLbits.BRG16 = 1;
  9983  1B4B  1683               	bsf	3,5	;RP0=1, select bank1
  9984  1B4C  1303               	bcf	3,6	;RP1=0, select bank1
  9985  1B4D  0185               	clrf	5	;volatile
  9986                           
  9987                           ;pro.c: 107: 
  9988  1B4E  0186               	clrf	6	;volatile
  9989                           
  9990                           ;pro.c: 108:     SPBRG = 207;
  9991  1B4F  0188               	clrf	8	;volatile
  9992  1B50                     l3585:
  9993                           
  9994                           ;pro.c: 109:     SPBRGH = 0;
  9995  1B50  3080               	movlw	128
  9996  1B51  0087               	movwf	7	;volatile
  9997  1B52                     l3587:
  9998                           
  9999                           ;pro.c: 113:     RCSTAbits.CREN = 1;
 10000  1B52  3070               	movlw	112
 10001  1B53  048F               	iorwf	15,f	;volatile
 10002  1B54                     l3589:
 10003                           
 10004                           ;pro.c: 114:     TXSTAbits.TX9 = 0;
 10005  1B54  140F               	bsf	15,0	;volatile
 10006  1B55                     l3591:
 10007                           
 10008                           ;pro.c: 117: 
 10009  1B55  170C               	bsf	12,6	;volatile
 10010  1B56                     l3593:
 10011                           
 10012                           ;pro.c: 118:     PIR1bits.RCIF = 0;
 10013  1B56  1283               	bcf	3,5	;RP0=0, select bank0
 10014  1B57  1303               	bcf	3,6	;RP1=0, select bank0
 10015  1B58  130C               	bcf	12,6	;volatile
 10016  1B59                     l3595:
 10017                           
 10018                           ;pro.c: 119:     PIR1bits.TXIF = 0;
 10019  1B59  178B               	bsf	11,7	;volatile
 10020  1B5A                     l3597:
 10021                           
 10022                           ;pro.c: 120: 
 10023  1B5A  170B               	bsf	11,6	;volatile
 10024  1B5B                     l3599:
 10025                           
 10026                           ;pro.c: 121: }
 10027  1B5B  1683               	bsf	3,5	;RP0=1, select bank1
 10028  1B5C  1303               	bcf	3,6	;RP1=0, select bank1
 10029  1B5D  128C               	bcf	12,5	;volatile
 10030  1B5E                     l3601:
 10031  1B5E  120C               	bcf	12,4	;volatile
 10032  1B5F                     l3603:
 10033  1B5F  1283               	bcf	3,5	;RP0=0, select bank0
 10034  1B60  1303               	bcf	3,6	;RP1=0, select bank0
 10035  1B61  0185               	clrf	5	;volatile
 10036  1B62                     l3605:
 10037  1B62  0186               	clrf	6	;volatile
 10038  1B63                     l3607:
 10039  1B63  0187               	clrf	7	;volatile
 10040  1B64                     l3609:
 10041  1B64  0188               	clrf	8	;volatile
 10042  1B65                     l3611:
 10043  1B65  0189               	clrf	9	;volatile
 10044  1B66                     l3613:
 10045  1B66  3000               	movlw	0
 10046  1B67  160A  158A  257E  160A  158A  	fcall	_ADC_config
 10047  1B6C                     l3615:
 10048  1B6C  1683               	bsf	3,5	;RP0=1, select bank1
 10049  1B6D  1303               	bcf	3,6	;RP1=0, select bank1
 10050  1B6E  1218               	bcf	24,4	;volatile
 10051  1B6F                     l3617:
 10052  1B6F  1518               	bsf	24,2	;volatile
 10053  1B70                     l3619:
 10054  1B70  1683               	bsf	3,5	;RP0=1, select bank3
 10055  1B71  1703               	bsf	3,6	;RP1=1, select bank3
 10056  1B72  1587               	bsf	7,3	;volatile
 10057  1B73                     l3621:
 10058  1B73  30CF               	movlw	207
 10059  1B74  1683               	bsf	3,5	;RP0=1, select bank1
 10060  1B75  1303               	bcf	3,6	;RP1=0, select bank1
 10061  1B76  0099               	movwf	25	;volatile
 10062  1B77                     l3623:
 10063  1B77  019A               	clrf	26	;volatile
 10064  1B78                     l3625:
 10065  1B78  1283               	bcf	3,5	;RP0=0, select bank0
 10066  1B79  1303               	bcf	3,6	;RP1=0, select bank0
 10067  1B7A  1798               	bsf	24,7	;volatile
 10068  1B7B                     l3627:
 10069  1B7B  1318               	bcf	24,6	;volatile
 10070  1B7C                     l3629:
 10071  1B7C  1618               	bsf	24,4	;volatile
 10072  1B7D                     l3631:
 10073  1B7D  1683               	bsf	3,5	;RP0=1, select bank1
 10074  1B7E  1303               	bcf	3,6	;RP1=0, select bank1
 10075  1B7F  1318               	bcf	24,6	;volatile
 10076  1B80                     l3633:
 10077  1B80  1698               	bsf	24,5	;volatile
 10078  1B81                     l3635:
 10079  1B81  1283               	bcf	3,5	;RP0=0, select bank0
 10080  1B82  1303               	bcf	3,6	;RP1=0, select bank0
 10081  1B83  128C               	bcf	12,5	;volatile
 10082  1B84                     l3637:
 10083  1B84  120C               	bcf	12,4	;volatile
 10084  1B85                     l190:
 10085  1B85  0008               	return
 10086  1B86                     __end_of_setup:
 10087                           
 10088                           	psect	text23
 10089  1D7E                     __ptext23:	
 10090 ;; *************** function _ADC_config *****************
 10091 ;; Defined at:
 10092 ;;		line 22 in file "adc.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;  frec            1    wreg     unsigned char 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;  frec            1    2[COMMON] unsigned char 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  1    wreg      void 
 10099 ;; Registers used:
 10100 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10106 ;;      Params:         0       0       0       0       0
 10107 ;;      Locals:         1       0       0       0       0
 10108 ;;      Temps:          2       0       0       0       0
 10109 ;;      Totals:         3       0       0       0       0
 10110 ;;Total ram usage:        3 bytes
 10111 ;; Hardware stack levels used: 1
 10112 ;; This function calls:
 10113 ;;		Nothing
 10114 ;; This function is called by:
 10115 ;;		_setup
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           
 10120                           ;psect for function _ADC_config
 10121  1D7E                     _ADC_config:
 10122                           
 10123                           ;incstack = 0
 10124                           ; Regs used in _ADC_config: [wreg-fsr0h+status,2+status,0]
 10125                           ;ADC_config@frec stored from wreg
 10126  1D7E  00F2               	movwf	ADC_config@frec
 10127  1D7F                     l3111:
 10128                           
 10129                           ;adc.c: 23:     switch(frec){
 10130  1D7F  2DD0               	goto	l3179
 10131  1D80                     l3113:
 10132                           
 10133                           ;adc.c: 25:             ADCON0bits.CHS = 0;
 10134  1D80  30C3               	movlw	-61
 10135  1D81  1283               	bcf	3,5	;RP0=0, select bank0
 10136  1D82  1303               	bcf	3,6	;RP1=0, select bank0
 10137  1D83  059F               	andwf	31,f	;volatile
 10138  1D84                     l3115:
 10139                           
 10140                           ;adc.c: 26:             _delay((unsigned long)((100)*(8000000/4000000.0)));
 10141  1D84  3042               	movlw	66
 10142  1D85  00F0               	movwf	??_ADC_config
 10143  1D86                     u5797:
 10144  1D86  0BF0               	decfsz	??_ADC_config,f
 10145  1D87  2D86               	goto	u5797
 10146  1D88  0000               	nop
 10147  1D89                     l3117:
 10148                           
 10149                           ;adc.c: 28:             ADCON0bits.ADCS0 = 0;
 10150  1D89  1283               	bcf	3,5	;RP0=0, select bank0
 10151  1D8A  1303               	bcf	3,6	;RP1=0, select bank0
 10152  1D8B  131F               	bcf	31,6	;volatile
 10153  1D8C                     l3119:
 10154                           
 10155                           ;adc.c: 29:             ADCON0bits.ADCS1 = 0;
 10156  1D8C  139F               	bcf	31,7	;volatile
 10157  1D8D                     l3121:
 10158                           
 10159                           ;adc.c: 30:             ADCON0bits.ADON = 1;
 10160  1D8D  141F               	bsf	31,0	;volatile
 10161  1D8E                     l3123:
 10162                           
 10163                           ;adc.c: 31:             ADCON1bits.ADFM = 0;
 10164  1D8E  1683               	bsf	3,5	;RP0=1, select bank1
 10165  1D8F  1303               	bcf	3,6	;RP1=0, select bank1
 10166  1D90  139F               	bcf	31,7	;volatile
 10167  1D91                     l3125:
 10168                           
 10169                           ;adc.c: 32:             ADCON1bits.VCFG1 = 0;
 10170  1D91  129F               	bcf	31,5	;volatile
 10171  1D92                     l3127:
 10172                           
 10173                           ;adc.c: 33:             ADCON1bits.VCFG0 = 0;
 10174  1D92  121F               	bcf	31,4	;volatile
 10175                           
 10176                           ;adc.c: 34:             break;
 10177  1D93  2DE6               	goto	l88
 10178  1D94                     l3129:
 10179                           
 10180                           ;adc.c: 36:             ADCON0bits.CHS = 0;
 10181  1D94  30C3               	movlw	-61
 10182  1D95  1283               	bcf	3,5	;RP0=0, select bank0
 10183  1D96  1303               	bcf	3,6	;RP1=0, select bank0
 10184  1D97  059F               	andwf	31,f	;volatile
 10185  1D98                     l3131:
 10186                           
 10187                           ;adc.c: 37:             _delay((unsigned long)((100)*(8000000/4000000.0)));
 10188  1D98  3042               	movlw	66
 10189  1D99  00F0               	movwf	??_ADC_config
 10190  1D9A                     u5807:
 10191  1D9A  0BF0               	decfsz	??_ADC_config,f
 10192  1D9B  2D9A               	goto	u5807
 10193  1D9C  0000               	nop
 10194  1D9D                     l3133:
 10195                           
 10196                           ;adc.c: 39:             ADCON0bits.ADCS0 = 1;
 10197  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
 10198  1D9E  1303               	bcf	3,6	;RP1=0, select bank0
 10199  1D9F  171F               	bsf	31,6	;volatile
 10200  1DA0                     l3135:
 10201                           
 10202                           ;adc.c: 40:             ADCON0bits.ADCS1 = 0;
 10203  1DA0  139F               	bcf	31,7	;volatile
 10204  1DA1                     l3137:
 10205                           
 10206                           ;adc.c: 41:             ADCON0bits.ADON = 1;
 10207  1DA1  141F               	bsf	31,0	;volatile
 10208  1DA2                     l3139:
 10209                           
 10210                           ;adc.c: 42:             ADCON1bits.ADFM = 0;
 10211  1DA2  1683               	bsf	3,5	;RP0=1, select bank1
 10212  1DA3  1303               	bcf	3,6	;RP1=0, select bank1
 10213  1DA4  139F               	bcf	31,7	;volatile
 10214  1DA5                     l3141:
 10215                           
 10216                           ;adc.c: 43:             ADCON1bits.VCFG1 = 0;
 10217  1DA5  129F               	bcf	31,5	;volatile
 10218  1DA6                     l3143:
 10219                           
 10220                           ;adc.c: 44:             ADCON1bits.VCFG0 = 0;
 10221  1DA6  121F               	bcf	31,4	;volatile
 10222                           
 10223                           ;adc.c: 45:             break;
 10224  1DA7  2DE6               	goto	l88
 10225  1DA8                     l3145:
 10226                           
 10227                           ;adc.c: 47:             ADCON0bits.CHS = 0;
 10228  1DA8  30C3               	movlw	-61
 10229  1DA9  1283               	bcf	3,5	;RP0=0, select bank0
 10230  1DAA  1303               	bcf	3,6	;RP1=0, select bank0
 10231  1DAB  059F               	andwf	31,f	;volatile
 10232  1DAC                     l3147:
 10233                           
 10234                           ;adc.c: 48:             _delay((unsigned long)((100)*(8000000/4000000.0)));
 10235  1DAC  3042               	movlw	66
 10236  1DAD  00F0               	movwf	??_ADC_config
 10237  1DAE                     u5817:
 10238  1DAE  0BF0               	decfsz	??_ADC_config,f
 10239  1DAF  2DAE               	goto	u5817
 10240  1DB0  0000               	nop
 10241  1DB1                     l3149:
 10242                           
 10243                           ;adc.c: 50:             ADCON0bits.ADCS0 = 0;
 10244  1DB1  1283               	bcf	3,5	;RP0=0, select bank0
 10245  1DB2  1303               	bcf	3,6	;RP1=0, select bank0
 10246  1DB3  131F               	bcf	31,6	;volatile
 10247  1DB4                     l3151:
 10248                           
 10249                           ;adc.c: 51:             ADCON0bits.ADCS1 = 1;
 10250  1DB4  179F               	bsf	31,7	;volatile
 10251  1DB5                     l3153:
 10252                           
 10253                           ;adc.c: 52:             ADCON0bits.ADON = 1;
 10254  1DB5  141F               	bsf	31,0	;volatile
 10255  1DB6                     l3155:
 10256                           
 10257                           ;adc.c: 53:             ADCON1bits.ADFM = 0;
 10258  1DB6  1683               	bsf	3,5	;RP0=1, select bank1
 10259  1DB7  1303               	bcf	3,6	;RP1=0, select bank1
 10260  1DB8  139F               	bcf	31,7	;volatile
 10261  1DB9                     l3157:
 10262                           
 10263                           ;adc.c: 54:             ADCON1bits.VCFG1 = 0;
 10264  1DB9  129F               	bcf	31,5	;volatile
 10265  1DBA                     l3159:
 10266                           
 10267                           ;adc.c: 55:             ADCON1bits.VCFG0 = 0;
 10268  1DBA  121F               	bcf	31,4	;volatile
 10269                           
 10270                           ;adc.c: 56:             break;
 10271  1DBB  2DE6               	goto	l88
 10272  1DBC                     l3161:
 10273                           
 10274                           ;adc.c: 58:             ADCON0bits.CHS = 0;
 10275  1DBC  30C3               	movlw	-61
 10276  1DBD  1283               	bcf	3,5	;RP0=0, select bank0
 10277  1DBE  1303               	bcf	3,6	;RP1=0, select bank0
 10278  1DBF  059F               	andwf	31,f	;volatile
 10279  1DC0                     l3163:
 10280                           
 10281                           ;adc.c: 59:             _delay((unsigned long)((100)*(8000000/4000000.0)));
 10282  1DC0  3042               	movlw	66
 10283  1DC1  00F0               	movwf	??_ADC_config
 10284  1DC2                     u5827:
 10285  1DC2  0BF0               	decfsz	??_ADC_config,f
 10286  1DC3  2DC2               	goto	u5827
 10287  1DC4  0000               	nop
 10288  1DC5                     l3165:
 10289                           
 10290                           ;adc.c: 61:             ADCON0bits.ADCS0 = 1;
 10291  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
 10292  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
 10293  1DC7  171F               	bsf	31,6	;volatile
 10294  1DC8                     l3167:
 10295                           
 10296                           ;adc.c: 62:             ADCON0bits.ADCS1 = 1;
 10297  1DC8  179F               	bsf	31,7	;volatile
 10298  1DC9                     l3169:
 10299                           
 10300                           ;adc.c: 63:             ADCON0bits.ADON = 1;
 10301  1DC9  141F               	bsf	31,0	;volatile
 10302  1DCA                     l3171:
 10303                           
 10304                           ;adc.c: 64:             ADCON1bits.ADFM = 0;
 10305  1DCA  1683               	bsf	3,5	;RP0=1, select bank1
 10306  1DCB  1303               	bcf	3,6	;RP1=0, select bank1
 10307  1DCC  139F               	bcf	31,7	;volatile
 10308  1DCD                     l3173:
 10309                           
 10310                           ;adc.c: 65:             ADCON1bits.VCFG1 = 0;
 10311  1DCD  129F               	bcf	31,5	;volatile
 10312  1DCE                     l3175:
 10313                           
 10314                           ;adc.c: 66:             ADCON1bits.VCFG0 = 0;
 10315  1DCE  121F               	bcf	31,4	;volatile
 10316                           
 10317                           ;adc.c: 67:             break;
 10318  1DCF  2DE6               	goto	l88
 10319  1DD0                     l3179:
 10320  1DD0  0872               	movf	ADC_config@frec,w
 10321  1DD1  00F0               	movwf	??_ADC_config
 10322  1DD2  01F1               	clrf	??_ADC_config+1
 10323                           
 10324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10325                           ; Switch size 1, requested type "simple"
 10326                           ; Number of cases is 1, Range of values is 0 to 0
 10327                           ; switch strategies available:
 10328                           ; Name         Instructions Cycles
 10329                           ; simple_byte            4     3 (average)
 10330                           ; direct_byte           11     8 (fixed)
 10331                           ; jumptable            260     6 (fixed)
 10332                           ;	Chosen strategy is simple_byte
 10333  1DD3  0871               	movf	??_ADC_config+1,w
 10334  1DD4  3A00               	xorlw	0	; case 0
 10335  1DD5  1903               	skipnz
 10336  1DD6  2DD8               	goto	l4095
 10337  1DD7  2DE6               	goto	l88
 10338  1DD8                     l4095:
 10339                           
 10340                           ; Switch size 1, requested type "simple"
 10341                           ; Number of cases is 4, Range of values is 0 to 3
 10342                           ; switch strategies available:
 10343                           ; Name         Instructions Cycles
 10344                           ; simple_byte           13     7 (average)
 10345                           ; direct_byte           20     8 (fixed)
 10346                           ; jumptable            260     6 (fixed)
 10347                           ;	Chosen strategy is simple_byte
 10348  1DD8  0870               	movf	??_ADC_config,w
 10349  1DD9  3A00               	xorlw	0	; case 0
 10350  1DDA  1903               	skipnz
 10351  1DDB  2D80               	goto	l3113
 10352  1DDC  3A01               	xorlw	1	; case 1
 10353  1DDD  1903               	skipnz
 10354  1DDE  2D94               	goto	l3129
 10355  1DDF  3A03               	xorlw	3	; case 2
 10356  1DE0  1903               	skipnz
 10357  1DE1  2DA8               	goto	l3145
 10358  1DE2  3A01               	xorlw	1	; case 3
 10359  1DE3  1903               	skipnz
 10360  1DE4  2DBC               	goto	l3161
 10361  1DE5  2DE6               	goto	l88
 10362  1DE6                     l88:
 10363  1DE6  0008               	return
 10364  1DE7                     __end_of_ADC_config:
 10365                           
 10366                           	psect	text24
 10367  19E5                     __ptext24:	
 10368 ;; *************** function _enviocadena *****************
 10369 ;; Defined at:
 10370 ;;		line 51 in file "uart.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  cadena          1    wreg     PTR unsigned char 
 10373 ;;		 -> main@volt(16), 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  cadena          1    2[COMMON] PTR unsigned char 
 10376 ;;		 -> main@volt(16), 
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      void 
 10379 ;; Registers used:
 10380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10386 ;;      Params:         0       0       0       0       0
 10387 ;;      Locals:         1       0       0       0       0
 10388 ;;      Temps:          1       0       0       0       0
 10389 ;;      Totals:         2       0       0       0       0
 10390 ;;Total ram usage:        2 bytes
 10391 ;; Hardware stack levels used: 1
 10392 ;; Hardware stack levels required when called: 1
 10393 ;; This function calls:
 10394 ;;		_enviocaracter
 10395 ;; This function is called by:
 10396 ;;		_main
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           
 10401                           ;psect for function _enviocadena
 10402  19E5                     _enviocadena:
 10403                           
 10404                           ;incstack = 0
 10405                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10406                           ;enviocadena@cadena stored from wreg
 10407  19E5  00F2               	movwf	enviocadena@cadena
 10408  19E6                     l3917:
 10409                           
 10410                           ;uart.c: 52:     while (*cadena != 0){
 10411  19E6  29F3               	goto	l3923
 10412  19E7                     l3919:
 10413                           
 10414                           ;uart.c: 53:       enviocaracter(*cadena);
 10415  19E7  0872               	movf	enviocadena@cadena,w
 10416  19E8  0084               	movwf	4
 10417  19E9  0800               	movf	0,w
 10418  19EA  160A  158A  2193  160A  158A  	fcall	_enviocaracter
 10419  19EF                     l3921:
 10420                           
 10421                           ;uart.c: 54:       cadena++;
 10422  19EF  3001               	movlw	1
 10423  19F0  00F1               	movwf	??_enviocadena
 10424  19F1  0871               	movf	??_enviocadena,w
 10425  19F2  07F2               	addwf	enviocadena@cadena,f
 10426  19F3                     l3923:
 10427                           
 10428                           ;uart.c: 52:     while (*cadena != 0){
 10429  19F3  0872               	movf	enviocadena@cadena,w
 10430  19F4  0084               	movwf	4
 10431  19F5  1383               	bcf	3,7	;select IRP bank0
 10432  19F6  0800               	movf	0,w
 10433  19F7  1D03               	btfss	3,2
 10434  19F8  29FA               	goto	u5711
 10435  19F9  29FB               	goto	u5710
 10436  19FA                     u5711:
 10437  19FA  29E7               	goto	l3919
 10438  19FB                     u5710:
 10439  19FB                     l229:
 10440                           
 10441                           ;uart.c: 56:     if (PIR1bits.TXIF){
 10442  19FB  1283               	bcf	3,5	;RP0=0, select bank0
 10443  19FC  1303               	bcf	3,6	;RP1=0, select bank0
 10444  19FD  1E0C               	btfss	12,4	;volatile
 10445  19FE  2A00               	goto	u5721
 10446  19FF  2A01               	goto	u5720
 10447  1A00                     u5721:
 10448  1A00  2A03               	goto	l231
 10449  1A01                     u5720:
 10450  1A01                     l3925:
 10451                           
 10452                           ;uart.c: 57:             TXREG = 13;
 10453  1A01  300D               	movlw	13
 10454  1A02  0099               	movwf	25	;volatile
 10455  1A03                     l231:
 10456  1A03  0008               	return
 10457  1A04                     __end_of_enviocadena:
 10458                           
 10459                           	psect	text25
 10460  1993                     __ptext25:	
 10461 ;; *************** function _enviocaracter *****************
 10462 ;; Defined at:
 10463 ;;		line 42 in file "uart.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;  a               1    wreg     unsigned char 
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;  a               1    0[COMMON] unsigned char 
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      void 
 10470 ;; Registers used:
 10471 ;;		wreg
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10477 ;;      Params:         0       0       0       0       0
 10478 ;;      Locals:         1       0       0       0       0
 10479 ;;      Temps:          0       0       0       0       0
 10480 ;;      Totals:         1       0       0       0       0
 10481 ;;Total ram usage:        1 bytes
 10482 ;; Hardware stack levels used: 1
 10483 ;; This function calls:
 10484 ;;		Nothing
 10485 ;; This function is called by:
 10486 ;;		_enviocadena
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           
 10491                           ;psect for function _enviocaracter
 10492  1993                     _enviocaracter:
 10493                           
 10494                           ;incstack = 0
 10495                           ; Regs used in _enviocaracter: [wreg]
 10496                           ;enviocaracter@a stored from wreg
 10497  1993  00F0               	movwf	enviocaracter@a
 10498  1994                     l3185:
 10499  1994                     l220:	
 10500                           ;uart.c: 45:     }
 10501                           
 10502                           
 10503                           ;uart.c: 43:     while (TXSTAbits.TRMT == 0){
 10504  1994  1683               	bsf	3,5	;RP0=1, select bank1
 10505  1995  1303               	bcf	3,6	;RP1=0, select bank1
 10506  1996  1C98               	btfss	24,1	;volatile
 10507  1997  2999               	goto	u4141
 10508  1998  299A               	goto	u4140
 10509  1999                     u4141:
 10510  1999  2994               	goto	l220
 10511  199A                     u4140:
 10512  199A                     l222:
 10513                           
 10514                           ;uart.c: 46:     if (PIR1bits.TXIF){
 10515  199A  1283               	bcf	3,5	;RP0=0, select bank0
 10516  199B  1303               	bcf	3,6	;RP1=0, select bank0
 10517  199C  1E0C               	btfss	12,4	;volatile
 10518  199D  299F               	goto	u4151
 10519  199E  29A0               	goto	u4150
 10520  199F                     u4151:
 10521  199F  29A2               	goto	l224
 10522  19A0                     u4150:
 10523  19A0                     l3187:
 10524                           
 10525                           ;uart.c: 47:             TXREG = a;
 10526  19A0  0870               	movf	enviocaracter@a,w
 10527  19A1  0099               	movwf	25	;volatile
 10528  19A2                     l224:
 10529  19A2  0008               	return
 10530  19A3                     __end_of_enviocaracter:
 10531                           
 10532                           	psect	text26
 10533  0004                     __ptext26:	
 10534 ;; *************** function _Lcd_Write_String *****************
 10535 ;; Defined at:
 10536 ;;		line 102 in file "lcd.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  a               2    3[COMMON] PTR unsigned char 
 10539 ;;		 -> main@volt(16), STR_1(15), 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;  i               2    8[COMMON] int 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10551 ;;      Params:         2       0       0       0       0
 10552 ;;      Locals:         2       0       0       0       0
 10553 ;;      Temps:          3       0       0       0       0
 10554 ;;      Totals:         7       0       0       0       0
 10555 ;;Total ram usage:        7 bytes
 10556 ;; Hardware stack levels used: 1
 10557 ;; Hardware stack levels required when called: 2
 10558 ;; This function calls:
 10559 ;;		_Lcd_Write_Char
 10560 ;; This function is called by:
 10561 ;;		_main
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _Lcd_Write_String
 10567  0004                     _Lcd_Write_String:
 10568  0004                     l3575:	
 10569                           ;incstack = 0
 10570                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10571                           
 10572                           
 10573                           ;lcd.c: 103:     int i;;lcd.c: 104:     for (i = 0; a[i] != '\0'; i++)
 10574  0004  01F8               	clrf	Lcd_Write_String@i
 10575  0005  01F9               	clrf	Lcd_Write_String@i+1
 10576  0006  2829               	goto	l3581
 10577  0007                     l3577:
 10578                           
 10579                           ;lcd.c: 105:         Lcd_Write_Char(a[i]);
 10580  0007  0878               	movf	Lcd_Write_String@i,w
 10581  0008  0773               	addwf	Lcd_Write_String@a,w
 10582  0009  00F6               	movwf	??_Lcd_Write_String+1
 10583  000A  0874               	movf	Lcd_Write_String@a+1,w
 10584  000B  00F5               	movwf	??_Lcd_Write_String
 10585  000C  1803               	skipnc
 10586  000D  0AF5               	incf	??_Lcd_Write_String,f
 10587  000E  1FF8               	btfss	Lcd_Write_String@i,7
 10588  000F  2811               	goto	u5250
 10589  0010  03F5               	decf	??_Lcd_Write_String,f
 10590  0011                     u5250:
 10591  0011  0875               	movf	??_Lcd_Write_String,w
 10592  0012  00F7               	movwf	??_Lcd_Write_String+2
 10593  0013  0877               	movf	??_Lcd_Write_String+2,w
 10594  0014  1283               	bcf	3,5	;RP0=0, select bank0
 10595  0015  1303               	bcf	3,6	;RP1=0, select bank0
 10596  0016  00FF               	movwf	btemp+1
 10597  0017  0876               	movf	??_Lcd_Write_String+1,w
 10598  0018  0084               	movwf	4
 10599  0019  120A  158A  2000  120A  118A  	fcall	stringtab
 10600  001E  160A  158A  21B5  120A  118A  	fcall	_Lcd_Write_Char
 10601  0023                     l3579:
 10602  0023  3001               	movlw	1
 10603  0024  07F8               	addwf	Lcd_Write_String@i,f
 10604  0025  1803               	skipnc
 10605  0026  0AF9               	incf	Lcd_Write_String@i+1,f
 10606  0027  3000               	movlw	0
 10607  0028  07F9               	addwf	Lcd_Write_String@i+1,f
 10608  0029                     l3581:
 10609  0029  0878               	movf	Lcd_Write_String@i,w
 10610  002A  0773               	addwf	Lcd_Write_String@a,w
 10611  002B  00F6               	movwf	??_Lcd_Write_String+1
 10612  002C  0874               	movf	Lcd_Write_String@a+1,w
 10613  002D  00F5               	movwf	??_Lcd_Write_String
 10614  002E  1803               	skipnc
 10615  002F  0AF5               	incf	??_Lcd_Write_String,f
 10616  0030  1FF8               	btfss	Lcd_Write_String@i,7
 10617  0031  2833               	goto	u5260
 10618  0032  03F5               	decf	??_Lcd_Write_String,f
 10619  0033                     u5260:
 10620  0033  0875               	movf	??_Lcd_Write_String,w
 10621  0034  00F7               	movwf	??_Lcd_Write_String+2
 10622  0035  0877               	movf	??_Lcd_Write_String+2,w
 10623  0036  1283               	bcf	3,5	;RP0=0, select bank0
 10624  0037  1303               	bcf	3,6	;RP1=0, select bank0
 10625  0038  00FF               	movwf	btemp+1
 10626  0039  0876               	movf	??_Lcd_Write_String+1,w
 10627  003A  0084               	movwf	4
 10628  003B  120A  158A  2000  120A  118A  	fcall	stringtab
 10629  0040  3A00               	xorlw	0
 10630  0041  1D03               	skipz
 10631  0042  2844               	goto	u5271
 10632  0043  2845               	goto	u5270
 10633  0044                     u5271:
 10634  0044  2807               	goto	l3577
 10635  0045                     u5270:
 10636  0045                     l67:
 10637  0045  0008               	return
 10638  0046                     __end_of_Lcd_Write_String:
 10639                           
 10640                           	psect	text27
 10641  19B5                     __ptext27:	
 10642 ;; *************** function _Lcd_Write_Char *****************
 10643 ;; Defined at:
 10644 ;;		line 94 in file "lcd.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  a               1    wreg     unsigned char 
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;  a               1    2[COMMON] unsigned char 
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		wreg, status,2, status,0, pclath, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10658 ;;      Params:         0       0       0       0       0
 10659 ;;      Locals:         1       0       0       0       0
 10660 ;;      Temps:          1       0       0       0       0
 10661 ;;      Totals:         2       0       0       0       0
 10662 ;;Total ram usage:        2 bytes
 10663 ;; Hardware stack levels used: 1
 10664 ;; Hardware stack levels required when called: 1
 10665 ;; This function calls:
 10666 ;;		_Lcd_Port
 10667 ;; This function is called by:
 10668 ;;		_Lcd_Write_String
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           
 10673                           ;psect for function _Lcd_Write_Char
 10674  19B5                     _Lcd_Write_Char:
 10675                           
 10676                           ;incstack = 0
 10677                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10678                           ;Lcd_Write_Char@a stored from wreg
 10679  19B5  00F2               	movwf	Lcd_Write_Char@a
 10680  19B6                     l3101:
 10681                           
 10682                           ;lcd.c: 95:     RC0 = 1;
 10683  19B6  1283               	bcf	3,5	;RP0=0, select bank0
 10684  19B7  1303               	bcf	3,6	;RP1=0, select bank0
 10685  19B8  1407               	bsf	7,0	;volatile
 10686  19B9                     l3103:
 10687                           
 10688                           ;lcd.c: 96:     Lcd_Port(a);
 10689  19B9  0872               	movf	Lcd_Write_Char@a,w
 10690  19BA  160A  158A  230A  160A  158A  	fcall	_Lcd_Port
 10691  19BF                     l3105:
 10692                           
 10693                           ;lcd.c: 97:     RC1 = 1;
 10694  19BF  1283               	bcf	3,5	;RP0=0, select bank0
 10695  19C0  1303               	bcf	3,6	;RP1=0, select bank0
 10696  19C1  1487               	bsf	7,1	;volatile
 10697  19C2                     l3107:
 10698                           
 10699                           ;lcd.c: 98:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10700  19C2  301A               	movlw	26
 10701  19C3  00F1               	movwf	??_Lcd_Write_Char
 10702  19C4                     u5837:
 10703  19C4  0BF1               	decfsz	??_Lcd_Write_Char,f
 10704  19C5  29C4               	goto	u5837
 10705  19C6  0000               	nop
 10706  19C7                     l3109:
 10707                           
 10708                           ;lcd.c: 99:     RC1 = 0;
 10709  19C7  1283               	bcf	3,5	;RP0=0, select bank0
 10710  19C8  1303               	bcf	3,6	;RP1=0, select bank0
 10711  19C9  1087               	bcf	7,1	;volatile
 10712  19CA                     l61:
 10713  19CA  0008               	return
 10714  19CB                     __end_of_Lcd_Write_Char:
 10715                           
 10716                           	psect	text28
 10717  1A04                     __ptext28:	
 10718 ;; *************** function _Lcd_Set_Cursor *****************
 10719 ;; Defined at:
 10720 ;;		line 66 in file "lcd.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;  a               1    wreg     unsigned char 
 10723 ;;  b               1    4[COMMON] unsigned char 
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;  a               1    6[COMMON] unsigned char 
 10726 ;;  temp            1    7[COMMON] unsigned char 
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, status,2, status,0, pclath, cstack
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10736 ;;      Params:         1       0       0       0       0
 10737 ;;      Locals:         2       0       0       0       0
 10738 ;;      Temps:          1       0       0       0       0
 10739 ;;      Totals:         4       0       0       0       0
 10740 ;;Total ram usage:        4 bytes
 10741 ;; Hardware stack levels used: 1
 10742 ;; Hardware stack levels required when called: 2
 10743 ;; This function calls:
 10744 ;;		_Lcd_Cmd
 10745 ;; This function is called by:
 10746 ;;		_main
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           
 10751                           ;psect for function _Lcd_Set_Cursor
 10752  1A04                     _Lcd_Set_Cursor:
 10753                           
 10754                           ;incstack = 0
 10755                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10756                           ;Lcd_Set_Cursor@a stored from wreg
 10757  1A04  00F6               	movwf	Lcd_Set_Cursor@a
 10758  1A05                     l3553:
 10759                           
 10760                           ;lcd.c: 67:     unsigned char temp;;lcd.c: 68:     if (a == 1) {
 10761  1A05  0376               	decf	Lcd_Set_Cursor@a,w
 10762  1A06  1D03               	btfss	3,2
 10763  1A07  2A09               	goto	u5231
 10764  1A08  2A0A               	goto	u5230
 10765  1A09                     u5231:
 10766  1A09  2A16               	goto	l3559
 10767  1A0A                     u5230:
 10768  1A0A                     l3555:
 10769                           
 10770                           ;lcd.c: 69:         temp = 0x80 + b - 1;
 10771  1A0A  0874               	movf	Lcd_Set_Cursor@b,w
 10772  1A0B  3E7F               	addlw	127
 10773  1A0C  00F5               	movwf	??_Lcd_Set_Cursor
 10774  1A0D  0875               	movf	??_Lcd_Set_Cursor,w
 10775  1A0E  00F7               	movwf	Lcd_Set_Cursor@temp
 10776  1A0F                     l3557:
 10777                           
 10778                           ;lcd.c: 70:         Lcd_Cmd(temp);
 10779  1A0F  0877               	movf	Lcd_Set_Cursor@temp,w
 10780  1A10  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10781                           
 10782                           ;lcd.c: 72:     } else if (a == 2) {
 10783  1A15  2A27               	goto	l55
 10784  1A16                     l3559:
 10785  1A16  3002               	movlw	2
 10786  1A17  0676               	xorwf	Lcd_Set_Cursor@a,w
 10787  1A18  1D03               	btfss	3,2
 10788  1A19  2A1B               	goto	u5241
 10789  1A1A  2A1C               	goto	u5240
 10790  1A1B                     u5241:
 10791  1A1B  2A27               	goto	l55
 10792  1A1C                     u5240:
 10793  1A1C                     l3561:
 10794                           
 10795                           ;lcd.c: 73:         temp = 0xC0 + b - 1;
 10796  1A1C  0874               	movf	Lcd_Set_Cursor@b,w
 10797  1A1D  3EBF               	addlw	191
 10798  1A1E  00F5               	movwf	??_Lcd_Set_Cursor
 10799  1A1F  0875               	movf	??_Lcd_Set_Cursor,w
 10800  1A20  00F7               	movwf	Lcd_Set_Cursor@temp
 10801  1A21                     l3563:
 10802                           
 10803                           ;lcd.c: 74:         Lcd_Cmd(temp);
 10804  1A21  0877               	movf	Lcd_Set_Cursor@temp,w
 10805  1A22  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10806  1A27                     l55:
 10807  1A27  0008               	return
 10808  1A28                     __end_of_Lcd_Set_Cursor:
 10809                           
 10810                           	psect	text29
 10811  1C18                     __ptext29:	
 10812 ;; *************** function _Lcd_Init *****************
 10813 ;; Defined at:
 10814 ;;		line 78 in file "lcd.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;		None
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;		None
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, status,2, status,0, pclath, cstack
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10828 ;;      Params:         0       0       0       0       0
 10829 ;;      Locals:         0       0       0       0       0
 10830 ;;      Temps:          2       0       0       0       0
 10831 ;;      Totals:         2       0       0       0       0
 10832 ;;Total ram usage:        2 bytes
 10833 ;; Hardware stack levels used: 1
 10834 ;; Hardware stack levels required when called: 2
 10835 ;; This function calls:
 10836 ;;		_Lcd_Cmd
 10837 ;;		_Lcd_Port
 10838 ;; This function is called by:
 10839 ;;		_main
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _Lcd_Init
 10845  1C18                     _Lcd_Init:
 10846  1C18                     l3565:	
 10847                           ;incstack = 0
 10848                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10849                           
 10850                           
 10851                           ;lcd.c: 79:     Lcd_Port(0);
 10852  1C18  3000               	movlw	0
 10853  1C19  160A  158A  230A  160A  158A  	fcall	_Lcd_Port
 10854  1C1E                     l3567:
 10855                           
 10856                           ;lcd.c: 80:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10857  1C1E  3034               	movlw	52
 10858  1C1F  00F5               	movwf	??_Lcd_Init+1
 10859  1C20  30F1               	movlw	241
 10860  1C21  00F4               	movwf	??_Lcd_Init
 10861  1C22                     u5847:
 10862  1C22  0BF4               	decfsz	??_Lcd_Init,f
 10863  1C23  2C22               	goto	u5847
 10864  1C24  0BF5               	decfsz	??_Lcd_Init+1,f
 10865  1C25  2C22               	goto	u5847
 10866  1C26  2C27               	nop2
 10867  1C27                     l3569:
 10868                           
 10869                           ;lcd.c: 81:     Lcd_Cmd(48);
 10870  1C27  3030               	movlw	48
 10871  1C28  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10872                           
 10873                           ;lcd.c: 82:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10874  1C2D  300D               	movlw	13
 10875  1C2E  00F5               	movwf	??_Lcd_Init+1
 10876  1C2F  30FB               	movlw	251
 10877  1C30  00F4               	movwf	??_Lcd_Init
 10878  1C31                     u5857:
 10879  1C31  0BF4               	decfsz	??_Lcd_Init,f
 10880  1C32  2C31               	goto	u5857
 10881  1C33  0BF5               	decfsz	??_Lcd_Init+1,f
 10882  1C34  2C31               	goto	u5857
 10883  1C35  2C36               	nop2
 10884  1C36                     l3571:
 10885                           
 10886                           ;lcd.c: 83:     Lcd_Cmd(48);
 10887  1C36  3030               	movlw	48
 10888  1C37  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10889  1C3C                     l3573:
 10890                           
 10891                           ;lcd.c: 84:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10892  1C3C  301D               	movlw	29
 10893  1C3D  00F5               	movwf	??_Lcd_Init+1
 10894  1C3E  3091               	movlw	145
 10895  1C3F  00F4               	movwf	??_Lcd_Init
 10896  1C40                     u5867:
 10897  1C40  0BF4               	decfsz	??_Lcd_Init,f
 10898  1C41  2C40               	goto	u5867
 10899  1C42  0BF5               	decfsz	??_Lcd_Init+1,f
 10900  1C43  2C40               	goto	u5867
 10901                           
 10902                           ;lcd.c: 85:     Lcd_Cmd(48);
 10903  1C44  3030               	movlw	48
 10904  1C45  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10905                           
 10906                           ;lcd.c: 87:     Lcd_Cmd(56);
 10907  1C4A  3038               	movlw	56
 10908  1C4B  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10909                           
 10910                           ;lcd.c: 88:     Lcd_Cmd(8);
 10911  1C50  3008               	movlw	8
 10912  1C51  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10913                           
 10914                           ;lcd.c: 89:     Lcd_Cmd(1);
 10915  1C56  3001               	movlw	1
 10916  1C57  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10917                           
 10918                           ;lcd.c: 90:     Lcd_Cmd(6);
 10919  1C5C  3006               	movlw	6
 10920  1C5D  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10921                           
 10922                           ;lcd.c: 91:     Lcd_Cmd(12);
 10923  1C62  300C               	movlw	12
 10924  1C63  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10925  1C68                     l58:
 10926  1C68  0008               	return
 10927  1C69                     __end_of_Lcd_Init:
 10928                           
 10929                           	psect	text30
 10930  1986                     __ptext30:	
 10931 ;; *************** function _Lcd_Clear *****************
 10932 ;; Defined at:
 10933 ;;		line 61 in file "lcd.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;		None
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0, pclath, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10947 ;;      Params:         0       0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0
 10950 ;;      Totals:         0       0       0       0       0
 10951 ;;Total ram usage:        0 bytes
 10952 ;; Hardware stack levels used: 1
 10953 ;; Hardware stack levels required when called: 2
 10954 ;; This function calls:
 10955 ;;		_Lcd_Cmd
 10956 ;; This function is called by:
 10957 ;;		_main
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           
 10962                           ;psect for function _Lcd_Clear
 10963  1986                     _Lcd_Clear:
 10964  1986                     l3551:	
 10965                           ;incstack = 0
 10966                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10967                           
 10968                           
 10969                           ;lcd.c: 62:     Lcd_Cmd(0);
 10970  1986  3000               	movlw	0
 10971  1987  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10972                           
 10973                           ;lcd.c: 63:     Lcd_Cmd(1);
 10974  198C  3001               	movlw	1
 10975  198D  160A  158A  21CB  160A  158A  	fcall	_Lcd_Cmd
 10976  1992                     l49:
 10977  1992  0008               	return
 10978  1993                     __end_of_Lcd_Clear:
 10979                           
 10980                           	psect	text31
 10981  19CB                     __ptext31:	
 10982 ;; *************** function _Lcd_Cmd *****************
 10983 ;; Defined at:
 10984 ;;		line 53 in file "lcd.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  a               1    wreg     unsigned char 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  a               1    3[COMMON] unsigned char 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2, status,0, pclath, cstack
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10998 ;;      Params:         0       0       0       0       0
 10999 ;;      Locals:         1       0       0       0       0
 11000 ;;      Temps:          2       0       0       0       0
 11001 ;;      Totals:         3       0       0       0       0
 11002 ;;Total ram usage:        3 bytes
 11003 ;; Hardware stack levels used: 1
 11004 ;; Hardware stack levels required when called: 1
 11005 ;; This function calls:
 11006 ;;		_Lcd_Port
 11007 ;; This function is called by:
 11008 ;;		_Lcd_Clear
 11009 ;;		_Lcd_Set_Cursor
 11010 ;;		_Lcd_Init
 11011 ;;		_Lcd_Shift_Right
 11012 ;;		_Lcd_Shift_Left
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           
 11017                           ;psect for function _Lcd_Cmd
 11018  19CB                     _Lcd_Cmd:
 11019                           
 11020                           ;incstack = 0
 11021                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11022                           ;Lcd_Cmd@a stored from wreg
 11023  19CB  00F3               	movwf	Lcd_Cmd@a
 11024  19CC                     l3091:
 11025                           
 11026                           ;lcd.c: 54:     RC0 = 0;
 11027  19CC  1283               	bcf	3,5	;RP0=0, select bank0
 11028  19CD  1303               	bcf	3,6	;RP1=0, select bank0
 11029  19CE  1007               	bcf	7,0	;volatile
 11030  19CF                     l3093:
 11031                           
 11032                           ;lcd.c: 55:     Lcd_Port(a);
 11033  19CF  0873               	movf	Lcd_Cmd@a,w
 11034  19D0  160A  158A  230A  160A  158A  	fcall	_Lcd_Port
 11035  19D5                     l3095:
 11036                           
 11037                           ;lcd.c: 56:     RC1 = 1;
 11038  19D5  1283               	bcf	3,5	;RP0=0, select bank0
 11039  19D6  1303               	bcf	3,6	;RP1=0, select bank0
 11040  19D7  1487               	bsf	7,1	;volatile
 11041  19D8                     l3097:
 11042                           
 11043                           ;lcd.c: 57:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11044  19D8  300B               	movlw	11
 11045  19D9  00F2               	movwf	??_Lcd_Cmd+1
 11046  19DA  3062               	movlw	98
 11047  19DB  00F1               	movwf	??_Lcd_Cmd
 11048  19DC                     u5877:
 11049  19DC  0BF1               	decfsz	??_Lcd_Cmd,f
 11050  19DD  29DC               	goto	u5877
 11051  19DE  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11052  19DF  29DC               	goto	u5877
 11053  19E0  0000               	nop
 11054  19E1                     l3099:
 11055                           
 11056                           ;lcd.c: 58:     RC1 = 0;
 11057  19E1  1283               	bcf	3,5	;RP0=0, select bank0
 11058  19E2  1303               	bcf	3,6	;RP1=0, select bank0
 11059  19E3  1087               	bcf	7,1	;volatile
 11060  19E4                     l46:
 11061  19E4  0008               	return
 11062  19E5                     __end_of_Lcd_Cmd:
 11063                           
 11064                           	psect	text32
 11065  1B0A                     __ptext32:	
 11066 ;; *************** function _Lcd_Port *****************
 11067 ;; Defined at:
 11068 ;;		line 11 in file "lcd.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  a               1    wreg     unsigned char 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;  a               1    0[COMMON] unsigned char 
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  1    wreg      void 
 11075 ;; Registers used:
 11076 ;;		wreg
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11082 ;;      Params:         0       0       0       0       0
 11083 ;;      Locals:         1       0       0       0       0
 11084 ;;      Temps:          0       0       0       0       0
 11085 ;;      Totals:         1       0       0       0       0
 11086 ;;Total ram usage:        1 bytes
 11087 ;; Hardware stack levels used: 1
 11088 ;; This function calls:
 11089 ;;		Nothing
 11090 ;; This function is called by:
 11091 ;;		_Lcd_Cmd
 11092 ;;		_Lcd_Init
 11093 ;;		_Lcd_Write_Char
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           
 11098                           ;psect for function _Lcd_Port
 11099  1B0A                     _Lcd_Port:
 11100                           
 11101                           ;incstack = 0
 11102                           ; Regs used in _Lcd_Port: [wreg]
 11103                           ;Lcd_Port@a stored from wreg
 11104  1B0A  00F0               	movwf	Lcd_Port@a
 11105  1B0B                     l2609:
 11106                           
 11107                           ;lcd.c: 12:     if (a & 1)
 11108  1B0B  1C70               	btfss	Lcd_Port@a,0
 11109  1B0C  2B0E               	goto	u2911
 11110  1B0D  2B0F               	goto	u2910
 11111  1B0E                     u2911:
 11112  1B0E  2B13               	goto	l27
 11113  1B0F                     u2910:
 11114  1B0F                     l2611:
 11115                           
 11116                           ;lcd.c: 13:         RD0 = 1;
 11117  1B0F  1283               	bcf	3,5	;RP0=0, select bank0
 11118  1B10  1303               	bcf	3,6	;RP1=0, select bank0
 11119  1B11  1408               	bsf	8,0	;volatile
 11120  1B12  2B16               	goto	l28
 11121  1B13                     l27:	
 11122                           ;lcd.c: 14:     else
 11123                           
 11124                           
 11125                           ;lcd.c: 15:         RD0 = 0;
 11126  1B13  1283               	bcf	3,5	;RP0=0, select bank0
 11127  1B14  1303               	bcf	3,6	;RP1=0, select bank0
 11128  1B15  1008               	bcf	8,0	;volatile
 11129  1B16                     l28:
 11130                           
 11131                           ;lcd.c: 17:     if (a & 2)
 11132  1B16  1CF0               	btfss	Lcd_Port@a,1
 11133  1B17  2B19               	goto	u2921
 11134  1B18  2B1A               	goto	u2920
 11135  1B19                     u2921:
 11136  1B19  2B1C               	goto	l29
 11137  1B1A                     u2920:
 11138  1B1A                     l2613:
 11139                           
 11140                           ;lcd.c: 18:         RD1 = 1;
 11141  1B1A  1488               	bsf	8,1	;volatile
 11142  1B1B  2B1D               	goto	l30
 11143  1B1C                     l29:	
 11144                           ;lcd.c: 19:     else
 11145                           
 11146                           
 11147                           ;lcd.c: 20:         RD1 = 0;
 11148  1B1C  1088               	bcf	8,1	;volatile
 11149  1B1D                     l30:
 11150                           
 11151                           ;lcd.c: 22:     if (a & 4)
 11152  1B1D  1D70               	btfss	Lcd_Port@a,2
 11153  1B1E  2B20               	goto	u2931
 11154  1B1F  2B21               	goto	u2930
 11155  1B20                     u2931:
 11156  1B20  2B23               	goto	l31
 11157  1B21                     u2930:
 11158  1B21                     l2615:
 11159                           
 11160                           ;lcd.c: 23:         RD2 = 1;
 11161  1B21  1508               	bsf	8,2	;volatile
 11162  1B22  2B24               	goto	l32
 11163  1B23                     l31:	
 11164                           ;lcd.c: 24:     else
 11165                           
 11166                           
 11167                           ;lcd.c: 25:         RD2 = 0;
 11168  1B23  1108               	bcf	8,2	;volatile
 11169  1B24                     l32:
 11170                           
 11171                           ;lcd.c: 27:     if (a & 8)
 11172  1B24  1DF0               	btfss	Lcd_Port@a,3
 11173  1B25  2B27               	goto	u2941
 11174  1B26  2B28               	goto	u2940
 11175  1B27                     u2941:
 11176  1B27  2B2A               	goto	l33
 11177  1B28                     u2940:
 11178  1B28                     l2617:
 11179                           
 11180                           ;lcd.c: 28:         RD3 = 1;
 11181  1B28  1588               	bsf	8,3	;volatile
 11182  1B29  2B2B               	goto	l34
 11183  1B2A                     l33:	
 11184                           ;lcd.c: 29:     else
 11185                           
 11186                           
 11187                           ;lcd.c: 30:         RD3 = 0;
 11188  1B2A  1188               	bcf	8,3	;volatile
 11189  1B2B                     l34:
 11190                           
 11191                           ;lcd.c: 32:     if (a & 16)
 11192  1B2B  1E70               	btfss	Lcd_Port@a,4
 11193  1B2C  2B2E               	goto	u2951
 11194  1B2D  2B2F               	goto	u2950
 11195  1B2E                     u2951:
 11196  1B2E  2B31               	goto	l35
 11197  1B2F                     u2950:
 11198  1B2F                     l2619:
 11199                           
 11200                           ;lcd.c: 33:         RD4 = 1;
 11201  1B2F  1608               	bsf	8,4	;volatile
 11202  1B30  2B32               	goto	l36
 11203  1B31                     l35:	
 11204                           ;lcd.c: 34:     else
 11205                           
 11206                           
 11207                           ;lcd.c: 35:         RD4 = 0;
 11208  1B31  1208               	bcf	8,4	;volatile
 11209  1B32                     l36:
 11210                           
 11211                           ;lcd.c: 37:     if (a & 32)
 11212  1B32  1EF0               	btfss	Lcd_Port@a,5
 11213  1B33  2B35               	goto	u2961
 11214  1B34  2B36               	goto	u2960
 11215  1B35                     u2961:
 11216  1B35  2B38               	goto	l37
 11217  1B36                     u2960:
 11218  1B36                     l2621:
 11219                           
 11220                           ;lcd.c: 38:         RD5 = 1;
 11221  1B36  1688               	bsf	8,5	;volatile
 11222  1B37  2B39               	goto	l38
 11223  1B38                     l37:	
 11224                           ;lcd.c: 39:     else
 11225                           
 11226                           
 11227                           ;lcd.c: 40:         RD5 = 0;
 11228  1B38  1288               	bcf	8,5	;volatile
 11229  1B39                     l38:
 11230                           
 11231                           ;lcd.c: 42:     if (a & 64)
 11232  1B39  1F70               	btfss	Lcd_Port@a,6
 11233  1B3A  2B3C               	goto	u2971
 11234  1B3B  2B3D               	goto	u2970
 11235  1B3C                     u2971:
 11236  1B3C  2B3F               	goto	l39
 11237  1B3D                     u2970:
 11238  1B3D                     l2623:
 11239                           
 11240                           ;lcd.c: 43:         RD6 = 1;
 11241  1B3D  1708               	bsf	8,6	;volatile
 11242  1B3E  2B40               	goto	l40
 11243  1B3F                     l39:	
 11244                           ;lcd.c: 44:     else
 11245                           
 11246                           
 11247                           ;lcd.c: 45:         RD6 = 0;
 11248  1B3F  1308               	bcf	8,6	;volatile
 11249  1B40                     l40:
 11250                           
 11251                           ;lcd.c: 47:     if (a & 128)
 11252  1B40  1FF0               	btfss	Lcd_Port@a,7
 11253  1B41  2B43               	goto	u2981
 11254  1B42  2B44               	goto	u2980
 11255  1B43                     u2981:
 11256  1B43  2B46               	goto	l41
 11257  1B44                     u2980:
 11258  1B44                     l2625:
 11259                           
 11260                           ;lcd.c: 48:         RD7 = 1;
 11261  1B44  1788               	bsf	8,7	;volatile
 11262  1B45  2B47               	goto	l43
 11263  1B46                     l41:	
 11264                           ;lcd.c: 49:     else
 11265                           
 11266                           
 11267                           ;lcd.c: 50:         RD7 = 0;
 11268  1B46  1388               	bcf	8,7	;volatile
 11269  1B47                     l43:
 11270  1B47  0008               	return
 11271  1B48                     __end_of_Lcd_Port:
 11272                           
 11273                           	psect	text33
 11274  1964                     __ptext33:	
 11275 ;; *************** function _I2C_Master_Write *****************
 11276 ;; Defined at:
 11277 ;;		line 62 in file "i2c.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  d               2    0[COMMON] unsigned int 
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		wreg, status,2, status,0, pclath, cstack
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11291 ;;      Params:         2       0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0
 11293 ;;      Temps:          0       0       0       0       0
 11294 ;;      Totals:         2       0       0       0       0
 11295 ;;Total ram usage:        2 bytes
 11296 ;; Hardware stack levels used: 1
 11297 ;; Hardware stack levels required when called: 1
 11298 ;; This function calls:
 11299 ;;		_I2C_Master_Wait
 11300 ;; This function is called by:
 11301 ;;		_main
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           
 11306                           ;psect for function _I2C_Master_Write
 11307  1964                     _I2C_Master_Write:
 11308  1964                     l3655:	
 11309                           ;incstack = 0
 11310                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11311                           
 11312                           
 11313                           ;i2c.c: 62: void I2C_Master_Write(unsigned d);i2c.c: 63: {;i2c.c: 64:     I2C_Master_Wai
      +                          t();
 11314  1964  160A  158A  2179  160A  158A  	fcall	_I2C_Master_Wait
 11315  1969                     l3657:
 11316                           
 11317                           ;i2c.c: 65:     SSPBUF = d;
 11318  1969  0870               	movf	I2C_Master_Write@d,w
 11319  196A  1283               	bcf	3,5	;RP0=0, select bank0
 11320  196B  1303               	bcf	3,6	;RP1=0, select bank0
 11321  196C  0093               	movwf	19	;volatile
 11322  196D                     l278:
 11323  196D  0008               	return
 11324  196E                     __end_of_I2C_Master_Write:
 11325                           
 11326                           	psect	text34
 11327  195B                     __ptext34:	
 11328 ;; *************** function _I2C_Master_Stop *****************
 11329 ;; Defined at:
 11330 ;;		line 52 in file "i2c.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;		None
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		wreg, status,2, status,0, pclath, cstack
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11344 ;;      Params:         0       0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0
 11347 ;;      Totals:         0       0       0       0       0
 11348 ;;Total ram usage:        0 bytes
 11349 ;; Hardware stack levels used: 1
 11350 ;; Hardware stack levels required when called: 1
 11351 ;; This function calls:
 11352 ;;		_I2C_Master_Wait
 11353 ;; This function is called by:
 11354 ;;		_main
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           
 11359                           ;psect for function _I2C_Master_Stop
 11360  195B                     _I2C_Master_Stop:
 11361  195B                     l3675:	
 11362                           ;incstack = 0
 11363                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11364                           
 11365                           
 11366                           ;i2c.c: 54:     I2C_Master_Wait();
 11367  195B  160A  158A  2179  160A  158A  	fcall	_I2C_Master_Wait
 11368  1960                     l3677:
 11369                           
 11370                           ;i2c.c: 55:     SSPCON2bits.PEN = 1;
 11371  1960  1683               	bsf	3,5	;RP0=1, select bank1
 11372  1961  1303               	bcf	3,6	;RP1=0, select bank1
 11373  1962  1511               	bsf	17,2	;volatile
 11374  1963                     l275:
 11375  1963  0008               	return
 11376  1964                     __end_of_I2C_Master_Stop:
 11377                           
 11378                           	psect	text35
 11379  1952                     __ptext35:	
 11380 ;; *************** function _I2C_Master_Start *****************
 11381 ;; Defined at:
 11382 ;;		line 36 in file "i2c.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;		None
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  1    wreg      void 
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, status,0, pclath, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11396 ;;      Params:         0       0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0
 11399 ;;      Totals:         0       0       0       0       0
 11400 ;;Total ram usage:        0 bytes
 11401 ;; Hardware stack levels used: 1
 11402 ;; Hardware stack levels required when called: 1
 11403 ;; This function calls:
 11404 ;;		_I2C_Master_Wait
 11405 ;; This function is called by:
 11406 ;;		_main
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           
 11411                           ;psect for function _I2C_Master_Start
 11412  1952                     _I2C_Master_Start:
 11413  1952                     l3651:	
 11414                           ;incstack = 0
 11415                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11416                           
 11417                           
 11418                           ;i2c.c: 38:     I2C_Master_Wait();
 11419  1952  160A  158A  2179  160A  158A  	fcall	_I2C_Master_Wait
 11420  1957                     l3653:
 11421                           
 11422                           ;i2c.c: 39:     SSPCON2bits.SEN = 1;
 11423  1957  1683               	bsf	3,5	;RP0=1, select bank1
 11424  1958  1303               	bcf	3,6	;RP1=0, select bank1
 11425  1959  1411               	bsf	17,0	;volatile
 11426  195A                     l269:
 11427  195A  0008               	return
 11428  195B                     __end_of_I2C_Master_Start:
 11429                           
 11430                           	psect	text36
 11431  1003                     __ptext36:	
 11432 ;; *************** function _I2C_Master_Read *****************
 11433 ;; Defined at:
 11434 ;;		line 71 in file "i2c.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  a               2    0[COMMON] unsigned short 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  temp            2    4[COMMON] unsigned short 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  2    0[COMMON] unsigned short 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0, pclath, cstack
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11448 ;;      Params:         2       0       0       0       0
 11449 ;;      Locals:         2       0       0       0       0
 11450 ;;      Temps:          2       0       0       0       0
 11451 ;;      Totals:         6       0       0       0       0
 11452 ;;Total ram usage:        6 bytes
 11453 ;; Hardware stack levels used: 1
 11454 ;; Hardware stack levels required when called: 1
 11455 ;; This function calls:
 11456 ;;		_I2C_Master_Wait
 11457 ;; This function is called by:
 11458 ;;		_main
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           
 11463                           ;psect for function _I2C_Master_Read
 11464  1003                     _I2C_Master_Read:
 11465  1003                     l3659:	
 11466                           ;incstack = 0
 11467                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11468                           
 11469                           
 11470                           ;i2c.c: 71: unsigned short I2C_Master_Read(unsigned short a);i2c.c: 72: {;i2c.c: 73:    
      +                           unsigned short temp;;i2c.c: 74:     I2C_Master_Wait();
 11471  1003  160A  158A  2179  160A  118A  	fcall	_I2C_Master_Wait
 11472  1008                     l3661:
 11473                           
 11474                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
 11475  1008  1683               	bsf	3,5	;RP0=1, select bank1
 11476  1009  1303               	bcf	3,6	;RP1=0, select bank1
 11477  100A  1591               	bsf	17,3	;volatile
 11478                           
 11479                           ;i2c.c: 76:     I2C_Master_Wait();
 11480  100B  160A  158A  2179  160A  118A  	fcall	_I2C_Master_Wait
 11481  1010                     l3663:
 11482                           
 11483                           ;i2c.c: 77:     temp = SSPBUF;
 11484  1010  1283               	bcf	3,5	;RP0=0, select bank0
 11485  1011  1303               	bcf	3,6	;RP1=0, select bank0
 11486  1012  0813               	movf	19,w	;volatile
 11487  1013  00F2               	movwf	??_I2C_Master_Read
 11488  1014  01F3               	clrf	??_I2C_Master_Read+1
 11489  1015  0872               	movf	??_I2C_Master_Read,w
 11490  1016  00F4               	movwf	I2C_Master_Read@temp
 11491  1017  0873               	movf	??_I2C_Master_Read+1,w
 11492  1018  00F5               	movwf	I2C_Master_Read@temp+1
 11493  1019                     l3665:
 11494                           
 11495                           ;i2c.c: 78:     I2C_Master_Wait();
 11496  1019  160A  158A  2179  160A  118A  	fcall	_I2C_Master_Wait
 11497  101E                     l3667:
 11498                           
 11499                           ;i2c.c: 79:     if(a == 1){
 11500  101E  0370               	decf	I2C_Master_Read@a,w
 11501  101F  0471               	iorwf	I2C_Master_Read@a+1,w
 11502  1020  1D03               	btfss	3,2
 11503  1021  2823               	goto	u5291
 11504  1022  2824               	goto	u5290
 11505  1023                     u5291:
 11506  1023  2828               	goto	l281
 11507  1024                     u5290:
 11508  1024                     l3669:
 11509                           
 11510                           ;i2c.c: 80:         SSPCON2bits.ACKDT = 0;
 11511  1024  1683               	bsf	3,5	;RP0=1, select bank1
 11512  1025  1303               	bcf	3,6	;RP1=0, select bank1
 11513  1026  1291               	bcf	17,5	;volatile
 11514                           
 11515                           ;i2c.c: 81:     }else{
 11516  1027  282B               	goto	l282
 11517  1028                     l281:
 11518                           
 11519                           ;i2c.c: 82:         SSPCON2bits.ACKDT = 1;
 11520  1028  1683               	bsf	3,5	;RP0=1, select bank1
 11521  1029  1303               	bcf	3,6	;RP1=0, select bank1
 11522  102A  1691               	bsf	17,5	;volatile
 11523  102B                     l282:	
 11524                           ;i2c.c: 83:     }
 11525                           
 11526                           
 11527                           ;i2c.c: 84:     SSPCON2bits.ACKEN = 1;
 11528  102B  1611               	bsf	17,4	;volatile
 11529  102C                     l3671:
 11530                           
 11531                           ;i2c.c: 85:     return temp;
 11532  102C  0875               	movf	I2C_Master_Read@temp+1,w
 11533  102D  00F1               	movwf	?_I2C_Master_Read+1
 11534  102E  0874               	movf	I2C_Master_Read@temp,w
 11535  102F  00F0               	movwf	?_I2C_Master_Read
 11536  1030                     l283:
 11537  1030  0008               	return
 11538  1031                     __end_of_I2C_Master_Read:
 11539                           
 11540                           	psect	text37
 11541  1979                     __ptext37:	
 11542 ;; *************** function _I2C_Master_Wait *****************
 11543 ;; Defined at:
 11544 ;;		line 29 in file "i2c.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      void 
 11551 ;; Registers used:
 11552 ;;		wreg, status,2
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11558 ;;      Params:         0       0       0       0       0
 11559 ;;      Locals:         0       0       0       0       0
 11560 ;;      Temps:          0       0       0       0       0
 11561 ;;      Totals:         0       0       0       0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used: 1
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_I2C_Master_Start
 11568 ;;		_I2C_Master_Stop
 11569 ;;		_I2C_Master_Write
 11570 ;;		_I2C_Master_Read
 11571 ;;		_I2C_Master_RepeatedStart
 11572 ;; This function uses a non-reentrant model
 11573 ;;
 11574                           
 11575                           
 11576                           ;psect for function _I2C_Master_Wait
 11577  1979                     _I2C_Master_Wait:
 11578  1979                     l3189:	
 11579                           ;incstack = 0
 11580                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11581                           
 11582  1979                     l263:	
 11583                           ;i2c.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11584                           
 11585  1979  1683               	bsf	3,5	;RP0=1, select bank1
 11586  197A  1303               	bcf	3,6	;RP1=0, select bank1
 11587  197B  1914               	btfsc	20,2	;volatile
 11588  197C  297E               	goto	u4161
 11589  197D  297F               	goto	u4160
 11590  197E                     u4161:
 11591  197E  2979               	goto	l263
 11592  197F                     u4160:
 11593  197F                     l3191:
 11594  197F  0811               	movf	17,w	;volatile
 11595  1980  391F               	andlw	31
 11596  1981  1D03               	btfss	3,2
 11597  1982  2984               	goto	u4171
 11598  1983  2985               	goto	u4170
 11599  1984                     u4171:
 11600  1984  2979               	goto	l263
 11601  1985                     u4170:
 11602  1985                     l266:
 11603  1985  0008               	return
 11604  1986                     __end_of_I2C_Master_Wait:
 11605                           
 11606                           	psect	text38
 11607  1A98                     __ptext38:	
 11608 ;; *************** function _I2C_Master_Init *****************
 11609 ;; Defined at:
 11610 ;;		line 13 in file "i2c.c"
 11611 ;; Parameters:    Size  Location     Type
 11612 ;;  c               4    0[BANK0 ] const unsigned long 
 11613 ;; Auto vars:     Size  Location     Type
 11614 ;;		None
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  1    wreg      void 
 11617 ;; Registers used:
 11618 ;;		wreg, status,2, status,0, pclath, cstack
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11624 ;;      Params:         0       4       0       0       0
 11625 ;;      Locals:         0       0       0       0       0
 11626 ;;      Temps:          0       4       0       0       0
 11627 ;;      Totals:         0       8       0       0       0
 11628 ;;Total ram usage:        8 bytes
 11629 ;; Hardware stack levels used: 1
 11630 ;; Hardware stack levels required when called: 1
 11631 ;; This function calls:
 11632 ;;		___lldiv
 11633 ;; This function is called by:
 11634 ;;		_main
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           
 11639                           ;psect for function _I2C_Master_Init
 11640  1A98                     _I2C_Master_Init:
 11641  1A98                     l3639:	
 11642                           ;incstack = 0
 11643                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 11644                           
 11645                           
 11646                           ;i2c.c: 13: void I2C_Master_Init(const unsigned long c);i2c.c: 14: {;i2c.c: 15:     SSPC
      +                          ON = 0b00101000;
 11647  1A98  3028               	movlw	40
 11648  1A99  1283               	bcf	3,5	;RP0=0, select bank0
 11649  1A9A  1303               	bcf	3,6	;RP1=0, select bank0
 11650  1A9B  0094               	movwf	20	;volatile
 11651  1A9C                     l3641:
 11652                           
 11653                           ;i2c.c: 16:     SSPCON2 = 0;
 11654  1A9C  1683               	bsf	3,5	;RP0=1, select bank1
 11655  1A9D  1303               	bcf	3,6	;RP1=0, select bank1
 11656  1A9E  0191               	clrf	17	;volatile
 11657  1A9F                     l3643:
 11658                           
 11659                           ;i2c.c: 17:     SSPADD = (8000000/(4*c))-1;
 11660  1A9F  1283               	bcf	3,5	;RP0=0, select bank0
 11661  1AA0  1303               	bcf	3,6	;RP1=0, select bank0
 11662  1AA1  0820               	movf	I2C_Master_Init@c,w
 11663  1AA2  00A4               	movwf	??_I2C_Master_Init
 11664  1AA3  0821               	movf	I2C_Master_Init@c+1,w
 11665  1AA4  00A5               	movwf	??_I2C_Master_Init+1
 11666  1AA5  0822               	movf	I2C_Master_Init@c+2,w
 11667  1AA6  00A6               	movwf	??_I2C_Master_Init+2
 11668  1AA7  0823               	movf	I2C_Master_Init@c+3,w
 11669  1AA8  00A7               	movwf	??_I2C_Master_Init+3
 11670  1AA9  3002               	movlw	2
 11671  1AAA                     u5285:
 11672  1AAA  1003               	clrc
 11673  1AAB  0DA4               	rlf	??_I2C_Master_Init,f
 11674  1AAC  0DA5               	rlf	??_I2C_Master_Init+1,f
 11675  1AAD  0DA6               	rlf	??_I2C_Master_Init+2,f
 11676  1AAE  0DA7               	rlf	??_I2C_Master_Init+3,f
 11677  1AAF                     u5280:
 11678  1AAF  3EFF               	addlw	-1
 11679  1AB0  1D03               	skipz
 11680  1AB1  2AAA               	goto	u5285
 11681  1AB2  0827               	movf	??_I2C_Master_Init+3,w
 11682  1AB3  00F3               	movwf	___lldiv@divisor+3
 11683  1AB4  0826               	movf	??_I2C_Master_Init+2,w
 11684  1AB5  00F2               	movwf	___lldiv@divisor+2
 11685  1AB6  0825               	movf	??_I2C_Master_Init+1,w
 11686  1AB7  00F1               	movwf	___lldiv@divisor+1
 11687  1AB8  0824               	movf	??_I2C_Master_Init,w
 11688  1AB9  00F0               	movwf	___lldiv@divisor
 11689  1ABA  3000               	movlw	0
 11690  1ABB  00F7               	movwf	___lldiv@dividend+3
 11691  1ABC  307A               	movlw	122
 11692  1ABD  00F6               	movwf	___lldiv@dividend+2
 11693  1ABE  3012               	movlw	18
 11694  1ABF  00F5               	movwf	___lldiv@dividend+1
 11695  1AC0  3000               	movlw	0
 11696  1AC1  00F4               	movwf	___lldiv@dividend
 11697  1AC2  160A  158A  2518  160A  158A  	fcall	___lldiv
 11698  1AC7  0870               	movf	?___lldiv,w
 11699  1AC8  3EFF               	addlw	255
 11700  1AC9  1683               	bsf	3,5	;RP0=1, select bank1
 11701  1ACA  1303               	bcf	3,6	;RP1=0, select bank1
 11702  1ACB  0093               	movwf	19	;volatile
 11703  1ACC                     l3645:
 11704                           
 11705                           ;i2c.c: 18:     SSPSTAT = 0;
 11706  1ACC  0194               	clrf	20	;volatile
 11707  1ACD                     l3647:
 11708                           
 11709                           ;i2c.c: 19:     TRISCbits.TRISC3 = 1;
 11710  1ACD  1587               	bsf	7,3	;volatile
 11711  1ACE                     l3649:
 11712                           
 11713                           ;i2c.c: 20:     TRISCbits.TRISC4 = 1;
 11714  1ACE  1607               	bsf	7,4	;volatile
 11715  1ACF                     l260:
 11716  1ACF  0008               	return
 11717  1AD0                     __end_of_I2C_Master_Init:
 11718                           
 11719                           	psect	text39
 11720  1D18                     __ptext39:	
 11721 ;; *************** function ___lldiv *****************
 11722 ;; Defined at:
 11723 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  divisor         4    0[COMMON] unsigned long 
 11726 ;;  dividend        4    4[COMMON] unsigned long 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  quotient        4    9[COMMON] unsigned long 
 11729 ;;  counter         1   13[COMMON] unsigned char 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  4    0[COMMON] unsigned long 
 11732 ;; Registers used:
 11733 ;;		wreg, status,2, status,0
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11739 ;;      Params:         8       0       0       0       0
 11740 ;;      Locals:         5       0       0       0       0
 11741 ;;      Temps:          1       0       0       0       0
 11742 ;;      Totals:        14       0       0       0       0
 11743 ;;Total ram usage:       14 bytes
 11744 ;; Hardware stack levels used: 1
 11745 ;; This function calls:
 11746 ;;		Nothing
 11747 ;; This function is called by:
 11748 ;;		_I2C_Master_Init
 11749 ;;		_sprintf
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           
 11754                           ;psect for function ___lldiv
 11755  1D18                     ___lldiv:
 11756  1D18                     l3381:	
 11757                           ;incstack = 0
 11758                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11759                           
 11760  1D18  3000               	movlw	0
 11761  1D19  00FC               	movwf	___lldiv@quotient+3
 11762  1D1A  3000               	movlw	0
 11763  1D1B  00FB               	movwf	___lldiv@quotient+2
 11764  1D1C  3000               	movlw	0
 11765  1D1D  00FA               	movwf	___lldiv@quotient+1
 11766  1D1E  3000               	movlw	0
 11767  1D1F  00F9               	movwf	___lldiv@quotient
 11768  1D20  0873               	movf	___lldiv@divisor+3,w
 11769  1D21  0472               	iorwf	___lldiv@divisor+2,w
 11770  1D22  0471               	iorwf	___lldiv@divisor+1,w
 11771  1D23  0470               	iorwf	___lldiv@divisor,w
 11772  1D24  1903               	skipnz
 11773  1D25  2D27               	goto	u4751
 11774  1D26  2D28               	goto	u4750
 11775  1D27                     u4751:
 11776  1D27  2D75               	goto	l3401
 11777  1D28                     u4750:
 11778  1D28                     l3383:
 11779  1D28  01FD               	clrf	___lldiv@counter
 11780  1D29  0AFD               	incf	___lldiv@counter,f
 11781  1D2A  2D38               	goto	l3387
 11782  1D2B                     l3385:
 11783  1D2B  3001               	movlw	1
 11784  1D2C  00F8               	movwf	??___lldiv
 11785  1D2D                     u4765:
 11786  1D2D  1003               	clrc
 11787  1D2E  0DF0               	rlf	___lldiv@divisor,f
 11788  1D2F  0DF1               	rlf	___lldiv@divisor+1,f
 11789  1D30  0DF2               	rlf	___lldiv@divisor+2,f
 11790  1D31  0DF3               	rlf	___lldiv@divisor+3,f
 11791  1D32  0BF8               	decfsz	??___lldiv,f
 11792  1D33  2D2D               	goto	u4765
 11793  1D34  3001               	movlw	1
 11794  1D35  00F8               	movwf	??___lldiv
 11795  1D36  0878               	movf	??___lldiv,w
 11796  1D37  07FD               	addwf	___lldiv@counter,f
 11797  1D38                     l3387:
 11798  1D38  1FF3               	btfss	___lldiv@divisor+3,7
 11799  1D39  2D3B               	goto	u4771
 11800  1D3A  2D3C               	goto	u4770
 11801  1D3B                     u4771:
 11802  1D3B  2D2B               	goto	l3385
 11803  1D3C                     u4770:
 11804  1D3C                     l3389:
 11805  1D3C  3001               	movlw	1
 11806  1D3D  00F8               	movwf	??___lldiv
 11807  1D3E                     u4785:
 11808  1D3E  1003               	clrc
 11809  1D3F  0DF9               	rlf	___lldiv@quotient,f
 11810  1D40  0DFA               	rlf	___lldiv@quotient+1,f
 11811  1D41  0DFB               	rlf	___lldiv@quotient+2,f
 11812  1D42  0DFC               	rlf	___lldiv@quotient+3,f
 11813  1D43  0BF8               	decfsz	??___lldiv,f
 11814  1D44  2D3E               	goto	u4785
 11815  1D45                     l3391:
 11816  1D45  0873               	movf	___lldiv@divisor+3,w
 11817  1D46  0277               	subwf	___lldiv@dividend+3,w
 11818  1D47  1D03               	skipz
 11819  1D48  2D53               	goto	u4795
 11820  1D49  0872               	movf	___lldiv@divisor+2,w
 11821  1D4A  0276               	subwf	___lldiv@dividend+2,w
 11822  1D4B  1D03               	skipz
 11823  1D4C  2D53               	goto	u4795
 11824  1D4D  0871               	movf	___lldiv@divisor+1,w
 11825  1D4E  0275               	subwf	___lldiv@dividend+1,w
 11826  1D4F  1D03               	skipz
 11827  1D50  2D53               	goto	u4795
 11828  1D51  0870               	movf	___lldiv@divisor,w
 11829  1D52  0274               	subwf	___lldiv@dividend,w
 11830  1D53                     u4795:
 11831  1D53  1C03               	skipc
 11832  1D54  2D56               	goto	u4791
 11833  1D55  2D57               	goto	u4790
 11834  1D56                     u4791:
 11835  1D56  2D66               	goto	l3397
 11836  1D57                     u4790:
 11837  1D57                     l3393:
 11838  1D57  0870               	movf	___lldiv@divisor,w
 11839  1D58  02F4               	subwf	___lldiv@dividend,f
 11840  1D59  0871               	movf	___lldiv@divisor+1,w
 11841  1D5A  1C03               	skipc
 11842  1D5B  0F71               	incfsz	___lldiv@divisor+1,w
 11843  1D5C  02F5               	subwf	___lldiv@dividend+1,f
 11844  1D5D  0872               	movf	___lldiv@divisor+2,w
 11845  1D5E  1C03               	skipc
 11846  1D5F  0F72               	incfsz	___lldiv@divisor+2,w
 11847  1D60  02F6               	subwf	___lldiv@dividend+2,f
 11848  1D61  0873               	movf	___lldiv@divisor+3,w
 11849  1D62  1C03               	skipc
 11850  1D63  0F73               	incfsz	___lldiv@divisor+3,w
 11851  1D64  02F7               	subwf	___lldiv@dividend+3,f
 11852  1D65                     l3395:
 11853  1D65  1479               	bsf	___lldiv@quotient,0
 11854  1D66                     l3397:
 11855  1D66  3001               	movlw	1
 11856  1D67                     u4805:
 11857  1D67  1003               	clrc
 11858  1D68  0CF3               	rrf	___lldiv@divisor+3,f
 11859  1D69  0CF2               	rrf	___lldiv@divisor+2,f
 11860  1D6A  0CF1               	rrf	___lldiv@divisor+1,f
 11861  1D6B  0CF0               	rrf	___lldiv@divisor,f
 11862  1D6C  3EFF               	addlw	-1
 11863  1D6D  1D03               	skipz
 11864  1D6E  2D67               	goto	u4805
 11865  1D6F                     l3399:
 11866  1D6F  3001               	movlw	1
 11867  1D70  02FD               	subwf	___lldiv@counter,f
 11868  1D71  1D03               	btfss	3,2
 11869  1D72  2D74               	goto	u4811
 11870  1D73  2D75               	goto	u4810
 11871  1D74                     u4811:
 11872  1D74  2D3C               	goto	l3389
 11873  1D75                     u4810:
 11874  1D75                     l3401:
 11875  1D75  087C               	movf	___lldiv@quotient+3,w
 11876  1D76  00F3               	movwf	?___lldiv+3
 11877  1D77  087B               	movf	___lldiv@quotient+2,w
 11878  1D78  00F2               	movwf	?___lldiv+2
 11879  1D79  087A               	movf	___lldiv@quotient+1,w
 11880  1D7A  00F1               	movwf	?___lldiv+1
 11881  1D7B  0879               	movf	___lldiv@quotient,w
 11882  1D7C  00F0               	movwf	?___lldiv
 11883  1D7D                     l510:
 11884  1D7D  0008               	return
 11885  1D7E                     __end_of___lldiv:
 11886  007E                     btemp	set	126	;btemp
 11887  007E                     wtemp0	set	126
 11888                           
 11889                           	psect	config
 11890                           
 11891                           ;Config register CONFIG1 @ 0x2007
 11892                           ;	Oscillator Selection bits
 11893                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11894                           ;	Watchdog Timer Enable bit
 11895                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11896                           ;	Power-up Timer Enable bit
 11897                           ;	PWRTE = OFF, PWRT disabled
 11898                           ;	RE3/MCLR pin function select bit
 11899                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11900                           ;	Code Protection bit
 11901                           ;	CP = OFF, Program memory code protection is disabled
 11902                           ;	Data Code Protection bit
 11903                           ;	CPD = OFF, Data memory code protection is disabled
 11904                           ;	Brown Out Reset Selection bits
 11905                           ;	BOREN = OFF, BOR disabled
 11906                           ;	Internal External Switchover bit
 11907                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11908                           ;	Fail-Safe Clock Monitor Enabled bit
 11909                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11910                           ;	Low Voltage Programming Enable bit
 11911                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11912                           ;	In-Circuit Debugger Mode bit
 11913                           ;	DEBUG = 0x1, unprogrammed default
 11914  2007                     	org	8199
 11915  2007  20D4               	dw	8404
 11916                           
 11917                           ;Config register CONFIG2 @ 0x2008
 11918                           ;	Brown-out Reset Selection bit
 11919                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11920                           ;	Flash Program Memory Self Write Enable bits
 11921                           ;	WRT = OFF, Write protection off
 11922  2008                     	org	8200
 11923  2008  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    144
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     65      77
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> main@volt(BANK1[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> main@volt(BANK1[16]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _setup->_ADC_config
    _enviocadena->_enviocaracter
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   40864
                                             45 BANK1     20    20      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                        _enviocadena
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             52    37     15   32290
                                              0 BANK1     45    30     15
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _ADC_config
 ---------------------------------------------------------------------------------
 (2) _ADC_config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _enviocadena
     _enviocaracter
   _setup
     _ADC_config
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      BE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     41      4D       7       96.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      BE      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 02 03:24:09 2021

                        _a 006E                          pc 0002                         l30 1B1D  
                       l31 1B23                         l40 1B40                         l32 1B24  
                       l41 1B46                         l33 1B2A                         l34 1B2B  
                       l43 1B47                         l35 1B31                         l27 1B13  
                       l36 1B32                         l28 1B16                         l37 1B38  
                       l29 1B1C                         l61 19CA                         l38 1B39  
                       l46 19E4                         l39 1B3F                         l55 1A27  
                       l49 1992                         l58 1C68                         l67 0045  
                       _S1 00E5                         _S2 00E1                         _S3 01A0  
                       l88 1DE6               ___awdiv@sign 0021                         _s1 00EC  
                       _s2 00EB                         _s3 00E9                         _pc 00EA  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l220 1994                        l222 199A                        l231 1A03  
                      l224 19A2                        l260 1ACF                        l229 19FB  
                      l510 1D7D                        l190 1B85                        l414 00B7  
                      l263 1979                        l281 1028                        l266 1985  
                      l282 102B                        l442 04D1                        l283 1030  
                      l275 1963                        l269 195A                        l278 196D  
                      l702 1FF2                        l470 07E6                        l640 1D17  
                      l801 15DB                        l449 0515                        l730 1CBE  
                      l474 1A58                        l627 1099                        l395 0C9E  
                      l660 1BE6                        l476 1A70                        l644 1157  
                      l388 1362                        l661 1C02                        l805 1682  
                      l645 10BC                        l662 1C17                        l822 174D  
                      l814 17FF                        l807 1659                        l655 114A  
                      l903 0F6B                        l832 1793                        l648 111A  
                      l665 1E03                        l673 1978                        l826 1771  
                      l843 17F3                        l835 17D1                        l691 1FFF  
                      l668 1E6F                        l844 17FF                        l684 092A  
                      l692 1F71                        l916 1A85                        l780 1BC9  
                      l669 1E88                        l677 093F                        l941 1EAB  
                      l909 0FF3                        l918 1A97                        l790 1B09  
                      l847 1A4B                        l687 093F                        l943 1F42  
                      l695 1FC2                        l961 19B4                        l954 1F0C  
                      l955 1F18                        l947 1EF0                        l897 0FFF  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037               ___flmul@sign 0031               ___flmul@temp 003C  
             ___flmul@prod 0038        __size_of_ADC_config 0069               ___fltol@exp1 005B  
                     l3001 0D46                       l3011 0DCF                       l3003 0D62  
                     l3101 19B6                       l3021 0E42                       l3013 0DDF  
                     l3005 0D8E                       l3103 19B9                       l3111 1D7F  
                     l3031 0EEF                       l3023 0E5F                       l3015 0DFC  
                     l3007 0DAA                       l3105 19BF                       l3121 1D8D  
                     l3113 1D80                       l3041 0F3B                       l3033 0F17  
                     l3025 0E8C                       l3017 0E0C                       l3009 0DC6  
                     l3201 126E                       l3107 19C2                       l3131 1D98  
                     l3123 1D8E                       l3115 1D84                       l3051 0F50  
                     l3043 0F3C                       l3035 0F20                       l3027 0E9C  
                     l3019 0E29                       l3203 1274                       l3211 0943  
                     l4003 154B                       l4011 1565                       l3109 19C7  
                     l3141 1DA5                       l3133 1D9D                       l3125 1D91  
                     l3117 1D89                       l3301 1FCE                       l3061 0F75  
                     l3053 0F54                       l3045 0F45                       l3037 0F2E  
                     l3029 0EC9                       l3213 0947                       l4005 1550  
                     l3151 1DB4                       l3143 1DA6                       l3135 1DA0  
                     l3127 1D92                       l3119 1D8C                       l3311 1FF7  
                     l3303 1FE0                       l3071 0FB3                       l3063 0F83  
                     l3055 0F68                       l3039 0F37                       l3047 0F4B  
                     l3207 131F                       l3223 0A38                       l3215 0949  
                     l3401 1D75                       l3161 1DBC                       l3153 1DB5  
                     l3145 1DA8                       l3137 1DA1                       l3129 1D94  
                     l3321 10B0                       l2601 1A7F                       l3081 0FE7  
                     l3073 0FBE                       l3065 0F87                       l3049 0F4F  
                     l3241 0BE3                       l3225 0A3F                       l3217 0950  
                     l3233 0AF4                       l4009 1553                       l2611 1B0F  
                     l3091 19CC                       l3171 1DCA                       l3163 1DC0  
                     l3155 1DB6                       l3147 1DAC                       l3139 1DA2  
                     l3411 1C14                       l3331 10D6                       l3315 109A  
                     l2603 1A8E                       l3083 0FEB                       l3075 0FCD  
                     l3067 0FA0                       l3059 0F70                       l3251 19A4  
                     l3243 0BEA                       l3235 0AFB                       l2621 1B36  
                     l2613 1B1A                       l3093 19CF                       l3173 1DCD  
                     l3165 1DC5                       l3157 1DB9                       l3149 1DB1  
                     l3413 1C16                       l3405 1BCA                       l3421 1E17  
                     l3501 1A28                       l3341 110A                       l3333 10D8  
                     l3317 10A7                       l3309 1FE7                       l2605 1A93  
                     l3085 0FEC                       l3077 0FD7                       l3069 0FA6  
                     l3253 19A5                       l2701 1D09                       l3229 0AC7  
                     l3191 197F                       l2623 1B3D                       l2615 1B21  
                     l3095 19D5                       l3175 1DCE                       l3167 1DC8  
                     l3159 1DBA                       l3407 1BDE                       l3431 1E85  
                     l3423 1E1F                       l3503 1A2C                       l3511 1E93  
                     l3343 110B                       l3335 10E1                       l3327 10BD  
                     l3263 1F43                       l3087 0FF7                       l3079 0FD9  
                     l2711 1B88                       l3255 19AB                       l2631 1038  
                     l2703 1D0E                       l3247 0C72                       l2625 1B44  
                     l2617 1B28                       l2609 1B0B                       l3097 19D8  
                     l3185 1994                       l3169 1DC9                       l3601 1B5E  
                     l3409 1BFA                       l3433 1E87                       l3425 1E23  
                     l3417 1DE7                       l3441 1978                       l2801 15E1  
                     l3521 1EC1                       l3513 1EA3                       l3361 113F  
                     l3353 1126                       l3345 1114                       l3337 10EA  
                     l3329 10C5                       l3281 1F89                       l3265 1F56  
                     l2721 1BA0                       l2713 1B8E                       l3193 115B  
                     l3257 19B1                       l2641 104C                       l2633 103D  
                     l2705 1D13                       l2619 1B2F                       l3099 19E1  
                     l3187 19A0                       l3179 1DD0                       l3611 1B65  
                     l3603 1B5F                       l3427 1E47                       l3419 1DFB  
                     l2811 15F5                       l2803 15E5                       l3451 08DA  
                     l3371 1A52                       l3531 1EF7                       l3523 1ECE  
                     l3515 1EB3                       l3507 1E8A                       l3363 114F  
                     l3347 111E                       l3355 1138                       l3339 10FC  
                     l3291 1FB4                       l3283 1F92                       l3275 1F72  
                     l2723 1BB1                       l2715 1B91                       l2731 1BC5  
                     l3195 1161                       l3259 19B3                       l2651 1062  
                     l2643 104E                       l2635 103F                       l2627 1031  
                     l4091 155D                       l3381 1D18                       l3189 1979  
                     l3621 1B73                       l3613 1B66                       l3605 1B62  
                     l3429 1E4B                       l3437 196E                       l2901 1770  
                     l2821 1609                       l2813 15F9                       l2805 15E9  
                     l3461 08FE                       l3453 08EF                       l3445 08C4  
                     l3373 1A5F                       l3541 1F30                       l3533 1F02  
                     l3525 1ED5                       l3509 1E8F                       l3293 1FBC  
                     l3285 1F9B                       l3277 1F78                       l3269 1F5F  
                     l2725 1BB7                       l2717 1B98                       l2709 1B86  
                     l2741 1AE0                       l2661 1085                       l2653 1066  
                     l2645 1054                       l2637 1043                       l2629 1034  
                     l4093 00CD                       l3701 009E                       l3391 1D45  
                     l3383 1D28                       l3551 1986                       l4095 1DD8  
                     l3631 1B7D                       l3623 1B77                       l3615 1B6C  
                     l3607 1B63                       l3439 1976                       l2903 1775  
                     l2911 1781                       l2831 161D                       l2823 160D  
                     l2815 15FD                       l2807 15ED                       l3455 08F0  
                     l3447 08D1                       l3375 1A66                       l3367 1A4C  
                     l3543 1F35                       l3535 1F06                       l3527 1ED9  
                     l3519 1EBC                       l3295 1FC6                       l3287 1FA9  
                     l3279 1F87                       l2727 1BB8                       l2719 1B9C  
                     l2751 1AFF                       l2743 1AE4                       l2735 1AD0  
                     l2655 1077                       l2647 1057                       l2663 108B  
                     l2639 1048                       l2671 1CBF                       l3711 00B9  
                     l3703 00A2                       l3393 1D57                       l3385 1D2B  
                     l3641 1A9C                       l3561 1A1C                       l3553 1A05  
                     l3633 1B80                       l3625 1B78                       l3617 1B6F  
                     l3609 1B64                       l2905 1778                       l2913 1785  
                     l2841 165D                       l2833 1621                       l2825 1611  
                     l2817 1601                       l2809 15F1                       l2761 1585  
                     l3457 08F8                       l3481 1C69                       l3377 1A6C  
                     l3369 1A4E                       l3545 1F39                       l3537 1F10  
                     l3529 1EE7                       l3289 1FB3                       l2729 1BBF  
                     l2745 1AE8                       l2737 1AD6                       l2753 1B05  
                     l2665 1090                       l2657 107D                       l2649 105E  
                     l2681 1CCF                       l2673 1CC0                       l3801 0433  
                     l3721 00FD                       l3713 00DB                       l3705 00B3  
                     l3395 1D65                       l3387 1D38                       l3643 1A9F  
                     l3651 1952                       l3571 1C36                       l3563 1A21  
                     l3555 1A0A                       l3635 1B81                       l3627 1B7B  
                     l3619 1B70                       l2931 17CD                       l2923 1798  
                     l2915 1786                       l2907 177A                       l2851 1676  
                     l2843 1666                       l2827 1615                       l2819 1605  
                     l2835 1625                       l2771 159C                       l2763 1589  
                     l3475 091F                       l3467 0906                       l3459 08FA  
                     l3491 1C99                       l3483 1C73                       l3547 1F3A  
                     l3539 1F1A                       l2595 1A72                       l2747 1AF2  
                     l2739 1AD9                       l2667 1095                       l2659 107E  
                     l2691 1CE8                       l2683 1CD4                       l2675 1CC4  
                     l3811 04C5                       l3803 043F                       l3731 013B  
                     l3723 0101                       l3715 00E7                       l3707 00B5  
                     l3397 1D66                       l3389 1D3C                       l3645 1ACC  
                     l3661 1008                       l3653 1957                       l3573 1C3C  
                     l3565 1C18                       l3557 1A0F                       l3581 0029  
                     l3637 1B84                       l3629 1B7C                       l2941 17E9  
                     l2933 17D6                       l2925 179D                       l2917 178A  
                     l2909 177F                       l2861 1694                       l2845 1668  
                     l2853 167A                       l2837 1626                       l2829 1619  
                     l2781 15B2                       l2773 159D                       l2765 158A  
                     l2757 1578                       l3477 092F                       l3469 0918  
                     l3493 1CA7                       l3485 1C76                       l2597 1A74  
                     l2749 1AF8                       l2693 1CEC                       l2685 1CDA  
                     l2677 1CC9                       l3821 04F9                       l3813 04D9  
                     l3805 0446                       l3741 018B                       l3733 0154  
                     l3725 011A                       l3717 00EB                       l3399 1D6F  
                     l3647 1ACD                       l3639 1A98                       l3671 102C  
                     l3663 1010                       l3655 1964                       l3567 1C1E  
                     l3559 1A16                       l3575 0004                       l3591 1B55  
                     l3583 1B48                       l2943 17ED                       l2935 17DB  
                     l2927 17AB                       l2919 1790                       l2871 16BE  
                     l2863 16AB                       l2855 1686                       l2847 166C  
                     l2839 163D                       l2791 15C3                       l2783 15B3  
                     l2767 158F                       l2775 159F                       l2759 157F  
                     l3479 0934                       l3495 1CB0                       l3487 1C83  
                     l2599 1A7B                       l2951 0C9F                       l2695 1CF6  
                     l2687 1CDD                       l2679 1CCB                       l3903 07C2  
                     l3831 052A                       l3823 0508                       l3815 04E2  
                     l3807 044B                       l3751 0218                       l3743 018F  
                     l3735 015F                       l3727 0133                       l3719 00EF  
                     l3649 1ACE                       l3665 1019                       l3657 1969  
                     l3569 1C27                       l3577 0007                       l3921 19EF  
                     l3593 1B56                       l3585 1B50                       l2945 17EF  
                     l2937 17E3                       l2929 17AF                       l2881 16E7  
                     l2873 16C2                       l2865 16AF                       l2857 168B  
                     l2849 166D                       l2793 15C8                       l2785 15B9  
                     l2777 15A7                       l2769 1594                       l3489 1C87  
                     l3497 1CB6                       l2961 0CB6                       l2953 0CA6  
                     l2697 1CFC                       l2689 1CE4                       l3841 0621  
                     l3833 052E                       l3825 050F                       l3817 04E6  
                     l3809 0486                       l3761 029A                       l3753 0221  
                     l3745 0195                       l3737 0165                       l3729 0137  
                     l3681 004E                       l3905 07D0                       l3667 101E  
                     l3659 1003                       l3675 195B                       l3579 0023  
                     l3923 19F3                       l3595 1B59                       l3587 1B52  
                     l2947 17FA                       l2939 17E8                       l2891 1755  
                     l2883 1725                       l2875 16C3                       l2867 16B3  
                     l2795 15D0                       l2787 15BD                       l2779 15AC  
                     l2971 0CD2                       l2963 0CBB                       l2955 0CAC  
                     l2699 1D03                       l3851 069B                       l3843 062D  
                     l3835 054C                       l3827 051E                       l3819 04EC  
                     l3771 0315                       l3763 02A9                       l3755 023C  
                     l3747 01B4                       l3739 0178                       l3907 07E2  
                     l3691 006E                       l3683 0054                       l3931 1363  
                     l3669 1024                       l3677 1960                       l3925 1A01  
                     l3917 19E6                       l3597 1B5A                       l3589 1B54  
                     l2949 17FE                       l2893 175A                       l2885 172B  
                     l2877 16CC                       l2869 16BC                       l2797 15D1  
                     l2789 15BE                       l2981 0CE7                       l2973 0CD8  
                     l2965 0CC3                       l2957 0CB0                       l3861 06C1  
                     l3853 06A1                       l3837 05A7                       l3845 0688  
                     l3829 0523                       l3781 0363                       l3773 031E  
                     l3765 02C4                       l3749 01FF                       l3757 0244  
                     l3693 006F                       l3685 005B                       l3941 1383  
                     l3933 1368                       l3919 19E7                       l3599 1B5B  
                     l2887 1730                       l2879 16D1                       l2799 15D3  
                     l2991 0D03                       l2983 0CEF                       l2975 0CDC  
                     l2967 0CC5                       l2959 0CB1                       l3871 06E4  
                     l3863 06C5                       l3847 0690                       l3839 05E2  
                     l3775 0326                       l3767 02EB                       l3783 036C  
                     l3759 0253                       l3855 06A8                       l3695 0073  
                     l3687 0060                       l3679 0049                       l3951 13B1  
                     l3943 1392                       l3935 136D                       l2897 1763  
                     l2889 173F                       l2985 0CF1                       l2977 0CDD  
                     l2969 0CCD                       l3881 071D                       l3865 06D0  
                     l3857 06B9                       l3849 0697                       l3785 03A1  
                     l3777 0344                       l3769 02FA                       l3697 0076  
                     l3689 0062                       l3961 13DC                       l3953 13BB  
                     l3945 1397                       l3937 1372                       l2899 176C  
                     l2995 0D0C                       l2987 0CF9                       l2979 0CE2  
                     l3891 074B                       l3883 0727                       l3867 06D6  
                     l3859 06BD                       l3795 03F2                       l3787 03EE  
                     l3699 008B                       l3971 1402                       l3963 13E6  
                     l3955 13C0                       l3947 13A0                       l3939 137A  
                     l2997 0D1C                       l2989 0CFE                       l3893 0759  
                     l3885 0732                       l3877 06E6                       l3869 06DE  
                     l3789 03F0                       l3981 1430                       l3973 1411  
                     l3965 13EB                       l3957 13C9                       l3949 13AC  
                     l2999 0D29                       l3895 0760                       l3887 0733  
                     l3799 0429                       l3991 14D6                       l3983 143A  
                     l3975 1416                       l3967 13F4                       l3959 13D7  
                     l3897 0765                       l3889 0742                       l3993 14F2  
                     l3985 1442                       l3977 141F                       l3969 13FD  
                     l3899 07BA                       l3995 152D                       l3987 144A  
                     l3979 142B                       l3997 153B                       l3989 1490  
                     l3999 1544                       STR_1 08B5                       STR_2 08A0  
                     u3000 1043                       u3001 1042                       u3010 1054  
                     u3011 1053                       u3100 1CCF                       u3101 1CCE  
                     u3030 1066                       u3110 1CDA                       u3031 1065  
                     u3111 1CD9                       u3200 1BA0                       u3201 1B9F  
                     u3025 1058                       u3050 1077                       u3130 1CEC  
                     u3051 1076                       u3131 1CEB                       u4100 0F96  
                     u4020 0F3B                       u3220 1BB1                       u3300 1B05  
                     u3140 1CF6                       u4021 0F3A                       u4005 0F19  
                     u3221 1BB0                       u3301 1B04                       u3045 1067  
                     u3141 1CF5                       u3125 1CDE                       u3310 1589  
                     u4110 0FB3                       u3070 108B                       u3311 1588  
                     u4111 0FB2                       u4015 0F30                       u3215 1BA1  
                     u3071 108A                       u3055 1073                       u3400 163D  
                     u3320 158F                       u4120 0FCD                       u4040 0F4F  
                     u3240 1BC5                       u3080 1090                       u3160 1D09  
                     u3401 163C                       u3321 158E                       u4121 0FCC  
                     u4105 0F91                       u4041 0F4E                       u3241 1BC4  
                     u3225 1BAD                       u3081 108F                       u3065 107F  
                     u3161 1D08                       u3145 1CF2                       u3410 1648  
                     u3330 1594                       u5010 092F                       u4130 0FEB  
                     u4050 0F54                       u3250 1AD6                       u3170 1D0E  
                     u3090 1CC4                       u3411 1646                       u3331 1593  
                     u5011 092E                       u4131 0FEA                       u4115 0FAF  
                     u4051 0F53                       u4035 0F3E                       u3235 1BB9  
                     u3251 1AD5                       u3171 1D0D                       u3155 1CFD  
                     u3091 1CC3                       u4140 199A                       u3500 16AF  
                     u3420 1649                       u3340 15B2                       u5020 0934  
                     u5100 1E93                       u4060 0F68                       u3180 1B8E  
                     u4220 1274                       u4141 1999                       u3501 16AE  
                     u3405 1639                       u3341 15B1                       u5021 0933  
                     u5005 0921                       u5101 1E92                       u4125 0FC9  
                     u4061 0F67                       u3181 1B8D                       u4221 1273  
                     u4205 11D8                       u4150 19A0                       u3510 16B3  
                     u3430 165D                       u3350 15BD                       u5030 1C73  
                     u5110 1EB3                       u4070 0F6F                       u3270 1AE8  
                     u4310 0A3F                       u4151 199F                       u3511 16B2  
                     u3431 165C                       u3351 15BC                       u5031 1C72  
                     u5111 1EB2                       u4071 0F6E                       u3271 1AE7  
                     u4215 122D                       u4311 0A3E                       u4160 197F  
                     u3520 16C2                       u3440 166C                       u3360 15C3  
                     u5200 1F25                       u4080 0F75                       u3280 1AF2  
                     u4161 197E                       u3521 16C1                       u3441 166B  
                     u3361 15C2                       u4081 0F74                       u3281 1AF1  
                     u3265 1ADA                       u4305 09F7                       u4170 1985  
                     u3610 1770                       u3370 15C8                       u5050 1C87  
                     u5210 1F35                       u5130 1ED4                       u4090 0F87  
                     u4171 1984                       u3611 176F                       u3371 15C7  
                     u5051 1C86                       u5211 1F34                       u5131 1ED3  
                     u4091 0F86                       u3195 1B92                       u4235 1291  
                     u3700 17BE                       u3620 1775                       u3540 16E7  
                     u3460 1682                       u3380 15E1                       u5060 1C99  
                     u5220 1F39                       u4500 1FC2                       u2900 1A93  
                     u4180 1161                       u4260 0947                       u5300 0054  
                     u3621 1774                       u3605 1765                       u3541 16E6  
                     u3461 1681                       u3381 15E0                       u5061 1C98  
                     u5045 1C78                       u5221 1F38                       u5205 1F20  
                     u5125 1EC6                       u4501 1FC1                       u2901 1A92  
                     u3285 1AEE                       u4245 12DE                       u4181 1160  
                     u4405 0BFD                       u4325 0A52                       u4261 0946  
                     u5301 0053                       u2910 1B0F                       u5230 1A0A  
                     u3710 17CD                       u3630 177F                       u3470 1686  
                     u3390 15E5                       u5150 1EF6                       u4510 1FC6  
                     u4430 19AB                       u4350 0AFB                       u4270 0950  
                     u5310 006E                       u2911 1B0E                       u5231 1A09  
                     u3711 17CC                       u3631 177E                       u3551 16FE  
                     u3543 16E3                       u3535 16C5                       u3471 1685  
                     u3455 166F                       u3391 15E4                       u5151 1EF5  
                     u4511 1FC5                       u3295 1AF9                       u4255 132A  
                     u4431 19AA                       u4415 0C39                       u4351 0AFA  
                     u4335 0A8E                       u4271 094F                       u5311 006D  
                     u2920 1B1A                       u5240 1A1C                       u3720 17D6  
                     u3640 1785                       u3560 1712                       u3552 16FF  
                     u3480 168B                       u5080 1CB6                       u4520 1FCD  
                     u3800 0CDC                       u4440 19B1                       u5400 0253  
                     u5320 00B2                       u2921 1B19                       u5241 1A1B  
                     u3721 17D5                       u3705 17B9                       u3641 1784  
                     u3561 1713                       u3553 1704                       u3481 168A  
                     u5081 1CB5                       u5065 1C95                       u5145 1EE8  
                     u4521 1FCC                       u3801 0CDB                       u4441 19B0  
                     u4425 0C75                       u4345 0ACA                       u5401 0252  
                     u5321 00B1                       u2930 1B21                       u5250 0011  
                     u3730 17DB                       u3650 178A                       u3570 1730  
                     u3562 1718                       u3554 1705                       u5170 1F06  
                     u5090 1E8F                       u4610 10FC                       u4450 1F56  
                     u3810 0CE2                       u5410 02A9                       u5330 00E7  
                     u2931 1B20                       u3731 17DA                       u3651 1789  
                     u3571 172F                       u3563 1719                       u3555 170A  
                     u3491 169D                       u5075 1CA8                       u5171 1F05  
                     u5091 1E8E                       u4611 10FB                       u4451 1F55  
                     u3811 0CE1                       u4195 117E                       u5411 02A8  
                     u5331 00E6                       _PEIE 005E                       u2940 1B28  
                     u5260 0033                       u3740 17E8                       u3660 1790  
                     u3580 1755                       u3556 170B                       u3492 16A4  
                     u5180 1F0C                       u4700 114F                       u4540 1FDF  
                     u4460 1F70                       u3820 0CE7                       u5420 02C4  
                     u5340 00EB                       u2941 1B27                       u3741 17E7  
                     u3661 178F                       u3581 1754                       u3493 16AB  
                     u5181 1F0B                       u5165 1EFB                       u4701 114E  
                     u4605 10E3                       u4541 1FDE                       u4461 1F6F  
                     u3901 0DEE                       u3821 0CE6                       u4365 0B1B  
                     u4285 0970                       u5421 02C3                       u5405 024F  
                     u5341 00EA                       u2950 1B2F                       u5270 0045  
                     u3750 17ED                       u3670 1797                       u3590 175A  
                     u4710 1A52                       u5190 1F10                       u4630 111A  
                     u4550 1FE6                       u3902 0DF5                       u3830 0CFE  
                     u4390 0BEA                       u5510 04D8                       u5430 02EB  
                     u5350 011A                       u2951 1B2E                       u5271 0044  
                     u3751 17EC                       u3671 1796                       u3591 1759  
                     u4711 1A51                       u5191 1F0F                       u4631 1119  
                     u4615 10F8                       u4551 1FE5                       u4535 1FCF  
                     u3911 0E1B                       u3903 0DFC                       u3831 0CFD  
                     u4391 0BE9                       u4375 0B57                       u4295 09AC  
                     u5511 04D7                       u5431 02EA                       u5415 02A5  
                     u5351 0119                       u5280 1AAF                       u2960 1B36  
                     u3760 17FE                       u3680 179D                       u4640 111E  
                     u4480 1FA9                       u2880 1A7F                       u3912 0E22  
                     u3840 0D03                       u5600 06D6                       u5520 04F9  
                     u5440 02FA                       u5360 0154                       u2961 1B35  
                     u3761 17FD                       u3681 179C                       u4641 111D  
                     u4625 110D                       u4481 1FA8                       u2881 1A7E  
                     u3913 0E29                       u3841 0D02                       u4385 0BA2  
                     u5601 06D5                       u5521 04F8                       u5505 044E  
                     u5441 02F9                       u5361 0153                       u4810 1D75  
                     u5290 1024                       u2970 1B3D                       u3690 17AF  
                     u4650 1125                       u4570 1FF7                       u3770 0CB0  
                     u5610 06DE                       u5530 0508                       u5450 0315  
                     u5370 018F                       u4811 1D74                       u5291 1023  
                     u2971 1B3C                       u3691 17AE                       u4651 1124  
                     u4571 1FF6                       u4475 1F94                       u3931 0E51  
                     u3851 0D54                       u3771 0CAF                       u5611 06DD  
                     u5531 0507                       u5451 0314                       u5371 018E  
                     u2980 1B44                       u4820 1BDE                       u4740 1A6C  
                     u4580 10A7                       u3932 0E58                       u3852 0D5B  
                     u3780 0CB6                       u5700 07E2                       u5540 0523  
                     u5380 0218                       u4805 1D67                       u5285 1AAA  
                     u2981 1B43                       u4821 1BDD                       u4901 1E5A  
                     u4741 1A6B                       u4725 1A59                       u4581 10A6  
                     u4565 1FE9                       u4485 1FA5                       u3941 0E7E  
                     u3933 0E5F                       u3925 0E2B                       u3861 0D70  
                     u3853 0D62                       u3781 0CB5                       u5701 07E1  
                     u5541 0522                       u5525 04F5                       u5445 02F6  
                     u5381 0217                       u4750 1D28                       u5710 19FB  
                     u4830 1BFA                       u4910 1E85                       u4902 1E5B  
                     u4670 1137                       u4590 10BB                       u3942 0E85  
                     u3862 0D77                       u3790 0CBB                       u2990 1038  
                     u5630 071C                       u5470 0428                       u5390 023C  
                     u4751 1D27                       u5711 19FA                       u4831 1BF9  
                     u4911 1E84                       u4903 1E60                       u4735 1A60  
                     u4671 1136                       u4591 10BA                       u4495 1FB5  
                     u2895 1A86                       u3951 0EAB                       u3943 0E8C  
                     u3871 0D9C                       u3863 0D7E                       u3791 0CBA  
                     u2991 1037                       u5631 071B                       u5535 0504  
                     u5471 0427                       u5391 023B                       u5720 1A01  
                     u4840 1C14                       u4904 1E61                       u4920 1976  
                     u4680 113E                       u3960 0ED5                       u3952 0EB2  
                     u3872 0DA3                       u5640 0727                       u5480 0433  
                     u5721 1A00                       u4841 1C13                       u4905 1E66  
                     u4921 1975                       u4681 113D                       u4665 1127  
                     u3953 0EB9                       u3881 0DB8                       u3873 0DAA  
                     u5641 0726                       u5625 06E9                       u5481 0432  
                     u5465 03F5                       u4770 1D3C                       u4906 1E67  
                     u4850 1DFB                       u4930 08D1                       u3882 0DBF  
                     u5650 0732                       u5570 068F                       u5490 043F  
                     u5730 154A                       u4771 1D3B                       u4915 1E81  
                     u4851 1DFA                       u4931 08D0                       u3971 0EE1  
                     u3883 0DC6                       u5651 0731                       u5635 0718  
                     u5571 068E                       u5555 05AA                       u5491 043E  
                     u5475 0424                       u5731 1549                       u4860 1E17  
                     u4940 08E8                       u3980 0EFD                       u3972 0EE8  
                     u5660 0742                       u5580 06A7                       u4765 1D2D  
                     u4845 1C10                       u4861 1E16                       u3973 0EEF  
                     u3965 0ED0                       u5661 0741                       u5581 06A6  
                     u5565 0630                       u4790 1D57                       u4870 1E23  
                     u4950 08FE                       u5670 0759                       u5590 06C1  
                     u4791 1D56                       u5807 1D9A                       u4871 1E22  
                     u4951 08FD                       u4695 1141                       u3991 0F09  
                     u3895 0DC8                       u5671 0758                       u5655 072E  
                     u5591 06C0                       u4960 0905                       u3992 0F10  
                     u4785 1D3E                       u5817 1DAE                       u4881 1E32  
                     u4961 0904                       u4945 08E3                       u3993 0F17  
                     u3985 0EF8                       u5665 073E                       u4890 1E4B  
                     u4882 1E33                       u5690 07D0                       u4795 1D53  
                     u5827 1DC2                       u4891 1E4A                       u4883 1E38  
                     u5691 07CF                       u5747 13B7                       u4884 1E39  
                     u4980 0917                       u5837 19C4                       u4885 1E3E  
                     u4981 0916                       u5685 0774                       u5757 13E2  
                     u4886 1E3F                       u4990 091E                       u5847 1C22  
                     u4991 091D                       u4975 0907                       u5767 140A  
                     u5857 1C31                       u5777 1436                       u5867 1C40  
                     u5787 156D                       u5877 19DC                       u5797 1D86  
        ?_Lcd_Write_String 0073                       _main 1363                       btemp 007E  
                     _volt 0190                       start 0000         ??_Lcd_Write_String 0075  
             _sprintf$1353 00B4            __end_of_Lcd_Cmd 19E5               ?_enviocadena 0070  
           ADC_config@frec 0072           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070              ___fltol@sign1 005A  
          __end_of___fladd 1800                      ?_main 0070            __end_of___awdiv 109A  
          __end_of___flneg 1979                      _EEADR 010D                      _EEDAT 010C  
          __end_of___awmod 1D18            __end_of___flmul 1000            __end_of___flsub 1A4C  
          __end_of___fltol 0940                      _ANSEL 0188            __end_of___lldiv 1D7E  
          ___awdiv@divisor 0077            __end_of___llmod 1CBF            __end_of___lwdiv 1BCA  
          __end_of___lwmod 1B0A            ___awdiv@counter 0020                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063                      _TXREG 0019            __end_of_dpowers 08A0  
                    _scale 0940            __end_of_isdigit 19B5                      _setup 1B48  
   __size_of_enviocaracter 0010                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07E7           __end_of_Lcd_Init 1C69  
         __end_of_Lcd_Port 1B48            __initialization 07E7               __end_of_main 1578  
                   ??_main 00CD         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___llmod@dividend 0024                     ?_scale 003E  
                   _EECON2 018D           ___awdiv@dividend 0079                     ?_setup 0070  
                ??_Lcd_Cmd 0071                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 1F43  
             ??_ADC_config 0070           __end_of__powers_ 0844                     ___flge 1DE7  
                   ___fleq 1BCA                  ??___fladd 005A                     ___wmul 1A4C  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 002C                  ??___flsub 007E                  ??___fltol 0055  
                ??___lldiv 0078                  ??___llmod 0028              _enviocaracter 1993  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 1158  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027         __end_of_ADC_config 1DE7  
                ??_sprintf 00AF            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
               ___flge@ff1 0070                 ___flge@ff2 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070                 ___fleq@ff1 0070  
               ___fleq@ff2 0074    __end_of__initialization 07FC                 ___flneg@f1 0070  
        __end_of_Lcd_Clear 1993                 ___fltol@f1 0051             __pcstackCOMMON 0070  
           ?_enviocaracter 0070       __size_of_enviocadena 001F              __end_of_scale 0C9F  
            __end_of_setup 1B86             _Lcd_Set_Cursor 1A04                 __div_to_l_ 109A  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0042            __div_to_l_@quot 0020  
                  ??_setup 0073                 __pbssBANK0 006E                 __pbssBANK1 00E1  
               __pbssBANK3 0190              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
        __end_of__Umul8_16 1A98                 __pmaintext 1363                    ?___flge 0070  
                  ?___fleq 0070                    ?___wmul 0070                    ?_fround 003E  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1A28                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094             enviocaracter@a 0070                 __stringtab 0800  
           _Lcd_Write_Char 19B5                    _Lcd_Cmd 19CB          __end_of__npowers_ 0878  
               _scale$1352 004C            ??_enviocaracter 0070            __size_of___flge 00A2  
          __size_of___fleq 004E                    ___fladd 1578                    ___awdiv 1031  
                  ___flneg 196E                    ___awmod 1CBF                    ___flmul 0C9F  
                  ___flsub 1A28                    ___fltol 08C4                    ___lldiv 1D18  
          __size_of___wmul 0025                    ___llmod 1C69                    ___lwdiv 1B86  
                  ___lwmod 1AD0            __size_of_fround 020B            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0046                    __ptext2 0940                    __ptext3 1CBF  
                  __ptext4 1031                    __ptext5 19A3                    __ptext6 1158  
                  __ptext7 1AD0                    __ptext8 1B86                    __ptext9 0C9F  
              ?__div_to_l_ 0070                    _dpowers 0878                    _isdigit 19A3  
               ??___xxtofl 0074           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 0046                    clrloop0 194B     __end_of_Lcd_Write_Char 19CB  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
              ___fladd@grs 0065              ___xxtofl@sign 0078                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
              ___flmul@grs 0032                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 1986             __end_of___flge 1E89             __end_of___fleq 1C18  
           __end_of___wmul 1A71           _Lcd_Write_String 0004                _BAUDCTLbits 0187  
           __end_of_fround 1363        start_initialization 07E7        __end_of__tdiv_to_l_ 2000  
        __size_of_Lcd_Init 0051          __size_of_Lcd_Port 003E          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
          ___llmod@divisor 0020            ___llmod@counter 0029              ??_enviocadena 0071  
               ?_Lcd_Clear 0070                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1A71            Lcd_Write_Char@a 0072  
                 ??_fround 0042              sprintf@tmpval 00BD                  ___fladd@a 0056  
                ___fladd@b 0052                 fround@prec 0051                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BA               _isdigit$1146 0070                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B9                sprintf@eexp 00BB                sprintf@fval 00C6  
              sprintf@prec 00CA           _I2C_Master_Start 1952           _I2C_Master_Write 1964  
         ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0020                  __npowers_ 0844  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
      __end_of_enviocadena 1A04                  __pstrings 0800                __tdiv_to_l_ 1F43  
             ??__div_to_l_ 0078                   ?_isdigit 0070           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 035F             __size_of_setup 003E  
           ___wmul@product 0074                  clear_ram0 194A                   _PIE1bits 008C  
                 Lcd_Cmd@a 0073                   _PIR1bits 000C         __end_of__div_to_l_ 1158  
                 _PIR2bits 000D                ??_Lcd_Clear 0074      __end_of_enviocaracter 19A3  
               _ADCON0bits 001F                __stringbase 080F                 _ADCON1bits 009F  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 1C18  
                 _Lcd_Port 1B0A        I2C_Master_Read@temp 0074          enviocadena@cadena 0072  
 __end_of_Lcd_Write_String 0046           __size_of_Lcd_Cmd 001A                 _EECON1bits 018C  
               _ADC_config 1D7E                _enviocadena 19E5                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0024  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0056  
         __size_of___lwdiv 0044           __size_of___lwmod 003A                _fround$1350 004D  
              _fround$1351 0049         __end_of__stringtab 0810                 sprintf@val 00C1  
          _I2C_Master_Init 1A98            _I2C_Master_Read 1003                   ___xxtofl 1E89  
          _I2C_Master_Wait 1979            _I2C_Master_Stop 195B           __size_of_isdigit 0012  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   __ptext10 1A71  
                 __ptext11 1F43                   __ptext20 1DE7                   __ptext12 109A  
                 __ptext21 1BCA                   __ptext13 1E89                   __ptext30 1986  
                 __ptext22 1B48                   __ptext14 1A4C                   __ptext31 19CB  
                 __ptext23 1D7E                   __ptext15 1C69                   __ptext32 1B0A  
                 __ptext24 19E5                   __ptext16 08C4                   __ptext33 1964  
                 __ptext25 1993                   __ptext17 1A28                   __ptext34 195B  
                 __ptext26 0004                   __ptext18 1578                   __ptext35 1952  
                 __ptext27 19B5                   __ptext19 196E                   __ptext36 1003  
                 __ptext28 1A04                   __ptext37 1979                   __ptext29 1C18  
                 __ptext38 1A98                   __ptext39 1D18                   __powers_ 0810  
         __size_of_sprintf 07A1              __size_of_main 0215                   main@volt 00D1  
 __end_of_I2C_Master_Start 195B   __end_of_I2C_Master_Write 196E                 _INTCONbits 000B  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00B8  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C5  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 080A                 _OSCCONbits 008F                ?_ADC_config 0070  
  __end_of_I2C_Master_Init 1AD0    __end_of_I2C_Master_Read 1031    __end_of_I2C_Master_Wait 1986  
  __end_of_I2C_Master_Stop 1964         Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070  
   __Umul8_16@multiplicand 0070                   sprintf@c 00CC                   sprintf@f 00A0  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 080A                   stringtab 0800  
              _SSPCON2bits 0091              ___fladd@signs 0062               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
