

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 10 17:51:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0006                     _PORTB	set	6
   284  0008                     _PORTD	set	8
   285  0014                     _SSPCONbits	set	20
   286  000C                     _PIR1bits	set	12
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0063                     _SSPIF	set	99
   290  005E                     _PEIE	set	94
   291  005F                     _GIE	set	95
   292  0088                     _TRISD	set	136
   293  0086                     _TRISB	set	134
   294  0094                     _SSPSTATbits	set	148
   295  0091                     _SSPCON2bits	set	145
   296  0087                     _TRISCbits	set	135
   297  0094                     _SSPSTAT	set	148
   298  0093                     _SSPADD	set	147
   299  0091                     _SSPCON2	set	145
   300  04A0                     _BF	set	1184
   301  0463                     _SSPIE	set	1123
   302  043C                     _TRISC4	set	1084
   303  043B                     _TRISC3	set	1083
   304  0189                     _ANSELH	set	393
   305  0188                     _ANSEL	set	392
   306                           
   307                           	psect	cinit
   308  000F                     start_initialization:	
   309                           ; #config settings
   310                           
   311  000F                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   315  0010                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0010                     __end_of__initialization:
   319  0010  0183               	clrf	3
   320  0011  120A  118A  2891   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0077                     __pbssCOMMON:
   324  0077                     _z:
   325  0077                     	ds	1
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:
   329  0070                     ?_setup:
   330  0070                     ?_I2C_Slave_Init:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_main:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344  0070                     	ds	3
   345  0073                     ??_I2C_Slave_Init:
   346  0073                     I2C_Slave_Init@address:	
   347                           ; 1 bytes @ 0x3
   348                           
   349                           
   350                           ; 1 bytes @ 0x3
   351  0073                     	ds	1
   352  0074                     ??_setup:
   353  0074                     ??_main:	
   354                           ; 1 bytes @ 0x4
   355                           
   356                           
   357                           ; 1 bytes @ 0x4
   358  0074                     	ds	3
   359                           
   360                           	psect	maintext
   361  0091                     __pmaintext:	
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 86 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, pclath, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : B00/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0
   383 ;;      Temps:          3       0       0       0       0
   384 ;;      Totals:         3       0       0       0       0
   385 ;;Total ram usage:        3 bytes
   386 ;; Hardware stack levels required when called:    3
   387 ;; This function calls:
   388 ;;		_setup
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _main
   396  0091                     _main:
   397  0091                     l802:	
   398                           ;incstack = 0
   399                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   400                           
   401                           
   402                           ;main.c: 87:     setup();
   403  0091  120A  118A  20AA  120A  118A  	fcall	_setup
   404  0096                     l804:
   405                           
   406                           ;main.c: 92:         PORTB = ~PORTB;
   407  0096  1283               	bcf	3,5	;RP0=0, select bank0
   408  0097  1303               	bcf	3,6	;RP1=0, select bank0
   409  0098  0986               	comf	6,f	;volatile
   410  0099                     l806:
   411                           
   412                           ;main.c: 93:        _delay((unsigned long)((500)*(8000000/4000.0)));
   413  0099  3006               	movlw	6
   414  009A  00F6               	movwf	??_main+2
   415  009B  3013               	movlw	19
   416  009C  00F5               	movwf	??_main+1
   417  009D  30AD               	movlw	173
   418  009E  00F4               	movwf	??_main
   419  009F                     u147:
   420  009F  0BF4               	decfsz	??_main,f
   421  00A0  289F               	goto	u147
   422  00A1  0BF5               	decfsz	??_main+1,f
   423  00A2  289F               	goto	u147
   424  00A3  0BF6               	decfsz	??_main+2,f
   425  00A4  289F               	goto	u147
   426  00A5  28A6               	nop2
   427  00A6  2896               	goto	l804
   428  00A7  120A  118A  280C   	ljmp	start
   429  00AA                     __end_of_main:
   430                           
   431                           	psect	text1
   432  00AA                     __ptext1:	
   433 ;; *************** function _setup *****************
   434 ;; Defined at:
   435 ;;		line 100 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0, pclath, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    2
   456 ;; This function calls:
   457 ;;		_I2C_Slave_Init
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _setup
   465  00AA                     _setup:
   466  00AA                     l724:	
   467                           ;incstack = 0
   468                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   469                           
   470                           
   471                           ;main.c: 101:     ANSEL = 0;
   472  00AA  1683               	bsf	3,5	;RP0=1, select bank3
   473  00AB  1703               	bsf	3,6	;RP1=1, select bank3
   474  00AC  0188               	clrf	8	;volatile
   475                           
   476                           ;main.c: 102:     ANSELH = 0;
   477  00AD  0189               	clrf	9	;volatile
   478                           
   479                           ;main.c: 104:     TRISB = 0;
   480  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   481  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   482  00B0  0186               	clrf	6	;volatile
   483                           
   484                           ;main.c: 105:     TRISD = 0;
   485  00B1  0188               	clrf	8	;volatile
   486                           
   487                           ;main.c: 107:     PORTB = 0;
   488  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   489  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   490  00B4  0186               	clrf	6	;volatile
   491                           
   492                           ;main.c: 108:     PORTD = 0;
   493  00B5  0188               	clrf	8	;volatile
   494  00B6                     l726:
   495                           
   496                           ;main.c: 109:     I2C_Slave_Init(0x50);
   497  00B6  3050               	movlw	80
   498  00B7  120A  118A  2077  120A  118A  	fcall	_I2C_Slave_Init
   499  00BC                     l114:
   500  00BC  0008               	return
   501  00BD                     __end_of_setup:
   502                           
   503                           	psect	text2
   504  0077                     __ptext2:	
   505 ;; *************** function _I2C_Slave_Init *****************
   506 ;; Defined at:
   507 ;;		line 93 in file "I2C.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  address         1    wreg     unsigned char 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  address         1    3[COMMON] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0
   524 ;;      Totals:         1       0       0       0       0
   525 ;;Total ram usage:        1 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:    1
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_setup
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           
   536                           ;psect for function _I2C_Slave_Init
   537  0077                     _I2C_Slave_Init:
   538                           
   539                           ;incstack = 0
   540                           ; Regs used in _I2C_Slave_Init: [wreg]
   541                           ;I2C_Slave_Init@address stored from wreg
   542  0077  00F3               	movwf	I2C_Slave_Init@address
   543  0078                     l706:
   544                           
   545                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   546  0078  0873               	movf	I2C_Slave_Init@address,w
   547  0079  1683               	bsf	3,5	;RP0=1, select bank1
   548  007A  1303               	bcf	3,6	;RP1=0, select bank1
   549  007B  0093               	movwf	19	;volatile
   550                           
   551                           ;I2C.c: 96:     SSPCON = 0x36;
   552  007C  3036               	movlw	54
   553  007D  1283               	bcf	3,5	;RP0=0, select bank0
   554  007E  1303               	bcf	3,6	;RP1=0, select bank0
   555  007F  0094               	movwf	20	;volatile
   556                           
   557                           ;I2C.c: 97:     SSPSTAT = 0x80;
   558  0080  3080               	movlw	128
   559  0081  1683               	bsf	3,5	;RP0=1, select bank1
   560  0082  1303               	bcf	3,6	;RP1=0, select bank1
   561  0083  0094               	movwf	20	;volatile
   562                           
   563                           ;I2C.c: 98:     SSPCON2 = 0x01;
   564  0084  3001               	movlw	1
   565  0085  0091               	movwf	17	;volatile
   566  0086                     l708:
   567                           
   568                           ;I2C.c: 99:     TRISC3 = 1;
   569  0086  1587               	bsf	7,3	;volatile
   570  0087                     l710:
   571                           
   572                           ;I2C.c: 100:     TRISC4 = 1;
   573  0087  1607               	bsf	7,4	;volatile
   574  0088                     l712:
   575                           
   576                           ;I2C.c: 101:     GIE = 1;
   577  0088  178B               	bsf	11,7	;volatile
   578  0089                     l714:
   579                           
   580                           ;I2C.c: 102:     PEIE = 1;
   581  0089  170B               	bsf	11,6	;volatile
   582  008A                     l716:
   583                           
   584                           ;I2C.c: 103:     SSPIF = 0;
   585  008A  1283               	bcf	3,5	;RP0=0, select bank0
   586  008B  1303               	bcf	3,6	;RP1=0, select bank0
   587  008C  118C               	bcf	12,3	;volatile
   588  008D                     l718:
   589                           
   590                           ;I2C.c: 104:     SSPIE = 1;
   591  008D  1683               	bsf	3,5	;RP0=1, select bank1
   592  008E  1303               	bcf	3,6	;RP1=0, select bank1
   593  008F  158C               	bsf	12,3	;volatile
   594  0090                     l55:
   595  0090  0008               	return
   596  0091                     __end_of_I2C_Slave_Init:
   597                           
   598                           	psect	text3
   599  0014                     __ptext3:	
   600 ;; *************** function _isr *****************
   601 ;; Defined at:
   602 ;;		line 49 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          3       0       0       0       0
   619 ;;      Totals:         3       0       0       0       0
   620 ;;Total ram usage:        3 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		Interrupt level 1
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           
   630                           ;psect for function _isr
   631  0014                     _isr:
   632  0014                     i1l768:
   633                           
   634                           ;main.c: 50:    if(PIR1bits.SSPIF == 1){
   635  0014  1283               	bcf	3,5	;RP0=0, select bank0
   636  0015  1303               	bcf	3,6	;RP1=0, select bank0
   637  0016  1D8C               	btfss	12,3	;volatile
   638  0017  2819               	goto	u5_21
   639  0018  281A               	goto	u5_20
   640  0019                     u5_21:
   641  0019  2870               	goto	i1l103
   642  001A                     u5_20:
   643  001A                     i1l770:
   644                           
   645                           ;main.c: 52:         SSPCONbits.CKP = 0;
   646  001A  1214               	bcf	20,4	;volatile
   647                           
   648                           ;main.c: 54:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   649  001B  1B14               	btfsc	20,6	;volatile
   650  001C  281E               	goto	u6_21
   651  001D  281F               	goto	u6_20
   652  001E                     u6_21:
   653  001E  2823               	goto	i1l774
   654  001F                     u6_20:
   655  001F                     i1l772:
   656  001F  1F94               	btfss	20,7	;volatile
   657  0020  2822               	goto	u7_21
   658  0021  2823               	goto	u7_20
   659  0022                     u7_21:
   660  0022  282A               	goto	i1l782
   661  0023                     u7_20:
   662  0023                     i1l774:
   663                           
   664                           ;main.c: 55:             z = SSPBUF;
   665  0023  0813               	movf	19,w	;volatile
   666  0024  00F0               	movwf	??_isr
   667  0025  0870               	movf	??_isr,w
   668  0026  00F7               	movwf	_z
   669  0027                     i1l776:
   670                           
   671                           ;main.c: 56:             SSPCONbits.SSPOV = 0;
   672  0027  1314               	bcf	20,6	;volatile
   673  0028                     i1l778:
   674                           
   675                           ;main.c: 57:             SSPCONbits.WCOL = 0;
   676  0028  1394               	bcf	20,7	;volatile
   677  0029                     i1l780:
   678                           
   679                           ;main.c: 58:             SSPCONbits.CKP = 1;
   680  0029  1614               	bsf	20,4	;volatile
   681  002A                     i1l782:
   682                           
   683                           ;main.c: 61:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   684  002A  1683               	bsf	3,5	;RP0=1, select bank1
   685  002B  1303               	bcf	3,6	;RP1=0, select bank1
   686  002C  1A94               	btfsc	20,5	;volatile
   687  002D  282F               	goto	u8_21
   688  002E  2830               	goto	u8_20
   689  002F                     u8_21:
   690  002F  284C               	goto	i1l94
   691  0030                     u8_20:
   692  0030                     i1l784:
   693  0030  1914               	btfsc	20,2	;volatile
   694  0031  2833               	goto	u9_21
   695  0032  2834               	goto	u9_20
   696  0033                     u9_21:
   697  0033  284C               	goto	i1l94
   698  0034                     u9_20:
   699  0034                     i1l786:
   700                           
   701                           ;main.c: 63:             z = SSPBUF;
   702  0034  1283               	bcf	3,5	;RP0=0, select bank0
   703  0035  1303               	bcf	3,6	;RP1=0, select bank0
   704  0036  0813               	movf	19,w	;volatile
   705  0037  00F0               	movwf	??_isr
   706  0038  0870               	movf	??_isr,w
   707  0039  00F7               	movwf	_z
   708  003A                     i1l788:
   709                           
   710                           ;main.c: 65:             PIR1bits.SSPIF = 0;
   711  003A  118C               	bcf	12,3	;volatile
   712  003B                     i1l790:
   713                           
   714                           ;main.c: 66:             SSPCONbits.CKP = 1;
   715  003B  1614               	bsf	20,4	;volatile
   716  003C                     i1l95:	
   717                           ;main.c: 67:             while(!SSPSTATbits.BF);
   718                           
   719  003C  1683               	bsf	3,5	;RP0=1, select bank1
   720  003D  1303               	bcf	3,6	;RP1=0, select bank1
   721  003E  1C14               	btfss	20,0	;volatile
   722  003F  2841               	goto	u10_21
   723  0040  2842               	goto	u10_20
   724  0041                     u10_21:
   725  0041  283C               	goto	i1l95
   726  0042                     u10_20:
   727  0042                     i1l792:
   728                           
   729                           ;main.c: 68:             PORTD = SSPBUF;
   730  0042  1283               	bcf	3,5	;RP0=0, select bank0
   731  0043  1303               	bcf	3,6	;RP1=0, select bank0
   732  0044  0813               	movf	19,w	;volatile
   733  0045  0088               	movwf	8	;volatile
   734                           
   735                           ;main.c: 69:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   736  0046  30A6               	movlw	166
   737  0047  00F0               	movwf	??_isr
   738  0048                     u15_27:
   739  0048  0BF0               	decfsz	??_isr,f
   740  0049  2848               	goto	u15_27
   741  004A  0000               	nop
   742                           
   743                           ;main.c: 71:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   744  004B  286D               	goto	i1l98
   745  004C                     i1l94:
   746  004C  1A94               	btfsc	20,5	;volatile
   747  004D  284F               	goto	u11_21
   748  004E  2850               	goto	u11_20
   749  004F                     u11_21:
   750  004F  286D               	goto	i1l98
   751  0050                     u11_20:
   752  0050                     i1l794:
   753  0050  1D14               	btfss	20,2	;volatile
   754  0051  2853               	goto	u12_21
   755  0052  2854               	goto	u12_20
   756  0053                     u12_21:
   757  0053  286D               	goto	i1l98
   758  0054                     u12_20:
   759  0054                     i1l796:
   760                           
   761                           ;main.c: 72:             z = SSPBUF;
   762  0054  1283               	bcf	3,5	;RP0=0, select bank0
   763  0055  1303               	bcf	3,6	;RP1=0, select bank0
   764  0056  0813               	movf	19,w	;volatile
   765  0057  00F0               	movwf	??_isr
   766  0058  0870               	movf	??_isr,w
   767  0059  00F7               	movwf	_z
   768  005A                     i1l798:
   769                           
   770                           ;main.c: 73:             BF = 0;
   771  005A  1683               	bsf	3,5	;RP0=1, select bank1
   772  005B  1303               	bcf	3,6	;RP1=0, select bank1
   773  005C  1014               	bcf	20,0	;volatile
   774                           
   775                           ;main.c: 74:             SSPBUF = PORTB;
   776  005D  1283               	bcf	3,5	;RP0=0, select bank0
   777  005E  1303               	bcf	3,6	;RP1=0, select bank0
   778  005F  0806               	movf	6,w	;volatile
   779  0060  0093               	movwf	19	;volatile
   780  0061                     i1l800:
   781                           
   782                           ;main.c: 75:             SSPCONbits.CKP = 1;
   783  0061  1614               	bsf	20,4	;volatile
   784                           
   785                           ;main.c: 76:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   786  0062  30A6               	movlw	166
   787  0063  00F0               	movwf	??_isr
   788  0064                     u16_27:
   789  0064  0BF0               	decfsz	??_isr,f
   790  0065  2864               	goto	u16_27
   791  0066  0000               	nop
   792  0067                     i1l100:	
   793                           ;main.c: 77:             while(SSPSTATbits.BF);
   794                           
   795  0067  1683               	bsf	3,5	;RP0=1, select bank1
   796  0068  1303               	bcf	3,6	;RP1=0, select bank1
   797  0069  1814               	btfsc	20,0	;volatile
   798  006A  286C               	goto	u13_21
   799  006B  286D               	goto	u13_20
   800  006C                     u13_21:
   801  006C  2867               	goto	i1l100
   802  006D                     u13_20:
   803  006D                     i1l98:
   804                           
   805                           ;main.c: 80:         PIR1bits.SSPIF = 0;
   806  006D  1283               	bcf	3,5	;RP0=0, select bank0
   807  006E  1303               	bcf	3,6	;RP1=0, select bank0
   808  006F  118C               	bcf	12,3	;volatile
   809  0070                     i1l103:
   810  0070  0872               	movf	??_isr+2,w
   811  0071  008A               	movwf	10
   812  0072  0E71               	swapf	??_isr+1,w
   813  0073  0083               	movwf	3
   814  0074  0EFE               	swapf	btemp,f
   815  0075  0E7E               	swapf	btemp,w
   816  0076  0009               	retfie
   817  0077                     __end_of_isr:
   818  007E                     btemp	set	126	;btemp
   819  007E                     wtemp0	set	126
   820                           
   821                           	psect	intentry
   822  0004                     __pintentry:	
   823                           ;incstack = 0
   824                           ; Regs used in _isr: [wreg]
   825                           
   826  0004                     interrupt_function:
   827  007E                     saved_w	set	btemp
   828  0004  00FE               	movwf	btemp
   829  0005  0E03               	swapf	3,w
   830  0006  00F1               	movwf	??_isr+1
   831  0007  080A               	movf	10,w
   832  0008  00F2               	movwf	??_isr+2
   833  0009  120A  118A  2814   	ljmp	_isr
   834                           
   835                           	psect	config
   836                           
   837                           ;Config register CONFIG1 @ 0x2007
   838                           ;	Oscillator Selection bits
   839                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   840                           ;	Watchdog Timer Enable bit
   841                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   842                           ;	Power-up Timer Enable bit
   843                           ;	PWRTE = OFF, PWRT disabled
   844                           ;	RE3/MCLR pin function select bit
   845                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   846                           ;	Code Protection bit
   847                           ;	CP = OFF, Program memory code protection is disabled
   848                           ;	Data Code Protection bit
   849                           ;	CPD = OFF, Data memory code protection is disabled
   850                           ;	Brown Out Reset Selection bits
   851                           ;	BOREN = OFF, BOR disabled
   852                           ;	Internal External Switchover bit
   853                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   854                           ;	Fail-Safe Clock Monitor Enabled bit
   855                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   856                           ;	Low Voltage Programming Enable bit
   857                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   858                           ;	In-Circuit Debugger Mode bit
   859                           ;	DEBUG = 0x1, unprogrammed default
   860  2007                     	org	8199
   861  2007  20D6               	dw	8406
   862                           
   863                           ;Config register CONFIG2 @ 0x2008
   864                           ;	Brown-out Reset Selection bit
   865                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   866                           ;	Flash Program Memory Self Write Enable bits
   867                           ;	WRT = OFF, Write protection off
   868  2008                     	org	8200
   869  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              4 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 10 17:51:07 2021

                      _z 0077              _SSPSTATbits 0094                       _BF 04A0  
                     l55 0090                      l114 00BC                      l710 0087  
                    l712 0088                      l714 0089                      l706 0078  
                    l802 0091                      l716 008A                      l708 0086  
                    l724 00AA                      l804 0096                      l718 008D  
                    l726 00B6                      l806 0099                      _GIE 005F  
                    u147 009F                      _isr 0014                     ?_isr 0070  
                   _PEIE 005E                     i1l94 004C                     i1l95 003C  
                   i1l98 006D                     u5_20 001A                     u5_21 0019  
                   u6_20 001F                     u6_21 001E                     u7_20 0023  
                   u7_21 0022                     u8_20 0030                     u8_21 002F  
                   u9_20 0034                     u9_21 0033                     _main 0091  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l100 0067  
                  i1l103 0070                    i1l800 0061                    i1l770 001A  
                  i1l780 0029                    i1l772 001F                    i1l790 003B  
                  i1l782 002A                    i1l774 0023                    i1l792 0042  
                  i1l784 0030                    i1l776 0027                    i1l768 0014  
                  i1l794 0050                    i1l786 0034                    i1l778 0028  
                  i1l796 0054                    i1l788 003A                    i1l798 005A  
                  u10_20 0042                    u10_21 0041                    u11_20 0050  
                  u11_21 004F                    u12_20 0054                    u12_21 0053  
                  u13_20 006D                    u13_21 006C                    u15_27 0048  
                  u16_27 0064                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063                    _setup 00AA                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00AA                   ??_main 0074                   ?_setup 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
__size_of_I2C_Slave_Init 001A            __end_of_setup 00BD                  ??_setup 0074  
  I2C_Slave_Init@address 0073               __pmaintext 0091               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  __ptext1 00AA  
                __ptext2 0077                  __ptext3 0014             __size_of_isr 0063  
   end_of_initialization 0010           _I2C_Slave_Init 0077                _TRISCbits 0087  
 __end_of_I2C_Slave_Init 0091      start_initialization 000F              __end_of_isr 0077  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0077                ___latbits 0002  
         __size_of_setup 0013        interrupt_function 0004                 _PIR1bits 000C  
       ??_I2C_Slave_Init 0073            __size_of_main 0019                 intlevel1 0000  
            _SSPCON2bits 0091               _SSPCONbits 0014  
