

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 01:19:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.31
    18                           ; Generated 13/10/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0013                     _SSPBUF	set	19
   287  0014                     _SSPCON	set	20
   288  000C                     _PIR1bits	set	12
   289  000B                     _INTCONbits	set	11
   290  0006                     _PORTB	set	6
   291  0008                     _PORTD	set	8
   292  0063                     _SSPIF	set	99
   293  0094                     _SSPSTATbits	set	148
   294  0094                     _SSPSTAT	set	148
   295  0085                     _TRISAbits	set	133
   296  008C                     _PIE1bits	set	140
   297  0088                     _TRISD	set	136
   298  0086                     _TRISB	set	134
   299  043B                     _TRISC3	set	1083
   300  043D                     _TRISC5	set	1085
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309  000F                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  000F                     __end_of__initialization:
   313  000F  0183               	clrf	3
   314  0010  120A  118A  284E   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:
   318  0070                     ?_spiRead:
   319  0070                     ??_spiRead:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_spiWrite:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ??_spiWrite:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_setup:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_isr:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_spiReceiveWait:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_spiReceiveWait:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     spiWrite@dat:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  0070                     	ds	1
   349  0071                     ??_isr:
   350                           
   351                           ; 1 bytes @ 0x1
   352  0071                     	ds	2
   353  0073                     ?_spiInit:
   354  0073                     spiInit@sDataSample:	
   355                           ; 1 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	1
   360  0074                     spiInit@sClockIdle:
   361                           
   362                           ; 1 bytes @ 0x4
   363  0074                     	ds	1
   364  0075                     spiInit@sTransmitEdge:
   365                           
   366                           ; 1 bytes @ 0x5
   367  0075                     	ds	1
   368  0076                     ??_spiInit:
   369  0076                     spiInit@sType:	
   370                           ; 1 bytes @ 0x6
   371                           
   372                           
   373                           ; 1 bytes @ 0x6
   374  0076                     	ds	1
   375  0077                     ??_setup:
   376  0077                     ??_main:	
   377                           ; 1 bytes @ 0x7
   378                           
   379                           
   380                           ; 1 bytes @ 0x7
   381  0077                     	ds	3
   382                           
   383                           	psect	maintext
   384  004E                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 61 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : B00/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          3       0       0       0       0
   407 ;;      Totals:         3       0       0       0       0
   408 ;;Total ram usage:        3 bytes
   409 ;; Hardware stack levels required when called:    5
   410 ;; This function calls:
   411 ;;		_setup
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _main
   419  004E                     _main:
   420  004E                     l751:	
   421                           ;incstack = 0
   422                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   423                           
   424                           
   425                           ;main.c: 62:     setup();
   426  004E  120A  118A  2031  120A  118A  	fcall	_setup
   427  0053                     l753:
   428                           
   429                           ;main.c: 67:        PORTB--;
   430  0053  3001               	movlw	1
   431  0054  1283               	bcf	3,5	;RP0=0, select bank0
   432  0055  1303               	bcf	3,6	;RP1=0, select bank0
   433  0056  0286               	subwf	6,f	;volatile
   434  0057                     l755:
   435                           
   436                           ;main.c: 68:        _delay((unsigned long)((250)*(8000000/4000.0)));
   437  0057  3003               	movlw	3
   438  0058  00F9               	movwf	??_main+2
   439  0059  308A               	movlw	138
   440  005A  00F8               	movwf	??_main+1
   441  005B  3055               	movlw	85
   442  005C  00F7               	movwf	??_main
   443  005D                     u57:
   444  005D  0BF7               	decfsz	??_main,f
   445  005E  285D               	goto	u57
   446  005F  0BF8               	decfsz	??_main+1,f
   447  0060  285D               	goto	u57
   448  0061  0BF9               	decfsz	??_main+2,f
   449  0062  285D               	goto	u57
   450  0063  2864               	nop2
   451  0064  2853               	goto	l753
   452  0065  120A  118A  280C   	ljmp	start
   453  0068                     __end_of_main:
   454                           
   455                           	psect	text1
   456  0031                     __ptext1:	
   457 ;; *************** function _setup *****************
   458 ;; Defined at:
   459 ;;		line 75 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    4
   480 ;; This function calls:
   481 ;;		_spiInit
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _setup
   489  0031                     _setup:
   490  0031                     l737:	
   491                           ;incstack = 0
   492                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   493                           
   494                           
   495                           ;main.c: 76:     ANSEL = 0;
   496  0031  1683               	bsf	3,5	;RP0=1, select bank3
   497  0032  1703               	bsf	3,6	;RP1=1, select bank3
   498  0033  0188               	clrf	8	;volatile
   499                           
   500                           ;main.c: 77:     ANSELH = 0;
   501  0034  0189               	clrf	9	;volatile
   502                           
   503                           ;main.c: 79:     TRISB = 0;
   504  0035  1683               	bsf	3,5	;RP0=1, select bank1
   505  0036  1303               	bcf	3,6	;RP1=0, select bank1
   506  0037  0186               	clrf	6	;volatile
   507                           
   508                           ;main.c: 80:     TRISD = 0;
   509  0038  0188               	clrf	8	;volatile
   510                           
   511                           ;main.c: 82:     PORTB = 0;
   512  0039  1283               	bcf	3,5	;RP0=0, select bank0
   513  003A  1303               	bcf	3,6	;RP1=0, select bank0
   514  003B  0186               	clrf	6	;volatile
   515                           
   516                           ;main.c: 83:     PORTD = 0;
   517  003C  0188               	clrf	8	;volatile
   518  003D                     l739:
   519                           
   520                           ;main.c: 85:     INTCONbits.GIE = 1;
   521  003D  178B               	bsf	11,7	;volatile
   522  003E                     l741:
   523                           
   524                           ;main.c: 86:     INTCONbits.PEIE = 1;
   525  003E  170B               	bsf	11,6	;volatile
   526  003F                     l743:
   527                           
   528                           ;main.c: 87:     PIR1bits.SSPIF = 0;
   529  003F  118C               	bcf	12,3	;volatile
   530  0040                     l745:
   531                           
   532                           ;main.c: 88:     PIE1bits.SSPIE = 1;
   533  0040  1683               	bsf	3,5	;RP0=1, select bank1
   534  0041  1303               	bcf	3,6	;RP1=0, select bank1
   535  0042  158C               	bsf	12,3	;volatile
   536  0043                     l747:
   537                           
   538                           ;main.c: 89:     TRISAbits.TRISA5 = 1;
   539  0043  1685               	bsf	5,5	;volatile
   540  0044                     l749:
   541                           
   542                           ;main.c: 90:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   543  0044  01F3               	clrf	spiInit@sDataSample
   544  0045  01F4               	clrf	spiInit@sClockIdle
   545  0046  01F5               	clrf	spiInit@sTransmitEdge
   546  0047  3024               	movlw	36
   547  0048  120A  118A  2068  120A  118A  	fcall	_spiInit
   548  004D                     l49:
   549  004D  0008               	return
   550  004E                     __end_of_setup:
   551                           
   552                           	psect	text2
   553  0068                     __ptext2:	
   554 ;; *************** function _spiInit *****************
   555 ;; Defined at:
   556 ;;		line 12 in file "SPI.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  sType           1    wreg     enum E1292
   559 ;;  sDataSample     1    3[COMMON] enum E1300
   560 ;;  sClockIdle      1    4[COMMON] enum E1304
   561 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  sType           1    6[COMMON] enum E1292
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         3       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         4       0       0       0       0
   577 ;;Total ram usage:        4 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    3
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_setup
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _spiInit
   589  0068                     _spiInit:
   590                           
   591                           ;incstack = 0
   592                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   593                           ;spiInit@sType stored from wreg
   594  0068  00F6               	movwf	spiInit@sType
   595  0069                     l727:
   596                           
   597                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   598  0069  1683               	bsf	3,5	;RP0=1, select bank1
   599  006A  1303               	bcf	3,6	;RP1=0, select bank1
   600  006B  1287               	bcf	7,5	;volatile
   601                           
   602                           ;SPI.c: 15:     if(sType & 0b00000100)
   603  006C  1D76               	btfss	spiInit@sType,2
   604  006D  286F               	goto	u41
   605  006E  2870               	goto	u40
   606  006F                     u41:
   607  006F  2874               	goto	l733
   608  0070                     u40:
   609  0070                     l729:
   610                           
   611                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   612  0070  0875               	movf	spiInit@sTransmitEdge,w
   613  0071  0094               	movwf	20	;volatile
   614  0072                     l731:
   615                           
   616                           ;SPI.c: 18:         TRISC3 = 1;
   617  0072  1587               	bsf	7,3	;volatile
   618                           
   619                           ;SPI.c: 19:     }
   620  0073  2878               	goto	l65
   621  0074                     l733:
   622                           
   623                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   624  0074  0873               	movf	spiInit@sDataSample,w
   625  0075  0475               	iorwf	spiInit@sTransmitEdge,w
   626  0076  0094               	movwf	20	;volatile
   627  0077                     l735:
   628                           
   629                           ;SPI.c: 23:         TRISC3 = 0;
   630  0077  1187               	bcf	7,3	;volatile
   631  0078                     l65:	
   632                           ;SPI.c: 24:     }
   633                           
   634                           
   635                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   636  0078  0876               	movf	spiInit@sType,w
   637  0079  0474               	iorwf	spiInit@sClockIdle,w
   638  007A  1283               	bcf	3,5	;RP0=0, select bank0
   639  007B  1303               	bcf	3,6	;RP1=0, select bank0
   640  007C  0094               	movwf	20	;volatile
   641  007D                     l66:
   642  007D  0008               	return
   643  007E                     __end_of_spiInit:
   644                           
   645                           	psect	text3
   646  0013                     __ptext3:	
   647 ;; *************** function _isr *****************
   648 ;; Defined at:
   649 ;;		line 51 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0
   665 ;;      Temps:          2       0       0       0       0
   666 ;;      Totals:         2       0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    2
   670 ;; This function calls:
   671 ;;		_spiRead
   672 ;;		_spiWrite
   673 ;; This function is called by:
   674 ;;		Interrupt level 1
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _isr
   680  0013                     _isr:
   681  0013                     i1l709:
   682                           
   683                           ;main.c: 52:    if(SSPIF == 1){
   684  0013  1283               	bcf	3,5	;RP0=0, select bank0
   685  0014  1303               	bcf	3,6	;RP1=0, select bank0
   686  0015  1D8C               	btfss	12,3	;volatile
   687  0016  2818               	goto	u3_21
   688  0017  2819               	goto	u3_20
   689  0018                     u3_21:
   690  0018  282A               	goto	i1l38
   691  0019                     u3_20:
   692  0019                     i1l711:
   693                           
   694                           ;main.c: 53:         PORTD = spiRead();
   695  0019  120A  118A  207E  120A  118A  	fcall	_spiRead
   696  001E  1283               	bcf	3,5	;RP0=0, select bank0
   697  001F  1303               	bcf	3,6	;RP1=0, select bank0
   698  0020  0088               	movwf	8	;volatile
   699                           
   700                           ;main.c: 54:         spiWrite(PORTB);
   701  0021  0806               	movf	6,w	;volatile
   702  0022  120A  118A  208E  120A  118A  	fcall	_spiWrite
   703  0027                     i1l713:
   704                           
   705                           ;main.c: 55:         SSPIF = 0;
   706  0027  1283               	bcf	3,5	;RP0=0, select bank0
   707  0028  1303               	bcf	3,6	;RP1=0, select bank0
   708  0029  118C               	bcf	12,3	;volatile
   709  002A                     i1l38:
   710  002A  0872               	movf	??_isr+1,w
   711  002B  008A               	movwf	10
   712  002C  0E71               	swapf	??_isr,w
   713  002D  0083               	movwf	3
   714  002E  0EFE               	swapf	btemp,f
   715  002F  0E7E               	swapf	btemp,w
   716  0030  0009               	retfie
   717  0031                     __end_of_isr:
   718                           
   719                           	psect	intentry
   720  0004                     __pintentry:	
   721                           ;incstack = 0
   722                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   723                           
   724  0004                     interrupt_function:
   725  007E                     saved_w	set	btemp
   726  0004  00FE               	movwf	btemp
   727  0005  0E03               	swapf	3,w
   728  0006  00F1               	movwf	??_isr
   729  0007  080A               	movf	10,w
   730  0008  00F2               	movwf	??_isr+1
   731  0009  120A  118A  2813   	ljmp	_isr
   732                           
   733                           	psect	text4
   734  008E                     __ptext4:	
   735 ;; *************** function _spiWrite *****************
   736 ;; Defined at:
   737 ;;		line 34 in file "SPI.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  dat             1    wreg     unsigned char 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  dat             1    0[COMMON] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         1       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         1       0       0       0       0
   755 ;;Total ram usage:        1 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_isr
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _spiWrite
   766  008E                     _spiWrite:
   767                           
   768                           ;incstack = 0
   769                           ; Regs used in _spiWrite: [wreg]
   770                           ;spiWrite@dat stored from wreg
   771  008E  00F0               	movwf	spiWrite@dat
   772  008F                     i1l693:
   773                           
   774                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   775  008F  0870               	movf	spiWrite@dat,w
   776  0090  1283               	bcf	3,5	;RP0=0, select bank0
   777  0091  1303               	bcf	3,6	;RP1=0, select bank0
   778  0092  0093               	movwf	19	;volatile
   779  0093                     i1l75:
   780  0093  0008               	return
   781  0094                     __end_of_spiWrite:
   782                           
   783                           	psect	text5
   784  007E                     __ptext5:	
   785 ;; *************** function _spiRead *****************
   786 ;; Defined at:
   787 ;;		line 47 in file "SPI.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      unsigned char 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    1
   808 ;; This function calls:
   809 ;;		_spiReceiveWait
   810 ;; This function is called by:
   811 ;;		_isr
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _spiRead
   817  007E                     _spiRead:
   818  007E                     i1l687:	
   819                           ;incstack = 0
   820                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   821                           
   822                           
   823                           ;SPI.c: 49:     spiReceiveWait();
   824  007E  120A  118A  2087  120A  118A  	fcall	_spiReceiveWait
   825  0083                     i1l689:
   826                           
   827                           ;SPI.c: 50:     return(SSPBUF);
   828  0083  1283               	bcf	3,5	;RP0=0, select bank0
   829  0084  1303               	bcf	3,6	;RP1=0, select bank0
   830  0085  0813               	movf	19,w	;volatile
   831  0086                     i1l83:
   832  0086  0008               	return
   833  0087                     __end_of_spiRead:
   834                           
   835                           	psect	text6
   836  0087                     __ptext6:	
   837 ;; *************** function _spiReceiveWait *****************
   838 ;; Defined at:
   839 ;;		line 29 in file "SPI.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		None
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_spiRead
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           
   867                           ;psect for function _spiReceiveWait
   868  0087                     _spiReceiveWait:
   869  0087                     i1l685:	
   870                           ;incstack = 0
   871                           ; Regs used in _spiReceiveWait: []
   872                           
   873  0087                     i1l69:	
   874                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   875                           
   876  0087  1683               	bsf	3,5	;RP0=1, select bank1
   877  0088  1303               	bcf	3,6	;RP1=0, select bank1
   878  0089  1C14               	btfss	20,0	;volatile
   879  008A  288C               	goto	u2_21
   880  008B  288D               	goto	u2_20
   881  008C                     u2_21:
   882  008C  2887               	goto	i1l69
   883  008D                     u2_20:
   884  008D                     i1l72:
   885  008D  0008               	return
   886  008E                     __end_of_spiReceiveWait:
   887  007E                     btemp	set	126	;btemp
   888  007E                     wtemp0	set	126
   889                           
   890                           	psect	config
   891                           
   892                           ;Config register CONFIG1 @ 0x2007
   893                           ;	Oscillator Selection bits
   894                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   895                           ;	Watchdog Timer Enable bit
   896                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   897                           ;	Power-up Timer Enable bit
   898                           ;	PWRTE = OFF, PWRT disabled
   899                           ;	RE3/MCLR pin function select bit
   900                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   901                           ;	Code Protection bit
   902                           ;	CP = OFF, Program memory code protection is disabled
   903                           ;	Data Code Protection bit
   904                           ;	CPD = OFF, Data memory code protection is disabled
   905                           ;	Brown Out Reset Selection bits
   906                           ;	BOREN = OFF, BOR disabled
   907                           ;	Internal External Switchover bit
   908                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   909                           ;	Fail-Safe Clock Monitor Enabled bit
   910                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   911                           ;	Low Voltage Programming Enable bit
   912                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   913                           ;	In-Circuit Debugger Mode bit
   914                           ;	DEBUG = 0x1, unprogrammed default
   915  2007                     	org	8199
   916  2007  20D6               	dw	8406
   917                           
   918                           ;Config register CONFIG2 @ 0x2008
   919                           ;	Brown-out Reset Selection bit
   920                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   921                           ;	Flash Program Memory Self Write Enable bits
   922                           ;	WRT = OFF, Write protection off
   923  2008                     	org	8200
   924  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              7 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 01:19:20 2021

            _SSPSTATbits 0094                       l65 0078                       l49 004D  
                     l66 007D                       u40 0070                       u41 006F  
                     u57 005D                      l731 0072                      l733 0074  
                    l741 003E                      l735 0077                      l727 0069  
                    l743 003F                      l751 004E                      l729 0070  
                    l745 0040                      l737 0031                      l753 0053  
                    l747 0043                      l739 003D                      l755 0057  
                    l749 0044                      _isr 0013                     ?_isr 0070  
                   i1l38 002A                     i1l72 008D                     i1l83 0086  
                   i1l75 0093                     i1l69 0087                     u2_20 008D  
                   u2_21 008C                     u3_20 0019                     u3_21 0018  
                   _main 004E                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l711 0019                    i1l713 0027                    i1l709 0013  
                  i1l685 0087                    i1l693 008F                    i1l687 007E  
                  i1l689 0083                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0031                    pclath 000A          __end_of_spiInit 007E  
        __end_of_spiRead 0087                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0068                   ??_main 0077  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 0094                ??_spiInit 0076  
              ??_spiRead 0070  __end_of__initialization 000F           __pcstackCOMMON 0070  
          __end_of_setup 004E                  ??_setup 0077               __pmaintext 004E  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 0031                  __ptext2 0068  
                __ptext3 0013                  __ptext4 008E                  __ptext5 007E  
                __ptext6 0087             __size_of_isr 001E                  _spiInit 0068  
                _spiRead 007E     end_of_initialization 000F               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 0087  
    start_initialization 000F              __end_of_isr 0031   __end_of_spiReceiveWait 008E  
              ___latbits 0002          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0073                 ?_spiRead 0070           __size_of_setup 001D  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C         __size_of_spiInit 0016  
       __size_of_spiRead 0009            __size_of_main 001A                 _spiWrite 008E  
           spiInit@sType 0076        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070  
