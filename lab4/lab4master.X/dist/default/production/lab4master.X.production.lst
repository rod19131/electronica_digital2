

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 03 13:16:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:
   460  0003                     stringtab:
   461  0003                     __stringtab:
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0003  1BFF               	btfsc	btemp+1,7
   465  0004  280D               	ljmp	stringcode
   466  0005  1383               	bcf	3,7
   467  0006  187F               	btfsc	btemp+1,0
   468  0007  1783               	bsf	3,7
   469  0008  0800               	movf	0,w
   470  0009  0A84               	incf	4,f
   471  000A  1903               	skipnz
   472  000B  0AFF               	incf	btemp+1,f
   473  000C  0008               	return
   474  000D                     stringcode:
   475  000D                     stringdir:
   476  000D  3000               	movlw	high stringdir
   477  000E  008A               	movwf	10
   478  000F  0804               	movf	4,w
   479  0010  0A84               	incf	4,f
   480  0011  0782               	addwf	2,f
   481  0012                     __stringbase:
   482  0012  3400               	retlw	0
   483  0013                     __end_of__stringtab:
   484  0013                     _dpowers:
   485  0013  3401               	retlw	1
   486  0014  3400               	retlw	0
   487  0015  340A               	retlw	10
   488  0016  3400               	retlw	0
   489  0017  3464               	retlw	100
   490  0018  3400               	retlw	0
   491  0019  34E8               	retlw	232
   492  001A  3403               	retlw	3
   493  001B  3410               	retlw	16
   494  001C  3427               	retlw	39
   495  001D                     __end_of_dpowers:
   496  0019                     _TXREG	set	25
   497  000C                     _PIR1bits	set	12
   498  000D                     _PIR2bits	set	13
   499  000B                     _INTCONbits	set	11
   500  0013                     _SSPBUF	set	19
   501  0014                     _SSPCON	set	20
   502  0018                     _RCSTAbits	set	24
   503  0008                     _PORTD	set	8
   504  0039                     _RC1	set	57
   505  0038                     _RC0	set	56
   506  0047                     _RD7	set	71
   507  0046                     _RD6	set	70
   508  0045                     _RD5	set	69
   509  0044                     _RD4	set	68
   510  0043                     _RD3	set	67
   511  0042                     _RD2	set	66
   512  0041                     _RD1	set	65
   513  0040                     _RD0	set	64
   514  0063                     _SSPIF	set	99
   515  005E                     _PEIE	set	94
   516  005F                     _GIE	set	95
   517  0091                     _SSPCON2bits	set	145
   518  0094                     _SSPSTAT	set	148
   519  0093                     _SSPADD	set	147
   520  0091                     _SSPCON2	set	145
   521  009A                     _SPBRGH	set	154
   522  0099                     _SPBRG	set	153
   523  0098                     _TXSTAbits	set	152
   524  0089                     _TRISE	set	137
   525  0088                     _TRISD	set	136
   526  0086                     _TRISB	set	134
   527  0087                     _TRISCbits	set	135
   528  0085                     _TRISA	set	133
   529  008F                     _OSCCONbits	set	143
   530  0463                     _SSPIE	set	1123
   531  043C                     _TRISC4	set	1084
   532  043B                     _TRISC3	set	1083
   533  010C                     _EEDAT	set	268
   534  010D                     _EEADR	set	269
   535  018D                     _EECON2	set	397
   536  018C                     _EECON1bits	set	396
   537  0187                     _BAUDCTLbits	set	391
   538  0188                     _ANSEL	set	392
   539  0189                     _ANSELH	set	393
   540  001D                     STR_2:
   541  001D  3441               	retlw	65	;'A'
   542  001E  3444               	retlw	68	;'D'
   543  001F  3443               	retlw	67	;'C'
   544  0020  343A               	retlw	58	;':'
   545  0021  3420               	retlw	32	;' '
   546  0022  3443               	retlw	67	;'C'
   547  0023  344F               	retlw	79	;'O'
   548  0024  344E               	retlw	78	;'N'
   549  0025  3454               	retlw	84	;'T'
   550  0026  343A               	retlw	58	;':'
   551  0027  3420               	retlw	32	;' '
   552  0028  3454               	retlw	84	;'T'
   553  0029  3445               	retlw	69	;'E'
   554  002A  344D               	retlw	77	;'M'
   555  002B  3450               	retlw	80	;'P'
   556  002C  343A               	retlw	58	;':'
   557  002D  3400               	retlw	0
   558  002E                     STR_1:
   559  002E  3425               	retlw	37	;'%'
   560  002F  3464               	retlw	100	;'d'
   561  0030  3420               	retlw	32	;' '
   562  0031  3420               	retlw	32	;' '
   563  0032  3420               	retlw	32	;' '
   564  0033  3425               	retlw	37	;'%'
   565  0034  3464               	retlw	100	;'d'
   566  0035  340A               	retlw	10
   567  0036  3400               	retlw	0
   568                           
   569                           	psect	cinit
   570  07F3                     start_initialization:	
   571                           ; #config settings
   572                           
   573  07F3                     __initialization:
   574                           
   575                           ; Clear objects allocated to BANK0
   576  07F3  1383               	bcf	3,7	;select IRP bank0
   577  07F4  3020               	movlw	low __pbssBANK0
   578  07F5  0084               	movwf	4
   579  07F6  303B               	movlw	low (__pbssBANK0+27)
   580  07F7  120A  118A  235E  120A  118A  	fcall	clear_ram0
   581  07FC                     end_of_initialization:	
   582                           ;End of C runtime variable initialization code
   583                           
   584  07FC                     __end_of__initialization:
   585  07FC  0183               	clrf	3
   586  07FD  120A  118A  2E7B   	ljmp	_main	;jump to C main() function
   587                           
   588                           	psect	bssBANK0
   589  0020                     __pbssBANK0:
   590  0020                     _t:
   591  0020                     	ds	4
   592  0024                     _sensorval:
   593  0024                     	ds	2
   594  0026                     _senms:
   595  0026                     	ds	2
   596  0028                     _s2:
   597  0028                     	ds	1
   598  0029                     _s1:
   599  0029                     	ds	1
   600  002A                     _a:
   601  002A                     	ds	1
   602  002B                     _volt:
   603  002B                     	ds	16
   604                           
   605                           	psect	clrtext
   606  035E                     clear_ram0:	
   607                           ;	Called with FSR containing the base address, and
   608                           ;	W with the last address+1
   609                           
   610  035E  0064               	clrwdt	;clear the watchdog before getting into this loop
   611  035F                     clrloop0:
   612  035F  0180               	clrf	0	;clear RAM location pointed to by FSR
   613  0360  0A84               	incf	4,f	;increment pointer
   614  0361  0604               	xorwf	4,w	;XOR with final address
   615  0362  1903               	btfsc	3,2	;have we reached the end yet?
   616  0363  3400               	retlw	0	;all done for this memory range, return
   617  0364  0604               	xorwf	4,w	;XOR again to restore value
   618  0365  2B5F               	goto	clrloop0	;do the next byte
   619                           
   620                           	psect	cstackCOMMON
   621  0070                     __pcstackCOMMON:
   622  0070                     ?_setup:
   623  0070                     ?_I2C_Master_Start:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ??_I2C_Master_Start:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_I2C_Master_Write:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_Master_Stop:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ??_I2C_Master_Stop:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_enviocadena:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_Lcd_Init:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Master_Wait:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_I2C_Master_Wait:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_Lcd_Port:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_Lcd_Port:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_Lcd_Cmd:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Write_Char:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_enviocaracter:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_enviocaracter:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_Master_Read:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?___lwdiv:	
   675                           ; 2 bytes @ 0x0
   676                           
   677  0070                     ?___lldiv:	
   678                           ; 2 bytes @ 0x0
   679                           
   680  0070                     Lcd_Port@a:	
   681                           ; 4 bytes @ 0x0
   682                           
   683  0070                     enviocaracter@a:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     I2C_Master_Write@d:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     I2C_Master_Read@a:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0070                     ___lwdiv@divisor:	
   693                           ; 2 bytes @ 0x0
   694                           
   695  0070                     ___lldiv@divisor:	
   696                           ; 2 bytes @ 0x0
   697                           
   698                           
   699                           ; 4 bytes @ 0x0
   700  0070                     	ds	1
   701  0071                     ??_enviocadena:
   702  0071                     ??_Lcd_Cmd:	
   703                           ; 1 bytes @ 0x1
   704                           
   705  0071                     ??_Lcd_Write_Char:	
   706                           ; 1 bytes @ 0x1
   707                           
   708                           
   709                           ; 1 bytes @ 0x1
   710  0071                     	ds	1
   711  0072                     ??_I2C_Master_Write:
   712  0072                     ??_I2C_Master_Read:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     Lcd_Write_Char@a:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     enviocadena@cadena:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ___lwdiv@dividend:	
   722                           ; 1 bytes @ 0x2
   723                           
   724                           
   725                           ; 2 bytes @ 0x2
   726  0072                     	ds	1
   727  0073                     ?_Lcd_Write_String:
   728  0073                     Lcd_Cmd@a:	
   729                           ; 1 bytes @ 0x3
   730                           
   731  0073                     Lcd_Write_String@a:	
   732                           ; 1 bytes @ 0x3
   733                           
   734                           
   735                           ; 2 bytes @ 0x3
   736  0073                     	ds	1
   737  0074                     ?_Lcd_Set_Cursor:
   738  0074                     ??_Lcd_Init:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     ??___lwdiv:	
   742                           ; 1 bytes @ 0x4
   743                           
   744  0074                     Lcd_Set_Cursor@b:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     I2C_Master_Read@temp:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     ___lldiv@dividend:	
   751                           ; 2 bytes @ 0x4
   752                           
   753                           
   754                           ; 4 bytes @ 0x4
   755  0074                     	ds	1
   756  0075                     ??_Lcd_Set_Cursor:
   757  0075                     ??_Lcd_Write_String:	
   758                           ; 1 bytes @ 0x5
   759                           
   760  0075                     ___lwdiv@quotient:	
   761                           ; 1 bytes @ 0x5
   762                           
   763                           
   764                           ; 2 bytes @ 0x5
   765  0075                     	ds	1
   766  0076                     Lcd_Set_Cursor@a:
   767                           
   768                           ; 1 bytes @ 0x6
   769  0076                     	ds	1
   770  0077                     Lcd_Set_Cursor@temp:
   771  0077                     ___lwdiv@counter:	
   772                           ; 1 bytes @ 0x7
   773                           
   774                           
   775                           ; 1 bytes @ 0x7
   776  0077                     	ds	1
   777  0078                     ??___lldiv:
   778  0078                     ?___lwmod:	
   779                           ; 1 bytes @ 0x8
   780                           
   781  0078                     Lcd_Write_String@i:	
   782                           ; 2 bytes @ 0x8
   783                           
   784  0078                     ___lwmod@divisor:	
   785                           ; 2 bytes @ 0x8
   786                           
   787                           
   788                           ; 2 bytes @ 0x8
   789  0078                     	ds	1
   790  0079                     ___lldiv@quotient:
   791                           
   792                           ; 4 bytes @ 0x9
   793  0079                     	ds	1
   794  007A                     ___lwmod@dividend:
   795                           
   796                           ; 2 bytes @ 0xA
   797  007A                     	ds	2
   798  007C                     ??___lwmod:
   799                           
   800                           ; 1 bytes @ 0xC
   801  007C                     	ds	1
   802  007D                     ___lldiv@counter:
   803  007D                     ___lwmod@counter:	
   804                           ; 1 bytes @ 0xD
   805                           
   806                           
   807                           ; 1 bytes @ 0xD
   808  007D                     	ds	1
   809  007E                     ??_setup:
   810                           
   811                           	psect	cstackBANK0
   812  003B                     __pcstackBANK0:	
   813                           ; 1 bytes @ 0xE
   814                           
   815  003B                     ?_I2C_Master_Init:
   816  003B                     ?_sprintf:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  003B                     sprintf@f:	
   820                           ; 2 bytes @ 0x0
   821                           
   822  003B                     I2C_Master_Init@c:	
   823                           ; 1 bytes @ 0x0
   824                           
   825                           
   826                           ; 4 bytes @ 0x0
   827  003B                     	ds	4
   828  003F                     ??_I2C_Master_Init:
   829                           
   830                           ; 1 bytes @ 0x4
   831  003F                     	ds	1
   832  0040                     ??_sprintf:
   833                           
   834                           ; 1 bytes @ 0x5
   835  0040                     	ds	3
   836  0043                     sprintf@ap:
   837                           
   838                           ; 1 bytes @ 0x8
   839  0043                     	ds	1
   840  0044                     sprintf@flag:
   841                           
   842                           ; 1 bytes @ 0x9
   843  0044                     	ds	1
   844  0045                     sprintf@prec:
   845                           
   846                           ; 1 bytes @ 0xA
   847  0045                     	ds	1
   848  0046                     sprintf@val:
   849                           
   850                           ; 2 bytes @ 0xB
   851  0046                     	ds	2
   852  0048                     sprintf@sp:
   853                           
   854                           ; 1 bytes @ 0xD
   855  0048                     	ds	1
   856  0049                     sprintf@c:
   857                           
   858                           ; 1 bytes @ 0xE
   859  0049                     	ds	1
   860  004A                     ??_main:
   861                           
   862                           ; 1 bytes @ 0xF
   863  004A                     	ds	5
   864                           
   865                           	psect	maintext
   866  067B                     __pmaintext:	
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   869 ;;
   870 ;; *************** function _main *****************
   871 ;; Defined at:
   872 ;;		line 69 in file "lab4master.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : B00/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          0       5       0       0       0
   889 ;;      Totals:         0       5       0       0       0
   890 ;;Total ram usage:        5 bytes
   891 ;; Hardware stack levels required when called:    4
   892 ;; This function calls:
   893 ;;		_I2C_Master_Read
   894 ;;		_I2C_Master_Start
   895 ;;		_I2C_Master_Stop
   896 ;;		_I2C_Master_Write
   897 ;;		_Lcd_Set_Cursor
   898 ;;		_Lcd_Write_String
   899 ;;		_enviocadena
   900 ;;		_setup
   901 ;;		_sprintf
   902 ;; This function is called by:
   903 ;;		Startup code after reset
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _main
   909  067B                     _main:
   910  067B                     l1572:	
   911                           ;incstack = 0
   912                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   913                           
   914                           
   915                           ;lab4master.c: 70:     setup();
   916  067B  120A  118A  2576  120A  118A  	fcall	_setup
   917  0680                     l1574:
   918                           
   919                           ;lab4master.c: 73:         I2C_Master_Start();
   920  0680  120A  118A  2366  120A  118A  	fcall	_I2C_Master_Start
   921  0685                     l1576:
   922                           
   923                           ;lab4master.c: 74:         I2C_Master_Write(0x51);
   924  0685  3051               	movlw	81
   925  0686  00F0               	movwf	I2C_Master_Write@d
   926  0687  3000               	movlw	0
   927  0688  00F1               	movwf	I2C_Master_Write@d+1
   928  0689  120A  118A  2378  120A  118A  	fcall	_I2C_Master_Write
   929  068E                     l1578:
   930                           
   931                           ;lab4master.c: 75:         s1 = I2C_Master_Read(0);
   932  068E  3000               	movlw	0
   933  068F  00F0               	movwf	I2C_Master_Read@a
   934  0690  00F1               	movwf	I2C_Master_Read@a+1
   935  0691  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Read
   936  0696  0870               	movf	?_I2C_Master_Read,w
   937  0697  1283               	bcf	3,5	;RP0=0, select bank0
   938  0698  1303               	bcf	3,6	;RP1=0, select bank0
   939  0699  00CA               	movwf	??_main
   940  069A  084A               	movf	??_main,w
   941  069B  00A9               	movwf	_s1
   942  069C                     l1580:
   943                           
   944                           ;lab4master.c: 76:         I2C_Master_Stop();
   945  069C  120A  118A  236F  120A  118A  	fcall	_I2C_Master_Stop
   946  06A1                     l1582:
   947                           
   948                           ;lab4master.c: 77:         _delay((unsigned long)((50)*(8000000/4000.0)));
   949  06A1  3082               	movlw	130
   950  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   951  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   952  06A4  00CB               	movwf	??_main+1
   953  06A5  30DD               	movlw	221
   954  06A6  00CA               	movwf	??_main
   955  06A7                     u987:
   956  06A7  0BCA               	decfsz	??_main,f
   957  06A8  2EA7               	goto	u987
   958  06A9  0BCB               	decfsz	??_main+1,f
   959  06AA  2EA7               	goto	u987
   960  06AB                     l1584:
   961                           
   962                           ;lab4master.c: 79:         I2C_Master_Start();
   963  06AB  120A  118A  2366  120A  118A  	fcall	_I2C_Master_Start
   964  06B0                     l1586:
   965                           
   966                           ;lab4master.c: 80:         I2C_Master_Write(0x61);
   967  06B0  3061               	movlw	97
   968  06B1  00F0               	movwf	I2C_Master_Write@d
   969  06B2  3000               	movlw	0
   970  06B3  00F1               	movwf	I2C_Master_Write@d+1
   971  06B4  120A  118A  2378  120A  118A  	fcall	_I2C_Master_Write
   972  06B9                     l1588:
   973                           
   974                           ;lab4master.c: 81:         s2 = I2C_Master_Read(0);
   975  06B9  3000               	movlw	0
   976  06BA  00F0               	movwf	I2C_Master_Read@a
   977  06BB  00F1               	movwf	I2C_Master_Read@a+1
   978  06BC  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Read
   979  06C1  0870               	movf	?_I2C_Master_Read,w
   980  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   981  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   982  06C4  00CA               	movwf	??_main
   983  06C5  084A               	movf	??_main,w
   984  06C6  00A8               	movwf	_s2
   985  06C7                     l1590:
   986                           
   987                           ;lab4master.c: 82:         I2C_Master_Stop();
   988  06C7  120A  118A  236F  120A  118A  	fcall	_I2C_Master_Stop
   989  06CC                     l1592:
   990                           
   991                           ;lab4master.c: 83:         _delay((unsigned long)((50)*(8000000/4000.0)));
   992  06CC  3082               	movlw	130
   993  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   994  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   995  06CF  00CB               	movwf	??_main+1
   996  06D0  30DD               	movlw	221
   997  06D1  00CA               	movwf	??_main
   998  06D2                     u997:
   999  06D2  0BCA               	decfsz	??_main,f
  1000  06D3  2ED2               	goto	u997
  1001  06D4  0BCB               	decfsz	??_main+1,f
  1002  06D5  2ED2               	goto	u997
  1003                           
  1004                           ;lab4master.c: 105:         sprintf(volt, "%d   %d\n", s1, s2);
  1005  06D6  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1006  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1007  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1008  06D9  00CA               	movwf	??_main
  1009  06DA  084A               	movf	??_main,w
  1010  06DB  00BB               	movwf	sprintf@f
  1011  06DC  0829               	movf	_s1,w
  1012  06DD  00CB               	movwf	??_main+1
  1013  06DE  01CC               	clrf	??_main+2
  1014  06DF  084B               	movf	??_main+1,w
  1015  06E0  00BC               	movwf	?_sprintf+1
  1016  06E1  084C               	movf	??_main+2,w
  1017  06E2  00BD               	movwf	?_sprintf+2
  1018  06E3  0828               	movf	_s2,w
  1019  06E4  00CD               	movwf	??_main+3
  1020  06E5  01CE               	clrf	??_main+4
  1021  06E6  084D               	movf	??_main+3,w
  1022  06E7  00BE               	movwf	?_sprintf+3
  1023  06E8  084E               	movf	??_main+4,w
  1024  06E9  00BF               	movwf	?_sprintf+4
  1025  06EA  302B               	movlw	(low (_volt| 0))& (0+255)
  1026  06EB  120A  118A  270B  120A  118A  	fcall	_sprintf
  1027  06F0                     l1594:
  1028                           
  1029                           ;lab4master.c: 106:         enviocadena(volt);
  1030  06F0  302B               	movlw	(low (_volt| 0))& (0+255)
  1031  06F1  120A  118A  23CF  120A  118A  	fcall	_enviocadena
  1032  06F6                     l1596:
  1033                           
  1034                           ;lab4master.c: 107:         Lcd_Set_Cursor(2,1);
  1035  06F6  01F4               	clrf	Lcd_Set_Cursor@b
  1036  06F7  0AF4               	incf	Lcd_Set_Cursor@b,f
  1037  06F8  3002               	movlw	2
  1038  06F9  120A  118A  23EE  120A  118A  	fcall	_Lcd_Set_Cursor
  1039  06FE                     l1598:
  1040                           
  1041                           ;lab4master.c: 108:         Lcd_Write_String(volt);
  1042  06FE  302B               	movlw	(low (_volt| 0))& (0+255)
  1043  06FF  00F3               	movwf	Lcd_Write_String@a
  1044  0700  3000               	movlw	0
  1045  0701  00F4               	movwf	Lcd_Write_String@a+1
  1046  0702  120A  118A  24F0  120A  118A  	fcall	_Lcd_Write_String
  1047  0707  2E80               	goto	l1574
  1048  0708  120A  118A  2800   	ljmp	start
  1049  070B                     __end_of_main:
  1050                           
  1051                           	psect	text1
  1052  070B                     __ptext1:	
  1053 ;; *************** function _sprintf *****************
  1054 ;; Defined at:
  1055 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  sp              1    wreg     PTR unsigned char 
  1058 ;;		 -> volt(16), 
  1059 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1060 ;;		 -> STR_1(9), 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  1063 ;;		 -> volt(16), 
  1064 ;;  tmpval          4    0        struct .
  1065 ;;  val             2   11[BANK0 ] unsigned int 
  1066 ;;  cp              2    0        PTR const unsigned char 
  1067 ;;  len             2    0        unsigned int 
  1068 ;;  c               1   14[BANK0 ] unsigned char 
  1069 ;;  prec            1   10[BANK0 ] char 
  1070 ;;  flag            1    9[BANK0 ] unsigned char 
  1071 ;;  ap              1    8[BANK0 ] PTR void [1]
  1072 ;;		 -> ?_sprintf(2), 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  2    0[BANK0 ] int 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       5       0       0       0
  1083 ;;      Locals:         0       7       0       0       0
  1084 ;;      Temps:          0       3       0       0       0
  1085 ;;      Totals:         0      15       0       0       0
  1086 ;;Total ram usage:       15 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    1
  1089 ;; This function calls:
  1090 ;;		___lwdiv
  1091 ;;		___lwmod
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           
  1098                           ;psect for function _sprintf
  1099  070B                     _sprintf:
  1100                           
  1101                           ;incstack = 0
  1102                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1103                           ;sprintf@sp stored from wreg
  1104  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1105  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1106  070D  00C8               	movwf	sprintf@sp
  1107  070E                     l1500:
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1110  070E  303C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1111  070F  00C0               	movwf	??_sprintf
  1112  0710  0840               	movf	??_sprintf,w
  1113  0711  00C3               	movwf	sprintf@ap
  1114                           
  1115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1116  0712  2FDC               	goto	l1552
  1117  0713                     l1502:
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1120  0713  3025               	movlw	37
  1121  0714  0649               	xorwf	sprintf@c,w
  1122  0715  1903               	btfsc	3,2
  1123  0716  2F18               	goto	u891
  1124  0717  2F19               	goto	u890
  1125  0718                     u891:
  1126  0718  2F25               	goto	l1508
  1127  0719                     u890:
  1128  0719                     l1504:
  1129                           
  1130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1131  0719  0849               	movf	sprintf@c,w
  1132  071A  00C0               	movwf	??_sprintf
  1133  071B  0848               	movf	sprintf@sp,w
  1134  071C  0084               	movwf	4
  1135  071D  0840               	movf	??_sprintf,w
  1136  071E  1383               	bcf	3,7	;select IRP bank0
  1137  071F  0080               	movwf	0
  1138  0720                     l1506:
  1139  0720  3001               	movlw	1
  1140  0721  00C0               	movwf	??_sprintf
  1141  0722  0840               	movf	??_sprintf,w
  1142  0723  07C8               	addwf	sprintf@sp,f
  1143                           
  1144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1145  0724  2FDC               	goto	l1552
  1146  0725                     l1508:
  1147                           
  1148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1149  0725  01C4               	clrf	sprintf@flag
  1150  0726                     l1512:	
  1151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1152                           
  1153  0726  3001               	movlw	1
  1154  0727  07BB               	addwf	sprintf@f,f
  1155  0728  30FF               	movlw	-1
  1156  0729  073B               	addwf	sprintf@f,w
  1157  072A  0084               	movwf	4
  1158  072B  120A  118A  200D  120A  118A  	fcall	stringdir
  1159  0730  00C9               	movwf	sprintf@c
  1160  0731  00C0               	movwf	??_sprintf
  1161  0732  01C1               	clrf	??_sprintf+1
  1162                           
  1163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1164                           ; Switch size 1, requested type "simple"
  1165                           ; Number of cases is 1, Range of values is 0 to 0
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte            4     3 (average)
  1169                           ; direct_byte           11     8 (fixed)
  1170                           ; jumptable            260     6 (fixed)
  1171                           ;	Chosen strategy is simple_byte
  1172  0733  0841               	movf	??_sprintf+1,w
  1173  0734  3A00               	xorlw	0	; case 0
  1174  0735  1903               	skipnz
  1175  0736  2F38               	goto	l1630
  1176  0737  2FDC               	goto	l1552
  1177  0738                     l1630:
  1178                           
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 3, Range of values is 0 to 105
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte           10     6 (average)
  1184                           ; jumptable            260     6 (fixed)
  1185                           ;	Chosen strategy is simple_byte
  1186  0738  0840               	movf	??_sprintf,w
  1187  0739  3A00               	xorlw	0	; case 0
  1188  073A  1903               	skipnz
  1189  073B  2FEE               	goto	l1554
  1190  073C  3A64               	xorlw	100	; case 100
  1191  073D  1903               	skipnz
  1192  073E  2F43               	goto	l1514
  1193  073F  3A0D               	xorlw	13	; case 105
  1194  0740  1903               	skipnz
  1195  0741  2F43               	goto	l1514
  1196  0742  2FDC               	goto	l1552
  1197  0743                     l1514:
  1198                           
  1199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1200  0743  0843               	movf	sprintf@ap,w
  1201  0744  0084               	movwf	4
  1202  0745  1383               	bcf	3,7	;select IRP bank0
  1203  0746  0800               	movf	0,w
  1204  0747  00C6               	movwf	sprintf@val
  1205  0748  0A84               	incf	4,f
  1206  0749  0800               	movf	0,w
  1207  074A  00C7               	movwf	sprintf@val+1
  1208  074B                     l1516:
  1209  074B  3002               	movlw	2
  1210  074C  00C0               	movwf	??_sprintf
  1211  074D  0840               	movf	??_sprintf,w
  1212  074E  07C3               	addwf	sprintf@ap,f
  1213  074F                     l1518:
  1214                           
  1215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1216  074F  1FC7               	btfss	sprintf@val+1,7
  1217  0750  2F52               	goto	u901
  1218  0751  2F53               	goto	u900
  1219  0752                     u901:
  1220  0752  2F5C               	goto	l1524
  1221  0753                     u900:
  1222  0753                     l1520:
  1223                           
  1224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1225  0753  3003               	movlw	3
  1226  0754  00C0               	movwf	??_sprintf
  1227  0755  0840               	movf	??_sprintf,w
  1228  0756  04C4               	iorwf	sprintf@flag,f
  1229  0757                     l1522:
  1230                           
  1231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1232  0757  09C6               	comf	sprintf@val,f
  1233  0758  09C7               	comf	sprintf@val+1,f
  1234  0759  0AC6               	incf	sprintf@val,f
  1235  075A  1903               	skipnz
  1236  075B  0AC7               	incf	sprintf@val+1,f
  1237  075C                     l1524:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1240  075C  01C9               	clrf	sprintf@c
  1241  075D  0AC9               	incf	sprintf@c,f
  1242  075E                     l1530:
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1245  075E  0849               	movf	sprintf@c,w
  1246  075F  00C0               	movwf	??_sprintf
  1247  0760  0740               	addwf	??_sprintf,w
  1248  0761  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1249  0762  0084               	movwf	4
  1250  0763  120A  118A  200D  120A  118A  	fcall	stringdir
  1251  0768  00C1               	movwf	??_sprintf+1
  1252  0769  120A  118A  200D  120A  118A  	fcall	stringdir
  1253  076E  00C2               	movwf	??_sprintf+2
  1254  076F  0842               	movf	??_sprintf+2,w
  1255  0770  0247               	subwf	sprintf@val+1,w
  1256  0771  1D03               	skipz
  1257  0772  2F75               	goto	u915
  1258  0773  0841               	movf	??_sprintf+1,w
  1259  0774  0246               	subwf	sprintf@val,w
  1260  0775                     u915:
  1261  0775  1803               	skipnc
  1262  0776  2F78               	goto	u911
  1263  0777  2F79               	goto	u910
  1264  0778                     u911:
  1265  0778  2F7A               	goto	l1534
  1266  0779                     u910:
  1267  0779  2F84               	goto	l1536
  1268  077A                     l1534:
  1269  077A  3001               	movlw	1
  1270  077B  00C0               	movwf	??_sprintf
  1271  077C  0840               	movf	??_sprintf,w
  1272  077D  07C9               	addwf	sprintf@c,f
  1273  077E  3005               	movlw	5
  1274  077F  0649               	xorwf	sprintf@c,w
  1275  0780  1D03               	btfss	3,2
  1276  0781  2F83               	goto	u921
  1277  0782  2F84               	goto	u920
  1278  0783                     u921:
  1279  0783  2F5E               	goto	l1530
  1280  0784                     u920:
  1281  0784                     l1536:
  1282                           
  1283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1284  0784  0844               	movf	sprintf@flag,w
  1285  0785  3903               	andlw	3
  1286  0786  1903               	btfsc	3,2
  1287  0787  2F89               	goto	u931
  1288  0788  2F8A               	goto	u930
  1289  0789                     u931:
  1290  0789  2F95               	goto	l1542
  1291  078A                     u930:
  1292  078A                     l1538:
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1295  078A  302D               	movlw	45
  1296  078B  00C0               	movwf	??_sprintf
  1297  078C  0848               	movf	sprintf@sp,w
  1298  078D  0084               	movwf	4
  1299  078E  0840               	movf	??_sprintf,w
  1300  078F  1383               	bcf	3,7	;select IRP bank0
  1301  0790  0080               	movwf	0
  1302  0791                     l1540:
  1303  0791  3001               	movlw	1
  1304  0792  00C0               	movwf	??_sprintf
  1305  0793  0840               	movf	??_sprintf,w
  1306  0794  07C8               	addwf	sprintf@sp,f
  1307  0795                     l1542:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1310  0795  0849               	movf	sprintf@c,w
  1311  0796  00C0               	movwf	??_sprintf
  1312  0797  0840               	movf	??_sprintf,w
  1313  0798  00C5               	movwf	sprintf@prec
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1316  0799  2FD3               	goto	l1550
  1317  079A                     l1544:
  1318                           
  1319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1320  079A  300A               	movlw	10
  1321  079B  00F8               	movwf	___lwmod@divisor
  1322  079C  3000               	movlw	0
  1323  079D  00F9               	movwf	___lwmod@divisor+1
  1324  079E  0845               	movf	sprintf@prec,w
  1325  079F  00C0               	movwf	??_sprintf
  1326  07A0  0740               	addwf	??_sprintf,w
  1327  07A1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1328  07A2  0084               	movwf	4
  1329  07A3  120A  118A  200D  120A  118A  	fcall	stringdir
  1330  07A8  00F0               	movwf	___lwdiv@divisor
  1331  07A9  120A  118A  200D  120A  118A  	fcall	stringdir
  1332  07AE  00F1               	movwf	___lwdiv@divisor+1
  1333  07AF  0847               	movf	sprintf@val+1,w
  1334  07B0  00F3               	movwf	___lwdiv@dividend+1
  1335  07B1  0846               	movf	sprintf@val,w
  1336  07B2  00F2               	movwf	___lwdiv@dividend
  1337  07B3  120A  118A  2532  120A  118A  	fcall	___lwdiv
  1338  07B8  0871               	movf	?___lwdiv+1,w
  1339  07B9  00FB               	movwf	___lwmod@dividend+1
  1340  07BA  0870               	movf	?___lwdiv,w
  1341  07BB  00FA               	movwf	___lwmod@dividend
  1342  07BC  120A  118A  2478  120A  118A  	fcall	___lwmod
  1343  07C1  0878               	movf	?___lwmod,w
  1344  07C2  3E30               	addlw	48
  1345  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1346  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1347  07C5  00C1               	movwf	??_sprintf+1
  1348  07C6  0841               	movf	??_sprintf+1,w
  1349  07C7  00C9               	movwf	sprintf@c
  1350  07C8                     l1546:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1353  07C8  0849               	movf	sprintf@c,w
  1354  07C9  00C0               	movwf	??_sprintf
  1355  07CA  0848               	movf	sprintf@sp,w
  1356  07CB  0084               	movwf	4
  1357  07CC  0840               	movf	??_sprintf,w
  1358  07CD  1383               	bcf	3,7	;select IRP bank0
  1359  07CE  0080               	movwf	0
  1360  07CF                     l1548:
  1361  07CF  3001               	movlw	1
  1362  07D0  00C0               	movwf	??_sprintf
  1363  07D1  0840               	movf	??_sprintf,w
  1364  07D2  07C8               	addwf	sprintf@sp,f
  1365  07D3                     l1550:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1368  07D3  30FF               	movlw	255
  1369  07D4  00C0               	movwf	??_sprintf
  1370  07D5  0840               	movf	??_sprintf,w
  1371  07D6  07C5               	addwf	sprintf@prec,f
  1372  07D7  0A45               	incf	sprintf@prec,w
  1373  07D8  1D03               	btfss	3,2
  1374  07D9  2FDB               	goto	u941
  1375  07DA  2FDC               	goto	u940
  1376  07DB                     u941:
  1377  07DB  2F9A               	goto	l1544
  1378  07DC                     u940:
  1379  07DC                     l1552:
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1382  07DC  3001               	movlw	1
  1383  07DD  07BB               	addwf	sprintf@f,f
  1384  07DE  30FF               	movlw	-1
  1385  07DF  073B               	addwf	sprintf@f,w
  1386  07E0  0084               	movwf	4
  1387  07E1  120A  118A  200D  120A  118A  	fcall	stringdir
  1388  07E6  00C0               	movwf	??_sprintf
  1389  07E7  0840               	movf	??_sprintf,w
  1390  07E8  00C9               	movwf	sprintf@c
  1391  07E9  0849               	movf	sprintf@c,w
  1392  07EA  1D03               	btfss	3,2
  1393  07EB  2FED               	goto	u951
  1394  07EC  2FEE               	goto	u950
  1395  07ED                     u951:
  1396  07ED  2F13               	goto	l1502
  1397  07EE                     u950:
  1398  07EE                     l1554:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1401  07EE  0848               	movf	sprintf@sp,w
  1402  07EF  0084               	movwf	4
  1403  07F0  1383               	bcf	3,7	;select IRP bank0
  1404  07F1  0180               	clrf	0
  1405  07F2                     l356:
  1406  07F2  0008               	return
  1407  07F3                     __end_of_sprintf:
  1408                           
  1409                           	psect	text2
  1410  0478                     __ptext2:	
  1411 ;; *************** function ___lwmod *****************
  1412 ;; Defined at:
  1413 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  divisor         2    8[COMMON] unsigned int 
  1416 ;;  dividend        2   10[COMMON] unsigned int 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  counter         1   13[COMMON] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    8[COMMON] unsigned int 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         4       0       0       0       0
  1429 ;;      Locals:         1       0       0       0       0
  1430 ;;      Temps:          1       0       0       0       0
  1431 ;;      Totals:         6       0       0       0       0
  1432 ;;Total ram usage:        6 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_sprintf
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function ___lwmod
  1443  0478                     ___lwmod:
  1444  0478                     l1402:	
  1445                           ;incstack = 0
  1446                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1447                           
  1448  0478  0878               	movf	___lwmod@divisor,w
  1449  0479  0479               	iorwf	___lwmod@divisor+1,w
  1450  047A  1903               	btfsc	3,2
  1451  047B  2C7D               	goto	u821
  1452  047C  2C7E               	goto	u820
  1453  047D                     u821:
  1454  047D  2CAD               	goto	l1420
  1455  047E                     u820:
  1456  047E                     l1404:
  1457  047E  01FD               	clrf	___lwmod@counter
  1458  047F  0AFD               	incf	___lwmod@counter,f
  1459  0480  2C8C               	goto	l1410
  1460  0481                     l1406:
  1461  0481  3001               	movlw	1
  1462  0482                     u835:
  1463  0482  1003               	clrc
  1464  0483  0DF8               	rlf	___lwmod@divisor,f
  1465  0484  0DF9               	rlf	___lwmod@divisor+1,f
  1466  0485  3EFF               	addlw	-1
  1467  0486  1D03               	skipz
  1468  0487  2C82               	goto	u835
  1469  0488                     l1408:
  1470  0488  3001               	movlw	1
  1471  0489  00FC               	movwf	??___lwmod
  1472  048A  087C               	movf	??___lwmod,w
  1473  048B  07FD               	addwf	___lwmod@counter,f
  1474  048C                     l1410:
  1475  048C  1FF9               	btfss	___lwmod@divisor+1,7
  1476  048D  2C8F               	goto	u841
  1477  048E  2C90               	goto	u840
  1478  048F                     u841:
  1479  048F  2C81               	goto	l1406
  1480  0490                     u840:
  1481  0490                     l1412:
  1482  0490  0879               	movf	___lwmod@divisor+1,w
  1483  0491  027B               	subwf	___lwmod@dividend+1,w
  1484  0492  1D03               	skipz
  1485  0493  2C96               	goto	u855
  1486  0494  0878               	movf	___lwmod@divisor,w
  1487  0495  027A               	subwf	___lwmod@dividend,w
  1488  0496                     u855:
  1489  0496  1C03               	skipc
  1490  0497  2C99               	goto	u851
  1491  0498  2C9A               	goto	u850
  1492  0499                     u851:
  1493  0499  2CA0               	goto	l1416
  1494  049A                     u850:
  1495  049A                     l1414:
  1496  049A  0878               	movf	___lwmod@divisor,w
  1497  049B  02FA               	subwf	___lwmod@dividend,f
  1498  049C  0879               	movf	___lwmod@divisor+1,w
  1499  049D  1C03               	skipc
  1500  049E  03FB               	decf	___lwmod@dividend+1,f
  1501  049F  02FB               	subwf	___lwmod@dividend+1,f
  1502  04A0                     l1416:
  1503  04A0  3001               	movlw	1
  1504  04A1                     u865:
  1505  04A1  1003               	clrc
  1506  04A2  0CF9               	rrf	___lwmod@divisor+1,f
  1507  04A3  0CF8               	rrf	___lwmod@divisor,f
  1508  04A4  3EFF               	addlw	-1
  1509  04A5  1D03               	skipz
  1510  04A6  2CA1               	goto	u865
  1511  04A7                     l1418:
  1512  04A7  3001               	movlw	1
  1513  04A8  02FD               	subwf	___lwmod@counter,f
  1514  04A9  1D03               	btfss	3,2
  1515  04AA  2CAC               	goto	u871
  1516  04AB  2CAD               	goto	u870
  1517  04AC                     u871:
  1518  04AC  2C90               	goto	l1412
  1519  04AD                     u870:
  1520  04AD                     l1420:
  1521  04AD  087B               	movf	___lwmod@dividend+1,w
  1522  04AE  00F9               	movwf	?___lwmod+1
  1523  04AF  087A               	movf	___lwmod@dividend,w
  1524  04B0  00F8               	movwf	?___lwmod
  1525  04B1                     l642:
  1526  04B1  0008               	return
  1527  04B2                     __end_of___lwmod:
  1528                           
  1529                           	psect	text3
  1530  0532                     __ptext3:	
  1531 ;; *************** function ___lwdiv *****************
  1532 ;; Defined at:
  1533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  divisor         2    0[COMMON] unsigned int 
  1536 ;;  dividend        2    2[COMMON] unsigned int 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  quotient        2    5[COMMON] unsigned int 
  1539 ;;  counter         1    7[COMMON] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  2    0[COMMON] unsigned int 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         4       0       0       0       0
  1550 ;;      Locals:         3       0       0       0       0
  1551 ;;      Temps:          1       0       0       0       0
  1552 ;;      Totals:         8       0       0       0       0
  1553 ;;Total ram usage:        8 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_sprintf
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function ___lwdiv
  1564  0532                     ___lwdiv:
  1565  0532                     l1376:	
  1566                           ;incstack = 0
  1567                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1568                           
  1569  0532  01F5               	clrf	___lwdiv@quotient
  1570  0533  01F6               	clrf	___lwdiv@quotient+1
  1571  0534                     l1378:
  1572  0534  0870               	movf	___lwdiv@divisor,w
  1573  0535  0471               	iorwf	___lwdiv@divisor+1,w
  1574  0536  1903               	btfsc	3,2
  1575  0537  2D39               	goto	u751
  1576  0538  2D3A               	goto	u750
  1577  0539                     u751:
  1578  0539  2D71               	goto	l1398
  1579  053A                     u750:
  1580  053A                     l1380:
  1581  053A  01F7               	clrf	___lwdiv@counter
  1582  053B  0AF7               	incf	___lwdiv@counter,f
  1583  053C  2D48               	goto	l1386
  1584  053D                     l1382:
  1585  053D  3001               	movlw	1
  1586  053E                     u765:
  1587  053E  1003               	clrc
  1588  053F  0DF0               	rlf	___lwdiv@divisor,f
  1589  0540  0DF1               	rlf	___lwdiv@divisor+1,f
  1590  0541  3EFF               	addlw	-1
  1591  0542  1D03               	skipz
  1592  0543  2D3E               	goto	u765
  1593  0544                     l1384:
  1594  0544  3001               	movlw	1
  1595  0545  00F4               	movwf	??___lwdiv
  1596  0546  0874               	movf	??___lwdiv,w
  1597  0547  07F7               	addwf	___lwdiv@counter,f
  1598  0548                     l1386:
  1599  0548  1FF1               	btfss	___lwdiv@divisor+1,7
  1600  0549  2D4B               	goto	u771
  1601  054A  2D4C               	goto	u770
  1602  054B                     u771:
  1603  054B  2D3D               	goto	l1382
  1604  054C                     u770:
  1605  054C                     l1388:
  1606  054C  3001               	movlw	1
  1607  054D                     u785:
  1608  054D  1003               	clrc
  1609  054E  0DF5               	rlf	___lwdiv@quotient,f
  1610  054F  0DF6               	rlf	___lwdiv@quotient+1,f
  1611  0550  3EFF               	addlw	-1
  1612  0551  1D03               	skipz
  1613  0552  2D4D               	goto	u785
  1614  0553  0871               	movf	___lwdiv@divisor+1,w
  1615  0554  0273               	subwf	___lwdiv@dividend+1,w
  1616  0555  1D03               	skipz
  1617  0556  2D59               	goto	u795
  1618  0557  0870               	movf	___lwdiv@divisor,w
  1619  0558  0272               	subwf	___lwdiv@dividend,w
  1620  0559                     u795:
  1621  0559  1C03               	skipc
  1622  055A  2D5C               	goto	u791
  1623  055B  2D5D               	goto	u790
  1624  055C                     u791:
  1625  055C  2D64               	goto	l1394
  1626  055D                     u790:
  1627  055D                     l1390:
  1628  055D  0870               	movf	___lwdiv@divisor,w
  1629  055E  02F2               	subwf	___lwdiv@dividend,f
  1630  055F  0871               	movf	___lwdiv@divisor+1,w
  1631  0560  1C03               	skipc
  1632  0561  03F3               	decf	___lwdiv@dividend+1,f
  1633  0562  02F3               	subwf	___lwdiv@dividend+1,f
  1634  0563                     l1392:
  1635  0563  1475               	bsf	___lwdiv@quotient,0
  1636  0564                     l1394:
  1637  0564  3001               	movlw	1
  1638  0565                     u805:
  1639  0565  1003               	clrc
  1640  0566  0CF1               	rrf	___lwdiv@divisor+1,f
  1641  0567  0CF0               	rrf	___lwdiv@divisor,f
  1642  0568  3EFF               	addlw	-1
  1643  0569  1D03               	skipz
  1644  056A  2D65               	goto	u805
  1645  056B                     l1396:
  1646  056B  3001               	movlw	1
  1647  056C  02F7               	subwf	___lwdiv@counter,f
  1648  056D  1D03               	btfss	3,2
  1649  056E  2D70               	goto	u811
  1650  056F  2D71               	goto	u810
  1651  0570                     u811:
  1652  0570  2D4C               	goto	l1388
  1653  0571                     u810:
  1654  0571                     l1398:
  1655  0571  0876               	movf	___lwdiv@quotient+1,w
  1656  0572  00F1               	movwf	?___lwdiv+1
  1657  0573  0875               	movf	___lwdiv@quotient,w
  1658  0574  00F0               	movwf	?___lwdiv
  1659  0575                     l632:
  1660  0575  0008               	return
  1661  0576                     __end_of___lwdiv:
  1662                           
  1663                           	psect	text4
  1664  0576                     __ptext4:	
  1665 ;; *************** function _setup *****************
  1666 ;; Defined at:
  1667 ;;		line 114 in file "lab4master.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1681 ;;      Params:         0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    3
  1688 ;; This function calls:
  1689 ;;		_I2C_Master_Init
  1690 ;;		_Lcd_Init
  1691 ;;		_Lcd_Set_Cursor
  1692 ;;		_Lcd_Write_String
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function _setup
  1700  0576                     _setup:
  1701  0576                     l1424:	
  1702                           ;incstack = 0
  1703                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1704                           
  1705                           
  1706                           ;lab4master.c: 117:     OSCCONbits.IRCF = 7;
  1707  0576  3070               	movlw	112
  1708  0577  1683               	bsf	3,5	;RP0=1, select bank1
  1709  0578  1303               	bcf	3,6	;RP1=0, select bank1
  1710  0579  048F               	iorwf	15,f	;volatile
  1711  057A                     l1426:
  1712                           
  1713                           ;lab4master.c: 118:     OSCCONbits.SCS = 1;
  1714  057A  140F               	bsf	15,0	;volatile
  1715  057B                     l1428:
  1716                           
  1717                           ;lab4master.c: 120:     ANSELH = 0;
  1718  057B  1683               	bsf	3,5	;RP0=1, select bank3
  1719  057C  1703               	bsf	3,6	;RP1=1, select bank3
  1720  057D  0189               	clrf	9	;volatile
  1721  057E                     l1430:
  1722                           
  1723                           ;lab4master.c: 121:     ANSEL = 0;
  1724  057E  0188               	clrf	8	;volatile
  1725  057F                     l1432:
  1726                           
  1727                           ;lab4master.c: 122:     TRISA = 0;
  1728  057F  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0580  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0581  0185               	clrf	5	;volatile
  1731  0582                     l1434:
  1732                           
  1733                           ;lab4master.c: 123:     TRISCbits.TRISC0 = 0;
  1734  0582  1007               	bcf	7,0	;volatile
  1735  0583                     l1436:
  1736                           
  1737                           ;lab4master.c: 124:     TRISCbits.TRISC1 = 0;
  1738  0583  1087               	bcf	7,1	;volatile
  1739  0584                     l1438:
  1740                           
  1741                           ;lab4master.c: 125:     TRISB = 0;
  1742  0584  0186               	clrf	6	;volatile
  1743  0585                     l1440:
  1744                           
  1745                           ;lab4master.c: 126:     TRISD = 0;
  1746  0585  0188               	clrf	8	;volatile
  1747  0586                     l1442:
  1748                           
  1749                           ;lab4master.c: 127:     TRISE = 0;
  1750  0586  0189               	clrf	9	;volatile
  1751  0587                     l1444:
  1752                           
  1753                           ;lab4master.c: 128:     PORTD = 0;
  1754  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0589  0188               	clrf	8	;volatile
  1757  058A                     l1446:
  1758                           
  1759                           ;lab4master.c: 130:     TXSTAbits.SYNC = 0;
  1760  058A  1683               	bsf	3,5	;RP0=1, select bank1
  1761  058B  1303               	bcf	3,6	;RP1=0, select bank1
  1762  058C  1218               	bcf	24,4	;volatile
  1763  058D                     l1448:
  1764                           
  1765                           ;lab4master.c: 131:     TXSTAbits.BRGH = 1;
  1766  058D  1518               	bsf	24,2	;volatile
  1767  058E                     l1450:
  1768                           
  1769                           ;lab4master.c: 133:     BAUDCTLbits.BRG16 = 1;
  1770  058E  1683               	bsf	3,5	;RP0=1, select bank3
  1771  058F  1703               	bsf	3,6	;RP1=1, select bank3
  1772  0590  1587               	bsf	7,3	;volatile
  1773  0591                     l1452:
  1774                           
  1775                           ;lab4master.c: 135:     SPBRG = 207;
  1776  0591  30CF               	movlw	207
  1777  0592  1683               	bsf	3,5	;RP0=1, select bank1
  1778  0593  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0594  0099               	movwf	25	;volatile
  1780  0595                     l1454:
  1781                           
  1782                           ;lab4master.c: 136:     SPBRGH = 0;
  1783  0595  019A               	clrf	26	;volatile
  1784  0596                     l1456:
  1785                           
  1786                           ;lab4master.c: 138:     RCSTAbits.SPEN = 1;
  1787  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0598  1798               	bsf	24,7	;volatile
  1790  0599                     l1458:
  1791                           
  1792                           ;lab4master.c: 139:     RCSTAbits.RX9 = 0;
  1793  0599  1318               	bcf	24,6	;volatile
  1794  059A                     l1460:
  1795                           
  1796                           ;lab4master.c: 140:     RCSTAbits.CREN = 1;
  1797  059A  1618               	bsf	24,4	;volatile
  1798  059B                     l1462:
  1799                           
  1800                           ;lab4master.c: 141:     TXSTAbits.TXEN = 1;
  1801  059B  1683               	bsf	3,5	;RP0=1, select bank1
  1802  059C  1303               	bcf	3,6	;RP1=0, select bank1
  1803  059D  1698               	bsf	24,5	;volatile
  1804  059E                     l1464:
  1805                           
  1806                           ;lab4master.c: 143:     Lcd_Init();
  1807  059E  120A  118A  25C4  120A  118A  	fcall	_Lcd_Init
  1808  05A3                     l1466:
  1809                           
  1810                           ;lab4master.c: 144:     Lcd_Set_Cursor(1,1);
  1811  05A3  01F4               	clrf	Lcd_Set_Cursor@b
  1812  05A4  0AF4               	incf	Lcd_Set_Cursor@b,f
  1813  05A5  3001               	movlw	1
  1814  05A6  120A  118A  23EE  120A  118A  	fcall	_Lcd_Set_Cursor
  1815  05AB                     l1468:
  1816                           
  1817                           ;lab4master.c: 145:     Lcd_Write_String("ADC: CONT: TEMP:");
  1818  05AB  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1819  05AC  00F3               	movwf	Lcd_Write_String@a
  1820  05AD  3080               	movlw	128
  1821  05AE  00F4               	movwf	Lcd_Write_String@a+1
  1822  05AF  120A  118A  24F0  120A  118A  	fcall	_Lcd_Write_String
  1823  05B4                     l1470:
  1824                           
  1825                           ;lab4master.c: 146:     I2C_Master_Init(100000);
  1826  05B4  3000               	movlw	0
  1827  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1828  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1829  05B7  00BE               	movwf	I2C_Master_Init@c+3
  1830  05B8  3001               	movlw	1
  1831  05B9  00BD               	movwf	I2C_Master_Init@c+2
  1832  05BA  3086               	movlw	134
  1833  05BB  00BC               	movwf	I2C_Master_Init@c+1
  1834  05BC  30A0               	movlw	160
  1835  05BD  00BB               	movwf	I2C_Master_Init@c
  1836  05BE  120A  118A  2440  120A  118A  	fcall	_I2C_Master_Init
  1837  05C3                     l77:
  1838  05C3  0008               	return
  1839  05C4                     __end_of_setup:
  1840                           
  1841                           	psect	text5
  1842  04F0                     __ptext5:	
  1843 ;; *************** function _Lcd_Write_String *****************
  1844 ;; Defined at:
  1845 ;;		line 104 in file "LCD8bits.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  a               2    3[COMMON] PTR unsigned char 
  1848 ;;		 -> STR_2(17), volt(16), 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  i               2    8[COMMON] int 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         2       0       0       0       0
  1861 ;;      Locals:         2       0       0       0       0
  1862 ;;      Temps:          3       0       0       0       0
  1863 ;;      Totals:         7       0       0       0       0
  1864 ;;Total ram usage:        7 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    2
  1867 ;; This function calls:
  1868 ;;		_Lcd_Write_Char
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;;		_setup
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _Lcd_Write_String
  1877  04F0                     _Lcd_Write_String:
  1878  04F0                     l1338:	
  1879                           ;incstack = 0
  1880                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1881                           
  1882                           
  1883                           ;LCD8bits.c: 105:     int i;;LCD8bits.c: 106:     for (i = 0; a[i] != '\0'; i++)
  1884  04F0  01F8               	clrf	Lcd_Write_String@i
  1885  04F1  01F9               	clrf	Lcd_Write_String@i+1
  1886  04F2  2D15               	goto	l1344
  1887  04F3                     l1340:
  1888                           
  1889                           ;LCD8bits.c: 107:         Lcd_Write_Char(a[i]);
  1890  04F3  0878               	movf	Lcd_Write_String@i,w
  1891  04F4  0773               	addwf	Lcd_Write_String@a,w
  1892  04F5  00F6               	movwf	??_Lcd_Write_String+1
  1893  04F6  0874               	movf	Lcd_Write_String@a+1,w
  1894  04F7  00F5               	movwf	??_Lcd_Write_String
  1895  04F8  1803               	skipnc
  1896  04F9  0AF5               	incf	??_Lcd_Write_String,f
  1897  04FA  1FF8               	btfss	Lcd_Write_String@i,7
  1898  04FB  2CFD               	goto	u670
  1899  04FC  03F5               	decf	??_Lcd_Write_String,f
  1900  04FD                     u670:
  1901  04FD  0875               	movf	??_Lcd_Write_String,w
  1902  04FE  00F7               	movwf	??_Lcd_Write_String+2
  1903  04FF  0877               	movf	??_Lcd_Write_String+2,w
  1904  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0502  00FF               	movwf	btemp+1
  1907  0503  0876               	movf	??_Lcd_Write_String+1,w
  1908  0504  0084               	movwf	4
  1909  0505  120A  118A  2003  120A  118A  	fcall	stringtab
  1910  050A  120A  118A  239F  120A  118A  	fcall	_Lcd_Write_Char
  1911  050F                     l1342:
  1912  050F  3001               	movlw	1
  1913  0510  07F8               	addwf	Lcd_Write_String@i,f
  1914  0511  1803               	skipnc
  1915  0512  0AF9               	incf	Lcd_Write_String@i+1,f
  1916  0513  3000               	movlw	0
  1917  0514  07F9               	addwf	Lcd_Write_String@i+1,f
  1918  0515                     l1344:
  1919  0515  0878               	movf	Lcd_Write_String@i,w
  1920  0516  0773               	addwf	Lcd_Write_String@a,w
  1921  0517  00F6               	movwf	??_Lcd_Write_String+1
  1922  0518  0874               	movf	Lcd_Write_String@a+1,w
  1923  0519  00F5               	movwf	??_Lcd_Write_String
  1924  051A  1803               	skipnc
  1925  051B  0AF5               	incf	??_Lcd_Write_String,f
  1926  051C  1FF8               	btfss	Lcd_Write_String@i,7
  1927  051D  2D1F               	goto	u680
  1928  051E  03F5               	decf	??_Lcd_Write_String,f
  1929  051F                     u680:
  1930  051F  0875               	movf	??_Lcd_Write_String,w
  1931  0520  00F7               	movwf	??_Lcd_Write_String+2
  1932  0521  0877               	movf	??_Lcd_Write_String+2,w
  1933  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0524  00FF               	movwf	btemp+1
  1936  0525  0876               	movf	??_Lcd_Write_String+1,w
  1937  0526  0084               	movwf	4
  1938  0527  120A  118A  2003  120A  118A  	fcall	stringtab
  1939  052C  3A00               	xorlw	0
  1940  052D  1D03               	skipz
  1941  052E  2D30               	goto	u691
  1942  052F  2D31               	goto	u690
  1943  0530                     u691:
  1944  0530  2CF3               	goto	l1340
  1945  0531                     u690:
  1946  0531                     l199:
  1947  0531  0008               	return
  1948  0532                     __end_of_Lcd_Write_String:
  1949                           
  1950                           	psect	text6
  1951  039F                     __ptext6:	
  1952 ;; *************** function _Lcd_Write_Char *****************
  1953 ;; Defined at:
  1954 ;;		line 96 in file "LCD8bits.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  a               1    wreg     unsigned char 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  a               1    2[COMMON] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, pclath, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       0       0       0       0
  1969 ;;      Locals:         1       0       0       0       0
  1970 ;;      Temps:          1       0       0       0       0
  1971 ;;      Totals:         2       0       0       0       0
  1972 ;;Total ram usage:        2 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    1
  1975 ;; This function calls:
  1976 ;;		_Lcd_Port
  1977 ;; This function is called by:
  1978 ;;		_Lcd_Write_String
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _Lcd_Write_Char
  1984  039F                     _Lcd_Write_Char:
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1988                           ;Lcd_Write_Char@a stored from wreg
  1989  039F  00F2               	movwf	Lcd_Write_Char@a
  1990  03A0                     l1292:
  1991                           
  1992                           ;LCD8bits.c: 97:     RC0 = 1;
  1993  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1994  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1995  03A2  1407               	bsf	7,0	;volatile
  1996  03A3                     l1294:
  1997                           
  1998                           ;LCD8bits.c: 98:     Lcd_Port(a);
  1999  03A3  0872               	movf	Lcd_Write_Char@a,w
  2000  03A4  120A  118A  24B2  120A  118A  	fcall	_Lcd_Port
  2001  03A9                     l1296:
  2002                           
  2003                           ;LCD8bits.c: 99:     RC1 = 1;
  2004  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2005  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2006  03AB  1487               	bsf	7,1	;volatile
  2007  03AC                     l1298:
  2008                           
  2009                           ;LCD8bits.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2010  03AC  301A               	movlw	26
  2011  03AD  00F1               	movwf	??_Lcd_Write_Char
  2012  03AE                     u1007:
  2013  03AE  0BF1               	decfsz	??_Lcd_Write_Char,f
  2014  03AF  2BAE               	goto	u1007
  2015  03B0  0000               	nop
  2016  03B1                     l1300:
  2017                           
  2018                           ;LCD8bits.c: 101:     RC1 = 0;
  2019  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2020  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2021  03B3  1087               	bcf	7,1	;volatile
  2022  03B4                     l193:
  2023  03B4  0008               	return
  2024  03B5                     __end_of_Lcd_Write_Char:
  2025                           
  2026                           	psect	text7
  2027  03EE                     __ptext7:	
  2028 ;; *************** function _Lcd_Set_Cursor *****************
  2029 ;; Defined at:
  2030 ;;		line 68 in file "LCD8bits.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  a               1    wreg     unsigned char 
  2033 ;;  b               1    4[COMMON] unsigned char 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  a               1    6[COMMON] unsigned char 
  2036 ;;  temp            1    7[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         1       0       0       0       0
  2047 ;;      Locals:         2       0       0       0       0
  2048 ;;      Temps:          1       0       0       0       0
  2049 ;;      Totals:         4       0       0       0       0
  2050 ;;Total ram usage:        4 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    2
  2053 ;; This function calls:
  2054 ;;		_Lcd_Cmd
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;;		_setup
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _Lcd_Set_Cursor
  2063  03EE                     _Lcd_Set_Cursor:
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2067                           ;Lcd_Set_Cursor@a stored from wreg
  2068  03EE  00F6               	movwf	Lcd_Set_Cursor@a
  2069  03EF                     l1326:
  2070                           
  2071                           ;LCD8bits.c: 69:     unsigned char temp;;LCD8bits.c: 70:     if (a == 1) {
  2072  03EF  0376               	decf	Lcd_Set_Cursor@a,w
  2073  03F0  1D03               	btfss	3,2
  2074  03F1  2BF3               	goto	u651
  2075  03F2  2BF4               	goto	u650
  2076  03F3                     u651:
  2077  03F3  2C00               	goto	l1332
  2078  03F4                     u650:
  2079  03F4                     l1328:
  2080                           
  2081                           ;LCD8bits.c: 71:         temp = 0x80 + b - 1;
  2082  03F4  0874               	movf	Lcd_Set_Cursor@b,w
  2083  03F5  3E7F               	addlw	127
  2084  03F6  00F5               	movwf	??_Lcd_Set_Cursor
  2085  03F7  0875               	movf	??_Lcd_Set_Cursor,w
  2086  03F8  00F7               	movwf	Lcd_Set_Cursor@temp
  2087  03F9                     l1330:
  2088                           
  2089                           ;LCD8bits.c: 72:         Lcd_Cmd(temp);
  2090  03F9  0877               	movf	Lcd_Set_Cursor@temp,w
  2091  03FA  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2092                           
  2093                           ;LCD8bits.c: 74:     } else if (a == 2) {
  2094  03FF  2C11               	goto	l187
  2095  0400                     l1332:
  2096  0400  3002               	movlw	2
  2097  0401  0676               	xorwf	Lcd_Set_Cursor@a,w
  2098  0402  1D03               	btfss	3,2
  2099  0403  2C05               	goto	u661
  2100  0404  2C06               	goto	u660
  2101  0405                     u661:
  2102  0405  2C11               	goto	l187
  2103  0406                     u660:
  2104  0406                     l1334:
  2105                           
  2106                           ;LCD8bits.c: 75:         temp = 0xC0 + b - 1;
  2107  0406  0874               	movf	Lcd_Set_Cursor@b,w
  2108  0407  3EBF               	addlw	191
  2109  0408  00F5               	movwf	??_Lcd_Set_Cursor
  2110  0409  0875               	movf	??_Lcd_Set_Cursor,w
  2111  040A  00F7               	movwf	Lcd_Set_Cursor@temp
  2112  040B                     l1336:
  2113                           
  2114                           ;LCD8bits.c: 76:         Lcd_Cmd(temp);
  2115  040B  0877               	movf	Lcd_Set_Cursor@temp,w
  2116  040C  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2117  0411                     l187:
  2118  0411  0008               	return
  2119  0412                     __end_of_Lcd_Set_Cursor:
  2120                           
  2121                           	psect	text8
  2122  05C4                     __ptext8:	
  2123 ;; *************** function _Lcd_Init *****************
  2124 ;; Defined at:
  2125 ;;		line 80 in file "LCD8bits.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0
  2141 ;;      Temps:          2       0       0       0       0
  2142 ;;      Totals:         2       0       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		_Lcd_Cmd
  2148 ;;		_Lcd_Port
  2149 ;; This function is called by:
  2150 ;;		_setup
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _Lcd_Init
  2156  05C4                     _Lcd_Init:
  2157  05C4                     l1346:	
  2158                           ;incstack = 0
  2159                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2160                           
  2161                           
  2162                           ;LCD8bits.c: 81:     Lcd_Port(0);
  2163  05C4  3000               	movlw	0
  2164  05C5  120A  118A  24B2  120A  118A  	fcall	_Lcd_Port
  2165  05CA                     l1348:
  2166                           
  2167                           ;LCD8bits.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2168  05CA  3034               	movlw	52
  2169  05CB  00F5               	movwf	??_Lcd_Init+1
  2170  05CC  30F1               	movlw	241
  2171  05CD  00F4               	movwf	??_Lcd_Init
  2172  05CE                     u1017:
  2173  05CE  0BF4               	decfsz	??_Lcd_Init,f
  2174  05CF  2DCE               	goto	u1017
  2175  05D0  0BF5               	decfsz	??_Lcd_Init+1,f
  2176  05D1  2DCE               	goto	u1017
  2177  05D2  2DD3               	nop2
  2178  05D3                     l1350:
  2179                           
  2180                           ;LCD8bits.c: 83:     Lcd_Cmd(48);
  2181  05D3  3030               	movlw	48
  2182  05D4  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2183                           
  2184                           ;LCD8bits.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2185  05D9  300D               	movlw	13
  2186  05DA  00F5               	movwf	??_Lcd_Init+1
  2187  05DB  30FB               	movlw	251
  2188  05DC  00F4               	movwf	??_Lcd_Init
  2189  05DD                     u1027:
  2190  05DD  0BF4               	decfsz	??_Lcd_Init,f
  2191  05DE  2DDD               	goto	u1027
  2192  05DF  0BF5               	decfsz	??_Lcd_Init+1,f
  2193  05E0  2DDD               	goto	u1027
  2194  05E1  2DE2               	nop2
  2195  05E2                     l1352:
  2196                           
  2197                           ;LCD8bits.c: 85:     Lcd_Cmd(48);
  2198  05E2  3030               	movlw	48
  2199  05E3  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2200  05E8                     l1354:
  2201                           
  2202                           ;LCD8bits.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2203  05E8  301D               	movlw	29
  2204  05E9  00F5               	movwf	??_Lcd_Init+1
  2205  05EA  3091               	movlw	145
  2206  05EB  00F4               	movwf	??_Lcd_Init
  2207  05EC                     u1037:
  2208  05EC  0BF4               	decfsz	??_Lcd_Init,f
  2209  05ED  2DEC               	goto	u1037
  2210  05EE  0BF5               	decfsz	??_Lcd_Init+1,f
  2211  05EF  2DEC               	goto	u1037
  2212                           
  2213                           ;LCD8bits.c: 87:     Lcd_Cmd(48);
  2214  05F0  3030               	movlw	48
  2215  05F1  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2216                           
  2217                           ;LCD8bits.c: 89:     Lcd_Cmd(56);
  2218  05F6  3038               	movlw	56
  2219  05F7  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2220                           
  2221                           ;LCD8bits.c: 90:     Lcd_Cmd(8);
  2222  05FC  3008               	movlw	8
  2223  05FD  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2224                           
  2225                           ;LCD8bits.c: 91:     Lcd_Cmd(1);
  2226  0602  3001               	movlw	1
  2227  0603  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2228                           
  2229                           ;LCD8bits.c: 92:     Lcd_Cmd(6);
  2230  0608  3006               	movlw	6
  2231  0609  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2232                           
  2233                           ;LCD8bits.c: 93:     Lcd_Cmd(12);
  2234  060E  300C               	movlw	12
  2235  060F  120A  118A  23B5  120A  118A  	fcall	_Lcd_Cmd
  2236  0614                     l190:
  2237  0614  0008               	return
  2238  0615                     __end_of_Lcd_Init:
  2239                           
  2240                           	psect	text9
  2241  03B5                     __ptext9:	
  2242 ;; *************** function _Lcd_Cmd *****************
  2243 ;; Defined at:
  2244 ;;		line 55 in file "LCD8bits.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  a               1    wreg     unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  a               1    3[COMMON] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         0       0       0       0       0
  2259 ;;      Locals:         1       0       0       0       0
  2260 ;;      Temps:          2       0       0       0       0
  2261 ;;      Totals:         3       0       0       0       0
  2262 ;;Total ram usage:        3 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    1
  2265 ;; This function calls:
  2266 ;;		_Lcd_Port
  2267 ;; This function is called by:
  2268 ;;		_Lcd_Set_Cursor
  2269 ;;		_Lcd_Init
  2270 ;;		_Lcd_Clear
  2271 ;;		_Lcd_Shift_Right
  2272 ;;		_Lcd_Shift_Left
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _Lcd_Cmd
  2278  03B5                     _Lcd_Cmd:
  2279                           
  2280                           ;incstack = 0
  2281                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2282                           ;Lcd_Cmd@a stored from wreg
  2283  03B5  00F3               	movwf	Lcd_Cmd@a
  2284  03B6                     l1282:
  2285                           
  2286                           ;LCD8bits.c: 56:     RC0 = 0;
  2287  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2288  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2289  03B8  1007               	bcf	7,0	;volatile
  2290  03B9                     l1284:
  2291                           
  2292                           ;LCD8bits.c: 57:     Lcd_Port(a);
  2293  03B9  0873               	movf	Lcd_Cmd@a,w
  2294  03BA  120A  118A  24B2  120A  118A  	fcall	_Lcd_Port
  2295  03BF                     l1286:
  2296                           
  2297                           ;LCD8bits.c: 58:     RC1 = 1;
  2298  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2299  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2300  03C1  1487               	bsf	7,1	;volatile
  2301  03C2                     l1288:
  2302                           
  2303                           ;LCD8bits.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2304  03C2  300B               	movlw	11
  2305  03C3  00F2               	movwf	??_Lcd_Cmd+1
  2306  03C4  3062               	movlw	98
  2307  03C5  00F1               	movwf	??_Lcd_Cmd
  2308  03C6                     u1047:
  2309  03C6  0BF1               	decfsz	??_Lcd_Cmd,f
  2310  03C7  2BC6               	goto	u1047
  2311  03C8  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2312  03C9  2BC6               	goto	u1047
  2313  03CA  0000               	nop
  2314  03CB                     l1290:
  2315                           
  2316                           ;LCD8bits.c: 60:     RC1 = 0;
  2317  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2318  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2319  03CD  1087               	bcf	7,1	;volatile
  2320  03CE                     l178:
  2321  03CE  0008               	return
  2322  03CF                     __end_of_Lcd_Cmd:
  2323                           
  2324                           	psect	text10
  2325  04B2                     __ptext10:	
  2326 ;; *************** function _Lcd_Port *****************
  2327 ;; Defined at:
  2328 ;;		line 13 in file "LCD8bits.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  a               1    wreg     unsigned char 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  a               1    0[COMMON] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       0       0       0
  2343 ;;      Locals:         1       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0
  2345 ;;      Totals:         1       0       0       0       0
  2346 ;;Total ram usage:        1 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_Lcd_Cmd
  2352 ;;		_Lcd_Init
  2353 ;;		_Lcd_Write_Char
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function _Lcd_Port
  2359  04B2                     _Lcd_Port:
  2360                           
  2361                           ;incstack = 0
  2362                           ; Regs used in _Lcd_Port: [wreg]
  2363                           ;Lcd_Port@a stored from wreg
  2364  04B2  00F0               	movwf	Lcd_Port@a
  2365  04B3                     l1264:
  2366                           
  2367                           ;LCD8bits.c: 14:     if (a & 1)
  2368  04B3  1C70               	btfss	Lcd_Port@a,0
  2369  04B4  2CB6               	goto	u501
  2370  04B5  2CB7               	goto	u500
  2371  04B6                     u501:
  2372  04B6  2CBB               	goto	l159
  2373  04B7                     u500:
  2374  04B7                     l1266:
  2375                           
  2376                           ;LCD8bits.c: 15:         RD0 = 1;
  2377  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2378  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2379  04B9  1408               	bsf	8,0	;volatile
  2380  04BA  2CBE               	goto	l160
  2381  04BB                     l159:	
  2382                           ;LCD8bits.c: 16:     else
  2383                           
  2384                           
  2385                           ;LCD8bits.c: 17:         RD0 = 0;
  2386  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2387  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2388  04BD  1008               	bcf	8,0	;volatile
  2389  04BE                     l160:
  2390                           
  2391                           ;LCD8bits.c: 19:     if (a & 2)
  2392  04BE  1CF0               	btfss	Lcd_Port@a,1
  2393  04BF  2CC1               	goto	u511
  2394  04C0  2CC2               	goto	u510
  2395  04C1                     u511:
  2396  04C1  2CC4               	goto	l161
  2397  04C2                     u510:
  2398  04C2                     l1268:
  2399                           
  2400                           ;LCD8bits.c: 20:         RD1 = 1;
  2401  04C2  1488               	bsf	8,1	;volatile
  2402  04C3  2CC5               	goto	l162
  2403  04C4                     l161:	
  2404                           ;LCD8bits.c: 21:     else
  2405                           
  2406                           
  2407                           ;LCD8bits.c: 22:         RD1 = 0;
  2408  04C4  1088               	bcf	8,1	;volatile
  2409  04C5                     l162:
  2410                           
  2411                           ;LCD8bits.c: 24:     if (a & 4)
  2412  04C5  1D70               	btfss	Lcd_Port@a,2
  2413  04C6  2CC8               	goto	u521
  2414  04C7  2CC9               	goto	u520
  2415  04C8                     u521:
  2416  04C8  2CCB               	goto	l163
  2417  04C9                     u520:
  2418  04C9                     l1270:
  2419                           
  2420                           ;LCD8bits.c: 25:         RD2 = 1;
  2421  04C9  1508               	bsf	8,2	;volatile
  2422  04CA  2CCC               	goto	l164
  2423  04CB                     l163:	
  2424                           ;LCD8bits.c: 26:     else
  2425                           
  2426                           
  2427                           ;LCD8bits.c: 27:         RD2 = 0;
  2428  04CB  1108               	bcf	8,2	;volatile
  2429  04CC                     l164:
  2430                           
  2431                           ;LCD8bits.c: 29:     if (a & 8)
  2432  04CC  1DF0               	btfss	Lcd_Port@a,3
  2433  04CD  2CCF               	goto	u531
  2434  04CE  2CD0               	goto	u530
  2435  04CF                     u531:
  2436  04CF  2CD2               	goto	l165
  2437  04D0                     u530:
  2438  04D0                     l1272:
  2439                           
  2440                           ;LCD8bits.c: 30:         RD3 = 1;
  2441  04D0  1588               	bsf	8,3	;volatile
  2442  04D1  2CD3               	goto	l166
  2443  04D2                     l165:	
  2444                           ;LCD8bits.c: 31:     else
  2445                           
  2446                           
  2447                           ;LCD8bits.c: 32:         RD3 = 0;
  2448  04D2  1188               	bcf	8,3	;volatile
  2449  04D3                     l166:
  2450                           
  2451                           ;LCD8bits.c: 34:     if (a & 16)
  2452  04D3  1E70               	btfss	Lcd_Port@a,4
  2453  04D4  2CD6               	goto	u541
  2454  04D5  2CD7               	goto	u540
  2455  04D6                     u541:
  2456  04D6  2CD9               	goto	l167
  2457  04D7                     u540:
  2458  04D7                     l1274:
  2459                           
  2460                           ;LCD8bits.c: 35:         RD4 = 1;
  2461  04D7  1608               	bsf	8,4	;volatile
  2462  04D8  2CDA               	goto	l168
  2463  04D9                     l167:	
  2464                           ;LCD8bits.c: 36:     else
  2465                           
  2466                           
  2467                           ;LCD8bits.c: 37:         RD4 = 0;
  2468  04D9  1208               	bcf	8,4	;volatile
  2469  04DA                     l168:
  2470                           
  2471                           ;LCD8bits.c: 39:     if (a & 32)
  2472  04DA  1EF0               	btfss	Lcd_Port@a,5
  2473  04DB  2CDD               	goto	u551
  2474  04DC  2CDE               	goto	u550
  2475  04DD                     u551:
  2476  04DD  2CE0               	goto	l169
  2477  04DE                     u550:
  2478  04DE                     l1276:
  2479                           
  2480                           ;LCD8bits.c: 40:         RD5 = 1;
  2481  04DE  1688               	bsf	8,5	;volatile
  2482  04DF  2CE1               	goto	l170
  2483  04E0                     l169:	
  2484                           ;LCD8bits.c: 41:     else
  2485                           
  2486                           
  2487                           ;LCD8bits.c: 42:         RD5 = 0;
  2488  04E0  1288               	bcf	8,5	;volatile
  2489  04E1                     l170:
  2490                           
  2491                           ;LCD8bits.c: 44:     if (a & 64)
  2492  04E1  1F70               	btfss	Lcd_Port@a,6
  2493  04E2  2CE4               	goto	u561
  2494  04E3  2CE5               	goto	u560
  2495  04E4                     u561:
  2496  04E4  2CE7               	goto	l171
  2497  04E5                     u560:
  2498  04E5                     l1278:
  2499                           
  2500                           ;LCD8bits.c: 45:         RD6 = 1;
  2501  04E5  1708               	bsf	8,6	;volatile
  2502  04E6  2CE8               	goto	l172
  2503  04E7                     l171:	
  2504                           ;LCD8bits.c: 46:     else
  2505                           
  2506                           
  2507                           ;LCD8bits.c: 47:         RD6 = 0;
  2508  04E7  1308               	bcf	8,6	;volatile
  2509  04E8                     l172:
  2510                           
  2511                           ;LCD8bits.c: 49:     if (a & 128)
  2512  04E8  1FF0               	btfss	Lcd_Port@a,7
  2513  04E9  2CEB               	goto	u571
  2514  04EA  2CEC               	goto	u570
  2515  04EB                     u571:
  2516  04EB  2CEE               	goto	l173
  2517  04EC                     u570:
  2518  04EC                     l1280:
  2519                           
  2520                           ;LCD8bits.c: 50:         RD7 = 1;
  2521  04EC  1788               	bsf	8,7	;volatile
  2522  04ED  2CEF               	goto	l175
  2523  04EE                     l173:	
  2524                           ;LCD8bits.c: 51:     else
  2525                           
  2526                           
  2527                           ;LCD8bits.c: 52:         RD7 = 0;
  2528  04EE  1388               	bcf	8,7	;volatile
  2529  04EF                     l175:
  2530  04EF  0008               	return
  2531  04F0                     __end_of_Lcd_Port:
  2532                           
  2533                           	psect	text11
  2534  0440                     __ptext11:	
  2535 ;; *************** function _I2C_Master_Init *****************
  2536 ;; Defined at:
  2537 ;;		line 16 in file "I2C.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  c               4    0[BANK0 ] const unsigned long 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         0       4       0       0       0
  2552 ;;      Locals:         0       0       0       0       0
  2553 ;;      Temps:          0       4       0       0       0
  2554 ;;      Totals:         0       8       0       0       0
  2555 ;;Total ram usage:        8 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    1
  2558 ;; This function calls:
  2559 ;;		___lldiv
  2560 ;; This function is called by:
  2561 ;;		_setup
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           
  2566                           ;psect for function _I2C_Master_Init
  2567  0440                     _I2C_Master_Init:
  2568  0440                     l1356:	
  2569                           ;incstack = 0
  2570                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2571                           
  2572                           
  2573                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2574  0440  3028               	movlw	40
  2575  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0443  0094               	movwf	20	;volatile
  2578  0444                     l1358:
  2579                           
  2580                           ;I2C.c: 19:     SSPCON2 = 0;
  2581  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2582  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2583  0446  0191               	clrf	17	;volatile
  2584  0447                     l1360:
  2585                           
  2586                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2587  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0449  083B               	movf	I2C_Master_Init@c,w
  2590  044A  00BF               	movwf	??_I2C_Master_Init
  2591  044B  083C               	movf	I2C_Master_Init@c+1,w
  2592  044C  00C0               	movwf	??_I2C_Master_Init+1
  2593  044D  083D               	movf	I2C_Master_Init@c+2,w
  2594  044E  00C1               	movwf	??_I2C_Master_Init+2
  2595  044F  083E               	movf	I2C_Master_Init@c+3,w
  2596  0450  00C2               	movwf	??_I2C_Master_Init+3
  2597  0451  3002               	movlw	2
  2598  0452                     u705:
  2599  0452  1003               	clrc
  2600  0453  0DBF               	rlf	??_I2C_Master_Init,f
  2601  0454  0DC0               	rlf	??_I2C_Master_Init+1,f
  2602  0455  0DC1               	rlf	??_I2C_Master_Init+2,f
  2603  0456  0DC2               	rlf	??_I2C_Master_Init+3,f
  2604  0457                     u700:
  2605  0457  3EFF               	addlw	-1
  2606  0458  1D03               	skipz
  2607  0459  2C52               	goto	u705
  2608  045A  0842               	movf	??_I2C_Master_Init+3,w
  2609  045B  00F3               	movwf	___lldiv@divisor+3
  2610  045C  0841               	movf	??_I2C_Master_Init+2,w
  2611  045D  00F2               	movwf	___lldiv@divisor+2
  2612  045E  0840               	movf	??_I2C_Master_Init+1,w
  2613  045F  00F1               	movwf	___lldiv@divisor+1
  2614  0460  083F               	movf	??_I2C_Master_Init,w
  2615  0461  00F0               	movwf	___lldiv@divisor
  2616  0462  3000               	movlw	0
  2617  0463  00F7               	movwf	___lldiv@dividend+3
  2618  0464  307A               	movlw	122
  2619  0465  00F6               	movwf	___lldiv@dividend+2
  2620  0466  3012               	movlw	18
  2621  0467  00F5               	movwf	___lldiv@dividend+1
  2622  0468  3000               	movlw	0
  2623  0469  00F4               	movwf	___lldiv@dividend
  2624  046A  120A  118A  2615  120A  118A  	fcall	___lldiv
  2625  046F  0870               	movf	?___lldiv,w
  2626  0470  3EFF               	addlw	255
  2627  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2628  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2629  0473  0093               	movwf	19	;volatile
  2630  0474                     l1362:
  2631                           
  2632                           ;I2C.c: 21:     SSPSTAT = 0;
  2633  0474  0194               	clrf	20	;volatile
  2634  0475                     l1364:
  2635                           
  2636                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2637  0475  1587               	bsf	7,3	;volatile
  2638  0476                     l1366:
  2639                           
  2640                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2641  0476  1607               	bsf	7,4	;volatile
  2642  0477                     l106:
  2643  0477  0008               	return
  2644  0478                     __end_of_I2C_Master_Init:
  2645                           
  2646                           	psect	text12
  2647  0615                     __ptext12:	
  2648 ;; *************** function ___lldiv *****************
  2649 ;; Defined at:
  2650 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  divisor         4    0[COMMON] unsigned long 
  2653 ;;  dividend        4    4[COMMON] unsigned long 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  quotient        4    9[COMMON] unsigned long 
  2656 ;;  counter         1   13[COMMON] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  4    0[COMMON] unsigned long 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         8       0       0       0       0
  2667 ;;      Locals:         5       0       0       0       0
  2668 ;;      Temps:          1       0       0       0       0
  2669 ;;      Totals:        14       0       0       0       0
  2670 ;;Total ram usage:       14 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_I2C_Master_Init
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function ___lldiv
  2681  0615                     ___lldiv:
  2682  0615                     l1302:	
  2683                           ;incstack = 0
  2684                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2685                           
  2686  0615  3000               	movlw	0
  2687  0616  00FC               	movwf	___lldiv@quotient+3
  2688  0617  3000               	movlw	0
  2689  0618  00FB               	movwf	___lldiv@quotient+2
  2690  0619  3000               	movlw	0
  2691  061A  00FA               	movwf	___lldiv@quotient+1
  2692  061B  3000               	movlw	0
  2693  061C  00F9               	movwf	___lldiv@quotient
  2694  061D  0873               	movf	___lldiv@divisor+3,w
  2695  061E  0472               	iorwf	___lldiv@divisor+2,w
  2696  061F  0471               	iorwf	___lldiv@divisor+1,w
  2697  0620  0470               	iorwf	___lldiv@divisor,w
  2698  0621  1903               	skipnz
  2699  0622  2E24               	goto	u581
  2700  0623  2E25               	goto	u580
  2701  0624                     u581:
  2702  0624  2E72               	goto	l1322
  2703  0625                     u580:
  2704  0625                     l1304:
  2705  0625  01FD               	clrf	___lldiv@counter
  2706  0626  0AFD               	incf	___lldiv@counter,f
  2707  0627  2E35               	goto	l1308
  2708  0628                     l1306:
  2709  0628  3001               	movlw	1
  2710  0629  00F8               	movwf	??___lldiv
  2711  062A                     u595:
  2712  062A  1003               	clrc
  2713  062B  0DF0               	rlf	___lldiv@divisor,f
  2714  062C  0DF1               	rlf	___lldiv@divisor+1,f
  2715  062D  0DF2               	rlf	___lldiv@divisor+2,f
  2716  062E  0DF3               	rlf	___lldiv@divisor+3,f
  2717  062F  0BF8               	decfsz	??___lldiv,f
  2718  0630  2E2A               	goto	u595
  2719  0631  3001               	movlw	1
  2720  0632  00F8               	movwf	??___lldiv
  2721  0633  0878               	movf	??___lldiv,w
  2722  0634  07FD               	addwf	___lldiv@counter,f
  2723  0635                     l1308:
  2724  0635  1FF3               	btfss	___lldiv@divisor+3,7
  2725  0636  2E38               	goto	u601
  2726  0637  2E39               	goto	u600
  2727  0638                     u601:
  2728  0638  2E28               	goto	l1306
  2729  0639                     u600:
  2730  0639                     l1310:
  2731  0639  3001               	movlw	1
  2732  063A  00F8               	movwf	??___lldiv
  2733  063B                     u615:
  2734  063B  1003               	clrc
  2735  063C  0DF9               	rlf	___lldiv@quotient,f
  2736  063D  0DFA               	rlf	___lldiv@quotient+1,f
  2737  063E  0DFB               	rlf	___lldiv@quotient+2,f
  2738  063F  0DFC               	rlf	___lldiv@quotient+3,f
  2739  0640  0BF8               	decfsz	??___lldiv,f
  2740  0641  2E3B               	goto	u615
  2741  0642                     l1312:
  2742  0642  0873               	movf	___lldiv@divisor+3,w
  2743  0643  0277               	subwf	___lldiv@dividend+3,w
  2744  0644  1D03               	skipz
  2745  0645  2E50               	goto	u625
  2746  0646  0872               	movf	___lldiv@divisor+2,w
  2747  0647  0276               	subwf	___lldiv@dividend+2,w
  2748  0648  1D03               	skipz
  2749  0649  2E50               	goto	u625
  2750  064A  0871               	movf	___lldiv@divisor+1,w
  2751  064B  0275               	subwf	___lldiv@dividend+1,w
  2752  064C  1D03               	skipz
  2753  064D  2E50               	goto	u625
  2754  064E  0870               	movf	___lldiv@divisor,w
  2755  064F  0274               	subwf	___lldiv@dividend,w
  2756  0650                     u625:
  2757  0650  1C03               	skipc
  2758  0651  2E53               	goto	u621
  2759  0652  2E54               	goto	u620
  2760  0653                     u621:
  2761  0653  2E63               	goto	l1318
  2762  0654                     u620:
  2763  0654                     l1314:
  2764  0654  0870               	movf	___lldiv@divisor,w
  2765  0655  02F4               	subwf	___lldiv@dividend,f
  2766  0656  0871               	movf	___lldiv@divisor+1,w
  2767  0657  1C03               	skipc
  2768  0658  0F71               	incfsz	___lldiv@divisor+1,w
  2769  0659  02F5               	subwf	___lldiv@dividend+1,f
  2770  065A  0872               	movf	___lldiv@divisor+2,w
  2771  065B  1C03               	skipc
  2772  065C  0F72               	incfsz	___lldiv@divisor+2,w
  2773  065D  02F6               	subwf	___lldiv@dividend+2,f
  2774  065E  0873               	movf	___lldiv@divisor+3,w
  2775  065F  1C03               	skipc
  2776  0660  0F73               	incfsz	___lldiv@divisor+3,w
  2777  0661  02F7               	subwf	___lldiv@dividend+3,f
  2778  0662                     l1316:
  2779  0662  1479               	bsf	___lldiv@quotient,0
  2780  0663                     l1318:
  2781  0663  3001               	movlw	1
  2782  0664                     u635:
  2783  0664  1003               	clrc
  2784  0665  0CF3               	rrf	___lldiv@divisor+3,f
  2785  0666  0CF2               	rrf	___lldiv@divisor+2,f
  2786  0667  0CF1               	rrf	___lldiv@divisor+1,f
  2787  0668  0CF0               	rrf	___lldiv@divisor,f
  2788  0669  3EFF               	addlw	-1
  2789  066A  1D03               	skipz
  2790  066B  2E64               	goto	u635
  2791  066C                     l1320:
  2792  066C  3001               	movlw	1
  2793  066D  02FD               	subwf	___lldiv@counter,f
  2794  066E  1D03               	btfss	3,2
  2795  066F  2E71               	goto	u641
  2796  0670  2E72               	goto	u640
  2797  0671                     u641:
  2798  0671  2E39               	goto	l1310
  2799  0672                     u640:
  2800  0672                     l1322:
  2801  0672  087C               	movf	___lldiv@quotient+3,w
  2802  0673  00F3               	movwf	?___lldiv+3
  2803  0674  087B               	movf	___lldiv@quotient+2,w
  2804  0675  00F2               	movwf	?___lldiv+2
  2805  0676  087A               	movf	___lldiv@quotient+1,w
  2806  0677  00F1               	movwf	?___lldiv+1
  2807  0678  0879               	movf	___lldiv@quotient,w
  2808  0679  00F0               	movwf	?___lldiv
  2809  067A                     l396:
  2810  067A  0008               	return
  2811  067B                     __end_of___lldiv:
  2812                           
  2813                           	psect	text13
  2814  03CF                     __ptext13:	
  2815 ;; *************** function _enviocadena *****************
  2816 ;; Defined at:
  2817 ;;		line 44 in file "usart.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  cadena          1    wreg     PTR unsigned char 
  2820 ;;		 -> volt(16), 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  cadena          1    2[COMMON] PTR unsigned char 
  2823 ;;		 -> volt(16), 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       0       0       0       0
  2834 ;;      Locals:         1       0       0       0       0
  2835 ;;      Temps:          1       0       0       0       0
  2836 ;;      Totals:         2       0       0       0       0
  2837 ;;Total ram usage:        2 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    1
  2840 ;; This function calls:
  2841 ;;		_enviocaracter
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _enviocadena
  2849  03CF                     _enviocadena:
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2853                           ;enviocadena@cadena stored from wreg
  2854  03CF  00F2               	movwf	enviocadena@cadena
  2855  03D0                     l1562:
  2856                           
  2857                           ;usart.c: 45:     while (*cadena != 0){
  2858  03D0  2BDD               	goto	l1568
  2859  03D1                     l1564:
  2860                           
  2861                           ;usart.c: 46:       enviocaracter(*cadena);
  2862  03D1  0872               	movf	enviocadena@cadena,w
  2863  03D2  0084               	movwf	4
  2864  03D3  0800               	movf	0,w
  2865  03D4  120A  118A  238F  120A  118A  	fcall	_enviocaracter
  2866  03D9                     l1566:
  2867                           
  2868                           ;usart.c: 47:       cadena++;
  2869  03D9  3001               	movlw	1
  2870  03DA  00F1               	movwf	??_enviocadena
  2871  03DB  0871               	movf	??_enviocadena,w
  2872  03DC  07F2               	addwf	enviocadena@cadena,f
  2873  03DD                     l1568:
  2874                           
  2875                           ;usart.c: 45:     while (*cadena != 0){
  2876  03DD  0872               	movf	enviocadena@cadena,w
  2877  03DE  0084               	movwf	4
  2878  03DF  1383               	bcf	3,7	;select IRP bank0
  2879  03E0  0800               	movf	0,w
  2880  03E1  1D03               	btfss	3,2
  2881  03E2  2BE4               	goto	u961
  2882  03E3  2BE5               	goto	u960
  2883  03E4                     u961:
  2884  03E4  2BD1               	goto	l1564
  2885  03E5                     u960:
  2886  03E5                     l244:
  2887                           
  2888                           ;usart.c: 49:     if (PIR1bits.TXIF){
  2889  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2890  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2891  03E7  1E0C               	btfss	12,4	;volatile
  2892  03E8  2BEA               	goto	u971
  2893  03E9  2BEB               	goto	u970
  2894  03EA                     u971:
  2895  03EA  2BED               	goto	l246
  2896  03EB                     u970:
  2897  03EB                     l1570:
  2898                           
  2899                           ;usart.c: 50:             TXREG = 13;
  2900  03EB  300D               	movlw	13
  2901  03EC  0099               	movwf	25	;volatile
  2902  03ED                     l246:
  2903  03ED  0008               	return
  2904  03EE                     __end_of_enviocadena:
  2905                           
  2906                           	psect	text14
  2907  038F                     __ptext14:	
  2908 ;; *************** function _enviocaracter *****************
  2909 ;; Defined at:
  2910 ;;		line 35 in file "usart.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  a               1    wreg     unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  a               1    0[COMMON] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         0       0       0       0       0
  2925 ;;      Locals:         1       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0
  2927 ;;      Totals:         1       0       0       0       0
  2928 ;;Total ram usage:        1 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_enviocadena
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function _enviocaracter
  2939  038F                     _enviocaracter:
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in _enviocaracter: [wreg]
  2943                           ;enviocaracter@a stored from wreg
  2944  038F  00F0               	movwf	enviocaracter@a
  2945  0390                     l1372:
  2946  0390                     l235:	
  2947                           ;usart.c: 38:     }
  2948                           
  2949                           
  2950                           ;usart.c: 36:     while (TXSTAbits.TRMT == 0){
  2951  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2952  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2953  0392  1C98               	btfss	24,1	;volatile
  2954  0393  2B95               	goto	u731
  2955  0394  2B96               	goto	u730
  2956  0395                     u731:
  2957  0395  2B90               	goto	l235
  2958  0396                     u730:
  2959  0396                     l237:
  2960                           
  2961                           ;usart.c: 39:     if (PIR1bits.TXIF){
  2962  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0398  1E0C               	btfss	12,4	;volatile
  2965  0399  2B9B               	goto	u741
  2966  039A  2B9C               	goto	u740
  2967  039B                     u741:
  2968  039B  2B9E               	goto	l239
  2969  039C                     u740:
  2970  039C                     l1374:
  2971                           
  2972                           ;usart.c: 40:             TXREG = a;
  2973  039C  0870               	movf	enviocaracter@a,w
  2974  039D  0099               	movwf	25	;volatile
  2975  039E                     l239:
  2976  039E  0008               	return
  2977  039F                     __end_of_enviocaracter:
  2978                           
  2979                           	psect	text15
  2980  0378                     __ptext15:	
  2981 ;; *************** function _I2C_Master_Write *****************
  2982 ;; Defined at:
  2983 ;;		line 65 in file "I2C.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  d               2    0[COMMON] unsigned int 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, pclath, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         2       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         2       0       0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    1
  3004 ;; This function calls:
  3005 ;;		_I2C_Master_Wait
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _I2C_Master_Write
  3013  0378                     _I2C_Master_Write:
  3014  0378                     l1476:	
  3015                           ;incstack = 0
  3016                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3017                           
  3018                           
  3019                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3020  0378  120A  118A  2382  120A  118A  	fcall	_I2C_Master_Wait
  3021  037D                     l1478:
  3022                           
  3023                           ;I2C.c: 68:     SSPBUF = d;
  3024  037D  0870               	movf	I2C_Master_Write@d,w
  3025  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3026  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0380  0093               	movwf	19	;volatile
  3028  0381                     l124:
  3029  0381  0008               	return
  3030  0382                     __end_of_I2C_Master_Write:
  3031                           
  3032                           	psect	text16
  3033  036F                     __ptext16:	
  3034 ;; *************** function _I2C_Master_Stop *****************
  3035 ;; Defined at:
  3036 ;;		line 55 in file "I2C.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    1
  3057 ;; This function calls:
  3058 ;;		_I2C_Master_Wait
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _I2C_Master_Stop
  3066  036F                     _I2C_Master_Stop:
  3067  036F                     l1496:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3070                           
  3071                           
  3072                           ;I2C.c: 57:     I2C_Master_Wait();
  3073  036F  120A  118A  2382  120A  118A  	fcall	_I2C_Master_Wait
  3074  0374                     l1498:
  3075                           
  3076                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3077  0374  1683               	bsf	3,5	;RP0=1, select bank1
  3078  0375  1303               	bcf	3,6	;RP1=0, select bank1
  3079  0376  1511               	bsf	17,2	;volatile
  3080  0377                     l121:
  3081  0377  0008               	return
  3082  0378                     __end_of_I2C_Master_Stop:
  3083                           
  3084                           	psect	text17
  3085  0366                     __ptext17:	
  3086 ;; *************** function _I2C_Master_Start *****************
  3087 ;; Defined at:
  3088 ;;		line 39 in file "I2C.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    1
  3109 ;; This function calls:
  3110 ;;		_I2C_Master_Wait
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _I2C_Master_Start
  3118  0366                     _I2C_Master_Start:
  3119  0366                     l1472:	
  3120                           ;incstack = 0
  3121                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3122                           
  3123                           
  3124                           ;I2C.c: 41:     I2C_Master_Wait();
  3125  0366  120A  118A  2382  120A  118A  	fcall	_I2C_Master_Wait
  3126  036B                     l1474:
  3127                           
  3128                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3129  036B  1683               	bsf	3,5	;RP0=1, select bank1
  3130  036C  1303               	bcf	3,6	;RP1=0, select bank1
  3131  036D  1411               	bsf	17,0	;volatile
  3132  036E                     l115:
  3133  036E  0008               	return
  3134  036F                     __end_of_I2C_Master_Start:
  3135                           
  3136                           	psect	text18
  3137  0412                     __ptext18:	
  3138 ;; *************** function _I2C_Master_Read *****************
  3139 ;; Defined at:
  3140 ;;		line 74 in file "I2C.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  a               2    0[COMMON] unsigned short 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  temp            2    4[COMMON] unsigned short 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  2    0[COMMON] unsigned short 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         2       0       0       0       0
  3155 ;;      Locals:         2       0       0       0       0
  3156 ;;      Temps:          2       0       0       0       0
  3157 ;;      Totals:         6       0       0       0       0
  3158 ;;Total ram usage:        6 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    1
  3161 ;; This function calls:
  3162 ;;		_I2C_Master_Wait
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _I2C_Master_Read
  3170  0412                     _I2C_Master_Read:
  3171  0412                     l1480:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3174                           
  3175                           
  3176                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3177  0412  120A  118A  2382  120A  118A  	fcall	_I2C_Master_Wait
  3178  0417                     l1482:
  3179                           
  3180                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3181  0417  1683               	bsf	3,5	;RP0=1, select bank1
  3182  0418  1303               	bcf	3,6	;RP1=0, select bank1
  3183  0419  1591               	bsf	17,3	;volatile
  3184                           
  3185                           ;I2C.c: 79:     I2C_Master_Wait();
  3186  041A  120A  118A  2382  120A  118A  	fcall	_I2C_Master_Wait
  3187  041F                     l1484:
  3188                           
  3189                           ;I2C.c: 80:     temp = SSPBUF;
  3190  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0421  0813               	movf	19,w	;volatile
  3193  0422  00F2               	movwf	??_I2C_Master_Read
  3194  0423  01F3               	clrf	??_I2C_Master_Read+1
  3195  0424  0872               	movf	??_I2C_Master_Read,w
  3196  0425  00F4               	movwf	I2C_Master_Read@temp
  3197  0426  0873               	movf	??_I2C_Master_Read+1,w
  3198  0427  00F5               	movwf	I2C_Master_Read@temp+1
  3199  0428                     l1486:
  3200                           
  3201                           ;I2C.c: 81:     I2C_Master_Wait();
  3202  0428  120A  118A  2382  120A  118A  	fcall	_I2C_Master_Wait
  3203  042D                     l1488:
  3204                           
  3205                           ;I2C.c: 82:     if(a == 1){
  3206  042D  0370               	decf	I2C_Master_Read@a,w
  3207  042E  0471               	iorwf	I2C_Master_Read@a+1,w
  3208  042F  1D03               	btfss	3,2
  3209  0430  2C32               	goto	u881
  3210  0431  2C33               	goto	u880
  3211  0432                     u881:
  3212  0432  2C37               	goto	l127
  3213  0433                     u880:
  3214  0433                     l1490:
  3215                           
  3216                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3217  0433  1683               	bsf	3,5	;RP0=1, select bank1
  3218  0434  1303               	bcf	3,6	;RP1=0, select bank1
  3219  0435  1291               	bcf	17,5	;volatile
  3220                           
  3221                           ;I2C.c: 84:     }else{
  3222  0436  2C3A               	goto	l128
  3223  0437                     l127:
  3224                           
  3225                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3226  0437  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0438  1303               	bcf	3,6	;RP1=0, select bank1
  3228  0439  1691               	bsf	17,5	;volatile
  3229  043A                     l128:	
  3230                           ;I2C.c: 86:     }
  3231                           
  3232                           
  3233                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3234  043A  1611               	bsf	17,4	;volatile
  3235  043B                     l1492:
  3236                           
  3237                           ;I2C.c: 88:     return temp;
  3238  043B  0875               	movf	I2C_Master_Read@temp+1,w
  3239  043C  00F1               	movwf	?_I2C_Master_Read+1
  3240  043D  0874               	movf	I2C_Master_Read@temp,w
  3241  043E  00F0               	movwf	?_I2C_Master_Read
  3242  043F                     l129:
  3243  043F  0008               	return
  3244  0440                     __end_of_I2C_Master_Read:
  3245                           
  3246                           	psect	text19
  3247  0382                     __ptext19:	
  3248 ;; *************** function _I2C_Master_Wait *****************
  3249 ;; Defined at:
  3250 ;;		line 32 in file "I2C.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0
  3267 ;;      Totals:         0       0       0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_I2C_Master_Start
  3274 ;;		_I2C_Master_Stop
  3275 ;;		_I2C_Master_Write
  3276 ;;		_I2C_Master_Read
  3277 ;;		_I2C_Master_RepeatedStart
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _I2C_Master_Wait
  3283  0382                     _I2C_Master_Wait:
  3284  0382                     l1368:	
  3285                           ;incstack = 0
  3286                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3287                           
  3288  0382                     l109:	
  3289                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3290                           
  3291  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3293  0384  1914               	btfsc	20,2	;volatile
  3294  0385  2B87               	goto	u711
  3295  0386  2B88               	goto	u710
  3296  0387                     u711:
  3297  0387  2B82               	goto	l109
  3298  0388                     u710:
  3299  0388                     l1370:
  3300  0388  0811               	movf	17,w	;volatile
  3301  0389  391F               	andlw	31
  3302  038A  1D03               	btfss	3,2
  3303  038B  2B8D               	goto	u721
  3304  038C  2B8E               	goto	u720
  3305  038D                     u721:
  3306  038D  2B82               	goto	l109
  3307  038E                     u720:
  3308  038E                     l112:
  3309  038E  0008               	return
  3310  038F                     __end_of_I2C_Master_Wait:
  3311  007E                     btemp	set	126	;btemp
  3312  007E                     wtemp0	set	126
  3313                           
  3314                           	psect	config
  3315                           
  3316                           ;Config register CONFIG1 @ 0x2007
  3317                           ;	Oscillator Selection bits
  3318                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3319                           ;	Watchdog Timer Enable bit
  3320                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3321                           ;	Power-up Timer Enable bit
  3322                           ;	PWRTE = OFF, PWRT disabled
  3323                           ;	RE3/MCLR pin function select bit
  3324                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3325                           ;	Code Protection bit
  3326                           ;	CP = OFF, Program memory code protection is disabled
  3327                           ;	Data Code Protection bit
  3328                           ;	CPD = OFF, Data memory code protection is disabled
  3329                           ;	Brown Out Reset Selection bits
  3330                           ;	BOREN = OFF, BOR disabled
  3331                           ;	Internal External Switchover bit
  3332                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3333                           ;	Fail-Safe Clock Monitor Enabled bit
  3334                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3335                           ;	Low Voltage Programming Enable bit
  3336                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3337                           ;	In-Circuit Debugger Mode bit
  3338                           ;	DEBUG = 0x1, unprogrammed default
  3339  2007                     	org	8199
  3340  2007  20D4               	dw	8404
  3341                           
  3342                           ;Config register CONFIG2 @ 0x2008
  3343                           ;	Brown-out Reset Selection bit
  3344                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3345                           ;	Flash Program Memory Self Write Enable bits
  3346                           ;	WRT = OFF, Write protection off
  3347  2008                     	org	8200
  3348  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    10
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), volt(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    _enviocadena->_enviocaracter

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4316
                                             15 BANK0      5     5      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _enviocadena
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    18      5    1211
                                              0 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1710
                    _I2C_Master_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          2     2      0     100
                                              1 COMMON     2     2      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _enviocadena
     _enviocaracter
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 03 13:16:39 2021

                        _a 002A                          _t 0020                          pc 0002  
                       l77 05C3                         _s1 0029                         _s2 0028  
                       fsr 0004                        l112 038E                        l121 0377  
                      l106 0477                        l115 036E                        l124 0381  
                      l109 0382                        l127 0437                        l128 043A  
                      l160 04BE                        l129 043F                        l161 04C4  
                      l170 04E1                        l162 04C5                        l235 0390  
                      l171 04E7                        l163 04CB                        l244 03E5  
                      l172 04E8                        l164 04CC                        l237 0396  
                      l173 04EE                        l165 04D2                        l246 03ED  
                      l166 04D3                        l190 0614                        l239 039E  
                      l175 04EF                        l167 04D9                        l159 04BB  
                      l168 04DA                        l169 04E0                        l193 03B4  
                      l178 03CE                        l187 0411                        l356 07F2  
                      l199 0531                        l632 0575                        l642 04B1  
                      l396 067A                        _GIE 005F                        _RC0 0038  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u500 04B7                        u501 04B6                        u510 04C2  
                      u511 04C1                        u600 0639                        u520 04C9  
                      u601 0638                        u521 04C8                        u530 04D0  
                      u531 04CF                        u620 0654                        u700 0457  
                      u540 04D7                        u621 0653                        u541 04D6  
                      u710 0388                        u550 04DE                        u711 0387  
                      u615 063B                        u551 04DD                        u720 038E  
                      u640 0672                        u560 04E5                        u721 038D  
                      u641 0671                        u625 0650                        u705 0452  
                      u561 04E4                        u730 0396                        u570 04EC  
                      u650 03F4                        u810 0571                        u731 0395  
                      u635 0664                        u571 04EB                        u651 03F3  
                      u811 0570                        u740 039C                        u580 0625  
                      u660 0406                        u820 047E                        u900 0753  
                      u741 039B                        u581 0624                        u661 0405  
                      u805 0565                        u821 047D                        u901 0752  
                      u670 04FD                        u750 053A                        u910 0779  
                      u751 0539                        u911 0778                        u680 051F  
                      u840 0490                        u920 0784                        u841 048F  
                      u921 0783                        u690 0531                        u770 054C  
                      u850 049A                        u930 078A                        u595 062A  
                      u691 0530                        u771 054B                        u851 0499  
                      u835 0482                        u931 0789                        u915 0775  
                      u940 07DC                        u765 053E                        u941 07DB  
                      u790 055D                        u870 04AD                        u950 07EE  
                      u791 055C                        u871 04AC                        u855 0496  
                      u951 07ED                        u880 0433                        u960 03E5  
                      u881 0432                        u961 03E4                        u785 054D  
                      u865 04A1                        u970 03EB                        u890 0719  
                      u971 03EA                        u795 0559                        u891 0718  
                      u987 06A7                        u997 06D2                        fsr0 0004  
                      indf 0000                       l1300 03B1                       l1310 0639  
                     l1302 0615                       l1320 066C                       l1312 0642  
                     l1304 0625                       l1314 0654                       l1306 0628  
                     l1322 0672                       l1330 03F9                       l1410 048C  
                     l1402 0478                       l1316 0662                       l1308 0635  
                     l1332 0400                       l1340 04F3                       l1412 0490  
                     l1404 047E                       l1420 04AD                       l1500 070E  
                     l1318 0663                       l1270 04C9                       l1350 05D3  
                     l1334 0406                       l1326 03EF                       l1342 050F  
                     l1430 057E                       l1414 049A                       l1406 0481  
                     l1502 0713                       l1360 0447                       l1280 04EC  
                     l1272 04D0                       l1264 04B3                       l1352 05E2  
                     l1336 040B                       l1328 03F4                       l1344 0515  
                     l1440 0585                       l1432 057F                       l1424 0576  
                     l1416 04A0                       l1408 0488                       l1520 0753  
                     l1512 0726                       l1504 0719                       l1370 0388  
                     l1362 0474                       l1274 04D7                       l1266 04B7  
                     l1290 03CB                       l1282 03B6                       l1354 05E8  
                     l1346 05C4                       l1338 04F0                       l1450 058E  
                     l1442 0586                       l1434 0582                       l1426 057A  
                     l1418 04A7                       l1530 075E                       l1522 0757  
                     l1514 0743                       l1506 0720                       l1372 0390  
                     l1364 0475                       l1356 0440                       l1276 04DE  
                     l1268 04C2                       l1284 03B9                       l1348 05CA  
                     l1292 03A0                       l1460 059A                       l1452 0591  
                     l1444 0587                       l1436 0583                       l1428 057B  
                     l1380 053A                       l1540 0791                       l1524 075C  
                     l1516 074B                       l1508 0725                       l1374 039C  
                     l1366 0476                       l1358 0444                       l1278 04E5  
                     l1286 03BF                       l1294 03A3                       l1470 05B4  
                     l1462 059B                       l1454 0595                       l1446 058A  
                     l1438 0584                       l1390 055D                       l1382 053D  
                     l1550 07D3                       l1542 0795                       l1534 077A  
                     l1518 074F                       l1630 0738                       l1368 0382  
                     l1480 0412                       l1472 0366                       l1288 03C2  
                     l1296 03A9                       l1464 059E                       l1456 0596  
                     l1448 058D                       l1392 0563                       l1384 0544  
                     l1376 0532                       l1544 079A                       l1536 0784  
                     l1552 07DC                       l1490 0433                       l1482 0417  
                     l1474 036B                       l1570 03EB                       l1562 03D0  
                     l1298 03AC                       l1466 05A3                       l1458 0599  
                     l1394 0564                       l1386 0548                       l1378 0534  
                     l1546 07C8                       l1538 078A                       l1554 07EE  
                     l1492 043B                       l1484 041F                       l1476 0378  
                     l1564 03D1                       l1468 05AB                       l1396 056B  
                     l1388 054C                       l1548 07CF                       l1580 069C  
                     l1572 067B                       l1486 0428                       l1478 037D  
                     l1566 03D9                       l1398 0571                       l1590 06C7  
                     l1582 06A1                       l1574 0680                       l1488 042D  
                     l1496 036F                       l1568 03DD                       l1592 06CC  
                     l1584 06AB                       l1576 0685                       l1498 0374  
                     l1594 06F0                       l1586 06B0                       l1578 068E  
                     l1596 06F6                       l1588 06B9                       l1598 06FE  
                     STR_1 002E                       STR_2 001D                       u1007 03AE  
                     u1017 05CE                       u1027 05DD                       u1037 05EC  
                     u1047 03C6                       _PEIE 005E          ?_Lcd_Write_String 0073  
                     _main 067B                       btemp 007E                       _volt 002B  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 03CF  
             ?_enviocadena 0070           ?_I2C_Master_Init 003B           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _EEADR 010D                      _EEDAT 010C                      _ANSEL 0188  
          __end_of___lldiv 067B            __end_of___lwdiv 0576            __end_of___lwmod 04B2  
                    _SPBRG 0099                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019            __end_of_dpowers 001D                      _senms 0026  
                    _setup 0576     __size_of_enviocaracter 0010                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07F3  
         __end_of_Lcd_Init 0615           __end_of_Lcd_Port 04F0            __initialization 07F3  
             __end_of_main 070B                     ??_main 004A          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _EECON2 018D                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0071                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___lldiv 0078  
            _enviocaracter 038F                  ??___lwdiv 0074                  ??___lwmod 007C  
                ??_sprintf 0040            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC             __pcstackCOMMON 0070             ?_enviocaracter 0070  
     __size_of_enviocadena 001F              __end_of_setup 05C4             _Lcd_Set_Cursor 03EE  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 007E  
               __pbssBANK0 0020                 __pmaintext 067B  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 0412                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094             enviocaracter@a 0070  
               __stringtab 0003             _Lcd_Write_Char 039F                    _Lcd_Cmd 03B5  
          ??_enviocaracter 0070                    ___lldiv 0615                    ___lwdiv 0532  
                  ___lwmod 0478            ?_Lcd_Set_Cursor 0074                    __ptext1 070B  
                  __ptext2 0478                    __ptext3 0532                    __ptext4 0576  
                  __ptext5 04F0                    __ptext6 039F                    __ptext7 03EE  
                  __ptext8 05C4                    __ptext9 03B5                    _dpowers 0013  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 070B                    clrloop0 035F  
   __end_of_Lcd_Write_Char 03B5       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018           I2C_Master_Init@c 003B           I2C_Master_Read@a 0070  
                Lcd_Port@a 0070                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                  _TXSTAbits 0098  
         _Lcd_Write_String 04F0                _BAUDCTLbits 0187        start_initialization 07F3  
        __size_of_Lcd_Init 0051          __size_of_Lcd_Port 003E          ??_I2C_Master_Init 003F  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
            ??_enviocadena 0071            Lcd_Write_Char@a 0072                  ___latbits 0002  
            __pcstackBANK0 003B                   ?_Lcd_Cmd 0070                sprintf@flag 0044  
              sprintf@prec 0045           _I2C_Master_Start 0366           _I2C_Master_Write 0378  
         ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078        __end_of_enviocadena 03EE  
                __pstrings 0003           ___lwdiv@quotient 0075                   ?_sprintf 003B  
           __size_of_setup 004E                  clear_ram0 035E                   Lcd_Cmd@a 0073  
                 _PIR1bits 000C                   _PIR2bits 000D      __end_of_enviocaracter 039F  
                _sensorval 0024                __stringbase 0012           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 05C4                   _Lcd_Port 04B2        I2C_Master_Read@temp 0074  
        enviocadena@cadena 0072   __end_of_Lcd_Write_String 0532           __size_of_Lcd_Cmd 001A  
               _EECON1bits 018C                _enviocadena 03CF           __size_of___lldiv 0066  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
               sprintf@val 0046            _I2C_Master_Init 0440            _I2C_Master_Read 0412  
          _I2C_Master_Wait 0382            _I2C_Master_Stop 036F            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 04B2                   __ptext11 0440  
                 __ptext12 0615                   __ptext13 03CF                   __ptext14 038F  
                 __ptext15 0378                   __ptext16 036F                   __ptext17 0366  
                 __ptext18 0412                   __ptext19 0382           __size_of_sprintf 00E8  
            __size_of_main 0090   __end_of_I2C_Master_Start 036F   __end_of_I2C_Master_Write 0382  
               _INTCONbits 000B                  sprintf@ap 0043                  sprintf@sp 0048  
         ___lwmod@dividend 007A           ___lldiv@dividend 0074                  stringcode 000D  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0478    __end_of_I2C_Master_Read 0440  
  __end_of_I2C_Master_Wait 038F    __end_of_I2C_Master_Stop 0378         Lcd_Set_Cursor@temp 0077  
                 sprintf@c 0049                   sprintf@f 003B           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 000D                   stringtab 0003                _SSPCON2bits 0091  
