

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Aug 12 12:25:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398                           
   399                           	psect	strings
   400  0800                     __pstrings:
   401  0800                     stringtab:
   402  0800                     __stringtab:
   403                           
   404                           ;	String table - string pointers are 1 byte each
   405  0800  1BFF               	btfsc	btemp+1,7
   406  0801  280A               	ljmp	stringcode
   407  0802  1383               	bcf	3,7
   408  0803  187F               	btfsc	btemp+1,0
   409  0804  1783               	bsf	3,7
   410  0805  0800               	movf	0,w
   411  0806  0A84               	incf	4,f
   412  0807  1903               	skipnz
   413  0808  0AFF               	incf	btemp+1,f
   414  0809  0008               	return
   415  080A                     stringcode:
   416  080A                     stringdir:
   417  080A  3008               	movlw	high stringdir
   418  080B  008A               	movwf	10
   419  080C  0804               	movf	4,w
   420  080D  0A84               	incf	4,f
   421  080E  0782               	addwf	2,f
   422  080F                     __stringbase:
   423  080F  3400               	retlw	0
   424  0810                     __end_of__stringtab:
   425  0810                     __powers_:
   426  0810  3400               	retlw	0
   427  0811  3400               	retlw	0
   428  0812  3480               	retlw	128
   429  0813  343F               	retlw	63
   430  0814  3400               	retlw	0
   431  0815  3400               	retlw	0
   432  0816  3420               	retlw	32
   433  0817  3441               	retlw	65
   434  0818  3400               	retlw	0
   435  0819  3400               	retlw	0
   436  081A  34C8               	retlw	200
   437  081B  3442               	retlw	66
   438  081C  3400               	retlw	0
   439  081D  3400               	retlw	0
   440  081E  347A               	retlw	122
   441  081F  3444               	retlw	68
   442  0820  3400               	retlw	0
   443  0821  3440               	retlw	64
   444  0822  341C               	retlw	28
   445  0823  3446               	retlw	70
   446  0824  3400               	retlw	0
   447  0825  3450               	retlw	80
   448  0826  34C3               	retlw	195
   449  0827  3447               	retlw	71
   450  0828  3400               	retlw	0
   451  0829  3424               	retlw	36
   452  082A  3474               	retlw	116
   453  082B  3449               	retlw	73
   454  082C  3480               	retlw	128
   455  082D  3496               	retlw	150
   456  082E  3418               	retlw	24
   457  082F  344B               	retlw	75
   458  0830  3420               	retlw	32
   459  0831  34BC               	retlw	188
   460  0832  34BE               	retlw	190
   461  0833  344C               	retlw	76
   462  0834  3428               	retlw	40
   463  0835  346B               	retlw	107
   464  0836  346E               	retlw	110
   465  0837  344E               	retlw	78
   466  0838  34F9               	retlw	249
   467  0839  3402               	retlw	2
   468  083A  3415               	retlw	21
   469  083B  3450               	retlw	80
   470  083C  34EC               	retlw	236
   471  083D  3478               	retlw	120
   472  083E  34AD               	retlw	173
   473  083F  3460               	retlw	96
   474  0840  34CA               	retlw	202
   475  0841  34F2               	retlw	242
   476  0842  3449               	retlw	73
   477  0843  3471               	retlw	113
   478  0844                     __end_of__powers_:
   479  0844                     __npowers_:
   480  0844  3400               	retlw	0
   481  0845  3400               	retlw	0
   482  0846  3480               	retlw	128
   483  0847  343F               	retlw	63
   484  0848  34CD               	retlw	205
   485  0849  34CC               	retlw	204
   486  084A  34CC               	retlw	204
   487  084B  343D               	retlw	61
   488  084C  340A               	retlw	10
   489  084D  34D7               	retlw	215
   490  084E  3423               	retlw	35
   491  084F  343C               	retlw	60
   492  0850  346F               	retlw	111
   493  0851  3412               	retlw	18
   494  0852  3483               	retlw	131
   495  0853  343A               	retlw	58
   496  0854  3417               	retlw	23
   497  0855  34B7               	retlw	183
   498  0856  34D1               	retlw	209
   499  0857  3438               	retlw	56
   500  0858  34AC               	retlw	172
   501  0859  34C5               	retlw	197
   502  085A  3427               	retlw	39
   503  085B  3437               	retlw	55
   504  085C  34BD               	retlw	189
   505  085D  3437               	retlw	55
   506  085E  3486               	retlw	134
   507  085F  3435               	retlw	53
   508  0860  3495               	retlw	149
   509  0861  34BF               	retlw	191
   510  0862  34D6               	retlw	214
   511  0863  3433               	retlw	51
   512  0864  3477               	retlw	119
   513  0865  34CC               	retlw	204
   514  0866  342B               	retlw	43
   515  0867  3432               	retlw	50
   516  0868  345F               	retlw	95
   517  0869  3470               	retlw	112
   518  086A  3489               	retlw	137
   519  086B  3430               	retlw	48
   520  086C  34FF               	retlw	255
   521  086D  34E6               	retlw	230
   522  086E  34DB               	retlw	219
   523  086F  342E               	retlw	46
   524  0870  3408               	retlw	8
   525  0871  34E5               	retlw	229
   526  0872  343C               	retlw	60
   527  0873  341E               	retlw	30
   528  0874  3460               	retlw	96
   529  0875  3442               	retlw	66
   530  0876  34A2               	retlw	162
   531  0877  340D               	retlw	13
   532  0878                     __end_of__npowers_:
   533  0878                     _dpowers:
   534  0878  3401               	retlw	1
   535  0879  3400               	retlw	0
   536  087A  3400               	retlw	0
   537  087B  3400               	retlw	0
   538  087C  340A               	retlw	10
   539  087D  3400               	retlw	0
   540  087E  3400               	retlw	0
   541  087F  3400               	retlw	0
   542  0880  3464               	retlw	100
   543  0881  3400               	retlw	0
   544  0882  3400               	retlw	0
   545  0883  3400               	retlw	0
   546  0884  34E8               	retlw	232
   547  0885  3403               	retlw	3
   548  0886  3400               	retlw	0
   549  0887  3400               	retlw	0
   550  0888  3410               	retlw	16
   551  0889  3427               	retlw	39
   552  088A  3400               	retlw	0
   553  088B  3400               	retlw	0
   554  088C  34A0               	retlw	160
   555  088D  3486               	retlw	134
   556  088E  3401               	retlw	1
   557  088F  3400               	retlw	0
   558  0890  3440               	retlw	64
   559  0891  3442               	retlw	66
   560  0892  340F               	retlw	15
   561  0893  3400               	retlw	0
   562  0894  3480               	retlw	128
   563  0895  3496               	retlw	150
   564  0896  3498               	retlw	152
   565  0897  3400               	retlw	0
   566  0898  3400               	retlw	0
   567  0899  34E1               	retlw	225
   568  089A  34F5               	retlw	245
   569  089B  3405               	retlw	5
   570  089C  3400               	retlw	0
   571  089D  34CA               	retlw	202
   572  089E  349A               	retlw	154
   573  089F  343B               	retlw	59
   574  08A0                     __end_of_dpowers:
   575  0013                     _SSPBUF	set	19
   576  0014                     _SSPCON	set	20
   577  0008                     _PORTD	set	8
   578  0006                     _PORTB	set	6
   579  0039                     _RC1	set	57
   580  0038                     _RC0	set	56
   581  0047                     _RD7	set	71
   582  0046                     _RD6	set	70
   583  0045                     _RD5	set	69
   584  0044                     _RD4	set	68
   585  0043                     _RD3	set	67
   586  0042                     _RD2	set	66
   587  0041                     _RD1	set	65
   588  0040                     _RD0	set	64
   589  0063                     _SSPIF	set	99
   590  005E                     _PEIE	set	94
   591  005F                     _GIE	set	95
   592  0091                     _SSPCON2bits	set	145
   593  0094                     _SSPSTAT	set	148
   594  0093                     _SSPADD	set	147
   595  0091                     _SSPCON2	set	145
   596  0089                     _TRISE	set	137
   597  0088                     _TRISD	set	136
   598  0086                     _TRISB	set	134
   599  0087                     _TRISCbits	set	135
   600  0085                     _TRISA	set	133
   601  008F                     _OSCCONbits	set	143
   602  0463                     _SSPIE	set	1123
   603  043C                     _TRISC4	set	1084
   604  043B                     _TRISC3	set	1083
   605  0188                     _ANSEL	set	392
   606  0189                     _ANSELH	set	393
   607  08A0                     STR_1:
   608  08A0  3425               	retlw	37	;'%'
   609  08A1  3464               	retlw	100	;'d'
   610  08A2  3420               	retlw	32	;' '
   611  08A3  3420               	retlw	32	;' '
   612  08A4  3420               	retlw	32	;' '
   613  08A5  3425               	retlw	37	;'%'
   614  08A6  3464               	retlw	100	;'d'
   615  08A7  3420               	retlw	32	;' '
   616  08A8  3420               	retlw	32	;' '
   617  08A9  3420               	retlw	32	;' '
   618  08AA  3420               	retlw	32	;' '
   619  08AB  3425               	retlw	37	;'%'
   620  08AC  342E               	retlw	46	;'.'
   621  08AD  3430               	retlw	48	;'0'
   622  08AE  3466               	retlw	102	;'f'
   623  08AF  3420               	retlw	32	;' '
   624  08B0  3420               	retlw	32	;' '
   625  08B1  3400               	retlw	0
   626  08B2                     STR_2:
   627  08B2  3441               	retlw	65	;'A'
   628  08B3  3444               	retlw	68	;'D'
   629  08B4  3443               	retlw	67	;'C'
   630  08B5  343A               	retlw	58	;':'
   631  08B6  3420               	retlw	32	;' '
   632  08B7  3443               	retlw	67	;'C'
   633  08B8  344F               	retlw	79	;'O'
   634  08B9  344E               	retlw	78	;'N'
   635  08BA  3454               	retlw	84	;'T'
   636  08BB  343A               	retlw	58	;':'
   637  08BC  3420               	retlw	32	;' '
   638  08BD  3454               	retlw	84	;'T'
   639  08BE  3445               	retlw	69	;'E'
   640  08BF  344D               	retlw	77	;'M'
   641  08C0  3450               	retlw	80	;'P'
   642  08C1  343A               	retlw	58	;':'
   643  08C2  3400               	retlw	0
   644                           
   645                           	psect	cinit
   646  07F0                     start_initialization:	
   647                           ; #config settings
   648                           
   649  07F0                     __initialization:
   650                           
   651                           ; Clear objects allocated to BANK0
   652  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   653  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   654  07F2  01EC               	clrf	__pbssBANK0& (0+127)
   655                           
   656                           ; Clear objects allocated to BANK1
   657  07F3  1383               	bcf	3,7	;select IRP bank0
   658  07F4  30D4               	movlw	low __pbssBANK1
   659  07F5  0084               	movwf	4
   660  07F6  30EE               	movlw	low (__pbssBANK1+26)
   661  07F7  160A  158A  2085  120A  118A  	fcall	clear_ram0
   662  07FC                     end_of_initialization:	
   663                           ;End of C runtime variable initialization code
   664                           
   665  07FC                     __end_of__initialization:
   666  07FC  0183               	clrf	3
   667  07FD  160A  158A  2E5F   	ljmp	_main	;jump to C main() function
   668                           
   669                           	psect	bssBANK0
   670  006C                     __pbssBANK0:
   671  006C                     _a:
   672  006C                     	ds	1
   673                           
   674                           	psect	bssBANK1
   675  00D4                     __pbssBANK1:
   676  00D4                     _t:
   677  00D4                     	ds	4
   678  00D8                     _sensorval:
   679  00D8                     	ds	2
   680  00DA                     _senms:
   681  00DA                     	ds	2
   682  00DC                     _s2:
   683  00DC                     	ds	1
   684  00DD                     _s1:
   685  00DD                     	ds	1
   686  00DE                     _volt:
   687  00DE                     	ds	16
   688                           
   689                           	psect	clrtext
   690  1885                     clear_ram0:	
   691                           ;	Called with FSR containing the base address, and
   692                           ;	W with the last address+1
   693                           
   694  1885  0064               	clrwdt	;clear the watchdog before getting into this loop
   695  1886                     clrloop0:
   696  1886  0180               	clrf	0	;clear RAM location pointed to by FSR
   697  1887  0A84               	incf	4,f	;increment pointer
   698  1888  0604               	xorwf	4,w	;XOR with final address
   699  1889  1903               	btfsc	3,2	;have we reached the end yet?
   700  188A  3400               	retlw	0	;all done for this memory range, return
   701  188B  0604               	xorwf	4,w	;XOR again to restore value
   702  188C  2886               	goto	clrloop0	;do the next byte
   703                           
   704                           	psect	cstackBANK1
   705  00A0                     __pcstackBANK1:
   706  00A0                     ?___flsub:
   707  00A0                     ___flsub@a:	
   708                           ; 4 bytes @ 0x0
   709                           
   710                           
   711                           ; 4 bytes @ 0x0
   712  00A0                     	ds	4
   713  00A4                     ___flsub@b:
   714                           
   715                           ; 4 bytes @ 0x4
   716  00A4                     	ds	4
   717  00A8                     ?_sprintf:
   718  00A8                     sprintf@f:	
   719                           ; 2 bytes @ 0x8
   720                           
   721                           
   722                           ; 1 bytes @ 0x8
   723  00A8                     	ds	9
   724  00B1                     ??_sprintf:
   725                           
   726                           ; 1 bytes @ 0x11
   727  00B1                     	ds	5
   728  00B6                     _sprintf$960:
   729                           
   730                           ; 4 bytes @ 0x16
   731  00B6                     	ds	4
   732  00BA                     sprintf@ap:
   733                           
   734                           ; 1 bytes @ 0x1A
   735  00BA                     	ds	1
   736  00BB                     sprintf@flag:
   737                           
   738                           ; 2 bytes @ 0x1B
   739  00BB                     	ds	2
   740  00BD                     sprintf@eexp:
   741                           
   742                           ; 2 bytes @ 0x1D
   743  00BD                     	ds	2
   744  00BF                     sprintf@tmpval:
   745                           
   746                           ; 4 bytes @ 0x1F
   747  00BF                     	ds	4
   748  00C3                     sprintf@val:
   749                           
   750                           ; 4 bytes @ 0x23
   751  00C3                     	ds	4
   752  00C7                     sprintf@sp:
   753                           
   754                           ; 1 bytes @ 0x27
   755  00C7                     	ds	1
   756  00C8                     sprintf@fval:
   757                           
   758                           ; 4 bytes @ 0x28
   759  00C8                     	ds	4
   760  00CC                     sprintf@prec:
   761                           
   762                           ; 2 bytes @ 0x2C
   763  00CC                     	ds	2
   764  00CE                     sprintf@c:
   765                           
   766                           ; 1 bytes @ 0x2E
   767  00CE                     	ds	1
   768  00CF                     ??_main:
   769                           
   770                           ; 1 bytes @ 0x2F
   771  00CF                     	ds	5
   772                           
   773                           	psect	cstackCOMMON
   774  0070                     __pcstackCOMMON:
   775  0070                     ?_isdigit:
   776  0070                     ?___fleq:	
   777                           ; 1 bit 
   778                           
   779  0070                     ?___flge:	
   780                           ; 1 bit 
   781                           
   782  0070                     ?_setup:	
   783                           ; 1 bit 
   784                           
   785  0070                     ?_I2C_Master_Start:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ??_I2C_Master_Start:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_I2C_Master_Write:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_I2C_Master_Stop:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ??_I2C_Master_Stop:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_Lcd_Init:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ??_isdigit:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_main:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_I2C_Master_Wait:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ??_I2C_Master_Wait:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_Lcd_Port:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ??_Lcd_Port:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_Lcd_Cmd:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_Lcd_Write_Char:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_I2C_Master_Read:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?__Umul8_16:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0070                     ?___wmul:	
   834                           ; 2 bytes @ 0x0
   835                           
   836  0070                     ?___awmod:	
   837                           ; 2 bytes @ 0x0
   838                           
   839  0070                     ?___lwmod:	
   840                           ; 2 bytes @ 0x0
   841                           
   842  0070                     ?__tdiv_to_l_:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0070                     ?__div_to_l_:	
   846                           ; 4 bytes @ 0x0
   847                           
   848  0070                     ?___lldiv:	
   849                           ; 4 bytes @ 0x0
   850                           
   851  0070                     ?___flneg:	
   852                           ; 4 bytes @ 0x0
   853                           
   854  0070                     ?___xxtofl:	
   855                           ; 4 bytes @ 0x0
   856                           
   857  0070                     Lcd_Port@a:	
   858                           ; 4 bytes @ 0x0
   859                           
   860  0070                     __Umul8_16@multiplicand:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     _isdigit$768:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     I2C_Master_Write@d:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     I2C_Master_Read@a:	
   870                           ; 2 bytes @ 0x0
   871                           
   872  0070                     ___wmul@multiplier:	
   873                           ; 2 bytes @ 0x0
   874                           
   875  0070                     ___awmod@divisor:	
   876                           ; 2 bytes @ 0x0
   877                           
   878  0070                     ___lwmod@divisor:	
   879                           ; 2 bytes @ 0x0
   880                           
   881  0070                     ___lldiv@divisor:	
   882                           ; 2 bytes @ 0x0
   883                           
   884  0070                     __div_to_l_@f1:	
   885                           ; 4 bytes @ 0x0
   886                           
   887  0070                     ___fleq@ff1:	
   888                           ; 4 bytes @ 0x0
   889                           
   890  0070                     ___flge@ff1:	
   891                           ; 4 bytes @ 0x0
   892                           
   893  0070                     ___flneg@f1:	
   894                           ; 4 bytes @ 0x0
   895                           
   896  0070                     __tdiv_to_l_@f1:	
   897                           ; 4 bytes @ 0x0
   898                           
   899  0070                     ___xxtofl@val:	
   900                           ; 4 bytes @ 0x0
   901                           
   902                           
   903                           ; 4 bytes @ 0x0
   904  0070                     	ds	1
   905  0071                     ??_Lcd_Cmd:
   906  0071                     ??_Lcd_Write_Char:	
   907                           ; 1 bytes @ 0x1
   908                           
   909  0071                     isdigit@c:	
   910                           ; 1 bytes @ 0x1
   911                           
   912                           
   913                           ; 1 bytes @ 0x1
   914  0071                     	ds	1
   915  0072                     ??_I2C_Master_Write:
   916  0072                     ??_I2C_Master_Read:	
   917                           ; 1 bytes @ 0x2
   918                           
   919  0072                     ??__Umul8_16:	
   920                           ; 1 bytes @ 0x2
   921                           
   922  0072                     Lcd_Write_Char@a:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  0072                     ___wmul@multiplicand:	
   926                           ; 1 bytes @ 0x2
   927                           
   928  0072                     ___awmod@dividend:	
   929                           ; 2 bytes @ 0x2
   930                           
   931  0072                     ___lwmod@dividend:	
   932                           ; 2 bytes @ 0x2
   933                           
   934                           
   935                           ; 2 bytes @ 0x2
   936  0072                     	ds	1
   937  0073                     ?_Lcd_Write_String:
   938  0073                     Lcd_Cmd@a:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0073                     Lcd_Write_String@a:	
   942                           ; 1 bytes @ 0x3
   943                           
   944                           
   945                           ; 2 bytes @ 0x3
   946  0073                     	ds	1
   947  0074                     ?_Lcd_Set_Cursor:
   948  0074                     ??_Lcd_Init:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0074                     ??___wmul:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0074                     ??___awmod:	
   955                           ; 1 bytes @ 0x4
   956                           
   957  0074                     ??___flneg:	
   958                           ; 1 bytes @ 0x4
   959                           
   960  0074                     ??___lwmod:	
   961                           ; 1 bytes @ 0x4
   962                           
   963  0074                     ??___xxtofl:	
   964                           ; 1 bytes @ 0x4
   965                           
   966  0074                     Lcd_Set_Cursor@b:	
   967                           ; 1 bytes @ 0x4
   968                           
   969  0074                     I2C_Master_Read@temp:	
   970                           ; 1 bytes @ 0x4
   971                           
   972  0074                     ___wmul@product:	
   973                           ; 2 bytes @ 0x4
   974                           
   975  0074                     __Umul8_16@product:	
   976                           ; 2 bytes @ 0x4
   977                           
   978  0074                     ___lldiv@dividend:	
   979                           ; 2 bytes @ 0x4
   980                           
   981  0074                     __div_to_l_@f2:	
   982                           ; 4 bytes @ 0x4
   983                           
   984  0074                     ___fleq@ff2:	
   985                           ; 4 bytes @ 0x4
   986                           
   987  0074                     ___flge@ff2:	
   988                           ; 4 bytes @ 0x4
   989                           
   990  0074                     __tdiv_to_l_@f2:	
   991                           ; 4 bytes @ 0x4
   992                           
   993                           
   994                           ; 4 bytes @ 0x4
   995  0074                     	ds	1
   996  0075                     ??_Lcd_Set_Cursor:
   997  0075                     ??_Lcd_Write_String:	
   998                           ; 1 bytes @ 0x5
   999                           
  1000  0075                     ___awmod@counter:	
  1001                           ; 1 bytes @ 0x5
  1002                           
  1003  0075                     ___lwmod@counter:	
  1004                           ; 1 bytes @ 0x5
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0x5
  1008  0075                     	ds	1
  1009  0076                     ?___lwdiv:
  1010  0076                     Lcd_Set_Cursor@a:	
  1011                           ; 2 bytes @ 0x6
  1012                           
  1013  0076                     ___awmod@sign:	
  1014                           ; 1 bytes @ 0x6
  1015                           
  1016  0076                     ___lwdiv@divisor:	
  1017                           ; 1 bytes @ 0x6
  1018                           
  1019  0076                     __Umul8_16@word_mpld:	
  1020                           ; 2 bytes @ 0x6
  1021                           
  1022                           
  1023                           ; 2 bytes @ 0x6
  1024  0076                     	ds	1
  1025  0077                     ?___awdiv:
  1026  0077                     Lcd_Set_Cursor@temp:	
  1027                           ; 2 bytes @ 0x7
  1028                           
  1029  0077                     ___awdiv@divisor:	
  1030                           ; 1 bytes @ 0x7
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0x7
  1034  0077                     	ds	1
  1035  0078                     ??__tdiv_to_l_:
  1036  0078                     ??__div_to_l_:	
  1037                           ; 1 bytes @ 0x8
  1038                           
  1039  0078                     ??___lldiv:	
  1040                           ; 1 bytes @ 0x8
  1041                           
  1042  0078                     ??___fleq:	
  1043                           ; 1 bytes @ 0x8
  1044                           
  1045  0078                     ??___flge:	
  1046                           ; 1 bytes @ 0x8
  1047                           
  1048  0078                     __Umul8_16@multiplier:	
  1049                           ; 1 bytes @ 0x8
  1050                           
  1051  0078                     ___xxtofl@sign:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054  0078                     Lcd_Write_String@i:	
  1055                           ; 1 bytes @ 0x8
  1056                           
  1057  0078                     ___lwdiv@dividend:	
  1058                           ; 2 bytes @ 0x8
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x8
  1062  0078                     	ds	1
  1063  0079                     ___xxtofl@exp:
  1064  0079                     ___awdiv@dividend:	
  1065                           ; 1 bytes @ 0x9
  1066                           
  1067  0079                     ___lldiv@quotient:	
  1068                           ; 2 bytes @ 0x9
  1069                           
  1070                           
  1071                           ; 4 bytes @ 0x9
  1072  0079                     	ds	1
  1073  007A                     ??___lwdiv:
  1074  007A                     ___xxtofl@arg:	
  1075                           ; 1 bytes @ 0xA
  1076                           
  1077                           
  1078                           ; 4 bytes @ 0xA
  1079  007A                     	ds	1
  1080  007B                     ??___awdiv:
  1081  007B                     ___lwdiv@quotient:	
  1082                           ; 1 bytes @ 0xB
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0xB
  1086  007B                     	ds	2
  1087  007D                     ___lldiv@counter:
  1088  007D                     ___lwdiv@counter:	
  1089                           ; 1 bytes @ 0xD
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0xD
  1093  007D                     	ds	1
  1094  007E                     ??_setup:
  1095  007E                     ??___flsub:	
  1096                           ; 1 bytes @ 0xE
  1097                           
  1098                           
  1099                           	psect	cstackBANK0
  1100  0020                     __pcstackBANK0:	
  1101                           ; 1 bytes @ 0xE
  1102                           
  1103  0020                     ?_I2C_Master_Init:
  1104  0020                     ?___llmod:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0020                     ___awdiv@counter:	
  1108                           ; 4 bytes @ 0x0
  1109                           
  1110  0020                     I2C_Master_Init@c:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0020                     __div_to_l_@quot:	
  1114                           ; 4 bytes @ 0x0
  1115                           
  1116  0020                     __tdiv_to_l_@quot:	
  1117                           ; 4 bytes @ 0x0
  1118                           
  1119  0020                     ___llmod@divisor:	
  1120                           ; 4 bytes @ 0x0
  1121                           
  1122                           
  1123                           ; 4 bytes @ 0x0
  1124  0020                     	ds	1
  1125  0021                     ___awdiv@sign:
  1126                           
  1127                           ; 1 bytes @ 0x1
  1128  0021                     	ds	1
  1129  0022                     ___awdiv@quotient:
  1130                           
  1131                           ; 2 bytes @ 0x2
  1132  0022                     	ds	2
  1133  0024                     ??_I2C_Master_Init:
  1134  0024                     ?___flmul:	
  1135                           ; 1 bytes @ 0x4
  1136                           
  1137  0024                     __div_to_l_@cntr:	
  1138                           ; 4 bytes @ 0x4
  1139                           
  1140  0024                     __tdiv_to_l_@cntr:	
  1141                           ; 1 bytes @ 0x4
  1142                           
  1143  0024                     ___llmod@dividend:	
  1144                           ; 1 bytes @ 0x4
  1145                           
  1146  0024                     ___flmul@b:	
  1147                           ; 4 bytes @ 0x4
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x4
  1151  0024                     	ds	1
  1152  0025                     __div_to_l_@exp1:
  1153  0025                     __tdiv_to_l_@exp1:	
  1154                           ; 1 bytes @ 0x5
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0x5
  1158  0025                     	ds	3
  1159  0028                     ??___llmod:
  1160  0028                     ___flmul@a:	
  1161                           ; 1 bytes @ 0x8
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x8
  1165  0028                     	ds	1
  1166  0029                     ___llmod@counter:
  1167                           
  1168                           ; 1 bytes @ 0x9
  1169  0029                     	ds	3
  1170  002C                     ??___flmul:
  1171                           
  1172                           ; 1 bytes @ 0xC
  1173  002C                     	ds	5
  1174  0031                     ___flmul@sign:
  1175                           
  1176                           ; 1 bytes @ 0x11
  1177  0031                     	ds	1
  1178  0032                     ___flmul@grs:
  1179                           
  1180                           ; 4 bytes @ 0x12
  1181  0032                     	ds	4
  1182  0036                     ___flmul@aexp:
  1183                           
  1184                           ; 1 bytes @ 0x16
  1185  0036                     	ds	1
  1186  0037                     ___flmul@bexp:
  1187                           
  1188                           ; 1 bytes @ 0x17
  1189  0037                     	ds	1
  1190  0038                     ___flmul@prod:
  1191                           
  1192                           ; 4 bytes @ 0x18
  1193  0038                     	ds	4
  1194  003C                     ___flmul@temp:
  1195                           
  1196                           ; 2 bytes @ 0x1C
  1197  003C                     	ds	2
  1198  003E                     ?_fround:
  1199  003E                     ?_scale:	
  1200                           ; 4 bytes @ 0x1E
  1201                           
  1202  003E                     ?___fldiv:	
  1203                           ; 4 bytes @ 0x1E
  1204                           
  1205  003E                     ___fldiv@a:	
  1206                           ; 4 bytes @ 0x1E
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x1E
  1210  003E                     	ds	4
  1211  0042                     ??_fround:
  1212  0042                     ??_scale:	
  1213                           ; 1 bytes @ 0x22
  1214                           
  1215  0042                     ___fldiv@b:	
  1216                           ; 1 bytes @ 0x22
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x22
  1220  0042                     	ds	4
  1221  0046                     ??___fldiv:
  1222                           
  1223                           ; 1 bytes @ 0x26
  1224  0046                     	ds	3
  1225  0049                     _fround$958:
  1226                           
  1227                           ; 4 bytes @ 0x29
  1228  0049                     	ds	2
  1229  004B                     ___fldiv@rem:
  1230                           
  1231                           ; 4 bytes @ 0x2B
  1232  004B                     	ds	1
  1233  004C                     _scale$959:
  1234                           
  1235                           ; 4 bytes @ 0x2C
  1236  004C                     	ds	1
  1237  004D                     _fround$957:
  1238                           
  1239                           ; 4 bytes @ 0x2D
  1240  004D                     	ds	2
  1241  004F                     ___fldiv@sign:
  1242                           
  1243                           ; 1 bytes @ 0x2F
  1244  004F                     	ds	1
  1245  0050                     scale@scl:
  1246  0050                     ___fldiv@new_exp:	
  1247                           ; 1 bytes @ 0x30
  1248                           
  1249                           
  1250                           ; 2 bytes @ 0x30
  1251  0050                     	ds	1
  1252  0051                     ?___fltol:
  1253  0051                     fround@prec:	
  1254                           ; 4 bytes @ 0x31
  1255                           
  1256  0051                     ___fltol@f1:	
  1257                           ; 1 bytes @ 0x31
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x31
  1261  0051                     	ds	1
  1262  0052                     ___fldiv@grs:
  1263                           
  1264                           ; 4 bytes @ 0x32
  1265  0052                     	ds	3
  1266  0055                     ??___fltol:
  1267                           
  1268                           ; 1 bytes @ 0x35
  1269  0055                     	ds	1
  1270  0056                     ___fldiv@bexp:
  1271                           
  1272                           ; 1 bytes @ 0x36
  1273  0056                     	ds	1
  1274  0057                     ___fldiv@aexp:
  1275                           
  1276                           ; 1 bytes @ 0x37
  1277  0057                     	ds	1
  1278  0058                     ?___fladd:
  1279  0058                     ___fladd@b:	
  1280                           ; 4 bytes @ 0x38
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x38
  1284  0058                     	ds	2
  1285  005A                     ___fltol@sign1:
  1286                           
  1287                           ; 1 bytes @ 0x3A
  1288  005A                     	ds	1
  1289  005B                     ___fltol@exp1:
  1290                           
  1291                           ; 1 bytes @ 0x3B
  1292  005B                     	ds	1
  1293  005C                     ___fladd@a:
  1294                           
  1295                           ; 4 bytes @ 0x3C
  1296  005C                     	ds	4
  1297  0060                     ??___fladd:
  1298                           
  1299                           ; 1 bytes @ 0x40
  1300  0060                     	ds	8
  1301  0068                     ___fladd@signs:
  1302                           
  1303                           ; 1 bytes @ 0x48
  1304  0068                     	ds	1
  1305  0069                     ___fladd@aexp:
  1306                           
  1307                           ; 1 bytes @ 0x49
  1308  0069                     	ds	1
  1309  006A                     ___fladd@bexp:
  1310                           
  1311                           ; 1 bytes @ 0x4A
  1312  006A                     	ds	1
  1313  006B                     ___fladd@grs:
  1314                           
  1315                           ; 1 bytes @ 0x4B
  1316  006B                     	ds	1
  1317                           
  1318                           	psect	maintext
  1319  1E5F                     __pmaintext:	
  1320 ;;
  1321 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1322 ;;
  1323 ;; *************** function _main *****************
  1324 ;; Defined at:
  1325 ;;		line 66 in file "lab4master.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : B00/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          0       0       5       0       0
  1342 ;;      Totals:         0       0       5       0       0
  1343 ;;Total ram usage:        5 bytes
  1344 ;; Hardware stack levels required when called:    4
  1345 ;; This function calls:
  1346 ;;		_I2C_Master_Read
  1347 ;;		_I2C_Master_Start
  1348 ;;		_I2C_Master_Stop
  1349 ;;		_I2C_Master_Write
  1350 ;;		_Lcd_Set_Cursor
  1351 ;;		_Lcd_Write_String
  1352 ;;		___fladd
  1353 ;;		___fldiv
  1354 ;;		___flmul
  1355 ;;		___xxtofl
  1356 ;;		_setup
  1357 ;;		_sprintf
  1358 ;; This function is called by:
  1359 ;;		Startup code after reset
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _main
  1365  1E5F                     _main:
  1366  1E5F                     l3802:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1369                           
  1370                           
  1371                           ;lab4master.c: 67:     setup();
  1372  1E5F  160A  158A  21C7  160A  158A  	fcall	_setup
  1373  1E64                     l3804:
  1374                           
  1375                           ;lab4master.c: 69:         I2C_Master_Start();
  1376  1E64  160A  158A  208D  160A  158A  	fcall	_I2C_Master_Start
  1377  1E69                     l3806:
  1378                           
  1379                           ;lab4master.c: 70:         I2C_Master_Write(0x50);
  1380  1E69  3050               	movlw	80
  1381  1E6A  00F0               	movwf	I2C_Master_Write@d
  1382  1E6B  3000               	movlw	0
  1383  1E6C  00F1               	movwf	I2C_Master_Write@d+1
  1384  1E6D  160A  158A  209F  160A  158A  	fcall	_I2C_Master_Write
  1385  1E72                     l3808:
  1386                           
  1387                           ;lab4master.c: 71:         I2C_Master_Write(PORTB);
  1388  1E72  1283               	bcf	3,5	;RP0=0, select bank0
  1389  1E73  1303               	bcf	3,6	;RP1=0, select bank0
  1390  1E74  0806               	movf	6,w	;volatile
  1391  1E75  1683               	bsf	3,5	;RP0=1, select bank1
  1392  1E76  1303               	bcf	3,6	;RP1=0, select bank1
  1393  1E77  00CF               	movwf	??_main^(0+128)
  1394  1E78  01D0               	clrf	(??_main^(0+128)+1)
  1395  1E79  084F               	movf	??_main^(0+128),w
  1396  1E7A  00F0               	movwf	I2C_Master_Write@d
  1397  1E7B  0850               	movf	(??_main+1)^(0+128),w
  1398  1E7C  00F1               	movwf	I2C_Master_Write@d+1
  1399  1E7D  160A  158A  209F  160A  158A  	fcall	_I2C_Master_Write
  1400  1E82                     l3810:
  1401                           
  1402                           ;lab4master.c: 72:         I2C_Master_Stop();
  1403  1E82  160A  158A  2096  160A  158A  	fcall	_I2C_Master_Stop
  1404  1E87                     l3812:
  1405                           
  1406                           ;lab4master.c: 73:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1407  1E87  3082               	movlw	130
  1408  1E88  1683               	bsf	3,5	;RP0=1, select bank1
  1409  1E89  1303               	bcf	3,6	;RP1=0, select bank1
  1410  1E8A  00D0               	movwf	(??_main^(0+128)+1)
  1411  1E8B  30DD               	movlw	221
  1412  1E8C  00CF               	movwf	??_main^(0+128)
  1413  1E8D                     u6217:
  1414  1E8D  0BCF               	decfsz	??_main^(0+128),f
  1415  1E8E  2E8D               	goto	u6217
  1416  1E8F  0BD0               	decfsz	(??_main^(0+128)+1),f
  1417  1E90  2E8D               	goto	u6217
  1418  1E91                     l3814:
  1419                           
  1420                           ;lab4master.c: 75:         I2C_Master_Start();
  1421  1E91  160A  158A  208D  160A  158A  	fcall	_I2C_Master_Start
  1422  1E96                     l3816:
  1423                           
  1424                           ;lab4master.c: 76:         I2C_Master_Write(0x51);
  1425  1E96  3051               	movlw	81
  1426  1E97  00F0               	movwf	I2C_Master_Write@d
  1427  1E98  3000               	movlw	0
  1428  1E99  00F1               	movwf	I2C_Master_Write@d+1
  1429  1E9A  160A  158A  209F  160A  158A  	fcall	_I2C_Master_Write
  1430  1E9F                     l3818:
  1431                           
  1432                           ;lab4master.c: 77:         s1 = I2C_Master_Read(0);
  1433  1E9F  3000               	movlw	0
  1434  1EA0  00F0               	movwf	I2C_Master_Read@a
  1435  1EA1  00F1               	movwf	I2C_Master_Read@a+1
  1436  1EA2  160A  158A  2161  160A  158A  	fcall	_I2C_Master_Read
  1437  1EA7  0870               	movf	?_I2C_Master_Read,w
  1438  1EA8  1683               	bsf	3,5	;RP0=1, select bank1
  1439  1EA9  1303               	bcf	3,6	;RP1=0, select bank1
  1440  1EAA  00CF               	movwf	??_main^(0+128)
  1441  1EAB  084F               	movf	??_main^(0+128),w
  1442  1EAC  00DD               	movwf	_s1^(0+128)
  1443  1EAD                     l3820:
  1444                           
  1445                           ;lab4master.c: 78:         I2C_Master_Stop();
  1446  1EAD  160A  158A  2096  160A  158A  	fcall	_I2C_Master_Stop
  1447  1EB2                     l3822:
  1448                           
  1449                           ;lab4master.c: 79:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1450  1EB2  3082               	movlw	130
  1451  1EB3  1683               	bsf	3,5	;RP0=1, select bank1
  1452  1EB4  1303               	bcf	3,6	;RP1=0, select bank1
  1453  1EB5  00D0               	movwf	(??_main^(0+128)+1)
  1454  1EB6  30DD               	movlw	221
  1455  1EB7  00CF               	movwf	??_main^(0+128)
  1456  1EB8                     u6227:
  1457  1EB8  0BCF               	decfsz	??_main^(0+128),f
  1458  1EB9  2EB8               	goto	u6227
  1459  1EBA  0BD0               	decfsz	(??_main^(0+128)+1),f
  1460  1EBB  2EB8               	goto	u6227
  1461  1EBC                     l3824:
  1462                           
  1463                           ;lab4master.c: 81:         I2C_Master_Start();
  1464  1EBC  160A  158A  208D  160A  158A  	fcall	_I2C_Master_Start
  1465  1EC1                     l3826:
  1466                           
  1467                           ;lab4master.c: 82:         I2C_Master_Write(0x61);
  1468  1EC1  3061               	movlw	97
  1469  1EC2  00F0               	movwf	I2C_Master_Write@d
  1470  1EC3  3000               	movlw	0
  1471  1EC4  00F1               	movwf	I2C_Master_Write@d+1
  1472  1EC5  160A  158A  209F  160A  158A  	fcall	_I2C_Master_Write
  1473  1ECA                     l3828:
  1474                           
  1475                           ;lab4master.c: 83:         s2 = I2C_Master_Read(0);
  1476  1ECA  3000               	movlw	0
  1477  1ECB  00F0               	movwf	I2C_Master_Read@a
  1478  1ECC  00F1               	movwf	I2C_Master_Read@a+1
  1479  1ECD  160A  158A  2161  160A  158A  	fcall	_I2C_Master_Read
  1480  1ED2  0870               	movf	?_I2C_Master_Read,w
  1481  1ED3  1683               	bsf	3,5	;RP0=1, select bank1
  1482  1ED4  1303               	bcf	3,6	;RP1=0, select bank1
  1483  1ED5  00CF               	movwf	??_main^(0+128)
  1484  1ED6  084F               	movf	??_main^(0+128),w
  1485  1ED7  00DC               	movwf	_s2^(0+128)
  1486  1ED8                     l3830:
  1487                           
  1488                           ;lab4master.c: 84:         I2C_Master_Stop();
  1489  1ED8  160A  158A  2096  160A  158A  	fcall	_I2C_Master_Stop
  1490  1EDD                     l3832:
  1491                           
  1492                           ;lab4master.c: 85:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1493  1EDD  3082               	movlw	130
  1494  1EDE  1683               	bsf	3,5	;RP0=1, select bank1
  1495  1EDF  1303               	bcf	3,6	;RP1=0, select bank1
  1496  1EE0  00D0               	movwf	(??_main^(0+128)+1)
  1497  1EE1  30DD               	movlw	221
  1498  1EE2  00CF               	movwf	??_main^(0+128)
  1499  1EE3                     u6237:
  1500  1EE3  0BCF               	decfsz	??_main^(0+128),f
  1501  1EE4  2EE3               	goto	u6237
  1502  1EE5  0BD0               	decfsz	(??_main^(0+128)+1),f
  1503  1EE6  2EE3               	goto	u6237
  1504  1EE7                     l3834:
  1505                           
  1506                           ;lab4master.c: 88:         I2C_Master_Start();
  1507  1EE7  160A  158A  208D  160A  158A  	fcall	_I2C_Master_Start
  1508  1EEC                     l3836:
  1509                           
  1510                           ;lab4master.c: 89:         I2C_Master_Write(0x80);
  1511  1EEC  3080               	movlw	128
  1512  1EED  00F0               	movwf	I2C_Master_Write@d
  1513  1EEE  3000               	movlw	0
  1514  1EEF  00F1               	movwf	I2C_Master_Write@d+1
  1515  1EF0  160A  158A  209F  160A  158A  	fcall	_I2C_Master_Write
  1516  1EF5                     l3838:
  1517                           
  1518                           ;lab4master.c: 90:         I2C_Master_Write(0xF3);
  1519  1EF5  30F3               	movlw	243
  1520  1EF6  00F0               	movwf	I2C_Master_Write@d
  1521  1EF7  3000               	movlw	0
  1522  1EF8  00F1               	movwf	I2C_Master_Write@d+1
  1523  1EF9  160A  158A  209F  160A  158A  	fcall	_I2C_Master_Write
  1524  1EFE                     l3840:
  1525                           
  1526                           ;lab4master.c: 91:         I2C_Master_Stop();
  1527  1EFE  160A  158A  2096  160A  158A  	fcall	_I2C_Master_Stop
  1528  1F03                     l3842:
  1529                           
  1530                           ;lab4master.c: 92:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1531  1F03  3002               	movlw	2
  1532  1F04  1683               	bsf	3,5	;RP0=1, select bank1
  1533  1F05  1303               	bcf	3,6	;RP1=0, select bank1
  1534  1F06  00D1               	movwf	(??_main^(0+128)+2)
  1535  1F07  3004               	movlw	4
  1536  1F08  00D0               	movwf	(??_main^(0+128)+1)
  1537  1F09  30B9               	movlw	185
  1538  1F0A  00CF               	movwf	??_main^(0+128)
  1539  1F0B                     u6247:
  1540  1F0B  0BCF               	decfsz	??_main^(0+128),f
  1541  1F0C  2F0B               	goto	u6247
  1542  1F0D  0BD0               	decfsz	(??_main^(0+128)+1),f
  1543  1F0E  2F0B               	goto	u6247
  1544  1F0F  0BD1               	decfsz	(??_main^(0+128)+2),f
  1545  1F10  2F0B               	goto	u6247
  1546  1F11  2F12               	nop2
  1547  1F12                     l3844:
  1548                           
  1549                           ;lab4master.c: 93:         I2C_Master_Start();
  1550  1F12  160A  158A  208D  160A  158A  	fcall	_I2C_Master_Start
  1551  1F17                     l3846:
  1552                           
  1553                           ;lab4master.c: 94:         I2C_Master_Write(0x81);
  1554  1F17  3081               	movlw	129
  1555  1F18  00F0               	movwf	I2C_Master_Write@d
  1556  1F19  3000               	movlw	0
  1557  1F1A  00F1               	movwf	I2C_Master_Write@d+1
  1558  1F1B  160A  158A  209F  160A  158A  	fcall	_I2C_Master_Write
  1559  1F20                     l3848:
  1560                           
  1561                           ;lab4master.c: 95:         senms = I2C_Master_Read(0);
  1562  1F20  3000               	movlw	0
  1563  1F21  00F0               	movwf	I2C_Master_Read@a
  1564  1F22  00F1               	movwf	I2C_Master_Read@a+1
  1565  1F23  160A  158A  2161  160A  158A  	fcall	_I2C_Master_Read
  1566  1F28  0871               	movf	?_I2C_Master_Read+1,w
  1567  1F29  1683               	bsf	3,5	;RP0=1, select bank1
  1568  1F2A  1303               	bcf	3,6	;RP1=0, select bank1
  1569  1F2B  00DB               	movwf	(_senms+1)^(0+128)
  1570  1F2C  0870               	movf	?_I2C_Master_Read,w
  1571  1F2D  00DA               	movwf	_senms^(0+128)
  1572  1F2E                     l3850:
  1573                           
  1574                           ;lab4master.c: 96:         sensorval = I2C_Master_Read(0);
  1575  1F2E  3000               	movlw	0
  1576  1F2F  00F0               	movwf	I2C_Master_Read@a
  1577  1F30  00F1               	movwf	I2C_Master_Read@a+1
  1578  1F31  160A  158A  2161  160A  158A  	fcall	_I2C_Master_Read
  1579  1F36  0871               	movf	?_I2C_Master_Read+1,w
  1580  1F37  1683               	bsf	3,5	;RP0=1, select bank1
  1581  1F38  1303               	bcf	3,6	;RP1=0, select bank1
  1582  1F39  00D9               	movwf	(_sensorval+1)^(0+128)
  1583  1F3A  0870               	movf	?_I2C_Master_Read,w
  1584  1F3B  00D8               	movwf	_sensorval^(0+128)
  1585  1F3C                     l3852:
  1586                           
  1587                           ;lab4master.c: 97:         I2C_Master_Stop();
  1588  1F3C  160A  158A  2096  160A  158A  	fcall	_I2C_Master_Stop
  1589  1F41                     l3854:
  1590                           
  1591                           ;lab4master.c: 98:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1592  1F41  3082               	movlw	130
  1593  1F42  1683               	bsf	3,5	;RP0=1, select bank1
  1594  1F43  1303               	bcf	3,6	;RP1=0, select bank1
  1595  1F44  00D0               	movwf	(??_main^(0+128)+1)
  1596  1F45  30DD               	movlw	221
  1597  1F46  00CF               	movwf	??_main^(0+128)
  1598  1F47                     u6257:
  1599  1F47  0BCF               	decfsz	??_main^(0+128),f
  1600  1F48  2F47               	goto	u6257
  1601  1F49  0BD0               	decfsz	(??_main^(0+128)+1),f
  1602  1F4A  2F47               	goto	u6257
  1603  1F4B                     l3856:
  1604                           
  1605                           ;lab4master.c: 101:         sensorval = senms<<8;
  1606  1F4B  1683               	bsf	3,5	;RP0=1, select bank1
  1607  1F4C  1303               	bcf	3,6	;RP1=0, select bank1
  1608  1F4D  085A               	movf	_senms^(0+128),w
  1609  1F4E  00D0               	movwf	(??_main^(0+128)+1)
  1610  1F4F  01CF               	clrf	??_main^(0+128)
  1611  1F50  084F               	movf	??_main^(0+128),w
  1612  1F51  00D8               	movwf	_sensorval^(0+128)
  1613  1F52  0850               	movf	(??_main+1)^(0+128),w
  1614  1F53  00D9               	movwf	(_sensorval+1)^(0+128)
  1615  1F54                     l3858:
  1616                           
  1617                           ;lab4master.c: 102:         sensorval += senms;
  1618  1F54  085A               	movf	_senms^(0+128),w
  1619  1F55  07D8               	addwf	_sensorval^(0+128),f
  1620  1F56  1803               	skipnc
  1621  1F57  0AD9               	incf	(_sensorval+1)^(0+128),f
  1622  1F58  085B               	movf	(_senms+1)^(0+128),w
  1623  1F59  07D9               	addwf	(_sensorval+1)^(0+128),f
  1624  1F5A                     l3860:
  1625                           
  1626                           ;lab4master.c: 103:         sensorval &= ~0b11;
  1627  1F5A  30FC               	movlw	252
  1628  1F5B  05D8               	andwf	_sensorval^(0+128),f
  1629  1F5C  30FF               	movlw	255
  1630  1F5D  05D9               	andwf	(_sensorval+1)^(0+128),f
  1631  1F5E                     l3862:
  1632                           
  1633                           ;lab4master.c: 104:         t = -46.85 +(175.72*sensorval/65536);
  1634  1F5E  30C2               	movlw	194
  1635  1F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1636  1F60  1303               	bcf	3,6	;RP1=0, select bank0
  1637  1F61  00DB               	movwf	___fladd@b+3
  1638  1F62  303B               	movlw	59
  1639  1F63  00DA               	movwf	___fladd@b+2
  1640  1F64  3066               	movlw	102
  1641  1F65  00D9               	movwf	___fladd@b+1
  1642  1F66  3066               	movlw	102
  1643  1F67  00D8               	movwf	___fladd@b
  1644  1F68  3047               	movlw	71
  1645  1F69  00C1               	movwf	___fldiv@a+3
  1646  1F6A  3080               	movlw	128
  1647  1F6B  00C0               	movwf	___fldiv@a+2
  1648  1F6C  3000               	movlw	0
  1649  1F6D  00BF               	movwf	___fldiv@a+1
  1650  1F6E  3000               	movlw	0
  1651  1F6F  00BE               	movwf	___fldiv@a
  1652  1F70  3043               	movlw	67
  1653  1F71  00A7               	movwf	___flmul@b+3
  1654  1F72  302F               	movlw	47
  1655  1F73  00A6               	movwf	___flmul@b+2
  1656  1F74  30B8               	movlw	184
  1657  1F75  00A5               	movwf	___flmul@b+1
  1658  1F76  3052               	movlw	82
  1659  1F77  00A4               	movwf	___flmul@b
  1660  1F78  1683               	bsf	3,5	;RP0=1, select bank1
  1661  1F79  1303               	bcf	3,6	;RP1=0, select bank1
  1662  1F7A  0858               	movf	_sensorval^(0+128),w
  1663  1F7B  00F0               	movwf	___xxtofl@val
  1664  1F7C  0859               	movf	(_sensorval+1)^(0+128),w
  1665  1F7D  00F1               	movwf	___xxtofl@val+1
  1666  1F7E  01F2               	clrf	___xxtofl@val+2
  1667  1F7F  01F3               	clrf	___xxtofl@val+3
  1668  1F80  3000               	movlw	0
  1669  1F81  160A  158A  25A5  160A  158A  	fcall	___xxtofl
  1670  1F86  0873               	movf	?___xxtofl+3,w
  1671  1F87  1283               	bcf	3,5	;RP0=0, select bank0
  1672  1F88  1303               	bcf	3,6	;RP1=0, select bank0
  1673  1F89  00AB               	movwf	___flmul@a+3
  1674  1F8A  0872               	movf	?___xxtofl+2,w
  1675  1F8B  00AA               	movwf	___flmul@a+2
  1676  1F8C  0871               	movf	?___xxtofl+1,w
  1677  1F8D  00A9               	movwf	___flmul@a+1
  1678  1F8E  0870               	movf	?___xxtofl,w
  1679  1F8F  00A8               	movwf	___flmul@a
  1680  1F90  120A  158A  249F  160A  158A  	fcall	___flmul
  1681  1F95  1283               	bcf	3,5	;RP0=0, select bank0
  1682  1F96  1303               	bcf	3,6	;RP1=0, select bank0
  1683  1F97  0827               	movf	?___flmul+3,w
  1684  1F98  00C5               	movwf	___fldiv@b+3
  1685  1F99  0826               	movf	?___flmul+2,w
  1686  1F9A  00C4               	movwf	___fldiv@b+2
  1687  1F9B  0825               	movf	?___flmul+1,w
  1688  1F9C  00C3               	movwf	___fldiv@b+1
  1689  1F9D  0824               	movf	?___flmul,w
  1690  1F9E  00C2               	movwf	___fldiv@b
  1691  1F9F  160A  118A  2190  160A  158A  	fcall	___fldiv
  1692  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  1693  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  1694  1FA6  0841               	movf	?___fldiv+3,w
  1695  1FA7  00DF               	movwf	___fladd@a+3
  1696  1FA8  0840               	movf	?___fldiv+2,w
  1697  1FA9  00DE               	movwf	___fladd@a+2
  1698  1FAA  083F               	movf	?___fldiv+1,w
  1699  1FAB  00DD               	movwf	___fladd@a+1
  1700  1FAC  083E               	movf	?___fldiv,w
  1701  1FAD  00DC               	movwf	___fladd@a
  1702  1FAE  160A  118A  2578  160A  158A  	fcall	___fladd
  1703  1FB3  1283               	bcf	3,5	;RP0=0, select bank0
  1704  1FB4  1303               	bcf	3,6	;RP1=0, select bank0
  1705  1FB5  085B               	movf	?___fladd+3,w
  1706  1FB6  1683               	bsf	3,5	;RP0=1, select bank1
  1707  1FB7  1303               	bcf	3,6	;RP1=0, select bank1
  1708  1FB8  00D7               	movwf	(_t+3)^(0+128)
  1709  1FB9  1283               	bcf	3,5	;RP0=0, select bank0
  1710  1FBA  1303               	bcf	3,6	;RP1=0, select bank0
  1711  1FBB  085A               	movf	?___fladd+2,w
  1712  1FBC  1683               	bsf	3,5	;RP0=1, select bank1
  1713  1FBD  1303               	bcf	3,6	;RP1=0, select bank1
  1714  1FBE  00D6               	movwf	(_t+2)^(0+128)
  1715  1FBF  1283               	bcf	3,5	;RP0=0, select bank0
  1716  1FC0  1303               	bcf	3,6	;RP1=0, select bank0
  1717  1FC1  0859               	movf	?___fladd+1,w
  1718  1FC2  1683               	bsf	3,5	;RP0=1, select bank1
  1719  1FC3  1303               	bcf	3,6	;RP1=0, select bank1
  1720  1FC4  00D5               	movwf	(_t+1)^(0+128)
  1721  1FC5  1283               	bcf	3,5	;RP0=0, select bank0
  1722  1FC6  1303               	bcf	3,6	;RP1=0, select bank0
  1723  1FC7  0858               	movf	?___fladd,w
  1724  1FC8  1683               	bsf	3,5	;RP0=1, select bank1
  1725  1FC9  1303               	bcf	3,6	;RP1=0, select bank1
  1726  1FCA  00D4               	movwf	_t^(0+128)
  1727  1FCB                     l3864:
  1728                           
  1729                           ;lab4master.c: 105:         sprintf(volt, "%d   %d    %.0f  ", s1, s2, t);
  1730  1FCB  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1731  1FCC  00CF               	movwf	??_main^(0+128)
  1732  1FCD  084F               	movf	??_main^(0+128),w
  1733  1FCE  00A8               	movwf	sprintf@f^(0+128)
  1734  1FCF  085D               	movf	_s1^(0+128),w
  1735  1FD0  00D0               	movwf	(??_main+1)^(0+128)
  1736  1FD1  01D1               	clrf	((??_main+1)^(0+128)+1)
  1737  1FD2  0850               	movf	(??_main+1)^(0+128),w
  1738  1FD3  00A9               	movwf	(?_sprintf^(0+128)+1)
  1739  1FD4  0851               	movf	(??_main+2)^(0+128),w
  1740  1FD5  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1741  1FD6  085C               	movf	_s2^(0+128),w
  1742  1FD7  00D2               	movwf	(??_main+3)^(0+128)
  1743  1FD8  01D3               	clrf	((??_main+3)^(0+128)+1)
  1744  1FD9  0852               	movf	(??_main+3)^(0+128),w
  1745  1FDA  00AB               	movwf	(?_sprintf^(0+128)+3)
  1746  1FDB  0853               	movf	(??_main+4)^(0+128),w
  1747  1FDC  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1748  1FDD  0857               	movf	(_t+3)^(0+128),w
  1749  1FDE  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1750  1FDF  0856               	movf	(_t+2)^(0+128),w
  1751  1FE0  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1752  1FE1  0855               	movf	(_t+1)^(0+128),w
  1753  1FE2  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1754  1FE3  0854               	movf	_t^(0+128),w
  1755  1FE4  00AD               	movwf	(?_sprintf^(0+128)+5)
  1756  1FE5  30DE               	movlw	(low (_volt| 0))& (0+255)
  1757  1FE6  120A  118A  206D  160A  158A  	fcall	_sprintf
  1758  1FEB                     l3866:
  1759                           
  1760                           ;lab4master.c: 106:         Lcd_Set_Cursor(2,1);
  1761  1FEB  01F4               	clrf	Lcd_Set_Cursor@b
  1762  1FEC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1763  1FED  3002               	movlw	2
  1764  1FEE  160A  158A  20F1  160A  158A  	fcall	_Lcd_Set_Cursor
  1765  1FF3                     l3868:
  1766                           
  1767                           ;lab4master.c: 107:         Lcd_Write_String(volt);
  1768  1FF3  30DE               	movlw	(low (_volt| 0))& (0+255)
  1769  1FF4  00F3               	movwf	Lcd_Write_String@a
  1770  1FF5  3000               	movlw	0
  1771  1FF6  00F4               	movwf	Lcd_Write_String@a+1
  1772  1FF7  160A  158A  2279  160A  158A  	fcall	_Lcd_Write_String
  1773  1FFC  2E64               	goto	l3804
  1774  1FFD  120A  118A  2800   	ljmp	start
  1775  2000                     __end_of_main:
  1776                           
  1777                           	psect	text1
  1778  006D                     __ptext1:	
  1779 ;; *************** function _sprintf *****************
  1780 ;; Defined at:
  1781 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  sp              1    wreg     PTR unsigned char 
  1784 ;;		 -> volt(16), 
  1785 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1786 ;;		 -> STR_1(18), 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1789 ;;		 -> volt(16), 
  1790 ;;  fval            4   40[BANK1 ] PTR unsigned char 
  1791 ;;  val             4   35[BANK1 ] unsigned long 
  1792 ;;  tmpval          4   31[BANK1 ] struct .
  1793 ;;  prec            2   44[BANK1 ] int 
  1794 ;;  eexp            2   29[BANK1 ] int 
  1795 ;;  flag            2   27[BANK1 ] unsigned short 
  1796 ;;  cp              2    0        PTR const unsigned char 
  1797 ;;  len             2    0        unsigned int 
  1798 ;;  width           2    0        int 
  1799 ;;  c               1   46[BANK1 ] unsigned char 
  1800 ;;  ap              1   26[BANK1 ] PTR void [1]
  1801 ;;		 -> ?_sprintf(2), 
  1802 ;;  d               1    0        unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2    8[BANK1 ] int 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         0       0       9       0       0
  1813 ;;      Locals:         0       0      25       0       0
  1814 ;;      Temps:          0       0       5       0       0
  1815 ;;      Totals:         0       0      39       0       0
  1816 ;;Total ram usage:       39 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    3
  1819 ;; This function calls:
  1820 ;;		___awdiv
  1821 ;;		___fladd
  1822 ;;		___fleq
  1823 ;;		___flge
  1824 ;;		___flmul
  1825 ;;		___flneg
  1826 ;;		___flsub
  1827 ;;		___fltol
  1828 ;;		___lldiv
  1829 ;;		___llmod
  1830 ;;		___wmul
  1831 ;;		___xxtofl
  1832 ;;		__div_to_l_
  1833 ;;		__tdiv_to_l_
  1834 ;;		_fround
  1835 ;;		_isdigit
  1836 ;;		_scale
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           
  1843                           ;psect for function _sprintf
  1844  006D                     _sprintf:
  1845                           
  1846                           ;incstack = 0
  1847                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1848                           ;sprintf@sp stored from wreg
  1849  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1850  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1851  006F  00C7               	movwf	sprintf@sp^(0+128)
  1852  0070                     l3422:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1855  0070  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1856  0071  00B1               	movwf	??_sprintf^(0+128)
  1857  0072  0831               	movf	??_sprintf^(0+128),w
  1858  0073  00BA               	movwf	sprintf@ap^(0+128)
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1861  0074  2FD9               	goto	l3648
  1862  0075                     l3424:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1865  0075  3025               	movlw	37
  1866  0076  064E               	xorwf	sprintf@c^(0+128),w
  1867  0077  1903               	btfsc	3,2
  1868  0078  287A               	goto	u5511
  1869  0079  287B               	goto	u5510
  1870  007A                     u5511:
  1871  007A  2887               	goto	l3430
  1872  007B                     u5510:
  1873  007B                     l3426:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1876  007B  084E               	movf	sprintf@c^(0+128),w
  1877  007C  00B1               	movwf	??_sprintf^(0+128)
  1878  007D  0847               	movf	sprintf@sp^(0+128),w
  1879  007E  0084               	movwf	4
  1880  007F  0831               	movf	??_sprintf^(0+128),w
  1881  0080  1383               	bcf	3,7	;select IRP bank0
  1882  0081  0080               	movwf	0
  1883  0082                     l3428:
  1884  0082  3001               	movlw	1
  1885  0083  00B1               	movwf	??_sprintf^(0+128)
  1886  0084  0831               	movf	??_sprintf^(0+128),w
  1887  0085  07C7               	addwf	sprintf@sp^(0+128),f
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1890  0086  2FD9               	goto	l3648
  1891  0087                     l3430:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1894  0087  01BB               	clrf	sprintf@flag^(0+128)
  1895  0088  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1896  0089                     l3432:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1899  0089  0828               	movf	sprintf@f^(0+128),w
  1900  008A  0084               	movwf	4
  1901  008B  120A  158A  200A  120A  118A  	fcall	stringdir
  1902  0090  3A2E               	xorlw	46
  1903  0091  1D03               	skipz
  1904  0092  2894               	goto	u5521
  1905  0093  2895               	goto	u5520
  1906  0094                     u5521:
  1907  0094  28DA               	goto	l3448
  1908  0095                     u5520:
  1909  0095                     l3434:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1912  0095  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1913  0096                     l3436:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1916  0096  3001               	movlw	1
  1917  0097  00B1               	movwf	??_sprintf^(0+128)
  1918  0098  0831               	movf	??_sprintf^(0+128),w
  1919  0099  07A8               	addwf	sprintf@f^(0+128),f
  1920  009A                     l3438:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1923  009A  01CC               	clrf	sprintf@prec^(0+128)
  1924  009B  01CD               	clrf	(sprintf@prec+1)^(0+128)
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1927  009C  28C9               	goto	l3446
  1928  009D                     l3440:
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1931  009D  300A               	movlw	10
  1932  009E  00F0               	movwf	___wmul@multiplier
  1933  009F  3000               	movlw	0
  1934  00A0  00F1               	movwf	___wmul@multiplier+1
  1935  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1936  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1937  00A3  084D               	movf	(sprintf@prec+1)^(0+128),w
  1938  00A4  00F3               	movwf	___wmul@multiplicand+1
  1939  00A5  084C               	movf	sprintf@prec^(0+128),w
  1940  00A6  00F2               	movwf	___wmul@multiplicand
  1941  00A7  160A  158A  2115  120A  118A  	fcall	___wmul
  1942  00AC  0871               	movf	?___wmul+1,w
  1943  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  1944  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  1945  00AF  00CD               	movwf	(sprintf@prec+1)^(0+128)
  1946  00B0  0870               	movf	?___wmul,w
  1947  00B1  00CC               	movwf	sprintf@prec^(0+128)
  1948  00B2                     l3442:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1951  00B2  0828               	movf	sprintf@f^(0+128),w
  1952  00B3  0084               	movwf	4
  1953  00B4  120A  158A  200A  120A  118A  	fcall	stringdir
  1954  00B9  3ED0               	addlw	208
  1955  00BA  00B1               	movwf	??_sprintf^(0+128)
  1956  00BB  30FF               	movlw	255
  1957  00BC  1803               	skipnc
  1958  00BD  3000               	movlw	0
  1959  00BE  00B2               	movwf	(??_sprintf^(0+128)+1)
  1960  00BF  0831               	movf	??_sprintf^(0+128),w
  1961  00C0  07CC               	addwf	sprintf@prec^(0+128),f
  1962  00C1  1803               	skipnc
  1963  00C2  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  1964  00C3  0832               	movf	(??_sprintf+1)^(0+128),w
  1965  00C4  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  1966  00C5                     l3444:
  1967  00C5  3001               	movlw	1
  1968  00C6  00B1               	movwf	??_sprintf^(0+128)
  1969  00C7  0831               	movf	??_sprintf^(0+128),w
  1970  00C8  07A8               	addwf	sprintf@f^(0+128),f
  1971  00C9                     l3446:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1974  00C9  0828               	movf	sprintf@f^(0+128),w
  1975  00CA  0084               	movwf	4
  1976  00CB  120A  158A  200A  120A  118A  	fcall	stringdir
  1977  00D0  160A  118A  2003  120A  118A  	fcall	_isdigit
  1978  00D5  1803               	btfsc	3,0
  1979  00D6  28D8               	goto	u5531
  1980  00D7  28D9               	goto	u5530
  1981  00D8                     u5531:
  1982  00D8  289D               	goto	l3440
  1983  00D9                     u5530:
  1984  00D9  28E0               	goto	l3454
  1985  00DA                     l3448:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1988  00DA  01CC               	clrf	sprintf@prec^(0+128)
  1989  00DB  01CD               	clrf	(sprintf@prec+1)^(0+128)
  1990  00DC                     l3450:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1993  00DC  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1994  00DD  28E0               	goto	l3454
  1995  00DE                     l323:	
  1996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1997                           
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2000  00DE  153C               	bsf	(sprintf@flag^(0+128)+1),2
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2003  00DF  2902               	goto	l3456
  2004  00E0                     l3454:
  2005  00E0  3001               	movlw	1
  2006  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  2007  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  2008  00E3  07A8               	addwf	sprintf@f^(0+128),f
  2009  00E4  30FF               	movlw	-1
  2010  00E5  0728               	addwf	sprintf@f^(0+128),w
  2011  00E6  0084               	movwf	4
  2012  00E7  120A  158A  200A  120A  118A  	fcall	stringdir
  2013  00EC  00CE               	movwf	sprintf@c^(0+128)
  2014  00ED  00B1               	movwf	??_sprintf^(0+128)
  2015  00EE  01B2               	clrf	(??_sprintf^(0+128)+1)
  2016                           
  2017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2018                           ; Switch size 1, requested type "simple"
  2019                           ; Number of cases is 1, Range of values is 0 to 0
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte            4     3 (average)
  2023                           ; direct_byte           11     8 (fixed)
  2024                           ; jumptable            260     6 (fixed)
  2025                           ;	Chosen strategy is simple_byte
  2026  00EF  0832               	movf	(??_sprintf+1)^(0+128),w
  2027  00F0  3A00               	xorlw	0	; case 0
  2028  00F1  1903               	skipnz
  2029  00F2  28F4               	goto	l3910
  2030  00F3  2FD9               	goto	l3648
  2031  00F4                     l3910:
  2032                           
  2033                           ; Switch size 1, requested type "simple"
  2034                           ; Number of cases is 4, Range of values is 0 to 105
  2035                           ; switch strategies available:
  2036                           ; Name         Instructions Cycles
  2037                           ; simple_byte           13     7 (average)
  2038                           ; jumptable            260     6 (fixed)
  2039                           ;	Chosen strategy is simple_byte
  2040  00F4  0831               	movf	??_sprintf^(0+128),w
  2041  00F5  3A00               	xorlw	0	; case 0
  2042  00F6  1903               	skipnz
  2043  00F7  2FEB               	goto	l3650
  2044  00F8  3A64               	xorlw	100	; case 100
  2045  00F9  1903               	skipnz
  2046  00FA  2902               	goto	l3456
  2047  00FB  3A02               	xorlw	2	; case 102
  2048  00FC  1903               	skipnz
  2049  00FD  28DE               	goto	l323
  2050  00FE  3A0F               	xorlw	15	; case 105
  2051  00FF  1903               	skipnz
  2052  0100  2902               	goto	l3456
  2053  0101  2FD9               	goto	l3648
  2054  0102                     l3456:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2057  0102  3000               	movlw	0
  2058  0103  053B               	andwf	sprintf@flag^(0+128),w
  2059  0104  00B1               	movwf	??_sprintf^(0+128)
  2060  0105  3007               	movlw	7
  2061  0106  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2062  0107  00B2               	movwf	(??_sprintf+1)^(0+128)
  2063  0108  0831               	movf	??_sprintf^(0+128),w
  2064  0109  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2065  010A  1903               	btfsc	3,2
  2066  010B  290D               	goto	u5541
  2067  010C  290E               	goto	u5540
  2068  010D                     u5541:
  2069  010D  2EB1               	goto	l3598
  2070  010E                     u5540:
  2071  010E                     l3458:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2074  010E  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2075  010F  2911               	goto	u5551
  2076  0110  2912               	goto	u5550
  2077  0111                     u5551:
  2078  0111  2916               	goto	l3462
  2079  0112                     u5550:
  2080  0112                     l3460:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2083  0112  3006               	movlw	6
  2084  0113  00CC               	movwf	sprintf@prec^(0+128)
  2085  0114  3000               	movlw	0
  2086  0115  00CD               	movwf	(sprintf@prec^(0+128)+1)
  2087  0116                     l3462:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2090  0116  083A               	movf	sprintf@ap^(0+128),w
  2091  0117  0084               	movwf	4
  2092  0118  1383               	bcf	3,7	;select IRP bank0
  2093  0119  0800               	movf	0,w
  2094  011A  00C8               	movwf	sprintf@fval^(0+128)
  2095  011B  0A84               	incf	4,f
  2096  011C  0800               	movf	0,w
  2097  011D  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2098  011E  0A84               	incf	4,f
  2099  011F  0800               	movf	0,w
  2100  0120  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2101  0121  0A84               	incf	4,f
  2102  0122  0800               	movf	0,w
  2103  0123  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2104  0124                     l3464:
  2105  0124  3004               	movlw	4
  2106  0125  00B1               	movwf	??_sprintf^(0+128)
  2107  0126  0831               	movf	??_sprintf^(0+128),w
  2108  0127  07BA               	addwf	sprintf@ap^(0+128),f
  2109  0128                     l3466:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2112  0128  084B               	movf	(sprintf@fval+3)^(0+128),w
  2113  0129  00F3               	movwf	___flge@ff1+3
  2114  012A  084A               	movf	(sprintf@fval+2)^(0+128),w
  2115  012B  00F2               	movwf	___flge@ff1+2
  2116  012C  0849               	movf	(sprintf@fval+1)^(0+128),w
  2117  012D  00F1               	movwf	___flge@ff1+1
  2118  012E  0848               	movf	sprintf@fval^(0+128),w
  2119  012F  00F0               	movwf	___flge@ff1
  2120  0130  3000               	movlw	0
  2121  0131  00F7               	movwf	___flge@ff2+3
  2122  0132  3000               	movlw	0
  2123  0133  00F6               	movwf	___flge@ff2+2
  2124  0134  3000               	movlw	0
  2125  0135  00F5               	movwf	___flge@ff2+1
  2126  0136  3000               	movlw	0
  2127  0137  00F4               	movwf	___flge@ff2
  2128  0138  160A  158A  2503  120A  118A  	fcall	___flge
  2129  013D  1803               	btfsc	3,0
  2130  013E  2940               	goto	u5561
  2131  013F  2941               	goto	u5560
  2132  0140                     u5561:
  2133  0140  295E               	goto	l3472
  2134  0141                     u5560:
  2135  0141                     l3468:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2138  0141  1683               	bsf	3,5	;RP0=1, select bank1
  2139  0142  1303               	bcf	3,6	;RP1=0, select bank1
  2140  0143  084B               	movf	(sprintf@fval+3)^(0+128),w
  2141  0144  00F3               	movwf	___flneg@f1+3
  2142  0145  084A               	movf	(sprintf@fval+2)^(0+128),w
  2143  0146  00F2               	movwf	___flneg@f1+2
  2144  0147  0849               	movf	(sprintf@fval+1)^(0+128),w
  2145  0148  00F1               	movwf	___flneg@f1+1
  2146  0149  0848               	movf	sprintf@fval^(0+128),w
  2147  014A  00F0               	movwf	___flneg@f1
  2148  014B  160A  158A  20A9  120A  118A  	fcall	___flneg
  2149  0150  0873               	movf	?___flneg+3,w
  2150  0151  1683               	bsf	3,5	;RP0=1, select bank1
  2151  0152  1303               	bcf	3,6	;RP1=0, select bank1
  2152  0153  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2153  0154  0872               	movf	?___flneg+2,w
  2154  0155  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2155  0156  0871               	movf	?___flneg+1,w
  2156  0157  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2157  0158  0870               	movf	?___flneg,w
  2158  0159  00C8               	movwf	sprintf@fval^(0+128)
  2159  015A                     l3470:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2162  015A  3003               	movlw	3
  2163  015B  04BB               	iorwf	sprintf@flag^(0+128),f
  2164  015C  3000               	movlw	0
  2165  015D  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2166  015E                     l3472:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2169  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2170  015F  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0160  01BD               	clrf	sprintf@eexp^(0+128)
  2172  0161  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2173  0162                     l3474:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2176  0162  084B               	movf	(sprintf@fval+3)^(0+128),w
  2177  0163  00F3               	movwf	___fleq@ff1+3
  2178  0164  084A               	movf	(sprintf@fval+2)^(0+128),w
  2179  0165  00F2               	movwf	___fleq@ff1+2
  2180  0166  0849               	movf	(sprintf@fval+1)^(0+128),w
  2181  0167  00F1               	movwf	___fleq@ff1+1
  2182  0168  0848               	movf	sprintf@fval^(0+128),w
  2183  0169  00F0               	movwf	___fleq@ff1
  2184  016A  3000               	movlw	0
  2185  016B  00F7               	movwf	___fleq@ff2+3
  2186  016C  3000               	movlw	0
  2187  016D  00F6               	movwf	___fleq@ff2+2
  2188  016E  3000               	movlw	0
  2189  016F  00F5               	movwf	___fleq@ff2+1
  2190  0170  3000               	movlw	0
  2191  0171  00F4               	movwf	___fleq@ff2
  2192  0172  160A  158A  22FF  120A  118A  	fcall	___fleq
  2193  0177  1803               	btfsc	3,0
  2194  0178  297A               	goto	u5571
  2195  0179  297B               	goto	u5570
  2196  017A                     u5571:
  2197  017A  2A6B               	goto	l3500
  2198  017B                     u5570:
  2199  017B                     l3476:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2202  017B  1003               	clrc
  2203  017C  1683               	bsf	3,5	;RP0=1, select bank1
  2204  017D  1303               	bcf	3,6	;RP1=0, select bank1
  2205  017E  0D4A               	rlf	(sprintf@fval+2)^(0+128),w
  2206  017F  0D4B               	rlf	(sprintf@fval+3)^(0+128),w
  2207  0180  3E82               	addlw	130
  2208  0181  00BD               	movwf	sprintf@eexp^(0+128)
  2209  0182  30FF               	movlw	255
  2210  0183  1803               	skipnc
  2211  0184  3000               	movlw	0
  2212  0185  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2213  0186                     l3478:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2216  0186  30FF               	movlw	255
  2217  0187  07BD               	addwf	sprintf@eexp^(0+128),f
  2218  0188  1803               	skipnc
  2219  0189  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2220  018A  30FF               	movlw	255
  2221  018B  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2222  018C                     l3480:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2225  018C  3003               	movlw	3
  2226  018D  00F0               	movwf	___wmul@multiplier
  2227  018E  3000               	movlw	0
  2228  018F  00F1               	movwf	___wmul@multiplier+1
  2229  0190  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2230  0191  00F3               	movwf	___wmul@multiplicand+1
  2231  0192  083D               	movf	sprintf@eexp^(0+128),w
  2232  0193  00F2               	movwf	___wmul@multiplicand
  2233  0194  160A  158A  2115  120A  118A  	fcall	___wmul
  2234  0199  0871               	movf	?___wmul+1,w
  2235  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2236  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2237  019C  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2238  019D  0870               	movf	?___wmul,w
  2239  019E  00BD               	movwf	sprintf@eexp^(0+128)
  2240  019F                     l3482:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2243  019F  300A               	movlw	10
  2244  01A0  00F7               	movwf	___awdiv@divisor
  2245  01A1  3000               	movlw	0
  2246  01A2  00F8               	movwf	___awdiv@divisor+1
  2247  01A3  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2248  01A4  00FA               	movwf	___awdiv@dividend+1
  2249  01A5  083D               	movf	sprintf@eexp^(0+128),w
  2250  01A6  00F9               	movwf	___awdiv@dividend
  2251  01A7  120A  118A  2004  120A  118A  	fcall	___awdiv
  2252  01AC  0878               	movf	?___awdiv+1,w
  2253  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2254  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2255  01AF  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2256  01B0  0877               	movf	?___awdiv,w
  2257  01B1  00BD               	movwf	sprintf@eexp^(0+128)
  2258  01B2                     l3484:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2261  01B2  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2262  01B3  29B5               	goto	u5581
  2263  01B4  29B6               	goto	u5580
  2264  01B5                     u5581:
  2265  01B5  29BC               	goto	l3488
  2266  01B6                     u5580:
  2267  01B6                     l3486:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2270  01B6  30FF               	movlw	255
  2271  01B7  07BD               	addwf	sprintf@eexp^(0+128),f
  2272  01B8  1803               	skipnc
  2273  01B9  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2274  01BA  30FF               	movlw	255
  2275  01BB  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2276  01BC                     l3488:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2279  01BC  033D               	decf	sprintf@eexp^(0+128),w
  2280  01BD  3AFF               	xorlw	255
  2281  01BE  120A  158A  2140  120A  118A  	fcall	_scale
  2282  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2283  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2284  01C5  0841               	movf	?_scale+3,w
  2285  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2286  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2287  01C8  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2288  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2289  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2290  01CB  0840               	movf	?_scale+2,w
  2291  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2292  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2293  01CE  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2294  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2295  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2296  01D1  083F               	movf	?_scale+1,w
  2297  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2298  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2299  01D4  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2300  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2301  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2302  01D7  083E               	movf	?_scale,w
  2303  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2304  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2305  01DA  00BF               	movwf	sprintf@tmpval^(0+128)
  2306  01DB                     l3490:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2309  01DB  084B               	movf	(sprintf@fval+3)^(0+128),w
  2310  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2311  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2312  01DE  00A7               	movwf	___flmul@b+3
  2313  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2314  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2315  01E1  084A               	movf	(sprintf@fval+2)^(0+128),w
  2316  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2317  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2318  01E4  00A6               	movwf	___flmul@b+2
  2319  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2320  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2321  01E7  0849               	movf	(sprintf@fval+1)^(0+128),w
  2322  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2323  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2324  01EA  00A5               	movwf	___flmul@b+1
  2325  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2326  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2327  01ED  0848               	movf	sprintf@fval^(0+128),w
  2328  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2329  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2330  01F0  00A4               	movwf	___flmul@b
  2331  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2332  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  2333  01F3  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2334  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2335  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2336  01F6  00AB               	movwf	___flmul@a+3
  2337  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  2338  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  2339  01F9  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2340  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2341  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2342  01FC  00AA               	movwf	___flmul@a+2
  2343  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2344  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2345  01FF  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2346  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0202  00A9               	movwf	___flmul@a+1
  2349  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2350  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2351  0205  083F               	movf	sprintf@tmpval^(0+128),w
  2352  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0208  00A8               	movwf	___flmul@a
  2355  0209  120A  158A  249F  120A  118A  	fcall	___flmul
  2356  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2357  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0210  0827               	movf	?___flmul+3,w
  2359  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2360  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2361  0213  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2362  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2364  0216  0826               	movf	?___flmul+2,w
  2365  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2366  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2367  0219  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2368  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2369  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2370  021C  0825               	movf	?___flmul+1,w
  2371  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2372  021E  1303               	bcf	3,6	;RP1=0, select bank1
  2373  021F  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2374  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0222  0824               	movf	?___flmul,w
  2377  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0224  1303               	bcf	3,6	;RP1=0, select bank1
  2379  0225  00BF               	movwf	sprintf@tmpval^(0+128)
  2380  0226                     l3492:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2383  0226  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2384  0227  00F3               	movwf	___flge@ff1+3
  2385  0228  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2386  0229  00F2               	movwf	___flge@ff1+2
  2387  022A  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2388  022B  00F1               	movwf	___flge@ff1+1
  2389  022C  083F               	movf	sprintf@tmpval^(0+128),w
  2390  022D  00F0               	movwf	___flge@ff1
  2391  022E  303F               	movlw	63
  2392  022F  00F7               	movwf	___flge@ff2+3
  2393  0230  3080               	movlw	128
  2394  0231  00F6               	movwf	___flge@ff2+2
  2395  0232  3000               	movlw	0
  2396  0233  00F5               	movwf	___flge@ff2+1
  2397  0234  3000               	movlw	0
  2398  0235  00F4               	movwf	___flge@ff2
  2399  0236  160A  158A  2503  120A  118A  	fcall	___flge
  2400  023B  1803               	btfsc	3,0
  2401  023C  2A3E               	goto	u5591
  2402  023D  2A3F               	goto	u5590
  2403  023E                     u5591:
  2404  023E  2A48               	goto	l3496
  2405  023F                     u5590:
  2406  023F                     l3494:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2409  023F  30FF               	movlw	255
  2410  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2411  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2412  0242  07BD               	addwf	sprintf@eexp^(0+128),f
  2413  0243  1803               	skipnc
  2414  0244  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2415  0245  30FF               	movlw	255
  2416  0246  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2417  0247  2A6B               	goto	l3500
  2418  0248                     l3496:
  2419  0248  1683               	bsf	3,5	;RP0=1, select bank1
  2420  0249  1303               	bcf	3,6	;RP1=0, select bank1
  2421  024A  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2422  024B  00F3               	movwf	___flge@ff1+3
  2423  024C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2424  024D  00F2               	movwf	___flge@ff1+2
  2425  024E  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2426  024F  00F1               	movwf	___flge@ff1+1
  2427  0250  083F               	movf	sprintf@tmpval^(0+128),w
  2428  0251  00F0               	movwf	___flge@ff1
  2429  0252  3041               	movlw	65
  2430  0253  00F7               	movwf	___flge@ff2+3
  2431  0254  3020               	movlw	32
  2432  0255  00F6               	movwf	___flge@ff2+2
  2433  0256  3000               	movlw	0
  2434  0257  00F5               	movwf	___flge@ff2+1
  2435  0258  3000               	movlw	0
  2436  0259  00F4               	movwf	___flge@ff2
  2437  025A  160A  158A  2503  120A  118A  	fcall	___flge
  2438  025F  1C03               	btfss	3,0
  2439  0260  2A62               	goto	u5601
  2440  0261  2A63               	goto	u5600
  2441  0262                     u5601:
  2442  0262  2A6B               	goto	l3500
  2443  0263                     u5600:
  2444  0263                     l3498:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2447  0263  3001               	movlw	1
  2448  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2450  0266  07BD               	addwf	sprintf@eexp^(0+128),f
  2451  0267  1803               	skipnc
  2452  0268  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2453  0269  3000               	movlw	0
  2454  026A  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2455  026B                     l3500:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2458  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2459  026C  1303               	bcf	3,6	;RP1=0, select bank1
  2460  026D  084D               	movf	(sprintf@prec+1)^(0+128),w
  2461  026E  3A80               	xorlw	128
  2462  026F  00FF               	movwf	btemp+1
  2463  0270  3080               	movlw	128
  2464  0271  027F               	subwf	btemp+1,w
  2465  0272  1D03               	skipz
  2466  0273  2A76               	goto	u5615
  2467  0274  300D               	movlw	13
  2468  0275  024C               	subwf	sprintf@prec^(0+128),w
  2469  0276                     u5615:
  2470  0276  1803               	skipnc
  2471  0277  2A79               	goto	u5611
  2472  0278  2A7A               	goto	u5610
  2473  0279                     u5611:
  2474  0279  2AC1               	goto	l3504
  2475  027A                     u5610:
  2476  027A                     l3502:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2479  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2480  027B  1303               	bcf	3,6	;RP1=0, select bank1
  2481  027C  084C               	movf	sprintf@prec^(0+128),w
  2482  027D  160A  118A  236D  120A  118A  	fcall	_fround
  2483  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0284  0841               	movf	?_fround+3,w
  2486  0285  00DB               	movwf	___fladd@b+3
  2487  0286  0840               	movf	?_fround+2,w
  2488  0287  00DA               	movwf	___fladd@b+2
  2489  0288  083F               	movf	?_fround+1,w
  2490  0289  00D9               	movwf	___fladd@b+1
  2491  028A  083E               	movf	?_fround,w
  2492  028B  00D8               	movwf	___fladd@b
  2493  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2494  028D  1303               	bcf	3,6	;RP1=0, select bank1
  2495  028E  084B               	movf	(sprintf@fval+3)^(0+128),w
  2496  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0291  00DF               	movwf	___fladd@a+3
  2499  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0293  1303               	bcf	3,6	;RP1=0, select bank1
  2501  0294  084A               	movf	(sprintf@fval+2)^(0+128),w
  2502  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0297  00DE               	movwf	___fladd@a+2
  2505  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2506  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2507  029A  0849               	movf	(sprintf@fval+1)^(0+128),w
  2508  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2509  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2510  029D  00DD               	movwf	___fladd@a+1
  2511  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2512  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2513  02A0  0848               	movf	sprintf@fval^(0+128),w
  2514  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2515  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2516  02A3  00DC               	movwf	___fladd@a
  2517  02A4  160A  118A  2578  120A  118A  	fcall	___fladd
  2518  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2519  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2520  02AB  085B               	movf	?___fladd+3,w
  2521  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2522  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2523  02AE  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2524  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2525  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2526  02B1  085A               	movf	?___fladd+2,w
  2527  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2528  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2529  02B4  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2530  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2531  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2532  02B7  0859               	movf	?___fladd+1,w
  2533  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2534  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2535  02BA  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2536  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2537  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2538  02BD  0858               	movf	?___fladd,w
  2539  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2540  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2541  02C0  00C8               	movwf	sprintf@fval^(0+128)
  2542  02C1                     l3504:
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2545  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2546  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2547  02C3  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2548  02C4  3A80               	xorlw	128
  2549  02C5  00FF               	movwf	btemp+1
  2550  02C6  3080               	movlw	128
  2551  02C7  027F               	subwf	btemp+1,w
  2552  02C8  1D03               	skipz
  2553  02C9  2ACC               	goto	u5625
  2554  02CA  300A               	movlw	10
  2555  02CB  023D               	subwf	sprintf@eexp^(0+128),w
  2556  02CC                     u5625:
  2557  02CC  1803               	skipnc
  2558  02CD  2ACF               	goto	u5621
  2559  02CE  2AD0               	goto	u5620
  2560  02CF                     u5621:
  2561  02CF  2B21               	goto	l3512
  2562  02D0                     u5620:
  2563  02D0                     l3506:
  2564  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2565  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2566  02D2  084B               	movf	(sprintf@fval+3)^(0+128),w
  2567  02D3  00F3               	movwf	___fleq@ff1+3
  2568  02D4  084A               	movf	(sprintf@fval+2)^(0+128),w
  2569  02D5  00F2               	movwf	___fleq@ff1+2
  2570  02D6  0849               	movf	(sprintf@fval+1)^(0+128),w
  2571  02D7  00F1               	movwf	___fleq@ff1+1
  2572  02D8  0848               	movf	sprintf@fval^(0+128),w
  2573  02D9  00F0               	movwf	___fleq@ff1
  2574  02DA  3000               	movlw	0
  2575  02DB  00F7               	movwf	___fleq@ff2+3
  2576  02DC  3000               	movlw	0
  2577  02DD  00F6               	movwf	___fleq@ff2+2
  2578  02DE  3000               	movlw	0
  2579  02DF  00F5               	movwf	___fleq@ff2+1
  2580  02E0  3000               	movlw	0
  2581  02E1  00F4               	movwf	___fleq@ff2
  2582  02E2  160A  158A  22FF  120A  118A  	fcall	___fleq
  2583  02E7  1803               	btfsc	3,0
  2584  02E8  2AEA               	goto	u5631
  2585  02E9  2AEB               	goto	u5630
  2586  02EA                     u5631:
  2587  02EA  2B93               	goto	l3526
  2588  02EB                     u5630:
  2589  02EB                     l3508:
  2590  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2591  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2592  02ED  084B               	movf	(sprintf@fval+3)^(0+128),w
  2593  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2594  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2595  02F0  00D4               	movwf	___fltol@f1+3
  2596  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2597  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2598  02F3  084A               	movf	(sprintf@fval+2)^(0+128),w
  2599  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2600  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2601  02F6  00D3               	movwf	___fltol@f1+2
  2602  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2603  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2604  02F9  0849               	movf	(sprintf@fval+1)^(0+128),w
  2605  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2606  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2607  02FC  00D2               	movwf	___fltol@f1+1
  2608  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2609  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2610  02FF  0848               	movf	sprintf@fval^(0+128),w
  2611  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0302  00D1               	movwf	___fltol@f1
  2614  0303  120A  158A  20C4  120A  118A  	fcall	___fltol
  2615  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2617  030A  0854               	movf	?___fltol+3,w
  2618  030B  0453               	iorwf	?___fltol+2,w
  2619  030C  0452               	iorwf	?___fltol+1,w
  2620  030D  0451               	iorwf	?___fltol,w
  2621  030E  1D03               	skipz
  2622  030F  2B11               	goto	u5641
  2623  0310  2B12               	goto	u5640
  2624  0311                     u5641:
  2625  0311  2B93               	goto	l3526
  2626  0312                     u5640:
  2627  0312                     l3510:
  2628  0312  1683               	bsf	3,5	;RP0=1, select bank1
  2629  0313  1303               	bcf	3,6	;RP1=0, select bank1
  2630  0314  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2631  0315  3A80               	xorlw	128
  2632  0316  00FF               	movwf	btemp+1
  2633  0317  3080               	movlw	128
  2634  0318  027F               	subwf	btemp+1,w
  2635  0319  1D03               	skipz
  2636  031A  2B1D               	goto	u5655
  2637  031B  3002               	movlw	2
  2638  031C  023D               	subwf	sprintf@eexp^(0+128),w
  2639  031D                     u5655:
  2640  031D  1C03               	skipc
  2641  031E  2B20               	goto	u5651
  2642  031F  2B21               	goto	u5650
  2643  0320                     u5651:
  2644  0320  2B93               	goto	l3526
  2645  0321                     u5650:
  2646  0321                     l3512:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2649  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2650  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0323  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2652  0324  00F3               	movwf	___flge@ff1+3
  2653  0325  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2654  0326  00F2               	movwf	___flge@ff1+2
  2655  0327  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2656  0328  00F1               	movwf	___flge@ff1+1
  2657  0329  083F               	movf	sprintf@tmpval^(0+128),w
  2658  032A  00F0               	movwf	___flge@ff1
  2659  032B  3040               	movlw	64
  2660  032C  00F7               	movwf	___flge@ff2+3
  2661  032D  3089               	movlw	137
  2662  032E  00F6               	movwf	___flge@ff2+2
  2663  032F  3070               	movlw	112
  2664  0330  00F5               	movwf	___flge@ff2+1
  2665  0331  305F               	movlw	95
  2666  0332  00F4               	movwf	___flge@ff2
  2667  0333  160A  158A  2503  120A  118A  	fcall	___flge
  2668  0338  1803               	btfsc	3,0
  2669  0339  2B3B               	goto	u5661
  2670  033A  2B3C               	goto	u5660
  2671  033B                     u5661:
  2672  033B  2B45               	goto	l3516
  2673  033C                     u5660:
  2674  033C                     l3514:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2677  033C  30F7               	movlw	247
  2678  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2679  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2680  033F  07BD               	addwf	sprintf@eexp^(0+128),f
  2681  0340  1803               	skipnc
  2682  0341  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2683  0342  30FF               	movlw	255
  2684  0343  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2687  0344  2B4D               	goto	l3518
  2688  0345                     l3516:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2691  0345  30F8               	movlw	248
  2692  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2694  0348  07BD               	addwf	sprintf@eexp^(0+128),f
  2695  0349  1803               	skipnc
  2696  034A  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2697  034B  30FF               	movlw	255
  2698  034C  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2699  034D                     l3518:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2702  034D  083D               	movf	sprintf@eexp^(0+128),w
  2703  034E  120A  158A  2140  120A  118A  	fcall	_scale
  2704  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0355  0841               	movf	?_scale+3,w
  2707  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2709  0358  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2710  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2711  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2712  035B  0840               	movf	?_scale+2,w
  2713  035C  1683               	bsf	3,5	;RP0=1, select bank1
  2714  035D  1303               	bcf	3,6	;RP1=0, select bank1
  2715  035E  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2716  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0361  083F               	movf	?_scale+1,w
  2719  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0363  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0364  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2722  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0367  083E               	movf	?_scale,w
  2725  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2726  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2727  036A  00BF               	movwf	sprintf@tmpval^(0+128)
  2728  036B                     l3520:
  2729  036B  084B               	movf	(sprintf@fval+3)^(0+128),w
  2730  036C  00F3               	movwf	__div_to_l_@f1+3
  2731  036D  084A               	movf	(sprintf@fval+2)^(0+128),w
  2732  036E  00F2               	movwf	__div_to_l_@f1+2
  2733  036F  0849               	movf	(sprintf@fval+1)^(0+128),w
  2734  0370  00F1               	movwf	__div_to_l_@f1+1
  2735  0371  0848               	movf	sprintf@fval^(0+128),w
  2736  0372  00F0               	movwf	__div_to_l_@f1
  2737  0373  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2738  0374  00F7               	movwf	__div_to_l_@f2+3
  2739  0375  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2740  0376  00F6               	movwf	__div_to_l_@f2+2
  2741  0377  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2742  0378  00F5               	movwf	__div_to_l_@f2+1
  2743  0379  083F               	movf	sprintf@tmpval^(0+128),w
  2744  037A  00F4               	movwf	__div_to_l_@f2
  2745  037B  160A  118A  20D2  120A  118A  	fcall	__div_to_l_
  2746  0380  0873               	movf	?__div_to_l_+3,w
  2747  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0383  00C6               	movwf	(sprintf@val+3)^(0+128)
  2750  0384  0872               	movf	?__div_to_l_+2,w
  2751  0385  00C5               	movwf	(sprintf@val+2)^(0+128)
  2752  0386  0871               	movf	?__div_to_l_+1,w
  2753  0387  00C4               	movwf	(sprintf@val+1)^(0+128)
  2754  0388  0870               	movf	?__div_to_l_,w
  2755  0389  00C3               	movwf	sprintf@val^(0+128)
  2756  038A                     l3524:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2759  038A  3000               	movlw	0
  2760  038B  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2761  038C  3000               	movlw	0
  2762  038D  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2763  038E  3000               	movlw	0
  2764  038F  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2765  0390  3000               	movlw	0
  2766  0391  00C8               	movwf	sprintf@fval^(0+128)
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2769  0392  2BF9               	goto	l3532
  2770  0393                     l3526:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2773  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2774  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2775  0395  084B               	movf	(sprintf@fval+3)^(0+128),w
  2776  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2778  0398  00D4               	movwf	___fltol@f1+3
  2779  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2780  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2781  039B  084A               	movf	(sprintf@fval+2)^(0+128),w
  2782  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2783  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2784  039E  00D3               	movwf	___fltol@f1+2
  2785  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2786  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2787  03A1  0849               	movf	(sprintf@fval+1)^(0+128),w
  2788  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2789  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2790  03A4  00D2               	movwf	___fltol@f1+1
  2791  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2792  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2793  03A7  0848               	movf	sprintf@fval^(0+128),w
  2794  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2795  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2796  03AA  00D1               	movwf	___fltol@f1
  2797  03AB  120A  158A  20C4  120A  118A  	fcall	___fltol
  2798  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2799  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2800  03B2  0854               	movf	?___fltol+3,w
  2801  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2802  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2803  03B5  00C6               	movwf	(sprintf@val+3)^(0+128)
  2804  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2805  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2806  03B8  0853               	movf	?___fltol+2,w
  2807  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2808  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2809  03BB  00C5               	movwf	(sprintf@val+2)^(0+128)
  2810  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2811  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2812  03BE  0852               	movf	?___fltol+1,w
  2813  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2814  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2815  03C1  00C4               	movwf	(sprintf@val+1)^(0+128)
  2816  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2817  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2818  03C4  0851               	movf	?___fltol,w
  2819  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2820  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2821  03C7  00C3               	movwf	sprintf@val^(0+128)
  2822  03C8                     l3528:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2825  03C8  0846               	movf	(sprintf@val+3)^(0+128),w
  2826  03C9  00F3               	movwf	___xxtofl@val+3
  2827  03CA  0845               	movf	(sprintf@val+2)^(0+128),w
  2828  03CB  00F2               	movwf	___xxtofl@val+2
  2829  03CC  0844               	movf	(sprintf@val+1)^(0+128),w
  2830  03CD  00F1               	movwf	___xxtofl@val+1
  2831  03CE  0843               	movf	sprintf@val^(0+128),w
  2832  03CF  00F0               	movwf	___xxtofl@val
  2833  03D0  3000               	movlw	0
  2834  03D1  160A  158A  25A5  120A  118A  	fcall	___xxtofl
  2835  03D6  0873               	movf	?___xxtofl+3,w
  2836  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2837  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2838  03D9  00A3               	movwf	(___flsub@a+3)^(0+128)
  2839  03DA  0872               	movf	?___xxtofl+2,w
  2840  03DB  00A2               	movwf	(___flsub@a+2)^(0+128)
  2841  03DC  0871               	movf	?___xxtofl+1,w
  2842  03DD  00A1               	movwf	(___flsub@a+1)^(0+128)
  2843  03DE  0870               	movf	?___xxtofl,w
  2844  03DF  00A0               	movwf	___flsub@a^(0+128)
  2845  03E0  084B               	movf	(sprintf@fval+3)^(0+128),w
  2846  03E1  00A7               	movwf	(___flsub@b+3)^(0+128)
  2847  03E2  084A               	movf	(sprintf@fval+2)^(0+128),w
  2848  03E3  00A6               	movwf	(___flsub@b+2)^(0+128)
  2849  03E4  0849               	movf	(sprintf@fval+1)^(0+128),w
  2850  03E5  00A5               	movwf	(___flsub@b+1)^(0+128)
  2851  03E6  0848               	movf	sprintf@fval^(0+128),w
  2852  03E7  00A4               	movwf	___flsub@b^(0+128)
  2853  03E8  160A  158A  234D  120A  118A  	fcall	___flsub
  2854  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2855  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2856  03EF  0823               	movf	(?___flsub+3)^(0+128),w
  2857  03F0  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2858  03F1  0822               	movf	(?___flsub+2)^(0+128),w
  2859  03F2  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2860  03F3  0821               	movf	(?___flsub+1)^(0+128),w
  2861  03F4  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2862  03F5  0820               	movf	?___flsub^(0+128),w
  2863  03F6  00C8               	movwf	sprintf@fval^(0+128)
  2864  03F7                     l3530:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2867  03F7  01BD               	clrf	sprintf@eexp^(0+128)
  2868  03F8  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2869  03F9                     l3532:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2872  03F9  01CE               	clrf	sprintf@c^(0+128)
  2873  03FA  0ACE               	incf	sprintf@c^(0+128),f
  2874  03FB                     l3538:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2877  03FB  084E               	movf	sprintf@c^(0+128),w
  2878  03FC  00B1               	movwf	??_sprintf^(0+128)
  2879  03FD  3001               	movlw	1
  2880  03FE                     u5675:
  2881  03FE  1003               	clrc
  2882  03FF  0DB1               	rlf	??_sprintf^(0+128),f
  2883  0400  3EFF               	addlw	-1
  2884  0401  1D03               	skipz
  2885  0402  2BFE               	goto	u5675
  2886  0403  1003               	clrc
  2887  0404  0D31               	rlf	??_sprintf^(0+128),w
  2888  0405  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2889  0406  0084               	movwf	4
  2890  0407  120A  158A  200A  120A  118A  	fcall	stringdir
  2891  040C  00B2               	movwf	(??_sprintf+1)^(0+128)
  2892  040D  120A  158A  200A  120A  118A  	fcall	stringdir
  2893  0412  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  2894  0413  120A  158A  200A  120A  118A  	fcall	stringdir
  2895  0418  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  2896  0419  120A  158A  200A  120A  118A  	fcall	stringdir
  2897  041E  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  2898  041F  0835               	movf	(??_sprintf+4)^(0+128),w
  2899  0420  0246               	subwf	(sprintf@val+3)^(0+128),w
  2900  0421  1D03               	skipz
  2901  0422  2C2D               	goto	u5685
  2902  0423  0834               	movf	(??_sprintf+3)^(0+128),w
  2903  0424  0245               	subwf	(sprintf@val+2)^(0+128),w
  2904  0425  1D03               	skipz
  2905  0426  2C2D               	goto	u5685
  2906  0427  0833               	movf	(??_sprintf+2)^(0+128),w
  2907  0428  0244               	subwf	(sprintf@val+1)^(0+128),w
  2908  0429  1D03               	skipz
  2909  042A  2C2D               	goto	u5685
  2910  042B  0832               	movf	(??_sprintf+1)^(0+128),w
  2911  042C  0243               	subwf	sprintf@val^(0+128),w
  2912  042D                     u5685:
  2913  042D  1803               	skipnc
  2914  042E  2C30               	goto	u5681
  2915  042F  2C31               	goto	u5680
  2916  0430                     u5681:
  2917  0430  2C32               	goto	l3542
  2918  0431                     u5680:
  2919  0431  2C3C               	goto	l3544
  2920  0432                     l3542:
  2921  0432  3001               	movlw	1
  2922  0433  00B1               	movwf	??_sprintf^(0+128)
  2923  0434  0831               	movf	??_sprintf^(0+128),w
  2924  0435  07CE               	addwf	sprintf@c^(0+128),f
  2925  0436  300A               	movlw	10
  2926  0437  064E               	xorwf	sprintf@c^(0+128),w
  2927  0438  1D03               	btfss	3,2
  2928  0439  2C3B               	goto	u5691
  2929  043A  2C3C               	goto	u5690
  2930  043B                     u5691:
  2931  043B  2BFB               	goto	l3538
  2932  043C                     u5690:
  2933  043C                     l3544:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2936  043C  3003               	movlw	3
  2937  043D  053B               	andwf	sprintf@flag^(0+128),w
  2938  043E  00B1               	movwf	??_sprintf^(0+128)
  2939  043F  3000               	movlw	0
  2940  0440  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2941  0441  00B2               	movwf	(??_sprintf+1)^(0+128)
  2942  0442  0831               	movf	??_sprintf^(0+128),w
  2943  0443  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2944  0444  1903               	btfsc	3,2
  2945  0445  2C47               	goto	u5701
  2946  0446  2C48               	goto	u5700
  2947  0447                     u5701:
  2948  0447  2CDA               	goto	l351
  2949  0448                     u5700:
  2950  0448                     l3546:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2953  0448  302D               	movlw	45
  2954  0449  00B1               	movwf	??_sprintf^(0+128)
  2955  044A  0847               	movf	sprintf@sp^(0+128),w
  2956  044B  0084               	movwf	4
  2957  044C  0831               	movf	??_sprintf^(0+128),w
  2958  044D  1383               	bcf	3,7	;select IRP bank0
  2959  044E  0080               	movwf	0
  2960  044F                     l3548:
  2961  044F  3001               	movlw	1
  2962  0450  00B1               	movwf	??_sprintf^(0+128)
  2963  0451  0831               	movf	??_sprintf^(0+128),w
  2964  0452  07C7               	addwf	sprintf@sp^(0+128),f
  2965  0453  2CDA               	goto	l351
  2966  0454                     l3550:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2969  0454  084E               	movf	sprintf@c^(0+128),w
  2970  0455  00B1               	movwf	??_sprintf^(0+128)
  2971  0456  3001               	movlw	1
  2972  0457                     u5715:
  2973  0457  1003               	clrc
  2974  0458  0DB1               	rlf	??_sprintf^(0+128),f
  2975  0459  3EFF               	addlw	-1
  2976  045A  1D03               	skipz
  2977  045B  2C57               	goto	u5715
  2978  045C  1003               	clrc
  2979  045D  0D31               	rlf	??_sprintf^(0+128),w
  2980  045E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2981  045F  0084               	movwf	4
  2982  0460  120A  158A  200A  120A  118A  	fcall	stringdir
  2983  0465  00F0               	movwf	___lldiv@divisor
  2984  0466  120A  158A  200A  120A  118A  	fcall	stringdir
  2985  046B  00F1               	movwf	___lldiv@divisor+1
  2986  046C  120A  158A  200A  120A  118A  	fcall	stringdir
  2987  0471  00F2               	movwf	___lldiv@divisor+2
  2988  0472  120A  158A  200A  120A  118A  	fcall	stringdir
  2989  0477  00F3               	movwf	___lldiv@divisor+3
  2990  0478  0846               	movf	(sprintf@val+3)^(0+128),w
  2991  0479  00F7               	movwf	___lldiv@dividend+3
  2992  047A  0845               	movf	(sprintf@val+2)^(0+128),w
  2993  047B  00F6               	movwf	___lldiv@dividend+2
  2994  047C  0844               	movf	(sprintf@val+1)^(0+128),w
  2995  047D  00F5               	movwf	___lldiv@dividend+1
  2996  047E  0843               	movf	sprintf@val^(0+128),w
  2997  047F  00F4               	movwf	___lldiv@dividend
  2998  0480  160A  158A  249D  120A  118A  	fcall	___lldiv
  2999  0485  0873               	movf	?___lldiv+3,w
  3000  0486  1683               	bsf	3,5	;RP0=1, select bank1
  3001  0487  1303               	bcf	3,6	;RP1=0, select bank1
  3002  0488  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3003  0489  0872               	movf	?___lldiv+2,w
  3004  048A  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3005  048B  0871               	movf	?___lldiv+1,w
  3006  048C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3007  048D  0870               	movf	?___lldiv,w
  3008  048E  00BF               	movwf	sprintf@tmpval^(0+128)
  3009  048F                     l3552:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3012  048F  3000               	movlw	0
  3013  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0492  00A3               	movwf	___llmod@divisor+3
  3016  0493  3000               	movlw	0
  3017  0494  00A2               	movwf	___llmod@divisor+2
  3018  0495  3000               	movlw	0
  3019  0496  00A1               	movwf	___llmod@divisor+1
  3020  0497  300A               	movlw	10
  3021  0498  00A0               	movwf	___llmod@divisor
  3022  0499  1683               	bsf	3,5	;RP0=1, select bank1
  3023  049A  1303               	bcf	3,6	;RP1=0, select bank1
  3024  049B  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3025  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3026  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3027  049E  00A7               	movwf	___llmod@dividend+3
  3028  049F  1683               	bsf	3,5	;RP0=1, select bank1
  3029  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  3030  04A1  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3031  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3032  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3033  04A4  00A6               	movwf	___llmod@dividend+2
  3034  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  3035  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  3036  04A7  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3037  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3038  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3039  04AA  00A5               	movwf	___llmod@dividend+1
  3040  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  3041  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  3042  04AD  083F               	movf	sprintf@tmpval^(0+128),w
  3043  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3044  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3045  04B0  00A4               	movwf	___llmod@dividend
  3046  04B1  160A  158A  23EE  120A  118A  	fcall	___llmod
  3047  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3048  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3049  04B8  0823               	movf	?___llmod+3,w
  3050  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3051  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3052  04BB  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3053  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3054  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3055  04BE  0822               	movf	?___llmod+2,w
  3056  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  3057  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  3058  04C1  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3059  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3060  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3061  04C4  0821               	movf	?___llmod+1,w
  3062  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  3063  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  3064  04C7  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3065  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3066  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3067  04CA  0820               	movf	?___llmod,w
  3068  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3069  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  3070  04CD  00BF               	movwf	sprintf@tmpval^(0+128)
  3071  04CE                     l3554:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3074  04CE  083F               	movf	sprintf@tmpval^(0+128),w
  3075  04CF  3E30               	addlw	48
  3076  04D0  00B1               	movwf	??_sprintf^(0+128)
  3077  04D1  0847               	movf	sprintf@sp^(0+128),w
  3078  04D2  0084               	movwf	4
  3079  04D3  0831               	movf	??_sprintf^(0+128),w
  3080  04D4  1383               	bcf	3,7	;select IRP bank0
  3081  04D5  0080               	movwf	0
  3082  04D6  3001               	movlw	1
  3083  04D7  00B1               	movwf	??_sprintf^(0+128)
  3084  04D8  0831               	movf	??_sprintf^(0+128),w
  3085  04D9  07C7               	addwf	sprintf@sp^(0+128),f
  3086  04DA                     l351:	
  3087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3088                           
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3091  04DA  3001               	movlw	1
  3092  04DB  02CE               	subwf	sprintf@c^(0+128),f
  3093  04DC  0A4E               	incf	sprintf@c^(0+128),w
  3094  04DD  1D03               	btfss	3,2
  3095  04DE  2CE0               	goto	u5721
  3096  04DF  2CE1               	goto	u5720
  3097  04E0                     u5721:
  3098  04E0  2C54               	goto	l3550
  3099  04E1                     u5720:
  3100  04E1  2CF5               	goto	l3562
  3101  04E2                     l3556:
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3104  04E2  3030               	movlw	48
  3105  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  3106  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  3107  04E5  00B1               	movwf	??_sprintf^(0+128)
  3108  04E6  0847               	movf	sprintf@sp^(0+128),w
  3109  04E7  0084               	movwf	4
  3110  04E8  0831               	movf	??_sprintf^(0+128),w
  3111  04E9  1383               	bcf	3,7	;select IRP bank0
  3112  04EA  0080               	movwf	0
  3113  04EB                     l3558:
  3114  04EB  3001               	movlw	1
  3115  04EC  00B1               	movwf	??_sprintf^(0+128)
  3116  04ED  0831               	movf	??_sprintf^(0+128),w
  3117  04EE  07C7               	addwf	sprintf@sp^(0+128),f
  3118  04EF                     l3560:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3121  04EF  30FF               	movlw	255
  3122  04F0  07BD               	addwf	sprintf@eexp^(0+128),f
  3123  04F1  1803               	skipnc
  3124  04F2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3125  04F3  30FF               	movlw	255
  3126  04F4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3127  04F5                     l3562:
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3130  04F5  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3131  04F6  3A80               	xorlw	128
  3132  04F7  00FF               	movwf	btemp+1
  3133  04F8  3080               	movlw	128
  3134  04F9  027F               	subwf	btemp+1,w
  3135  04FA  1D03               	skipz
  3136  04FB  2CFE               	goto	u5735
  3137  04FC  3001               	movlw	1
  3138  04FD  023D               	subwf	sprintf@eexp^(0+128),w
  3139  04FE                     u5735:
  3140  04FE  1803               	skipnc
  3141  04FF  2D01               	goto	u5731
  3142  0500  2D02               	goto	u5730
  3143  0501                     u5731:
  3144  0501  2CE2               	goto	l3556
  3145  0502                     u5730:
  3146  0502                     l3564:
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3149  0502  1683               	bsf	3,5	;RP0=1, select bank1
  3150  0503  1303               	bcf	3,6	;RP1=0, select bank1
  3151  0504  084D               	movf	(sprintf@prec+1)^(0+128),w
  3152  0505  3A80               	xorlw	128
  3153  0506  00FF               	movwf	btemp+1
  3154  0507  3080               	movlw	128
  3155  0508  027F               	subwf	btemp+1,w
  3156  0509  1D03               	skipz
  3157  050A  2D0D               	goto	u5745
  3158  050B  3009               	movlw	9
  3159  050C  024C               	subwf	sprintf@prec^(0+128),w
  3160  050D                     u5745:
  3161  050D  1C03               	skipc
  3162  050E  2D10               	goto	u5741
  3163  050F  2D11               	goto	u5740
  3164  0510                     u5741:
  3165  0510  2D18               	goto	l3568
  3166  0511                     u5740:
  3167  0511                     l3566:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3170  0511  3008               	movlw	8
  3171  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0513  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0514  00B1               	movwf	??_sprintf^(0+128)
  3174  0515  0831               	movf	??_sprintf^(0+128),w
  3175  0516  00CE               	movwf	sprintf@c^(0+128)
  3176  0517  2D1E               	goto	l358
  3177  0518                     l3568:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3180  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3181  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3182  051A  084C               	movf	sprintf@prec^(0+128),w
  3183  051B  00B1               	movwf	??_sprintf^(0+128)
  3184  051C  0831               	movf	??_sprintf^(0+128),w
  3185  051D  00CE               	movwf	sprintf@c^(0+128)
  3186  051E                     l358:
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3189  051E  084E               	movf	sprintf@c^(0+128),w
  3190  051F  00B1               	movwf	??_sprintf^(0+128)
  3191  0520  01B2               	clrf	(??_sprintf^(0+128)+1)
  3192  0521  0831               	movf	??_sprintf^(0+128),w
  3193  0522  02CC               	subwf	sprintf@prec^(0+128),f
  3194  0523  0832               	movf	(??_sprintf+1)^(0+128),w
  3195  0524  1C03               	skipc
  3196  0525  03CD               	decf	(sprintf@prec+1)^(0+128),f
  3197  0526  02CD               	subwf	(sprintf@prec+1)^(0+128),f
  3198  0527                     l3570:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3201  0527  084E               	movf	sprintf@c^(0+128),w
  3202  0528  1903               	btfsc	3,2
  3203  0529  2D2B               	goto	u5751
  3204  052A  2D2C               	goto	u5750
  3205  052B                     u5751:
  3206  052B  2D37               	goto	l3576
  3207  052C                     u5750:
  3208  052C                     l3572:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3211  052C  302E               	movlw	46
  3212  052D  00B1               	movwf	??_sprintf^(0+128)
  3213  052E  0847               	movf	sprintf@sp^(0+128),w
  3214  052F  0084               	movwf	4
  3215  0530  0831               	movf	??_sprintf^(0+128),w
  3216  0531  1383               	bcf	3,7	;select IRP bank0
  3217  0532  0080               	movwf	0
  3218  0533                     l3574:
  3219  0533  3001               	movlw	1
  3220  0534  00B1               	movwf	??_sprintf^(0+128)
  3221  0535  0831               	movf	??_sprintf^(0+128),w
  3222  0536  07C7               	addwf	sprintf@sp^(0+128),f
  3223  0537                     l3576:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3226  0537  084E               	movf	sprintf@c^(0+128),w
  3227  0538  120A  158A  2140  120A  118A  	fcall	_scale
  3228  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3229  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3230  053F  0841               	movf	?_scale+3,w
  3231  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3233  0542  00B9               	movwf	(_sprintf$960+3)^(0+128)
  3234  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0545  0840               	movf	?_scale+2,w
  3237  0546  1683               	bsf	3,5	;RP0=1, select bank1
  3238  0547  1303               	bcf	3,6	;RP1=0, select bank1
  3239  0548  00B8               	movwf	(_sprintf$960+2)^(0+128)
  3240  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3241  054A  1303               	bcf	3,6	;RP1=0, select bank0
  3242  054B  083F               	movf	?_scale+1,w
  3243  054C  1683               	bsf	3,5	;RP0=1, select bank1
  3244  054D  1303               	bcf	3,6	;RP1=0, select bank1
  3245  054E  00B7               	movwf	(_sprintf$960+1)^(0+128)
  3246  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0551  083E               	movf	?_scale,w
  3249  0552  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0553  1303               	bcf	3,6	;RP1=0, select bank1
  3251  0554  00B6               	movwf	_sprintf$960^(0+128)
  3252  0555                     l3578:
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3255  0555  0839               	movf	(_sprintf$960+3)^(0+128),w
  3256  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0558  00AB               	movwf	___flmul@a+3
  3259  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3260  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3261  055B  0838               	movf	(_sprintf$960+2)^(0+128),w
  3262  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3263  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3264  055E  00AA               	movwf	___flmul@a+2
  3265  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3267  0561  0837               	movf	(_sprintf$960+1)^(0+128),w
  3268  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0564  00A9               	movwf	___flmul@a+1
  3271  0565  1683               	bsf	3,5	;RP0=1, select bank1
  3272  0566  1303               	bcf	3,6	;RP1=0, select bank1
  3273  0567  0836               	movf	_sprintf$960^(0+128),w
  3274  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3276  056A  00A8               	movwf	___flmul@a
  3277  056B  1683               	bsf	3,5	;RP0=1, select bank1
  3278  056C  1303               	bcf	3,6	;RP1=0, select bank1
  3279  056D  084B               	movf	(sprintf@fval+3)^(0+128),w
  3280  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3281  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0570  00A7               	movwf	___flmul@b+3
  3283  0571  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0572  1303               	bcf	3,6	;RP1=0, select bank1
  3285  0573  084A               	movf	(sprintf@fval+2)^(0+128),w
  3286  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0576  00A6               	movwf	___flmul@b+2
  3289  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3290  0578  1303               	bcf	3,6	;RP1=0, select bank1
  3291  0579  0849               	movf	(sprintf@fval+1)^(0+128),w
  3292  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3293  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3294  057C  00A5               	movwf	___flmul@b+1
  3295  057D  1683               	bsf	3,5	;RP0=1, select bank1
  3296  057E  1303               	bcf	3,6	;RP1=0, select bank1
  3297  057F  0848               	movf	sprintf@fval^(0+128),w
  3298  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0582  00A4               	movwf	___flmul@b
  3301  0583  120A  158A  249F  120A  118A  	fcall	___flmul
  3302  0588  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0589  1303               	bcf	3,6	;RP1=0, select bank0
  3304  058A  0827               	movf	?___flmul+3,w
  3305  058B  00D4               	movwf	___fltol@f1+3
  3306  058C  0826               	movf	?___flmul+2,w
  3307  058D  00D3               	movwf	___fltol@f1+2
  3308  058E  0825               	movf	?___flmul+1,w
  3309  058F  00D2               	movwf	___fltol@f1+1
  3310  0590  0824               	movf	?___flmul,w
  3311  0591  00D1               	movwf	___fltol@f1
  3312  0592  120A  158A  20C4  120A  118A  	fcall	___fltol
  3313  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0599  0854               	movf	?___fltol+3,w
  3316  059A  1683               	bsf	3,5	;RP0=1, select bank1
  3317  059B  1303               	bcf	3,6	;RP1=0, select bank1
  3318  059C  00C6               	movwf	(sprintf@val+3)^(0+128)
  3319  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3320  059E  1303               	bcf	3,6	;RP1=0, select bank0
  3321  059F  0853               	movf	?___fltol+2,w
  3322  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3323  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  3324  05A2  00C5               	movwf	(sprintf@val+2)^(0+128)
  3325  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3326  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3327  05A5  0852               	movf	?___fltol+1,w
  3328  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  3329  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  3330  05A8  00C4               	movwf	(sprintf@val+1)^(0+128)
  3331  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3332  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3333  05AB  0851               	movf	?___fltol,w
  3334  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  3335  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  3336  05AE  00C3               	movwf	sprintf@val^(0+128)
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3339  05AF  2E91               	goto	l3588
  3340  05B0                     l3580:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3343  05B0  084E               	movf	sprintf@c^(0+128),w
  3344  05B1  00B1               	movwf	??_sprintf^(0+128)
  3345  05B2  3001               	movlw	1
  3346  05B3                     u5765:
  3347  05B3  1003               	clrc
  3348  05B4  0DB1               	rlf	??_sprintf^(0+128),f
  3349  05B5  3EFF               	addlw	-1
  3350  05B6  1D03               	skipz
  3351  05B7  2DB3               	goto	u5765
  3352  05B8  1003               	clrc
  3353  05B9  0D31               	rlf	??_sprintf^(0+128),w
  3354  05BA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3355  05BB  0084               	movwf	4
  3356  05BC  120A  158A  200A  120A  118A  	fcall	stringdir
  3357  05C1  00F0               	movwf	___lldiv@divisor
  3358  05C2  120A  158A  200A  120A  118A  	fcall	stringdir
  3359  05C7  00F1               	movwf	___lldiv@divisor+1
  3360  05C8  120A  158A  200A  120A  118A  	fcall	stringdir
  3361  05CD  00F2               	movwf	___lldiv@divisor+2
  3362  05CE  120A  158A  200A  120A  118A  	fcall	stringdir
  3363  05D3  00F3               	movwf	___lldiv@divisor+3
  3364  05D4  0846               	movf	(sprintf@val+3)^(0+128),w
  3365  05D5  00F7               	movwf	___lldiv@dividend+3
  3366  05D6  0845               	movf	(sprintf@val+2)^(0+128),w
  3367  05D7  00F6               	movwf	___lldiv@dividend+2
  3368  05D8  0844               	movf	(sprintf@val+1)^(0+128),w
  3369  05D9  00F5               	movwf	___lldiv@dividend+1
  3370  05DA  0843               	movf	sprintf@val^(0+128),w
  3371  05DB  00F4               	movwf	___lldiv@dividend
  3372  05DC  160A  158A  249D  120A  118A  	fcall	___lldiv
  3373  05E1  0873               	movf	?___lldiv+3,w
  3374  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3375  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3376  05E4  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3377  05E5  0872               	movf	?___lldiv+2,w
  3378  05E6  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3379  05E7  0871               	movf	?___lldiv+1,w
  3380  05E8  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3381  05E9  0870               	movf	?___lldiv,w
  3382  05EA  00BF               	movwf	sprintf@tmpval^(0+128)
  3383  05EB                     l3582:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3386  05EB  3000               	movlw	0
  3387  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3388  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3389  05EE  00A3               	movwf	___llmod@divisor+3
  3390  05EF  3000               	movlw	0
  3391  05F0  00A2               	movwf	___llmod@divisor+2
  3392  05F1  3000               	movlw	0
  3393  05F2  00A1               	movwf	___llmod@divisor+1
  3394  05F3  300A               	movlw	10
  3395  05F4  00A0               	movwf	___llmod@divisor
  3396  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3397  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  3398  05F7  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3399  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3400  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3401  05FA  00A7               	movwf	___llmod@dividend+3
  3402  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3403  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3404  05FD  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3405  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3406  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0600  00A6               	movwf	___llmod@dividend+2
  3408  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3409  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3410  0603  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3411  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0606  00A5               	movwf	___llmod@dividend+1
  3414  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3416  0609  083F               	movf	sprintf@tmpval^(0+128),w
  3417  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3418  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3419  060C  00A4               	movwf	___llmod@dividend
  3420  060D  160A  158A  23EE  120A  118A  	fcall	___llmod
  3421  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0614  0823               	movf	?___llmod+3,w
  3424  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3425  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3426  0617  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3427  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3429  061A  0822               	movf	?___llmod+2,w
  3430  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3431  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3432  061D  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3433  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3434  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0620  0821               	movf	?___llmod+1,w
  3436  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3437  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3438  0623  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3439  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0626  0820               	movf	?___llmod,w
  3442  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3443  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3444  0629  00BF               	movwf	sprintf@tmpval^(0+128)
  3445  062A                     l3584:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3448  062A  083F               	movf	sprintf@tmpval^(0+128),w
  3449  062B  3E30               	addlw	48
  3450  062C  00B1               	movwf	??_sprintf^(0+128)
  3451  062D  0847               	movf	sprintf@sp^(0+128),w
  3452  062E  0084               	movwf	4
  3453  062F  0831               	movf	??_sprintf^(0+128),w
  3454  0630  1383               	bcf	3,7	;select IRP bank0
  3455  0631  0080               	movwf	0
  3456  0632  3001               	movlw	1
  3457  0633  00B1               	movwf	??_sprintf^(0+128)
  3458  0634  0831               	movf	??_sprintf^(0+128),w
  3459  0635  07C7               	addwf	sprintf@sp^(0+128),f
  3460  0636                     l3586:
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3463  0636  084E               	movf	sprintf@c^(0+128),w
  3464  0637  00B1               	movwf	??_sprintf^(0+128)
  3465  0638  3001               	movlw	1
  3466  0639                     u5775:
  3467  0639  1003               	clrc
  3468  063A  0DB1               	rlf	??_sprintf^(0+128),f
  3469  063B  3EFF               	addlw	-1
  3470  063C  1D03               	skipz
  3471  063D  2E39               	goto	u5775
  3472  063E  1003               	clrc
  3473  063F  0D31               	rlf	??_sprintf^(0+128),w
  3474  0640  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3475  0641  0084               	movwf	4
  3476  0642  120A  158A  200A  120A  118A  	fcall	stringdir
  3477  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0649  00A0               	movwf	___llmod@divisor
  3480  064A  120A  158A  200A  120A  118A  	fcall	stringdir
  3481  064F  00A1               	movwf	___llmod@divisor+1
  3482  0650  120A  158A  200A  120A  118A  	fcall	stringdir
  3483  0655  00A2               	movwf	___llmod@divisor+2
  3484  0656  120A  158A  200A  120A  118A  	fcall	stringdir
  3485  065B  00A3               	movwf	___llmod@divisor+3
  3486  065C  1683               	bsf	3,5	;RP0=1, select bank1
  3487  065D  1303               	bcf	3,6	;RP1=0, select bank1
  3488  065E  0846               	movf	(sprintf@val+3)^(0+128),w
  3489  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0661  00A7               	movwf	___llmod@dividend+3
  3492  0662  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0663  1303               	bcf	3,6	;RP1=0, select bank1
  3494  0664  0845               	movf	(sprintf@val+2)^(0+128),w
  3495  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3496  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3497  0667  00A6               	movwf	___llmod@dividend+2
  3498  0668  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0669  1303               	bcf	3,6	;RP1=0, select bank1
  3500  066A  0844               	movf	(sprintf@val+1)^(0+128),w
  3501  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3502  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3503  066D  00A5               	movwf	___llmod@dividend+1
  3504  066E  1683               	bsf	3,5	;RP0=1, select bank1
  3505  066F  1303               	bcf	3,6	;RP1=0, select bank1
  3506  0670  0843               	movf	sprintf@val^(0+128),w
  3507  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0672  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0673  00A4               	movwf	___llmod@dividend
  3510  0674  160A  158A  23EE  120A  118A  	fcall	___llmod
  3511  0679  1283               	bcf	3,5	;RP0=0, select bank0
  3512  067A  1303               	bcf	3,6	;RP1=0, select bank0
  3513  067B  0823               	movf	?___llmod+3,w
  3514  067C  1683               	bsf	3,5	;RP0=1, select bank1
  3515  067D  1303               	bcf	3,6	;RP1=0, select bank1
  3516  067E  00C6               	movwf	(sprintf@val+3)^(0+128)
  3517  067F  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0680  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0681  0822               	movf	?___llmod+2,w
  3520  0682  1683               	bsf	3,5	;RP0=1, select bank1
  3521  0683  1303               	bcf	3,6	;RP1=0, select bank1
  3522  0684  00C5               	movwf	(sprintf@val+2)^(0+128)
  3523  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0687  0821               	movf	?___llmod+1,w
  3526  0688  1683               	bsf	3,5	;RP0=1, select bank1
  3527  0689  1303               	bcf	3,6	;RP1=0, select bank1
  3528  068A  00C4               	movwf	(sprintf@val+1)^(0+128)
  3529  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3530  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3531  068D  0820               	movf	?___llmod,w
  3532  068E  1683               	bsf	3,5	;RP0=1, select bank1
  3533  068F  1303               	bcf	3,6	;RP1=0, select bank1
  3534  0690  00C3               	movwf	sprintf@val^(0+128)
  3535  0691                     l3588:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3538  0691  3001               	movlw	1
  3539  0692  02CE               	subwf	sprintf@c^(0+128),f
  3540  0693  0A4E               	incf	sprintf@c^(0+128),w
  3541  0694  1D03               	btfss	3,2
  3542  0695  2E97               	goto	u5781
  3543  0696  2E98               	goto	u5780
  3544  0697                     u5781:
  3545  0697  2DB0               	goto	l3580
  3546  0698                     u5780:
  3547  0698  2EAA               	goto	l3596
  3548  0699                     l3590:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3551  0699  3030               	movlw	48
  3552  069A  00B1               	movwf	??_sprintf^(0+128)
  3553  069B  0847               	movf	sprintf@sp^(0+128),w
  3554  069C  0084               	movwf	4
  3555  069D  0831               	movf	??_sprintf^(0+128),w
  3556  069E  1383               	bcf	3,7	;select IRP bank0
  3557  069F  0080               	movwf	0
  3558  06A0                     l3592:
  3559  06A0  3001               	movlw	1
  3560  06A1  00B1               	movwf	??_sprintf^(0+128)
  3561  06A2  0831               	movf	??_sprintf^(0+128),w
  3562  06A3  07C7               	addwf	sprintf@sp^(0+128),f
  3563  06A4                     l3594:
  3564                           
  3565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3566  06A4  30FF               	movlw	255
  3567  06A5  07CC               	addwf	sprintf@prec^(0+128),f
  3568  06A6  1803               	skipnc
  3569  06A7  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  3570  06A8  30FF               	movlw	255
  3571  06A9  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  3572  06AA                     l3596:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3575  06AA  084C               	movf	sprintf@prec^(0+128),w
  3576  06AB  044D               	iorwf	(sprintf@prec+1)^(0+128),w
  3577  06AC  1D03               	btfss	3,2
  3578  06AD  2EAF               	goto	u5791
  3579  06AE  2EB0               	goto	u5790
  3580  06AF                     u5791:
  3581  06AF  2E99               	goto	l3590
  3582  06B0                     u5790:
  3583  06B0  2FD9               	goto	l3648
  3584  06B1                     l3598:
  3585                           
  3586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3587  06B1  083A               	movf	sprintf@ap^(0+128),w
  3588  06B2  0084               	movwf	4
  3589  06B3  1383               	bcf	3,7	;select IRP bank0
  3590  06B4  0800               	movf	0,w
  3591  06B5  00B1               	movwf	??_sprintf^(0+128)
  3592  06B6  0A84               	incf	4,f
  3593  06B7  0800               	movf	0,w
  3594  06B8  00B2               	movwf	(??_sprintf^(0+128)+1)
  3595  06B9  0831               	movf	??_sprintf^(0+128),w
  3596  06BA  00C3               	movwf	sprintf@val^(0+128)
  3597  06BB  0832               	movf	(??_sprintf+1)^(0+128),w
  3598  06BC  00C4               	movwf	(sprintf@val+1)^(0+128)
  3599  06BD  3000               	movlw	0
  3600  06BE  1BC4               	btfsc	(sprintf@val+1)^(0+128),7
  3601  06BF  30FF               	movlw	255
  3602  06C0  00C5               	movwf	(sprintf@val+2)^(0+128)
  3603  06C1  00C6               	movwf	(sprintf@val+3)^(0+128)
  3604  06C2                     l3600:
  3605  06C2  3002               	movlw	2
  3606  06C3  00B1               	movwf	??_sprintf^(0+128)
  3607  06C4  0831               	movf	??_sprintf^(0+128),w
  3608  06C5  07BA               	addwf	sprintf@ap^(0+128),f
  3609  06C6                     l3602:
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3612  06C6  1FC6               	btfss	(sprintf@val+3)^(0+128),7
  3613  06C7  2EC9               	goto	u5801
  3614  06C8  2ECA               	goto	u5800
  3615  06C9                     u5801:
  3616  06C9  2ED9               	goto	l3608
  3617  06CA                     u5800:
  3618  06CA                     l3604:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3621  06CA  3003               	movlw	3
  3622  06CB  04BB               	iorwf	sprintf@flag^(0+128),f
  3623  06CC  3000               	movlw	0
  3624  06CD  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  3625  06CE                     l3606:
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3628  06CE  09C3               	comf	sprintf@val^(0+128),f
  3629  06CF  09C4               	comf	(sprintf@val+1)^(0+128),f
  3630  06D0  09C5               	comf	(sprintf@val+2)^(0+128),f
  3631  06D1  09C6               	comf	(sprintf@val+3)^(0+128),f
  3632  06D2  0AC3               	incf	sprintf@val^(0+128),f
  3633  06D3  1903               	skipnz
  3634  06D4  0AC4               	incf	(sprintf@val+1)^(0+128),f
  3635  06D5  1903               	skipnz
  3636  06D6  0AC5               	incf	(sprintf@val+2)^(0+128),f
  3637  06D7  1903               	skipnz
  3638  06D8  0AC6               	incf	(sprintf@val+3)^(0+128),f
  3639  06D9                     l3608:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3642  06D9  084C               	movf	sprintf@prec^(0+128),w
  3643  06DA  044D               	iorwf	(sprintf@prec+1)^(0+128),w
  3644  06DB  1D03               	btfss	3,2
  3645  06DC  2EDE               	goto	u5811
  3646  06DD  2EDF               	goto	u5810
  3647  06DE                     u5811:
  3648  06DE  2EED               	goto	l3614
  3649  06DF                     u5810:
  3650  06DF                     l3610:
  3651  06DF  0846               	movf	(sprintf@val+3)^(0+128),w
  3652  06E0  0445               	iorwf	(sprintf@val+2)^(0+128),w
  3653  06E1  0444               	iorwf	(sprintf@val+1)^(0+128),w
  3654  06E2  0443               	iorwf	sprintf@val^(0+128),w
  3655  06E3  1D03               	skipz
  3656  06E4  2EE6               	goto	u5821
  3657  06E5  2EE7               	goto	u5820
  3658  06E6                     u5821:
  3659  06E6  2EED               	goto	l3614
  3660  06E7                     u5820:
  3661  06E7                     l3612:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3664  06E7  3001               	movlw	1
  3665  06E8  07CC               	addwf	sprintf@prec^(0+128),f
  3666  06E9  1803               	skipnc
  3667  06EA  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  3668  06EB  3000               	movlw	0
  3669  06EC  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  3670  06ED                     l3614:
  3671                           
  3672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3673  06ED  01CE               	clrf	sprintf@c^(0+128)
  3674  06EE  0ACE               	incf	sprintf@c^(0+128),f
  3675  06EF                     l3620:
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3678  06EF  084E               	movf	sprintf@c^(0+128),w
  3679  06F0  00B1               	movwf	??_sprintf^(0+128)
  3680  06F1  3001               	movlw	1
  3681  06F2                     u5835:
  3682  06F2  1003               	clrc
  3683  06F3  0DB1               	rlf	??_sprintf^(0+128),f
  3684  06F4  3EFF               	addlw	-1
  3685  06F5  1D03               	skipz
  3686  06F6  2EF2               	goto	u5835
  3687  06F7  1003               	clrc
  3688  06F8  0D31               	rlf	??_sprintf^(0+128),w
  3689  06F9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3690  06FA  0084               	movwf	4
  3691  06FB  120A  158A  200A  120A  118A  	fcall	stringdir
  3692  0700  00B2               	movwf	(??_sprintf+1)^(0+128)
  3693  0701  120A  158A  200A  120A  118A  	fcall	stringdir
  3694  0706  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  3695  0707  120A  158A  200A  120A  118A  	fcall	stringdir
  3696  070C  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  3697  070D  120A  158A  200A  120A  118A  	fcall	stringdir
  3698  0712  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  3699  0713  0835               	movf	(??_sprintf+4)^(0+128),w
  3700  0714  0246               	subwf	(sprintf@val+3)^(0+128),w
  3701  0715  1D03               	skipz
  3702  0716  2F21               	goto	u5845
  3703  0717  0834               	movf	(??_sprintf+3)^(0+128),w
  3704  0718  0245               	subwf	(sprintf@val+2)^(0+128),w
  3705  0719  1D03               	skipz
  3706  071A  2F21               	goto	u5845
  3707  071B  0833               	movf	(??_sprintf+2)^(0+128),w
  3708  071C  0244               	subwf	(sprintf@val+1)^(0+128),w
  3709  071D  1D03               	skipz
  3710  071E  2F21               	goto	u5845
  3711  071F  0832               	movf	(??_sprintf+1)^(0+128),w
  3712  0720  0243               	subwf	sprintf@val^(0+128),w
  3713  0721                     u5845:
  3714  0721  1803               	skipnc
  3715  0722  2F24               	goto	u5841
  3716  0723  2F25               	goto	u5840
  3717  0724                     u5841:
  3718  0724  2F26               	goto	l3624
  3719  0725                     u5840:
  3720  0725  2F30               	goto	l3626
  3721  0726                     l3624:
  3722  0726  3001               	movlw	1
  3723  0727  00B1               	movwf	??_sprintf^(0+128)
  3724  0728  0831               	movf	??_sprintf^(0+128),w
  3725  0729  07CE               	addwf	sprintf@c^(0+128),f
  3726  072A  300A               	movlw	10
  3727  072B  064E               	xorwf	sprintf@c^(0+128),w
  3728  072C  1D03               	btfss	3,2
  3729  072D  2F2F               	goto	u5851
  3730  072E  2F30               	goto	u5850
  3731  072F                     u5851:
  3732  072F  2EEF               	goto	l3620
  3733  0730                     u5850:
  3734  0730                     l3626:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3737  0730  084D               	movf	(sprintf@prec+1)^(0+128),w
  3738  0731  3A80               	xorlw	128
  3739  0732  3C80               	sublw	128
  3740  0733  1D03               	skipz
  3741  0734  2F37               	goto	u5865
  3742  0735  084C               	movf	sprintf@prec^(0+128),w
  3743  0736  024E               	subwf	sprintf@c^(0+128),w
  3744  0737                     u5865:
  3745  0737  1803               	skipnc
  3746  0738  2F3A               	goto	u5861
  3747  0739  2F3B               	goto	u5860
  3748  073A                     u5861:
  3749  073A  2F3C               	goto	l3630
  3750  073B                     u5860:
  3751  073B                     l3628:
  3752  073B  2F54               	goto	l3634
  3753  073C                     l3630:
  3754  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3755  073D  1303               	bcf	3,6	;RP1=0, select bank1
  3756  073E  084D               	movf	(sprintf@prec+1)^(0+128),w
  3757  073F  3A80               	xorlw	128
  3758  0740  00B1               	movwf	??_sprintf^(0+128)
  3759  0741  3080               	movlw	128
  3760  0742  0231               	subwf	??_sprintf^(0+128),w
  3761  0743  1D03               	skipz
  3762  0744  2F47               	goto	u5875
  3763  0745  084E               	movf	sprintf@c^(0+128),w
  3764  0746  024C               	subwf	sprintf@prec^(0+128),w
  3765  0747                     u5875:
  3766  0747  1803               	skipnc
  3767  0748  2F4A               	goto	u5871
  3768  0749  2F4B               	goto	u5870
  3769  074A                     u5871:
  3770  074A  2F54               	goto	l3634
  3771  074B                     u5870:
  3772  074B                     l3632:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3775  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3776  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3777  074D  084E               	movf	sprintf@c^(0+128),w
  3778  074E  00B1               	movwf	??_sprintf^(0+128)
  3779  074F  01B2               	clrf	(??_sprintf^(0+128)+1)
  3780  0750  0831               	movf	??_sprintf^(0+128),w
  3781  0751  00CC               	movwf	sprintf@prec^(0+128)
  3782  0752  0832               	movf	(??_sprintf+1)^(0+128),w
  3783  0753  00CD               	movwf	(sprintf@prec+1)^(0+128)
  3784  0754                     l3634:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3787  0754  3003               	movlw	3
  3788  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3789  0756  1303               	bcf	3,6	;RP1=0, select bank1
  3790  0757  053B               	andwf	sprintf@flag^(0+128),w
  3791  0758  00B1               	movwf	??_sprintf^(0+128)
  3792  0759  3000               	movlw	0
  3793  075A  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3794  075B  00B2               	movwf	(??_sprintf+1)^(0+128)
  3795  075C  0831               	movf	??_sprintf^(0+128),w
  3796  075D  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3797  075E  1903               	btfsc	3,2
  3798  075F  2F61               	goto	u5881
  3799  0760  2F62               	goto	u5880
  3800  0761                     u5881:
  3801  0761  2FCB               	goto	l3646
  3802  0762                     u5880:
  3803  0762                     l3636:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3806  0762  302D               	movlw	45
  3807  0763  00B1               	movwf	??_sprintf^(0+128)
  3808  0764  0847               	movf	sprintf@sp^(0+128),w
  3809  0765  0084               	movwf	4
  3810  0766  0831               	movf	??_sprintf^(0+128),w
  3811  0767  1383               	bcf	3,7	;select IRP bank0
  3812  0768  0080               	movwf	0
  3813  0769                     l3638:
  3814  0769  3001               	movlw	1
  3815  076A  00B1               	movwf	??_sprintf^(0+128)
  3816  076B  0831               	movf	??_sprintf^(0+128),w
  3817  076C  07C7               	addwf	sprintf@sp^(0+128),f
  3818  076D  2FCB               	goto	l3646
  3819  076E                     l3640:
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3822  076E  3000               	movlw	0
  3823  076F  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0770  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0771  00A3               	movwf	___llmod@divisor+3
  3826  0772  3000               	movlw	0
  3827  0773  00A2               	movwf	___llmod@divisor+2
  3828  0774  3000               	movlw	0
  3829  0775  00A1               	movwf	___llmod@divisor+1
  3830  0776  300A               	movlw	10
  3831  0777  00A0               	movwf	___llmod@divisor
  3832  0778  1683               	bsf	3,5	;RP0=1, select bank1
  3833  0779  1303               	bcf	3,6	;RP1=0, select bank1
  3834  077A  084C               	movf	sprintf@prec^(0+128),w
  3835  077B  00B1               	movwf	??_sprintf^(0+128)
  3836  077C  3001               	movlw	1
  3837  077D                     u5895:
  3838  077D  1003               	clrc
  3839  077E  0DB1               	rlf	??_sprintf^(0+128),f
  3840  077F  3EFF               	addlw	-1
  3841  0780  1D03               	skipz
  3842  0781  2F7D               	goto	u5895
  3843  0782  1003               	clrc
  3844  0783  0D31               	rlf	??_sprintf^(0+128),w
  3845  0784  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3846  0785  0084               	movwf	4
  3847  0786  120A  158A  200A  120A  118A  	fcall	stringdir
  3848  078B  00F0               	movwf	___lldiv@divisor
  3849  078C  120A  158A  200A  120A  118A  	fcall	stringdir
  3850  0791  00F1               	movwf	___lldiv@divisor+1
  3851  0792  120A  158A  200A  120A  118A  	fcall	stringdir
  3852  0797  00F2               	movwf	___lldiv@divisor+2
  3853  0798  120A  158A  200A  120A  118A  	fcall	stringdir
  3854  079D  00F3               	movwf	___lldiv@divisor+3
  3855  079E  0846               	movf	(sprintf@val+3)^(0+128),w
  3856  079F  00F7               	movwf	___lldiv@dividend+3
  3857  07A0  0845               	movf	(sprintf@val+2)^(0+128),w
  3858  07A1  00F6               	movwf	___lldiv@dividend+2
  3859  07A2  0844               	movf	(sprintf@val+1)^(0+128),w
  3860  07A3  00F5               	movwf	___lldiv@dividend+1
  3861  07A4  0843               	movf	sprintf@val^(0+128),w
  3862  07A5  00F4               	movwf	___lldiv@dividend
  3863  07A6  160A  158A  249D  120A  118A  	fcall	___lldiv
  3864  07AB  0873               	movf	?___lldiv+3,w
  3865  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3866  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3867  07AE  00A7               	movwf	___llmod@dividend+3
  3868  07AF  0872               	movf	?___lldiv+2,w
  3869  07B0  00A6               	movwf	___llmod@dividend+2
  3870  07B1  0871               	movf	?___lldiv+1,w
  3871  07B2  00A5               	movwf	___llmod@dividend+1
  3872  07B3  0870               	movf	?___lldiv,w
  3873  07B4  00A4               	movwf	___llmod@dividend
  3874  07B5  160A  158A  23EE  120A  118A  	fcall	___llmod
  3875  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  3876  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  3877  07BC  0820               	movf	?___llmod,w
  3878  07BD  3E30               	addlw	48
  3879  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  3880  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  3881  07C0  00B2               	movwf	(??_sprintf+1)^(0+128)
  3882  07C1  0832               	movf	(??_sprintf+1)^(0+128),w
  3883  07C2  00CE               	movwf	sprintf@c^(0+128)
  3884  07C3                     l3642:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3887  07C3  084E               	movf	sprintf@c^(0+128),w
  3888  07C4  00B1               	movwf	??_sprintf^(0+128)
  3889  07C5  0847               	movf	sprintf@sp^(0+128),w
  3890  07C6  0084               	movwf	4
  3891  07C7  0831               	movf	??_sprintf^(0+128),w
  3892  07C8  1383               	bcf	3,7	;select IRP bank0
  3893  07C9  0080               	movwf	0
  3894  07CA  2F69               	goto	l3638
  3895  07CB                     l3646:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3898  07CB  30FF               	movlw	255
  3899  07CC  07CC               	addwf	sprintf@prec^(0+128),f
  3900  07CD  1803               	skipnc
  3901  07CE  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  3902  07CF  30FF               	movlw	255
  3903  07D0  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  3904  07D1  0A4C               	incf	sprintf@prec^(0+128),w
  3905  07D2  1D03               	skipz
  3906  07D3  2FD8               	goto	u5901
  3907  07D4  0A4D               	incf	(sprintf@prec+1)^(0+128),w
  3908  07D5  1D03               	btfss	3,2
  3909  07D6  2FD8               	goto	u5901
  3910  07D7  2FD9               	goto	u5900
  3911  07D8                     u5901:
  3912  07D8  2F6E               	goto	l3640
  3913  07D9                     u5900:
  3914  07D9                     l3648:
  3915                           
  3916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3917  07D9  3001               	movlw	1
  3918  07DA  07A8               	addwf	sprintf@f^(0+128),f
  3919  07DB  30FF               	movlw	-1
  3920  07DC  0728               	addwf	sprintf@f^(0+128),w
  3921  07DD  0084               	movwf	4
  3922  07DE  120A  158A  200A  120A  118A  	fcall	stringdir
  3923  07E3  00B1               	movwf	??_sprintf^(0+128)
  3924  07E4  0831               	movf	??_sprintf^(0+128),w
  3925  07E5  00CE               	movwf	sprintf@c^(0+128)
  3926  07E6  084E               	movf	sprintf@c^(0+128),w
  3927  07E7  1D03               	btfss	3,2
  3928  07E8  2FEA               	goto	u5911
  3929  07E9  2FEB               	goto	u5910
  3930  07EA                     u5911:
  3931  07EA  2875               	goto	l3424
  3932  07EB                     u5910:
  3933  07EB                     l3650:
  3934                           
  3935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3936  07EB  0847               	movf	sprintf@sp^(0+128),w
  3937  07EC  0084               	movwf	4
  3938  07ED  1383               	bcf	3,7	;select IRP bank0
  3939  07EE  0180               	clrf	0
  3940  07EF                     l379:
  3941  07EF  0008               	return
  3942  07F0                     __end_of_sprintf:
  3943                           
  3944                           	psect	text2
  3945  0940                     __ptext2:	
  3946 ;; *************** function _scale *****************
  3947 ;; Defined at:
  3948 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  scl             1    wreg     char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  scl             1   48[BANK0 ] char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  4   30[BANK0 ] char 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       4       0       0       0
  3963 ;;      Locals:         0       5       0       0       0
  3964 ;;      Temps:          0      10       0       0       0
  3965 ;;      Totals:         0      19       0       0       0
  3966 ;;Total ram usage:       19 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    2
  3969 ;; This function calls:
  3970 ;;		___awdiv
  3971 ;;		___awmod
  3972 ;;		___flmul
  3973 ;; This function is called by:
  3974 ;;		_sprintf
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _scale
  3980  0940                     _scale:
  3981                           
  3982                           ;incstack = 0
  3983                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3984                           ;scale@scl stored from wreg
  3985  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0942  00D0               	movwf	scale@scl
  3988  0943                     l3048:
  3989                           
  3990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3991  0943  1FD0               	btfss	scale@scl,7
  3992  0944  2946               	goto	u4601
  3993  0945  2947               	goto	u4600
  3994  0946                     u4601:
  3995  0946  2AF4               	goto	l3070
  3996  0947                     u4600:
  3997  0947                     l3050:
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4000  0947  09D0               	comf	scale@scl,f
  4001  0948  0AD0               	incf	scale@scl,f
  4002  0949                     l3052:
  4003                           
  4004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4005  0949  0850               	movf	scale@scl,w
  4006  094A  3A80               	xorlw	128
  4007  094B  3E12               	addlw	-238
  4008  094C  1C03               	skipc
  4009  094D  294F               	goto	u4611
  4010  094E  2950               	goto	u4610
  4011  094F                     u4611:
  4012  094F  2A38               	goto	l3060
  4013  0950                     u4610:
  4014  0950                     l3054:
  4015                           
  4016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4017  0950  300A               	movlw	10
  4018  0951  00F7               	movwf	___awdiv@divisor
  4019  0952  3000               	movlw	0
  4020  0953  00F8               	movwf	___awdiv@divisor+1
  4021  0954  0850               	movf	scale@scl,w
  4022  0955  00F2               	movwf	___awmod@dividend
  4023  0956  01F3               	clrf	___awmod@dividend+1
  4024  0957  1BF2               	btfsc	___awmod@dividend,7
  4025  0958  03F3               	decf	___awmod@dividend+1,f
  4026  0959  3064               	movlw	100
  4027  095A  00F0               	movwf	___awmod@divisor
  4028  095B  3000               	movlw	0
  4029  095C  00F1               	movwf	___awmod@divisor+1
  4030  095D  160A  158A  2444  120A  158A  	fcall	___awmod
  4031  0962  0871               	movf	?___awmod+1,w
  4032  0963  00FA               	movwf	___awdiv@dividend+1
  4033  0964  0870               	movf	?___awmod,w
  4034  0965  00F9               	movwf	___awdiv@dividend
  4035  0966  120A  118A  2004  120A  158A  	fcall	___awdiv
  4036  096B  0877               	movf	?___awdiv,w
  4037  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4038  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4039  096E  00C2               	movwf	??_scale
  4040  096F  3001               	movlw	1
  4041  0970                     u4625:
  4042  0970  1003               	clrc
  4043  0971  0DC2               	rlf	??_scale,f
  4044  0972  3EFF               	addlw	-1
  4045  0973  1D03               	skipz
  4046  0974  2970               	goto	u4625
  4047  0975  1003               	clrc
  4048  0976  0D42               	rlf	??_scale,w
  4049  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4050  0978  0084               	movwf	4
  4051  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  4052  097E  00C3               	movwf	??_scale+1
  4053  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  4054  0984  00C4               	movwf	??_scale+2
  4055  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  4056  098A  00C5               	movwf	??_scale+3
  4057  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  4058  0990  00C6               	movwf	??_scale+4
  4059  0991  0846               	movf	??_scale+4,w
  4060  0992  00A7               	movwf	___flmul@b+3
  4061  0993  0845               	movf	??_scale+3,w
  4062  0994  00A6               	movwf	___flmul@b+2
  4063  0995  0844               	movf	??_scale+2,w
  4064  0996  00A5               	movwf	___flmul@b+1
  4065  0997  0843               	movf	??_scale+1,w
  4066  0998  00A4               	movwf	___flmul@b
  4067  0999  3064               	movlw	100
  4068  099A  00F7               	movwf	___awdiv@divisor
  4069  099B  3000               	movlw	0
  4070  099C  00F8               	movwf	___awdiv@divisor+1
  4071  099D  0850               	movf	scale@scl,w
  4072  099E  00F9               	movwf	___awdiv@dividend
  4073  099F  01FA               	clrf	___awdiv@dividend+1
  4074  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4075  09A1  03FA               	decf	___awdiv@dividend+1,f
  4076  09A2  120A  118A  2004  120A  158A  	fcall	___awdiv
  4077  09A7  0877               	movf	?___awdiv,w
  4078  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4079  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4080  09AA  00C7               	movwf	??_scale+5
  4081  09AB  3001               	movlw	1
  4082  09AC                     u4635:
  4083  09AC  1003               	clrc
  4084  09AD  0DC7               	rlf	??_scale+5,f
  4085  09AE  3EFF               	addlw	-1
  4086  09AF  1D03               	skipz
  4087  09B0  29AC               	goto	u4635
  4088  09B1  1003               	clrc
  4089  09B2  0D47               	rlf	??_scale+5,w
  4090  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4091  09B4  0084               	movwf	4
  4092  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4093  09BA  00C8               	movwf	??_scale+6
  4094  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4095  09C0  00C9               	movwf	??_scale+7
  4096  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4097  09C6  00CA               	movwf	??_scale+8
  4098  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4099  09CC  00CB               	movwf	??_scale+9
  4100  09CD  084B               	movf	??_scale+9,w
  4101  09CE  00AB               	movwf	___flmul@a+3
  4102  09CF  084A               	movf	??_scale+8,w
  4103  09D0  00AA               	movwf	___flmul@a+2
  4104  09D1  0849               	movf	??_scale+7,w
  4105  09D2  00A9               	movwf	___flmul@a+1
  4106  09D3  0848               	movf	??_scale+6,w
  4107  09D4  00A8               	movwf	___flmul@a
  4108  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4109  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4110  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4111  09DC  0827               	movf	?___flmul+3,w
  4112  09DD  00CF               	movwf	_scale$959+3
  4113  09DE  0826               	movf	?___flmul+2,w
  4114  09DF  00CE               	movwf	_scale$959+2
  4115  09E0  0825               	movf	?___flmul+1,w
  4116  09E1  00CD               	movwf	_scale$959+1
  4117  09E2  0824               	movf	?___flmul,w
  4118  09E3  00CC               	movwf	_scale$959
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4121  09E4  300A               	movlw	10
  4122  09E5  00F0               	movwf	___awmod@divisor
  4123  09E6  3000               	movlw	0
  4124  09E7  00F1               	movwf	___awmod@divisor+1
  4125  09E8  0850               	movf	scale@scl,w
  4126  09E9  00F2               	movwf	___awmod@dividend
  4127  09EA  01F3               	clrf	___awmod@dividend+1
  4128  09EB  1BF2               	btfsc	___awmod@dividend,7
  4129  09EC  03F3               	decf	___awmod@dividend+1,f
  4130  09ED  160A  158A  2444  120A  158A  	fcall	___awmod
  4131  09F2  0870               	movf	?___awmod,w
  4132  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4133  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4134  09F5  00C2               	movwf	??_scale
  4135  09F6  3001               	movlw	1
  4136  09F7                     u4645:
  4137  09F7  1003               	clrc
  4138  09F8  0DC2               	rlf	??_scale,f
  4139  09F9  3EFF               	addlw	-1
  4140  09FA  1D03               	skipz
  4141  09FB  29F7               	goto	u4645
  4142  09FC  1003               	clrc
  4143  09FD  0D42               	rlf	??_scale,w
  4144  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4145  09FF  0084               	movwf	4
  4146  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4147  0A05  00C3               	movwf	??_scale+1
  4148  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4149  0A0B  00C4               	movwf	??_scale+2
  4150  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4151  0A11  00C5               	movwf	??_scale+3
  4152  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4153  0A17  00C6               	movwf	??_scale+4
  4154  0A18  0846               	movf	??_scale+4,w
  4155  0A19  00A7               	movwf	___flmul@b+3
  4156  0A1A  0845               	movf	??_scale+3,w
  4157  0A1B  00A6               	movwf	___flmul@b+2
  4158  0A1C  0844               	movf	??_scale+2,w
  4159  0A1D  00A5               	movwf	___flmul@b+1
  4160  0A1E  0843               	movf	??_scale+1,w
  4161  0A1F  00A4               	movwf	___flmul@b
  4162  0A20  084F               	movf	_scale$959+3,w
  4163  0A21  00AB               	movwf	___flmul@a+3
  4164  0A22  084E               	movf	_scale$959+2,w
  4165  0A23  00AA               	movwf	___flmul@a+2
  4166  0A24  084D               	movf	_scale$959+1,w
  4167  0A25  00A9               	movwf	___flmul@a+1
  4168  0A26  084C               	movf	_scale$959,w
  4169  0A27  00A8               	movwf	___flmul@a
  4170  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4171  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4173  0A2F  0827               	movf	?___flmul+3,w
  4174  0A30  00C1               	movwf	?_scale+3
  4175  0A31  0826               	movf	?___flmul+2,w
  4176  0A32  00C0               	movwf	?_scale+2
  4177  0A33  0825               	movf	?___flmul+1,w
  4178  0A34  00BF               	movwf	?_scale+1
  4179  0A35  0824               	movf	?___flmul,w
  4180  0A36  00BE               	movwf	?_scale
  4181  0A37  2C9E               	goto	l304
  4182  0A38                     l3060:
  4183  0A38  0850               	movf	scale@scl,w
  4184  0A39  3A80               	xorlw	128
  4185  0A3A  3E75               	addlw	-139
  4186  0A3B  1C03               	skipc
  4187  0A3C  2A3E               	goto	u4651
  4188  0A3D  2A3F               	goto	u4650
  4189  0A3E                     u4651:
  4190  0A3E  2AC7               	goto	l3066
  4191  0A3F                     u4650:
  4192  0A3F                     l3062:
  4193                           
  4194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4195  0A3F  300A               	movlw	10
  4196  0A40  00F0               	movwf	___awmod@divisor
  4197  0A41  3000               	movlw	0
  4198  0A42  00F1               	movwf	___awmod@divisor+1
  4199  0A43  0850               	movf	scale@scl,w
  4200  0A44  00F2               	movwf	___awmod@dividend
  4201  0A45  01F3               	clrf	___awmod@dividend+1
  4202  0A46  1BF2               	btfsc	___awmod@dividend,7
  4203  0A47  03F3               	decf	___awmod@dividend+1,f
  4204  0A48  160A  158A  2444  120A  158A  	fcall	___awmod
  4205  0A4D  0870               	movf	?___awmod,w
  4206  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0A50  00C2               	movwf	??_scale
  4209  0A51  3001               	movlw	1
  4210  0A52                     u4665:
  4211  0A52  1003               	clrc
  4212  0A53  0DC2               	rlf	??_scale,f
  4213  0A54  3EFF               	addlw	-1
  4214  0A55  1D03               	skipz
  4215  0A56  2A52               	goto	u4665
  4216  0A57  1003               	clrc
  4217  0A58  0D42               	rlf	??_scale,w
  4218  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4219  0A5A  0084               	movwf	4
  4220  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4221  0A60  00C3               	movwf	??_scale+1
  4222  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4223  0A66  00C4               	movwf	??_scale+2
  4224  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4225  0A6C  00C5               	movwf	??_scale+3
  4226  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4227  0A72  00C6               	movwf	??_scale+4
  4228  0A73  0846               	movf	??_scale+4,w
  4229  0A74  00A7               	movwf	___flmul@b+3
  4230  0A75  0845               	movf	??_scale+3,w
  4231  0A76  00A6               	movwf	___flmul@b+2
  4232  0A77  0844               	movf	??_scale+2,w
  4233  0A78  00A5               	movwf	___flmul@b+1
  4234  0A79  0843               	movf	??_scale+1,w
  4235  0A7A  00A4               	movwf	___flmul@b
  4236  0A7B  300A               	movlw	10
  4237  0A7C  00F7               	movwf	___awdiv@divisor
  4238  0A7D  3000               	movlw	0
  4239  0A7E  00F8               	movwf	___awdiv@divisor+1
  4240  0A7F  0850               	movf	scale@scl,w
  4241  0A80  00F9               	movwf	___awdiv@dividend
  4242  0A81  01FA               	clrf	___awdiv@dividend+1
  4243  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4244  0A83  03FA               	decf	___awdiv@dividend+1,f
  4245  0A84  120A  118A  2004  120A  158A  	fcall	___awdiv
  4246  0A89  0877               	movf	?___awdiv,w
  4247  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0A8C  00C7               	movwf	??_scale+5
  4250  0A8D  3001               	movlw	1
  4251  0A8E                     u4675:
  4252  0A8E  1003               	clrc
  4253  0A8F  0DC7               	rlf	??_scale+5,f
  4254  0A90  3EFF               	addlw	-1
  4255  0A91  1D03               	skipz
  4256  0A92  2A8E               	goto	u4675
  4257  0A93  1003               	clrc
  4258  0A94  0D47               	rlf	??_scale+5,w
  4259  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4260  0A96  0084               	movwf	4
  4261  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4262  0A9C  00C8               	movwf	??_scale+6
  4263  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4264  0AA2  00C9               	movwf	??_scale+7
  4265  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4266  0AA8  00CA               	movwf	??_scale+8
  4267  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4268  0AAE  00CB               	movwf	??_scale+9
  4269  0AAF  084B               	movf	??_scale+9,w
  4270  0AB0  00AB               	movwf	___flmul@a+3
  4271  0AB1  084A               	movf	??_scale+8,w
  4272  0AB2  00AA               	movwf	___flmul@a+2
  4273  0AB3  0849               	movf	??_scale+7,w
  4274  0AB4  00A9               	movwf	___flmul@a+1
  4275  0AB5  0848               	movf	??_scale+6,w
  4276  0AB6  00A8               	movwf	___flmul@a
  4277  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4278  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0ABE  0827               	movf	?___flmul+3,w
  4281  0ABF  00C1               	movwf	?_scale+3
  4282  0AC0  0826               	movf	?___flmul+2,w
  4283  0AC1  00C0               	movwf	?_scale+2
  4284  0AC2  0825               	movf	?___flmul+1,w
  4285  0AC3  00BF               	movwf	?_scale+1
  4286  0AC4  0824               	movf	?___flmul,w
  4287  0AC5  00BE               	movwf	?_scale
  4288  0AC6  2C9E               	goto	l304
  4289  0AC7                     l3066:
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4292  0AC7  0850               	movf	scale@scl,w
  4293  0AC8  00C2               	movwf	??_scale
  4294  0AC9  3001               	movlw	1
  4295  0ACA                     u4685:
  4296  0ACA  1003               	clrc
  4297  0ACB  0DC2               	rlf	??_scale,f
  4298  0ACC  3EFF               	addlw	-1
  4299  0ACD  1D03               	skipz
  4300  0ACE  2ACA               	goto	u4685
  4301  0ACF  1003               	clrc
  4302  0AD0  0D42               	rlf	??_scale,w
  4303  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4304  0AD2  0084               	movwf	4
  4305  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4306  0AD8  00C3               	movwf	??_scale+1
  4307  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4308  0ADE  00C4               	movwf	??_scale+2
  4309  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4310  0AE4  00C5               	movwf	??_scale+3
  4311  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4312  0AEA  00C6               	movwf	??_scale+4
  4313  0AEB  0846               	movf	??_scale+4,w
  4314  0AEC  00C1               	movwf	?_scale+3
  4315  0AED  0845               	movf	??_scale+3,w
  4316  0AEE  00C0               	movwf	?_scale+2
  4317  0AEF  0844               	movf	??_scale+2,w
  4318  0AF0  00BF               	movwf	?_scale+1
  4319  0AF1  0843               	movf	??_scale+1,w
  4320  0AF2  00BE               	movwf	?_scale
  4321  0AF3  2C9E               	goto	l304
  4322  0AF4                     l3070:
  4323                           
  4324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4325  0AF4  0850               	movf	scale@scl,w
  4326  0AF5  3A80               	xorlw	128
  4327  0AF6  3E12               	addlw	-238
  4328  0AF7  1C03               	skipc
  4329  0AF8  2AFA               	goto	u4691
  4330  0AF9  2AFB               	goto	u4690
  4331  0AFA                     u4691:
  4332  0AFA  2BE3               	goto	l3078
  4333  0AFB                     u4690:
  4334  0AFB                     l3072:
  4335                           
  4336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4337  0AFB  300A               	movlw	10
  4338  0AFC  00F7               	movwf	___awdiv@divisor
  4339  0AFD  3000               	movlw	0
  4340  0AFE  00F8               	movwf	___awdiv@divisor+1
  4341  0AFF  0850               	movf	scale@scl,w
  4342  0B00  00F2               	movwf	___awmod@dividend
  4343  0B01  01F3               	clrf	___awmod@dividend+1
  4344  0B02  1BF2               	btfsc	___awmod@dividend,7
  4345  0B03  03F3               	decf	___awmod@dividend+1,f
  4346  0B04  3064               	movlw	100
  4347  0B05  00F0               	movwf	___awmod@divisor
  4348  0B06  3000               	movlw	0
  4349  0B07  00F1               	movwf	___awmod@divisor+1
  4350  0B08  160A  158A  2444  120A  158A  	fcall	___awmod
  4351  0B0D  0871               	movf	?___awmod+1,w
  4352  0B0E  00FA               	movwf	___awdiv@dividend+1
  4353  0B0F  0870               	movf	?___awmod,w
  4354  0B10  00F9               	movwf	___awdiv@dividend
  4355  0B11  120A  118A  2004  120A  158A  	fcall	___awdiv
  4356  0B16  0877               	movf	?___awdiv,w
  4357  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4358  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4359  0B19  00C2               	movwf	??_scale
  4360  0B1A  3001               	movlw	1
  4361  0B1B                     u4705:
  4362  0B1B  1003               	clrc
  4363  0B1C  0DC2               	rlf	??_scale,f
  4364  0B1D  3EFF               	addlw	-1
  4365  0B1E  1D03               	skipz
  4366  0B1F  2B1B               	goto	u4705
  4367  0B20  1003               	clrc
  4368  0B21  0D42               	rlf	??_scale,w
  4369  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4370  0B23  0084               	movwf	4
  4371  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4372  0B29  00C3               	movwf	??_scale+1
  4373  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4374  0B2F  00C4               	movwf	??_scale+2
  4375  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4376  0B35  00C5               	movwf	??_scale+3
  4377  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4378  0B3B  00C6               	movwf	??_scale+4
  4379  0B3C  0846               	movf	??_scale+4,w
  4380  0B3D  00A7               	movwf	___flmul@b+3
  4381  0B3E  0845               	movf	??_scale+3,w
  4382  0B3F  00A6               	movwf	___flmul@b+2
  4383  0B40  0844               	movf	??_scale+2,w
  4384  0B41  00A5               	movwf	___flmul@b+1
  4385  0B42  0843               	movf	??_scale+1,w
  4386  0B43  00A4               	movwf	___flmul@b
  4387  0B44  3064               	movlw	100
  4388  0B45  00F7               	movwf	___awdiv@divisor
  4389  0B46  3000               	movlw	0
  4390  0B47  00F8               	movwf	___awdiv@divisor+1
  4391  0B48  0850               	movf	scale@scl,w
  4392  0B49  00F9               	movwf	___awdiv@dividend
  4393  0B4A  01FA               	clrf	___awdiv@dividend+1
  4394  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4395  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4396  0B4D  120A  118A  2004  120A  158A  	fcall	___awdiv
  4397  0B52  0877               	movf	?___awdiv,w
  4398  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0B55  00C7               	movwf	??_scale+5
  4401  0B56  3001               	movlw	1
  4402  0B57                     u4715:
  4403  0B57  1003               	clrc
  4404  0B58  0DC7               	rlf	??_scale+5,f
  4405  0B59  3EFF               	addlw	-1
  4406  0B5A  1D03               	skipz
  4407  0B5B  2B57               	goto	u4715
  4408  0B5C  1003               	clrc
  4409  0B5D  0D47               	rlf	??_scale+5,w
  4410  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4411  0B5F  0084               	movwf	4
  4412  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4413  0B65  00C8               	movwf	??_scale+6
  4414  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4415  0B6B  00C9               	movwf	??_scale+7
  4416  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4417  0B71  00CA               	movwf	??_scale+8
  4418  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4419  0B77  00CB               	movwf	??_scale+9
  4420  0B78  084B               	movf	??_scale+9,w
  4421  0B79  00AB               	movwf	___flmul@a+3
  4422  0B7A  084A               	movf	??_scale+8,w
  4423  0B7B  00AA               	movwf	___flmul@a+2
  4424  0B7C  0849               	movf	??_scale+7,w
  4425  0B7D  00A9               	movwf	___flmul@a+1
  4426  0B7E  0848               	movf	??_scale+6,w
  4427  0B7F  00A8               	movwf	___flmul@a
  4428  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4429  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4431  0B87  0827               	movf	?___flmul+3,w
  4432  0B88  00CF               	movwf	_scale$959+3
  4433  0B89  0826               	movf	?___flmul+2,w
  4434  0B8A  00CE               	movwf	_scale$959+2
  4435  0B8B  0825               	movf	?___flmul+1,w
  4436  0B8C  00CD               	movwf	_scale$959+1
  4437  0B8D  0824               	movf	?___flmul,w
  4438  0B8E  00CC               	movwf	_scale$959
  4439                           
  4440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4441  0B8F  300A               	movlw	10
  4442  0B90  00F0               	movwf	___awmod@divisor
  4443  0B91  3000               	movlw	0
  4444  0B92  00F1               	movwf	___awmod@divisor+1
  4445  0B93  0850               	movf	scale@scl,w
  4446  0B94  00F2               	movwf	___awmod@dividend
  4447  0B95  01F3               	clrf	___awmod@dividend+1
  4448  0B96  1BF2               	btfsc	___awmod@dividend,7
  4449  0B97  03F3               	decf	___awmod@dividend+1,f
  4450  0B98  160A  158A  2444  120A  158A  	fcall	___awmod
  4451  0B9D  0870               	movf	?___awmod,w
  4452  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0BA0  00C2               	movwf	??_scale
  4455  0BA1  3001               	movlw	1
  4456  0BA2                     u4725:
  4457  0BA2  1003               	clrc
  4458  0BA3  0DC2               	rlf	??_scale,f
  4459  0BA4  3EFF               	addlw	-1
  4460  0BA5  1D03               	skipz
  4461  0BA6  2BA2               	goto	u4725
  4462  0BA7  1003               	clrc
  4463  0BA8  0D42               	rlf	??_scale,w
  4464  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4465  0BAA  0084               	movwf	4
  4466  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4467  0BB0  00C3               	movwf	??_scale+1
  4468  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4469  0BB6  00C4               	movwf	??_scale+2
  4470  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4471  0BBC  00C5               	movwf	??_scale+3
  4472  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4473  0BC2  00C6               	movwf	??_scale+4
  4474  0BC3  0846               	movf	??_scale+4,w
  4475  0BC4  00A7               	movwf	___flmul@b+3
  4476  0BC5  0845               	movf	??_scale+3,w
  4477  0BC6  00A6               	movwf	___flmul@b+2
  4478  0BC7  0844               	movf	??_scale+2,w
  4479  0BC8  00A5               	movwf	___flmul@b+1
  4480  0BC9  0843               	movf	??_scale+1,w
  4481  0BCA  00A4               	movwf	___flmul@b
  4482  0BCB  084F               	movf	_scale$959+3,w
  4483  0BCC  00AB               	movwf	___flmul@a+3
  4484  0BCD  084E               	movf	_scale$959+2,w
  4485  0BCE  00AA               	movwf	___flmul@a+2
  4486  0BCF  084D               	movf	_scale$959+1,w
  4487  0BD0  00A9               	movwf	___flmul@a+1
  4488  0BD1  084C               	movf	_scale$959,w
  4489  0BD2  00A8               	movwf	___flmul@a
  4490  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4491  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0BDA  0827               	movf	?___flmul+3,w
  4494  0BDB  00C1               	movwf	?_scale+3
  4495  0BDC  0826               	movf	?___flmul+2,w
  4496  0BDD  00C0               	movwf	?_scale+2
  4497  0BDE  0825               	movf	?___flmul+1,w
  4498  0BDF  00BF               	movwf	?_scale+1
  4499  0BE0  0824               	movf	?___flmul,w
  4500  0BE1  00BE               	movwf	?_scale
  4501  0BE2  2C9E               	goto	l304
  4502  0BE3                     l3078:
  4503  0BE3  0850               	movf	scale@scl,w
  4504  0BE4  3A80               	xorlw	128
  4505  0BE5  3E75               	addlw	-139
  4506  0BE6  1C03               	skipc
  4507  0BE7  2BE9               	goto	u4731
  4508  0BE8  2BEA               	goto	u4730
  4509  0BE9                     u4731:
  4510  0BE9  2C72               	goto	l3084
  4511  0BEA                     u4730:
  4512  0BEA                     l3080:
  4513                           
  4514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4515  0BEA  300A               	movlw	10
  4516  0BEB  00F0               	movwf	___awmod@divisor
  4517  0BEC  3000               	movlw	0
  4518  0BED  00F1               	movwf	___awmod@divisor+1
  4519  0BEE  0850               	movf	scale@scl,w
  4520  0BEF  00F2               	movwf	___awmod@dividend
  4521  0BF0  01F3               	clrf	___awmod@dividend+1
  4522  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4523  0BF2  03F3               	decf	___awmod@dividend+1,f
  4524  0BF3  160A  158A  2444  120A  158A  	fcall	___awmod
  4525  0BF8  0870               	movf	?___awmod,w
  4526  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4527  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4528  0BFB  00C2               	movwf	??_scale
  4529  0BFC  3001               	movlw	1
  4530  0BFD                     u4745:
  4531  0BFD  1003               	clrc
  4532  0BFE  0DC2               	rlf	??_scale,f
  4533  0BFF  3EFF               	addlw	-1
  4534  0C00  1D03               	skipz
  4535  0C01  2BFD               	goto	u4745
  4536  0C02  1003               	clrc
  4537  0C03  0D42               	rlf	??_scale,w
  4538  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4539  0C05  0084               	movwf	4
  4540  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4541  0C0B  00C3               	movwf	??_scale+1
  4542  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4543  0C11  00C4               	movwf	??_scale+2
  4544  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4545  0C17  00C5               	movwf	??_scale+3
  4546  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4547  0C1D  00C6               	movwf	??_scale+4
  4548  0C1E  0846               	movf	??_scale+4,w
  4549  0C1F  00A7               	movwf	___flmul@b+3
  4550  0C20  0845               	movf	??_scale+3,w
  4551  0C21  00A6               	movwf	___flmul@b+2
  4552  0C22  0844               	movf	??_scale+2,w
  4553  0C23  00A5               	movwf	___flmul@b+1
  4554  0C24  0843               	movf	??_scale+1,w
  4555  0C25  00A4               	movwf	___flmul@b
  4556  0C26  300A               	movlw	10
  4557  0C27  00F7               	movwf	___awdiv@divisor
  4558  0C28  3000               	movlw	0
  4559  0C29  00F8               	movwf	___awdiv@divisor+1
  4560  0C2A  0850               	movf	scale@scl,w
  4561  0C2B  00F9               	movwf	___awdiv@dividend
  4562  0C2C  01FA               	clrf	___awdiv@dividend+1
  4563  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4564  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4565  0C2F  120A  118A  2004  120A  158A  	fcall	___awdiv
  4566  0C34  0877               	movf	?___awdiv,w
  4567  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0C37  00C7               	movwf	??_scale+5
  4570  0C38  3001               	movlw	1
  4571  0C39                     u4755:
  4572  0C39  1003               	clrc
  4573  0C3A  0DC7               	rlf	??_scale+5,f
  4574  0C3B  3EFF               	addlw	-1
  4575  0C3C  1D03               	skipz
  4576  0C3D  2C39               	goto	u4755
  4577  0C3E  1003               	clrc
  4578  0C3F  0D47               	rlf	??_scale+5,w
  4579  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4580  0C41  0084               	movwf	4
  4581  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4582  0C47  00C8               	movwf	??_scale+6
  4583  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4584  0C4D  00C9               	movwf	??_scale+7
  4585  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4586  0C53  00CA               	movwf	??_scale+8
  4587  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4588  0C59  00CB               	movwf	??_scale+9
  4589  0C5A  084B               	movf	??_scale+9,w
  4590  0C5B  00AB               	movwf	___flmul@a+3
  4591  0C5C  084A               	movf	??_scale+8,w
  4592  0C5D  00AA               	movwf	___flmul@a+2
  4593  0C5E  0849               	movf	??_scale+7,w
  4594  0C5F  00A9               	movwf	___flmul@a+1
  4595  0C60  0848               	movf	??_scale+6,w
  4596  0C61  00A8               	movwf	___flmul@a
  4597  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4598  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4599  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4600  0C69  0827               	movf	?___flmul+3,w
  4601  0C6A  00C1               	movwf	?_scale+3
  4602  0C6B  0826               	movf	?___flmul+2,w
  4603  0C6C  00C0               	movwf	?_scale+2
  4604  0C6D  0825               	movf	?___flmul+1,w
  4605  0C6E  00BF               	movwf	?_scale+1
  4606  0C6F  0824               	movf	?___flmul,w
  4607  0C70  00BE               	movwf	?_scale
  4608  0C71  2C9E               	goto	l304
  4609  0C72                     l3084:
  4610                           
  4611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4612  0C72  0850               	movf	scale@scl,w
  4613  0C73  00C2               	movwf	??_scale
  4614  0C74  3001               	movlw	1
  4615  0C75                     u4765:
  4616  0C75  1003               	clrc
  4617  0C76  0DC2               	rlf	??_scale,f
  4618  0C77  3EFF               	addlw	-1
  4619  0C78  1D03               	skipz
  4620  0C79  2C75               	goto	u4765
  4621  0C7A  1003               	clrc
  4622  0C7B  0D42               	rlf	??_scale,w
  4623  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4624  0C7D  0084               	movwf	4
  4625  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4626  0C83  00C3               	movwf	??_scale+1
  4627  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4628  0C89  00C4               	movwf	??_scale+2
  4629  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4630  0C8F  00C5               	movwf	??_scale+3
  4631  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4632  0C95  00C6               	movwf	??_scale+4
  4633  0C96  0846               	movf	??_scale+4,w
  4634  0C97  00C1               	movwf	?_scale+3
  4635  0C98  0845               	movf	??_scale+3,w
  4636  0C99  00C0               	movwf	?_scale+2
  4637  0C9A  0844               	movf	??_scale+2,w
  4638  0C9B  00BF               	movwf	?_scale+1
  4639  0C9C  0843               	movf	??_scale+1,w
  4640  0C9D  00BE               	movwf	?_scale
  4641  0C9E                     l304:
  4642  0C9E  0008               	return
  4643  0C9F                     __end_of_scale:
  4644                           
  4645                           	psect	text3
  4646  1C44                     __ptext3:	
  4647 ;; *************** function ___awmod *****************
  4648 ;; Defined at:
  4649 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  divisor         2    0[COMMON] int 
  4652 ;;  dividend        2    2[COMMON] int 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  sign            1    6[COMMON] unsigned char 
  4655 ;;  counter         1    5[COMMON] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2    0[COMMON] int 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4665 ;;      Params:         4       0       0       0       0
  4666 ;;      Locals:         2       0       0       0       0
  4667 ;;      Temps:          1       0       0       0       0
  4668 ;;      Totals:         7       0       0       0       0
  4669 ;;Total ram usage:        7 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_scale
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function ___awmod
  4680  1C44                     ___awmod:
  4681  1C44                     l2564:	
  4682                           ;incstack = 0
  4683                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4684                           
  4685  1C44  01F6               	clrf	___awmod@sign
  4686  1C45                     l2566:
  4687  1C45  1FF3               	btfss	___awmod@dividend+1,7
  4688  1C46  2C48               	goto	u3391
  4689  1C47  2C49               	goto	u3390
  4690  1C48                     u3391:
  4691  1C48  2C50               	goto	l2572
  4692  1C49                     u3390:
  4693  1C49                     l2568:
  4694  1C49  09F2               	comf	___awmod@dividend,f
  4695  1C4A  09F3               	comf	___awmod@dividend+1,f
  4696  1C4B  0AF2               	incf	___awmod@dividend,f
  4697  1C4C  1903               	skipnz
  4698  1C4D  0AF3               	incf	___awmod@dividend+1,f
  4699  1C4E                     l2570:
  4700  1C4E  01F6               	clrf	___awmod@sign
  4701  1C4F  0AF6               	incf	___awmod@sign,f
  4702  1C50                     l2572:
  4703  1C50  1FF1               	btfss	___awmod@divisor+1,7
  4704  1C51  2C53               	goto	u3401
  4705  1C52  2C54               	goto	u3400
  4706  1C53                     u3401:
  4707  1C53  2C59               	goto	l2576
  4708  1C54                     u3400:
  4709  1C54                     l2574:
  4710  1C54  09F0               	comf	___awmod@divisor,f
  4711  1C55  09F1               	comf	___awmod@divisor+1,f
  4712  1C56  0AF0               	incf	___awmod@divisor,f
  4713  1C57  1903               	skipnz
  4714  1C58  0AF1               	incf	___awmod@divisor+1,f
  4715  1C59                     l2576:
  4716  1C59  0870               	movf	___awmod@divisor,w
  4717  1C5A  0471               	iorwf	___awmod@divisor+1,w
  4718  1C5B  1903               	btfsc	3,2
  4719  1C5C  2C5E               	goto	u3411
  4720  1C5D  2C5F               	goto	u3410
  4721  1C5E                     u3411:
  4722  1C5E  2C8E               	goto	l2594
  4723  1C5F                     u3410:
  4724  1C5F                     l2578:
  4725  1C5F  01F5               	clrf	___awmod@counter
  4726  1C60  0AF5               	incf	___awmod@counter,f
  4727  1C61  2C6D               	goto	l2584
  4728  1C62                     l2580:
  4729  1C62  3001               	movlw	1
  4730  1C63                     u3425:
  4731  1C63  1003               	clrc
  4732  1C64  0DF0               	rlf	___awmod@divisor,f
  4733  1C65  0DF1               	rlf	___awmod@divisor+1,f
  4734  1C66  3EFF               	addlw	-1
  4735  1C67  1D03               	skipz
  4736  1C68  2C63               	goto	u3425
  4737  1C69                     l2582:
  4738  1C69  3001               	movlw	1
  4739  1C6A  00F4               	movwf	??___awmod
  4740  1C6B  0874               	movf	??___awmod,w
  4741  1C6C  07F5               	addwf	___awmod@counter,f
  4742  1C6D                     l2584:
  4743  1C6D  1FF1               	btfss	___awmod@divisor+1,7
  4744  1C6E  2C70               	goto	u3431
  4745  1C6F  2C71               	goto	u3430
  4746  1C70                     u3431:
  4747  1C70  2C62               	goto	l2580
  4748  1C71                     u3430:
  4749  1C71                     l2586:
  4750  1C71  0871               	movf	___awmod@divisor+1,w
  4751  1C72  0273               	subwf	___awmod@dividend+1,w
  4752  1C73  1D03               	skipz
  4753  1C74  2C77               	goto	u3445
  4754  1C75  0870               	movf	___awmod@divisor,w
  4755  1C76  0272               	subwf	___awmod@dividend,w
  4756  1C77                     u3445:
  4757  1C77  1C03               	skipc
  4758  1C78  2C7A               	goto	u3441
  4759  1C79  2C7B               	goto	u3440
  4760  1C7A                     u3441:
  4761  1C7A  2C81               	goto	l2590
  4762  1C7B                     u3440:
  4763  1C7B                     l2588:
  4764  1C7B  0870               	movf	___awmod@divisor,w
  4765  1C7C  02F2               	subwf	___awmod@dividend,f
  4766  1C7D  0871               	movf	___awmod@divisor+1,w
  4767  1C7E  1C03               	skipc
  4768  1C7F  03F3               	decf	___awmod@dividend+1,f
  4769  1C80  02F3               	subwf	___awmod@dividend+1,f
  4770  1C81                     l2590:
  4771  1C81  3001               	movlw	1
  4772  1C82                     u3455:
  4773  1C82  1003               	clrc
  4774  1C83  0CF1               	rrf	___awmod@divisor+1,f
  4775  1C84  0CF0               	rrf	___awmod@divisor,f
  4776  1C85  3EFF               	addlw	-1
  4777  1C86  1D03               	skipz
  4778  1C87  2C82               	goto	u3455
  4779  1C88                     l2592:
  4780  1C88  3001               	movlw	1
  4781  1C89  02F5               	subwf	___awmod@counter,f
  4782  1C8A  1D03               	btfss	3,2
  4783  1C8B  2C8D               	goto	u3461
  4784  1C8C  2C8E               	goto	u3460
  4785  1C8D                     u3461:
  4786  1C8D  2C71               	goto	l2586
  4787  1C8E                     u3460:
  4788  1C8E                     l2594:
  4789  1C8E  0876               	movf	___awmod@sign,w
  4790  1C8F  1903               	btfsc	3,2
  4791  1C90  2C92               	goto	u3471
  4792  1C91  2C93               	goto	u3470
  4793  1C92                     u3471:
  4794  1C92  2C98               	goto	l2598
  4795  1C93                     u3470:
  4796  1C93                     l2596:
  4797  1C93  09F2               	comf	___awmod@dividend,f
  4798  1C94  09F3               	comf	___awmod@dividend+1,f
  4799  1C95  0AF2               	incf	___awmod@dividend,f
  4800  1C96  1903               	skipnz
  4801  1C97  0AF3               	incf	___awmod@dividend+1,f
  4802  1C98                     l2598:
  4803  1C98  0873               	movf	___awmod@dividend+1,w
  4804  1C99  00F1               	movwf	?___awmod+1
  4805  1C9A  0872               	movf	___awmod@dividend,w
  4806  1C9B  00F0               	movwf	?___awmod
  4807  1C9C                     l549:
  4808  1C9C  0008               	return
  4809  1C9D                     __end_of___awmod:
  4810                           
  4811                           	psect	text4
  4812  0004                     __ptext4:	
  4813 ;; *************** function ___awdiv *****************
  4814 ;; Defined at:
  4815 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  divisor         2    7[COMMON] int 
  4818 ;;  dividend        2    9[COMMON] int 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  quotient        2    2[BANK0 ] int 
  4821 ;;  sign            1    1[BANK0 ] unsigned char 
  4822 ;;  counter         1    0[BANK0 ] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  2    7[COMMON] int 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         4       0       0       0       0
  4833 ;;      Locals:         0       4       0       0       0
  4834 ;;      Temps:          1       0       0       0       0
  4835 ;;      Totals:         5       4       0       0       0
  4836 ;;Total ram usage:        9 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_scale
  4842 ;;		_sprintf
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           
  4847                           ;psect for function ___awdiv
  4848  0004                     ___awdiv:
  4849  0004                     l2520:	
  4850                           ;incstack = 0
  4851                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4852                           
  4853  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4854  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4855  0006  01A1               	clrf	___awdiv@sign
  4856  0007                     l2522:
  4857  0007  1FF8               	btfss	___awdiv@divisor+1,7
  4858  0008  280A               	goto	u3291
  4859  0009  280B               	goto	u3290
  4860  000A                     u3291:
  4861  000A  2812               	goto	l2528
  4862  000B                     u3290:
  4863  000B                     l2524:
  4864  000B  09F7               	comf	___awdiv@divisor,f
  4865  000C  09F8               	comf	___awdiv@divisor+1,f
  4866  000D  0AF7               	incf	___awdiv@divisor,f
  4867  000E  1903               	skipnz
  4868  000F  0AF8               	incf	___awdiv@divisor+1,f
  4869  0010                     l2526:
  4870  0010  01A1               	clrf	___awdiv@sign
  4871  0011  0AA1               	incf	___awdiv@sign,f
  4872  0012                     l2528:
  4873  0012  1FFA               	btfss	___awdiv@dividend+1,7
  4874  0013  2815               	goto	u3301
  4875  0014  2816               	goto	u3300
  4876  0015                     u3301:
  4877  0015  281F               	goto	l2534
  4878  0016                     u3300:
  4879  0016                     l2530:
  4880  0016  09F9               	comf	___awdiv@dividend,f
  4881  0017  09FA               	comf	___awdiv@dividend+1,f
  4882  0018  0AF9               	incf	___awdiv@dividend,f
  4883  0019  1903               	skipnz
  4884  001A  0AFA               	incf	___awdiv@dividend+1,f
  4885  001B                     l2532:
  4886  001B  3001               	movlw	1
  4887  001C  00FB               	movwf	??___awdiv
  4888  001D  087B               	movf	??___awdiv,w
  4889  001E  06A1               	xorwf	___awdiv@sign,f
  4890  001F                     l2534:
  4891  001F  01A2               	clrf	___awdiv@quotient
  4892  0020  01A3               	clrf	___awdiv@quotient+1
  4893  0021                     l2536:
  4894  0021  0877               	movf	___awdiv@divisor,w
  4895  0022  0478               	iorwf	___awdiv@divisor+1,w
  4896  0023  1903               	btfsc	3,2
  4897  0024  2826               	goto	u3311
  4898  0025  2827               	goto	u3310
  4899  0026                     u3311:
  4900  0026  285E               	goto	l2556
  4901  0027                     u3310:
  4902  0027                     l2538:
  4903  0027  01A0               	clrf	___awdiv@counter
  4904  0028  0AA0               	incf	___awdiv@counter,f
  4905  0029  2835               	goto	l2544
  4906  002A                     l2540:
  4907  002A  3001               	movlw	1
  4908  002B                     u3325:
  4909  002B  1003               	clrc
  4910  002C  0DF7               	rlf	___awdiv@divisor,f
  4911  002D  0DF8               	rlf	___awdiv@divisor+1,f
  4912  002E  3EFF               	addlw	-1
  4913  002F  1D03               	skipz
  4914  0030  282B               	goto	u3325
  4915  0031                     l2542:
  4916  0031  3001               	movlw	1
  4917  0032  00FB               	movwf	??___awdiv
  4918  0033  087B               	movf	??___awdiv,w
  4919  0034  07A0               	addwf	___awdiv@counter,f
  4920  0035                     l2544:
  4921  0035  1FF8               	btfss	___awdiv@divisor+1,7
  4922  0036  2838               	goto	u3331
  4923  0037  2839               	goto	u3330
  4924  0038                     u3331:
  4925  0038  282A               	goto	l2540
  4926  0039                     u3330:
  4927  0039                     l2546:
  4928  0039  3001               	movlw	1
  4929  003A                     u3345:
  4930  003A  1003               	clrc
  4931  003B  0DA2               	rlf	___awdiv@quotient,f
  4932  003C  0DA3               	rlf	___awdiv@quotient+1,f
  4933  003D  3EFF               	addlw	-1
  4934  003E  1D03               	skipz
  4935  003F  283A               	goto	u3345
  4936  0040  0878               	movf	___awdiv@divisor+1,w
  4937  0041  027A               	subwf	___awdiv@dividend+1,w
  4938  0042  1D03               	skipz
  4939  0043  2846               	goto	u3355
  4940  0044  0877               	movf	___awdiv@divisor,w
  4941  0045  0279               	subwf	___awdiv@dividend,w
  4942  0046                     u3355:
  4943  0046  1C03               	skipc
  4944  0047  2849               	goto	u3351
  4945  0048  284A               	goto	u3350
  4946  0049                     u3351:
  4947  0049  2851               	goto	l2552
  4948  004A                     u3350:
  4949  004A                     l2548:
  4950  004A  0877               	movf	___awdiv@divisor,w
  4951  004B  02F9               	subwf	___awdiv@dividend,f
  4952  004C  0878               	movf	___awdiv@divisor+1,w
  4953  004D  1C03               	skipc
  4954  004E  03FA               	decf	___awdiv@dividend+1,f
  4955  004F  02FA               	subwf	___awdiv@dividend+1,f
  4956  0050                     l2550:
  4957  0050  1422               	bsf	___awdiv@quotient,0
  4958  0051                     l2552:
  4959  0051  3001               	movlw	1
  4960  0052                     u3365:
  4961  0052  1003               	clrc
  4962  0053  0CF8               	rrf	___awdiv@divisor+1,f
  4963  0054  0CF7               	rrf	___awdiv@divisor,f
  4964  0055  3EFF               	addlw	-1
  4965  0056  1D03               	skipz
  4966  0057  2852               	goto	u3365
  4967  0058                     l2554:
  4968  0058  3001               	movlw	1
  4969  0059  02A0               	subwf	___awdiv@counter,f
  4970  005A  1D03               	btfss	3,2
  4971  005B  285D               	goto	u3371
  4972  005C  285E               	goto	u3370
  4973  005D                     u3371:
  4974  005D  2839               	goto	l2546
  4975  005E                     u3370:
  4976  005E                     l2556:
  4977  005E  0821               	movf	___awdiv@sign,w
  4978  005F  1903               	btfsc	3,2
  4979  0060  2862               	goto	u3381
  4980  0061  2863               	goto	u3380
  4981  0062                     u3381:
  4982  0062  2868               	goto	l2560
  4983  0063                     u3380:
  4984  0063                     l2558:
  4985  0063  09A2               	comf	___awdiv@quotient,f
  4986  0064  09A3               	comf	___awdiv@quotient+1,f
  4987  0065  0AA2               	incf	___awdiv@quotient,f
  4988  0066  1903               	skipnz
  4989  0067  0AA3               	incf	___awdiv@quotient+1,f
  4990  0068                     l2560:
  4991  0068  0823               	movf	___awdiv@quotient+1,w
  4992  0069  00F8               	movwf	?___awdiv+1
  4993  006A  0822               	movf	___awdiv@quotient,w
  4994  006B  00F7               	movwf	?___awdiv
  4995  006C                     l536:
  4996  006C  0008               	return
  4997  006D                     __end_of___awdiv:
  4998                           
  4999                           	psect	text5
  5000  1003                     __ptext5:	
  5001 ;; *************** function _isdigit *****************
  5002 ;; Defined at:
  5003 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  c               1    wreg     unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  c               1    1[COMMON] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;		None               void
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5017 ;;      Params:         0       0       0       0       0
  5018 ;;      Locals:         2       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0
  5020 ;;      Totals:         2       0       0       0       0
  5021 ;;Total ram usage:        2 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_sprintf
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function _isdigit
  5032  1003                     _isdigit:
  5033                           
  5034                           ;incstack = 0
  5035                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5036                           ;isdigit@c stored from wreg
  5037  1003  00F1               	movwf	isdigit@c
  5038  1004                     l3088:
  5039  1004  01F0               	clrf	_isdigit$768
  5040  1005                     l3090:
  5041  1005  303A               	movlw	58
  5042  1006  0271               	subwf	isdigit@c,w
  5043  1007  1803               	skipnc
  5044  1008  280A               	goto	u4771
  5045  1009  280B               	goto	u4770
  5046  100A                     u4771:
  5047  100A  2813               	goto	l3096
  5048  100B                     u4770:
  5049  100B                     l3092:
  5050  100B  3030               	movlw	48
  5051  100C  0271               	subwf	isdigit@c,w
  5052  100D  1C03               	skipc
  5053  100E  2810               	goto	u4781
  5054  100F  2811               	goto	u4780
  5055  1010                     u4781:
  5056  1010  2813               	goto	l3096
  5057  1011                     u4780:
  5058  1011                     l3094:
  5059  1011  01F0               	clrf	_isdigit$768
  5060  1012  0AF0               	incf	_isdigit$768,f
  5061  1013                     l3096:
  5062  1013  0C70               	rrf	_isdigit$768,w
  5063  1014                     l870:
  5064  1014  0008               	return
  5065  1015                     __end_of_isdigit:
  5066                           
  5067                           	psect	text6
  5068  136D                     __ptext6:	
  5069 ;; *************** function _fround *****************
  5070 ;; Defined at:
  5071 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  prec            1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  prec            1   49[BANK0 ] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  4   30[BANK0 ] unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5085 ;;      Params:         0       4       0       0       0
  5086 ;;      Locals:         0       9       0       0       0
  5087 ;;      Temps:          0       7       0       0       0
  5088 ;;      Totals:         0      20       0       0       0
  5089 ;;Total ram usage:       20 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    2
  5092 ;; This function calls:
  5093 ;;		___flmul
  5094 ;;		___lwdiv
  5095 ;;		___lwmod
  5096 ;; This function is called by:
  5097 ;;		_sprintf
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _fround
  5103  136D                     _fround:
  5104                           
  5105                           ;incstack = 0
  5106                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5107                           ;fround@prec stored from wreg
  5108  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5109  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5110  136F  00D1               	movwf	fround@prec
  5111  1370                     l3030:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5114  1370  306E               	movlw	110
  5115  1371  0251               	subwf	fround@prec,w
  5116  1372  1C03               	skipc
  5117  1373  2B75               	goto	u4521
  5118  1374  2B76               	goto	u4520
  5119  1375                     u4521:
  5120  1375  2C83               	goto	l3038
  5121  1376                     u4520:
  5122  1376                     l3032:
  5123                           
  5124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5125  1376  303F               	movlw	63
  5126  1377  00A7               	movwf	___flmul@b+3
  5127  1378  3000               	movlw	0
  5128  1379  00A6               	movwf	___flmul@b+2
  5129  137A  3000               	movlw	0
  5130  137B  00A5               	movwf	___flmul@b+1
  5131  137C  3000               	movlw	0
  5132  137D  00A4               	movwf	___flmul@b
  5133  137E  3064               	movlw	100
  5134  137F  00F6               	movwf	___lwdiv@divisor
  5135  1380  3000               	movlw	0
  5136  1381  00F7               	movwf	___lwdiv@divisor+1
  5137  1382  0851               	movf	fround@prec,w
  5138  1383  00C2               	movwf	??_fround
  5139  1384  01C3               	clrf	??_fround+1
  5140  1385  0842               	movf	??_fround,w
  5141  1386  00F8               	movwf	___lwdiv@dividend
  5142  1387  0843               	movf	??_fround+1,w
  5143  1388  00F9               	movwf	___lwdiv@dividend+1
  5144  1389  160A  158A  22BB  160A  118A  	fcall	___lwdiv
  5145  138E  0876               	movf	?___lwdiv,w
  5146  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5147  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5148  1391  00C4               	movwf	??_fround+2
  5149  1392  3001               	movlw	1
  5150  1393                     u4535:
  5151  1393  1003               	clrc
  5152  1394  0DC4               	rlf	??_fround+2,f
  5153  1395  3EFF               	addlw	-1
  5154  1396  1D03               	skipz
  5155  1397  2B93               	goto	u4535
  5156  1398  1003               	clrc
  5157  1399  0D44               	rlf	??_fround+2,w
  5158  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5159  139B  0084               	movwf	4
  5160  139C  120A  158A  200A  160A  118A  	fcall	stringdir
  5161  13A1  00C5               	movwf	??_fround+3
  5162  13A2  120A  158A  200A  160A  118A  	fcall	stringdir
  5163  13A7  00C6               	movwf	??_fround+4
  5164  13A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5165  13AD  00C7               	movwf	??_fround+5
  5166  13AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5167  13B3  00C8               	movwf	??_fround+6
  5168  13B4  0848               	movf	??_fround+6,w
  5169  13B5  00AB               	movwf	___flmul@a+3
  5170  13B6  0847               	movf	??_fround+5,w
  5171  13B7  00AA               	movwf	___flmul@a+2
  5172  13B8  0846               	movf	??_fround+4,w
  5173  13B9  00A9               	movwf	___flmul@a+1
  5174  13BA  0845               	movf	??_fround+3,w
  5175  13BB  00A8               	movwf	___flmul@a
  5176  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5177  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5178  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5179  13C3  0827               	movf	?___flmul+3,w
  5180  13C4  00D0               	movwf	_fround$957+3
  5181  13C5  0826               	movf	?___flmul+2,w
  5182  13C6  00CF               	movwf	_fround$957+2
  5183  13C7  0825               	movf	?___flmul+1,w
  5184  13C8  00CE               	movwf	_fround$957+1
  5185  13C9  0824               	movf	?___flmul,w
  5186  13CA  00CD               	movwf	_fround$957
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5189  13CB  300A               	movlw	10
  5190  13CC  00F6               	movwf	___lwdiv@divisor
  5191  13CD  3000               	movlw	0
  5192  13CE  00F7               	movwf	___lwdiv@divisor+1
  5193  13CF  0851               	movf	fround@prec,w
  5194  13D0  00C2               	movwf	??_fround
  5195  13D1  01C3               	clrf	??_fround+1
  5196  13D2  0842               	movf	??_fround,w
  5197  13D3  00F2               	movwf	___lwmod@dividend
  5198  13D4  0843               	movf	??_fround+1,w
  5199  13D5  00F3               	movwf	___lwmod@dividend+1
  5200  13D6  3064               	movlw	100
  5201  13D7  00F0               	movwf	___lwmod@divisor
  5202  13D8  3000               	movlw	0
  5203  13D9  00F1               	movwf	___lwmod@divisor+1
  5204  13DA  160A  158A  2201  160A  118A  	fcall	___lwmod
  5205  13DF  0871               	movf	?___lwmod+1,w
  5206  13E0  00F9               	movwf	___lwdiv@dividend+1
  5207  13E1  0870               	movf	?___lwmod,w
  5208  13E2  00F8               	movwf	___lwdiv@dividend
  5209  13E3  160A  158A  22BB  160A  118A  	fcall	___lwdiv
  5210  13E8  0876               	movf	?___lwdiv,w
  5211  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5212  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5213  13EB  00C4               	movwf	??_fround+2
  5214  13EC  3001               	movlw	1
  5215  13ED                     u4545:
  5216  13ED  1003               	clrc
  5217  13EE  0DC4               	rlf	??_fround+2,f
  5218  13EF  3EFF               	addlw	-1
  5219  13F0  1D03               	skipz
  5220  13F1  2BED               	goto	u4545
  5221  13F2  1003               	clrc
  5222  13F3  0D44               	rlf	??_fround+2,w
  5223  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5224  13F5  0084               	movwf	4
  5225  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  5226  13FB  00C5               	movwf	??_fround+3
  5227  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5228  1401  00C6               	movwf	??_fround+4
  5229  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  5230  1407  00C7               	movwf	??_fround+5
  5231  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  5232  140D  00C8               	movwf	??_fround+6
  5233  140E  0848               	movf	??_fround+6,w
  5234  140F  00A7               	movwf	___flmul@b+3
  5235  1410  0847               	movf	??_fround+5,w
  5236  1411  00A6               	movwf	___flmul@b+2
  5237  1412  0846               	movf	??_fround+4,w
  5238  1413  00A5               	movwf	___flmul@b+1
  5239  1414  0845               	movf	??_fround+3,w
  5240  1415  00A4               	movwf	___flmul@b
  5241  1416  0850               	movf	_fround$957+3,w
  5242  1417  00AB               	movwf	___flmul@a+3
  5243  1418  084F               	movf	_fround$957+2,w
  5244  1419  00AA               	movwf	___flmul@a+2
  5245  141A  084E               	movf	_fround$957+1,w
  5246  141B  00A9               	movwf	___flmul@a+1
  5247  141C  084D               	movf	_fround$957,w
  5248  141D  00A8               	movwf	___flmul@a
  5249  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5250  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5251  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5252  1425  0827               	movf	?___flmul+3,w
  5253  1426  00CC               	movwf	_fround$958+3
  5254  1427  0826               	movf	?___flmul+2,w
  5255  1428  00CB               	movwf	_fround$958+2
  5256  1429  0825               	movf	?___flmul+1,w
  5257  142A  00CA               	movwf	_fround$958+1
  5258  142B  0824               	movf	?___flmul,w
  5259  142C  00C9               	movwf	_fround$958
  5260                           
  5261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5262  142D  300A               	movlw	10
  5263  142E  00F0               	movwf	___lwmod@divisor
  5264  142F  3000               	movlw	0
  5265  1430  00F1               	movwf	___lwmod@divisor+1
  5266  1431  0851               	movf	fround@prec,w
  5267  1432  00C2               	movwf	??_fround
  5268  1433  01C3               	clrf	??_fround+1
  5269  1434  0842               	movf	??_fround,w
  5270  1435  00F2               	movwf	___lwmod@dividend
  5271  1436  0843               	movf	??_fround+1,w
  5272  1437  00F3               	movwf	___lwmod@dividend+1
  5273  1438  160A  158A  2201  160A  118A  	fcall	___lwmod
  5274  143D  0870               	movf	?___lwmod,w
  5275  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5276  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5277  1440  00C4               	movwf	??_fround+2
  5278  1441  3001               	movlw	1
  5279  1442                     u4555:
  5280  1442  1003               	clrc
  5281  1443  0DC4               	rlf	??_fround+2,f
  5282  1444  3EFF               	addlw	-1
  5283  1445  1D03               	skipz
  5284  1446  2C42               	goto	u4555
  5285  1447  1003               	clrc
  5286  1448  0D44               	rlf	??_fround+2,w
  5287  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5288  144A  0084               	movwf	4
  5289  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  5290  1450  00C5               	movwf	??_fround+3
  5291  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  5292  1456  00C6               	movwf	??_fround+4
  5293  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  5294  145C  00C7               	movwf	??_fround+5
  5295  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  5296  1462  00C8               	movwf	??_fround+6
  5297  1463  0848               	movf	??_fround+6,w
  5298  1464  00A7               	movwf	___flmul@b+3
  5299  1465  0847               	movf	??_fround+5,w
  5300  1466  00A6               	movwf	___flmul@b+2
  5301  1467  0846               	movf	??_fround+4,w
  5302  1468  00A5               	movwf	___flmul@b+1
  5303  1469  0845               	movf	??_fround+3,w
  5304  146A  00A4               	movwf	___flmul@b
  5305  146B  084C               	movf	_fround$958+3,w
  5306  146C  00AB               	movwf	___flmul@a+3
  5307  146D  084B               	movf	_fround$958+2,w
  5308  146E  00AA               	movwf	___flmul@a+2
  5309  146F  084A               	movf	_fround$958+1,w
  5310  1470  00A9               	movwf	___flmul@a+1
  5311  1471  0849               	movf	_fround$958,w
  5312  1472  00A8               	movwf	___flmul@a
  5313  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5314  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5315  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5316  147A  0827               	movf	?___flmul+3,w
  5317  147B  00C1               	movwf	?_fround+3
  5318  147C  0826               	movf	?___flmul+2,w
  5319  147D  00C0               	movwf	?_fround+2
  5320  147E  0825               	movf	?___flmul+1,w
  5321  147F  00BF               	movwf	?_fround+1
  5322  1480  0824               	movf	?___flmul,w
  5323  1481  00BE               	movwf	?_fround
  5324  1482  2D77               	goto	l297
  5325  1483                     l3038:
  5326  1483  300B               	movlw	11
  5327  1484  0251               	subwf	fround@prec,w
  5328  1485  1C03               	skipc
  5329  1486  2C88               	goto	u4561
  5330  1487  2C89               	goto	u4560
  5331  1488                     u4561:
  5332  1488  2D34               	goto	l3044
  5333  1489                     u4560:
  5334  1489                     l3040:
  5335                           
  5336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5337  1489  303F               	movlw	63
  5338  148A  00A7               	movwf	___flmul@b+3
  5339  148B  3000               	movlw	0
  5340  148C  00A6               	movwf	___flmul@b+2
  5341  148D  3000               	movlw	0
  5342  148E  00A5               	movwf	___flmul@b+1
  5343  148F  3000               	movlw	0
  5344  1490  00A4               	movwf	___flmul@b
  5345  1491  300A               	movlw	10
  5346  1492  00F6               	movwf	___lwdiv@divisor
  5347  1493  3000               	movlw	0
  5348  1494  00F7               	movwf	___lwdiv@divisor+1
  5349  1495  0851               	movf	fround@prec,w
  5350  1496  00C2               	movwf	??_fround
  5351  1497  01C3               	clrf	??_fround+1
  5352  1498  0842               	movf	??_fround,w
  5353  1499  00F8               	movwf	___lwdiv@dividend
  5354  149A  0843               	movf	??_fround+1,w
  5355  149B  00F9               	movwf	___lwdiv@dividend+1
  5356  149C  160A  158A  22BB  160A  118A  	fcall	___lwdiv
  5357  14A1  0876               	movf	?___lwdiv,w
  5358  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5359  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5360  14A4  00C4               	movwf	??_fround+2
  5361  14A5  3001               	movlw	1
  5362  14A6                     u4575:
  5363  14A6  1003               	clrc
  5364  14A7  0DC4               	rlf	??_fround+2,f
  5365  14A8  3EFF               	addlw	-1
  5366  14A9  1D03               	skipz
  5367  14AA  2CA6               	goto	u4575
  5368  14AB  1003               	clrc
  5369  14AC  0D44               	rlf	??_fround+2,w
  5370  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5371  14AE  0084               	movwf	4
  5372  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5373  14B4  00C5               	movwf	??_fround+3
  5374  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5375  14BA  00C6               	movwf	??_fround+4
  5376  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5377  14C0  00C7               	movwf	??_fround+5
  5378  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5379  14C6  00C8               	movwf	??_fround+6
  5380  14C7  0848               	movf	??_fround+6,w
  5381  14C8  00AB               	movwf	___flmul@a+3
  5382  14C9  0847               	movf	??_fround+5,w
  5383  14CA  00AA               	movwf	___flmul@a+2
  5384  14CB  0846               	movf	??_fround+4,w
  5385  14CC  00A9               	movwf	___flmul@a+1
  5386  14CD  0845               	movf	??_fround+3,w
  5387  14CE  00A8               	movwf	___flmul@a
  5388  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5389  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5390  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5391  14D6  0827               	movf	?___flmul+3,w
  5392  14D7  00D0               	movwf	_fround$957+3
  5393  14D8  0826               	movf	?___flmul+2,w
  5394  14D9  00CF               	movwf	_fround$957+2
  5395  14DA  0825               	movf	?___flmul+1,w
  5396  14DB  00CE               	movwf	_fround$957+1
  5397  14DC  0824               	movf	?___flmul,w
  5398  14DD  00CD               	movwf	_fround$957
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5401  14DE  300A               	movlw	10
  5402  14DF  00F0               	movwf	___lwmod@divisor
  5403  14E0  3000               	movlw	0
  5404  14E1  00F1               	movwf	___lwmod@divisor+1
  5405  14E2  0851               	movf	fround@prec,w
  5406  14E3  00C2               	movwf	??_fround
  5407  14E4  01C3               	clrf	??_fround+1
  5408  14E5  0842               	movf	??_fround,w
  5409  14E6  00F2               	movwf	___lwmod@dividend
  5410  14E7  0843               	movf	??_fround+1,w
  5411  14E8  00F3               	movwf	___lwmod@dividend+1
  5412  14E9  160A  158A  2201  160A  118A  	fcall	___lwmod
  5413  14EE  0870               	movf	?___lwmod,w
  5414  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5415  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5416  14F1  00C4               	movwf	??_fround+2
  5417  14F2  3001               	movlw	1
  5418  14F3                     u4585:
  5419  14F3  1003               	clrc
  5420  14F4  0DC4               	rlf	??_fround+2,f
  5421  14F5  3EFF               	addlw	-1
  5422  14F6  1D03               	skipz
  5423  14F7  2CF3               	goto	u4585
  5424  14F8  1003               	clrc
  5425  14F9  0D44               	rlf	??_fround+2,w
  5426  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5427  14FB  0084               	movwf	4
  5428  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5429  1501  00C5               	movwf	??_fround+3
  5430  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5431  1507  00C6               	movwf	??_fround+4
  5432  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5433  150D  00C7               	movwf	??_fround+5
  5434  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5435  1513  00C8               	movwf	??_fround+6
  5436  1514  0848               	movf	??_fround+6,w
  5437  1515  00A7               	movwf	___flmul@b+3
  5438  1516  0847               	movf	??_fround+5,w
  5439  1517  00A6               	movwf	___flmul@b+2
  5440  1518  0846               	movf	??_fround+4,w
  5441  1519  00A5               	movwf	___flmul@b+1
  5442  151A  0845               	movf	??_fround+3,w
  5443  151B  00A4               	movwf	___flmul@b
  5444  151C  0850               	movf	_fround$957+3,w
  5445  151D  00AB               	movwf	___flmul@a+3
  5446  151E  084F               	movf	_fround$957+2,w
  5447  151F  00AA               	movwf	___flmul@a+2
  5448  1520  084E               	movf	_fround$957+1,w
  5449  1521  00A9               	movwf	___flmul@a+1
  5450  1522  084D               	movf	_fround$957,w
  5451  1523  00A8               	movwf	___flmul@a
  5452  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5453  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5454  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5455  152B  0827               	movf	?___flmul+3,w
  5456  152C  00C1               	movwf	?_fround+3
  5457  152D  0826               	movf	?___flmul+2,w
  5458  152E  00C0               	movwf	?_fround+2
  5459  152F  0825               	movf	?___flmul+1,w
  5460  1530  00BF               	movwf	?_fround+1
  5461  1531  0824               	movf	?___flmul,w
  5462  1532  00BE               	movwf	?_fround
  5463  1533  2D77               	goto	l297
  5464  1534                     l3044:
  5465                           
  5466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5467  1534  303F               	movlw	63
  5468  1535  00A7               	movwf	___flmul@b+3
  5469  1536  3000               	movlw	0
  5470  1537  00A6               	movwf	___flmul@b+2
  5471  1538  3000               	movlw	0
  5472  1539  00A5               	movwf	___flmul@b+1
  5473  153A  3000               	movlw	0
  5474  153B  00A4               	movwf	___flmul@b
  5475  153C  0851               	movf	fround@prec,w
  5476  153D  00C2               	movwf	??_fround
  5477  153E  3001               	movlw	1
  5478  153F                     u4595:
  5479  153F  1003               	clrc
  5480  1540  0DC2               	rlf	??_fround,f
  5481  1541  3EFF               	addlw	-1
  5482  1542  1D03               	skipz
  5483  1543  2D3F               	goto	u4595
  5484  1544  1003               	clrc
  5485  1545  0D42               	rlf	??_fround,w
  5486  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5487  1547  0084               	movwf	4
  5488  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5489  154D  00C3               	movwf	??_fround+1
  5490  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5491  1553  00C4               	movwf	??_fround+2
  5492  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5493  1559  00C5               	movwf	??_fround+3
  5494  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5495  155F  00C6               	movwf	??_fround+4
  5496  1560  0846               	movf	??_fround+4,w
  5497  1561  00AB               	movwf	___flmul@a+3
  5498  1562  0845               	movf	??_fround+3,w
  5499  1563  00AA               	movwf	___flmul@a+2
  5500  1564  0844               	movf	??_fround+2,w
  5501  1565  00A9               	movwf	___flmul@a+1
  5502  1566  0843               	movf	??_fround+1,w
  5503  1567  00A8               	movwf	___flmul@a
  5504  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5505  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5506  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5507  156F  0827               	movf	?___flmul+3,w
  5508  1570  00C1               	movwf	?_fround+3
  5509  1571  0826               	movf	?___flmul+2,w
  5510  1572  00C0               	movwf	?_fround+2
  5511  1573  0825               	movf	?___flmul+1,w
  5512  1574  00BF               	movwf	?_fround+1
  5513  1575  0824               	movf	?___flmul,w
  5514  1576  00BE               	movwf	?_fround
  5515  1577                     l297:
  5516  1577  0008               	return
  5517  1578                     __end_of_fround:
  5518                           
  5519                           	psect	text7
  5520  1A01                     __ptext7:	
  5521 ;; *************** function ___lwmod *****************
  5522 ;; Defined at:
  5523 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  divisor         2    0[COMMON] unsigned int 
  5526 ;;  dividend        2    2[COMMON] unsigned int 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  counter         1    5[COMMON] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  2    0[COMMON] unsigned int 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5538 ;;      Params:         4       0       0       0       0
  5539 ;;      Locals:         1       0       0       0       0
  5540 ;;      Temps:          1       0       0       0       0
  5541 ;;      Totals:         6       0       0       0       0
  5542 ;;Total ram usage:        6 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_fround
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           
  5552                           ;psect for function ___lwmod
  5553  1A01                     ___lwmod:
  5554  1A01                     l2628:	
  5555                           ;incstack = 0
  5556                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5557                           
  5558  1A01  0870               	movf	___lwmod@divisor,w
  5559  1A02  0471               	iorwf	___lwmod@divisor+1,w
  5560  1A03  1903               	btfsc	3,2
  5561  1A04  2A06               	goto	u3551
  5562  1A05  2A07               	goto	u3550
  5563  1A06                     u3551:
  5564  1A06  2A36               	goto	l2646
  5565  1A07                     u3550:
  5566  1A07                     l2630:
  5567  1A07  01F5               	clrf	___lwmod@counter
  5568  1A08  0AF5               	incf	___lwmod@counter,f
  5569  1A09  2A15               	goto	l2636
  5570  1A0A                     l2632:
  5571  1A0A  3001               	movlw	1
  5572  1A0B                     u3565:
  5573  1A0B  1003               	clrc
  5574  1A0C  0DF0               	rlf	___lwmod@divisor,f
  5575  1A0D  0DF1               	rlf	___lwmod@divisor+1,f
  5576  1A0E  3EFF               	addlw	-1
  5577  1A0F  1D03               	skipz
  5578  1A10  2A0B               	goto	u3565
  5579  1A11                     l2634:
  5580  1A11  3001               	movlw	1
  5581  1A12  00F4               	movwf	??___lwmod
  5582  1A13  0874               	movf	??___lwmod,w
  5583  1A14  07F5               	addwf	___lwmod@counter,f
  5584  1A15                     l2636:
  5585  1A15  1FF1               	btfss	___lwmod@divisor+1,7
  5586  1A16  2A18               	goto	u3571
  5587  1A17  2A19               	goto	u3570
  5588  1A18                     u3571:
  5589  1A18  2A0A               	goto	l2632
  5590  1A19                     u3570:
  5591  1A19                     l2638:
  5592  1A19  0871               	movf	___lwmod@divisor+1,w
  5593  1A1A  0273               	subwf	___lwmod@dividend+1,w
  5594  1A1B  1D03               	skipz
  5595  1A1C  2A1F               	goto	u3585
  5596  1A1D  0870               	movf	___lwmod@divisor,w
  5597  1A1E  0272               	subwf	___lwmod@dividend,w
  5598  1A1F                     u3585:
  5599  1A1F  1C03               	skipc
  5600  1A20  2A22               	goto	u3581
  5601  1A21  2A23               	goto	u3580
  5602  1A22                     u3581:
  5603  1A22  2A29               	goto	l2642
  5604  1A23                     u3580:
  5605  1A23                     l2640:
  5606  1A23  0870               	movf	___lwmod@divisor,w
  5607  1A24  02F2               	subwf	___lwmod@dividend,f
  5608  1A25  0871               	movf	___lwmod@divisor+1,w
  5609  1A26  1C03               	skipc
  5610  1A27  03F3               	decf	___lwmod@dividend+1,f
  5611  1A28  02F3               	subwf	___lwmod@dividend+1,f
  5612  1A29                     l2642:
  5613  1A29  3001               	movlw	1
  5614  1A2A                     u3595:
  5615  1A2A  1003               	clrc
  5616  1A2B  0CF1               	rrf	___lwmod@divisor+1,f
  5617  1A2C  0CF0               	rrf	___lwmod@divisor,f
  5618  1A2D  3EFF               	addlw	-1
  5619  1A2E  1D03               	skipz
  5620  1A2F  2A2A               	goto	u3595
  5621  1A30                     l2644:
  5622  1A30  3001               	movlw	1
  5623  1A31  02F5               	subwf	___lwmod@counter,f
  5624  1A32  1D03               	btfss	3,2
  5625  1A33  2A35               	goto	u3601
  5626  1A34  2A36               	goto	u3600
  5627  1A35                     u3601:
  5628  1A35  2A19               	goto	l2638
  5629  1A36                     u3600:
  5630  1A36                     l2646:
  5631  1A36  0873               	movf	___lwmod@dividend+1,w
  5632  1A37  00F1               	movwf	?___lwmod+1
  5633  1A38  0872               	movf	___lwmod@dividend,w
  5634  1A39  00F0               	movwf	?___lwmod
  5635  1A3A                     l699:
  5636  1A3A  0008               	return
  5637  1A3B                     __end_of___lwmod:
  5638                           
  5639                           	psect	text8
  5640  1ABB                     __ptext8:	
  5641 ;; *************** function ___lwdiv *****************
  5642 ;; Defined at:
  5643 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  divisor         2    6[COMMON] unsigned int 
  5646 ;;  dividend        2    8[COMMON] unsigned int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  quotient        2   11[COMMON] unsigned int 
  5649 ;;  counter         1   13[COMMON] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  2    6[COMMON] unsigned int 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5659 ;;      Params:         4       0       0       0       0
  5660 ;;      Locals:         3       0       0       0       0
  5661 ;;      Temps:          1       0       0       0       0
  5662 ;;      Totals:         8       0       0       0       0
  5663 ;;Total ram usage:        8 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_fround
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           
  5673                           ;psect for function ___lwdiv
  5674  1ABB                     ___lwdiv:
  5675  1ABB                     l2602:	
  5676                           ;incstack = 0
  5677                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5678                           
  5679  1ABB  01FB               	clrf	___lwdiv@quotient
  5680  1ABC  01FC               	clrf	___lwdiv@quotient+1
  5681  1ABD                     l2604:
  5682  1ABD  0876               	movf	___lwdiv@divisor,w
  5683  1ABE  0477               	iorwf	___lwdiv@divisor+1,w
  5684  1ABF  1903               	btfsc	3,2
  5685  1AC0  2AC2               	goto	u3481
  5686  1AC1  2AC3               	goto	u3480
  5687  1AC2                     u3481:
  5688  1AC2  2AFA               	goto	l2624
  5689  1AC3                     u3480:
  5690  1AC3                     l2606:
  5691  1AC3  01FD               	clrf	___lwdiv@counter
  5692  1AC4  0AFD               	incf	___lwdiv@counter,f
  5693  1AC5  2AD1               	goto	l2612
  5694  1AC6                     l2608:
  5695  1AC6  3001               	movlw	1
  5696  1AC7                     u3495:
  5697  1AC7  1003               	clrc
  5698  1AC8  0DF6               	rlf	___lwdiv@divisor,f
  5699  1AC9  0DF7               	rlf	___lwdiv@divisor+1,f
  5700  1ACA  3EFF               	addlw	-1
  5701  1ACB  1D03               	skipz
  5702  1ACC  2AC7               	goto	u3495
  5703  1ACD                     l2610:
  5704  1ACD  3001               	movlw	1
  5705  1ACE  00FA               	movwf	??___lwdiv
  5706  1ACF  087A               	movf	??___lwdiv,w
  5707  1AD0  07FD               	addwf	___lwdiv@counter,f
  5708  1AD1                     l2612:
  5709  1AD1  1FF7               	btfss	___lwdiv@divisor+1,7
  5710  1AD2  2AD4               	goto	u3501
  5711  1AD3  2AD5               	goto	u3500
  5712  1AD4                     u3501:
  5713  1AD4  2AC6               	goto	l2608
  5714  1AD5                     u3500:
  5715  1AD5                     l2614:
  5716  1AD5  3001               	movlw	1
  5717  1AD6                     u3515:
  5718  1AD6  1003               	clrc
  5719  1AD7  0DFB               	rlf	___lwdiv@quotient,f
  5720  1AD8  0DFC               	rlf	___lwdiv@quotient+1,f
  5721  1AD9  3EFF               	addlw	-1
  5722  1ADA  1D03               	skipz
  5723  1ADB  2AD6               	goto	u3515
  5724  1ADC  0877               	movf	___lwdiv@divisor+1,w
  5725  1ADD  0279               	subwf	___lwdiv@dividend+1,w
  5726  1ADE  1D03               	skipz
  5727  1ADF  2AE2               	goto	u3525
  5728  1AE0  0876               	movf	___lwdiv@divisor,w
  5729  1AE1  0278               	subwf	___lwdiv@dividend,w
  5730  1AE2                     u3525:
  5731  1AE2  1C03               	skipc
  5732  1AE3  2AE5               	goto	u3521
  5733  1AE4  2AE6               	goto	u3520
  5734  1AE5                     u3521:
  5735  1AE5  2AED               	goto	l2620
  5736  1AE6                     u3520:
  5737  1AE6                     l2616:
  5738  1AE6  0876               	movf	___lwdiv@divisor,w
  5739  1AE7  02F8               	subwf	___lwdiv@dividend,f
  5740  1AE8  0877               	movf	___lwdiv@divisor+1,w
  5741  1AE9  1C03               	skipc
  5742  1AEA  03F9               	decf	___lwdiv@dividend+1,f
  5743  1AEB  02F9               	subwf	___lwdiv@dividend+1,f
  5744  1AEC                     l2618:
  5745  1AEC  147B               	bsf	___lwdiv@quotient,0
  5746  1AED                     l2620:
  5747  1AED  3001               	movlw	1
  5748  1AEE                     u3535:
  5749  1AEE  1003               	clrc
  5750  1AEF  0CF7               	rrf	___lwdiv@divisor+1,f
  5751  1AF0  0CF6               	rrf	___lwdiv@divisor,f
  5752  1AF1  3EFF               	addlw	-1
  5753  1AF2  1D03               	skipz
  5754  1AF3  2AEE               	goto	u3535
  5755  1AF4                     l2622:
  5756  1AF4  3001               	movlw	1
  5757  1AF5  02FD               	subwf	___lwdiv@counter,f
  5758  1AF6  1D03               	btfss	3,2
  5759  1AF7  2AF9               	goto	u3541
  5760  1AF8  2AFA               	goto	u3540
  5761  1AF9                     u3541:
  5762  1AF9  2AD5               	goto	l2614
  5763  1AFA                     u3540:
  5764  1AFA                     l2624:
  5765  1AFA  087C               	movf	___lwdiv@quotient+1,w
  5766  1AFB  00F7               	movwf	?___lwdiv+1
  5767  1AFC  087B               	movf	___lwdiv@quotient,w
  5768  1AFD  00F6               	movwf	?___lwdiv
  5769  1AFE                     l689:
  5770  1AFE  0008               	return
  5771  1AFF                     __end_of___lwdiv:
  5772                           
  5773                           	psect	text9
  5774  0C9F                     __ptext9:	
  5775 ;; *************** function ___flmul *****************
  5776 ;; Defined at:
  5777 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  b               4    4[BANK0 ] unsigned int 
  5780 ;;  a               4    8[BANK0 ] unsigned int 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  prod            4   24[BANK0 ] struct .
  5783 ;;  grs             4   18[BANK0 ] unsigned long 
  5784 ;;  temp            2   28[BANK0 ] struct .
  5785 ;;  bexp            1   23[BANK0 ] unsigned char 
  5786 ;;  aexp            1   22[BANK0 ] unsigned char 
  5787 ;;  sign            1   17[BANK0 ] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  4    4[BANK0 ] unsigned char 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5797 ;;      Params:         0       8       0       0       0
  5798 ;;      Locals:         0      13       0       0       0
  5799 ;;      Temps:          0       5       0       0       0
  5800 ;;      Totals:         0      26       0       0       0
  5801 ;;Total ram usage:       26 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    1
  5804 ;; This function calls:
  5805 ;;		__Umul8_16
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;;		_fround
  5809 ;;		_scale
  5810 ;;		_sprintf
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           
  5815                           ;psect for function ___flmul
  5816  0C9F                     ___flmul:
  5817  0C9F                     l2844:	
  5818                           ;incstack = 0
  5819                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5820                           
  5821  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5822  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5823  0CA1  0827               	movf	___flmul@b+3,w
  5824  0CA2  3980               	andlw	128
  5825  0CA3  00AC               	movwf	??___flmul
  5826  0CA4  082C               	movf	??___flmul,w
  5827  0CA5  00B1               	movwf	___flmul@sign
  5828  0CA6                     l2846:
  5829  0CA6  0827               	movf	___flmul@b+3,w
  5830  0CA7  00AC               	movwf	??___flmul
  5831  0CA8  072C               	addwf	??___flmul,w
  5832  0CA9  00AD               	movwf	??___flmul+1
  5833  0CAA  082D               	movf	??___flmul+1,w
  5834  0CAB  00B7               	movwf	___flmul@bexp
  5835  0CAC                     l2848:
  5836  0CAC  1FA6               	btfss	___flmul@b+2,7
  5837  0CAD  2CAF               	goto	u4071
  5838  0CAE  2CB0               	goto	u4070
  5839  0CAF                     u4071:
  5840  0CAF  2CB1               	goto	l2852
  5841  0CB0                     u4070:
  5842  0CB0                     l2850:
  5843  0CB0  1437               	bsf	___flmul@bexp,0
  5844  0CB1                     l2852:
  5845  0CB1  0837               	movf	___flmul@bexp,w
  5846  0CB2  1903               	btfsc	3,2
  5847  0CB3  2CB5               	goto	u4081
  5848  0CB4  2CB6               	goto	u4080
  5849  0CB5                     u4081:
  5850  0CB5  2CC5               	goto	l2860
  5851  0CB6                     u4080:
  5852  0CB6                     l2854:
  5853  0CB6  0A37               	incf	___flmul@bexp,w
  5854  0CB7  1D03               	btfss	3,2
  5855  0CB8  2CBA               	goto	u4091
  5856  0CB9  2CBB               	goto	u4090
  5857  0CBA                     u4091:
  5858  0CBA  2CC3               	goto	l2858
  5859  0CBB                     u4090:
  5860  0CBB                     l2856:
  5861  0CBB  3000               	movlw	0
  5862  0CBC  00A7               	movwf	___flmul@b+3
  5863  0CBD  3000               	movlw	0
  5864  0CBE  00A6               	movwf	___flmul@b+2
  5865  0CBF  3000               	movlw	0
  5866  0CC0  00A5               	movwf	___flmul@b+1
  5867  0CC1  3000               	movlw	0
  5868  0CC2  00A4               	movwf	___flmul@b
  5869  0CC3                     l2858:
  5870  0CC3  17A6               	bsf	___flmul@b+2,7
  5871  0CC4  2CCD               	goto	l2862
  5872  0CC5                     l2860:
  5873  0CC5  3000               	movlw	0
  5874  0CC6  00A7               	movwf	___flmul@b+3
  5875  0CC7  3000               	movlw	0
  5876  0CC8  00A6               	movwf	___flmul@b+2
  5877  0CC9  3000               	movlw	0
  5878  0CCA  00A5               	movwf	___flmul@b+1
  5879  0CCB  3000               	movlw	0
  5880  0CCC  00A4               	movwf	___flmul@b
  5881  0CCD                     l2862:
  5882  0CCD  082B               	movf	___flmul@a+3,w
  5883  0CCE  3980               	andlw	128
  5884  0CCF  00AC               	movwf	??___flmul
  5885  0CD0  082C               	movf	??___flmul,w
  5886  0CD1  06B1               	xorwf	___flmul@sign,f
  5887  0CD2                     l2864:
  5888  0CD2  082B               	movf	___flmul@a+3,w
  5889  0CD3  00AC               	movwf	??___flmul
  5890  0CD4  072C               	addwf	??___flmul,w
  5891  0CD5  00AD               	movwf	??___flmul+1
  5892  0CD6  082D               	movf	??___flmul+1,w
  5893  0CD7  00B6               	movwf	___flmul@aexp
  5894  0CD8                     l2866:
  5895  0CD8  1FAA               	btfss	___flmul@a+2,7
  5896  0CD9  2CDB               	goto	u4101
  5897  0CDA  2CDC               	goto	u4100
  5898  0CDB                     u4101:
  5899  0CDB  2CDD               	goto	l2870
  5900  0CDC                     u4100:
  5901  0CDC                     l2868:
  5902  0CDC  1436               	bsf	___flmul@aexp,0
  5903  0CDD                     l2870:
  5904  0CDD  0836               	movf	___flmul@aexp,w
  5905  0CDE  1903               	btfsc	3,2
  5906  0CDF  2CE1               	goto	u4111
  5907  0CE0  2CE2               	goto	u4110
  5908  0CE1                     u4111:
  5909  0CE1  2CF1               	goto	l2878
  5910  0CE2                     u4110:
  5911  0CE2                     l2872:
  5912  0CE2  0A36               	incf	___flmul@aexp,w
  5913  0CE3  1D03               	btfss	3,2
  5914  0CE4  2CE6               	goto	u4121
  5915  0CE5  2CE7               	goto	u4120
  5916  0CE6                     u4121:
  5917  0CE6  2CEF               	goto	l2876
  5918  0CE7                     u4120:
  5919  0CE7                     l2874:
  5920  0CE7  3000               	movlw	0
  5921  0CE8  00AB               	movwf	___flmul@a+3
  5922  0CE9  3000               	movlw	0
  5923  0CEA  00AA               	movwf	___flmul@a+2
  5924  0CEB  3000               	movlw	0
  5925  0CEC  00A9               	movwf	___flmul@a+1
  5926  0CED  3000               	movlw	0
  5927  0CEE  00A8               	movwf	___flmul@a
  5928  0CEF                     l2876:
  5929  0CEF  17AA               	bsf	___flmul@a+2,7
  5930  0CF0  2CF9               	goto	l2880
  5931  0CF1                     l2878:
  5932  0CF1  3000               	movlw	0
  5933  0CF2  00AB               	movwf	___flmul@a+3
  5934  0CF3  3000               	movlw	0
  5935  0CF4  00AA               	movwf	___flmul@a+2
  5936  0CF5  3000               	movlw	0
  5937  0CF6  00A9               	movwf	___flmul@a+1
  5938  0CF7  3000               	movlw	0
  5939  0CF8  00A8               	movwf	___flmul@a
  5940  0CF9                     l2880:
  5941  0CF9  0836               	movf	___flmul@aexp,w
  5942  0CFA  1903               	btfsc	3,2
  5943  0CFB  2CFD               	goto	u4131
  5944  0CFC  2CFE               	goto	u4130
  5945  0CFD                     u4131:
  5946  0CFD  2D03               	goto	l2884
  5947  0CFE                     u4130:
  5948  0CFE                     l2882:
  5949  0CFE  0837               	movf	___flmul@bexp,w
  5950  0CFF  1D03               	btfss	3,2
  5951  0D00  2D02               	goto	u4141
  5952  0D01  2D03               	goto	u4140
  5953  0D02                     u4141:
  5954  0D02  2D0C               	goto	l2888
  5955  0D03                     u4140:
  5956  0D03                     l2884:
  5957  0D03  3000               	movlw	0
  5958  0D04  00A7               	movwf	?___flmul+3
  5959  0D05  3000               	movlw	0
  5960  0D06  00A6               	movwf	?___flmul+2
  5961  0D07  3000               	movlw	0
  5962  0D08  00A5               	movwf	?___flmul+1
  5963  0D09  3000               	movlw	0
  5964  0D0A  00A4               	movwf	?___flmul
  5965  0D0B  2FFF               	goto	l806
  5966  0D0C                     l2888:
  5967  0D0C  0824               	movf	___flmul@b,w
  5968  0D0D  00AC               	movwf	??___flmul
  5969  0D0E  082C               	movf	??___flmul,w
  5970  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5971  0D10  082A               	movf	___flmul@a+2,w
  5972  0D11  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  5973  0D16  0871               	movf	?__Umul8_16+1,w
  5974  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5975  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5976  0D19  00BD               	movwf	___flmul@temp+1
  5977  0D1A  0870               	movf	?__Umul8_16,w
  5978  0D1B  00BC               	movwf	___flmul@temp
  5979  0D1C                     l2890:
  5980  0D1C  083C               	movf	___flmul@temp,w
  5981  0D1D  00AC               	movwf	??___flmul
  5982  0D1E  01AD               	clrf	??___flmul+1
  5983  0D1F  01AE               	clrf	??___flmul+2
  5984  0D20  01AF               	clrf	??___flmul+3
  5985  0D21  082F               	movf	??___flmul+3,w
  5986  0D22  00B5               	movwf	___flmul@grs+3
  5987  0D23  082E               	movf	??___flmul+2,w
  5988  0D24  00B4               	movwf	___flmul@grs+2
  5989  0D25  082D               	movf	??___flmul+1,w
  5990  0D26  00B3               	movwf	___flmul@grs+1
  5991  0D27  082C               	movf	??___flmul,w
  5992  0D28  00B2               	movwf	___flmul@grs
  5993  0D29                     l2892:
  5994  0D29  083D               	movf	___flmul@temp+1,w
  5995  0D2A  00AC               	movwf	??___flmul
  5996  0D2B  01AD               	clrf	??___flmul+1
  5997  0D2C  01AE               	clrf	??___flmul+2
  5998  0D2D  01AF               	clrf	??___flmul+3
  5999  0D2E  082F               	movf	??___flmul+3,w
  6000  0D2F  00BB               	movwf	___flmul@prod+3
  6001  0D30  082E               	movf	??___flmul+2,w
  6002  0D31  00BA               	movwf	___flmul@prod+2
  6003  0D32  082D               	movf	??___flmul+1,w
  6004  0D33  00B9               	movwf	___flmul@prod+1
  6005  0D34  082C               	movf	??___flmul,w
  6006  0D35  00B8               	movwf	___flmul@prod
  6007  0D36  0825               	movf	___flmul@b+1,w
  6008  0D37  00AC               	movwf	??___flmul
  6009  0D38  082C               	movf	??___flmul,w
  6010  0D39  00F0               	movwf	__Umul8_16@multiplicand
  6011  0D3A  0829               	movf	___flmul@a+1,w
  6012  0D3B  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6013  0D40  0871               	movf	?__Umul8_16+1,w
  6014  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6015  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6016  0D43  00BD               	movwf	___flmul@temp+1
  6017  0D44  0870               	movf	?__Umul8_16,w
  6018  0D45  00BC               	movwf	___flmul@temp
  6019  0D46                     l2894:
  6020  0D46  083C               	movf	___flmul@temp,w
  6021  0D47  00AC               	movwf	??___flmul
  6022  0D48  01AD               	clrf	??___flmul+1
  6023  0D49  01AE               	clrf	??___flmul+2
  6024  0D4A  01AF               	clrf	??___flmul+3
  6025  0D4B  082C               	movf	??___flmul,w
  6026  0D4C  07B2               	addwf	___flmul@grs,f
  6027  0D4D  082D               	movf	??___flmul+1,w
  6028  0D4E  1103               	clrz
  6029  0D4F  1803               	skipnc
  6030  0D50  3E01               	addlw	1
  6031  0D51  1903               	skipnz
  6032  0D52  2D54               	goto	u4151
  6033  0D53  07B3               	addwf	___flmul@grs+1,f
  6034  0D54                     u4151:
  6035  0D54  082E               	movf	??___flmul+2,w
  6036  0D55  1103               	clrz
  6037  0D56  1803               	skipnc
  6038  0D57  3E01               	addlw	1
  6039  0D58  1903               	skipnz
  6040  0D59  2D5B               	goto	u4152
  6041  0D5A  07B4               	addwf	___flmul@grs+2,f
  6042  0D5B                     u4152:
  6043  0D5B  082F               	movf	??___flmul+3,w
  6044  0D5C  1103               	clrz
  6045  0D5D  1803               	skipnc
  6046  0D5E  3E01               	addlw	1
  6047  0D5F  1903               	skipnz
  6048  0D60  2D62               	goto	u4153
  6049  0D61  07B5               	addwf	___flmul@grs+3,f
  6050  0D62                     u4153:
  6051  0D62                     l2896:
  6052  0D62  083D               	movf	___flmul@temp+1,w
  6053  0D63  00AC               	movwf	??___flmul
  6054  0D64  01AD               	clrf	??___flmul+1
  6055  0D65  01AE               	clrf	??___flmul+2
  6056  0D66  01AF               	clrf	??___flmul+3
  6057  0D67  082C               	movf	??___flmul,w
  6058  0D68  07B8               	addwf	___flmul@prod,f
  6059  0D69  082D               	movf	??___flmul+1,w
  6060  0D6A  1103               	clrz
  6061  0D6B  1803               	skipnc
  6062  0D6C  3E01               	addlw	1
  6063  0D6D  1903               	skipnz
  6064  0D6E  2D70               	goto	u4161
  6065  0D6F  07B9               	addwf	___flmul@prod+1,f
  6066  0D70                     u4161:
  6067  0D70  082E               	movf	??___flmul+2,w
  6068  0D71  1103               	clrz
  6069  0D72  1803               	skipnc
  6070  0D73  3E01               	addlw	1
  6071  0D74  1903               	skipnz
  6072  0D75  2D77               	goto	u4162
  6073  0D76  07BA               	addwf	___flmul@prod+2,f
  6074  0D77                     u4162:
  6075  0D77  082F               	movf	??___flmul+3,w
  6076  0D78  1103               	clrz
  6077  0D79  1803               	skipnc
  6078  0D7A  3E01               	addlw	1
  6079  0D7B  1903               	skipnz
  6080  0D7C  2D7E               	goto	u4163
  6081  0D7D  07BB               	addwf	___flmul@prod+3,f
  6082  0D7E                     u4163:
  6083  0D7E  0826               	movf	___flmul@b+2,w
  6084  0D7F  00AC               	movwf	??___flmul
  6085  0D80  082C               	movf	??___flmul,w
  6086  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6087  0D82  0828               	movf	___flmul@a,w
  6088  0D83  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6089  0D88  0871               	movf	?__Umul8_16+1,w
  6090  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6091  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6092  0D8B  00BD               	movwf	___flmul@temp+1
  6093  0D8C  0870               	movf	?__Umul8_16,w
  6094  0D8D  00BC               	movwf	___flmul@temp
  6095  0D8E                     l2898:
  6096  0D8E  083C               	movf	___flmul@temp,w
  6097  0D8F  00AC               	movwf	??___flmul
  6098  0D90  01AD               	clrf	??___flmul+1
  6099  0D91  01AE               	clrf	??___flmul+2
  6100  0D92  01AF               	clrf	??___flmul+3
  6101  0D93  082C               	movf	??___flmul,w
  6102  0D94  07B2               	addwf	___flmul@grs,f
  6103  0D95  082D               	movf	??___flmul+1,w
  6104  0D96  1103               	clrz
  6105  0D97  1803               	skipnc
  6106  0D98  3E01               	addlw	1
  6107  0D99  1903               	skipnz
  6108  0D9A  2D9C               	goto	u4171
  6109  0D9B  07B3               	addwf	___flmul@grs+1,f
  6110  0D9C                     u4171:
  6111  0D9C  082E               	movf	??___flmul+2,w
  6112  0D9D  1103               	clrz
  6113  0D9E  1803               	skipnc
  6114  0D9F  3E01               	addlw	1
  6115  0DA0  1903               	skipnz
  6116  0DA1  2DA3               	goto	u4172
  6117  0DA2  07B4               	addwf	___flmul@grs+2,f
  6118  0DA3                     u4172:
  6119  0DA3  082F               	movf	??___flmul+3,w
  6120  0DA4  1103               	clrz
  6121  0DA5  1803               	skipnc
  6122  0DA6  3E01               	addlw	1
  6123  0DA7  1903               	skipnz
  6124  0DA8  2DAA               	goto	u4173
  6125  0DA9  07B5               	addwf	___flmul@grs+3,f
  6126  0DAA                     u4173:
  6127  0DAA                     l2900:
  6128  0DAA  083D               	movf	___flmul@temp+1,w
  6129  0DAB  00AC               	movwf	??___flmul
  6130  0DAC  01AD               	clrf	??___flmul+1
  6131  0DAD  01AE               	clrf	??___flmul+2
  6132  0DAE  01AF               	clrf	??___flmul+3
  6133  0DAF  082C               	movf	??___flmul,w
  6134  0DB0  07B8               	addwf	___flmul@prod,f
  6135  0DB1  082D               	movf	??___flmul+1,w
  6136  0DB2  1103               	clrz
  6137  0DB3  1803               	skipnc
  6138  0DB4  3E01               	addlw	1
  6139  0DB5  1903               	skipnz
  6140  0DB6  2DB8               	goto	u4181
  6141  0DB7  07B9               	addwf	___flmul@prod+1,f
  6142  0DB8                     u4181:
  6143  0DB8  082E               	movf	??___flmul+2,w
  6144  0DB9  1103               	clrz
  6145  0DBA  1803               	skipnc
  6146  0DBB  3E01               	addlw	1
  6147  0DBC  1903               	skipnz
  6148  0DBD  2DBF               	goto	u4182
  6149  0DBE  07BA               	addwf	___flmul@prod+2,f
  6150  0DBF                     u4182:
  6151  0DBF  082F               	movf	??___flmul+3,w
  6152  0DC0  1103               	clrz
  6153  0DC1  1803               	skipnc
  6154  0DC2  3E01               	addlw	1
  6155  0DC3  1903               	skipnz
  6156  0DC4  2DC6               	goto	u4183
  6157  0DC5  07BB               	addwf	___flmul@prod+3,f
  6158  0DC6                     u4183:
  6159  0DC6                     l2902:
  6160  0DC6  3008               	movlw	8
  6161  0DC7  00AC               	movwf	??___flmul
  6162  0DC8                     u4195:
  6163  0DC8  1003               	clrc
  6164  0DC9  0DB2               	rlf	___flmul@grs,f
  6165  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6166  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6167  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6168  0DCD  0BAC               	decfsz	??___flmul,f
  6169  0DCE  2DC8               	goto	u4195
  6170  0DCF                     l2904:
  6171  0DCF  0825               	movf	___flmul@b+1,w
  6172  0DD0  00AC               	movwf	??___flmul
  6173  0DD1  082C               	movf	??___flmul,w
  6174  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6175  0DD3  0828               	movf	___flmul@a,w
  6176  0DD4  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6177  0DD9  0871               	movf	?__Umul8_16+1,w
  6178  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6179  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6180  0DDC  00BD               	movwf	___flmul@temp+1
  6181  0DDD  0870               	movf	?__Umul8_16,w
  6182  0DDE  00BC               	movwf	___flmul@temp
  6183  0DDF                     l2906:
  6184  0DDF  083C               	movf	___flmul@temp,w
  6185  0DE0  00AC               	movwf	??___flmul
  6186  0DE1  083D               	movf	___flmul@temp+1,w
  6187  0DE2  00AD               	movwf	??___flmul+1
  6188  0DE3  01AE               	clrf	??___flmul+2
  6189  0DE4  01AF               	clrf	??___flmul+3
  6190  0DE5  082C               	movf	??___flmul,w
  6191  0DE6  07B2               	addwf	___flmul@grs,f
  6192  0DE7  082D               	movf	??___flmul+1,w
  6193  0DE8  1103               	clrz
  6194  0DE9  1803               	skipnc
  6195  0DEA  3E01               	addlw	1
  6196  0DEB  1903               	skipnz
  6197  0DEC  2DEE               	goto	u4201
  6198  0DED  07B3               	addwf	___flmul@grs+1,f
  6199  0DEE                     u4201:
  6200  0DEE  082E               	movf	??___flmul+2,w
  6201  0DEF  1103               	clrz
  6202  0DF0  1803               	skipnc
  6203  0DF1  3E01               	addlw	1
  6204  0DF2  1903               	skipnz
  6205  0DF3  2DF5               	goto	u4202
  6206  0DF4  07B4               	addwf	___flmul@grs+2,f
  6207  0DF5                     u4202:
  6208  0DF5  082F               	movf	??___flmul+3,w
  6209  0DF6  1103               	clrz
  6210  0DF7  1803               	skipnc
  6211  0DF8  3E01               	addlw	1
  6212  0DF9  1903               	skipnz
  6213  0DFA  2DFC               	goto	u4203
  6214  0DFB  07B5               	addwf	___flmul@grs+3,f
  6215  0DFC                     u4203:
  6216  0DFC                     l2908:
  6217  0DFC  0824               	movf	___flmul@b,w
  6218  0DFD  00AC               	movwf	??___flmul
  6219  0DFE  082C               	movf	??___flmul,w
  6220  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6221  0E00  0829               	movf	___flmul@a+1,w
  6222  0E01  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6223  0E06  0871               	movf	?__Umul8_16+1,w
  6224  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6225  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6226  0E09  00BD               	movwf	___flmul@temp+1
  6227  0E0A  0870               	movf	?__Umul8_16,w
  6228  0E0B  00BC               	movwf	___flmul@temp
  6229  0E0C                     l2910:
  6230  0E0C  083C               	movf	___flmul@temp,w
  6231  0E0D  00AC               	movwf	??___flmul
  6232  0E0E  083D               	movf	___flmul@temp+1,w
  6233  0E0F  00AD               	movwf	??___flmul+1
  6234  0E10  01AE               	clrf	??___flmul+2
  6235  0E11  01AF               	clrf	??___flmul+3
  6236  0E12  082C               	movf	??___flmul,w
  6237  0E13  07B2               	addwf	___flmul@grs,f
  6238  0E14  082D               	movf	??___flmul+1,w
  6239  0E15  1103               	clrz
  6240  0E16  1803               	skipnc
  6241  0E17  3E01               	addlw	1
  6242  0E18  1903               	skipnz
  6243  0E19  2E1B               	goto	u4211
  6244  0E1A  07B3               	addwf	___flmul@grs+1,f
  6245  0E1B                     u4211:
  6246  0E1B  082E               	movf	??___flmul+2,w
  6247  0E1C  1103               	clrz
  6248  0E1D  1803               	skipnc
  6249  0E1E  3E01               	addlw	1
  6250  0E1F  1903               	skipnz
  6251  0E20  2E22               	goto	u4212
  6252  0E21  07B4               	addwf	___flmul@grs+2,f
  6253  0E22                     u4212:
  6254  0E22  082F               	movf	??___flmul+3,w
  6255  0E23  1103               	clrz
  6256  0E24  1803               	skipnc
  6257  0E25  3E01               	addlw	1
  6258  0E26  1903               	skipnz
  6259  0E27  2E29               	goto	u4213
  6260  0E28  07B5               	addwf	___flmul@grs+3,f
  6261  0E29                     u4213:
  6262  0E29                     l2912:
  6263  0E29  3008               	movlw	8
  6264  0E2A  00AC               	movwf	??___flmul
  6265  0E2B                     u4225:
  6266  0E2B  1003               	clrc
  6267  0E2C  0DB2               	rlf	___flmul@grs,f
  6268  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6269  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6270  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6271  0E30  0BAC               	decfsz	??___flmul,f
  6272  0E31  2E2B               	goto	u4225
  6273  0E32  0824               	movf	___flmul@b,w
  6274  0E33  00AC               	movwf	??___flmul
  6275  0E34  082C               	movf	??___flmul,w
  6276  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6277  0E36  0828               	movf	___flmul@a,w
  6278  0E37  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6279  0E3C  0871               	movf	?__Umul8_16+1,w
  6280  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6281  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6282  0E3F  00BD               	movwf	___flmul@temp+1
  6283  0E40  0870               	movf	?__Umul8_16,w
  6284  0E41  00BC               	movwf	___flmul@temp
  6285  0E42                     l2914:
  6286  0E42  083C               	movf	___flmul@temp,w
  6287  0E43  00AC               	movwf	??___flmul
  6288  0E44  083D               	movf	___flmul@temp+1,w
  6289  0E45  00AD               	movwf	??___flmul+1
  6290  0E46  01AE               	clrf	??___flmul+2
  6291  0E47  01AF               	clrf	??___flmul+3
  6292  0E48  082C               	movf	??___flmul,w
  6293  0E49  07B2               	addwf	___flmul@grs,f
  6294  0E4A  082D               	movf	??___flmul+1,w
  6295  0E4B  1103               	clrz
  6296  0E4C  1803               	skipnc
  6297  0E4D  3E01               	addlw	1
  6298  0E4E  1903               	skipnz
  6299  0E4F  2E51               	goto	u4231
  6300  0E50  07B3               	addwf	___flmul@grs+1,f
  6301  0E51                     u4231:
  6302  0E51  082E               	movf	??___flmul+2,w
  6303  0E52  1103               	clrz
  6304  0E53  1803               	skipnc
  6305  0E54  3E01               	addlw	1
  6306  0E55  1903               	skipnz
  6307  0E56  2E58               	goto	u4232
  6308  0E57  07B4               	addwf	___flmul@grs+2,f
  6309  0E58                     u4232:
  6310  0E58  082F               	movf	??___flmul+3,w
  6311  0E59  1103               	clrz
  6312  0E5A  1803               	skipnc
  6313  0E5B  3E01               	addlw	1
  6314  0E5C  1903               	skipnz
  6315  0E5D  2E5F               	goto	u4233
  6316  0E5E  07B5               	addwf	___flmul@grs+3,f
  6317  0E5F                     u4233:
  6318  0E5F                     l2916:
  6319  0E5F  0825               	movf	___flmul@b+1,w
  6320  0E60  00AC               	movwf	??___flmul
  6321  0E61  082C               	movf	??___flmul,w
  6322  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6323  0E63  082A               	movf	___flmul@a+2,w
  6324  0E64  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6325  0E69  0871               	movf	?__Umul8_16+1,w
  6326  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6327  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6328  0E6C  00BD               	movwf	___flmul@temp+1
  6329  0E6D  0870               	movf	?__Umul8_16,w
  6330  0E6E  00BC               	movwf	___flmul@temp
  6331  0E6F  083C               	movf	___flmul@temp,w
  6332  0E70  00AC               	movwf	??___flmul
  6333  0E71  083D               	movf	___flmul@temp+1,w
  6334  0E72  00AD               	movwf	??___flmul+1
  6335  0E73  01AE               	clrf	??___flmul+2
  6336  0E74  01AF               	clrf	??___flmul+3
  6337  0E75  082C               	movf	??___flmul,w
  6338  0E76  07B8               	addwf	___flmul@prod,f
  6339  0E77  082D               	movf	??___flmul+1,w
  6340  0E78  1103               	clrz
  6341  0E79  1803               	skipnc
  6342  0E7A  3E01               	addlw	1
  6343  0E7B  1903               	skipnz
  6344  0E7C  2E7E               	goto	u4241
  6345  0E7D  07B9               	addwf	___flmul@prod+1,f
  6346  0E7E                     u4241:
  6347  0E7E  082E               	movf	??___flmul+2,w
  6348  0E7F  1103               	clrz
  6349  0E80  1803               	skipnc
  6350  0E81  3E01               	addlw	1
  6351  0E82  1903               	skipnz
  6352  0E83  2E85               	goto	u4242
  6353  0E84  07BA               	addwf	___flmul@prod+2,f
  6354  0E85                     u4242:
  6355  0E85  082F               	movf	??___flmul+3,w
  6356  0E86  1103               	clrz
  6357  0E87  1803               	skipnc
  6358  0E88  3E01               	addlw	1
  6359  0E89  1903               	skipnz
  6360  0E8A  2E8C               	goto	u4243
  6361  0E8B  07BB               	addwf	___flmul@prod+3,f
  6362  0E8C                     u4243:
  6363  0E8C                     l2918:
  6364  0E8C  0826               	movf	___flmul@b+2,w
  6365  0E8D  00AC               	movwf	??___flmul
  6366  0E8E  082C               	movf	??___flmul,w
  6367  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6368  0E90  0829               	movf	___flmul@a+1,w
  6369  0E91  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6370  0E96  0871               	movf	?__Umul8_16+1,w
  6371  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6372  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6373  0E99  00BD               	movwf	___flmul@temp+1
  6374  0E9A  0870               	movf	?__Umul8_16,w
  6375  0E9B  00BC               	movwf	___flmul@temp
  6376  0E9C                     l2920:
  6377  0E9C  083C               	movf	___flmul@temp,w
  6378  0E9D  00AC               	movwf	??___flmul
  6379  0E9E  083D               	movf	___flmul@temp+1,w
  6380  0E9F  00AD               	movwf	??___flmul+1
  6381  0EA0  01AE               	clrf	??___flmul+2
  6382  0EA1  01AF               	clrf	??___flmul+3
  6383  0EA2  082C               	movf	??___flmul,w
  6384  0EA3  07B8               	addwf	___flmul@prod,f
  6385  0EA4  082D               	movf	??___flmul+1,w
  6386  0EA5  1103               	clrz
  6387  0EA6  1803               	skipnc
  6388  0EA7  3E01               	addlw	1
  6389  0EA8  1903               	skipnz
  6390  0EA9  2EAB               	goto	u4251
  6391  0EAA  07B9               	addwf	___flmul@prod+1,f
  6392  0EAB                     u4251:
  6393  0EAB  082E               	movf	??___flmul+2,w
  6394  0EAC  1103               	clrz
  6395  0EAD  1803               	skipnc
  6396  0EAE  3E01               	addlw	1
  6397  0EAF  1903               	skipnz
  6398  0EB0  2EB2               	goto	u4252
  6399  0EB1  07BA               	addwf	___flmul@prod+2,f
  6400  0EB2                     u4252:
  6401  0EB2  082F               	movf	??___flmul+3,w
  6402  0EB3  1103               	clrz
  6403  0EB4  1803               	skipnc
  6404  0EB5  3E01               	addlw	1
  6405  0EB6  1903               	skipnz
  6406  0EB7  2EB9               	goto	u4253
  6407  0EB8  07BB               	addwf	___flmul@prod+3,f
  6408  0EB9                     u4253:
  6409  0EB9  0826               	movf	___flmul@b+2,w
  6410  0EBA  00AC               	movwf	??___flmul
  6411  0EBB  082C               	movf	??___flmul,w
  6412  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6413  0EBD  082A               	movf	___flmul@a+2,w
  6414  0EBE  160A  158A  213A  120A  158A  	fcall	__Umul8_16
  6415  0EC3  0871               	movf	?__Umul8_16+1,w
  6416  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6417  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6418  0EC6  00BD               	movwf	___flmul@temp+1
  6419  0EC7  0870               	movf	?__Umul8_16,w
  6420  0EC8  00BC               	movwf	___flmul@temp
  6421  0EC9                     l2922:
  6422  0EC9  083C               	movf	___flmul@temp,w
  6423  0ECA  00AC               	movwf	??___flmul
  6424  0ECB  083D               	movf	___flmul@temp+1,w
  6425  0ECC  00AD               	movwf	??___flmul+1
  6426  0ECD  01AE               	clrf	??___flmul+2
  6427  0ECE  01AF               	clrf	??___flmul+3
  6428  0ECF  3008               	movlw	8
  6429  0ED0                     u4265:
  6430  0ED0  1003               	clrc
  6431  0ED1  0DAC               	rlf	??___flmul,f
  6432  0ED2  0DAD               	rlf	??___flmul+1,f
  6433  0ED3  0DAE               	rlf	??___flmul+2,f
  6434  0ED4  0DAF               	rlf	??___flmul+3,f
  6435  0ED5                     u4260:
  6436  0ED5  3EFF               	addlw	-1
  6437  0ED6  1D03               	skipz
  6438  0ED7  2ED0               	goto	u4265
  6439  0ED8  082C               	movf	??___flmul,w
  6440  0ED9  07B8               	addwf	___flmul@prod,f
  6441  0EDA  082D               	movf	??___flmul+1,w
  6442  0EDB  1103               	clrz
  6443  0EDC  1803               	skipnc
  6444  0EDD  3E01               	addlw	1
  6445  0EDE  1903               	skipnz
  6446  0EDF  2EE1               	goto	u4271
  6447  0EE0  07B9               	addwf	___flmul@prod+1,f
  6448  0EE1                     u4271:
  6449  0EE1  082E               	movf	??___flmul+2,w
  6450  0EE2  1103               	clrz
  6451  0EE3  1803               	skipnc
  6452  0EE4  3E01               	addlw	1
  6453  0EE5  1903               	skipnz
  6454  0EE6  2EE8               	goto	u4272
  6455  0EE7  07BA               	addwf	___flmul@prod+2,f
  6456  0EE8                     u4272:
  6457  0EE8  082F               	movf	??___flmul+3,w
  6458  0EE9  1103               	clrz
  6459  0EEA  1803               	skipnc
  6460  0EEB  3E01               	addlw	1
  6461  0EEC  1903               	skipnz
  6462  0EED  2EEF               	goto	u4273
  6463  0EEE  07BB               	addwf	___flmul@prod+3,f
  6464  0EEF                     u4273:
  6465  0EEF                     l2924:
  6466  0EEF  0832               	movf	___flmul@grs,w
  6467  0EF0  00AC               	movwf	??___flmul
  6468  0EF1  0833               	movf	___flmul@grs+1,w
  6469  0EF2  00AD               	movwf	??___flmul+1
  6470  0EF3  0834               	movf	___flmul@grs+2,w
  6471  0EF4  00AE               	movwf	??___flmul+2
  6472  0EF5  0835               	movf	___flmul@grs+3,w
  6473  0EF6  00AF               	movwf	??___flmul+3
  6474  0EF7  3018               	movlw	24
  6475  0EF8                     u4285:
  6476  0EF8  1003               	clrc
  6477  0EF9  0CAF               	rrf	??___flmul+3,f
  6478  0EFA  0CAE               	rrf	??___flmul+2,f
  6479  0EFB  0CAD               	rrf	??___flmul+1,f
  6480  0EFC  0CAC               	rrf	??___flmul,f
  6481  0EFD                     u4280:
  6482  0EFD  3EFF               	addlw	-1
  6483  0EFE  1D03               	skipz
  6484  0EFF  2EF8               	goto	u4285
  6485  0F00  082C               	movf	??___flmul,w
  6486  0F01  07B8               	addwf	___flmul@prod,f
  6487  0F02  082D               	movf	??___flmul+1,w
  6488  0F03  1103               	clrz
  6489  0F04  1803               	skipnc
  6490  0F05  3E01               	addlw	1
  6491  0F06  1903               	skipnz
  6492  0F07  2F09               	goto	u4291
  6493  0F08  07B9               	addwf	___flmul@prod+1,f
  6494  0F09                     u4291:
  6495  0F09  082E               	movf	??___flmul+2,w
  6496  0F0A  1103               	clrz
  6497  0F0B  1803               	skipnc
  6498  0F0C  3E01               	addlw	1
  6499  0F0D  1903               	skipnz
  6500  0F0E  2F10               	goto	u4292
  6501  0F0F  07BA               	addwf	___flmul@prod+2,f
  6502  0F10                     u4292:
  6503  0F10  082F               	movf	??___flmul+3,w
  6504  0F11  1103               	clrz
  6505  0F12  1803               	skipnc
  6506  0F13  3E01               	addlw	1
  6507  0F14  1903               	skipnz
  6508  0F15  2F17               	goto	u4293
  6509  0F16  07BB               	addwf	___flmul@prod+3,f
  6510  0F17                     u4293:
  6511  0F17                     l2926:
  6512  0F17  3008               	movlw	8
  6513  0F18  00AC               	movwf	??___flmul
  6514  0F19                     u4305:
  6515  0F19  1003               	clrc
  6516  0F1A  0DB2               	rlf	___flmul@grs,f
  6517  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6518  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6519  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6520  0F1E  0BAC               	decfsz	??___flmul,f
  6521  0F1F  2F19               	goto	u4305
  6522  0F20                     l2928:
  6523  0F20  0837               	movf	___flmul@bexp,w
  6524  0F21  0736               	addwf	___flmul@aexp,w
  6525  0F22  00AC               	movwf	??___flmul
  6526  0F23  01AD               	clrf	??___flmul+1
  6527  0F24  0DAD               	rlf	??___flmul+1,f
  6528  0F25  082C               	movf	??___flmul,w
  6529  0F26  3E82               	addlw	130
  6530  0F27  00BC               	movwf	___flmul@temp
  6531  0F28  082D               	movf	??___flmul+1,w
  6532  0F29  1803               	skipnc
  6533  0F2A  3E01               	addlw	1
  6534  0F2B  3EFF               	addlw	255
  6535  0F2C  00BD               	movwf	___flmul@temp+1
  6536  0F2D  2F4B               	goto	l2940
  6537  0F2E                     l2930:
  6538  0F2E  3001               	movlw	1
  6539  0F2F  00AC               	movwf	??___flmul
  6540  0F30                     u4315:
  6541  0F30  1003               	clrc
  6542  0F31  0DB8               	rlf	___flmul@prod,f
  6543  0F32  0DB9               	rlf	___flmul@prod+1,f
  6544  0F33  0DBA               	rlf	___flmul@prod+2,f
  6545  0F34  0DBB               	rlf	___flmul@prod+3,f
  6546  0F35  0BAC               	decfsz	??___flmul,f
  6547  0F36  2F30               	goto	u4315
  6548  0F37                     l2932:
  6549  0F37  1FB5               	btfss	___flmul@grs+3,7
  6550  0F38  2F3A               	goto	u4321
  6551  0F39  2F3B               	goto	u4320
  6552  0F3A                     u4321:
  6553  0F3A  2F3C               	goto	l2936
  6554  0F3B                     u4320:
  6555  0F3B                     l2934:
  6556  0F3B  1438               	bsf	___flmul@prod,0
  6557  0F3C                     l2936:
  6558  0F3C  3001               	movlw	1
  6559  0F3D  00AC               	movwf	??___flmul
  6560  0F3E                     u4335:
  6561  0F3E  1003               	clrc
  6562  0F3F  0DB2               	rlf	___flmul@grs,f
  6563  0F40  0DB3               	rlf	___flmul@grs+1,f
  6564  0F41  0DB4               	rlf	___flmul@grs+2,f
  6565  0F42  0DB5               	rlf	___flmul@grs+3,f
  6566  0F43  0BAC               	decfsz	??___flmul,f
  6567  0F44  2F3E               	goto	u4335
  6568  0F45                     l2938:
  6569  0F45  30FF               	movlw	255
  6570  0F46  07BC               	addwf	___flmul@temp,f
  6571  0F47  1803               	skipnc
  6572  0F48  0ABD               	incf	___flmul@temp+1,f
  6573  0F49  30FF               	movlw	255
  6574  0F4A  07BD               	addwf	___flmul@temp+1,f
  6575  0F4B                     l2940:
  6576  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6577  0F4C  2F4E               	goto	u4341
  6578  0F4D  2F4F               	goto	u4340
  6579  0F4E                     u4341:
  6580  0F4E  2F2E               	goto	l2930
  6581  0F4F                     u4340:
  6582  0F4F                     l2942:
  6583  0F4F  01B6               	clrf	___flmul@aexp
  6584  0F50                     l2944:
  6585  0F50  1FB5               	btfss	___flmul@grs+3,7
  6586  0F51  2F53               	goto	u4351
  6587  0F52  2F54               	goto	u4350
  6588  0F53                     u4351:
  6589  0F53  2F70               	goto	l2952
  6590  0F54                     u4350:
  6591  0F54                     l2946:
  6592  0F54  30FF               	movlw	255
  6593  0F55  0532               	andwf	___flmul@grs,w
  6594  0F56  00AC               	movwf	??___flmul
  6595  0F57  30FF               	movlw	255
  6596  0F58  0533               	andwf	___flmul@grs+1,w
  6597  0F59  00AD               	movwf	??___flmul+1
  6598  0F5A  30FF               	movlw	255
  6599  0F5B  0534               	andwf	___flmul@grs+2,w
  6600  0F5C  00AE               	movwf	??___flmul+2
  6601  0F5D  307F               	movlw	127
  6602  0F5E  0535               	andwf	___flmul@grs+3,w
  6603  0F5F  00AF               	movwf	??___flmul+3
  6604  0F60  082F               	movf	??___flmul+3,w
  6605  0F61  042E               	iorwf	??___flmul+2,w
  6606  0F62  042D               	iorwf	??___flmul+1,w
  6607  0F63  042C               	iorwf	??___flmul,w
  6608  0F64  1903               	skipnz
  6609  0F65  2F67               	goto	u4361
  6610  0F66  2F68               	goto	u4360
  6611  0F67                     u4361:
  6612  0F67  2F6B               	goto	l812
  6613  0F68                     u4360:
  6614  0F68                     l2948:
  6615  0F68  01B6               	clrf	___flmul@aexp
  6616  0F69  0AB6               	incf	___flmul@aexp,f
  6617  0F6A  2F70               	goto	l2952
  6618  0F6B                     l812:
  6619  0F6B  1C38               	btfss	___flmul@prod,0
  6620  0F6C  2F6E               	goto	u4371
  6621  0F6D  2F6F               	goto	u4370
  6622  0F6E                     u4371:
  6623  0F6E  2F70               	goto	l2952
  6624  0F6F                     u4370:
  6625  0F6F  2F68               	goto	l2948
  6626  0F70                     l2952:
  6627  0F70  0836               	movf	___flmul@aexp,w
  6628  0F71  1903               	btfsc	3,2
  6629  0F72  2F74               	goto	u4381
  6630  0F73  2F75               	goto	u4380
  6631  0F74                     u4381:
  6632  0F74  2FA6               	goto	l2962
  6633  0F75                     u4380:
  6634  0F75                     l2954:
  6635  0F75  3001               	movlw	1
  6636  0F76  07B8               	addwf	___flmul@prod,f
  6637  0F77  3000               	movlw	0
  6638  0F78  1803               	skipnc
  6639  0F79  3001               	movlw	1
  6640  0F7A  07B9               	addwf	___flmul@prod+1,f
  6641  0F7B  3000               	movlw	0
  6642  0F7C  1803               	skipnc
  6643  0F7D  3001               	movlw	1
  6644  0F7E  07BA               	addwf	___flmul@prod+2,f
  6645  0F7F  3000               	movlw	0
  6646  0F80  1803               	skipnc
  6647  0F81  3001               	movlw	1
  6648  0F82  07BB               	addwf	___flmul@prod+3,f
  6649  0F83                     l2956:
  6650  0F83  1C3B               	btfss	___flmul@prod+3,0
  6651  0F84  2F86               	goto	u4391
  6652  0F85  2F87               	goto	u4390
  6653  0F86                     u4391:
  6654  0F86  2FA6               	goto	l2962
  6655  0F87                     u4390:
  6656  0F87                     l2958:
  6657  0F87  0838               	movf	___flmul@prod,w
  6658  0F88  00AC               	movwf	??___flmul
  6659  0F89  0839               	movf	___flmul@prod+1,w
  6660  0F8A  00AD               	movwf	??___flmul+1
  6661  0F8B  083A               	movf	___flmul@prod+2,w
  6662  0F8C  00AE               	movwf	??___flmul+2
  6663  0F8D  083B               	movf	___flmul@prod+3,w
  6664  0F8E  00AF               	movwf	??___flmul+3
  6665  0F8F  3001               	movlw	1
  6666  0F90  00B0               	movwf	??___flmul+4
  6667  0F91                     u4405:
  6668  0F91  0D2F               	rlf	??___flmul+3,w
  6669  0F92  0CAF               	rrf	??___flmul+3,f
  6670  0F93  0CAE               	rrf	??___flmul+2,f
  6671  0F94  0CAD               	rrf	??___flmul+1,f
  6672  0F95  0CAC               	rrf	??___flmul,f
  6673  0F96                     u4400:
  6674  0F96  0BB0               	decfsz	??___flmul+4,f
  6675  0F97  2F91               	goto	u4405
  6676  0F98  082F               	movf	??___flmul+3,w
  6677  0F99  00BB               	movwf	___flmul@prod+3
  6678  0F9A  082E               	movf	??___flmul+2,w
  6679  0F9B  00BA               	movwf	___flmul@prod+2
  6680  0F9C  082D               	movf	??___flmul+1,w
  6681  0F9D  00B9               	movwf	___flmul@prod+1
  6682  0F9E  082C               	movf	??___flmul,w
  6683  0F9F  00B8               	movwf	___flmul@prod
  6684  0FA0                     l2960:
  6685  0FA0  3001               	movlw	1
  6686  0FA1  07BC               	addwf	___flmul@temp,f
  6687  0FA2  1803               	skipnc
  6688  0FA3  0ABD               	incf	___flmul@temp+1,f
  6689  0FA4  3000               	movlw	0
  6690  0FA5  07BD               	addwf	___flmul@temp+1,f
  6691  0FA6                     l2962:
  6692  0FA6  083D               	movf	___flmul@temp+1,w
  6693  0FA7  3A80               	xorlw	128
  6694  0FA8  00FF               	movwf	btemp+1
  6695  0FA9  3080               	movlw	128
  6696  0FAA  027F               	subwf	btemp+1,w
  6697  0FAB  1D03               	skipz
  6698  0FAC  2FAF               	goto	u4415
  6699  0FAD  30FF               	movlw	255
  6700  0FAE  023C               	subwf	___flmul@temp,w
  6701  0FAF                     u4415:
  6702  0FAF  1C03               	skipc
  6703  0FB0  2FB2               	goto	u4411
  6704  0FB1  2FB3               	goto	u4410
  6705  0FB2                     u4411:
  6706  0FB2  2FBE               	goto	l2966
  6707  0FB3                     u4410:
  6708  0FB3                     l2964:
  6709  0FB3  307F               	movlw	127
  6710  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6711  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6712  0FB6  00BB               	movwf	___flmul@prod+3
  6713  0FB7  3080               	movlw	128
  6714  0FB8  00BA               	movwf	___flmul@prod+2
  6715  0FB9  3000               	movlw	0
  6716  0FBA  00B9               	movwf	___flmul@prod+1
  6717  0FBB  3000               	movlw	0
  6718  0FBC  00B8               	movwf	___flmul@prod
  6719  0FBD  2FF3               	goto	l818
  6720  0FBE                     l2966:
  6721  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6723  0FC0  083D               	movf	___flmul@temp+1,w
  6724  0FC1  3A80               	xorlw	128
  6725  0FC2  00FF               	movwf	btemp+1
  6726  0FC3  3080               	movlw	128
  6727  0FC4  027F               	subwf	btemp+1,w
  6728  0FC5  1D03               	skipz
  6729  0FC6  2FC9               	goto	u4425
  6730  0FC7  3001               	movlw	1
  6731  0FC8  023C               	subwf	___flmul@temp,w
  6732  0FC9                     u4425:
  6733  0FC9  1803               	skipnc
  6734  0FCA  2FCC               	goto	u4421
  6735  0FCB  2FCD               	goto	u4420
  6736  0FCC                     u4421:
  6737  0FCC  2FD9               	goto	l2972
  6738  0FCD                     u4420:
  6739  0FCD                     l2968:
  6740  0FCD  3000               	movlw	0
  6741  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6742  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6743  0FD0  00BB               	movwf	___flmul@prod+3
  6744  0FD1  3000               	movlw	0
  6745  0FD2  00BA               	movwf	___flmul@prod+2
  6746  0FD3  3000               	movlw	0
  6747  0FD4  00B9               	movwf	___flmul@prod+1
  6748  0FD5  3000               	movlw	0
  6749  0FD6  00B8               	movwf	___flmul@prod
  6750  0FD7                     l2970:
  6751  0FD7  01B1               	clrf	___flmul@sign
  6752  0FD8  2FF3               	goto	l818
  6753  0FD9                     l2972:
  6754  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6755  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6756  0FDB  083C               	movf	___flmul@temp,w
  6757  0FDC  00AC               	movwf	??___flmul
  6758  0FDD  082C               	movf	??___flmul,w
  6759  0FDE  00B7               	movwf	___flmul@bexp
  6760  0FDF  30FF               	movlw	255
  6761  0FE0  05B8               	andwf	___flmul@prod,f
  6762  0FE1  30FF               	movlw	255
  6763  0FE2  05B9               	andwf	___flmul@prod+1,f
  6764  0FE3  307F               	movlw	127
  6765  0FE4  05BA               	andwf	___flmul@prod+2,f
  6766  0FE5  3000               	movlw	0
  6767  0FE6  05BB               	andwf	___flmul@prod+3,f
  6768  0FE7                     l2974:
  6769  0FE7  1C37               	btfss	___flmul@bexp,0
  6770  0FE8  2FEA               	goto	u4431
  6771  0FE9  2FEB               	goto	u4430
  6772  0FEA                     u4431:
  6773  0FEA  2FEC               	goto	l2978
  6774  0FEB                     u4430:
  6775  0FEB                     l2976:
  6776  0FEB  17BA               	bsf	___flmul@prod+2,7
  6777  0FEC                     l2978:
  6778  0FEC  0837               	movf	___flmul@bexp,w
  6779  0FED  00AC               	movwf	??___flmul
  6780  0FEE  1003               	clrc
  6781  0FEF  0C2C               	rrf	??___flmul,w
  6782  0FF0  00AD               	movwf	??___flmul+1
  6783  0FF1  082D               	movf	??___flmul+1,w
  6784  0FF2  00BB               	movwf	___flmul@prod+3
  6785  0FF3                     l818:
  6786  0FF3  0831               	movf	___flmul@sign,w
  6787  0FF4  00AC               	movwf	??___flmul
  6788  0FF5  082C               	movf	??___flmul,w
  6789  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6790  0FF7                     l2980:
  6791  0FF7  083B               	movf	___flmul@prod+3,w
  6792  0FF8  00A7               	movwf	?___flmul+3
  6793  0FF9  083A               	movf	___flmul@prod+2,w
  6794  0FFA  00A6               	movwf	?___flmul+2
  6795  0FFB  0839               	movf	___flmul@prod+1,w
  6796  0FFC  00A5               	movwf	?___flmul+1
  6797  0FFD  0838               	movf	___flmul@prod,w
  6798  0FFE  00A4               	movwf	?___flmul
  6799  0FFF                     l806:
  6800  0FFF  0008               	return
  6801  1000                     __end_of___flmul:
  6802                           
  6803                           	psect	text10
  6804  193A                     __ptext10:	
  6805 ;; *************** function __Umul8_16 *****************
  6806 ;; Defined at:
  6807 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  multiplier      1    wreg     unsigned char 
  6810 ;;  multiplicand    1    0[COMMON] unsigned char 
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;  multiplier      1    8[COMMON] unsigned char 
  6813 ;;  word_mpld       2    6[COMMON] unsigned int 
  6814 ;;  product         2    4[COMMON] unsigned int 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  2    0[COMMON] unsigned int 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6824 ;;      Params:         2       0       0       0       0
  6825 ;;      Locals:         5       0       0       0       0
  6826 ;;      Temps:          2       0       0       0       0
  6827 ;;      Totals:         9       0       0       0       0
  6828 ;;Total ram usage:        9 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		___flmul
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function __Umul8_16
  6839  193A                     __Umul8_16:
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6843                           ;__Umul8_16@multiplier stored from wreg
  6844  193A  00F8               	movwf	__Umul8_16@multiplier
  6845  193B                     l2462:
  6846  193B  01F4               	clrf	__Umul8_16@product
  6847  193C  01F5               	clrf	__Umul8_16@product+1
  6848  193D                     l2464:
  6849  193D  0870               	movf	__Umul8_16@multiplicand,w
  6850  193E  00F2               	movwf	??__Umul8_16
  6851  193F  01F3               	clrf	??__Umul8_16+1
  6852  1940  0872               	movf	??__Umul8_16,w
  6853  1941  00F6               	movwf	__Umul8_16@word_mpld
  6854  1942  0873               	movf	??__Umul8_16+1,w
  6855  1943  00F7               	movwf	__Umul8_16@word_mpld+1
  6856  1944                     l2466:
  6857  1944  1C78               	btfss	__Umul8_16@multiplier,0
  6858  1945  2947               	goto	u3191
  6859  1946  2948               	goto	u3190
  6860  1947                     u3191:
  6861  1947  294E               	goto	l825
  6862  1948                     u3190:
  6863  1948                     l2468:
  6864  1948  0876               	movf	__Umul8_16@word_mpld,w
  6865  1949  07F4               	addwf	__Umul8_16@product,f
  6866  194A  1803               	skipnc
  6867  194B  0AF5               	incf	__Umul8_16@product+1,f
  6868  194C  0877               	movf	__Umul8_16@word_mpld+1,w
  6869  194D  07F5               	addwf	__Umul8_16@product+1,f
  6870  194E                     l825:
  6871  194E  3001               	movlw	1
  6872  194F                     u3205:
  6873  194F  1003               	clrc
  6874  1950  0DF6               	rlf	__Umul8_16@word_mpld,f
  6875  1951  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6876  1952  3EFF               	addlw	-1
  6877  1953  1D03               	skipz
  6878  1954  294F               	goto	u3205
  6879  1955  1003               	clrc
  6880  1956  0CF8               	rrf	__Umul8_16@multiplier,f
  6881  1957                     l2470:
  6882  1957  0878               	movf	__Umul8_16@multiplier,w
  6883  1958  1D03               	btfss	3,2
  6884  1959  295B               	goto	u3211
  6885  195A  295C               	goto	u3210
  6886  195B                     u3211:
  6887  195B  2944               	goto	l2466
  6888  195C                     u3210:
  6889  195C                     l2472:
  6890  195C  0875               	movf	__Umul8_16@product+1,w
  6891  195D  00F1               	movwf	?__Umul8_16+1
  6892  195E  0874               	movf	__Umul8_16@product,w
  6893  195F  00F0               	movwf	?__Umul8_16
  6894  1960                     l827:
  6895  1960  0008               	return
  6896  1961                     __end_of__Umul8_16:
  6897                           
  6898                           	psect	text11
  6899  1015                     __ptext11:	
  6900 ;; *************** function __tdiv_to_l_ *****************
  6901 ;; Defined at:
  6902 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  f1              4    0[COMMON] float 
  6905 ;;  f2              4    4[COMMON] float 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  quot            4    0[BANK0 ] unsigned long 
  6908 ;;  exp1            1    5[BANK0 ] unsigned char 
  6909 ;;  cntr            1    4[BANK0 ] unsigned char 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  4    0[COMMON] unsigned long 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2, status,0
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6919 ;;      Params:         8       0       0       0       0
  6920 ;;      Locals:         0       6       0       0       0
  6921 ;;      Temps:          4       0       0       0       0
  6922 ;;      Totals:        12       6       0       0       0
  6923 ;;Total ram usage:       18 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_sprintf
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           
  6933                           ;psect for function __tdiv_to_l_
  6934  1015                     __tdiv_to_l_:
  6935  1015                     l3100:	
  6936                           ;incstack = 0
  6937                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6938                           
  6939  1015  0870               	movf	__tdiv_to_l_@f1,w
  6940  1016  00F8               	movwf	??__tdiv_to_l_
  6941  1017  0871               	movf	__tdiv_to_l_@f1+1,w
  6942  1018  00F9               	movwf	??__tdiv_to_l_+1
  6943  1019  0872               	movf	__tdiv_to_l_@f1+2,w
  6944  101A  00FA               	movwf	??__tdiv_to_l_+2
  6945  101B  1003               	clrc
  6946  101C  0D79               	rlf	??__tdiv_to_l_+1,w
  6947  101D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6948  101E  00FB               	movwf	??__tdiv_to_l_+3
  6949  101F  087B               	movf	??__tdiv_to_l_+3,w
  6950  1020  1283               	bcf	3,5	;RP0=0, select bank0
  6951  1021  1303               	bcf	3,6	;RP1=0, select bank0
  6952  1022  00A5               	movwf	__tdiv_to_l_@exp1
  6953  1023  0825               	movf	__tdiv_to_l_@exp1,w
  6954  1024  1D03               	btfss	3,2
  6955  1025  2827               	goto	u4791
  6956  1026  2828               	goto	u4790
  6957  1027                     u4791:
  6958  1027  2831               	goto	l3106
  6959  1028                     u4790:
  6960  1028                     l3102:
  6961  1028  3000               	movlw	0
  6962  1029  00F3               	movwf	?__tdiv_to_l_+3
  6963  102A  3000               	movlw	0
  6964  102B  00F2               	movwf	?__tdiv_to_l_+2
  6965  102C  3000               	movlw	0
  6966  102D  00F1               	movwf	?__tdiv_to_l_+1
  6967  102E  3000               	movlw	0
  6968  102F  00F0               	movwf	?__tdiv_to_l_
  6969  1030  28D1               	goto	l600
  6970  1031                     l3106:
  6971  1031  0874               	movf	__tdiv_to_l_@f2,w
  6972  1032  00F8               	movwf	??__tdiv_to_l_
  6973  1033  0875               	movf	__tdiv_to_l_@f2+1,w
  6974  1034  00F9               	movwf	??__tdiv_to_l_+1
  6975  1035  0876               	movf	__tdiv_to_l_@f2+2,w
  6976  1036  00FA               	movwf	??__tdiv_to_l_+2
  6977  1037  1003               	clrc
  6978  1038  0D79               	rlf	??__tdiv_to_l_+1,w
  6979  1039  0D7A               	rlf	??__tdiv_to_l_+2,w
  6980  103A  00FB               	movwf	??__tdiv_to_l_+3
  6981  103B  087B               	movf	??__tdiv_to_l_+3,w
  6982  103C  00A4               	movwf	__tdiv_to_l_@cntr
  6983  103D  0824               	movf	__tdiv_to_l_@cntr,w
  6984  103E  1D03               	btfss	3,2
  6985  103F  2841               	goto	u4801
  6986  1040  2842               	goto	u4800
  6987  1041                     u4801:
  6988  1041  2843               	goto	l601
  6989  1042                     u4800:
  6990  1042  2828               	goto	l3102
  6991  1043                     l601:
  6992  1043  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6993  1044                     l3112:
  6994  1044  30FF               	movlw	255
  6995  1045  05F0               	andwf	__tdiv_to_l_@f1,f
  6996  1046  30FF               	movlw	255
  6997  1047  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6998  1048  3000               	movlw	0
  6999  1049  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7000  104A                     l3114:
  7001  104A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7002  104B  30FF               	movlw	255
  7003  104C  05F4               	andwf	__tdiv_to_l_@f2,f
  7004  104D  30FF               	movlw	255
  7005  104E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7006  104F  3000               	movlw	0
  7007  1050  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7008  1051  3000               	movlw	0
  7009  1052  00A3               	movwf	__tdiv_to_l_@quot+3
  7010  1053  3000               	movlw	0
  7011  1054  00A2               	movwf	__tdiv_to_l_@quot+2
  7012  1055  3000               	movlw	0
  7013  1056  00A1               	movwf	__tdiv_to_l_@quot+1
  7014  1057  3000               	movlw	0
  7015  1058  00A0               	movwf	__tdiv_to_l_@quot
  7016  1059                     l3116:
  7017  1059  307F               	movlw	127
  7018  105A  02A5               	subwf	__tdiv_to_l_@exp1,f
  7019  105B                     l3118:
  7020  105B  3098               	movlw	152
  7021  105C  0724               	addwf	__tdiv_to_l_@cntr,w
  7022  105D  00F8               	movwf	??__tdiv_to_l_
  7023  105E  0878               	movf	??__tdiv_to_l_,w
  7024  105F  02A5               	subwf	__tdiv_to_l_@exp1,f
  7025  1060  3018               	movlw	24
  7026  1061  00F8               	movwf	??__tdiv_to_l_
  7027  1062  0878               	movf	??__tdiv_to_l_,w
  7028  1063  00A4               	movwf	__tdiv_to_l_@cntr
  7029  1064                     l3120:
  7030  1064  3001               	movlw	1
  7031  1065  00F8               	movwf	??__tdiv_to_l_
  7032  1066                     u4815:
  7033  1066  1003               	clrc
  7034  1067  0DA0               	rlf	__tdiv_to_l_@quot,f
  7035  1068  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7036  1069  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7037  106A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7038  106B  0BF8               	decfsz	??__tdiv_to_l_,f
  7039  106C  2866               	goto	u4815
  7040  106D                     l3122:
  7041  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  7042  106E  0272               	subwf	__tdiv_to_l_@f1+2,w
  7043  106F  1D03               	skipz
  7044  1070  2877               	goto	u4825
  7045  1071  0875               	movf	__tdiv_to_l_@f2+1,w
  7046  1072  0271               	subwf	__tdiv_to_l_@f1+1,w
  7047  1073  1D03               	skipz
  7048  1074  2877               	goto	u4825
  7049  1075  0874               	movf	__tdiv_to_l_@f2,w
  7050  1076  0270               	subwf	__tdiv_to_l_@f1,w
  7051  1077                     u4825:
  7052  1077  1C03               	skipc
  7053  1078  287A               	goto	u4821
  7054  1079  287B               	goto	u4820
  7055  107A                     u4821:
  7056  107A  2886               	goto	l3128
  7057  107B                     u4820:
  7058  107B                     l3124:
  7059  107B  0874               	movf	__tdiv_to_l_@f2,w
  7060  107C  02F0               	subwf	__tdiv_to_l_@f1,f
  7061  107D  0875               	movf	__tdiv_to_l_@f2+1,w
  7062  107E  1C03               	skipc
  7063  107F  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7064  1080  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7065  1081  0876               	movf	__tdiv_to_l_@f2+2,w
  7066  1082  1C03               	skipc
  7067  1083  0A76               	incf	__tdiv_to_l_@f2+2,w
  7068  1084  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7069  1085                     l3126:
  7070  1085  1420               	bsf	__tdiv_to_l_@quot,0
  7071  1086                     l3128:
  7072  1086  3001               	movlw	1
  7073  1087                     u4835:
  7074  1087  1003               	clrc
  7075  1088  0DF0               	rlf	__tdiv_to_l_@f1,f
  7076  1089  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7077  108A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7078  108B  3EFF               	addlw	-1
  7079  108C  1D03               	skipz
  7080  108D  2887               	goto	u4835
  7081  108E                     l3130:
  7082  108E  3001               	movlw	1
  7083  108F  02A4               	subwf	__tdiv_to_l_@cntr,f
  7084  1090  1D03               	btfss	3,2
  7085  1091  2893               	goto	u4841
  7086  1092  2894               	goto	u4840
  7087  1093                     u4841:
  7088  1093  2864               	goto	l3120
  7089  1094                     u4840:
  7090  1094                     l604:
  7091  1094  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7092  1095  2897               	goto	u4851
  7093  1096  2898               	goto	u4850
  7094  1097                     u4851:
  7095  1097  28B2               	goto	l3140
  7096  1098                     u4850:
  7097  1098                     l3132:
  7098  1098  0825               	movf	__tdiv_to_l_@exp1,w
  7099  1099  3A80               	xorlw	128
  7100  109A  3E97               	addlw	151
  7101  109B  1803               	skipnc
  7102  109C  289E               	goto	u4861
  7103  109D  289F               	goto	u4860
  7104  109E                     u4861:
  7105  109E  28A0               	goto	l3138
  7106  109F                     u4860:
  7107  109F  2828               	goto	l3102
  7108  10A0                     l3138:
  7109  10A0  3001               	movlw	1
  7110  10A1                     u4875:
  7111  10A1  1003               	clrc
  7112  10A2  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7113  10A3  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7114  10A4  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7115  10A5  0CA0               	rrf	__tdiv_to_l_@quot,f
  7116  10A6  3EFF               	addlw	-1
  7117  10A7  1D03               	skipz
  7118  10A8  28A1               	goto	u4875
  7119  10A9  3001               	movlw	1
  7120  10AA  00F8               	movwf	??__tdiv_to_l_
  7121  10AB  0878               	movf	??__tdiv_to_l_,w
  7122  10AC  07A5               	addwf	__tdiv_to_l_@exp1,f
  7123  10AD  1D03               	btfss	3,2
  7124  10AE  28B0               	goto	u4881
  7125  10AF  28B1               	goto	u4880
  7126  10B0                     u4881:
  7127  10B0  28A0               	goto	l3138
  7128  10B1                     u4880:
  7129  10B1  28C9               	goto	l3148
  7130  10B2                     l3140:
  7131  10B2  3018               	movlw	24
  7132  10B3  0225               	subwf	__tdiv_to_l_@exp1,w
  7133  10B4  1C03               	skipc
  7134  10B5  28B7               	goto	u4891
  7135  10B6  28B8               	goto	u4890
  7136  10B7                     u4891:
  7137  10B7  28C4               	goto	l611
  7138  10B8                     u4890:
  7139  10B8  2828               	goto	l3102
  7140  10B9                     l3146:
  7141  10B9  3001               	movlw	1
  7142  10BA  00F8               	movwf	??__tdiv_to_l_
  7143  10BB                     u4905:
  7144  10BB  1003               	clrc
  7145  10BC  0DA0               	rlf	__tdiv_to_l_@quot,f
  7146  10BD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7147  10BE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7148  10BF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7149  10C0  0BF8               	decfsz	??__tdiv_to_l_,f
  7150  10C1  28BB               	goto	u4905
  7151  10C2  3001               	movlw	1
  7152  10C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  7153  10C4                     l611:
  7154  10C4  0825               	movf	__tdiv_to_l_@exp1,w
  7155  10C5  1D03               	btfss	3,2
  7156  10C6  28C8               	goto	u4911
  7157  10C7  28C9               	goto	u4910
  7158  10C8                     u4911:
  7159  10C8  28B9               	goto	l3146
  7160  10C9                     u4910:
  7161  10C9                     l3148:
  7162  10C9  0823               	movf	__tdiv_to_l_@quot+3,w
  7163  10CA  00F3               	movwf	?__tdiv_to_l_+3
  7164  10CB  0822               	movf	__tdiv_to_l_@quot+2,w
  7165  10CC  00F2               	movwf	?__tdiv_to_l_+2
  7166  10CD  0821               	movf	__tdiv_to_l_@quot+1,w
  7167  10CE  00F1               	movwf	?__tdiv_to_l_+1
  7168  10CF  0820               	movf	__tdiv_to_l_@quot,w
  7169  10D0  00F0               	movwf	?__tdiv_to_l_
  7170  10D1                     l600:
  7171  10D1  0008               	return
  7172  10D2                     __end_of__tdiv_to_l_:
  7173                           
  7174                           	psect	text12
  7175  10D2                     __ptext12:	
  7176 ;; *************** function __div_to_l_ *****************
  7177 ;; Defined at:
  7178 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  f1              4    0[COMMON] unsigned long 
  7181 ;;  f2              4    4[COMMON] unsigned long 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  quot            4    0[BANK0 ] unsigned long 
  7184 ;;  exp1            1    5[BANK0 ] unsigned char 
  7185 ;;  cntr            1    4[BANK0 ] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  4    0[COMMON] unsigned long 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7195 ;;      Params:         8       0       0       0       0
  7196 ;;      Locals:         0       6       0       0       0
  7197 ;;      Temps:          1       0       0       0       0
  7198 ;;      Totals:         9       6       0       0       0
  7199 ;;Total ram usage:       15 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_sprintf
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function __div_to_l_
  7210  10D2                     __div_to_l_:
  7211  10D2                     l3152:	
  7212                           ;incstack = 0
  7213                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7214                           
  7215  10D2  1003               	clrc
  7216  10D3  0D72               	rlf	__div_to_l_@f1+2,w
  7217  10D4  0D73               	rlf	__div_to_l_@f1+3,w
  7218  10D5  00F8               	movwf	??__div_to_l_
  7219  10D6  0878               	movf	??__div_to_l_,w
  7220  10D7  1283               	bcf	3,5	;RP0=0, select bank0
  7221  10D8  1303               	bcf	3,6	;RP1=0, select bank0
  7222  10D9  00A5               	movwf	__div_to_l_@exp1
  7223  10DA  0825               	movf	__div_to_l_@exp1,w
  7224  10DB  1D03               	btfss	3,2
  7225  10DC  28DE               	goto	u4921
  7226  10DD  28DF               	goto	u4920
  7227  10DE                     u4921:
  7228  10DE  28E8               	goto	l3158
  7229  10DF                     u4920:
  7230  10DF                     l3154:
  7231  10DF  3000               	movlw	0
  7232  10E0  00F3               	movwf	?__div_to_l_+3
  7233  10E1  3000               	movlw	0
  7234  10E2  00F2               	movwf	?__div_to_l_+2
  7235  10E3  3000               	movlw	0
  7236  10E4  00F1               	movwf	?__div_to_l_+1
  7237  10E5  3000               	movlw	0
  7238  10E6  00F0               	movwf	?__div_to_l_
  7239  10E7  298F               	goto	l553
  7240  10E8                     l3158:
  7241  10E8  1003               	clrc
  7242  10E9  0D76               	rlf	__div_to_l_@f2+2,w
  7243  10EA  0D77               	rlf	__div_to_l_@f2+3,w
  7244  10EB  00F8               	movwf	??__div_to_l_
  7245  10EC  0878               	movf	??__div_to_l_,w
  7246  10ED  00A4               	movwf	__div_to_l_@cntr
  7247  10EE  0824               	movf	__div_to_l_@cntr,w
  7248  10EF  1D03               	btfss	3,2
  7249  10F0  28F2               	goto	u4931
  7250  10F1  28F3               	goto	u4930
  7251  10F2                     u4931:
  7252  10F2  28F4               	goto	l554
  7253  10F3                     u4930:
  7254  10F3  28DF               	goto	l3154
  7255  10F4                     l554:
  7256  10F4  17F2               	bsf	__div_to_l_@f1+2,7
  7257  10F5                     l3164:
  7258  10F5  30FF               	movlw	255
  7259  10F6  05F0               	andwf	__div_to_l_@f1,f
  7260  10F7  30FF               	movlw	255
  7261  10F8  05F1               	andwf	__div_to_l_@f1+1,f
  7262  10F9  30FF               	movlw	255
  7263  10FA  05F2               	andwf	__div_to_l_@f1+2,f
  7264  10FB  3000               	movlw	0
  7265  10FC  05F3               	andwf	__div_to_l_@f1+3,f
  7266  10FD                     l3166:
  7267  10FD  17F6               	bsf	__div_to_l_@f2+2,7
  7268  10FE  30FF               	movlw	255
  7269  10FF  05F4               	andwf	__div_to_l_@f2,f
  7270  1100  30FF               	movlw	255
  7271  1101  05F5               	andwf	__div_to_l_@f2+1,f
  7272  1102  30FF               	movlw	255
  7273  1103  05F6               	andwf	__div_to_l_@f2+2,f
  7274  1104  3000               	movlw	0
  7275  1105  05F7               	andwf	__div_to_l_@f2+3,f
  7276  1106  3000               	movlw	0
  7277  1107  00A3               	movwf	__div_to_l_@quot+3
  7278  1108  3000               	movlw	0
  7279  1109  00A2               	movwf	__div_to_l_@quot+2
  7280  110A  3000               	movlw	0
  7281  110B  00A1               	movwf	__div_to_l_@quot+1
  7282  110C  3000               	movlw	0
  7283  110D  00A0               	movwf	__div_to_l_@quot
  7284  110E                     l3168:
  7285  110E  307F               	movlw	127
  7286  110F  02A5               	subwf	__div_to_l_@exp1,f
  7287  1110                     l3170:
  7288  1110  30A0               	movlw	160
  7289  1111  0724               	addwf	__div_to_l_@cntr,w
  7290  1112  00F8               	movwf	??__div_to_l_
  7291  1113  0878               	movf	??__div_to_l_,w
  7292  1114  02A5               	subwf	__div_to_l_@exp1,f
  7293  1115  3020               	movlw	32
  7294  1116  00F8               	movwf	??__div_to_l_
  7295  1117  0878               	movf	??__div_to_l_,w
  7296  1118  00A4               	movwf	__div_to_l_@cntr
  7297  1119                     l3172:
  7298  1119  3001               	movlw	1
  7299  111A  00F8               	movwf	??__div_to_l_
  7300  111B                     u4945:
  7301  111B  1003               	clrc
  7302  111C  0DA0               	rlf	__div_to_l_@quot,f
  7303  111D  0DA1               	rlf	__div_to_l_@quot+1,f
  7304  111E  0DA2               	rlf	__div_to_l_@quot+2,f
  7305  111F  0DA3               	rlf	__div_to_l_@quot+3,f
  7306  1120  0BF8               	decfsz	??__div_to_l_,f
  7307  1121  291B               	goto	u4945
  7308  1122                     l3174:
  7309  1122  0877               	movf	__div_to_l_@f2+3,w
  7310  1123  0273               	subwf	__div_to_l_@f1+3,w
  7311  1124  1D03               	skipz
  7312  1125  2930               	goto	u4955
  7313  1126  0876               	movf	__div_to_l_@f2+2,w
  7314  1127  0272               	subwf	__div_to_l_@f1+2,w
  7315  1128  1D03               	skipz
  7316  1129  2930               	goto	u4955
  7317  112A  0875               	movf	__div_to_l_@f2+1,w
  7318  112B  0271               	subwf	__div_to_l_@f1+1,w
  7319  112C  1D03               	skipz
  7320  112D  2930               	goto	u4955
  7321  112E  0874               	movf	__div_to_l_@f2,w
  7322  112F  0270               	subwf	__div_to_l_@f1,w
  7323  1130                     u4955:
  7324  1130  1C03               	skipc
  7325  1131  2933               	goto	u4951
  7326  1132  2934               	goto	u4950
  7327  1133                     u4951:
  7328  1133  2943               	goto	l3180
  7329  1134                     u4950:
  7330  1134                     l3176:
  7331  1134  0874               	movf	__div_to_l_@f2,w
  7332  1135  02F0               	subwf	__div_to_l_@f1,f
  7333  1136  0875               	movf	__div_to_l_@f2+1,w
  7334  1137  1C03               	skipc
  7335  1138  0F75               	incfsz	__div_to_l_@f2+1,w
  7336  1139  02F1               	subwf	__div_to_l_@f1+1,f
  7337  113A  0876               	movf	__div_to_l_@f2+2,w
  7338  113B  1C03               	skipc
  7339  113C  0F76               	incfsz	__div_to_l_@f2+2,w
  7340  113D  02F2               	subwf	__div_to_l_@f1+2,f
  7341  113E  0877               	movf	__div_to_l_@f2+3,w
  7342  113F  1C03               	skipc
  7343  1140  0F77               	incfsz	__div_to_l_@f2+3,w
  7344  1141  02F3               	subwf	__div_to_l_@f1+3,f
  7345  1142                     l3178:
  7346  1142  1420               	bsf	__div_to_l_@quot,0
  7347  1143                     l3180:
  7348  1143  3001               	movlw	1
  7349  1144  00F8               	movwf	??__div_to_l_
  7350  1145                     u4965:
  7351  1145  1003               	clrc
  7352  1146  0DF0               	rlf	__div_to_l_@f1,f
  7353  1147  0DF1               	rlf	__div_to_l_@f1+1,f
  7354  1148  0DF2               	rlf	__div_to_l_@f1+2,f
  7355  1149  0DF3               	rlf	__div_to_l_@f1+3,f
  7356  114A  0BF8               	decfsz	??__div_to_l_,f
  7357  114B  2945               	goto	u4965
  7358  114C                     l3182:
  7359  114C  3001               	movlw	1
  7360  114D  02A4               	subwf	__div_to_l_@cntr,f
  7361  114E  1D03               	btfss	3,2
  7362  114F  2951               	goto	u4971
  7363  1150  2952               	goto	u4970
  7364  1151                     u4971:
  7365  1151  2919               	goto	l3172
  7366  1152                     u4970:
  7367  1152                     l557:
  7368  1152  1FA5               	btfss	__div_to_l_@exp1,7
  7369  1153  2955               	goto	u4981
  7370  1154  2956               	goto	u4980
  7371  1155                     u4981:
  7372  1155  2970               	goto	l3192
  7373  1156                     u4980:
  7374  1156                     l3184:
  7375  1156  0825               	movf	__div_to_l_@exp1,w
  7376  1157  3A80               	xorlw	128
  7377  1158  3E9F               	addlw	159
  7378  1159  1803               	skipnc
  7379  115A  295C               	goto	u4991
  7380  115B  295D               	goto	u4990
  7381  115C                     u4991:
  7382  115C  295E               	goto	l3190
  7383  115D                     u4990:
  7384  115D  28DF               	goto	l3154
  7385  115E                     l3190:
  7386  115E  3001               	movlw	1
  7387  115F                     u5005:
  7388  115F  1003               	clrc
  7389  1160  0CA3               	rrf	__div_to_l_@quot+3,f
  7390  1161  0CA2               	rrf	__div_to_l_@quot+2,f
  7391  1162  0CA1               	rrf	__div_to_l_@quot+1,f
  7392  1163  0CA0               	rrf	__div_to_l_@quot,f
  7393  1164  3EFF               	addlw	-1
  7394  1165  1D03               	skipz
  7395  1166  295F               	goto	u5005
  7396  1167  3001               	movlw	1
  7397  1168  00F8               	movwf	??__div_to_l_
  7398  1169  0878               	movf	??__div_to_l_,w
  7399  116A  07A5               	addwf	__div_to_l_@exp1,f
  7400  116B  1D03               	btfss	3,2
  7401  116C  296E               	goto	u5011
  7402  116D  296F               	goto	u5010
  7403  116E                     u5011:
  7404  116E  295E               	goto	l3190
  7405  116F                     u5010:
  7406  116F  2987               	goto	l3200
  7407  1170                     l3192:
  7408  1170  3020               	movlw	32
  7409  1171  0225               	subwf	__div_to_l_@exp1,w
  7410  1172  1C03               	skipc
  7411  1173  2975               	goto	u5021
  7412  1174  2976               	goto	u5020
  7413  1175                     u5021:
  7414  1175  2982               	goto	l564
  7415  1176                     u5020:
  7416  1176  28DF               	goto	l3154
  7417  1177                     l3198:
  7418  1177  3001               	movlw	1
  7419  1178  00F8               	movwf	??__div_to_l_
  7420  1179                     u5035:
  7421  1179  1003               	clrc
  7422  117A  0DA0               	rlf	__div_to_l_@quot,f
  7423  117B  0DA1               	rlf	__div_to_l_@quot+1,f
  7424  117C  0DA2               	rlf	__div_to_l_@quot+2,f
  7425  117D  0DA3               	rlf	__div_to_l_@quot+3,f
  7426  117E  0BF8               	decfsz	??__div_to_l_,f
  7427  117F  2979               	goto	u5035
  7428  1180  3001               	movlw	1
  7429  1181  02A5               	subwf	__div_to_l_@exp1,f
  7430  1182                     l564:
  7431  1182  0825               	movf	__div_to_l_@exp1,w
  7432  1183  1D03               	btfss	3,2
  7433  1184  2986               	goto	u5041
  7434  1185  2987               	goto	u5040
  7435  1186                     u5041:
  7436  1186  2977               	goto	l3198
  7437  1187                     u5040:
  7438  1187                     l3200:
  7439  1187  0823               	movf	__div_to_l_@quot+3,w
  7440  1188  00F3               	movwf	?__div_to_l_+3
  7441  1189  0822               	movf	__div_to_l_@quot+2,w
  7442  118A  00F2               	movwf	?__div_to_l_+2
  7443  118B  0821               	movf	__div_to_l_@quot+1,w
  7444  118C  00F1               	movwf	?__div_to_l_+1
  7445  118D  0820               	movf	__div_to_l_@quot,w
  7446  118E  00F0               	movwf	?__div_to_l_
  7447  118F                     l553:
  7448  118F  0008               	return
  7449  1190                     __end_of__div_to_l_:
  7450                           
  7451                           	psect	text13
  7452  1DA5                     __ptext13:	
  7453 ;; *************** function ___xxtofl *****************
  7454 ;; Defined at:
  7455 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  sign            1    wreg     unsigned char 
  7458 ;;  val             4    0[COMMON] long 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  sign            1    8[COMMON] unsigned char 
  7461 ;;  arg             4   10[COMMON] unsigned long 
  7462 ;;  exp             1    9[COMMON] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  4    0[COMMON] unsigned char 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7472 ;;      Params:         4       0       0       0       0
  7473 ;;      Locals:         6       0       0       0       0
  7474 ;;      Temps:          4       0       0       0       0
  7475 ;;      Totals:        14       0       0       0       0
  7476 ;;Total ram usage:       14 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_main
  7482 ;;		_sprintf
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           
  7487                           ;psect for function ___xxtofl
  7488  1DA5                     ___xxtofl:
  7489                           
  7490                           ;incstack = 0
  7491                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7492                           ;___xxtofl@sign stored from wreg
  7493  1DA5  00F8               	movwf	___xxtofl@sign
  7494  1DA6                     l3320:
  7495  1DA6  0878               	movf	___xxtofl@sign,w
  7496  1DA7  1903               	btfsc	3,2
  7497  1DA8  2DAA               	goto	u5361
  7498  1DA9  2DAB               	goto	u5360
  7499  1DAA                     u5361:
  7500  1DAA  2DBF               	goto	l3326
  7501  1DAB                     u5360:
  7502  1DAB                     l3322:
  7503  1DAB  1FF3               	btfss	___xxtofl@val+3,7
  7504  1DAC  2DAE               	goto	u5371
  7505  1DAD  2DAF               	goto	u5370
  7506  1DAE                     u5371:
  7507  1DAE  2DBF               	goto	l3326
  7508  1DAF                     u5370:
  7509  1DAF                     l3324:
  7510  1DAF  0970               	comf	___xxtofl@val,w
  7511  1DB0  00FA               	movwf	___xxtofl@arg
  7512  1DB1  0971               	comf	___xxtofl@val+1,w
  7513  1DB2  00FB               	movwf	___xxtofl@arg+1
  7514  1DB3  0972               	comf	___xxtofl@val+2,w
  7515  1DB4  00FC               	movwf	___xxtofl@arg+2
  7516  1DB5  0973               	comf	___xxtofl@val+3,w
  7517  1DB6  00FD               	movwf	___xxtofl@arg+3
  7518  1DB7  0AFA               	incf	___xxtofl@arg,f
  7519  1DB8  1903               	skipnz
  7520  1DB9  0AFB               	incf	___xxtofl@arg+1,f
  7521  1DBA  1903               	skipnz
  7522  1DBB  0AFC               	incf	___xxtofl@arg+2,f
  7523  1DBC  1903               	skipnz
  7524  1DBD  0AFD               	incf	___xxtofl@arg+3,f
  7525  1DBE  2DC7               	goto	l850
  7526  1DBF                     l3326:
  7527  1DBF  0873               	movf	___xxtofl@val+3,w
  7528  1DC0  00FD               	movwf	___xxtofl@arg+3
  7529  1DC1  0872               	movf	___xxtofl@val+2,w
  7530  1DC2  00FC               	movwf	___xxtofl@arg+2
  7531  1DC3  0871               	movf	___xxtofl@val+1,w
  7532  1DC4  00FB               	movwf	___xxtofl@arg+1
  7533  1DC5  0870               	movf	___xxtofl@val,w
  7534  1DC6  00FA               	movwf	___xxtofl@arg
  7535  1DC7                     l850:
  7536  1DC7  0873               	movf	___xxtofl@val+3,w
  7537  1DC8  0472               	iorwf	___xxtofl@val+2,w
  7538  1DC9  0471               	iorwf	___xxtofl@val+1,w
  7539  1DCA  0470               	iorwf	___xxtofl@val,w
  7540  1DCB  1D03               	skipz
  7541  1DCC  2DCE               	goto	u5381
  7542  1DCD  2DCF               	goto	u5380
  7543  1DCE                     u5381:
  7544  1DCE  2DD8               	goto	l3332
  7545  1DCF                     u5380:
  7546  1DCF                     l3328:
  7547  1DCF  3000               	movlw	0
  7548  1DD0  00F3               	movwf	?___xxtofl+3
  7549  1DD1  3000               	movlw	0
  7550  1DD2  00F2               	movwf	?___xxtofl+2
  7551  1DD3  3000               	movlw	0
  7552  1DD4  00F1               	movwf	?___xxtofl+1
  7553  1DD5  3000               	movlw	0
  7554  1DD6  00F0               	movwf	?___xxtofl
  7555  1DD7  2E5E               	goto	l852
  7556  1DD8                     l3332:
  7557  1DD8  3096               	movlw	150
  7558  1DD9  00F4               	movwf	??___xxtofl
  7559  1DDA  0874               	movf	??___xxtofl,w
  7560  1DDB  00F9               	movwf	___xxtofl@exp
  7561  1DDC  2DEA               	goto	l3336
  7562  1DDD                     l3334:
  7563  1DDD  3001               	movlw	1
  7564  1DDE  00F4               	movwf	??___xxtofl
  7565  1DDF  0874               	movf	??___xxtofl,w
  7566  1DE0  07F9               	addwf	___xxtofl@exp,f
  7567  1DE1  3001               	movlw	1
  7568  1DE2                     u5395:
  7569  1DE2  1003               	clrc
  7570  1DE3  0CFD               	rrf	___xxtofl@arg+3,f
  7571  1DE4  0CFC               	rrf	___xxtofl@arg+2,f
  7572  1DE5  0CFB               	rrf	___xxtofl@arg+1,f
  7573  1DE6  0CFA               	rrf	___xxtofl@arg,f
  7574  1DE7  3EFF               	addlw	-1
  7575  1DE8  1D03               	skipz
  7576  1DE9  2DE2               	goto	u5395
  7577  1DEA                     l3336:
  7578  1DEA  30FE               	movlw	254
  7579  1DEB  057D               	andwf	___xxtofl@arg+3,w
  7580  1DEC  1D03               	btfss	3,2
  7581  1DED  2DEF               	goto	u5401
  7582  1DEE  2DF0               	goto	u5400
  7583  1DEF                     u5401:
  7584  1DEF  2DDD               	goto	l3334
  7585  1DF0                     u5400:
  7586  1DF0  2E0C               	goto	l856
  7587  1DF1                     l3338:
  7588  1DF1  3001               	movlw	1
  7589  1DF2  00F4               	movwf	??___xxtofl
  7590  1DF3  0874               	movf	??___xxtofl,w
  7591  1DF4  07F9               	addwf	___xxtofl@exp,f
  7592  1DF5                     l3340:
  7593  1DF5  3001               	movlw	1
  7594  1DF6  07FA               	addwf	___xxtofl@arg,f
  7595  1DF7  3000               	movlw	0
  7596  1DF8  1803               	skipnc
  7597  1DF9  3001               	movlw	1
  7598  1DFA  07FB               	addwf	___xxtofl@arg+1,f
  7599  1DFB  3000               	movlw	0
  7600  1DFC  1803               	skipnc
  7601  1DFD  3001               	movlw	1
  7602  1DFE  07FC               	addwf	___xxtofl@arg+2,f
  7603  1DFF  3000               	movlw	0
  7604  1E00  1803               	skipnc
  7605  1E01  3001               	movlw	1
  7606  1E02  07FD               	addwf	___xxtofl@arg+3,f
  7607  1E03                     l3342:
  7608  1E03  3001               	movlw	1
  7609  1E04                     u5415:
  7610  1E04  1003               	clrc
  7611  1E05  0CFD               	rrf	___xxtofl@arg+3,f
  7612  1E06  0CFC               	rrf	___xxtofl@arg+2,f
  7613  1E07  0CFB               	rrf	___xxtofl@arg+1,f
  7614  1E08  0CFA               	rrf	___xxtofl@arg,f
  7615  1E09  3EFF               	addlw	-1
  7616  1E0A  1D03               	skipz
  7617  1E0B  2E04               	goto	u5415
  7618  1E0C                     l856:
  7619  1E0C  30FF               	movlw	255
  7620  1E0D  057D               	andwf	___xxtofl@arg+3,w
  7621  1E0E  1D03               	btfss	3,2
  7622  1E0F  2E11               	goto	u5421
  7623  1E10  2E12               	goto	u5420
  7624  1E11                     u5421:
  7625  1E11  2DF1               	goto	l3338
  7626  1E12                     u5420:
  7627  1E12  2E1E               	goto	l3346
  7628  1E13                     l3344:
  7629  1E13  3001               	movlw	1
  7630  1E14  02F9               	subwf	___xxtofl@exp,f
  7631  1E15  3001               	movlw	1
  7632  1E16  00F4               	movwf	??___xxtofl
  7633  1E17                     u5435:
  7634  1E17  1003               	clrc
  7635  1E18  0DFA               	rlf	___xxtofl@arg,f
  7636  1E19  0DFB               	rlf	___xxtofl@arg+1,f
  7637  1E1A  0DFC               	rlf	___xxtofl@arg+2,f
  7638  1E1B  0DFD               	rlf	___xxtofl@arg+3,f
  7639  1E1C  0BF4               	decfsz	??___xxtofl,f
  7640  1E1D  2E17               	goto	u5435
  7641  1E1E                     l3346:
  7642  1E1E  1BFC               	btfsc	___xxtofl@arg+2,7
  7643  1E1F  2E21               	goto	u5441
  7644  1E20  2E22               	goto	u5440
  7645  1E21                     u5441:
  7646  1E21  2E28               	goto	l863
  7647  1E22                     u5440:
  7648  1E22                     l3348:
  7649  1E22  3002               	movlw	2
  7650  1E23  0279               	subwf	___xxtofl@exp,w
  7651  1E24  1803               	skipnc
  7652  1E25  2E27               	goto	u5451
  7653  1E26  2E28               	goto	u5450
  7654  1E27                     u5451:
  7655  1E27  2E13               	goto	l3344
  7656  1E28                     u5450:
  7657  1E28                     l863:
  7658  1E28  1879               	btfsc	___xxtofl@exp,0
  7659  1E29  2E2B               	goto	u5461
  7660  1E2A  2E2C               	goto	u5460
  7661  1E2B                     u5461:
  7662  1E2B  2E34               	goto	l864
  7663  1E2C                     u5460:
  7664  1E2C                     l3350:
  7665  1E2C  30FF               	movlw	255
  7666  1E2D  05FA               	andwf	___xxtofl@arg,f
  7667  1E2E  30FF               	movlw	255
  7668  1E2F  05FB               	andwf	___xxtofl@arg+1,f
  7669  1E30  307F               	movlw	127
  7670  1E31  05FC               	andwf	___xxtofl@arg+2,f
  7671  1E32  30FF               	movlw	255
  7672  1E33  05FD               	andwf	___xxtofl@arg+3,f
  7673  1E34                     l864:
  7674  1E34  1003               	clrc
  7675  1E35  0CF9               	rrf	___xxtofl@exp,f
  7676  1E36                     l3352:
  7677  1E36  0879               	movf	___xxtofl@exp,w
  7678  1E37  00F4               	movwf	??___xxtofl
  7679  1E38  01F5               	clrf	??___xxtofl+1
  7680  1E39  01F6               	clrf	??___xxtofl+2
  7681  1E3A  01F7               	clrf	??___xxtofl+3
  7682  1E3B  3018               	movlw	24
  7683  1E3C                     u5475:
  7684  1E3C  1003               	clrc
  7685  1E3D  0DF4               	rlf	??___xxtofl,f
  7686  1E3E  0DF5               	rlf	??___xxtofl+1,f
  7687  1E3F  0DF6               	rlf	??___xxtofl+2,f
  7688  1E40  0DF7               	rlf	??___xxtofl+3,f
  7689  1E41                     u5470:
  7690  1E41  3EFF               	addlw	-1
  7691  1E42  1D03               	skipz
  7692  1E43  2E3C               	goto	u5475
  7693  1E44  0874               	movf	??___xxtofl,w
  7694  1E45  04FA               	iorwf	___xxtofl@arg,f
  7695  1E46  0875               	movf	??___xxtofl+1,w
  7696  1E47  04FB               	iorwf	___xxtofl@arg+1,f
  7697  1E48  0876               	movf	??___xxtofl+2,w
  7698  1E49  04FC               	iorwf	___xxtofl@arg+2,f
  7699  1E4A  0877               	movf	??___xxtofl+3,w
  7700  1E4B  04FD               	iorwf	___xxtofl@arg+3,f
  7701  1E4C                     l3354:
  7702  1E4C  0878               	movf	___xxtofl@sign,w
  7703  1E4D  1903               	btfsc	3,2
  7704  1E4E  2E50               	goto	u5481
  7705  1E4F  2E51               	goto	u5480
  7706  1E50                     u5481:
  7707  1E50  2E56               	goto	l3360
  7708  1E51                     u5480:
  7709  1E51                     l3356:
  7710  1E51  1FF3               	btfss	___xxtofl@val+3,7
  7711  1E52  2E54               	goto	u5491
  7712  1E53  2E55               	goto	u5490
  7713  1E54                     u5491:
  7714  1E54  2E56               	goto	l3360
  7715  1E55                     u5490:
  7716  1E55                     l3358:
  7717  1E55  17FD               	bsf	___xxtofl@arg+3,7
  7718  1E56                     l3360:
  7719  1E56  087D               	movf	___xxtofl@arg+3,w
  7720  1E57  00F3               	movwf	?___xxtofl+3
  7721  1E58  087C               	movf	___xxtofl@arg+2,w
  7722  1E59  00F2               	movwf	?___xxtofl+2
  7723  1E5A  087B               	movf	___xxtofl@arg+1,w
  7724  1E5B  00F1               	movwf	?___xxtofl+1
  7725  1E5C  087A               	movf	___xxtofl@arg,w
  7726  1E5D  00F0               	movwf	?___xxtofl
  7727  1E5E                     l852:
  7728  1E5E  0008               	return
  7729  1E5F                     __end_of___xxtofl:
  7730                           
  7731                           	psect	text14
  7732  1915                     __ptext14:	
  7733 ;; *************** function ___wmul *****************
  7734 ;; Defined at:
  7735 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  multiplier      2    0[COMMON] unsigned int 
  7738 ;;  multiplicand    2    2[COMMON] unsigned int 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  product         2    4[COMMON] unsigned int 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  2    0[COMMON] unsigned int 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         4       0       0       0       0
  7751 ;;      Locals:         2       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0
  7753 ;;      Totals:         6       0       0       0       0
  7754 ;;Total ram usage:        6 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_sprintf
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           
  7764                           ;psect for function ___wmul
  7765  1915                     ___wmul:
  7766  1915                     l3204:	
  7767                           ;incstack = 0
  7768                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7769                           
  7770  1915  01F4               	clrf	___wmul@product
  7771  1916  01F5               	clrf	___wmul@product+1
  7772  1917                     l3206:
  7773  1917  1C70               	btfss	___wmul@multiplier,0
  7774  1918  291A               	goto	u5051
  7775  1919  291B               	goto	u5050
  7776  191A                     u5051:
  7777  191A  2921               	goto	l383
  7778  191B                     u5050:
  7779  191B                     l3208:
  7780  191B  0872               	movf	___wmul@multiplicand,w
  7781  191C  07F4               	addwf	___wmul@product,f
  7782  191D  1803               	skipnc
  7783  191E  0AF5               	incf	___wmul@product+1,f
  7784  191F  0873               	movf	___wmul@multiplicand+1,w
  7785  1920  07F5               	addwf	___wmul@product+1,f
  7786  1921                     l383:
  7787  1921  3001               	movlw	1
  7788  1922                     u5065:
  7789  1922  1003               	clrc
  7790  1923  0DF2               	rlf	___wmul@multiplicand,f
  7791  1924  0DF3               	rlf	___wmul@multiplicand+1,f
  7792  1925  3EFF               	addlw	-1
  7793  1926  1D03               	skipz
  7794  1927  2922               	goto	u5065
  7795  1928                     l3210:
  7796  1928  3001               	movlw	1
  7797  1929                     u5075:
  7798  1929  1003               	clrc
  7799  192A  0CF1               	rrf	___wmul@multiplier+1,f
  7800  192B  0CF0               	rrf	___wmul@multiplier,f
  7801  192C  3EFF               	addlw	-1
  7802  192D  1D03               	skipz
  7803  192E  2929               	goto	u5075
  7804  192F                     l3212:
  7805  192F  0870               	movf	___wmul@multiplier,w
  7806  1930  0471               	iorwf	___wmul@multiplier+1,w
  7807  1931  1D03               	btfss	3,2
  7808  1932  2934               	goto	u5081
  7809  1933  2935               	goto	u5080
  7810  1934                     u5081:
  7811  1934  2917               	goto	l3206
  7812  1935                     u5080:
  7813  1935                     l3214:
  7814  1935  0875               	movf	___wmul@product+1,w
  7815  1936  00F1               	movwf	?___wmul+1
  7816  1937  0874               	movf	___wmul@product,w
  7817  1938  00F0               	movwf	?___wmul
  7818  1939                     l385:
  7819  1939  0008               	return
  7820  193A                     __end_of___wmul:
  7821                           
  7822                           	psect	text15
  7823  1BEE                     __ptext15:	
  7824 ;; *************** function ___llmod *****************
  7825 ;; Defined at:
  7826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  divisor         4    0[BANK0 ] unsigned long 
  7829 ;;  dividend        4    4[BANK0 ] unsigned long 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  counter         1    9[BANK0 ] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  4    0[BANK0 ] unsigned long 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         0       8       0       0       0
  7842 ;;      Locals:         0       1       0       0       0
  7843 ;;      Temps:          0       1       0       0       0
  7844 ;;      Totals:         0      10       0       0       0
  7845 ;;Total ram usage:       10 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_sprintf
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           
  7855                           ;psect for function ___llmod
  7856  1BEE                     ___llmod:
  7857  1BEE                     l3294:	
  7858                           ;incstack = 0
  7859                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7860                           
  7861  1BEE  1283               	bcf	3,5	;RP0=0, select bank0
  7862  1BEF  1303               	bcf	3,6	;RP1=0, select bank0
  7863  1BF0  0823               	movf	___llmod@divisor+3,w
  7864  1BF1  0422               	iorwf	___llmod@divisor+2,w
  7865  1BF2  0421               	iorwf	___llmod@divisor+1,w
  7866  1BF3  0420               	iorwf	___llmod@divisor,w
  7867  1BF4  1903               	skipnz
  7868  1BF5  2BF7               	goto	u5301
  7869  1BF6  2BF8               	goto	u5300
  7870  1BF7                     u5301:
  7871  1BF7  2C3B               	goto	l3310
  7872  1BF8                     u5300:
  7873  1BF8                     l3296:
  7874  1BF8  01A9               	clrf	___llmod@counter
  7875  1BF9  0AA9               	incf	___llmod@counter,f
  7876  1BFA  2C08               	goto	l3300
  7877  1BFB                     l3298:
  7878  1BFB  3001               	movlw	1
  7879  1BFC  00A8               	movwf	??___llmod
  7880  1BFD                     u5315:
  7881  1BFD  1003               	clrc
  7882  1BFE  0DA0               	rlf	___llmod@divisor,f
  7883  1BFF  0DA1               	rlf	___llmod@divisor+1,f
  7884  1C00  0DA2               	rlf	___llmod@divisor+2,f
  7885  1C01  0DA3               	rlf	___llmod@divisor+3,f
  7886  1C02  0BA8               	decfsz	??___llmod,f
  7887  1C03  2BFD               	goto	u5315
  7888  1C04  3001               	movlw	1
  7889  1C05  00A8               	movwf	??___llmod
  7890  1C06  0828               	movf	??___llmod,w
  7891  1C07  07A9               	addwf	___llmod@counter,f
  7892  1C08                     l3300:
  7893  1C08  1FA3               	btfss	___llmod@divisor+3,7
  7894  1C09  2C0B               	goto	u5321
  7895  1C0A  2C0C               	goto	u5320
  7896  1C0B                     u5321:
  7897  1C0B  2BFB               	goto	l3298
  7898  1C0C                     u5320:
  7899  1C0C                     l3302:
  7900  1C0C  0823               	movf	___llmod@divisor+3,w
  7901  1C0D  0227               	subwf	___llmod@dividend+3,w
  7902  1C0E  1D03               	skipz
  7903  1C0F  2C1A               	goto	u5335
  7904  1C10  0822               	movf	___llmod@divisor+2,w
  7905  1C11  0226               	subwf	___llmod@dividend+2,w
  7906  1C12  1D03               	skipz
  7907  1C13  2C1A               	goto	u5335
  7908  1C14  0821               	movf	___llmod@divisor+1,w
  7909  1C15  0225               	subwf	___llmod@dividend+1,w
  7910  1C16  1D03               	skipz
  7911  1C17  2C1A               	goto	u5335
  7912  1C18  0820               	movf	___llmod@divisor,w
  7913  1C19  0224               	subwf	___llmod@dividend,w
  7914  1C1A                     u5335:
  7915  1C1A  1C03               	skipc
  7916  1C1B  2C1D               	goto	u5331
  7917  1C1C  2C1E               	goto	u5330
  7918  1C1D                     u5331:
  7919  1C1D  2C2C               	goto	l3306
  7920  1C1E                     u5330:
  7921  1C1E                     l3304:
  7922  1C1E  0820               	movf	___llmod@divisor,w
  7923  1C1F  02A4               	subwf	___llmod@dividend,f
  7924  1C20  0821               	movf	___llmod@divisor+1,w
  7925  1C21  1C03               	skipc
  7926  1C22  0F21               	incfsz	___llmod@divisor+1,w
  7927  1C23  02A5               	subwf	___llmod@dividend+1,f
  7928  1C24  0822               	movf	___llmod@divisor+2,w
  7929  1C25  1C03               	skipc
  7930  1C26  0F22               	incfsz	___llmod@divisor+2,w
  7931  1C27  02A6               	subwf	___llmod@dividend+2,f
  7932  1C28  0823               	movf	___llmod@divisor+3,w
  7933  1C29  1C03               	skipc
  7934  1C2A  0F23               	incfsz	___llmod@divisor+3,w
  7935  1C2B  02A7               	subwf	___llmod@dividend+3,f
  7936  1C2C                     l3306:
  7937  1C2C  3001               	movlw	1
  7938  1C2D                     u5345:
  7939  1C2D  1003               	clrc
  7940  1C2E  0CA3               	rrf	___llmod@divisor+3,f
  7941  1C2F  0CA2               	rrf	___llmod@divisor+2,f
  7942  1C30  0CA1               	rrf	___llmod@divisor+1,f
  7943  1C31  0CA0               	rrf	___llmod@divisor,f
  7944  1C32  3EFF               	addlw	-1
  7945  1C33  1D03               	skipz
  7946  1C34  2C2D               	goto	u5345
  7947  1C35                     l3308:
  7948  1C35  3001               	movlw	1
  7949  1C36  02A9               	subwf	___llmod@counter,f
  7950  1C37  1D03               	btfss	3,2
  7951  1C38  2C3A               	goto	u5351
  7952  1C39  2C3B               	goto	u5350
  7953  1C3A                     u5351:
  7954  1C3A  2C0C               	goto	l3302
  7955  1C3B                     u5350:
  7956  1C3B                     l3310:
  7957  1C3B  0827               	movf	___llmod@dividend+3,w
  7958  1C3C  00A3               	movwf	?___llmod+3
  7959  1C3D  0826               	movf	___llmod@dividend+2,w
  7960  1C3E  00A2               	movwf	?___llmod+2
  7961  1C3F  0825               	movf	___llmod@dividend+1,w
  7962  1C40  00A1               	movwf	?___llmod+1
  7963  1C41  0824               	movf	___llmod@dividend,w
  7964  1C42  00A0               	movwf	?___llmod
  7965  1C43                     l639:
  7966  1C43  0008               	return
  7967  1C44                     __end_of___llmod:
  7968                           
  7969                           	psect	text16
  7970  08C4                     __ptext16:	
  7971 ;; *************** function ___fltol *****************
  7972 ;; Defined at:
  7973 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;  f1              4   49[BANK0 ] unsigned long 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  exp1            1   59[BANK0 ] unsigned char 
  7978 ;;  sign1           1   58[BANK0 ] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  4   49[BANK0 ] long 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2, status,0
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7988 ;;      Params:         0       4       0       0       0
  7989 ;;      Locals:         0       2       0       0       0
  7990 ;;      Temps:          0       5       0       0       0
  7991 ;;      Totals:         0      11       0       0       0
  7992 ;;Total ram usage:       11 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_sprintf
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           
  8002                           ;psect for function ___fltol
  8003  08C4                     ___fltol:
  8004  08C4                     l3258:	
  8005                           ;incstack = 0
  8006                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8007                           
  8008  08C4  1003               	clrc
  8009  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  8010  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  8011  08C7  0D53               	rlf	___fltol@f1+2,w
  8012  08C8  0D54               	rlf	___fltol@f1+3,w
  8013  08C9  00D5               	movwf	??___fltol
  8014  08CA  0855               	movf	??___fltol,w
  8015  08CB  00DB               	movwf	___fltol@exp1
  8016  08CC  085B               	movf	___fltol@exp1,w
  8017  08CD  1D03               	btfss	3,2
  8018  08CE  28D0               	goto	u5201
  8019  08CF  28D1               	goto	u5200
  8020  08D0                     u5201:
  8021  08D0  28DA               	goto	l3264
  8022  08D1                     u5200:
  8023  08D1                     l3260:
  8024  08D1  3000               	movlw	0
  8025  08D2  00D4               	movwf	?___fltol+3
  8026  08D3  3000               	movlw	0
  8027  08D4  00D3               	movwf	?___fltol+2
  8028  08D5  3000               	movlw	0
  8029  08D6  00D2               	movwf	?___fltol+1
  8030  08D7  3000               	movlw	0
  8031  08D8  00D1               	movwf	?___fltol
  8032  08D9  293F               	goto	l586
  8033  08DA                     l3264:
  8034  08DA  0851               	movf	___fltol@f1,w
  8035  08DB  00D5               	movwf	??___fltol
  8036  08DC  0852               	movf	___fltol@f1+1,w
  8037  08DD  00D6               	movwf	??___fltol+1
  8038  08DE  0853               	movf	___fltol@f1+2,w
  8039  08DF  00D7               	movwf	??___fltol+2
  8040  08E0  0854               	movf	___fltol@f1+3,w
  8041  08E1  00D8               	movwf	??___fltol+3
  8042  08E2  301F               	movlw	31
  8043  08E3                     u5215:
  8044  08E3  1003               	clrc
  8045  08E4  0CD8               	rrf	??___fltol+3,f
  8046  08E5  0CD7               	rrf	??___fltol+2,f
  8047  08E6  0CD6               	rrf	??___fltol+1,f
  8048  08E7  0CD5               	rrf	??___fltol,f
  8049  08E8                     u5210:
  8050  08E8  3EFF               	addlw	-1
  8051  08E9  1D03               	skipz
  8052  08EA  28E3               	goto	u5215
  8053  08EB  0855               	movf	??___fltol,w
  8054  08EC  00D9               	movwf	??___fltol+4
  8055  08ED  0859               	movf	??___fltol+4,w
  8056  08EE  00DA               	movwf	___fltol@sign1
  8057  08EF                     l3266:
  8058  08EF  17D3               	bsf	___fltol@f1+2,7
  8059  08F0                     l3268:
  8060  08F0  30FF               	movlw	255
  8061  08F1  05D1               	andwf	___fltol@f1,f
  8062  08F2  30FF               	movlw	255
  8063  08F3  05D2               	andwf	___fltol@f1+1,f
  8064  08F4  30FF               	movlw	255
  8065  08F5  05D3               	andwf	___fltol@f1+2,f
  8066  08F6  3000               	movlw	0
  8067  08F7  05D4               	andwf	___fltol@f1+3,f
  8068  08F8                     l3270:
  8069  08F8  3096               	movlw	150
  8070  08F9  02DB               	subwf	___fltol@exp1,f
  8071  08FA                     l3272:
  8072  08FA  1FDB               	btfss	___fltol@exp1,7
  8073  08FB  28FD               	goto	u5221
  8074  08FC  28FE               	goto	u5220
  8075  08FD                     u5221:
  8076  08FD  2918               	goto	l3282
  8077  08FE                     u5220:
  8078  08FE                     l3274:
  8079  08FE  085B               	movf	___fltol@exp1,w
  8080  08FF  3A80               	xorlw	128
  8081  0900  3E97               	addlw	151
  8082  0901  1803               	skipnc
  8083  0902  2904               	goto	u5231
  8084  0903  2905               	goto	u5230
  8085  0904                     u5231:
  8086  0904  2906               	goto	l3280
  8087  0905                     u5230:
  8088  0905  28D1               	goto	l3260
  8089  0906                     l3280:
  8090  0906  3001               	movlw	1
  8091  0907                     u5245:
  8092  0907  1003               	clrc
  8093  0908  0CD4               	rrf	___fltol@f1+3,f
  8094  0909  0CD3               	rrf	___fltol@f1+2,f
  8095  090A  0CD2               	rrf	___fltol@f1+1,f
  8096  090B  0CD1               	rrf	___fltol@f1,f
  8097  090C  3EFF               	addlw	-1
  8098  090D  1D03               	skipz
  8099  090E  2907               	goto	u5245
  8100  090F  3001               	movlw	1
  8101  0910  00D5               	movwf	??___fltol
  8102  0911  0855               	movf	??___fltol,w
  8103  0912  07DB               	addwf	___fltol@exp1,f
  8104  0913  1D03               	btfss	3,2
  8105  0914  2916               	goto	u5251
  8106  0915  2917               	goto	u5250
  8107  0916                     u5251:
  8108  0916  2906               	goto	l3280
  8109  0917                     u5250:
  8110  0917  292F               	goto	l3290
  8111  0918                     l3282:
  8112  0918  3020               	movlw	32
  8113  0919  025B               	subwf	___fltol@exp1,w
  8114  091A  1C03               	skipc
  8115  091B  291D               	goto	u5261
  8116  091C  291E               	goto	u5260
  8117  091D                     u5261:
  8118  091D  292A               	goto	l593
  8119  091E                     u5260:
  8120  091E  28D1               	goto	l3260
  8121  091F                     l3288:
  8122  091F  3001               	movlw	1
  8123  0920  00D5               	movwf	??___fltol
  8124  0921                     u5275:
  8125  0921  1003               	clrc
  8126  0922  0DD1               	rlf	___fltol@f1,f
  8127  0923  0DD2               	rlf	___fltol@f1+1,f
  8128  0924  0DD3               	rlf	___fltol@f1+2,f
  8129  0925  0DD4               	rlf	___fltol@f1+3,f
  8130  0926  0BD5               	decfsz	??___fltol,f
  8131  0927  2921               	goto	u5275
  8132  0928  3001               	movlw	1
  8133  0929  02DB               	subwf	___fltol@exp1,f
  8134  092A                     l593:
  8135  092A  085B               	movf	___fltol@exp1,w
  8136  092B  1D03               	btfss	3,2
  8137  092C  292E               	goto	u5281
  8138  092D  292F               	goto	u5280
  8139  092E                     u5281:
  8140  092E  291F               	goto	l3288
  8141  092F                     u5280:
  8142  092F                     l3290:
  8143  092F  085A               	movf	___fltol@sign1,w
  8144  0930  1903               	btfsc	3,2
  8145  0931  2933               	goto	u5291
  8146  0932  2934               	goto	u5290
  8147  0933                     u5291:
  8148  0933  293F               	goto	l596
  8149  0934                     u5290:
  8150  0934                     l3292:
  8151  0934  09D1               	comf	___fltol@f1,f
  8152  0935  09D2               	comf	___fltol@f1+1,f
  8153  0936  09D3               	comf	___fltol@f1+2,f
  8154  0937  09D4               	comf	___fltol@f1+3,f
  8155  0938  0AD1               	incf	___fltol@f1,f
  8156  0939  1903               	skipnz
  8157  093A  0AD2               	incf	___fltol@f1+1,f
  8158  093B  1903               	skipnz
  8159  093C  0AD3               	incf	___fltol@f1+2,f
  8160  093D  1903               	skipnz
  8161  093E  0AD4               	incf	___fltol@f1+3,f
  8162  093F                     l596:
  8163  093F                     l586:
  8164  093F  0008               	return
  8165  0940                     __end_of___fltol:
  8166                           
  8167                           	psect	text17
  8168  1B4D                     __ptext17:	
  8169 ;; *************** function ___flsub *****************
  8170 ;; Defined at:
  8171 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  a               4    0[BANK1 ] long 
  8174 ;;  b               4    4[BANK1 ] long 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  4    0[BANK1 ] long 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8186 ;;      Params:         0       0       8       0       0
  8187 ;;      Locals:         0       0       0       0       0
  8188 ;;      Temps:          0       0       0       0       0
  8189 ;;      Totals:         0       0       8       0       0
  8190 ;;Total ram usage:        8 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    1
  8193 ;; This function calls:
  8194 ;;		___fladd
  8195 ;; This function is called by:
  8196 ;;		_sprintf
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           
  8201                           ;psect for function ___flsub
  8202  1B4D                     ___flsub:
  8203  1B4D                     l3314:	
  8204                           ;incstack = 0
  8205                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8206                           
  8207  1B4D  3080               	movlw	128
  8208  1B4E  1683               	bsf	3,5	;RP0=1, select bank1
  8209  1B4F  1303               	bcf	3,6	;RP1=0, select bank1
  8210  1B50  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8211  1B51                     l3316:
  8212  1B51  0827               	movf	(___flsub@b+3)^(0+128),w
  8213  1B52  1283               	bcf	3,5	;RP0=0, select bank0
  8214  1B53  1303               	bcf	3,6	;RP1=0, select bank0
  8215  1B54  00DB               	movwf	___fladd@b+3
  8216  1B55  1683               	bsf	3,5	;RP0=1, select bank1
  8217  1B56  1303               	bcf	3,6	;RP1=0, select bank1
  8218  1B57  0826               	movf	(___flsub@b+2)^(0+128),w
  8219  1B58  1283               	bcf	3,5	;RP0=0, select bank0
  8220  1B59  1303               	bcf	3,6	;RP1=0, select bank0
  8221  1B5A  00DA               	movwf	___fladd@b+2
  8222  1B5B  1683               	bsf	3,5	;RP0=1, select bank1
  8223  1B5C  1303               	bcf	3,6	;RP1=0, select bank1
  8224  1B5D  0825               	movf	(___flsub@b+1)^(0+128),w
  8225  1B5E  1283               	bcf	3,5	;RP0=0, select bank0
  8226  1B5F  1303               	bcf	3,6	;RP1=0, select bank0
  8227  1B60  00D9               	movwf	___fladd@b+1
  8228  1B61  1683               	bsf	3,5	;RP0=1, select bank1
  8229  1B62  1303               	bcf	3,6	;RP1=0, select bank1
  8230  1B63  0824               	movf	___flsub@b^(0+128),w
  8231  1B64  1283               	bcf	3,5	;RP0=0, select bank0
  8232  1B65  1303               	bcf	3,6	;RP1=0, select bank0
  8233  1B66  00D8               	movwf	___fladd@b
  8234  1B67  1683               	bsf	3,5	;RP0=1, select bank1
  8235  1B68  1303               	bcf	3,6	;RP1=0, select bank1
  8236  1B69  0823               	movf	(___flsub@a+3)^(0+128),w
  8237  1B6A  1283               	bcf	3,5	;RP0=0, select bank0
  8238  1B6B  1303               	bcf	3,6	;RP1=0, select bank0
  8239  1B6C  00DF               	movwf	___fladd@a+3
  8240  1B6D  1683               	bsf	3,5	;RP0=1, select bank1
  8241  1B6E  1303               	bcf	3,6	;RP1=0, select bank1
  8242  1B6F  0822               	movf	(___flsub@a+2)^(0+128),w
  8243  1B70  1283               	bcf	3,5	;RP0=0, select bank0
  8244  1B71  1303               	bcf	3,6	;RP1=0, select bank0
  8245  1B72  00DE               	movwf	___fladd@a+2
  8246  1B73  1683               	bsf	3,5	;RP0=1, select bank1
  8247  1B74  1303               	bcf	3,6	;RP1=0, select bank1
  8248  1B75  0821               	movf	(___flsub@a+1)^(0+128),w
  8249  1B76  1283               	bcf	3,5	;RP0=0, select bank0
  8250  1B77  1303               	bcf	3,6	;RP1=0, select bank0
  8251  1B78  00DD               	movwf	___fladd@a+1
  8252  1B79  1683               	bsf	3,5	;RP0=1, select bank1
  8253  1B7A  1303               	bcf	3,6	;RP1=0, select bank1
  8254  1B7B  0820               	movf	___flsub@a^(0+128),w
  8255  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
  8256  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
  8257  1B7E  00DC               	movwf	___fladd@a
  8258  1B7F  160A  118A  2578  160A  158A  	fcall	___fladd
  8259  1B84  1283               	bcf	3,5	;RP0=0, select bank0
  8260  1B85  1303               	bcf	3,6	;RP1=0, select bank0
  8261  1B86  085B               	movf	?___fladd+3,w
  8262  1B87  1683               	bsf	3,5	;RP0=1, select bank1
  8263  1B88  1303               	bcf	3,6	;RP1=0, select bank1
  8264  1B89  00A3               	movwf	(?___flsub+3)^(0+128)
  8265  1B8A  1283               	bcf	3,5	;RP0=0, select bank0
  8266  1B8B  1303               	bcf	3,6	;RP1=0, select bank0
  8267  1B8C  085A               	movf	?___fladd+2,w
  8268  1B8D  1683               	bsf	3,5	;RP0=1, select bank1
  8269  1B8E  1303               	bcf	3,6	;RP1=0, select bank1
  8270  1B8F  00A2               	movwf	(?___flsub+2)^(0+128)
  8271  1B90  1283               	bcf	3,5	;RP0=0, select bank0
  8272  1B91  1303               	bcf	3,6	;RP1=0, select bank0
  8273  1B92  0859               	movf	?___fladd+1,w
  8274  1B93  1683               	bsf	3,5	;RP0=1, select bank1
  8275  1B94  1303               	bcf	3,6	;RP1=0, select bank1
  8276  1B95  00A1               	movwf	(?___flsub+1)^(0+128)
  8277  1B96  1283               	bcf	3,5	;RP0=0, select bank0
  8278  1B97  1303               	bcf	3,6	;RP1=0, select bank0
  8279  1B98  0858               	movf	?___fladd,w
  8280  1B99  1683               	bsf	3,5	;RP0=1, select bank1
  8281  1B9A  1303               	bcf	3,6	;RP1=0, select bank1
  8282  1B9B  00A0               	movwf	?___flsub^(0+128)
  8283  1B9C                     l756:
  8284  1B9C  0008               	return
  8285  1B9D                     __end_of___flsub:
  8286                           
  8287                           	psect	text18
  8288  1578                     __ptext18:	
  8289 ;; *************** function ___fladd *****************
  8290 ;; Defined at:
  8291 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  b               4   56[BANK0 ] long 
  8294 ;;  a               4   60[BANK0 ] long 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  grs             1   75[BANK0 ] unsigned char 
  8297 ;;  bexp            1   74[BANK0 ] unsigned char 
  8298 ;;  aexp            1   73[BANK0 ] unsigned char 
  8299 ;;  signs           1   72[BANK0 ] unsigned char 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  4   56[BANK0 ] unsigned char 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0, btemp+1
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8309 ;;      Params:         0       8       0       0       0
  8310 ;;      Locals:         0       4       0       0       0
  8311 ;;      Temps:          0       8       0       0       0
  8312 ;;      Totals:         0      20       0       0       0
  8313 ;;Total ram usage:       20 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_main
  8319 ;;		_sprintf
  8320 ;;		___flsub
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           
  8325                           ;psect for function ___fladd
  8326  1578                     ___fladd:
  8327  1578                     l2650:	
  8328                           ;incstack = 0
  8329                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8330                           
  8331  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8332  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8333  157A  085B               	movf	___fladd@b+3,w
  8334  157B  3980               	andlw	128
  8335  157C  00E0               	movwf	??___fladd
  8336  157D  0860               	movf	??___fladd,w
  8337  157E  00E8               	movwf	___fladd@signs
  8338  157F                     l2652:
  8339  157F  085B               	movf	___fladd@b+3,w
  8340  1580  00E0               	movwf	??___fladd
  8341  1581  0760               	addwf	??___fladd,w
  8342  1582  00E1               	movwf	??___fladd+1
  8343  1583  0861               	movf	??___fladd+1,w
  8344  1584  00EA               	movwf	___fladd@bexp
  8345  1585                     l2654:
  8346  1585  1FDA               	btfss	___fladd@b+2,7
  8347  1586  2D88               	goto	u3611
  8348  1587  2D89               	goto	u3610
  8349  1588                     u3611:
  8350  1588  2D8A               	goto	l2658
  8351  1589                     u3610:
  8352  1589                     l2656:
  8353  1589  146A               	bsf	___fladd@bexp,0
  8354  158A                     l2658:
  8355  158A  086A               	movf	___fladd@bexp,w
  8356  158B  1903               	btfsc	3,2
  8357  158C  2D8E               	goto	u3621
  8358  158D  2D8F               	goto	u3620
  8359  158E                     u3621:
  8360  158E  2D9F               	goto	l2668
  8361  158F                     u3620:
  8362  158F                     l2660:
  8363  158F  0A6A               	incf	___fladd@bexp,w
  8364  1590  1D03               	btfss	3,2
  8365  1591  2D93               	goto	u3631
  8366  1592  2D94               	goto	u3630
  8367  1593                     u3631:
  8368  1593  2D9C               	goto	l2664
  8369  1594                     u3630:
  8370  1594                     l2662:
  8371  1594  3000               	movlw	0
  8372  1595  00DB               	movwf	___fladd@b+3
  8373  1596  3000               	movlw	0
  8374  1597  00DA               	movwf	___fladd@b+2
  8375  1598  3000               	movlw	0
  8376  1599  00D9               	movwf	___fladd@b+1
  8377  159A  3000               	movlw	0
  8378  159B  00D8               	movwf	___fladd@b
  8379  159C                     l2664:
  8380  159C  17DA               	bsf	___fladd@b+2,7
  8381  159D                     l2666:
  8382  159D  01DB               	clrf	___fladd@b+3
  8383  159E  2DA7               	goto	l2670
  8384  159F                     l2668:
  8385  159F  3000               	movlw	0
  8386  15A0  00DB               	movwf	___fladd@b+3
  8387  15A1  3000               	movlw	0
  8388  15A2  00DA               	movwf	___fladd@b+2
  8389  15A3  3000               	movlw	0
  8390  15A4  00D9               	movwf	___fladd@b+1
  8391  15A5  3000               	movlw	0
  8392  15A6  00D8               	movwf	___fladd@b
  8393  15A7                     l2670:
  8394  15A7  085F               	movf	___fladd@a+3,w
  8395  15A8  3980               	andlw	128
  8396  15A9  00E0               	movwf	??___fladd
  8397  15AA  0860               	movf	??___fladd,w
  8398  15AB  00E9               	movwf	___fladd@aexp
  8399  15AC                     l2672:
  8400  15AC  0869               	movf	___fladd@aexp,w
  8401  15AD  0668               	xorwf	___fladd@signs,w
  8402  15AE  1903               	skipnz
  8403  15AF  2DB1               	goto	u3641
  8404  15B0  2DB2               	goto	u3640
  8405  15B1                     u3641:
  8406  15B1  2DB3               	goto	l2676
  8407  15B2                     u3640:
  8408  15B2                     l2674:
  8409  15B2  1768               	bsf	___fladd@signs,6
  8410  15B3                     l2676:
  8411  15B3  085F               	movf	___fladd@a+3,w
  8412  15B4  00E0               	movwf	??___fladd
  8413  15B5  0760               	addwf	??___fladd,w
  8414  15B6  00E1               	movwf	??___fladd+1
  8415  15B7  0861               	movf	??___fladd+1,w
  8416  15B8  00E9               	movwf	___fladd@aexp
  8417  15B9                     l2678:
  8418  15B9  1FDE               	btfss	___fladd@a+2,7
  8419  15BA  2DBC               	goto	u3651
  8420  15BB  2DBD               	goto	u3650
  8421  15BC                     u3651:
  8422  15BC  2DBE               	goto	l2682
  8423  15BD                     u3650:
  8424  15BD                     l2680:
  8425  15BD  1469               	bsf	___fladd@aexp,0
  8426  15BE                     l2682:
  8427  15BE  0869               	movf	___fladd@aexp,w
  8428  15BF  1903               	btfsc	3,2
  8429  15C0  2DC2               	goto	u3661
  8430  15C1  2DC3               	goto	u3660
  8431  15C2                     u3661:
  8432  15C2  2DD3               	goto	l2692
  8433  15C3                     u3660:
  8434  15C3                     l2684:
  8435  15C3  0A69               	incf	___fladd@aexp,w
  8436  15C4  1D03               	btfss	3,2
  8437  15C5  2DC7               	goto	u3671
  8438  15C6  2DC8               	goto	u3670
  8439  15C7                     u3671:
  8440  15C7  2DD0               	goto	l2688
  8441  15C8                     u3670:
  8442  15C8                     l2686:
  8443  15C8  3000               	movlw	0
  8444  15C9  00DF               	movwf	___fladd@a+3
  8445  15CA  3000               	movlw	0
  8446  15CB  00DE               	movwf	___fladd@a+2
  8447  15CC  3000               	movlw	0
  8448  15CD  00DD               	movwf	___fladd@a+1
  8449  15CE  3000               	movlw	0
  8450  15CF  00DC               	movwf	___fladd@a
  8451  15D0                     l2688:
  8452  15D0  17DE               	bsf	___fladd@a+2,7
  8453  15D1                     l2690:
  8454  15D1  01DF               	clrf	___fladd@a+3
  8455  15D2  2DDB               	goto	l710
  8456  15D3                     l2692:
  8457  15D3  3000               	movlw	0
  8458  15D4  00DF               	movwf	___fladd@a+3
  8459  15D5  3000               	movlw	0
  8460  15D6  00DE               	movwf	___fladd@a+2
  8461  15D7  3000               	movlw	0
  8462  15D8  00DD               	movwf	___fladd@a+1
  8463  15D9  3000               	movlw	0
  8464  15DA  00DC               	movwf	___fladd@a
  8465  15DB                     l710:
  8466  15DB  086A               	movf	___fladd@bexp,w
  8467  15DC  0269               	subwf	___fladd@aexp,w
  8468  15DD  1803               	skipnc
  8469  15DE  2DE0               	goto	u3681
  8470  15DF  2DE1               	goto	u3680
  8471  15E0                     u3681:
  8472  15E0  2E25               	goto	l2728
  8473  15E1                     u3680:
  8474  15E1                     l2694:
  8475  15E1  1F68               	btfss	___fladd@signs,6
  8476  15E2  2DE4               	goto	u3691
  8477  15E3  2DE5               	goto	u3690
  8478  15E4                     u3691:
  8479  15E4  2DE9               	goto	l2698
  8480  15E5                     u3690:
  8481  15E5                     l2696:
  8482  15E5  3080               	movlw	128
  8483  15E6  00E0               	movwf	??___fladd
  8484  15E7  0860               	movf	??___fladd,w
  8485  15E8  06E8               	xorwf	___fladd@signs,f
  8486  15E9                     l2698:
  8487  15E9  086A               	movf	___fladd@bexp,w
  8488  15EA  00E0               	movwf	??___fladd
  8489  15EB  0860               	movf	??___fladd,w
  8490  15EC  00EB               	movwf	___fladd@grs
  8491  15ED                     l2700:
  8492  15ED  0869               	movf	___fladd@aexp,w
  8493  15EE  00E0               	movwf	??___fladd
  8494  15EF  0860               	movf	??___fladd,w
  8495  15F0  00EA               	movwf	___fladd@bexp
  8496  15F1                     l2702:
  8497  15F1  086B               	movf	___fladd@grs,w
  8498  15F2  00E0               	movwf	??___fladd
  8499  15F3  0860               	movf	??___fladd,w
  8500  15F4  00E9               	movwf	___fladd@aexp
  8501  15F5                     l2704:
  8502  15F5  0858               	movf	___fladd@b,w
  8503  15F6  00E0               	movwf	??___fladd
  8504  15F7  0860               	movf	??___fladd,w
  8505  15F8  00EB               	movwf	___fladd@grs
  8506  15F9                     l2706:
  8507  15F9  085C               	movf	___fladd@a,w
  8508  15FA  00E0               	movwf	??___fladd
  8509  15FB  0860               	movf	??___fladd,w
  8510  15FC  00D8               	movwf	___fladd@b
  8511  15FD                     l2708:
  8512  15FD  086B               	movf	___fladd@grs,w
  8513  15FE  00E0               	movwf	??___fladd
  8514  15FF  0860               	movf	??___fladd,w
  8515  1600  00DC               	movwf	___fladd@a
  8516  1601                     l2710:
  8517  1601  0859               	movf	___fladd@b+1,w
  8518  1602  00E0               	movwf	??___fladd
  8519  1603  0860               	movf	??___fladd,w
  8520  1604  00EB               	movwf	___fladd@grs
  8521  1605                     l2712:
  8522  1605  085D               	movf	___fladd@a+1,w
  8523  1606  00E0               	movwf	??___fladd
  8524  1607  0860               	movf	??___fladd,w
  8525  1608  00D9               	movwf	___fladd@b+1
  8526  1609                     l2714:
  8527  1609  086B               	movf	___fladd@grs,w
  8528  160A  00E0               	movwf	??___fladd
  8529  160B  0860               	movf	??___fladd,w
  8530  160C  00DD               	movwf	___fladd@a+1
  8531  160D                     l2716:
  8532  160D  085A               	movf	___fladd@b+2,w
  8533  160E  00E0               	movwf	??___fladd
  8534  160F  0860               	movf	??___fladd,w
  8535  1610  00EB               	movwf	___fladd@grs
  8536  1611                     l2718:
  8537  1611  085E               	movf	___fladd@a+2,w
  8538  1612  00E0               	movwf	??___fladd
  8539  1613  0860               	movf	??___fladd,w
  8540  1614  00DA               	movwf	___fladd@b+2
  8541  1615                     l2720:
  8542  1615  086B               	movf	___fladd@grs,w
  8543  1616  00E0               	movwf	??___fladd
  8544  1617  0860               	movf	??___fladd,w
  8545  1618  00DE               	movwf	___fladd@a+2
  8546  1619                     l2722:
  8547  1619  085B               	movf	___fladd@b+3,w
  8548  161A  00E0               	movwf	??___fladd
  8549  161B  0860               	movf	??___fladd,w
  8550  161C  00EB               	movwf	___fladd@grs
  8551  161D                     l2724:
  8552  161D  085F               	movf	___fladd@a+3,w
  8553  161E  00E0               	movwf	??___fladd
  8554  161F  0860               	movf	??___fladd,w
  8555  1620  00DB               	movwf	___fladd@b+3
  8556  1621                     l2726:
  8557  1621  086B               	movf	___fladd@grs,w
  8558  1622  00E0               	movwf	??___fladd
  8559  1623  0860               	movf	??___fladd,w
  8560  1624  00DF               	movwf	___fladd@a+3
  8561  1625                     l2728:
  8562  1625  01EB               	clrf	___fladd@grs
  8563  1626                     l2730:
  8564  1626  0869               	movf	___fladd@aexp,w
  8565  1627  00E0               	movwf	??___fladd
  8566  1628  01E1               	clrf	??___fladd+1
  8567  1629  0861               	movf	??___fladd+1,w
  8568  162A  00E3               	movwf	??___fladd+3
  8569  162B  086A               	movf	___fladd@bexp,w
  8570  162C  0260               	subwf	??___fladd,w
  8571  162D  00E2               	movwf	??___fladd+2
  8572  162E  1C03               	skipc
  8573  162F  03E3               	decf	??___fladd+3,f
  8574  1630  0863               	movf	??___fladd+3,w
  8575  1631  3A80               	xorlw	128
  8576  1632  00FF               	movwf	btemp+1
  8577  1633  3080               	movlw	128
  8578  1634  027F               	subwf	btemp+1,w
  8579  1635  1D03               	skipz
  8580  1636  2E39               	goto	u3705
  8581  1637  301A               	movlw	26
  8582  1638  0262               	subwf	??___fladd+2,w
  8583  1639                     u3705:
  8584  1639  1C03               	skipc
  8585  163A  2E3C               	goto	u3701
  8586  163B  2E3D               	goto	u3700
  8587  163C                     u3701:
  8588  163C  2E7A               	goto	l2746
  8589  163D                     u3700:
  8590  163D                     l2732:
  8591  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8592  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8593  163F  085B               	movf	___fladd@b+3,w
  8594  1640  045A               	iorwf	___fladd@b+2,w
  8595  1641  0459               	iorwf	___fladd@b+1,w
  8596  1642  0458               	iorwf	___fladd@b,w
  8597  1643  1D03               	skipz
  8598  1644  2E46               	goto	u3711
  8599  1645  2E48               	goto	u3710
  8600  1646                     u3711:
  8601  1646  3001               	movlw	1
  8602  1647  2E49               	goto	u3720
  8603  1648                     u3710:
  8604  1648  3000               	movlw	0
  8605  1649                     u3720:
  8606  1649  00E0               	movwf	??___fladd
  8607  164A  0860               	movf	??___fladd,w
  8608  164B  00EB               	movwf	___fladd@grs
  8609  164C  3000               	movlw	0
  8610  164D  00DB               	movwf	___fladd@b+3
  8611  164E  3000               	movlw	0
  8612  164F  00DA               	movwf	___fladd@b+2
  8613  1650  3000               	movlw	0
  8614  1651  00D9               	movwf	___fladd@b+1
  8615  1652  3000               	movlw	0
  8616  1653  00D8               	movwf	___fladd@b
  8617  1654  0869               	movf	___fladd@aexp,w
  8618  1655  00E0               	movwf	??___fladd
  8619  1656  0860               	movf	??___fladd,w
  8620  1657  00EA               	movwf	___fladd@bexp
  8621  1658  2E82               	goto	l714
  8622  1659                     l716:
  8623  1659  1C6B               	btfss	___fladd@grs,0
  8624  165A  2E5C               	goto	u3731
  8625  165B  2E5D               	goto	u3730
  8626  165C                     u3731:
  8627  165C  2E66               	goto	l2736
  8628  165D                     u3730:
  8629  165D                     l2734:
  8630  165D  086B               	movf	___fladd@grs,w
  8631  165E  00E0               	movwf	??___fladd
  8632  165F  1003               	clrc
  8633  1660  0C60               	rrf	??___fladd,w
  8634  1661  3801               	iorlw	1
  8635  1662  00E1               	movwf	??___fladd+1
  8636  1663  0861               	movf	??___fladd+1,w
  8637  1664  00EB               	movwf	___fladd@grs
  8638  1665  2E68               	goto	l2738
  8639  1666                     l2736:
  8640  1666  1003               	clrc
  8641  1667  0CEB               	rrf	___fladd@grs,f
  8642  1668                     l2738:
  8643  1668  1C58               	btfss	___fladd@b,0
  8644  1669  2E6B               	goto	u3741
  8645  166A  2E6C               	goto	u3740
  8646  166B                     u3741:
  8647  166B  2E6D               	goto	l2742
  8648  166C                     u3740:
  8649  166C                     l2740:
  8650  166C  17EB               	bsf	___fladd@grs,7
  8651  166D                     l2742:
  8652  166D  3001               	movlw	1
  8653  166E  00E0               	movwf	??___fladd
  8654  166F                     u3755:
  8655  166F  0D5B               	rlf	___fladd@b+3,w
  8656  1670  0CDB               	rrf	___fladd@b+3,f
  8657  1671  0CDA               	rrf	___fladd@b+2,f
  8658  1672  0CD9               	rrf	___fladd@b+1,f
  8659  1673  0CD8               	rrf	___fladd@b,f
  8660  1674  0BE0               	decfsz	??___fladd& (0+127),f
  8661  1675  2E6F               	goto	u3755
  8662  1676                     l2744:
  8663  1676  3001               	movlw	1
  8664  1677  00E0               	movwf	??___fladd
  8665  1678  0860               	movf	??___fladd,w
  8666  1679  07EA               	addwf	___fladd@bexp,f
  8667  167A                     l2746:
  8668  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8669  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8670  167C  0869               	movf	___fladd@aexp,w
  8671  167D  026A               	subwf	___fladd@bexp,w
  8672  167E  1C03               	skipc
  8673  167F  2E81               	goto	u3761
  8674  1680  2E82               	goto	u3760
  8675  1681                     u3761:
  8676  1681  2E59               	goto	l716
  8677  1682                     u3760:
  8678  1682                     l714:
  8679  1682  1B68               	btfsc	___fladd@signs,6
  8680  1683  2E85               	goto	u3771
  8681  1684  2E86               	goto	u3770
  8682  1685                     u3771:
  8683  1685  2ED1               	goto	l2772
  8684  1686                     u3770:
  8685  1686                     l2748:
  8686  1686  086A               	movf	___fladd@bexp,w
  8687  1687  1D03               	btfss	3,2
  8688  1688  2E8A               	goto	u3781
  8689  1689  2E8B               	goto	u3780
  8690  168A                     u3781:
  8691  168A  2E94               	goto	l2754
  8692  168B                     u3780:
  8693  168B                     l2750:
  8694  168B  3000               	movlw	0
  8695  168C  00DB               	movwf	?___fladd+3
  8696  168D  3000               	movlw	0
  8697  168E  00DA               	movwf	?___fladd+2
  8698  168F  3000               	movlw	0
  8699  1690  00D9               	movwf	?___fladd+1
  8700  1691  3000               	movlw	0
  8701  1692  00D8               	movwf	?___fladd
  8702  1693  2FFF               	goto	l723
  8703  1694                     l2754:
  8704  1694  085C               	movf	___fladd@a,w
  8705  1695  07D8               	addwf	___fladd@b,f
  8706  1696  085D               	movf	___fladd@a+1,w
  8707  1697  1103               	clrz
  8708  1698  1803               	skipnc
  8709  1699  3E01               	addlw	1
  8710  169A  1903               	skipnz
  8711  169B  2E9D               	goto	u3791
  8712  169C  07D9               	addwf	___fladd@b+1,f
  8713  169D                     u3791:
  8714  169D  085E               	movf	___fladd@a+2,w
  8715  169E  1103               	clrz
  8716  169F  1803               	skipnc
  8717  16A0  3E01               	addlw	1
  8718  16A1  1903               	skipnz
  8719  16A2  2EA4               	goto	u3792
  8720  16A3  07DA               	addwf	___fladd@b+2,f
  8721  16A4                     u3792:
  8722  16A4  085F               	movf	___fladd@a+3,w
  8723  16A5  1103               	clrz
  8724  16A6  1803               	skipnc
  8725  16A7  3E01               	addlw	1
  8726  16A8  1903               	skipnz
  8727  16A9  2EAB               	goto	u3793
  8728  16AA  07DB               	addwf	___fladd@b+3,f
  8729  16AB                     u3793:
  8730  16AB                     l2756:
  8731  16AB  1C5B               	btfss	___fladd@b+3,0
  8732  16AC  2EAE               	goto	u3801
  8733  16AD  2EAF               	goto	u3800
  8734  16AE                     u3801:
  8735  16AE  2F85               	goto	l2806
  8736  16AF                     u3800:
  8737  16AF                     l2758:
  8738  16AF  1C6B               	btfss	___fladd@grs,0
  8739  16B0  2EB2               	goto	u3811
  8740  16B1  2EB3               	goto	u3810
  8741  16B2                     u3811:
  8742  16B2  2EBC               	goto	l2762
  8743  16B3                     u3810:
  8744  16B3                     l2760:
  8745  16B3  086B               	movf	___fladd@grs,w
  8746  16B4  00E0               	movwf	??___fladd
  8747  16B5  1003               	clrc
  8748  16B6  0C60               	rrf	??___fladd,w
  8749  16B7  3801               	iorlw	1
  8750  16B8  00E1               	movwf	??___fladd+1
  8751  16B9  0861               	movf	??___fladd+1,w
  8752  16BA  00EB               	movwf	___fladd@grs
  8753  16BB  2EBE               	goto	l2764
  8754  16BC                     l2762:
  8755  16BC  1003               	clrc
  8756  16BD  0CEB               	rrf	___fladd@grs,f
  8757  16BE                     l2764:
  8758  16BE  1C58               	btfss	___fladd@b,0
  8759  16BF  2EC1               	goto	u3821
  8760  16C0  2EC2               	goto	u3820
  8761  16C1                     u3821:
  8762  16C1  2EC3               	goto	l2768
  8763  16C2                     u3820:
  8764  16C2                     l2766:
  8765  16C2  17EB               	bsf	___fladd@grs,7
  8766  16C3                     l2768:
  8767  16C3  3001               	movlw	1
  8768  16C4  00E0               	movwf	??___fladd
  8769  16C5                     u3835:
  8770  16C5  0D5B               	rlf	___fladd@b+3,w
  8771  16C6  0CDB               	rrf	___fladd@b+3,f
  8772  16C7  0CDA               	rrf	___fladd@b+2,f
  8773  16C8  0CD9               	rrf	___fladd@b+1,f
  8774  16C9  0CD8               	rrf	___fladd@b,f
  8775  16CA  0BE0               	decfsz	??___fladd& (0+127),f
  8776  16CB  2EC5               	goto	u3835
  8777  16CC                     l2770:
  8778  16CC  3001               	movlw	1
  8779  16CD  00E0               	movwf	??___fladd
  8780  16CE  0860               	movf	??___fladd,w
  8781  16CF  07EA               	addwf	___fladd@bexp,f
  8782  16D0  2F85               	goto	l2806
  8783  16D1                     l2772:
  8784  16D1  085B               	movf	___fladd@b+3,w
  8785  16D2  3A80               	xorlw	128
  8786  16D3  00FF               	movwf	btemp+1
  8787  16D4  085F               	movf	___fladd@a+3,w
  8788  16D5  3A80               	xorlw	128
  8789  16D6  027F               	subwf	btemp+1,w
  8790  16D7  1D03               	skipz
  8791  16D8  2EE3               	goto	u3843
  8792  16D9  085E               	movf	___fladd@a+2,w
  8793  16DA  025A               	subwf	___fladd@b+2,w
  8794  16DB  1D03               	skipz
  8795  16DC  2EE3               	goto	u3843
  8796  16DD  085D               	movf	___fladd@a+1,w
  8797  16DE  0259               	subwf	___fladd@b+1,w
  8798  16DF  1D03               	skipz
  8799  16E0  2EE3               	goto	u3843
  8800  16E1  085C               	movf	___fladd@a,w
  8801  16E2  0258               	subwf	___fladd@b,w
  8802  16E3                     u3843:
  8803  16E3  1803               	skipnc
  8804  16E4  2EE6               	goto	u3841
  8805  16E5  2EE7               	goto	u3840
  8806  16E6                     u3841:
  8807  16E6  2F3F               	goto	l2782
  8808  16E7                     u3840:
  8809  16E7                     l2774:
  8810  16E7  30FF               	movlw	255
  8811  16E8  00E0               	movwf	??___fladd
  8812  16E9  30FF               	movlw	255
  8813  16EA  00E1               	movwf	??___fladd+1
  8814  16EB  30FF               	movlw	255
  8815  16EC  00E2               	movwf	??___fladd+2
  8816  16ED  30FF               	movlw	255
  8817  16EE  00E3               	movwf	??___fladd+3
  8818  16EF  085C               	movf	___fladd@a,w
  8819  16F0  00E4               	movwf	??___fladd+4
  8820  16F1  085D               	movf	___fladd@a+1,w
  8821  16F2  00E5               	movwf	??___fladd+5
  8822  16F3  085E               	movf	___fladd@a+2,w
  8823  16F4  00E6               	movwf	??___fladd+6
  8824  16F5  085F               	movf	___fladd@a+3,w
  8825  16F6  00E7               	movwf	??___fladd+7
  8826  16F7  0858               	movf	___fladd@b,w
  8827  16F8  02E4               	subwf	??___fladd+4,f
  8828  16F9  0859               	movf	___fladd@b+1,w
  8829  16FA  1C03               	skipc
  8830  16FB  0F59               	incfsz	___fladd@b+1,w
  8831  16FC  2EFE               	goto	u3851
  8832  16FD  2EFF               	goto	u3852
  8833  16FE                     u3851:
  8834  16FE  02E5               	subwf	??___fladd+5,f
  8835  16FF                     u3852:
  8836  16FF  085A               	movf	___fladd@b+2,w
  8837  1700  1C03               	skipc
  8838  1701  0F5A               	incfsz	___fladd@b+2,w
  8839  1702  2F04               	goto	u3853
  8840  1703  2F05               	goto	u3854
  8841  1704                     u3853:
  8842  1704  02E6               	subwf	??___fladd+6,f
  8843  1705                     u3854:
  8844  1705  085B               	movf	___fladd@b+3,w
  8845  1706  1C03               	skipc
  8846  1707  0F5B               	incfsz	___fladd@b+3,w
  8847  1708  2F0A               	goto	u3855
  8848  1709  2F0B               	goto	u3856
  8849  170A                     u3855:
  8850  170A  02E7               	subwf	??___fladd+7,f
  8851  170B                     u3856:
  8852  170B  0864               	movf	??___fladd+4,w
  8853  170C  07E0               	addwf	??___fladd,f
  8854  170D  0865               	movf	??___fladd+5,w
  8855  170E  1803               	skipnc
  8856  170F  0F65               	incfsz	??___fladd+5,w
  8857  1710  2F12               	goto	u3860
  8858  1711  2F13               	goto	u3861
  8859  1712                     u3860:
  8860  1712  07E1               	addwf	??___fladd+1,f
  8861  1713                     u3861:
  8862  1713  0866               	movf	??___fladd+6,w
  8863  1714  1803               	skipnc
  8864  1715  0F66               	incfsz	??___fladd+6,w
  8865  1716  2F18               	goto	u3862
  8866  1717  2F19               	goto	u3863
  8867  1718                     u3862:
  8868  1718  07E2               	addwf	??___fladd+2,f
  8869  1719                     u3863:
  8870  1719  0867               	movf	??___fladd+7,w
  8871  171A  1803               	skipnc
  8872  171B  0A67               	incf	??___fladd+7,w
  8873  171C  07E3               	addwf	??___fladd+3,f
  8874  171D  0863               	movf	??___fladd+3,w
  8875  171E  00DB               	movwf	___fladd@b+3
  8876  171F  0862               	movf	??___fladd+2,w
  8877  1720  00DA               	movwf	___fladd@b+2
  8878  1721  0861               	movf	??___fladd+1,w
  8879  1722  00D9               	movwf	___fladd@b+1
  8880  1723  0860               	movf	??___fladd,w
  8881  1724  00D8               	movwf	___fladd@b
  8882  1725                     l2776:
  8883  1725  3080               	movlw	128
  8884  1726  00E0               	movwf	??___fladd
  8885  1727  0860               	movf	??___fladd,w
  8886  1728  06E8               	xorwf	___fladd@signs,f
  8887  1729  09EB               	comf	___fladd@grs,f
  8888  172A  0AEB               	incf	___fladd@grs,f
  8889  172B                     l2778:
  8890  172B  086B               	movf	___fladd@grs,w
  8891  172C  1D03               	btfss	3,2
  8892  172D  2F2F               	goto	u3871
  8893  172E  2F30               	goto	u3870
  8894  172F                     u3871:
  8895  172F  2F4D               	goto	l731
  8896  1730                     u3870:
  8897  1730                     l2780:
  8898  1730  3001               	movlw	1
  8899  1731  07D8               	addwf	___fladd@b,f
  8900  1732  3000               	movlw	0
  8901  1733  1803               	skipnc
  8902  1734  3001               	movlw	1
  8903  1735  07D9               	addwf	___fladd@b+1,f
  8904  1736  3000               	movlw	0
  8905  1737  1803               	skipnc
  8906  1738  3001               	movlw	1
  8907  1739  07DA               	addwf	___fladd@b+2,f
  8908  173A  3000               	movlw	0
  8909  173B  1803               	skipnc
  8910  173C  3001               	movlw	1
  8911  173D  07DB               	addwf	___fladd@b+3,f
  8912  173E  2F4D               	goto	l731
  8913  173F                     l2782:
  8914  173F  085C               	movf	___fladd@a,w
  8915  1740  02D8               	subwf	___fladd@b,f
  8916  1741  085D               	movf	___fladd@a+1,w
  8917  1742  1C03               	skipc
  8918  1743  0F5D               	incfsz	___fladd@a+1,w
  8919  1744  02D9               	subwf	___fladd@b+1,f
  8920  1745  085E               	movf	___fladd@a+2,w
  8921  1746  1C03               	skipc
  8922  1747  0F5E               	incfsz	___fladd@a+2,w
  8923  1748  02DA               	subwf	___fladd@b+2,f
  8924  1749  085F               	movf	___fladd@a+3,w
  8925  174A  1C03               	skipc
  8926  174B  0F5F               	incfsz	___fladd@a+3,w
  8927  174C  02DB               	subwf	___fladd@b+3,f
  8928  174D                     l731:
  8929  174D  085B               	movf	___fladd@b+3,w
  8930  174E  045A               	iorwf	___fladd@b+2,w
  8931  174F  0459               	iorwf	___fladd@b+1,w
  8932  1750  0458               	iorwf	___fladd@b,w
  8933  1751  1D03               	skipz
  8934  1752  2F54               	goto	u3881
  8935  1753  2F55               	goto	u3880
  8936  1754                     u3881:
  8937  1754  2F81               	goto	l2804
  8938  1755                     u3880:
  8939  1755                     l2784:
  8940  1755  086B               	movf	___fladd@grs,w
  8941  1756  1D03               	btfss	3,2
  8942  1757  2F59               	goto	u3891
  8943  1758  2F5A               	goto	u3890
  8944  1759                     u3891:
  8945  1759  2F81               	goto	l2804
  8946  175A                     u3890:
  8947  175A                     l2786:
  8948  175A  3000               	movlw	0
  8949  175B  00DB               	movwf	?___fladd+3
  8950  175C  3000               	movlw	0
  8951  175D  00DA               	movwf	?___fladd+2
  8952  175E  3000               	movlw	0
  8953  175F  00D9               	movwf	?___fladd+1
  8954  1760  3000               	movlw	0
  8955  1761  00D8               	movwf	?___fladd
  8956  1762  2FFF               	goto	l723
  8957  1763                     l2790:
  8958  1763  3001               	movlw	1
  8959  1764  00E0               	movwf	??___fladd
  8960  1765                     u3905:
  8961  1765  1003               	clrc
  8962  1766  0DD8               	rlf	___fladd@b,f
  8963  1767  0DD9               	rlf	___fladd@b+1,f
  8964  1768  0DDA               	rlf	___fladd@b+2,f
  8965  1769  0DDB               	rlf	___fladd@b+3,f
  8966  176A  0BE0               	decfsz	??___fladd,f
  8967  176B  2F65               	goto	u3905
  8968  176C                     l2792:
  8969  176C  1FEB               	btfss	___fladd@grs,7
  8970  176D  2F6F               	goto	u3911
  8971  176E  2F70               	goto	u3910
  8972  176F                     u3911:
  8973  176F  2F71               	goto	l735
  8974  1770                     u3910:
  8975  1770                     l2794:
  8976  1770  1458               	bsf	___fladd@b,0
  8977  1771                     l735:
  8978  1771  1C6B               	btfss	___fladd@grs,0
  8979  1772  2F74               	goto	u3921
  8980  1773  2F75               	goto	u3920
  8981  1774                     u3921:
  8982  1774  2F78               	goto	l2798
  8983  1775                     u3920:
  8984  1775                     l2796:
  8985  1775  1403               	setc
  8986  1776  0DEB               	rlf	___fladd@grs,f
  8987  1777  2F7A               	goto	l2800
  8988  1778                     l2798:
  8989  1778  1003               	clrc
  8990  1779  0DEB               	rlf	___fladd@grs,f
  8991  177A                     l2800:
  8992  177A  086A               	movf	___fladd@bexp,w
  8993  177B  1903               	btfsc	3,2
  8994  177C  2F7E               	goto	u3931
  8995  177D  2F7F               	goto	u3930
  8996  177E                     u3931:
  8997  177E  2F81               	goto	l2804
  8998  177F                     u3930:
  8999  177F                     l2802:
  9000  177F  3001               	movlw	1
  9001  1780  02EA               	subwf	___fladd@bexp,f
  9002  1781                     l2804:
  9003  1781  1FDA               	btfss	___fladd@b+2,7
  9004  1782  2F84               	goto	u3941
  9005  1783  2F85               	goto	u3940
  9006  1784                     u3941:
  9007  1784  2F63               	goto	l2790
  9008  1785                     u3940:
  9009  1785                     l2806:
  9010  1785  01E9               	clrf	___fladd@aexp
  9011  1786                     l2808:
  9012  1786  1FEB               	btfss	___fladd@grs,7
  9013  1787  2F89               	goto	u3951
  9014  1788  2F8A               	goto	u3950
  9015  1789                     u3951:
  9016  1789  2F98               	goto	l2816
  9017  178A                     u3950:
  9018  178A                     l2810:
  9019  178A  086B               	movf	___fladd@grs,w
  9020  178B  397F               	andlw	127
  9021  178C  1903               	btfsc	3,2
  9022  178D  2F8F               	goto	u3961
  9023  178E  2F90               	goto	u3960
  9024  178F                     u3961:
  9025  178F  2F93               	goto	l741
  9026  1790                     u3960:
  9027  1790                     l2812:
  9028  1790  01E9               	clrf	___fladd@aexp
  9029  1791  0AE9               	incf	___fladd@aexp,f
  9030  1792  2F98               	goto	l2816
  9031  1793                     l741:
  9032  1793  1C58               	btfss	___fladd@b,0
  9033  1794  2F96               	goto	u3971
  9034  1795  2F97               	goto	u3970
  9035  1796                     u3971:
  9036  1796  2F98               	goto	l2816
  9037  1797                     u3970:
  9038  1797  2F90               	goto	l2812
  9039  1798                     l2816:
  9040  1798  0869               	movf	___fladd@aexp,w
  9041  1799  1903               	btfsc	3,2
  9042  179A  2F9C               	goto	u3981
  9043  179B  2F9D               	goto	u3980
  9044  179C                     u3981:
  9045  179C  2FD1               	goto	l744
  9046  179D                     u3980:
  9047  179D                     l2818:
  9048  179D  3001               	movlw	1
  9049  179E  07D8               	addwf	___fladd@b,f
  9050  179F  3000               	movlw	0
  9051  17A0  1803               	skipnc
  9052  17A1  3001               	movlw	1
  9053  17A2  07D9               	addwf	___fladd@b+1,f
  9054  17A3  3000               	movlw	0
  9055  17A4  1803               	skipnc
  9056  17A5  3001               	movlw	1
  9057  17A6  07DA               	addwf	___fladd@b+2,f
  9058  17A7  3000               	movlw	0
  9059  17A8  1803               	skipnc
  9060  17A9  3001               	movlw	1
  9061  17AA  07DB               	addwf	___fladd@b+3,f
  9062  17AB                     l2820:
  9063  17AB  1C5B               	btfss	___fladd@b+3,0
  9064  17AC  2FAE               	goto	u3991
  9065  17AD  2FAF               	goto	u3990
  9066  17AE                     u3991:
  9067  17AE  2FD1               	goto	l744
  9068  17AF                     u3990:
  9069  17AF                     l2822:
  9070  17AF  0858               	movf	___fladd@b,w
  9071  17B0  00E0               	movwf	??___fladd
  9072  17B1  0859               	movf	___fladd@b+1,w
  9073  17B2  00E1               	movwf	??___fladd+1
  9074  17B3  085A               	movf	___fladd@b+2,w
  9075  17B4  00E2               	movwf	??___fladd+2
  9076  17B5  085B               	movf	___fladd@b+3,w
  9077  17B6  00E3               	movwf	??___fladd+3
  9078  17B7  3001               	movlw	1
  9079  17B8  00E4               	movwf	??___fladd+4
  9080  17B9                     u4005:
  9081  17B9  0D63               	rlf	??___fladd+3,w
  9082  17BA  0CE3               	rrf	??___fladd+3,f
  9083  17BB  0CE2               	rrf	??___fladd+2,f
  9084  17BC  0CE1               	rrf	??___fladd+1,f
  9085  17BD  0CE0               	rrf	??___fladd,f
  9086  17BE                     u4000:
  9087  17BE  0BE4               	decfsz	??___fladd+4,f
  9088  17BF  2FB9               	goto	u4005
  9089  17C0  0863               	movf	??___fladd+3,w
  9090  17C1  00DB               	movwf	___fladd@b+3
  9091  17C2  0862               	movf	??___fladd+2,w
  9092  17C3  00DA               	movwf	___fladd@b+2
  9093  17C4  0861               	movf	??___fladd+1,w
  9094  17C5  00D9               	movwf	___fladd@b+1
  9095  17C6  0860               	movf	??___fladd,w
  9096  17C7  00D8               	movwf	___fladd@b
  9097  17C8  0A6A               	incf	___fladd@bexp,w
  9098  17C9  1903               	btfsc	3,2
  9099  17CA  2FCC               	goto	u4011
  9100  17CB  2FCD               	goto	u4010
  9101  17CC                     u4011:
  9102  17CC  2FD1               	goto	l744
  9103  17CD                     u4010:
  9104  17CD                     l2824:
  9105  17CD  3001               	movlw	1
  9106  17CE  00E0               	movwf	??___fladd
  9107  17CF  0860               	movf	??___fladd,w
  9108  17D0  07EA               	addwf	___fladd@bexp,f
  9109  17D1                     l744:
  9110  17D1  0A6A               	incf	___fladd@bexp,w
  9111  17D2  1903               	btfsc	3,2
  9112  17D3  2FD5               	goto	u4021
  9113  17D4  2FD6               	goto	u4020
  9114  17D5                     u4021:
  9115  17D5  2FDB               	goto	l2828
  9116  17D6                     u4020:
  9117  17D6                     l2826:
  9118  17D6  086A               	movf	___fladd@bexp,w
  9119  17D7  1D03               	btfss	3,2
  9120  17D8  2FDA               	goto	u4031
  9121  17D9  2FDB               	goto	u4030
  9122  17DA                     u4031:
  9123  17DA  2FE9               	goto	l2834
  9124  17DB                     u4030:
  9125  17DB                     l2828:
  9126  17DB  3000               	movlw	0
  9127  17DC  00DB               	movwf	___fladd@b+3
  9128  17DD  3000               	movlw	0
  9129  17DE  00DA               	movwf	___fladd@b+2
  9130  17DF  3000               	movlw	0
  9131  17E0  00D9               	movwf	___fladd@b+1
  9132  17E1  3000               	movlw	0
  9133  17E2  00D8               	movwf	___fladd@b
  9134  17E3                     l2830:
  9135  17E3  086A               	movf	___fladd@bexp,w
  9136  17E4  1D03               	btfss	3,2
  9137  17E5  2FE7               	goto	u4041
  9138  17E6  2FE8               	goto	u4040
  9139  17E7                     u4041:
  9140  17E7  2FE9               	goto	l2834
  9141  17E8                     u4040:
  9142  17E8                     l2832:
  9143  17E8  01E8               	clrf	___fladd@signs
  9144  17E9                     l2834:
  9145  17E9  1C6A               	btfss	___fladd@bexp,0
  9146  17EA  2FEC               	goto	u4051
  9147  17EB  2FED               	goto	u4050
  9148  17EC                     u4051:
  9149  17EC  2FEF               	goto	l2838
  9150  17ED                     u4050:
  9151  17ED                     l2836:
  9152  17ED  17DA               	bsf	___fladd@b+2,7
  9153  17EE  2FF3               	goto	l752
  9154  17EF                     l2838:
  9155  17EF  307F               	movlw	127
  9156  17F0  00E0               	movwf	??___fladd
  9157  17F1  0860               	movf	??___fladd,w
  9158  17F2  05DA               	andwf	___fladd@b+2,f
  9159  17F3                     l752:
  9160  17F3  086A               	movf	___fladd@bexp,w
  9161  17F4  00E0               	movwf	??___fladd
  9162  17F5  1003               	clrc
  9163  17F6  0C60               	rrf	??___fladd,w
  9164  17F7  00E1               	movwf	??___fladd+1
  9165  17F8  0861               	movf	??___fladd+1,w
  9166  17F9  00DB               	movwf	___fladd@b+3
  9167  17FA                     l2840:
  9168  17FA  1FE8               	btfss	___fladd@signs,7
  9169  17FB  2FFD               	goto	u4061
  9170  17FC  2FFE               	goto	u4060
  9171  17FD                     u4061:
  9172  17FD  2FFF               	goto	l753
  9173  17FE                     u4060:
  9174  17FE                     l2842:
  9175  17FE  17DB               	bsf	___fladd@b+3,7
  9176  17FF                     l753:
  9177  17FF                     l723:
  9178  17FF  0008               	return
  9179  1800                     __end_of___fladd:
  9180                           
  9181                           	psect	text19
  9182  18A9                     __ptext19:	
  9183 ;; *************** function ___flneg *****************
  9184 ;; Defined at:
  9185 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  f1              4    0[COMMON] unsigned char 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  4    0[COMMON] unsigned char 
  9192 ;; Registers used:
  9193 ;;		wreg
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9199 ;;      Params:         4       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0
  9202 ;;      Totals:         4       0       0       0       0
  9203 ;;Total ram usage:        4 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; This function calls:
  9206 ;;		Nothing
  9207 ;; This function is called by:
  9208 ;;		_sprintf
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           
  9213                           ;psect for function ___flneg
  9214  18A9                     ___flneg:
  9215  18A9                     l3250:	
  9216                           ;incstack = 0
  9217                           ; Regs used in ___flneg: [wreg]
  9218                           
  9219  18A9  0873               	movf	___flneg@f1+3,w
  9220  18AA  0472               	iorwf	___flneg@f1+2,w
  9221  18AB  0471               	iorwf	___flneg@f1+1,w
  9222  18AC  0470               	iorwf	___flneg@f1,w
  9223  18AD  1903               	skipnz
  9224  18AE  28B0               	goto	u5191
  9225  18AF  28B1               	goto	u5190
  9226  18B0                     u5191:
  9227  18B0  28B3               	goto	l3254
  9228  18B1                     u5190:
  9229  18B1                     l3252:
  9230  18B1  3080               	movlw	128
  9231  18B2  06F3               	xorwf	___flneg@f1+3,f
  9232  18B3                     l3254:
  9233  18B3                     l582:
  9234  18B3  0008               	return
  9235  18B4                     __end_of___flneg:
  9236                           
  9237                           	psect	text20
  9238  1D03                     __ptext20:	
  9239 ;; *************** function ___flge *****************
  9240 ;; Defined at:
  9241 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  ff1             4    0[COMMON] unsigned char 
  9244 ;;  ff2             4    4[COMMON] unsigned char 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;		None               void
  9249 ;; Registers used:
  9250 ;;		wreg, status,2, status,0
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9256 ;;      Params:         8       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0
  9258 ;;      Temps:          4       0       0       0       0
  9259 ;;      Totals:        12       0       0       0       0
  9260 ;;Total ram usage:       12 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; This function calls:
  9263 ;;		Nothing
  9264 ;; This function is called by:
  9265 ;;		_sprintf
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           
  9270                           ;psect for function ___flge
  9271  1D03                     ___flge:
  9272  1D03                     l3230:	
  9273                           ;incstack = 0
  9274                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9275                           
  9276  1D03  3000               	movlw	0
  9277  1D04  0570               	andwf	___flge@ff1,w
  9278  1D05  00F8               	movwf	??___flge
  9279  1D06  3000               	movlw	0
  9280  1D07  0571               	andwf	___flge@ff1+1,w
  9281  1D08  00F9               	movwf	??___flge+1
  9282  1D09  3080               	movlw	128
  9283  1D0A  0572               	andwf	___flge@ff1+2,w
  9284  1D0B  00FA               	movwf	??___flge+2
  9285  1D0C  307F               	movlw	127
  9286  1D0D  0573               	andwf	___flge@ff1+3,w
  9287  1D0E  00FB               	movwf	??___flge+3
  9288  1D0F  087B               	movf	??___flge+3,w
  9289  1D10  047A               	iorwf	??___flge+2,w
  9290  1D11  0479               	iorwf	??___flge+1,w
  9291  1D12  0478               	iorwf	??___flge,w
  9292  1D13  1D03               	skipz
  9293  1D14  2D16               	goto	u5121
  9294  1D15  2D17               	goto	u5120
  9295  1D16                     u5121:
  9296  1D16  2D1F               	goto	l574
  9297  1D17                     u5120:
  9298  1D17                     l3232:
  9299  1D17  3000               	movlw	0
  9300  1D18  00F3               	movwf	___flge@ff1+3
  9301  1D19  3000               	movlw	0
  9302  1D1A  00F2               	movwf	___flge@ff1+2
  9303  1D1B  3000               	movlw	0
  9304  1D1C  00F1               	movwf	___flge@ff1+1
  9305  1D1D  3000               	movlw	0
  9306  1D1E  00F0               	movwf	___flge@ff1
  9307  1D1F                     l574:
  9308  1D1F  3000               	movlw	0
  9309  1D20  0574               	andwf	___flge@ff2,w
  9310  1D21  00F8               	movwf	??___flge
  9311  1D22  3000               	movlw	0
  9312  1D23  0575               	andwf	___flge@ff2+1,w
  9313  1D24  00F9               	movwf	??___flge+1
  9314  1D25  3080               	movlw	128
  9315  1D26  0576               	andwf	___flge@ff2+2,w
  9316  1D27  00FA               	movwf	??___flge+2
  9317  1D28  307F               	movlw	127
  9318  1D29  0577               	andwf	___flge@ff2+3,w
  9319  1D2A  00FB               	movwf	??___flge+3
  9320  1D2B  087B               	movf	??___flge+3,w
  9321  1D2C  047A               	iorwf	??___flge+2,w
  9322  1D2D  0479               	iorwf	??___flge+1,w
  9323  1D2E  0478               	iorwf	??___flge,w
  9324  1D2F  1D03               	skipz
  9325  1D30  2D32               	goto	u5131
  9326  1D31  2D33               	goto	u5130
  9327  1D32                     u5131:
  9328  1D32  2D3B               	goto	l3236
  9329  1D33                     u5130:
  9330  1D33                     l3234:
  9331  1D33  3000               	movlw	0
  9332  1D34  00F7               	movwf	___flge@ff2+3
  9333  1D35  3000               	movlw	0
  9334  1D36  00F6               	movwf	___flge@ff2+2
  9335  1D37  3000               	movlw	0
  9336  1D38  00F5               	movwf	___flge@ff2+1
  9337  1D39  3000               	movlw	0
  9338  1D3A  00F4               	movwf	___flge@ff2
  9339  1D3B                     l3236:
  9340  1D3B  1FF3               	btfss	___flge@ff1+3,7
  9341  1D3C  2D3E               	goto	u5141
  9342  1D3D  2D3F               	goto	u5140
  9343  1D3E                     u5141:
  9344  1D3E  2D63               	goto	l3240
  9345  1D3F                     u5140:
  9346  1D3F                     l3238:
  9347  1D3F  3000               	movlw	0
  9348  1D40  00F8               	movwf	??___flge
  9349  1D41  3000               	movlw	0
  9350  1D42  00F9               	movwf	??___flge+1
  9351  1D43  3000               	movlw	0
  9352  1D44  00FA               	movwf	??___flge+2
  9353  1D45  3080               	movlw	128
  9354  1D46  00FB               	movwf	??___flge+3
  9355  1D47  0870               	movf	___flge@ff1,w
  9356  1D48  02F8               	subwf	??___flge,f
  9357  1D49  0871               	movf	___flge@ff1+1,w
  9358  1D4A  1C03               	skipc
  9359  1D4B  0F71               	incfsz	___flge@ff1+1,w
  9360  1D4C  2D4E               	goto	u5151
  9361  1D4D  2D4F               	goto	u5152
  9362  1D4E                     u5151:
  9363  1D4E  02F9               	subwf	??___flge+1,f
  9364  1D4F                     u5152:
  9365  1D4F  0872               	movf	___flge@ff1+2,w
  9366  1D50  1C03               	skipc
  9367  1D51  0F72               	incfsz	___flge@ff1+2,w
  9368  1D52  2D54               	goto	u5153
  9369  1D53  2D55               	goto	u5154
  9370  1D54                     u5153:
  9371  1D54  02FA               	subwf	??___flge+2,f
  9372  1D55                     u5154:
  9373  1D55  0873               	movf	___flge@ff1+3,w
  9374  1D56  1C03               	skipc
  9375  1D57  0F73               	incfsz	___flge@ff1+3,w
  9376  1D58  2D5A               	goto	u5155
  9377  1D59  2D5B               	goto	u5156
  9378  1D5A                     u5155:
  9379  1D5A  02FB               	subwf	??___flge+3,f
  9380  1D5B                     u5156:
  9381  1D5B  087B               	movf	??___flge+3,w
  9382  1D5C  00F3               	movwf	___flge@ff1+3
  9383  1D5D  087A               	movf	??___flge+2,w
  9384  1D5E  00F2               	movwf	___flge@ff1+2
  9385  1D5F  0879               	movf	??___flge+1,w
  9386  1D60  00F1               	movwf	___flge@ff1+1
  9387  1D61  0878               	movf	??___flge,w
  9388  1D62  00F0               	movwf	___flge@ff1
  9389  1D63                     l3240:
  9390  1D63  1FF7               	btfss	___flge@ff2+3,7
  9391  1D64  2D66               	goto	u5161
  9392  1D65  2D67               	goto	u5160
  9393  1D66                     u5161:
  9394  1D66  2D8B               	goto	l577
  9395  1D67                     u5160:
  9396  1D67                     l3242:
  9397  1D67  3000               	movlw	0
  9398  1D68  00F8               	movwf	??___flge
  9399  1D69  3000               	movlw	0
  9400  1D6A  00F9               	movwf	??___flge+1
  9401  1D6B  3000               	movlw	0
  9402  1D6C  00FA               	movwf	??___flge+2
  9403  1D6D  3080               	movlw	128
  9404  1D6E  00FB               	movwf	??___flge+3
  9405  1D6F  0874               	movf	___flge@ff2,w
  9406  1D70  02F8               	subwf	??___flge,f
  9407  1D71  0875               	movf	___flge@ff2+1,w
  9408  1D72  1C03               	skipc
  9409  1D73  0F75               	incfsz	___flge@ff2+1,w
  9410  1D74  2D76               	goto	u5171
  9411  1D75  2D77               	goto	u5172
  9412  1D76                     u5171:
  9413  1D76  02F9               	subwf	??___flge+1,f
  9414  1D77                     u5172:
  9415  1D77  0876               	movf	___flge@ff2+2,w
  9416  1D78  1C03               	skipc
  9417  1D79  0F76               	incfsz	___flge@ff2+2,w
  9418  1D7A  2D7C               	goto	u5173
  9419  1D7B  2D7D               	goto	u5174
  9420  1D7C                     u5173:
  9421  1D7C  02FA               	subwf	??___flge+2,f
  9422  1D7D                     u5174:
  9423  1D7D  0877               	movf	___flge@ff2+3,w
  9424  1D7E  1C03               	skipc
  9425  1D7F  0F77               	incfsz	___flge@ff2+3,w
  9426  1D80  2D82               	goto	u5175
  9427  1D81  2D83               	goto	u5176
  9428  1D82                     u5175:
  9429  1D82  02FB               	subwf	??___flge+3,f
  9430  1D83                     u5176:
  9431  1D83  087B               	movf	??___flge+3,w
  9432  1D84  00F7               	movwf	___flge@ff2+3
  9433  1D85  087A               	movf	??___flge+2,w
  9434  1D86  00F6               	movwf	___flge@ff2+2
  9435  1D87  0879               	movf	??___flge+1,w
  9436  1D88  00F5               	movwf	___flge@ff2+1
  9437  1D89  0878               	movf	??___flge,w
  9438  1D8A  00F4               	movwf	___flge@ff2
  9439  1D8B                     l577:
  9440  1D8B  3080               	movlw	128
  9441  1D8C  06F3               	xorwf	___flge@ff1+3,f
  9442  1D8D  3080               	movlw	128
  9443  1D8E  06F7               	xorwf	___flge@ff2+3,f
  9444  1D8F  0877               	movf	___flge@ff2+3,w
  9445  1D90  0273               	subwf	___flge@ff1+3,w
  9446  1D91  1D03               	skipz
  9447  1D92  2D9D               	goto	u5185
  9448  1D93  0876               	movf	___flge@ff2+2,w
  9449  1D94  0272               	subwf	___flge@ff1+2,w
  9450  1D95  1D03               	skipz
  9451  1D96  2D9D               	goto	u5185
  9452  1D97  0875               	movf	___flge@ff2+1,w
  9453  1D98  0271               	subwf	___flge@ff1+1,w
  9454  1D99  1D03               	skipz
  9455  1D9A  2D9D               	goto	u5185
  9456  1D9B  0874               	movf	___flge@ff2,w
  9457  1D9C  0270               	subwf	___flge@ff1,w
  9458  1D9D                     u5185:
  9459  1D9D  1803               	skipnc
  9460  1D9E  2DA0               	goto	u5181
  9461  1D9F  2DA1               	goto	u5180
  9462  1DA0                     u5181:
  9463  1DA0  2DA3               	goto	l3246
  9464  1DA1                     u5180:
  9465  1DA1                     l3244:
  9466  1DA1  1003               	clrc
  9467  1DA2  2DA4               	goto	l578
  9468  1DA3                     l3246:
  9469  1DA3  1403               	setc
  9470  1DA4                     l578:
  9471  1DA4  0008               	return
  9472  1DA5                     __end_of___flge:
  9473                           
  9474                           	psect	text21
  9475  1AFF                     __ptext21:	
  9476 ;; *************** function ___fleq *****************
  9477 ;; Defined at:
  9478 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  ff1             4    0[COMMON] unsigned char 
  9481 ;;  ff2             4    4[COMMON] unsigned char 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;		None               void
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9493 ;;      Params:         8       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0
  9495 ;;      Temps:          4       0       0       0       0
  9496 ;;      Totals:        12       0       0       0       0
  9497 ;;Total ram usage:       12 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_sprintf
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           
  9507                           ;psect for function ___fleq
  9508  1AFF                     ___fleq:
  9509  1AFF                     l3218:	
  9510                           ;incstack = 0
  9511                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9512                           
  9513  1AFF  3000               	movlw	0
  9514  1B00  0570               	andwf	___fleq@ff1,w
  9515  1B01  00F8               	movwf	??___fleq
  9516  1B02  3000               	movlw	0
  9517  1B03  0571               	andwf	___fleq@ff1+1,w
  9518  1B04  00F9               	movwf	??___fleq+1
  9519  1B05  3080               	movlw	128
  9520  1B06  0572               	andwf	___fleq@ff1+2,w
  9521  1B07  00FA               	movwf	??___fleq+2
  9522  1B08  307F               	movlw	127
  9523  1B09  0573               	andwf	___fleq@ff1+3,w
  9524  1B0A  00FB               	movwf	??___fleq+3
  9525  1B0B  087B               	movf	??___fleq+3,w
  9526  1B0C  047A               	iorwf	??___fleq+2,w
  9527  1B0D  0479               	iorwf	??___fleq+1,w
  9528  1B0E  0478               	iorwf	??___fleq,w
  9529  1B0F  1D03               	skipz
  9530  1B10  2B12               	goto	u5091
  9531  1B11  2B13               	goto	u5090
  9532  1B12                     u5091:
  9533  1B12  2B1B               	goto	l569
  9534  1B13                     u5090:
  9535  1B13                     l3220:
  9536  1B13  3000               	movlw	0
  9537  1B14  00F3               	movwf	___fleq@ff1+3
  9538  1B15  3000               	movlw	0
  9539  1B16  00F2               	movwf	___fleq@ff1+2
  9540  1B17  3000               	movlw	0
  9541  1B18  00F1               	movwf	___fleq@ff1+1
  9542  1B19  3000               	movlw	0
  9543  1B1A  00F0               	movwf	___fleq@ff1
  9544  1B1B                     l569:
  9545  1B1B  3000               	movlw	0
  9546  1B1C  0574               	andwf	___fleq@ff2,w
  9547  1B1D  00F8               	movwf	??___fleq
  9548  1B1E  3000               	movlw	0
  9549  1B1F  0575               	andwf	___fleq@ff2+1,w
  9550  1B20  00F9               	movwf	??___fleq+1
  9551  1B21  3080               	movlw	128
  9552  1B22  0576               	andwf	___fleq@ff2+2,w
  9553  1B23  00FA               	movwf	??___fleq+2
  9554  1B24  307F               	movlw	127
  9555  1B25  0577               	andwf	___fleq@ff2+3,w
  9556  1B26  00FB               	movwf	??___fleq+3
  9557  1B27  087B               	movf	??___fleq+3,w
  9558  1B28  047A               	iorwf	??___fleq+2,w
  9559  1B29  0479               	iorwf	??___fleq+1,w
  9560  1B2A  0478               	iorwf	??___fleq,w
  9561  1B2B  1D03               	skipz
  9562  1B2C  2B2E               	goto	u5101
  9563  1B2D  2B2F               	goto	u5100
  9564  1B2E                     u5101:
  9565  1B2E  2B37               	goto	l570
  9566  1B2F                     u5100:
  9567  1B2F                     l3222:
  9568  1B2F  3000               	movlw	0
  9569  1B30  00F7               	movwf	___fleq@ff2+3
  9570  1B31  3000               	movlw	0
  9571  1B32  00F6               	movwf	___fleq@ff2+2
  9572  1B33  3000               	movlw	0
  9573  1B34  00F5               	movwf	___fleq@ff2+1
  9574  1B35  3000               	movlw	0
  9575  1B36  00F4               	movwf	___fleq@ff2
  9576  1B37                     l570:
  9577  1B37  0877               	movf	___fleq@ff2+3,w
  9578  1B38  0673               	xorwf	___fleq@ff1+3,w
  9579  1B39  1D03               	skipz
  9580  1B3A  2B45               	goto	u5115
  9581  1B3B  0876               	movf	___fleq@ff2+2,w
  9582  1B3C  0672               	xorwf	___fleq@ff1+2,w
  9583  1B3D  1D03               	skipz
  9584  1B3E  2B45               	goto	u5115
  9585  1B3F  0875               	movf	___fleq@ff2+1,w
  9586  1B40  0671               	xorwf	___fleq@ff1+1,w
  9587  1B41  1D03               	skipz
  9588  1B42  2B45               	goto	u5115
  9589  1B43  0874               	movf	___fleq@ff2,w
  9590  1B44  0670               	xorwf	___fleq@ff1,w
  9591  1B45                     u5115:
  9592  1B45  1903               	skipnz
  9593  1B46  2B48               	goto	u5111
  9594  1B47  2B49               	goto	u5110
  9595  1B48                     u5111:
  9596  1B48  2B4B               	goto	l3226
  9597  1B49                     u5110:
  9598  1B49                     l3224:
  9599  1B49  1003               	clrc
  9600  1B4A  2B4C               	goto	l571
  9601  1B4B                     l3226:
  9602  1B4B  1403               	setc
  9603  1B4C                     l571:
  9604  1B4C  0008               	return
  9605  1B4D                     __end_of___fleq:
  9606                           
  9607                           	psect	text22
  9608  19C7                     __ptext22:	
  9609 ;; *************** function _setup *****************
  9610 ;; Defined at:
  9611 ;;		line 113 in file "lab4master.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;		None
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;		None
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  1    wreg      void 
  9618 ;; Registers used:
  9619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9625 ;;      Params:         0       0       0       0       0
  9626 ;;      Locals:         0       0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0
  9628 ;;      Totals:         0       0       0       0       0
  9629 ;;Total ram usage:        0 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:    3
  9632 ;; This function calls:
  9633 ;;		_I2C_Master_Init
  9634 ;;		_Lcd_Init
  9635 ;;		_Lcd_Set_Cursor
  9636 ;;		_Lcd_Write_String
  9637 ;; This function is called by:
  9638 ;;		_main
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           
  9643                           ;psect for function _setup
  9644  19C7                     _setup:
  9645  19C7                     l3364:	
  9646                           ;incstack = 0
  9647                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9648                           
  9649                           
  9650                           ;lab4master.c: 116:     OSCCONbits.IRCF = 7;
  9651  19C7  3070               	movlw	112
  9652  19C8  1683               	bsf	3,5	;RP0=1, select bank1
  9653  19C9  1303               	bcf	3,6	;RP1=0, select bank1
  9654  19CA  048F               	iorwf	15,f	;volatile
  9655  19CB                     l3366:
  9656                           
  9657                           ;lab4master.c: 117:     OSCCONbits.SCS = 1;
  9658  19CB  140F               	bsf	15,0	;volatile
  9659  19CC                     l3368:
  9660                           
  9661                           ;lab4master.c: 119:     ANSELH = 0;
  9662  19CC  1683               	bsf	3,5	;RP0=1, select bank3
  9663  19CD  1703               	bsf	3,6	;RP1=1, select bank3
  9664  19CE  0189               	clrf	9	;volatile
  9665  19CF                     l3370:
  9666                           
  9667                           ;lab4master.c: 120:     ANSEL = 0;
  9668  19CF  0188               	clrf	8	;volatile
  9669  19D0                     l3372:
  9670                           
  9671                           ;lab4master.c: 121:     TRISA = 0;
  9672  19D0  1683               	bsf	3,5	;RP0=1, select bank1
  9673  19D1  1303               	bcf	3,6	;RP1=0, select bank1
  9674  19D2  0185               	clrf	5	;volatile
  9675  19D3                     l3374:
  9676                           
  9677                           ;lab4master.c: 122:     TRISCbits.TRISC0 = 0;
  9678  19D3  1007               	bcf	7,0	;volatile
  9679  19D4                     l3376:
  9680                           
  9681                           ;lab4master.c: 123:     TRISCbits.TRISC1 = 0;
  9682  19D4  1087               	bcf	7,1	;volatile
  9683  19D5                     l3378:
  9684                           
  9685                           ;lab4master.c: 124:     TRISB = 0;
  9686  19D5  0186               	clrf	6	;volatile
  9687  19D6                     l3380:
  9688                           
  9689                           ;lab4master.c: 125:     TRISD = 0;
  9690  19D6  0188               	clrf	8	;volatile
  9691  19D7                     l3382:
  9692                           
  9693                           ;lab4master.c: 126:     TRISE = 0;
  9694  19D7  0189               	clrf	9	;volatile
  9695  19D8                     l3384:
  9696                           
  9697                           ;lab4master.c: 127:     PORTD = 0;
  9698  19D8  1283               	bcf	3,5	;RP0=0, select bank0
  9699  19D9  1303               	bcf	3,6	;RP1=0, select bank0
  9700  19DA  0188               	clrf	8	;volatile
  9701  19DB                     l3386:
  9702                           
  9703                           ;lab4master.c: 129:     Lcd_Init();
  9704  19DB  160A  158A  239D  160A  158A  	fcall	_Lcd_Init
  9705  19E0                     l3388:
  9706                           
  9707                           ;lab4master.c: 130:     Lcd_Set_Cursor(1,1);
  9708  19E0  01F4               	clrf	Lcd_Set_Cursor@b
  9709  19E1  0AF4               	incf	Lcd_Set_Cursor@b,f
  9710  19E2  3001               	movlw	1
  9711  19E3  160A  158A  20F1  160A  158A  	fcall	_Lcd_Set_Cursor
  9712  19E8                     l3390:
  9713                           
  9714                           ;lab4master.c: 131:     Lcd_Write_String("ADC: CONT: TEMP:");
  9715  19E8  30A3               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  9716  19E9  00F3               	movwf	Lcd_Write_String@a
  9717  19EA  3080               	movlw	128
  9718  19EB  00F4               	movwf	Lcd_Write_String@a+1
  9719  19EC  160A  158A  2279  160A  158A  	fcall	_Lcd_Write_String
  9720  19F1                     l3392:
  9721                           
  9722                           ;lab4master.c: 132:     I2C_Master_Init(100000);
  9723  19F1  3000               	movlw	0
  9724  19F2  1283               	bcf	3,5	;RP0=0, select bank0
  9725  19F3  1303               	bcf	3,6	;RP1=0, select bank0
  9726  19F4  00A3               	movwf	I2C_Master_Init@c+3
  9727  19F5  3001               	movlw	1
  9728  19F6  00A2               	movwf	I2C_Master_Init@c+2
  9729  19F7  3086               	movlw	134
  9730  19F8  00A1               	movwf	I2C_Master_Init@c+1
  9731  19F9  30A0               	movlw	160
  9732  19FA  00A0               	movwf	I2C_Master_Init@c
  9733  19FB  160A  158A  218F  160A  158A  	fcall	_I2C_Master_Init
  9734  1A00                     l67:
  9735  1A00  0008               	return
  9736  1A01                     __end_of_setup:
  9737                           
  9738                           	psect	text23
  9739  1A79                     __ptext23:	
  9740 ;; *************** function _Lcd_Write_String *****************
  9741 ;; Defined at:
  9742 ;;		line 104 in file "LCD8bits.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  a               2    3[COMMON] PTR unsigned char 
  9745 ;;		 -> STR_2(17), volt(16), 
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;  i               2    8[COMMON] int 
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9757 ;;      Params:         2       0       0       0       0
  9758 ;;      Locals:         2       0       0       0       0
  9759 ;;      Temps:          3       0       0       0       0
  9760 ;;      Totals:         7       0       0       0       0
  9761 ;;Total ram usage:        7 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    2
  9764 ;; This function calls:
  9765 ;;		_Lcd_Write_Char
  9766 ;; This function is called by:
  9767 ;;		_main
  9768 ;;		_setup
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           
  9773                           ;psect for function _Lcd_Write_String
  9774  1A79                     _Lcd_Write_String:
  9775  1A79                     l2996:	
  9776                           ;incstack = 0
  9777                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9778                           
  9779                           
  9780                           ;LCD8bits.c: 105:     int i;;LCD8bits.c: 106:     for (i = 0; a[i] != '\0'; i++)
  9781  1A79  01F8               	clrf	Lcd_Write_String@i
  9782  1A7A  01F9               	clrf	Lcd_Write_String@i+1
  9783  1A7B  2A9E               	goto	l3002
  9784  1A7C                     l2998:
  9785                           
  9786                           ;LCD8bits.c: 107:         Lcd_Write_Char(a[i]);
  9787  1A7C  0878               	movf	Lcd_Write_String@i,w
  9788  1A7D  0773               	addwf	Lcd_Write_String@a,w
  9789  1A7E  00F6               	movwf	??_Lcd_Write_String+1
  9790  1A7F  0874               	movf	Lcd_Write_String@a+1,w
  9791  1A80  00F5               	movwf	??_Lcd_Write_String
  9792  1A81  1803               	skipnc
  9793  1A82  0AF5               	incf	??_Lcd_Write_String,f
  9794  1A83  1FF8               	btfss	Lcd_Write_String@i,7
  9795  1A84  2A86               	goto	u4460
  9796  1A85  03F5               	decf	??_Lcd_Write_String,f
  9797  1A86                     u4460:
  9798  1A86  0875               	movf	??_Lcd_Write_String,w
  9799  1A87  00F7               	movwf	??_Lcd_Write_String+2
  9800  1A88  0877               	movf	??_Lcd_Write_String+2,w
  9801  1A89  1283               	bcf	3,5	;RP0=0, select bank0
  9802  1A8A  1303               	bcf	3,6	;RP1=0, select bank0
  9803  1A8B  00FF               	movwf	btemp+1
  9804  1A8C  0876               	movf	??_Lcd_Write_String+1,w
  9805  1A8D  0084               	movwf	4
  9806  1A8E  120A  158A  2000  160A  158A  	fcall	stringtab
  9807  1A93  160A  158A  20C1  160A  158A  	fcall	_Lcd_Write_Char
  9808  1A98                     l3000:
  9809  1A98  3001               	movlw	1
  9810  1A99  07F8               	addwf	Lcd_Write_String@i,f
  9811  1A9A  1803               	skipnc
  9812  1A9B  0AF9               	incf	Lcd_Write_String@i+1,f
  9813  1A9C  3000               	movlw	0
  9814  1A9D  07F9               	addwf	Lcd_Write_String@i+1,f
  9815  1A9E                     l3002:
  9816  1A9E  0878               	movf	Lcd_Write_String@i,w
  9817  1A9F  0773               	addwf	Lcd_Write_String@a,w
  9818  1AA0  00F6               	movwf	??_Lcd_Write_String+1
  9819  1AA1  0874               	movf	Lcd_Write_String@a+1,w
  9820  1AA2  00F5               	movwf	??_Lcd_Write_String
  9821  1AA3  1803               	skipnc
  9822  1AA4  0AF5               	incf	??_Lcd_Write_String,f
  9823  1AA5  1FF8               	btfss	Lcd_Write_String@i,7
  9824  1AA6  2AA8               	goto	u4470
  9825  1AA7  03F5               	decf	??_Lcd_Write_String,f
  9826  1AA8                     u4470:
  9827  1AA8  0875               	movf	??_Lcd_Write_String,w
  9828  1AA9  00F7               	movwf	??_Lcd_Write_String+2
  9829  1AAA  0877               	movf	??_Lcd_Write_String+2,w
  9830  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
  9831  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
  9832  1AAD  00FF               	movwf	btemp+1
  9833  1AAE  0876               	movf	??_Lcd_Write_String+1,w
  9834  1AAF  0084               	movwf	4
  9835  1AB0  120A  158A  2000  160A  158A  	fcall	stringtab
  9836  1AB5  3A00               	xorlw	0
  9837  1AB6  1D03               	skipz
  9838  1AB7  2AB9               	goto	u4481
  9839  1AB8  2ABA               	goto	u4480
  9840  1AB9                     u4481:
  9841  1AB9  2A7C               	goto	l2998
  9842  1ABA                     u4480:
  9843  1ABA                     l189:
  9844  1ABA  0008               	return
  9845  1ABB                     __end_of_Lcd_Write_String:
  9846                           
  9847                           	psect	text24
  9848  18C1                     __ptext24:	
  9849 ;; *************** function _Lcd_Write_Char *****************
  9850 ;; Defined at:
  9851 ;;		line 96 in file "LCD8bits.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  a               1    wreg     unsigned char 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  a               1    2[COMMON] unsigned char 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg, status,2, status,0, pclath, cstack
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9865 ;;      Params:         0       0       0       0       0
  9866 ;;      Locals:         1       0       0       0       0
  9867 ;;      Temps:          1       0       0       0       0
  9868 ;;      Totals:         2       0       0       0       0
  9869 ;;Total ram usage:        2 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    1
  9872 ;; This function calls:
  9873 ;;		_Lcd_Port
  9874 ;; This function is called by:
  9875 ;;		_Lcd_Write_String
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           
  9880                           ;psect for function _Lcd_Write_Char
  9881  18C1                     _Lcd_Write_Char:
  9882                           
  9883                           ;incstack = 0
  9884                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9885                           ;Lcd_Write_Char@a stored from wreg
  9886  18C1  00F2               	movwf	Lcd_Write_Char@a
  9887  18C2                     l2486:
  9888                           
  9889                           ;LCD8bits.c: 97:     RC0 = 1;
  9890  18C2  1283               	bcf	3,5	;RP0=0, select bank0
  9891  18C3  1303               	bcf	3,6	;RP1=0, select bank0
  9892  18C4  1407               	bsf	7,0	;volatile
  9893  18C5                     l2488:
  9894                           
  9895                           ;LCD8bits.c: 98:     Lcd_Port(a);
  9896  18C5  0872               	movf	Lcd_Write_Char@a,w
  9897  18C6  160A  158A  223B  160A  158A  	fcall	_Lcd_Port
  9898  18CB                     l2490:
  9899                           
  9900                           ;LCD8bits.c: 99:     RC1 = 1;
  9901  18CB  1283               	bcf	3,5	;RP0=0, select bank0
  9902  18CC  1303               	bcf	3,6	;RP1=0, select bank0
  9903  18CD  1487               	bsf	7,1	;volatile
  9904  18CE                     l2492:
  9905                           
  9906                           ;LCD8bits.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9907  18CE  301A               	movlw	26
  9908  18CF  00F1               	movwf	??_Lcd_Write_Char
  9909  18D0                     u6267:
  9910  18D0  0BF1               	decfsz	??_Lcd_Write_Char,f
  9911  18D1  28D0               	goto	u6267
  9912  18D2  0000               	nop
  9913  18D3                     l2494:
  9914                           
  9915                           ;LCD8bits.c: 101:     RC1 = 0;
  9916  18D3  1283               	bcf	3,5	;RP0=0, select bank0
  9917  18D4  1303               	bcf	3,6	;RP1=0, select bank0
  9918  18D5  1087               	bcf	7,1	;volatile
  9919  18D6                     l183:
  9920  18D6  0008               	return
  9921  18D7                     __end_of_Lcd_Write_Char:
  9922                           
  9923                           	psect	text25
  9924  18F1                     __ptext25:	
  9925 ;; *************** function _Lcd_Set_Cursor *****************
  9926 ;; Defined at:
  9927 ;;		line 68 in file "LCD8bits.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;  a               1    wreg     unsigned char 
  9930 ;;  b               1    4[COMMON] unsigned char 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;  a               1    6[COMMON] unsigned char 
  9933 ;;  temp            1    7[COMMON] unsigned char 
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      void 
  9936 ;; Registers used:
  9937 ;;		wreg, status,2, status,0, pclath, cstack
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9943 ;;      Params:         1       0       0       0       0
  9944 ;;      Locals:         2       0       0       0       0
  9945 ;;      Temps:          1       0       0       0       0
  9946 ;;      Totals:         4       0       0       0       0
  9947 ;;Total ram usage:        4 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    2
  9950 ;; This function calls:
  9951 ;;		_Lcd_Cmd
  9952 ;; This function is called by:
  9953 ;;		_main
  9954 ;;		_setup
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           
  9959                           ;psect for function _Lcd_Set_Cursor
  9960  18F1                     _Lcd_Set_Cursor:
  9961                           
  9962                           ;incstack = 0
  9963                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9964                           ;Lcd_Set_Cursor@a stored from wreg
  9965  18F1  00F6               	movwf	Lcd_Set_Cursor@a
  9966  18F2                     l2984:
  9967                           
  9968                           ;LCD8bits.c: 69:     unsigned char temp;;LCD8bits.c: 70:     if (a == 1) {
  9969  18F2  0376               	decf	Lcd_Set_Cursor@a,w
  9970  18F3  1D03               	btfss	3,2
  9971  18F4  28F6               	goto	u4441
  9972  18F5  28F7               	goto	u4440
  9973  18F6                     u4441:
  9974  18F6  2903               	goto	l2990
  9975  18F7                     u4440:
  9976  18F7                     l2986:
  9977                           
  9978                           ;LCD8bits.c: 71:         temp = 0x80 + b - 1;
  9979  18F7  0874               	movf	Lcd_Set_Cursor@b,w
  9980  18F8  3E7F               	addlw	127
  9981  18F9  00F5               	movwf	??_Lcd_Set_Cursor
  9982  18FA  0875               	movf	??_Lcd_Set_Cursor,w
  9983  18FB  00F7               	movwf	Lcd_Set_Cursor@temp
  9984  18FC                     l2988:
  9985                           
  9986                           ;LCD8bits.c: 72:         Lcd_Cmd(temp);
  9987  18FC  0877               	movf	Lcd_Set_Cursor@temp,w
  9988  18FD  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
  9989                           
  9990                           ;LCD8bits.c: 74:     } else if (a == 2) {
  9991  1902  2914               	goto	l177
  9992  1903                     l2990:
  9993  1903  3002               	movlw	2
  9994  1904  0676               	xorwf	Lcd_Set_Cursor@a,w
  9995  1905  1D03               	btfss	3,2
  9996  1906  2908               	goto	u4451
  9997  1907  2909               	goto	u4450
  9998  1908                     u4451:
  9999  1908  2914               	goto	l177
 10000  1909                     u4450:
 10001  1909                     l2992:
 10002                           
 10003                           ;LCD8bits.c: 75:         temp = 0xC0 + b - 1;
 10004  1909  0874               	movf	Lcd_Set_Cursor@b,w
 10005  190A  3EBF               	addlw	191
 10006  190B  00F5               	movwf	??_Lcd_Set_Cursor
 10007  190C  0875               	movf	??_Lcd_Set_Cursor,w
 10008  190D  00F7               	movwf	Lcd_Set_Cursor@temp
 10009  190E                     l2994:
 10010                           
 10011                           ;LCD8bits.c: 76:         Lcd_Cmd(temp);
 10012  190E  0877               	movf	Lcd_Set_Cursor@temp,w
 10013  190F  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10014  1914                     l177:
 10015  1914  0008               	return
 10016  1915                     __end_of_Lcd_Set_Cursor:
 10017                           
 10018                           	psect	text26
 10019  1B9D                     __ptext26:	
 10020 ;; *************** function _Lcd_Init *****************
 10021 ;; Defined at:
 10022 ;;		line 80 in file "LCD8bits.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      void 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0, pclath, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10036 ;;      Params:         0       0       0       0       0
 10037 ;;      Locals:         0       0       0       0       0
 10038 ;;      Temps:          2       0       0       0       0
 10039 ;;      Totals:         2       0       0       0       0
 10040 ;;Total ram usage:        2 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    2
 10043 ;; This function calls:
 10044 ;;		_Lcd_Cmd
 10045 ;;		_Lcd_Port
 10046 ;; This function is called by:
 10047 ;;		_setup
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           
 10052                           ;psect for function _Lcd_Init
 10053  1B9D                     _Lcd_Init:
 10054  1B9D                     l3004:	
 10055                           ;incstack = 0
 10056                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10057                           
 10058                           
 10059                           ;LCD8bits.c: 81:     Lcd_Port(0);
 10060  1B9D  3000               	movlw	0
 10061  1B9E  160A  158A  223B  160A  158A  	fcall	_Lcd_Port
 10062  1BA3                     l3006:
 10063                           
 10064                           ;LCD8bits.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10065  1BA3  3034               	movlw	52
 10066  1BA4  00F5               	movwf	??_Lcd_Init+1
 10067  1BA5  30F1               	movlw	241
 10068  1BA6  00F4               	movwf	??_Lcd_Init
 10069  1BA7                     u6277:
 10070  1BA7  0BF4               	decfsz	??_Lcd_Init,f
 10071  1BA8  2BA7               	goto	u6277
 10072  1BA9  0BF5               	decfsz	??_Lcd_Init+1,f
 10073  1BAA  2BA7               	goto	u6277
 10074  1BAB  2BAC               	nop2
 10075  1BAC                     l3008:
 10076                           
 10077                           ;LCD8bits.c: 83:     Lcd_Cmd(48);
 10078  1BAC  3030               	movlw	48
 10079  1BAD  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10080                           
 10081                           ;LCD8bits.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10082  1BB2  300D               	movlw	13
 10083  1BB3  00F5               	movwf	??_Lcd_Init+1
 10084  1BB4  30FB               	movlw	251
 10085  1BB5  00F4               	movwf	??_Lcd_Init
 10086  1BB6                     u6287:
 10087  1BB6  0BF4               	decfsz	??_Lcd_Init,f
 10088  1BB7  2BB6               	goto	u6287
 10089  1BB8  0BF5               	decfsz	??_Lcd_Init+1,f
 10090  1BB9  2BB6               	goto	u6287
 10091  1BBA  2BBB               	nop2
 10092  1BBB                     l3010:
 10093                           
 10094                           ;LCD8bits.c: 85:     Lcd_Cmd(48);
 10095  1BBB  3030               	movlw	48
 10096  1BBC  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10097  1BC1                     l3012:
 10098                           
 10099                           ;LCD8bits.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10100  1BC1  301D               	movlw	29
 10101  1BC2  00F5               	movwf	??_Lcd_Init+1
 10102  1BC3  3091               	movlw	145
 10103  1BC4  00F4               	movwf	??_Lcd_Init
 10104  1BC5                     u6297:
 10105  1BC5  0BF4               	decfsz	??_Lcd_Init,f
 10106  1BC6  2BC5               	goto	u6297
 10107  1BC7  0BF5               	decfsz	??_Lcd_Init+1,f
 10108  1BC8  2BC5               	goto	u6297
 10109                           
 10110                           ;LCD8bits.c: 87:     Lcd_Cmd(48);
 10111  1BC9  3030               	movlw	48
 10112  1BCA  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10113                           
 10114                           ;LCD8bits.c: 89:     Lcd_Cmd(56);
 10115  1BCF  3038               	movlw	56
 10116  1BD0  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10117                           
 10118                           ;LCD8bits.c: 90:     Lcd_Cmd(8);
 10119  1BD5  3008               	movlw	8
 10120  1BD6  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10121                           
 10122                           ;LCD8bits.c: 91:     Lcd_Cmd(1);
 10123  1BDB  3001               	movlw	1
 10124  1BDC  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10125                           
 10126                           ;LCD8bits.c: 92:     Lcd_Cmd(6);
 10127  1BE1  3006               	movlw	6
 10128  1BE2  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10129                           
 10130                           ;LCD8bits.c: 93:     Lcd_Cmd(12);
 10131  1BE7  300C               	movlw	12
 10132  1BE8  160A  158A  20D7  160A  158A  	fcall	_Lcd_Cmd
 10133  1BED                     l180:
 10134  1BED  0008               	return
 10135  1BEE                     __end_of_Lcd_Init:
 10136                           
 10137                           	psect	text27
 10138  18D7                     __ptext27:	
 10139 ;; *************** function _Lcd_Cmd *****************
 10140 ;; Defined at:
 10141 ;;		line 55 in file "LCD8bits.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  a               1    wreg     unsigned char 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  a               1    3[COMMON] unsigned char 
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  1    wreg      void 
 10148 ;; Registers used:
 10149 ;;		wreg, status,2, status,0, pclath, cstack
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10155 ;;      Params:         0       0       0       0       0
 10156 ;;      Locals:         1       0       0       0       0
 10157 ;;      Temps:          2       0       0       0       0
 10158 ;;      Totals:         3       0       0       0       0
 10159 ;;Total ram usage:        3 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; Hardware stack levels required when called:    1
 10162 ;; This function calls:
 10163 ;;		_Lcd_Port
 10164 ;; This function is called by:
 10165 ;;		_Lcd_Set_Cursor
 10166 ;;		_Lcd_Init
 10167 ;;		_Lcd_Clear
 10168 ;;		_Lcd_Shift_Right
 10169 ;;		_Lcd_Shift_Left
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           
 10174                           ;psect for function _Lcd_Cmd
 10175  18D7                     _Lcd_Cmd:
 10176                           
 10177                           ;incstack = 0
 10178                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10179                           ;Lcd_Cmd@a stored from wreg
 10180  18D7  00F3               	movwf	Lcd_Cmd@a
 10181  18D8                     l2476:
 10182                           
 10183                           ;LCD8bits.c: 56:     RC0 = 0;
 10184  18D8  1283               	bcf	3,5	;RP0=0, select bank0
 10185  18D9  1303               	bcf	3,6	;RP1=0, select bank0
 10186  18DA  1007               	bcf	7,0	;volatile
 10187  18DB                     l2478:
 10188                           
 10189                           ;LCD8bits.c: 57:     Lcd_Port(a);
 10190  18DB  0873               	movf	Lcd_Cmd@a,w
 10191  18DC  160A  158A  223B  160A  158A  	fcall	_Lcd_Port
 10192  18E1                     l2480:
 10193                           
 10194                           ;LCD8bits.c: 58:     RC1 = 1;
 10195  18E1  1283               	bcf	3,5	;RP0=0, select bank0
 10196  18E2  1303               	bcf	3,6	;RP1=0, select bank0
 10197  18E3  1487               	bsf	7,1	;volatile
 10198  18E4                     l2482:
 10199                           
 10200                           ;LCD8bits.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10201  18E4  300B               	movlw	11
 10202  18E5  00F2               	movwf	??_Lcd_Cmd+1
 10203  18E6  3062               	movlw	98
 10204  18E7  00F1               	movwf	??_Lcd_Cmd
 10205  18E8                     u6307:
 10206  18E8  0BF1               	decfsz	??_Lcd_Cmd,f
 10207  18E9  28E8               	goto	u6307
 10208  18EA  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10209  18EB  28E8               	goto	u6307
 10210  18EC  0000               	nop
 10211  18ED                     l2484:
 10212                           
 10213                           ;LCD8bits.c: 60:     RC1 = 0;
 10214  18ED  1283               	bcf	3,5	;RP0=0, select bank0
 10215  18EE  1303               	bcf	3,6	;RP1=0, select bank0
 10216  18EF  1087               	bcf	7,1	;volatile
 10217  18F0                     l168:
 10218  18F0  0008               	return
 10219  18F1                     __end_of_Lcd_Cmd:
 10220                           
 10221                           	psect	text28
 10222  1A3B                     __ptext28:	
 10223 ;; *************** function _Lcd_Port *****************
 10224 ;; Defined at:
 10225 ;;		line 13 in file "LCD8bits.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;  a               1    wreg     unsigned char 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  a               1    0[COMMON] unsigned char 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10239 ;;      Params:         0       0       0       0       0
 10240 ;;      Locals:         1       0       0       0       0
 10241 ;;      Temps:          0       0       0       0       0
 10242 ;;      Totals:         1       0       0       0       0
 10243 ;;Total ram usage:        1 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_Lcd_Cmd
 10249 ;;		_Lcd_Init
 10250 ;;		_Lcd_Write_Char
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           
 10255                           ;psect for function _Lcd_Port
 10256  1A3B                     _Lcd_Port:
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _Lcd_Port: [wreg]
 10260                           ;Lcd_Port@a stored from wreg
 10261  1A3B  00F0               	movwf	Lcd_Port@a
 10262  1A3C                     l2444:
 10263                           
 10264                           ;LCD8bits.c: 14:     if (a & 1)
 10265  1A3C  1C70               	btfss	Lcd_Port@a,0
 10266  1A3D  2A3F               	goto	u3111
 10267  1A3E  2A40               	goto	u3110
 10268  1A3F                     u3111:
 10269  1A3F  2A44               	goto	l149
 10270  1A40                     u3110:
 10271  1A40                     l2446:
 10272                           
 10273                           ;LCD8bits.c: 15:         RD0 = 1;
 10274  1A40  1283               	bcf	3,5	;RP0=0, select bank0
 10275  1A41  1303               	bcf	3,6	;RP1=0, select bank0
 10276  1A42  1408               	bsf	8,0	;volatile
 10277  1A43  2A47               	goto	l150
 10278  1A44                     l149:	
 10279                           ;LCD8bits.c: 16:     else
 10280                           
 10281                           
 10282                           ;LCD8bits.c: 17:         RD0 = 0;
 10283  1A44  1283               	bcf	3,5	;RP0=0, select bank0
 10284  1A45  1303               	bcf	3,6	;RP1=0, select bank0
 10285  1A46  1008               	bcf	8,0	;volatile
 10286  1A47                     l150:
 10287                           
 10288                           ;LCD8bits.c: 19:     if (a & 2)
 10289  1A47  1CF0               	btfss	Lcd_Port@a,1
 10290  1A48  2A4A               	goto	u3121
 10291  1A49  2A4B               	goto	u3120
 10292  1A4A                     u3121:
 10293  1A4A  2A4D               	goto	l151
 10294  1A4B                     u3120:
 10295  1A4B                     l2448:
 10296                           
 10297                           ;LCD8bits.c: 20:         RD1 = 1;
 10298  1A4B  1488               	bsf	8,1	;volatile
 10299  1A4C  2A4E               	goto	l152
 10300  1A4D                     l151:	
 10301                           ;LCD8bits.c: 21:     else
 10302                           
 10303                           
 10304                           ;LCD8bits.c: 22:         RD1 = 0;
 10305  1A4D  1088               	bcf	8,1	;volatile
 10306  1A4E                     l152:
 10307                           
 10308                           ;LCD8bits.c: 24:     if (a & 4)
 10309  1A4E  1D70               	btfss	Lcd_Port@a,2
 10310  1A4F  2A51               	goto	u3131
 10311  1A50  2A52               	goto	u3130
 10312  1A51                     u3131:
 10313  1A51  2A54               	goto	l153
 10314  1A52                     u3130:
 10315  1A52                     l2450:
 10316                           
 10317                           ;LCD8bits.c: 25:         RD2 = 1;
 10318  1A52  1508               	bsf	8,2	;volatile
 10319  1A53  2A55               	goto	l154
 10320  1A54                     l153:	
 10321                           ;LCD8bits.c: 26:     else
 10322                           
 10323                           
 10324                           ;LCD8bits.c: 27:         RD2 = 0;
 10325  1A54  1108               	bcf	8,2	;volatile
 10326  1A55                     l154:
 10327                           
 10328                           ;LCD8bits.c: 29:     if (a & 8)
 10329  1A55  1DF0               	btfss	Lcd_Port@a,3
 10330  1A56  2A58               	goto	u3141
 10331  1A57  2A59               	goto	u3140
 10332  1A58                     u3141:
 10333  1A58  2A5B               	goto	l155
 10334  1A59                     u3140:
 10335  1A59                     l2452:
 10336                           
 10337                           ;LCD8bits.c: 30:         RD3 = 1;
 10338  1A59  1588               	bsf	8,3	;volatile
 10339  1A5A  2A5C               	goto	l156
 10340  1A5B                     l155:	
 10341                           ;LCD8bits.c: 31:     else
 10342                           
 10343                           
 10344                           ;LCD8bits.c: 32:         RD3 = 0;
 10345  1A5B  1188               	bcf	8,3	;volatile
 10346  1A5C                     l156:
 10347                           
 10348                           ;LCD8bits.c: 34:     if (a & 16)
 10349  1A5C  1E70               	btfss	Lcd_Port@a,4
 10350  1A5D  2A5F               	goto	u3151
 10351  1A5E  2A60               	goto	u3150
 10352  1A5F                     u3151:
 10353  1A5F  2A62               	goto	l157
 10354  1A60                     u3150:
 10355  1A60                     l2454:
 10356                           
 10357                           ;LCD8bits.c: 35:         RD4 = 1;
 10358  1A60  1608               	bsf	8,4	;volatile
 10359  1A61  2A63               	goto	l158
 10360  1A62                     l157:	
 10361                           ;LCD8bits.c: 36:     else
 10362                           
 10363                           
 10364                           ;LCD8bits.c: 37:         RD4 = 0;
 10365  1A62  1208               	bcf	8,4	;volatile
 10366  1A63                     l158:
 10367                           
 10368                           ;LCD8bits.c: 39:     if (a & 32)
 10369  1A63  1EF0               	btfss	Lcd_Port@a,5
 10370  1A64  2A66               	goto	u3161
 10371  1A65  2A67               	goto	u3160
 10372  1A66                     u3161:
 10373  1A66  2A69               	goto	l159
 10374  1A67                     u3160:
 10375  1A67                     l2456:
 10376                           
 10377                           ;LCD8bits.c: 40:         RD5 = 1;
 10378  1A67  1688               	bsf	8,5	;volatile
 10379  1A68  2A6A               	goto	l160
 10380  1A69                     l159:	
 10381                           ;LCD8bits.c: 41:     else
 10382                           
 10383                           
 10384                           ;LCD8bits.c: 42:         RD5 = 0;
 10385  1A69  1288               	bcf	8,5	;volatile
 10386  1A6A                     l160:
 10387                           
 10388                           ;LCD8bits.c: 44:     if (a & 64)
 10389  1A6A  1F70               	btfss	Lcd_Port@a,6
 10390  1A6B  2A6D               	goto	u3171
 10391  1A6C  2A6E               	goto	u3170
 10392  1A6D                     u3171:
 10393  1A6D  2A70               	goto	l161
 10394  1A6E                     u3170:
 10395  1A6E                     l2458:
 10396                           
 10397                           ;LCD8bits.c: 45:         RD6 = 1;
 10398  1A6E  1708               	bsf	8,6	;volatile
 10399  1A6F  2A71               	goto	l162
 10400  1A70                     l161:	
 10401                           ;LCD8bits.c: 46:     else
 10402                           
 10403                           
 10404                           ;LCD8bits.c: 47:         RD6 = 0;
 10405  1A70  1308               	bcf	8,6	;volatile
 10406  1A71                     l162:
 10407                           
 10408                           ;LCD8bits.c: 49:     if (a & 128)
 10409  1A71  1FF0               	btfss	Lcd_Port@a,7
 10410  1A72  2A74               	goto	u3181
 10411  1A73  2A75               	goto	u3180
 10412  1A74                     u3181:
 10413  1A74  2A77               	goto	l163
 10414  1A75                     u3180:
 10415  1A75                     l2460:
 10416                           
 10417                           ;LCD8bits.c: 50:         RD7 = 1;
 10418  1A75  1788               	bsf	8,7	;volatile
 10419  1A76  2A78               	goto	l165
 10420  1A77                     l163:	
 10421                           ;LCD8bits.c: 51:     else
 10422                           
 10423                           
 10424                           ;LCD8bits.c: 52:         RD7 = 0;
 10425  1A77  1388               	bcf	8,7	;volatile
 10426  1A78                     l165:
 10427  1A78  0008               	return
 10428  1A79                     __end_of_Lcd_Port:
 10429                           
 10430                           	psect	text29
 10431  198F                     __ptext29:	
 10432 ;; *************** function _I2C_Master_Init *****************
 10433 ;; Defined at:
 10434 ;;		line 16 in file "I2C.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;  c               4    0[BANK0 ] const unsigned long 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0, pclath, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10448 ;;      Params:         0       4       0       0       0
 10449 ;;      Locals:         0       0       0       0       0
 10450 ;;      Temps:          0       4       0       0       0
 10451 ;;      Totals:         0       8       0       0       0
 10452 ;;Total ram usage:        8 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    1
 10455 ;; This function calls:
 10456 ;;		___lldiv
 10457 ;; This function is called by:
 10458 ;;		_setup
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           
 10463                           ;psect for function _I2C_Master_Init
 10464  198F                     _I2C_Master_Init:
 10465  198F                     l3014:	
 10466                           ;incstack = 0
 10467                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10468                           
 10469                           
 10470                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
 10471  198F  3028               	movlw	40
 10472  1990  1283               	bcf	3,5	;RP0=0, select bank0
 10473  1991  1303               	bcf	3,6	;RP1=0, select bank0
 10474  1992  0094               	movwf	20	;volatile
 10475  1993                     l3016:
 10476                           
 10477                           ;I2C.c: 19:     SSPCON2 = 0;
 10478  1993  1683               	bsf	3,5	;RP0=1, select bank1
 10479  1994  1303               	bcf	3,6	;RP1=0, select bank1
 10480  1995  0191               	clrf	17	;volatile
 10481  1996                     l3018:
 10482                           
 10483                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
 10484  1996  1283               	bcf	3,5	;RP0=0, select bank0
 10485  1997  1303               	bcf	3,6	;RP1=0, select bank0
 10486  1998  0820               	movf	I2C_Master_Init@c,w
 10487  1999  00A4               	movwf	??_I2C_Master_Init
 10488  199A  0821               	movf	I2C_Master_Init@c+1,w
 10489  199B  00A5               	movwf	??_I2C_Master_Init+1
 10490  199C  0822               	movf	I2C_Master_Init@c+2,w
 10491  199D  00A6               	movwf	??_I2C_Master_Init+2
 10492  199E  0823               	movf	I2C_Master_Init@c+3,w
 10493  199F  00A7               	movwf	??_I2C_Master_Init+3
 10494  19A0  3002               	movlw	2
 10495  19A1                     u4495:
 10496  19A1  1003               	clrc
 10497  19A2  0DA4               	rlf	??_I2C_Master_Init,f
 10498  19A3  0DA5               	rlf	??_I2C_Master_Init+1,f
 10499  19A4  0DA6               	rlf	??_I2C_Master_Init+2,f
 10500  19A5  0DA7               	rlf	??_I2C_Master_Init+3,f
 10501  19A6                     u4490:
 10502  19A6  3EFF               	addlw	-1
 10503  19A7  1D03               	skipz
 10504  19A8  29A1               	goto	u4495
 10505  19A9  0827               	movf	??_I2C_Master_Init+3,w
 10506  19AA  00F3               	movwf	___lldiv@divisor+3
 10507  19AB  0826               	movf	??_I2C_Master_Init+2,w
 10508  19AC  00F2               	movwf	___lldiv@divisor+2
 10509  19AD  0825               	movf	??_I2C_Master_Init+1,w
 10510  19AE  00F1               	movwf	___lldiv@divisor+1
 10511  19AF  0824               	movf	??_I2C_Master_Init,w
 10512  19B0  00F0               	movwf	___lldiv@divisor
 10513  19B1  3000               	movlw	0
 10514  19B2  00F7               	movwf	___lldiv@dividend+3
 10515  19B3  307A               	movlw	122
 10516  19B4  00F6               	movwf	___lldiv@dividend+2
 10517  19B5  3012               	movlw	18
 10518  19B6  00F5               	movwf	___lldiv@dividend+1
 10519  19B7  3000               	movlw	0
 10520  19B8  00F4               	movwf	___lldiv@dividend
 10521  19B9  160A  158A  249D  160A  158A  	fcall	___lldiv
 10522  19BE  0870               	movf	?___lldiv,w
 10523  19BF  3EFF               	addlw	255
 10524  19C0  1683               	bsf	3,5	;RP0=1, select bank1
 10525  19C1  1303               	bcf	3,6	;RP1=0, select bank1
 10526  19C2  0093               	movwf	19	;volatile
 10527  19C3                     l3020:
 10528                           
 10529                           ;I2C.c: 21:     SSPSTAT = 0;
 10530  19C3  0194               	clrf	20	;volatile
 10531  19C4                     l3022:
 10532                           
 10533                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
 10534  19C4  1587               	bsf	7,3	;volatile
 10535  19C5                     l3024:
 10536                           
 10537                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
 10538  19C5  1607               	bsf	7,4	;volatile
 10539  19C6                     l96:
 10540  19C6  0008               	return
 10541  19C7                     __end_of_I2C_Master_Init:
 10542                           
 10543                           	psect	text30
 10544  1C9D                     __ptext30:	
 10545 ;; *************** function ___lldiv *****************
 10546 ;; Defined at:
 10547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  divisor         4    0[COMMON] unsigned long 
 10550 ;;  dividend        4    4[COMMON] unsigned long 
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;  quotient        4    9[COMMON] unsigned long 
 10553 ;;  counter         1   13[COMMON] unsigned char 
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  4    0[COMMON] unsigned long 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10563 ;;      Params:         8       0       0       0       0
 10564 ;;      Locals:         5       0       0       0       0
 10565 ;;      Temps:          1       0       0       0       0
 10566 ;;      Totals:        14       0       0       0       0
 10567 ;;Total ram usage:       14 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_I2C_Master_Init
 10573 ;;		_sprintf
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           
 10578                           ;psect for function ___lldiv
 10579  1C9D                     ___lldiv:
 10580  1C9D                     l2496:	
 10581                           ;incstack = 0
 10582                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10583                           
 10584  1C9D  3000               	movlw	0
 10585  1C9E  00FC               	movwf	___lldiv@quotient+3
 10586  1C9F  3000               	movlw	0
 10587  1CA0  00FB               	movwf	___lldiv@quotient+2
 10588  1CA1  3000               	movlw	0
 10589  1CA2  00FA               	movwf	___lldiv@quotient+1
 10590  1CA3  3000               	movlw	0
 10591  1CA4  00F9               	movwf	___lldiv@quotient
 10592  1CA5  0873               	movf	___lldiv@divisor+3,w
 10593  1CA6  0472               	iorwf	___lldiv@divisor+2,w
 10594  1CA7  0471               	iorwf	___lldiv@divisor+1,w
 10595  1CA8  0470               	iorwf	___lldiv@divisor,w
 10596  1CA9  1903               	skipnz
 10597  1CAA  2CAC               	goto	u3221
 10598  1CAB  2CAD               	goto	u3220
 10599  1CAC                     u3221:
 10600  1CAC  2CFA               	goto	l2516
 10601  1CAD                     u3220:
 10602  1CAD                     l2498:
 10603  1CAD  01FD               	clrf	___lldiv@counter
 10604  1CAE  0AFD               	incf	___lldiv@counter,f
 10605  1CAF  2CBD               	goto	l2502
 10606  1CB0                     l2500:
 10607  1CB0  3001               	movlw	1
 10608  1CB1  00F8               	movwf	??___lldiv
 10609  1CB2                     u3235:
 10610  1CB2  1003               	clrc
 10611  1CB3  0DF0               	rlf	___lldiv@divisor,f
 10612  1CB4  0DF1               	rlf	___lldiv@divisor+1,f
 10613  1CB5  0DF2               	rlf	___lldiv@divisor+2,f
 10614  1CB6  0DF3               	rlf	___lldiv@divisor+3,f
 10615  1CB7  0BF8               	decfsz	??___lldiv,f
 10616  1CB8  2CB2               	goto	u3235
 10617  1CB9  3001               	movlw	1
 10618  1CBA  00F8               	movwf	??___lldiv
 10619  1CBB  0878               	movf	??___lldiv,w
 10620  1CBC  07FD               	addwf	___lldiv@counter,f
 10621  1CBD                     l2502:
 10622  1CBD  1FF3               	btfss	___lldiv@divisor+3,7
 10623  1CBE  2CC0               	goto	u3241
 10624  1CBF  2CC1               	goto	u3240
 10625  1CC0                     u3241:
 10626  1CC0  2CB0               	goto	l2500
 10627  1CC1                     u3240:
 10628  1CC1                     l2504:
 10629  1CC1  3001               	movlw	1
 10630  1CC2  00F8               	movwf	??___lldiv
 10631  1CC3                     u3255:
 10632  1CC3  1003               	clrc
 10633  1CC4  0DF9               	rlf	___lldiv@quotient,f
 10634  1CC5  0DFA               	rlf	___lldiv@quotient+1,f
 10635  1CC6  0DFB               	rlf	___lldiv@quotient+2,f
 10636  1CC7  0DFC               	rlf	___lldiv@quotient+3,f
 10637  1CC8  0BF8               	decfsz	??___lldiv,f
 10638  1CC9  2CC3               	goto	u3255
 10639  1CCA                     l2506:
 10640  1CCA  0873               	movf	___lldiv@divisor+3,w
 10641  1CCB  0277               	subwf	___lldiv@dividend+3,w
 10642  1CCC  1D03               	skipz
 10643  1CCD  2CD8               	goto	u3265
 10644  1CCE  0872               	movf	___lldiv@divisor+2,w
 10645  1CCF  0276               	subwf	___lldiv@dividend+2,w
 10646  1CD0  1D03               	skipz
 10647  1CD1  2CD8               	goto	u3265
 10648  1CD2  0871               	movf	___lldiv@divisor+1,w
 10649  1CD3  0275               	subwf	___lldiv@dividend+1,w
 10650  1CD4  1D03               	skipz
 10651  1CD5  2CD8               	goto	u3265
 10652  1CD6  0870               	movf	___lldiv@divisor,w
 10653  1CD7  0274               	subwf	___lldiv@dividend,w
 10654  1CD8                     u3265:
 10655  1CD8  1C03               	skipc
 10656  1CD9  2CDB               	goto	u3261
 10657  1CDA  2CDC               	goto	u3260
 10658  1CDB                     u3261:
 10659  1CDB  2CEB               	goto	l2512
 10660  1CDC                     u3260:
 10661  1CDC                     l2508:
 10662  1CDC  0870               	movf	___lldiv@divisor,w
 10663  1CDD  02F4               	subwf	___lldiv@dividend,f
 10664  1CDE  0871               	movf	___lldiv@divisor+1,w
 10665  1CDF  1C03               	skipc
 10666  1CE0  0F71               	incfsz	___lldiv@divisor+1,w
 10667  1CE1  02F5               	subwf	___lldiv@dividend+1,f
 10668  1CE2  0872               	movf	___lldiv@divisor+2,w
 10669  1CE3  1C03               	skipc
 10670  1CE4  0F72               	incfsz	___lldiv@divisor+2,w
 10671  1CE5  02F6               	subwf	___lldiv@dividend+2,f
 10672  1CE6  0873               	movf	___lldiv@divisor+3,w
 10673  1CE7  1C03               	skipc
 10674  1CE8  0F73               	incfsz	___lldiv@divisor+3,w
 10675  1CE9  02F7               	subwf	___lldiv@dividend+3,f
 10676  1CEA                     l2510:
 10677  1CEA  1479               	bsf	___lldiv@quotient,0
 10678  1CEB                     l2512:
 10679  1CEB  3001               	movlw	1
 10680  1CEC                     u3275:
 10681  1CEC  1003               	clrc
 10682  1CED  0CF3               	rrf	___lldiv@divisor+3,f
 10683  1CEE  0CF2               	rrf	___lldiv@divisor+2,f
 10684  1CEF  0CF1               	rrf	___lldiv@divisor+1,f
 10685  1CF0  0CF0               	rrf	___lldiv@divisor,f
 10686  1CF1  3EFF               	addlw	-1
 10687  1CF2  1D03               	skipz
 10688  1CF3  2CEC               	goto	u3275
 10689  1CF4                     l2514:
 10690  1CF4  3001               	movlw	1
 10691  1CF5  02FD               	subwf	___lldiv@counter,f
 10692  1CF6  1D03               	btfss	3,2
 10693  1CF7  2CF9               	goto	u3281
 10694  1CF8  2CFA               	goto	u3280
 10695  1CF9                     u3281:
 10696  1CF9  2CC1               	goto	l2504
 10697  1CFA                     u3280:
 10698  1CFA                     l2516:
 10699  1CFA  087C               	movf	___lldiv@quotient+3,w
 10700  1CFB  00F3               	movwf	?___lldiv+3
 10701  1CFC  087B               	movf	___lldiv@quotient+2,w
 10702  1CFD  00F2               	movwf	?___lldiv+2
 10703  1CFE  087A               	movf	___lldiv@quotient+1,w
 10704  1CFF  00F1               	movwf	?___lldiv+1
 10705  1D00  0879               	movf	___lldiv@quotient,w
 10706  1D01  00F0               	movwf	?___lldiv
 10707  1D02                     l419:
 10708  1D02  0008               	return
 10709  1D03                     __end_of___lldiv:
 10710                           
 10711                           	psect	text31
 10712  1190                     __ptext31:	
 10713 ;; *************** function ___fldiv *****************
 10714 ;; Defined at:
 10715 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;  a               4   30[BANK0 ] unsigned long 
 10718 ;;  b               4   34[BANK0 ] unsigned long 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  grs             4   50[BANK0 ] unsigned long 
 10721 ;;  rem             4   43[BANK0 ] unsigned long 
 10722 ;;  new_exp         2   48[BANK0 ] int 
 10723 ;;  aexp            1   55[BANK0 ] unsigned char 
 10724 ;;  bexp            1   54[BANK0 ] unsigned char 
 10725 ;;  sign            1   47[BANK0 ] unsigned char 
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  4   30[BANK0 ] unsigned char 
 10728 ;; Registers used:
 10729 ;;		wreg, status,2, status,0, btemp+1
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10735 ;;      Params:         0       8       0       0       0
 10736 ;;      Locals:         0      13       0       0       0
 10737 ;;      Temps:          0       5       0       0       0
 10738 ;;      Totals:         0      26       0       0       0
 10739 ;;Total ram usage:       26 bytes
 10740 ;; Hardware stack levels used:    1
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_main
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           
 10749                           ;psect for function ___fldiv
 10750  1190                     ___fldiv:
 10751  1190                     l3660:	
 10752                           ;incstack = 0
 10753                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10754                           
 10755  1190  1283               	bcf	3,5	;RP0=0, select bank0
 10756  1191  1303               	bcf	3,6	;RP1=0, select bank0
 10757  1192  0845               	movf	___fldiv@b+3,w
 10758  1193  3980               	andlw	128
 10759  1194  00C6               	movwf	??___fldiv
 10760  1195  0846               	movf	??___fldiv,w
 10761  1196  00CF               	movwf	___fldiv@sign
 10762  1197                     l3662:
 10763  1197  0845               	movf	___fldiv@b+3,w
 10764  1198  00C6               	movwf	??___fldiv
 10765  1199  0746               	addwf	??___fldiv,w
 10766  119A  00C7               	movwf	??___fldiv+1
 10767  119B  0847               	movf	??___fldiv+1,w
 10768  119C  00D6               	movwf	___fldiv@bexp
 10769  119D                     l3664:
 10770  119D  1FC4               	btfss	___fldiv@b+2,7
 10771  119E  29A0               	goto	u5921
 10772  119F  29A1               	goto	u5920
 10773  11A0                     u5921:
 10774  11A0  29A2               	goto	l3668
 10775  11A1                     u5920:
 10776  11A1                     l3666:
 10777  11A1  1456               	bsf	___fldiv@bexp,0
 10778  11A2                     l3668:
 10779  11A2  0856               	movf	___fldiv@bexp,w
 10780  11A3  1903               	btfsc	3,2
 10781  11A4  29A6               	goto	u5931
 10782  11A5  29A7               	goto	u5930
 10783  11A6                     u5931:
 10784  11A6  29B7               	goto	l3678
 10785  11A7                     u5930:
 10786  11A7                     l3670:
 10787  11A7  0A56               	incf	___fldiv@bexp,w
 10788  11A8  1D03               	btfss	3,2
 10789  11A9  29AB               	goto	u5941
 10790  11AA  29AC               	goto	u5940
 10791  11AB                     u5941:
 10792  11AB  29B4               	goto	l3674
 10793  11AC                     u5940:
 10794  11AC                     l3672:
 10795  11AC  3000               	movlw	0
 10796  11AD  00C5               	movwf	___fldiv@b+3
 10797  11AE  3000               	movlw	0
 10798  11AF  00C4               	movwf	___fldiv@b+2
 10799  11B0  3000               	movlw	0
 10800  11B1  00C3               	movwf	___fldiv@b+1
 10801  11B2  3000               	movlw	0
 10802  11B3  00C2               	movwf	___fldiv@b
 10803  11B4                     l3674:
 10804  11B4  17C4               	bsf	___fldiv@b+2,7
 10805  11B5                     l3676:
 10806  11B5  01C5               	clrf	___fldiv@b+3
 10807  11B6  29BF               	goto	l3680
 10808  11B7                     l3678:
 10809  11B7  3000               	movlw	0
 10810  11B8  00C5               	movwf	___fldiv@b+3
 10811  11B9  3000               	movlw	0
 10812  11BA  00C4               	movwf	___fldiv@b+2
 10813  11BB  3000               	movlw	0
 10814  11BC  00C3               	movwf	___fldiv@b+1
 10815  11BD  3000               	movlw	0
 10816  11BE  00C2               	movwf	___fldiv@b
 10817  11BF                     l3680:
 10818  11BF  0841               	movf	___fldiv@a+3,w
 10819  11C0  3980               	andlw	128
 10820  11C1  00C6               	movwf	??___fldiv
 10821  11C2  0846               	movf	??___fldiv,w
 10822  11C3  06CF               	xorwf	___fldiv@sign,f
 10823  11C4                     l3682:
 10824  11C4  0841               	movf	___fldiv@a+3,w
 10825  11C5  00C6               	movwf	??___fldiv
 10826  11C6  0746               	addwf	??___fldiv,w
 10827  11C7  00C7               	movwf	??___fldiv+1
 10828  11C8  0847               	movf	??___fldiv+1,w
 10829  11C9  00D7               	movwf	___fldiv@aexp
 10830  11CA                     l3684:
 10831  11CA  1FC0               	btfss	___fldiv@a+2,7
 10832  11CB  29CD               	goto	u5951
 10833  11CC  29CE               	goto	u5950
 10834  11CD                     u5951:
 10835  11CD  29CF               	goto	l3688
 10836  11CE                     u5950:
 10837  11CE                     l3686:
 10838  11CE  1457               	bsf	___fldiv@aexp,0
 10839  11CF                     l3688:
 10840  11CF  0857               	movf	___fldiv@aexp,w
 10841  11D0  1903               	btfsc	3,2
 10842  11D1  29D3               	goto	u5961
 10843  11D2  29D4               	goto	u5960
 10844  11D3                     u5961:
 10845  11D3  29E4               	goto	l3698
 10846  11D4                     u5960:
 10847  11D4                     l3690:
 10848  11D4  0A57               	incf	___fldiv@aexp,w
 10849  11D5  1D03               	btfss	3,2
 10850  11D6  29D8               	goto	u5971
 10851  11D7  29D9               	goto	u5970
 10852  11D8                     u5971:
 10853  11D8  29E1               	goto	l3694
 10854  11D9                     u5970:
 10855  11D9                     l3692:
 10856  11D9  3000               	movlw	0
 10857  11DA  00C1               	movwf	___fldiv@a+3
 10858  11DB  3000               	movlw	0
 10859  11DC  00C0               	movwf	___fldiv@a+2
 10860  11DD  3000               	movlw	0
 10861  11DE  00BF               	movwf	___fldiv@a+1
 10862  11DF  3000               	movlw	0
 10863  11E0  00BE               	movwf	___fldiv@a
 10864  11E1                     l3694:
 10865  11E1  17C0               	bsf	___fldiv@a+2,7
 10866  11E2                     l3696:
 10867  11E2  01C1               	clrf	___fldiv@a+3
 10868  11E3  29EC               	goto	l766
 10869  11E4                     l3698:
 10870  11E4  3000               	movlw	0
 10871  11E5  00C1               	movwf	___fldiv@a+3
 10872  11E6  3000               	movlw	0
 10873  11E7  00C0               	movwf	___fldiv@a+2
 10874  11E8  3000               	movlw	0
 10875  11E9  00BF               	movwf	___fldiv@a+1
 10876  11EA  3000               	movlw	0
 10877  11EB  00BE               	movwf	___fldiv@a
 10878  11EC                     l766:
 10879  11EC  0841               	movf	___fldiv@a+3,w
 10880  11ED  0440               	iorwf	___fldiv@a+2,w
 10881  11EE  043F               	iorwf	___fldiv@a+1,w
 10882  11EF  043E               	iorwf	___fldiv@a,w
 10883  11F0  1D03               	skipz
 10884  11F1  29F3               	goto	u5981
 10885  11F2  29F4               	goto	u5980
 10886  11F3                     u5981:
 10887  11F3  2A0D               	goto	l3708
 10888  11F4                     u5980:
 10889  11F4                     l3700:
 10890  11F4  3000               	movlw	0
 10891  11F5  00C5               	movwf	___fldiv@b+3
 10892  11F6  3000               	movlw	0
 10893  11F7  00C4               	movwf	___fldiv@b+2
 10894  11F8  3000               	movlw	0
 10895  11F9  00C3               	movwf	___fldiv@b+1
 10896  11FA  3000               	movlw	0
 10897  11FB  00C2               	movwf	___fldiv@b
 10898  11FC  3080               	movlw	128
 10899  11FD  04C4               	iorwf	___fldiv@b+2,f
 10900  11FE  307F               	movlw	127
 10901  11FF  04C5               	iorwf	___fldiv@b+3,f
 10902  1200                     l3702:
 10903  1200  084F               	movf	___fldiv@sign,w
 10904  1201  00C6               	movwf	??___fldiv
 10905  1202  0846               	movf	??___fldiv,w
 10906  1203  04C5               	iorwf	___fldiv@b+3,f
 10907  1204                     l3704:
 10908  1204  0845               	movf	___fldiv@b+3,w
 10909  1205  00C1               	movwf	?___fldiv+3
 10910  1206  0844               	movf	___fldiv@b+2,w
 10911  1207  00C0               	movwf	?___fldiv+2
 10912  1208  0843               	movf	___fldiv@b+1,w
 10913  1209  00BF               	movwf	?___fldiv+1
 10914  120A  0842               	movf	___fldiv@b,w
 10915  120B  00BE               	movwf	?___fldiv
 10916  120C  2B6C               	goto	l768
 10917  120D                     l3708:
 10918  120D  0856               	movf	___fldiv@bexp,w
 10919  120E  1D03               	btfss	3,2
 10920  120F  2A11               	goto	u5991
 10921  1210  2A12               	goto	u5990
 10922  1211                     u5991:
 10923  1211  2A1B               	goto	l3714
 10924  1212                     u5990:
 10925  1212                     l3710:
 10926  1212  3000               	movlw	0
 10927  1213  00C1               	movwf	?___fldiv+3
 10928  1214  3000               	movlw	0
 10929  1215  00C0               	movwf	?___fldiv+2
 10930  1216  3000               	movlw	0
 10931  1217  00BF               	movwf	?___fldiv+1
 10932  1218  3000               	movlw	0
 10933  1219  00BE               	movwf	?___fldiv
 10934  121A  2B6C               	goto	l768
 10935  121B                     l3714:
 10936  121B  0856               	movf	___fldiv@bexp,w
 10937  121C  00C6               	movwf	??___fldiv
 10938  121D  01C7               	clrf	??___fldiv+1
 10939  121E  0847               	movf	??___fldiv+1,w
 10940  121F  00C9               	movwf	??___fldiv+3
 10941  1220  0857               	movf	___fldiv@aexp,w
 10942  1221  0246               	subwf	??___fldiv,w
 10943  1222  00C8               	movwf	??___fldiv+2
 10944  1223  1C03               	skipc
 10945  1224  03C9               	decf	??___fldiv+3,f
 10946  1225  0848               	movf	??___fldiv+2,w
 10947  1226  3E7F               	addlw	127
 10948  1227  00D0               	movwf	___fldiv@new_exp
 10949  1228  0849               	movf	??___fldiv+3,w
 10950  1229  1803               	skipnc
 10951  122A  3E01               	addlw	1
 10952  122B  3E00               	addlw	0
 10953  122C  00D1               	movwf	___fldiv@new_exp+1
 10954  122D                     l3716:
 10955  122D  0845               	movf	___fldiv@b+3,w
 10956  122E  00CE               	movwf	___fldiv@rem+3
 10957  122F  0844               	movf	___fldiv@b+2,w
 10958  1230  00CD               	movwf	___fldiv@rem+2
 10959  1231  0843               	movf	___fldiv@b+1,w
 10960  1232  00CC               	movwf	___fldiv@rem+1
 10961  1233  0842               	movf	___fldiv@b,w
 10962  1234  00CB               	movwf	___fldiv@rem
 10963  1235                     l3718:
 10964  1235  3000               	movlw	0
 10965  1236  00C5               	movwf	___fldiv@b+3
 10966  1237  3000               	movlw	0
 10967  1238  00C4               	movwf	___fldiv@b+2
 10968  1239  3000               	movlw	0
 10969  123A  00C3               	movwf	___fldiv@b+1
 10970  123B  3000               	movlw	0
 10971  123C  00C2               	movwf	___fldiv@b
 10972  123D                     l3720:
 10973  123D  3000               	movlw	0
 10974  123E  00D5               	movwf	___fldiv@grs+3
 10975  123F  3000               	movlw	0
 10976  1240  00D4               	movwf	___fldiv@grs+2
 10977  1241  3000               	movlw	0
 10978  1242  00D3               	movwf	___fldiv@grs+1
 10979  1243  3000               	movlw	0
 10980  1244  00D2               	movwf	___fldiv@grs
 10981  1245                     l3722:
 10982  1245  01D7               	clrf	___fldiv@aexp
 10983  1246  2A91               	goto	l3742
 10984  1247                     l3724:
 10985  1247  0857               	movf	___fldiv@aexp,w
 10986  1248  1903               	btfsc	3,2
 10987  1249  2A4B               	goto	u6001
 10988  124A  2A4C               	goto	u6000
 10989  124B                     u6001:
 10990  124B  2A6C               	goto	l3734
 10991  124C                     u6000:
 10992  124C                     l3726:
 10993  124C  3001               	movlw	1
 10994  124D  00C6               	movwf	??___fldiv
 10995  124E                     u6015:
 10996  124E  1003               	clrc
 10997  124F  0DCB               	rlf	___fldiv@rem,f
 10998  1250  0DCC               	rlf	___fldiv@rem+1,f
 10999  1251  0DCD               	rlf	___fldiv@rem+2,f
 11000  1252  0DCE               	rlf	___fldiv@rem+3,f
 11001  1253  0BC6               	decfsz	??___fldiv,f
 11002  1254  2A4E               	goto	u6015
 11003  1255  3001               	movlw	1
 11004  1256  00C6               	movwf	??___fldiv
 11005  1257                     u6025:
 11006  1257  1003               	clrc
 11007  1258  0DC2               	rlf	___fldiv@b,f
 11008  1259  0DC3               	rlf	___fldiv@b+1,f
 11009  125A  0DC4               	rlf	___fldiv@b+2,f
 11010  125B  0DC5               	rlf	___fldiv@b+3,f
 11011  125C  0BC6               	decfsz	??___fldiv,f
 11012  125D  2A57               	goto	u6025
 11013  125E                     l3728:
 11014  125E  1FD5               	btfss	___fldiv@grs+3,7
 11015  125F  2A61               	goto	u6031
 11016  1260  2A62               	goto	u6030
 11017  1261                     u6031:
 11018  1261  2A63               	goto	l3732
 11019  1262                     u6030:
 11020  1262                     l3730:
 11021  1262  1442               	bsf	___fldiv@b,0
 11022  1263                     l3732:
 11023  1263  3001               	movlw	1
 11024  1264  00C6               	movwf	??___fldiv
 11025  1265                     u6045:
 11026  1265  1003               	clrc
 11027  1266  0DD2               	rlf	___fldiv@grs,f
 11028  1267  0DD3               	rlf	___fldiv@grs+1,f
 11029  1268  0DD4               	rlf	___fldiv@grs+2,f
 11030  1269  0DD5               	rlf	___fldiv@grs+3,f
 11031  126A  0BC6               	decfsz	??___fldiv,f
 11032  126B  2A65               	goto	u6045
 11033  126C                     l3734:
 11034  126C  0841               	movf	___fldiv@a+3,w
 11035  126D  024E               	subwf	___fldiv@rem+3,w
 11036  126E  1D03               	skipz
 11037  126F  2A7A               	goto	u6055
 11038  1270  0840               	movf	___fldiv@a+2,w
 11039  1271  024D               	subwf	___fldiv@rem+2,w
 11040  1272  1D03               	skipz
 11041  1273  2A7A               	goto	u6055
 11042  1274  083F               	movf	___fldiv@a+1,w
 11043  1275  024C               	subwf	___fldiv@rem+1,w
 11044  1276  1D03               	skipz
 11045  1277  2A7A               	goto	u6055
 11046  1278  083E               	movf	___fldiv@a,w
 11047  1279  024B               	subwf	___fldiv@rem,w
 11048  127A                     u6055:
 11049  127A  1C03               	skipc
 11050  127B  2A7D               	goto	u6051
 11051  127C  2A7E               	goto	u6050
 11052  127D                     u6051:
 11053  127D  2A8D               	goto	l3740
 11054  127E                     u6050:
 11055  127E                     l3736:
 11056  127E  1755               	bsf	___fldiv@grs+3,6
 11057  127F                     l3738:
 11058  127F  083E               	movf	___fldiv@a,w
 11059  1280  02CB               	subwf	___fldiv@rem,f
 11060  1281  083F               	movf	___fldiv@a+1,w
 11061  1282  1C03               	skipc
 11062  1283  0F3F               	incfsz	___fldiv@a+1,w
 11063  1284  02CC               	subwf	___fldiv@rem+1,f
 11064  1285  0840               	movf	___fldiv@a+2,w
 11065  1286  1C03               	skipc
 11066  1287  0F40               	incfsz	___fldiv@a+2,w
 11067  1288  02CD               	subwf	___fldiv@rem+2,f
 11068  1289  0841               	movf	___fldiv@a+3,w
 11069  128A  1C03               	skipc
 11070  128B  0F41               	incfsz	___fldiv@a+3,w
 11071  128C  02CE               	subwf	___fldiv@rem+3,f
 11072  128D                     l3740:
 11073  128D  3001               	movlw	1
 11074  128E  00C6               	movwf	??___fldiv
 11075  128F  0846               	movf	??___fldiv,w
 11076  1290  07D7               	addwf	___fldiv@aexp,f
 11077  1291                     l3742:
 11078  1291  301A               	movlw	26
 11079  1292  0257               	subwf	___fldiv@aexp,w
 11080  1293  1C03               	skipc
 11081  1294  2A96               	goto	u6061
 11082  1295  2A97               	goto	u6060
 11083  1296                     u6061:
 11084  1296  2A47               	goto	l3724
 11085  1297                     u6060:
 11086  1297                     l3744:
 11087  1297  084E               	movf	___fldiv@rem+3,w
 11088  1298  044D               	iorwf	___fldiv@rem+2,w
 11089  1299  044C               	iorwf	___fldiv@rem+1,w
 11090  129A  044B               	iorwf	___fldiv@rem,w
 11091  129B  1903               	skipnz
 11092  129C  2A9E               	goto	u6071
 11093  129D  2A9F               	goto	u6070
 11094  129E                     u6071:
 11095  129E  2ABE               	goto	l3758
 11096  129F                     u6070:
 11097  129F                     l3746:
 11098  129F  1452               	bsf	___fldiv@grs,0
 11099  12A0  2ABE               	goto	l3758
 11100  12A1                     l3748:
 11101  12A1  3001               	movlw	1
 11102  12A2  00C6               	movwf	??___fldiv
 11103  12A3                     u6085:
 11104  12A3  1003               	clrc
 11105  12A4  0DC2               	rlf	___fldiv@b,f
 11106  12A5  0DC3               	rlf	___fldiv@b+1,f
 11107  12A6  0DC4               	rlf	___fldiv@b+2,f
 11108  12A7  0DC5               	rlf	___fldiv@b+3,f
 11109  12A8  0BC6               	decfsz	??___fldiv,f
 11110  12A9  2AA3               	goto	u6085
 11111  12AA                     l3750:
 11112  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11113  12AB  2AAD               	goto	u6091
 11114  12AC  2AAE               	goto	u6090
 11115  12AD                     u6091:
 11116  12AD  2AAF               	goto	l3754
 11117  12AE                     u6090:
 11118  12AE                     l3752:
 11119  12AE  1442               	bsf	___fldiv@b,0
 11120  12AF                     l3754:
 11121  12AF  3001               	movlw	1
 11122  12B0  00C6               	movwf	??___fldiv
 11123  12B1                     u6105:
 11124  12B1  1003               	clrc
 11125  12B2  0DD2               	rlf	___fldiv@grs,f
 11126  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11127  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11128  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11129  12B6  0BC6               	decfsz	??___fldiv,f
 11130  12B7  2AB1               	goto	u6105
 11131  12B8                     l3756:
 11132  12B8  30FF               	movlw	255
 11133  12B9  07D0               	addwf	___fldiv@new_exp,f
 11134  12BA  1803               	skipnc
 11135  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11136  12BC  30FF               	movlw	255
 11137  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11138  12BE                     l3758:
 11139  12BE  1FC4               	btfss	___fldiv@b+2,7
 11140  12BF  2AC1               	goto	u6111
 11141  12C0  2AC2               	goto	u6110
 11142  12C1                     u6111:
 11143  12C1  2AA1               	goto	l3748
 11144  12C2                     u6110:
 11145  12C2                     l3760:
 11146  12C2  01D7               	clrf	___fldiv@aexp
 11147  12C3                     l3762:
 11148  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11149  12C4  2AC6               	goto	u6121
 11150  12C5  2AC7               	goto	u6120
 11151  12C6                     u6121:
 11152  12C6  2AE3               	goto	l3770
 11153  12C7                     u6120:
 11154  12C7                     l3764:
 11155  12C7  30FF               	movlw	255
 11156  12C8  0552               	andwf	___fldiv@grs,w
 11157  12C9  00C6               	movwf	??___fldiv
 11158  12CA  30FF               	movlw	255
 11159  12CB  0553               	andwf	___fldiv@grs+1,w
 11160  12CC  00C7               	movwf	??___fldiv+1
 11161  12CD  30FF               	movlw	255
 11162  12CE  0554               	andwf	___fldiv@grs+2,w
 11163  12CF  00C8               	movwf	??___fldiv+2
 11164  12D0  307F               	movlw	127
 11165  12D1  0555               	andwf	___fldiv@grs+3,w
 11166  12D2  00C9               	movwf	??___fldiv+3
 11167  12D3  0849               	movf	??___fldiv+3,w
 11168  12D4  0448               	iorwf	??___fldiv+2,w
 11169  12D5  0447               	iorwf	??___fldiv+1,w
 11170  12D6  0446               	iorwf	??___fldiv,w
 11171  12D7  1903               	skipnz
 11172  12D8  2ADA               	goto	u6131
 11173  12D9  2ADB               	goto	u6130
 11174  12DA                     u6131:
 11175  12DA  2ADE               	goto	l782
 11176  12DB                     u6130:
 11177  12DB                     l3766:
 11178  12DB  01D7               	clrf	___fldiv@aexp
 11179  12DC  0AD7               	incf	___fldiv@aexp,f
 11180  12DD  2AE3               	goto	l3770
 11181  12DE                     l782:
 11182  12DE  1C42               	btfss	___fldiv@b,0
 11183  12DF  2AE1               	goto	u6141
 11184  12E0  2AE2               	goto	u6140
 11185  12E1                     u6141:
 11186  12E1  2AE3               	goto	l3770
 11187  12E2                     u6140:
 11188  12E2  2ADB               	goto	l3766
 11189  12E3                     l3770:
 11190  12E3  0857               	movf	___fldiv@aexp,w
 11191  12E4  1903               	btfsc	3,2
 11192  12E5  2AE7               	goto	u6151
 11193  12E6  2AE8               	goto	u6150
 11194  12E7                     u6151:
 11195  12E7  2B19               	goto	l3780
 11196  12E8                     u6150:
 11197  12E8                     l3772:
 11198  12E8  3001               	movlw	1
 11199  12E9  07C2               	addwf	___fldiv@b,f
 11200  12EA  3000               	movlw	0
 11201  12EB  1803               	skipnc
 11202  12EC  3001               	movlw	1
 11203  12ED  07C3               	addwf	___fldiv@b+1,f
 11204  12EE  3000               	movlw	0
 11205  12EF  1803               	skipnc
 11206  12F0  3001               	movlw	1
 11207  12F1  07C4               	addwf	___fldiv@b+2,f
 11208  12F2  3000               	movlw	0
 11209  12F3  1803               	skipnc
 11210  12F4  3001               	movlw	1
 11211  12F5  07C5               	addwf	___fldiv@b+3,f
 11212  12F6                     l3774:
 11213  12F6  1C45               	btfss	___fldiv@b+3,0
 11214  12F7  2AF9               	goto	u6161
 11215  12F8  2AFA               	goto	u6160
 11216  12F9                     u6161:
 11217  12F9  2B19               	goto	l3780
 11218  12FA                     u6160:
 11219  12FA                     l3776:
 11220  12FA  0842               	movf	___fldiv@b,w
 11221  12FB  00C6               	movwf	??___fldiv
 11222  12FC  0843               	movf	___fldiv@b+1,w
 11223  12FD  00C7               	movwf	??___fldiv+1
 11224  12FE  0844               	movf	___fldiv@b+2,w
 11225  12FF  00C8               	movwf	??___fldiv+2
 11226  1300  0845               	movf	___fldiv@b+3,w
 11227  1301  00C9               	movwf	??___fldiv+3
 11228  1302  3001               	movlw	1
 11229  1303  00CA               	movwf	??___fldiv+4
 11230  1304                     u6175:
 11231  1304  0D49               	rlf	??___fldiv+3,w
 11232  1305  0CC9               	rrf	??___fldiv+3,f
 11233  1306  0CC8               	rrf	??___fldiv+2,f
 11234  1307  0CC7               	rrf	??___fldiv+1,f
 11235  1308  0CC6               	rrf	??___fldiv,f
 11236  1309                     u6170:
 11237  1309  0BCA               	decfsz	??___fldiv+4,f
 11238  130A  2B04               	goto	u6175
 11239  130B  0849               	movf	??___fldiv+3,w
 11240  130C  00C5               	movwf	___fldiv@b+3
 11241  130D  0848               	movf	??___fldiv+2,w
 11242  130E  00C4               	movwf	___fldiv@b+2
 11243  130F  0847               	movf	??___fldiv+1,w
 11244  1310  00C3               	movwf	___fldiv@b+1
 11245  1311  0846               	movf	??___fldiv,w
 11246  1312  00C2               	movwf	___fldiv@b
 11247  1313                     l3778:
 11248  1313  3001               	movlw	1
 11249  1314  07D0               	addwf	___fldiv@new_exp,f
 11250  1315  1803               	skipnc
 11251  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11252  1317  3000               	movlw	0
 11253  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11254  1319                     l3780:
 11255  1319  0851               	movf	___fldiv@new_exp+1,w
 11256  131A  3A80               	xorlw	128
 11257  131B  00FF               	movwf	btemp+1
 11258  131C  3080               	movlw	128
 11259  131D  027F               	subwf	btemp+1,w
 11260  131E  1D03               	skipz
 11261  131F  2B22               	goto	u6185
 11262  1320  30FF               	movlw	255
 11263  1321  0250               	subwf	___fldiv@new_exp,w
 11264  1322                     u6185:
 11265  1322  1C03               	skipc
 11266  1323  2B25               	goto	u6181
 11267  1324  2B26               	goto	u6180
 11268  1325                     u6181:
 11269  1325  2B34               	goto	l3784
 11270  1326                     u6180:
 11271  1326                     l3782:
 11272  1326  30FF               	movlw	255
 11273  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11274  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11275  1329  00D0               	movwf	___fldiv@new_exp
 11276  132A  3000               	movlw	0
 11277  132B  00D1               	movwf	___fldiv@new_exp+1
 11278  132C  3000               	movlw	0
 11279  132D  00C5               	movwf	___fldiv@b+3
 11280  132E  3000               	movlw	0
 11281  132F  00C4               	movwf	___fldiv@b+2
 11282  1330  3000               	movlw	0
 11283  1331  00C3               	movwf	___fldiv@b+1
 11284  1332  3000               	movlw	0
 11285  1333  00C2               	movwf	___fldiv@b
 11286  1334                     l3784:
 11287  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11288  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11289  1336  0851               	movf	___fldiv@new_exp+1,w
 11290  1337  3A80               	xorlw	128
 11291  1338  00FF               	movwf	btemp+1
 11292  1339  3080               	movlw	128
 11293  133A  027F               	subwf	btemp+1,w
 11294  133B  1D03               	skipz
 11295  133C  2B3F               	goto	u6195
 11296  133D  3001               	movlw	1
 11297  133E  0250               	subwf	___fldiv@new_exp,w
 11298  133F                     u6195:
 11299  133F  1803               	skipnc
 11300  1340  2B42               	goto	u6191
 11301  1341  2B43               	goto	u6190
 11302  1342                     u6191:
 11303  1342  2B50               	goto	l788
 11304  1343                     u6190:
 11305  1343                     l3786:
 11306  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11307  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11308  1345  01D0               	clrf	___fldiv@new_exp
 11309  1346  01D1               	clrf	___fldiv@new_exp+1
 11310  1347                     l3788:
 11311  1347  3000               	movlw	0
 11312  1348  00C5               	movwf	___fldiv@b+3
 11313  1349  3000               	movlw	0
 11314  134A  00C4               	movwf	___fldiv@b+2
 11315  134B  3000               	movlw	0
 11316  134C  00C3               	movwf	___fldiv@b+1
 11317  134D  3000               	movlw	0
 11318  134E  00C2               	movwf	___fldiv@b
 11319  134F                     l3790:
 11320  134F  01CF               	clrf	___fldiv@sign
 11321  1350                     l788:
 11322  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11323  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11324  1352  0850               	movf	___fldiv@new_exp,w
 11325  1353  00C6               	movwf	??___fldiv
 11326  1354  0846               	movf	??___fldiv,w
 11327  1355  00D6               	movwf	___fldiv@bexp
 11328  1356                     l3792:
 11329  1356  1C56               	btfss	___fldiv@bexp,0
 11330  1357  2B59               	goto	u6201
 11331  1358  2B5A               	goto	u6200
 11332  1359                     u6201:
 11333  1359  2B5C               	goto	l3796
 11334  135A                     u6200:
 11335  135A                     l3794:
 11336  135A  17C4               	bsf	___fldiv@b+2,7
 11337  135B  2B60               	goto	l790
 11338  135C                     l3796:
 11339  135C  307F               	movlw	127
 11340  135D  00C6               	movwf	??___fldiv
 11341  135E  0846               	movf	??___fldiv,w
 11342  135F  05C4               	andwf	___fldiv@b+2,f
 11343  1360                     l790:
 11344  1360  0856               	movf	___fldiv@bexp,w
 11345  1361  00C6               	movwf	??___fldiv
 11346  1362  1003               	clrc
 11347  1363  0C46               	rrf	??___fldiv,w
 11348  1364  00C7               	movwf	??___fldiv+1
 11349  1365  0847               	movf	??___fldiv+1,w
 11350  1366  00C5               	movwf	___fldiv@b+3
 11351  1367  084F               	movf	___fldiv@sign,w
 11352  1368  00C6               	movwf	??___fldiv
 11353  1369  0846               	movf	??___fldiv,w
 11354  136A  04C5               	iorwf	___fldiv@b+3,f
 11355  136B  2A04               	goto	l3704
 11356  136C                     l768:
 11357  136C  0008               	return
 11358  136D                     __end_of___fldiv:
 11359                           
 11360                           	psect	text32
 11361  189F                     __ptext32:	
 11362 ;; *************** function _I2C_Master_Write *****************
 11363 ;; Defined at:
 11364 ;;		line 65 in file "I2C.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;  d               2    0[COMMON] unsigned int 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;		None
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  1    wreg      void 
 11371 ;; Registers used:
 11372 ;;		wreg, status,2, status,0, pclath, cstack
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11378 ;;      Params:         2       0       0       0       0
 11379 ;;      Locals:         0       0       0       0       0
 11380 ;;      Temps:          0       0       0       0       0
 11381 ;;      Totals:         2       0       0       0       0
 11382 ;;Total ram usage:        2 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; Hardware stack levels required when called:    1
 11385 ;; This function calls:
 11386 ;;		_I2C_Master_Wait
 11387 ;; This function is called by:
 11388 ;;		_main
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           
 11393                           ;psect for function _I2C_Master_Write
 11394  189F                     _I2C_Master_Write:
 11395  189F                     l3398:	
 11396                           ;incstack = 0
 11397                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11398                           
 11399                           
 11400                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
 11401  189F  160A  158A  20B4  160A  158A  	fcall	_I2C_Master_Wait
 11402  18A4                     l3400:
 11403                           
 11404                           ;I2C.c: 68:     SSPBUF = d;
 11405  18A4  0870               	movf	I2C_Master_Write@d,w
 11406  18A5  1283               	bcf	3,5	;RP0=0, select bank0
 11407  18A6  1303               	bcf	3,6	;RP1=0, select bank0
 11408  18A7  0093               	movwf	19	;volatile
 11409  18A8                     l114:
 11410  18A8  0008               	return
 11411  18A9                     __end_of_I2C_Master_Write:
 11412                           
 11413                           	psect	text33
 11414  1896                     __ptext33:	
 11415 ;; *************** function _I2C_Master_Stop *****************
 11416 ;; Defined at:
 11417 ;;		line 55 in file "I2C.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;		None
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;		None
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  1    wreg      void 
 11424 ;; Registers used:
 11425 ;;		wreg, status,2, status,0, pclath, cstack
 11426 ;; Tracked objects:
 11427 ;;		On entry : 0/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11431 ;;      Params:         0       0       0       0       0
 11432 ;;      Locals:         0       0       0       0       0
 11433 ;;      Temps:          0       0       0       0       0
 11434 ;;      Totals:         0       0       0       0       0
 11435 ;;Total ram usage:        0 bytes
 11436 ;; Hardware stack levels used:    1
 11437 ;; Hardware stack levels required when called:    1
 11438 ;; This function calls:
 11439 ;;		_I2C_Master_Wait
 11440 ;; This function is called by:
 11441 ;;		_main
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           
 11446                           ;psect for function _I2C_Master_Stop
 11447  1896                     _I2C_Master_Stop:
 11448  1896                     l3402:	
 11449                           ;incstack = 0
 11450                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11451                           
 11452                           
 11453                           ;I2C.c: 57:     I2C_Master_Wait();
 11454  1896  160A  158A  20B4  160A  158A  	fcall	_I2C_Master_Wait
 11455  189B                     l3404:
 11456                           
 11457                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 11458  189B  1683               	bsf	3,5	;RP0=1, select bank1
 11459  189C  1303               	bcf	3,6	;RP1=0, select bank1
 11460  189D  1511               	bsf	17,2	;volatile
 11461  189E                     l111:
 11462  189E  0008               	return
 11463  189F                     __end_of_I2C_Master_Stop:
 11464                           
 11465                           	psect	text34
 11466  188D                     __ptext34:	
 11467 ;; *************** function _I2C_Master_Start *****************
 11468 ;; Defined at:
 11469 ;;		line 39 in file "I2C.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;		None
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;		None
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  1    wreg      void 
 11476 ;; Registers used:
 11477 ;;		wreg, status,2, status,0, pclath, cstack
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11483 ;;      Params:         0       0       0       0       0
 11484 ;;      Locals:         0       0       0       0       0
 11485 ;;      Temps:          0       0       0       0       0
 11486 ;;      Totals:         0       0       0       0       0
 11487 ;;Total ram usage:        0 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    1
 11490 ;; This function calls:
 11491 ;;		_I2C_Master_Wait
 11492 ;; This function is called by:
 11493 ;;		_main
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           
 11498                           ;psect for function _I2C_Master_Start
 11499  188D                     _I2C_Master_Start:
 11500  188D                     l3394:	
 11501                           ;incstack = 0
 11502                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11503                           
 11504                           
 11505                           ;I2C.c: 41:     I2C_Master_Wait();
 11506  188D  160A  158A  20B4  160A  158A  	fcall	_I2C_Master_Wait
 11507  1892                     l3396:
 11508                           
 11509                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 11510  1892  1683               	bsf	3,5	;RP0=1, select bank1
 11511  1893  1303               	bcf	3,6	;RP1=0, select bank1
 11512  1894  1411               	bsf	17,0	;volatile
 11513  1895                     l105:
 11514  1895  0008               	return
 11515  1896                     __end_of_I2C_Master_Start:
 11516                           
 11517                           	psect	text35
 11518  1961                     __ptext35:	
 11519 ;; *************** function _I2C_Master_Read *****************
 11520 ;; Defined at:
 11521 ;;		line 74 in file "I2C.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;  a               2    0[COMMON] unsigned short 
 11524 ;; Auto vars:     Size  Location     Type
 11525 ;;  temp            2    4[COMMON] unsigned short 
 11526 ;; Return value:  Size  Location     Type
 11527 ;;                  2    0[COMMON] unsigned short 
 11528 ;; Registers used:
 11529 ;;		wreg, status,2, status,0, pclath, cstack
 11530 ;; Tracked objects:
 11531 ;;		On entry : 0/0
 11532 ;;		On exit  : 0/0
 11533 ;;		Unchanged: 0/0
 11534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11535 ;;      Params:         2       0       0       0       0
 11536 ;;      Locals:         2       0       0       0       0
 11537 ;;      Temps:          2       0       0       0       0
 11538 ;;      Totals:         6       0       0       0       0
 11539 ;;Total ram usage:        6 bytes
 11540 ;; Hardware stack levels used:    1
 11541 ;; Hardware stack levels required when called:    1
 11542 ;; This function calls:
 11543 ;;		_I2C_Master_Wait
 11544 ;; This function is called by:
 11545 ;;		_main
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           
 11550                           ;psect for function _I2C_Master_Read
 11551  1961                     _I2C_Master_Read:
 11552  1961                     l3406:	
 11553                           ;incstack = 0
 11554                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11555                           
 11556                           
 11557                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 11558  1961  160A  158A  20B4  160A  158A  	fcall	_I2C_Master_Wait
 11559  1966                     l3408:
 11560                           
 11561                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 11562  1966  1683               	bsf	3,5	;RP0=1, select bank1
 11563  1967  1303               	bcf	3,6	;RP1=0, select bank1
 11564  1968  1591               	bsf	17,3	;volatile
 11565                           
 11566                           ;I2C.c: 79:     I2C_Master_Wait();
 11567  1969  160A  158A  20B4  160A  158A  	fcall	_I2C_Master_Wait
 11568  196E                     l3410:
 11569                           
 11570                           ;I2C.c: 80:     temp = SSPBUF;
 11571  196E  1283               	bcf	3,5	;RP0=0, select bank0
 11572  196F  1303               	bcf	3,6	;RP1=0, select bank0
 11573  1970  0813               	movf	19,w	;volatile
 11574  1971  00F2               	movwf	??_I2C_Master_Read
 11575  1972  01F3               	clrf	??_I2C_Master_Read+1
 11576  1973  0872               	movf	??_I2C_Master_Read,w
 11577  1974  00F4               	movwf	I2C_Master_Read@temp
 11578  1975  0873               	movf	??_I2C_Master_Read+1,w
 11579  1976  00F5               	movwf	I2C_Master_Read@temp+1
 11580  1977                     l3412:
 11581                           
 11582                           ;I2C.c: 81:     I2C_Master_Wait();
 11583  1977  160A  158A  20B4  160A  158A  	fcall	_I2C_Master_Wait
 11584  197C                     l3414:
 11585                           
 11586                           ;I2C.c: 82:     if(a == 1){
 11587  197C  0370               	decf	I2C_Master_Read@a,w
 11588  197D  0471               	iorwf	I2C_Master_Read@a+1,w
 11589  197E  1D03               	btfss	3,2
 11590  197F  2981               	goto	u5501
 11591  1980  2982               	goto	u5500
 11592  1981                     u5501:
 11593  1981  2986               	goto	l117
 11594  1982                     u5500:
 11595  1982                     l3416:
 11596                           
 11597                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 11598  1982  1683               	bsf	3,5	;RP0=1, select bank1
 11599  1983  1303               	bcf	3,6	;RP1=0, select bank1
 11600  1984  1291               	bcf	17,5	;volatile
 11601                           
 11602                           ;I2C.c: 84:     }else{
 11603  1985  2989               	goto	l118
 11604  1986                     l117:
 11605                           
 11606                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 11607  1986  1683               	bsf	3,5	;RP0=1, select bank1
 11608  1987  1303               	bcf	3,6	;RP1=0, select bank1
 11609  1988  1691               	bsf	17,5	;volatile
 11610  1989                     l118:	
 11611                           ;I2C.c: 86:     }
 11612                           
 11613                           
 11614                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 11615  1989  1611               	bsf	17,4	;volatile
 11616  198A                     l3418:
 11617                           
 11618                           ;I2C.c: 88:     return temp;
 11619  198A  0875               	movf	I2C_Master_Read@temp+1,w
 11620  198B  00F1               	movwf	?_I2C_Master_Read+1
 11621  198C  0874               	movf	I2C_Master_Read@temp,w
 11622  198D  00F0               	movwf	?_I2C_Master_Read
 11623  198E                     l119:
 11624  198E  0008               	return
 11625  198F                     __end_of_I2C_Master_Read:
 11626                           
 11627                           	psect	text36
 11628  18B4                     __ptext36:	
 11629 ;; *************** function _I2C_Master_Wait *****************
 11630 ;; Defined at:
 11631 ;;		line 32 in file "I2C.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;		None
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;		None
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  1    wreg      void 
 11638 ;; Registers used:
 11639 ;;		wreg, status,2
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11645 ;;      Params:         0       0       0       0       0
 11646 ;;      Locals:         0       0       0       0       0
 11647 ;;      Temps:          0       0       0       0       0
 11648 ;;      Totals:         0       0       0       0       0
 11649 ;;Total ram usage:        0 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_I2C_Master_Start
 11655 ;;		_I2C_Master_Stop
 11656 ;;		_I2C_Master_Write
 11657 ;;		_I2C_Master_Read
 11658 ;;		_I2C_Master_RepeatedStart
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662                           
 11663                           ;psect for function _I2C_Master_Wait
 11664  18B4                     _I2C_Master_Wait:
 11665  18B4                     l3026:	
 11666                           ;incstack = 0
 11667                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11668                           
 11669  18B4                     l99:	
 11670                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11671                           
 11672  18B4  1683               	bsf	3,5	;RP0=1, select bank1
 11673  18B5  1303               	bcf	3,6	;RP1=0, select bank1
 11674  18B6  1914               	btfsc	20,2	;volatile
 11675  18B7  28B9               	goto	u4501
 11676  18B8  28BA               	goto	u4500
 11677  18B9                     u4501:
 11678  18B9  28B4               	goto	l99
 11679  18BA                     u4500:
 11680  18BA                     l3028:
 11681  18BA  0811               	movf	17,w	;volatile
 11682  18BB  391F               	andlw	31
 11683  18BC  1D03               	btfss	3,2
 11684  18BD  28BF               	goto	u4511
 11685  18BE  28C0               	goto	u4510
 11686  18BF                     u4511:
 11687  18BF  28B4               	goto	l99
 11688  18C0                     u4510:
 11689  18C0                     l102:
 11690  18C0  0008               	return
 11691  18C1                     __end_of_I2C_Master_Wait:
 11692  007E                     btemp	set	126	;btemp
 11693  007E                     wtemp0	set	126
 11694                           
 11695                           	psect	config
 11696                           
 11697                           ;Config register CONFIG1 @ 0x2007
 11698                           ;	Oscillator Selection bits
 11699                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11700                           ;	Watchdog Timer Enable bit
 11701                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11702                           ;	Power-up Timer Enable bit
 11703                           ;	PWRTE = OFF, PWRT disabled
 11704                           ;	RE3/MCLR pin function select bit
 11705                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11706                           ;	Code Protection bit
 11707                           ;	CP = OFF, Program memory code protection is disabled
 11708                           ;	Data Code Protection bit
 11709                           ;	CPD = OFF, Data memory code protection is disabled
 11710                           ;	Brown Out Reset Selection bits
 11711                           ;	BOREN = OFF, BOR disabled
 11712                           ;	Internal External Switchover bit
 11713                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11714                           ;	Fail-Safe Clock Monitor Enabled bit
 11715                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11716                           ;	Low Voltage Programming Enable bit
 11717                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11718                           ;	In-Circuit Debugger Mode bit
 11719                           ;	DEBUG = 0x1, unprogrammed default
 11720  2007                     	org	8199
 11721  2007  20D4               	dw	8404
 11722                           
 11723                           ;Config register CONFIG2 @ 0x2008
 11724                           ;	Brown-out Reset Selection bit
 11725                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11726                           ;	Flash Program Memory Self Write Enable bits
 11727                           ;	WRT = OFF, Write protection off
 11728  2008                     	org	8200
 11729  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    144
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      77
    BANK1            80     52      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), volt(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->___fladd
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _setup->_I2C_Master_Init
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   44711
                                             47 BANK1      5     5      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   31986
                                              8 BANK1     39    30      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             56 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2166
                    _I2C_Master_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     554
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     34      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Aug 12 12:25:03 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          _a 006C  
                        _t 00D4                          pc 0002               ___fldiv@sign 004F  
                       l67 1A00                         l96 19C6                         l99 18B4  
             ___awdiv@sign 0021                         _s1 00DD                         _s2 00DC  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l102 18C0                        l111 189E                        l105 1895  
                      l114 18A8                        l117 1986                        l118 1989  
                      l150 1A47                        l119 198E                        l151 1A4D  
                      l160 1A6A                        l152 1A4E                        l304 0C9E  
                      l161 1A70                        l153 1A54                        l162 1A71  
                      l154 1A55                        l163 1A77                        l155 1A5B  
                      l323 00DE                        l156 1A5C                        l180 1BED  
                      l165 1A78                        l157 1A62                        l149 1A44  
                      l158 1A63                        l159 1A69                        l183 18D6  
                      l351 04DA                        l168 18F0                        l600 10D1  
                      l177 1914                        l601 1043                        l419 1D02  
                      l611 10C4                        l604 1094                        l189 1ABA  
                      l710 15DB                        l358 051E                        l383 1921  
                      l536 006C                        l385 1939                        l553 118F  
                      l297 1577                        l570 1B37                        l714 1682  
                      l554 10F4                        l571 1B4C                        l731 174D  
                      l723 17FF                        l379 07EF                        l716 1659  
                      l564 1182                        l812 0F6B                        l741 1793  
                      l557 1152                        l549 1C9C                        l574 1D1F  
                      l582 18B3                        l806 0FFF                        l735 1771  
                      l639 1C43                        l752 17F3                        l744 17D1  
                      l569 1B1B                        l577 1D8B                        l753 17FF  
                      l593 092A                        l825 194E                        l578 1DA4  
                      l586 093F                        l850 1DC7                        l818 0FF3  
                      l827 1960                        l756 1B9C                        l596 093F  
                      l852 1E5E                        l790 1360                        l782 12DE  
                      l766 11EC                        l870 1014                        l863 1E28  
                      l768 136C                        l864 1E34                        l856 1E0C  
                      l689 1AFE                        l699 1A3A                        l788 1350  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037                _sprintf$960 00B6               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3000 1A98                       l3010 1BBB                       l3002 1A9E  
                     l3020 19C3                       l3012 1BC1                       l3004 1B9D  
                     l3100 1015                       l3022 19C4                       l3014 198F  
                     l3006 1BA3                       l3102 1028                       l3030 1370  
                     l3024 19C5                       l3016 1993                       l3008 1BAC  
                     l3200 1187                       l3120 1064                       l3112 1044  
                     l3040 1489                       l3032 1376                       l3026 18B4  
                     l3018 1996                       l3210 1928                       l3130 108E  
                     l3122 106D                       l3114 104A                       l3106 1031  
                     l3050 0947                       l3028 18BA                       l2500 1CB0  
                     l3220 1B13                       l3300 1C08                       l3212 192F  
                     l3204 1915                       l3132 1098                       l3140 10B2  
                     l3124 107B                       l3116 1059                       l3044 1534  
                     l3060 0A38                       l3052 0949                       l2510 1CEA  
                     l2502 1CBD                       l3222 1B2F                       l3230 1D03  
                     l3302 1C0C                       l3310 1C3B                       l3214 1935  
                     l3206 1917                       l3126 1085                       l3118 105B  
                     l3038 1483                       l3062 0A3F                       l3054 0950  
                     l3070 0AF4                       l3400 18A4                       l2512 1CEB  
                     l2504 1CC1                       l3224 1B49                       l3240 1D63  
                     l3232 1D17                       l3304 1C1E                       l3208 191B  
                     l3320 1DA6                       l3152 10D2                       l3128 1086  
                     l2520 0004                       l3080 0BEA                       l3072 0AFB  
                     l3048 0943                       l3410 196E                       l3402 1896  
                     l2514 1CF4                       l2506 1CCA                       l2450 1A52  
                     l3226 1B4B                       l3218 1AFF                       l3242 1D67  
                     l3234 1D33                       l3250 18A9                       l3314 1B4D  
                     l3306 1C2C                       l3322 1DAB                       l3170 1110  
                     l3154 10DF                       l3146 10B9                       l3138 10A0  
                     l2610 1ACD                       l2602 1ABB                       l3090 1005  
                     l2530 0016                       l2522 0007                       l3066 0AC7  
                     l3412 1977                       l3404 189B                       l2508 1CDC  
                     l2516 1CFA                       l2460 1A75                       l2452 1A59  
                     l2444 1A3C                       l3244 1DA1                       l3236 1D3B  
                     l3252 18B1                       l2700 15ED                       l3316 1B51  
                     l3260 08D1                       l3308 1C35                       l3340 1DF5  
                     l3332 1DD8                       l3324 1DAF                       l3180 1143  
                     l3172 1119                       l3164 10F5                       l3148 10C9  
                     l2620 1AED                       l2612 1AD1                       l2604 1ABD  
                     l3092 100B                       l2540 002A                       l2532 001B  
                     l2524 000B                       l3084 0C72                       l3500 026B  
                     l3414 197C                       l3406 1961                       l2454 1A60  
                     l2446 1A40                       l3246 1DA3                       l3238 1D3F  
                     l3254 18B3                       l2710 1601                       l2702 15F1  
                     l3270 08F8                       l3350 1E2C                       l3342 1E03  
                     l3334 1DDD                       l3326 1DBF                       l3190 115E  
                     l3182 114C                       l3174 1122                       l3166 10FD  
                     l3158 10E8                       l2470 1957                       l2462 193B  
                     l2622 1AF4                       l2614 1AD5                       l2606 1AC3  
                     l2630 1A07                       l3094 1011                       l2550 0050  
                     l2542 0031                       l2534 001F                       l2526 0010  
                     l3078 0BE3                       l3510 0312                       l3502 027A  
                     l3430 0087                       l3422 0070                       l3416 1982  
                     l3408 1966                       l2456 1A67                       l2448 1A4B  
                     l2480 18E1                       l2800 177A                       l2720 1615  
                     l2712 1605                       l2704 15F5                       l3280 0906  
                     l3272 08FA                       l3264 08DA                       l3360 1E56  
                     l3352 1E36                       l3344 1E13                       l3336 1DEA  
                     l3328 1DCF                       l3184 1156                       l3192 1170  
                     l3176 1134                       l3168 110E                       l2472 195C  
                     l2464 193D                       l2616 1AE6                       l2608 1AC6  
                     l2624 1AFA                       l2640 1A23                       l2632 1A0A  
                     l3096 1013                       l3088 1004                       l2560 0068  
                     l2552 0051                       l2544 0035                       l2536 0021  
                     l2528 0012                       l3600 06C2                       l3520 036B  
                     l3512 0321                       l3504 02C1                       l3440 009D  
                     l3432 0089                       l3424 0075                       l3418 198A  
                     l2458 1A6E                       l2482 18E4                       l2490 18CB  
                     l3370 19CF                       l2810 178A                       l2802 177F  
                     l2730 1626                       l2722 1619                       l2714 1609  
                     l2706 15F9                       l2650 1578                       l3290 092F  
                     l3274 08FE                       l3282 0918                       l3266 08EF  
                     l3258 08C4                       l3354 1E4C                       l3346 1E1E  
                     l3338 1DF1                       l3178 1142                       l2466 1944  
                     l2618 1AEC                       l2642 1A29                       l2634 1A11  
                     l2554 0058                       l2546 0039                       l2538 0027  
                     l2570 1C4E                       l3610 06DF                       l3602 06C6  
                     l3530 03F7                       l3514 033C                       l3506 02D0  
                     l3450 00DC                       l3442 00B2                       l3434 0095  
                     l3426 007B                       l3700 11F4                       l2484 18ED  
                     l2476 18D8                       l2492 18CE                       l3380 19D6  
                     l3372 19D0                       l3364 19C7                       l2820 17AB  
                     l2812 1790                       l2804 1781                       l2740 166C  
                     l2732 163D                       l2724 161D                       l2716 160D  
                     l2708 15FD                       l2660 158F                       l2652 157F  
                     l3292 0934                       l3268 08F0                       l3356 1E51  
                     l3348 1E22                       l2468 1948                       l2900 0DAA  
                     l2644 1A30                       l2636 1A15                       l2628 1A01  
                     l2548 004A                       l2556 005E                       l2580 1C62  
                     l2572 1C50                       l2564 1C44                       l3620 06EF  
                     l3612 06E7                       l3604 06CA                       l3532 03F9  
                     l3524 038A                       l3516 0345                       l3508 02EB  
                     l3460 0112                       l3444 00C5                       l3436 0096  
                     l3428 0082                       l3710 1212                       l3702 1200  
                     l2478 18DB                       l2494 18D3                       l2486 18C2  
                     l3390 19E8                       l3382 19D7                       l3374 19D3  
                     l3366 19CB                       l2830 17E3                       l2822 17AF  
                     l2806 1785                       l2750 168B                       l2742 166D  
                     l2734 165D                       l2726 1621                       l2718 1611  
                     l2670 15A7                       l2662 1594                       l2654 1585  
                     l3294 1BEE                       l3358 1E55                       l3198 1177  
                     l2910 0E0C                       l2902 0DC6                       l2638 1A19  
                     l2646 1A36                       l2558 0063                       l2590 1C81  
                     l2582 1C69                       l2574 1C54                       l2566 1C45  
                     l3630 073C                       l3614 06ED                       l3606 06CE  
                     l3550 0454                       l3542 0432                       l3518 034D  
                     l3526 0393                       l3470 015A                       l3462 0116  
                     l3454 00E0                       l3446 00C9                       l3438 009A  
                     l3720 123D                       l3704 1204                       l2496 1C9D  
                     l2488 18C5                       l3392 19F1                       l3384 19D8  
                     l3376 19D4                       l3368 19CC                       l2840 17FA  
                     l2832 17E8                       l2824 17CD                       l2816 1798  
                     l2808 1786                       l2760 16B3                       l2744 1676  
                     l2736 1666                       l2728 1625                       l2680 15BD  
                     l2672 15AC                       l2664 159C                       l2656 1589  
                     l3288 091F                       l3296 1BF8                       l2920 0E9C  
                     l2912 0E29                       l2904 0DCF                       l2592 1C88  
                     l2584 1C6D                       l2576 1C59                       l2568 1C49  
                     l3640 076E                       l3632 074B                       l3624 0726  
                     l3608 06D9                       l3560 04EF                       l3552 048F  
                     l3544 043C                       l3528 03C8                       l3480 018C  
                     l3472 015E                       l3464 0124                       l3456 0102  
                     l3448 00DA                       l3394 188D                       l3730 1262  
                     l3722 1245                       l3714 121B                       l2498 1CAD  
                     l3386 19DB                       l3378 19D5                       l2842 17FE  
                     l2834 17E9                       l2826 17D6                       l2818 179D  
                     l2770 16CC                       l2762 16BC                       l2754 1694  
                     l2738 1668                       l2746 167A                       l2690 15D1  
                     l2682 15BE                       l2674 15B2                       l2666 159D  
                     l2658 158A                       l3298 1BFB                       l2930 0F2E  
                     l2922 0EC9                       l2914 0E42                       l2906 0DDF  
                     l2850 0CB0                       l2586 1C71                       l2578 1C5F  
                     l2594 1C8E                       l3642 07C3                       l3634 0754  
                     l3626 0730                       l3570 0527                       l3562 04F5  
                     l3554 04CE                       l3546 0448                       l3538 03FB  
                     l3490 01DB                       l3482 019F                       l3474 0162  
                     l3466 0128                       l3458 010E                       l3650 07EB  
                     l3810 1E82                       l3802 1E5F                       l3396 1892  
                     l3740 128D                       l3732 1263                       l3724 1247  
                     l3716 122D                       l3708 120D                       l3660 1190  
                     l3388 19E0                       l2836 17ED                       l2828 17DB  
                     l2780 1730                       l2764 16BE                       l2756 16AB  
                     l2748 1686                       l2772 16D1                       l2684 15C3  
                     l2692 15D3                       l2676 15B3                       l2668 159F  
                     l2932 0F37                       l2940 0F4B                       l2924 0EEF  
                     l2916 0E5F                       l2908 0DFC                       l2860 0CC5  
                     l2852 0CB1                       l2844 0C9F                       l2596 1C93  
                     l2588 1C7B                       l3636 0762                       l3628 073B  
                     l3580 05B0                       l3572 052C                       l3564 0502  
                     l3556 04E2                       l3548 044F                       l3492 0226  
                     l3484 01B2                       l3476 017B                       l3468 0141  
                     l3820 1EAD                       l3812 1E87                       l3804 1E64  
                     l3398 189F                       l3750 12AA                       l3726 124C  
                     l3734 126C                       l3742 1291                       l3718 1235  
                     l3670 11A7                       l3662 1197                       l2838 17EF  
                     l2790 1763                       l2774 16E7                       l2782 173F  
                     l2766 16C2                       l2758 16AF                       l2694 15E1  
                     l2686 15C8                       l2678 15B9                       l2942 0F4F  
                     l2934 0F3B                       l2926 0F17                       l2918 0E8C  
                     l2870 0CDD                       l2862 0CCD                       l2854 0CB6  
                     l2846 0CA6                       l2598 1C98                       l3638 0769  
                     l3646 07CB                       l3590 0699                       l3582 05EB  
                     l3574 0533                       l3566 0511                       l3558 04EB  
                     l3494 023F                       l3486 01B6                       l3478 0186  
                     l3910 00F4                       l3830 1ED8                       l3822 1EB2  
                     l3814 1E91                       l3806 1E69                       l3760 12C2  
                     l3752 12AE                       l3744 1297                       l3736 127E  
                     l3728 125E                       l3680 11BF                       l3672 11AC  
                     l3664 119D                       l2792 176C                       l2784 1755  
                     l2776 1725                       l2768 16C3                       l2696 15E5  
                     l2688 15D0                       l2960 0FA0                       l2952 0F70  
                     l2944 0F50                       l2936 0F3C                       l2928 0F20  
                     l2880 0CF9                       l2872 0CE2                       l2864 0CD2  
                     l2856 0CBB                       l2848 0CAC                       l3592 06A0  
                     l3584 062A                       l3576 0537                       l3568 0518  
                     l3496 0248                       l3488 01BC                       l3648 07D9  
                     l3840 1EFE                       l3832 1EDD                       l3824 1EBC  
                     l3816 1E96                       l3808 1E72                       l3770 12E3  
                     l3762 12C3                       l3754 12AF                       l3746 129F  
                     l3738 127F                       l3690 11D4                       l3682 11C4  
                     l3674 11B4                       l3666 11A1                       l2794 1770  
                     l2786 175A                       l2778 172B                       l2698 15E9  
                     l2970 0FD7                       l2954 0F75                       l2962 0FA6  
                     l2946 0F54                       l2938 0F45                       l2890 0D1C  
                     l2882 0CFE                       l2874 0CE7                       l2866 0CD8  
                     l2858 0CC3                       l3594 06A4                       l3586 0636  
                     l3578 0555                       l3498 0263                       l3850 1F2E  
                     l3842 1F03                       l3834 1EE7                       l3826 1EC1  
                     l3818 1E9F                       l3772 12E8                       l3780 1319  
                     l3764 12C7                       l3756 12B8                       l3748 12A1  
                     l3692 11D9                       l3684 11CA                       l3676 11B5  
                     l3668 11A2                       l2796 1775                       l2980 0FF7  
                     l2972 0FD9                       l2964 0FB3                       l2956 0F83  
                     l2948 0F68                       l2892 0D29                       l2884 0D03  
                     l2876 0CEF                       l2868 0CDC                       l3596 06AA  
                     l3588 0691                       l3860 1F5A                       l3852 1F3C  
                     l3844 1F12                       l3836 1EEC                       l3828 1ECA  
                     l3790 134F                       l3782 1326                       l3774 12F6  
                     l3766 12DB                       l3758 12BE                       l3694 11E1  
                     l3686 11CE                       l3678 11B7                       l2990 1903  
                     l2798 1778                       l2974 0FE7                       l2966 0FBE  
                     l2958 0F87                       l2894 0D46                       l2878 0CF1  
                     l3598 06B1                       l3862 1F5E                       l3854 1F41  
                     l3846 1F17                       l3838 1EF5                       l3792 1356  
                     l3784 1334                       l3776 12FA                       l3696 11E2  
                     l3688 11CF                       l2992 1909                       l2984 18F2  
                     l2976 0FEB                       l2968 0FCD                       l2896 0D62  
                     l2888 0D0C                       l3864 1FCB                       l3856 1F4B  
                     l3848 1F20                       l3794 135A                       l3786 1343  
                     l3778 1313                       l3698 11E4                       l2994 190E  
                     l2986 18F7                       l2978 0FEC                       l2898 0D8E  
                     l3866 1FEB                       l3858 1F54                       l3796 135C  
                     l3788 1347                       l2988 18FC                       l2996 1A79  
                     l3868 1FF3                       l2998 1A7C                       STR_1 08A0  
                     STR_2 08B2                       u3110 1A40                       u3111 1A3F  
                     u3120 1A4B                       u4000 17BE                       u3121 1A4A  
                     u3130 1A52                       u4010 17CD                       u3210 195C  
                     u3131 1A51                       u4011 17CC                       u3211 195B  
                     u3220 1CAD                       u3140 1A59                       u4020 17D6  
                     u4100 0CDC                       u3300 0016                       u3221 1CAC  
                     u3141 1A58                       u4021 17D5                       u4005 17B9  
                     u3205 194F                       u4101 0CDB                       u3301 0015  
                     u3150 1A60                       u4030 17DB                       u4110 0CE2  
                     u3310 0027                       u3151 1A5F                       u4031 17DA  
                     u4111 0CE1                       u3311 0026                       u3240 1CC1  
                     u3160 1A67                       u4040 17E8                       u4120 0CE7  
                     u3400 1C54                       u3241 1CC0                       u3161 1A66  
                     u4041 17E7                       u4201 0DEE                       u4121 0CE6  
                     u3401 1C53                       u3170 1A6E                       u4050 17ED  
                     u5010 116F                       u4202 0DF5                       u4130 0CFE  
                     u3330 0039                       u3410 1C5F                       u3235 1CB2  
                     u3171 1A6D                       u4051 17EC                       u5011 116E  
                     u4211 0E1B                       u4203 0DFC                       u4131 0CFD  
                     u3331 0038                       u3411 1C5E                       u3260 1CDC  
                     u3180 1A75                       u5100 1B2F                       u4060 17FE  
                     u5020 1176                       u4212 0E22                       u4140 0D03  
                     u3500 1AD5                       u3261 1CDB                       u3181 1A74  
                     u5101 1B2E                       u4061 17FD                       u5021 1175  
                     u5005 115F                       u4213 0E29                       u4141 0D02  
                     u3501 1AD4                       u3325 002B                       u5110 1B49  
                     u3190 1948                       u4070 0CB0                       u3350 004A  
                     u3430 1C71                       u3255 1CC3                       u5111 1B48  
                     u3191 1947                       u4231 0E51                       u4151 0D54  
                     u4071 0CAF                       u3351 0049                       u3431 1C70  
                     u6000 124C                       u3280 1CFA                       u5120 1D17  
                     u5200 08D1                       u5040 1187                       u4400 0F96  
                     u4320 0F3B                       u4232 0E58                       u4152 0D5B  
                     u4080 0CB6                       u3520 1AE6                       u3600 1A36  
                     u3440 1C7B                       u6001 124B                       u3281 1CF9  
                     u3265 1CD8                       u5121 1D16                       u5201 08D0  
                     u5041 1186                       u4321 0F3A                       u4305 0F19  
                     u4241 0E7E                       u4233 0E5F                       u4225 0E2B  
                     u4161 0D70                       u4153 0D62                       u4081 0CB5  
                     u3521 1AE5                       u3601 1A35                       u3345 003A  
                     u3441 1C7A                       u3425 1C63                       u5130 1D33  
                     u3610 1589                       u5210 08E8                       u5050 191B  
                     u4410 0FB3                       u4242 0E85                       u4162 0D77  
                     u4090 0CBB                       u3370 005E                       u3290 000B  
                     u3275 1CEC                       u5115 1B45                       u5131 1D32  
                     u3611 1588                       u5051 191A                       u5035 1179  
                     u4411 0FB2                       u4315 0F30                       u4251 0EAB  
                     u4243 0E8C                       u4171 0D9C                       u4163 0D7E  
                     u4091 0CBA                       u3515 1AD6                       u3371 005D  
                     u3355 0046                       u3291 000A                       u4500 18BA  
                     u5140 1D3F                       u3700 163D                       u3620 158F  
                     u5220 08FE                       u5300 1BF8                       u4420 0FCD  
                     u4340 0F4F                       u4260 0ED5                       u4252 0EB2  
                     u4172 0DA3                       u3540 1AFA                       u3380 0063  
                     u3460 1C8E                       u4501 18B9                       u5141 1D3E  
                     u3701 163C                       u3621 158E                       u5221 08FD  
                     u5301 1BF7                       u4421 0FCC                       u4405 0F91  
                     u4341 0F4E                       u4253 0EB9                       u4181 0DB8  
                     u4173 0DAA                       u3541 1AF9                       u3525 1AE2  
                     u3381 0062                       u3365 0052                       u3461 1C8D  
                     u3445 1C77                       u4510 18C0                       u6110 12C2  
                     u6030 1262                       u3710 1648                       u3630 1594  
                     u5230 0905                       u4430 0FEB                       u4350 0F54  
                     u4182 0DBF                       u3550 1A07                       u3470 1C93  
                     u3390 1C49                       u4511 18BF                       u6111 12C1  
                     u6031 1261                       u6015 124E                       u5151 1D4E  
                     u3711 1646                       u3631 1593                       u5231 0904  
                     u5215 08E3                       u4431 0FEA                       u4415 0FAF  
                     u4351 0F53                       u4335 0F3E                       u4271 0EE1  
                     u4183 0DC6                       u3535 1AEE                       u3551 1A06  
                     u3471 1C92                       u3455 1C82                       u3391 1C48  
                     u6200 135A                       u6120 12C7                       u4440 18F7  
                     u5160 1D67                       u5152 1D4F                       u3800 16AF  
                     u3720 1649                       u3640 15B2                       u5320 1C0C  
                     u5080 1935                       u5400 1DF0                       u4360 0F68  
                     u4280 0EFD                       u4272 0EE8                       u3480 1AC3  
                     u4520 1376                       u4600 0947                       u6201 1359  
                     u6121 12C6                       u6105 12B1                       u6025 1257  
                     u4441 18F6                       u5161 1D66                       u5153 1D54  
                     u3801 16AE                       u3705 1639                       u3641 15B1  
                     u5321 1C0B                       u5081 1934                       u5065 1922  
                     u5401 1DEF                       u4425 0FC9                       u4361 0F67  
                     u4273 0EEF                       u4265 0ED0                       u3481 1AC2  
                     u4521 1375                       u4601 0946                       u6130 12DB  
                     u6050 127E                       u4450 1909                       u5090 1B13  
                     u5154 1D55                       u3810 16B3                       u3730 165D  
                     u3650 15BD                       u5250 0917                       u5330 1C1E  
                     u4370 0F6F                       u3570 1A19                       u4610 0950  
                     u6131 12DA                       u6051 127D                       u4451 1908  
                     u5091 1B12                       u5171 1D76                       u5155 1D5A  
                     u3811 16B2                       u3731 165C                       u3651 15BC  
                     u5251 0916                       u5331 1C1D                       u5315 1BFD  
                     u5075 1929                       u4371 0F6E                       u4291 0F09  
                     u4195 0DC8                       u3571 1A18                       u4611 094F  
                     _PEIE 005E                       u5500 1982                       u6140 12E2  
                     u6060 1297                       u4460 1A86                       u5180 1DA1  
                     u5172 1D77                       u5156 1D5B                       u3820 16C2  
                     u3740 166C                       u3660 15C3                       u5260 091E  
                     u5420 1E12                       u4380 0F75                       u4292 0F10  
                     u3580 1A23                       u5501 1981                       u6141 12E1  
                     u6061 1296                       u6045 1265                       u5181 1DA0  
                     u5173 1D7C                       u3821 16C1                       u3741 166B  
                     u3661 15C2                       u5261 091D                       u5245 0907  
                     u5421 1E11                       u4381 0F74                       u4293 0F17  
                     u4285 0EF8                       u3581 1A22                       u3565 1A0B  
                     u6150 12E8                       u6070 129F                       u4470 1AA8  
                     u5174 1D7D                       u5190 18B1                       u3910 1770  
                     u3670 15C8                       u5350 1C3B                       u4390 0F87  
                     u5510 007B                       u6151 12E7                       u6071 129E  
                     u6055 127A                       u5175 1D82                       u5191 18B0  
                     u3911 176F                       u3671 15C7                       u5351 1C3A  
                     u5335 1C1A                       u5415 1E04                       u4391 0F86  
                     u3495 1AC7                       u4535 1393                       u5511 007A  
                     u6160 12FA                       u4480 1ABA                       u5176 1D83  
                     u3920 1775                       u3840 16E7                       u3760 1682  
                     u3680 15E1                       u5280 092F                       u5440 1E22  
                     u5360 1DAB                       u4800 1042                       u4560 1489  
                     u5600 0263                       u5520 0095                       u6161 12F9  
                     u4481 1AB9                       u5185 1D9D                       u3921 1774  
                     u3905 1765                       u3841 16E6                       u3761 1681  
                     u3681 15E0                       u5281 092E                       u5345 1C2D  
                     u5441 1E21                       u5361 1DAA                       u4801 1041  
                     u3585 1A1F                       u4561 1488                       u4545 13ED  
                     u4705 0B1B                       u4625 0970                       u5601 0262  
                     u5521 0094                       u6217 1E8D                       u6170 1309  
                     u6090 12AE                       u4490 19A6                       u3930 177F  
                     u3770 1686                       u3690 15E5                       u5290 0934  
                     u5450 1E28                       u5370 1DAF                       u4730 0BEA  
                     u4650 0A3F                       u5610 027A                       u5530 00D9  
                     u6091 12AD                       u6307 18E8                       u3931 177E  
                     u3851 16FE                       u3843 16E3                       u3835 16C5  
                     u3771 1685                       u3755 166F                       u3691 15E4  
                     u5291 0933                       u5275 0921                       u5451 1E27  
                     u5435 1E17                       u5371 1DAE                       u3595 1A2A  
                     u4555 1442                       u4731 0BE9                       u4715 0B57  
                     u4651 0A3E                       u4635 09AC                       u5611 0279  
                     u5531 00D8                       u6227 1EB8                       u6180 1326  
                     u3940 1785                       u3860 1712                       u3852 16FF  
                     u3780 168B                       u5460 1E2C                       u5380 1DCF  
                     u4820 107B                       u5700 0448                       u5620 02D0  
                     u5540 010E                       u6181 1325                       u6085 12A3  
                     u3941 1784                       u3861 1713                       u3853 1704  
                     u3781 168A                       u5461 1E2B                       u5381 1DCE  
                     u4821 107A                       u4725 0BA2                       u4645 09F7  
                     u5701 0447                       u5621 02CF                       u5541 010D  
                     u6237 1EE3                       u6190 1343                       u3950 178A  
                     u3870 1730                       u3862 1718                       u3854 1705  
                     u5470 1E41                       u4910 10C9                       u5630 02EB  
                     u5550 0112                       u6191 1342                       u6175 1304  
                     u4495 19A1                       u3951 1789                       u3871 172F  
                     u3863 1719                       u3855 170A                       u3791 169D  
                     u4911 10C8                       u4815 1066                       u4575 14A6  
                     u5631 02EA                       u5615 0276                       u5551 0111  
                     u6247 1F0B                       u3960 1790                       u3880 1755  
                     u3856 170B                       u3792 16A4                       u5480 1E51  
                     u4920 10DF                       u4840 1094                       u5800 06CA  
                     u5720 04E1                       u5640 0312                       u5560 0141  
                     u6185 1322                       u3961 178F                       u3881 1754  
                     u3793 16AB                       u5481 1E50                       u4921 10DE  
                     u4905 10BB                       u4841 1093                       u4825 1077  
                     u4585 14F3                       u4745 0BFD                       u4665 0A52  
                     u5801 06C9                       u5721 04E0                       u5641 0311  
                     u5625 02CC                       u5561 0140                       u6257 1F47  
                     u3970 1797                       u3890 175A                       u5490 1E55  
                     u4930 10F3                       u4850 1098                       u4770 100B  
                     u4690 0AFB                       u5810 06DF                       u5730 0502  
                     u5650 0321                       u5570 017B                       u6195 133F  
                     u6267 18D0                       u3971 1796                       u3891 1759  
                     u5491 1E54                       u5475 1E3C                       u5395 1DE2  
                     u4931 10F2                       u4851 1097                       u4835 1087  
                     u4595 153F                       u4771 100A                       u4755 0C39  
                     u4691 0AFA                       u4675 0A8E                       u5811 06DE  
                     u5731 0501                       u5715 0457                       u5651 0320  
                     u5571 017A                       u3980 179D                       u4860 109F  
                     u4780 1011                       u5900 07D9                       u5820 06E7  
                     u5740 0511                       u5660 033C                       u5580 01B6  
                     u6277 1BA7                       u3981 179C                       u4861 109E  
                     u4781 1010                       u4765 0C75                       u4685 0ACA  
                     u5901 07D8                       u5821 06E6                       u5741 0510  
                     u5661 033B                       u5581 01B5                       u3990 17AF  
                     u4950 1134                       u4790 1028                       u5910 07EB  
                     u5750 052C                       u5590 023F                       u6287 1BB6  
                     u3991 17AE                       u4951 1133                       u4791 1027  
                     u5911 07EA                       u5751 052B                       u5735 04FE  
                     u5655 031D                       u5591 023E                       u5920 11A1  
                     u4880 10B1                       u5840 0725                       u5680 0431  
                     u5921 11A0                       u6297 1BC5                       u4945 111B  
                     u4881 10B0                       u5841 0724                       u5745 050D  
                     u5681 0430                       u5930 11A7                       u4970 1152  
                     u4890 10B8                       u5850 0730                       u5690 043C  
                     u5931 11A6                       u4971 1151                       u4955 1130  
                     u4891 10B7                       u4875 10A1                       u5851 072F  
                     u5835 06F2                       u5691 043B                       u5675 03FE  
                     u5940 11AC                       u4980 1156                       u5860 073B  
                     u5780 0698                       u5941 11AB                       u4981 1155  
                     u4965 1145                       u5861 073A                       u5845 0721  
                     u5781 0697                       u5765 05B3                       u5685 042D  
                     u5950 11CE                       u4990 115D                       u5870 074B  
                     u5790 06B0                       u5951 11CD                       u4991 115C  
                     u5871 074A                       u5791 06AF                       u5775 0639  
                     u5960 11D4                       u5880 0762                       u5961 11D3  
                     u5881 0761                       u5865 0737                       u5970 11D9  
                     u5971 11D8                       u5875 0747                       u5980 11F4  
                     u5981 11F3                       u5990 1212                       u5991 1211  
                     u5895 077D          ?_Lcd_Write_String 0073                       _main 1E5F  
                     btemp 007E                       _volt 00DE                       start 0000  
       ??_Lcd_Write_String 0075            ___fldiv@new_exp 0050            __end_of_Lcd_Cmd 18F1  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070              ___fltol@sign1 005A            __end_of___fladd 1800  
                    ?_main 0070            __end_of___fldiv 136D            __end_of___awdiv 006D  
          __end_of___flneg 18B4            __end_of___awmod 1C9D            __end_of___flmul 1000  
          __end_of___flsub 1B9D            __end_of___fltol 0940                      _ANSEL 0188  
          __end_of___lldiv 1D03            ___awdiv@divisor 0077            __end_of___llmod 1C44  
          __end_of___lwdiv 1AFF            __end_of___lwmod 1A3B            ___awdiv@counter 0020  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
          __end_of_dpowers 08A0                      _scale 0940            __end_of_isdigit 1015  
                    _senms 00DA                      _setup 19C7                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07F0  
         __end_of_Lcd_Init 1BEE           __end_of_Lcd_Port 1A79            __initialization 07F0  
             __end_of_main 2000                     ??_main 00CF       __size_of__tdiv_to_l_ 00BD  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___llmod@dividend 0024                     ?_scale 003E  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0016                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 1E5F           __end_of__powers_ 0844  
                   ___flge 1D03                     ___fleq 1AFF                  ??___fladd 0060  
                   ___wmul 1915                  ??___fldiv 0046                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0028                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 136D           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075                  ??_isdigit 0070         __size_of__Umul8_16 0027  
                ??_sprintf 00B1            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
               ___flge@ff1 0070                 ___flge@ff2 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070                 ___fleq@ff1 0070  
               ___fleq@ff2 0074    __end_of__initialization 07FC                 ___flneg@f1 0070  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_scale 0C9F  
            __end_of_setup 1A01             _Lcd_Set_Cursor 18F1                 __div_to_l_ 10D2  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0042            __div_to_l_@quot 0020  
                  ??_setup 007E                 __pbssBANK0 006C                 __pbssBANK1 00D4  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1961  
               __pmaintext 1E5F                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 1915                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0800             _Lcd_Write_Char 18C1                    _Lcd_Cmd 18D7  
        __end_of__npowers_ 0878            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___fldiv 1190                    ___awdiv 0004  
                  ___flneg 18A9                    ___awmod 1C44                    ___flmul 0C9F  
                  ___flsub 1B4D                    ___fltol 08C4                    ___lldiv 1C9D  
          __size_of___wmul 0025                    ___llmod 1BEE                    ___lwdiv 1ABB  
               _fround$957 004D                 _fround$958 0049                    ___lwmod 1A01  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 006D  
                  __ptext2 0940                    __ptext3 1C44                    __ptext4 0004  
                  __ptext5 1003                    __ptext6 136D                    __ptext7 1A01  
                  __ptext8 1ABB                    __ptext9 0C9F                ?__div_to_l_ 0070  
                  _dpowers 0878                    _isdigit 1003                 ??___xxtofl 0074  
         ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _sprintf 006D  
                  clrloop0 1886     __end_of_Lcd_Write_Char 18D7       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                Lcd_Port@a 0070             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
            ??__tdiv_to_l_ 0078                ___fladd@grs 006B              ___xxtofl@sign 0078  
                _TRISCbits 0087                ___fldiv@grs 0052                ___fldiv@rem 004B  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
              ___flmul@grs 0032        __size_of__div_to_l_ 00BE             __end_of___flge 1DA5  
           __end_of___fleq 1B4D             __end_of___wmul 193A           _Lcd_Write_String 1A79  
           __end_of_fround 1578        start_initialization 07F0        __end_of__tdiv_to_l_ 10D2  
        __size_of_Lcd_Init 0051          __size_of_Lcd_Port 003E          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
          ___llmod@divisor 0020            ___llmod@counter 0029                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 193A  
          Lcd_Write_Char@a 0072                   ??_fround 0042              sprintf@tmpval 00BF  
                ___fladd@a 005C                  ___fladd@b 0058                 fround@prec 0051  
                ___fldiv@a 003E                  ___fldiv@b 0042                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070                sprintf@flag 00BB  
              sprintf@eexp 00BD                sprintf@fval 00C8                sprintf@prec 00CC  
         _I2C_Master_Start 188D           _I2C_Master_Write 189F           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 0058                   ?___fldiv 003E  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 00A0                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0020                  __npowers_ 0844  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 0800                __tdiv_to_l_ 1015               ??__div_to_l_ 0078  
                 ?_isdigit 0070                  _scale$959 004C           ___lwdiv@quotient 007B  
                 ?_sprintf 00A8             __size_of_scale 035F             __size_of_setup 003A  
           ___wmul@product 0074                  clear_ram0 1885                   Lcd_Cmd@a 0073  
       __end_of__div_to_l_ 1190                  _sensorval 00D8                __stringbase 080F  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 1B9D  
                 _Lcd_Port 1A3B        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 1ABB  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___fldiv 01DD           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0056  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0810  
              _isdigit$768 0070                 sprintf@val 00C3            _I2C_Master_Init 198F  
          _I2C_Master_Read 1961                   ___xxtofl 1DA5            _I2C_Master_Wait 18B4  
          _I2C_Master_Stop 1896           __size_of_isdigit 0012            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 193A                   __ptext11 1015  
                 __ptext20 1D03                   __ptext12 10D2                   __ptext21 1AFF  
                 __ptext13 1DA5                   __ptext30 1C9D                   __ptext22 19C7  
                 __ptext14 1915                   __ptext31 1190                   __ptext23 1A79  
                 __ptext15 1BEE                   __ptext32 189F                   __ptext24 18C1  
                 __ptext16 08C4                   __ptext33 1896                   __ptext25 18F1  
                 __ptext17 1B4D                   __ptext34 188D                   __ptext26 1B9D  
                 __ptext18 1578                   __ptext35 1961                   __ptext27 18D7  
                 __ptext19 18A9                   __ptext36 18B4                   __ptext28 1A3B  
                 __ptext29 198F                   __powers_ 0810           __size_of_sprintf 0783  
            __size_of_main 01A1   __end_of_I2C_Master_Start 1896   __end_of_I2C_Master_Write 18A9  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00BA  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C7  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 080A                 _OSCCONbits 008F    __end_of_I2C_Master_Init 19C7  
  __end_of_I2C_Master_Read 198F    __end_of_I2C_Master_Wait 18C1    __end_of_I2C_Master_Stop 189F  
       Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00CE                   sprintf@f 00A8           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 080A                   stringtab 0800                _SSPCON2bits 0091  
            ___fladd@signs 0068               ___fladd@aexp 0069               ___fladd@bexp 006A  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
