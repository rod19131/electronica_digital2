

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Aug 12 13:14:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398                           
   399                           	psect	strings
   400  0800                     __pstrings:
   401  0800                     stringtab:
   402  0800                     __stringtab:
   403                           
   404                           ;	String table - string pointers are 1 byte each
   405  0800  1BFF               	btfsc	btemp+1,7
   406  0801  280A               	ljmp	stringcode
   407  0802  1383               	bcf	3,7
   408  0803  187F               	btfsc	btemp+1,0
   409  0804  1783               	bsf	3,7
   410  0805  0800               	movf	0,w
   411  0806  0A84               	incf	4,f
   412  0807  1903               	skipnz
   413  0808  0AFF               	incf	btemp+1,f
   414  0809  0008               	return
   415  080A                     stringcode:
   416  080A                     stringdir:
   417  080A  3008               	movlw	high stringdir
   418  080B  008A               	movwf	10
   419  080C  0804               	movf	4,w
   420  080D  0A84               	incf	4,f
   421  080E  0782               	addwf	2,f
   422  080F                     __stringbase:
   423  080F  3400               	retlw	0
   424  0810                     __end_of__stringtab:
   425  0810                     __powers_:
   426  0810  3400               	retlw	0
   427  0811  3400               	retlw	0
   428  0812  3480               	retlw	128
   429  0813  343F               	retlw	63
   430  0814  3400               	retlw	0
   431  0815  3400               	retlw	0
   432  0816  3420               	retlw	32
   433  0817  3441               	retlw	65
   434  0818  3400               	retlw	0
   435  0819  3400               	retlw	0
   436  081A  34C8               	retlw	200
   437  081B  3442               	retlw	66
   438  081C  3400               	retlw	0
   439  081D  3400               	retlw	0
   440  081E  347A               	retlw	122
   441  081F  3444               	retlw	68
   442  0820  3400               	retlw	0
   443  0821  3440               	retlw	64
   444  0822  341C               	retlw	28
   445  0823  3446               	retlw	70
   446  0824  3400               	retlw	0
   447  0825  3450               	retlw	80
   448  0826  34C3               	retlw	195
   449  0827  3447               	retlw	71
   450  0828  3400               	retlw	0
   451  0829  3424               	retlw	36
   452  082A  3474               	retlw	116
   453  082B  3449               	retlw	73
   454  082C  3480               	retlw	128
   455  082D  3496               	retlw	150
   456  082E  3418               	retlw	24
   457  082F  344B               	retlw	75
   458  0830  3420               	retlw	32
   459  0831  34BC               	retlw	188
   460  0832  34BE               	retlw	190
   461  0833  344C               	retlw	76
   462  0834  3428               	retlw	40
   463  0835  346B               	retlw	107
   464  0836  346E               	retlw	110
   465  0837  344E               	retlw	78
   466  0838  34F9               	retlw	249
   467  0839  3402               	retlw	2
   468  083A  3415               	retlw	21
   469  083B  3450               	retlw	80
   470  083C  34EC               	retlw	236
   471  083D  3478               	retlw	120
   472  083E  34AD               	retlw	173
   473  083F  3460               	retlw	96
   474  0840  34CA               	retlw	202
   475  0841  34F2               	retlw	242
   476  0842  3449               	retlw	73
   477  0843  3471               	retlw	113
   478  0844                     __end_of__powers_:
   479  0844                     __npowers_:
   480  0844  3400               	retlw	0
   481  0845  3400               	retlw	0
   482  0846  3480               	retlw	128
   483  0847  343F               	retlw	63
   484  0848  34CD               	retlw	205
   485  0849  34CC               	retlw	204
   486  084A  34CC               	retlw	204
   487  084B  343D               	retlw	61
   488  084C  340A               	retlw	10
   489  084D  34D7               	retlw	215
   490  084E  3423               	retlw	35
   491  084F  343C               	retlw	60
   492  0850  346F               	retlw	111
   493  0851  3412               	retlw	18
   494  0852  3483               	retlw	131
   495  0853  343A               	retlw	58
   496  0854  3417               	retlw	23
   497  0855  34B7               	retlw	183
   498  0856  34D1               	retlw	209
   499  0857  3438               	retlw	56
   500  0858  34AC               	retlw	172
   501  0859  34C5               	retlw	197
   502  085A  3427               	retlw	39
   503  085B  3437               	retlw	55
   504  085C  34BD               	retlw	189
   505  085D  3437               	retlw	55
   506  085E  3486               	retlw	134
   507  085F  3435               	retlw	53
   508  0860  3495               	retlw	149
   509  0861  34BF               	retlw	191
   510  0862  34D6               	retlw	214
   511  0863  3433               	retlw	51
   512  0864  3477               	retlw	119
   513  0865  34CC               	retlw	204
   514  0866  342B               	retlw	43
   515  0867  3432               	retlw	50
   516  0868  345F               	retlw	95
   517  0869  3470               	retlw	112
   518  086A  3489               	retlw	137
   519  086B  3430               	retlw	48
   520  086C  34FF               	retlw	255
   521  086D  34E6               	retlw	230
   522  086E  34DB               	retlw	219
   523  086F  342E               	retlw	46
   524  0870  3408               	retlw	8
   525  0871  34E5               	retlw	229
   526  0872  343C               	retlw	60
   527  0873  341E               	retlw	30
   528  0874  3460               	retlw	96
   529  0875  3442               	retlw	66
   530  0876  34A2               	retlw	162
   531  0877  340D               	retlw	13
   532  0878                     __end_of__npowers_:
   533  0878                     _dpowers:
   534  0878  3401               	retlw	1
   535  0879  3400               	retlw	0
   536  087A  3400               	retlw	0
   537  087B  3400               	retlw	0
   538  087C  340A               	retlw	10
   539  087D  3400               	retlw	0
   540  087E  3400               	retlw	0
   541  087F  3400               	retlw	0
   542  0880  3464               	retlw	100
   543  0881  3400               	retlw	0
   544  0882  3400               	retlw	0
   545  0883  3400               	retlw	0
   546  0884  34E8               	retlw	232
   547  0885  3403               	retlw	3
   548  0886  3400               	retlw	0
   549  0887  3400               	retlw	0
   550  0888  3410               	retlw	16
   551  0889  3427               	retlw	39
   552  088A  3400               	retlw	0
   553  088B  3400               	retlw	0
   554  088C  34A0               	retlw	160
   555  088D  3486               	retlw	134
   556  088E  3401               	retlw	1
   557  088F  3400               	retlw	0
   558  0890  3440               	retlw	64
   559  0891  3442               	retlw	66
   560  0892  340F               	retlw	15
   561  0893  3400               	retlw	0
   562  0894  3480               	retlw	128
   563  0895  3496               	retlw	150
   564  0896  3498               	retlw	152
   565  0897  3400               	retlw	0
   566  0898  3400               	retlw	0
   567  0899  34E1               	retlw	225
   568  089A  34F5               	retlw	245
   569  089B  3405               	retlw	5
   570  089C  3400               	retlw	0
   571  089D  34CA               	retlw	202
   572  089E  349A               	retlw	154
   573  089F  343B               	retlw	59
   574  08A0                     __end_of_dpowers:
   575  0013                     _SSPBUF	set	19
   576  0014                     _SSPCON	set	20
   577  0008                     _PORTD	set	8
   578  0039                     _RC1	set	57
   579  0038                     _RC0	set	56
   580  0047                     _RD7	set	71
   581  0046                     _RD6	set	70
   582  0045                     _RD5	set	69
   583  0044                     _RD4	set	68
   584  0043                     _RD3	set	67
   585  0042                     _RD2	set	66
   586  0041                     _RD1	set	65
   587  0040                     _RD0	set	64
   588  0063                     _SSPIF	set	99
   589  005E                     _PEIE	set	94
   590  005F                     _GIE	set	95
   591  0091                     _SSPCON2bits	set	145
   592  0094                     _SSPSTAT	set	148
   593  0093                     _SSPADD	set	147
   594  0091                     _SSPCON2	set	145
   595  0089                     _TRISE	set	137
   596  0088                     _TRISD	set	136
   597  0086                     _TRISB	set	134
   598  0087                     _TRISCbits	set	135
   599  0085                     _TRISA	set	133
   600  008F                     _OSCCONbits	set	143
   601  0463                     _SSPIE	set	1123
   602  043C                     _TRISC4	set	1084
   603  043B                     _TRISC3	set	1083
   604  0188                     _ANSEL	set	392
   605  0189                     _ANSELH	set	393
   606  08A0                     STR_1:
   607  08A0  3425               	retlw	37	;'%'
   608  08A1  3464               	retlw	100	;'d'
   609  08A2  3420               	retlw	32	;' '
   610  08A3  3420               	retlw	32	;' '
   611  08A4  3420               	retlw	32	;' '
   612  08A5  3425               	retlw	37	;'%'
   613  08A6  3464               	retlw	100	;'d'
   614  08A7  3420               	retlw	32	;' '
   615  08A8  3420               	retlw	32	;' '
   616  08A9  3420               	retlw	32	;' '
   617  08AA  3420               	retlw	32	;' '
   618  08AB  3425               	retlw	37	;'%'
   619  08AC  342E               	retlw	46	;'.'
   620  08AD  3430               	retlw	48	;'0'
   621  08AE  3466               	retlw	102	;'f'
   622  08AF  3420               	retlw	32	;' '
   623  08B0  3420               	retlw	32	;' '
   624  08B1  3400               	retlw	0
   625  08B2                     STR_2:
   626  08B2  3441               	retlw	65	;'A'
   627  08B3  3444               	retlw	68	;'D'
   628  08B4  3443               	retlw	67	;'C'
   629  08B5  343A               	retlw	58	;':'
   630  08B6  3420               	retlw	32	;' '
   631  08B7  3443               	retlw	67	;'C'
   632  08B8  344F               	retlw	79	;'O'
   633  08B9  344E               	retlw	78	;'N'
   634  08BA  3454               	retlw	84	;'T'
   635  08BB  343A               	retlw	58	;':'
   636  08BC  3420               	retlw	32	;' '
   637  08BD  3454               	retlw	84	;'T'
   638  08BE  3445               	retlw	69	;'E'
   639  08BF  344D               	retlw	77	;'M'
   640  08C0  3450               	retlw	80	;'P'
   641  08C1  343A               	retlw	58	;':'
   642  08C2  3400               	retlw	0
   643                           
   644                           	psect	cinit
   645  07F0                     start_initialization:	
   646                           ; #config settings
   647                           
   648  07F0                     __initialization:
   649                           
   650                           ; Clear objects allocated to BANK0
   651  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   652  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   653  07F2  01EC               	clrf	__pbssBANK0& (0+127)
   654                           
   655                           ; Clear objects allocated to BANK1
   656  07F3  1383               	bcf	3,7	;select IRP bank0
   657  07F4  30D4               	movlw	low __pbssBANK1
   658  07F5  0084               	movwf	4
   659  07F6  30EE               	movlw	low (__pbssBANK1+26)
   660  07F7  160A  158A  20B3  120A  118A  	fcall	clear_ram0
   661  07FC                     end_of_initialization:	
   662                           ;End of C runtime variable initialization code
   663                           
   664  07FC                     __end_of__initialization:
   665  07FC  0183               	clrf	3
   666  07FD  160A  118A  281C   	ljmp	_main	;jump to C main() function
   667                           
   668                           	psect	bssBANK0
   669  006C                     __pbssBANK0:
   670  006C                     _a:
   671  006C                     	ds	1
   672                           
   673                           	psect	bssBANK1
   674  00D4                     __pbssBANK1:
   675  00D4                     _t:
   676  00D4                     	ds	4
   677  00D8                     _sensorval:
   678  00D8                     	ds	2
   679  00DA                     _senms:
   680  00DA                     	ds	2
   681  00DC                     _s2:
   682  00DC                     	ds	1
   683  00DD                     _s1:
   684  00DD                     	ds	1
   685  00DE                     _volt:
   686  00DE                     	ds	16
   687                           
   688                           	psect	clrtext
   689  18B3                     clear_ram0:	
   690                           ;	Called with FSR containing the base address, and
   691                           ;	W with the last address+1
   692                           
   693  18B3  0064               	clrwdt	;clear the watchdog before getting into this loop
   694  18B4                     clrloop0:
   695  18B4  0180               	clrf	0	;clear RAM location pointed to by FSR
   696  18B5  0A84               	incf	4,f	;increment pointer
   697  18B6  0604               	xorwf	4,w	;XOR with final address
   698  18B7  1903               	btfsc	3,2	;have we reached the end yet?
   699  18B8  3400               	retlw	0	;all done for this memory range, return
   700  18B9  0604               	xorwf	4,w	;XOR again to restore value
   701  18BA  28B4               	goto	clrloop0	;do the next byte
   702                           
   703                           	psect	cstackBANK1
   704  00A0                     __pcstackBANK1:
   705  00A0                     ?___flsub:
   706  00A0                     ___flsub@a:	
   707                           ; 4 bytes @ 0x0
   708                           
   709                           
   710                           ; 4 bytes @ 0x0
   711  00A0                     	ds	4
   712  00A4                     ___flsub@b:
   713                           
   714                           ; 4 bytes @ 0x4
   715  00A4                     	ds	4
   716  00A8                     ?_sprintf:
   717  00A8                     sprintf@f:	
   718                           ; 2 bytes @ 0x8
   719                           
   720                           
   721                           ; 1 bytes @ 0x8
   722  00A8                     	ds	9
   723  00B1                     ??_sprintf:
   724                           
   725                           ; 1 bytes @ 0x11
   726  00B1                     	ds	5
   727  00B6                     _sprintf$959:
   728                           
   729                           ; 4 bytes @ 0x16
   730  00B6                     	ds	4
   731  00BA                     sprintf@ap:
   732                           
   733                           ; 1 bytes @ 0x1A
   734  00BA                     	ds	1
   735  00BB                     sprintf@flag:
   736                           
   737                           ; 2 bytes @ 0x1B
   738  00BB                     	ds	2
   739  00BD                     sprintf@eexp:
   740                           
   741                           ; 2 bytes @ 0x1D
   742  00BD                     	ds	2
   743  00BF                     sprintf@tmpval:
   744                           
   745                           ; 4 bytes @ 0x1F
   746  00BF                     	ds	4
   747  00C3                     sprintf@val:
   748                           
   749                           ; 4 bytes @ 0x23
   750  00C3                     	ds	4
   751  00C7                     sprintf@sp:
   752                           
   753                           ; 1 bytes @ 0x27
   754  00C7                     	ds	1
   755  00C8                     sprintf@fval:
   756                           
   757                           ; 4 bytes @ 0x28
   758  00C8                     	ds	4
   759  00CC                     sprintf@prec:
   760                           
   761                           ; 2 bytes @ 0x2C
   762  00CC                     	ds	2
   763  00CE                     sprintf@c:
   764                           
   765                           ; 1 bytes @ 0x2E
   766  00CE                     	ds	1
   767  00CF                     ??_main:
   768                           
   769                           ; 1 bytes @ 0x2F
   770  00CF                     	ds	5
   771                           
   772                           	psect	cstackCOMMON
   773  0070                     __pcstackCOMMON:
   774  0070                     ?_isdigit:
   775  0070                     ?___fleq:	
   776                           ; 1 bit 
   777                           
   778  0070                     ?___flge:	
   779                           ; 1 bit 
   780                           
   781  0070                     ?_setup:	
   782                           ; 1 bit 
   783                           
   784  0070                     ?_I2C_Master_Start:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ??_I2C_Master_Start:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_I2C_Master_Write:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_I2C_Master_Stop:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ??_I2C_Master_Stop:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_Lcd_Init:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ??_isdigit:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_main:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_I2C_Master_Wait:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ??_I2C_Master_Wait:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_Lcd_Port:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ??_Lcd_Port:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_Lcd_Cmd:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_Lcd_Write_Char:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_I2C_Master_Read:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?__Umul8_16:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0070                     ?___wmul:	
   833                           ; 2 bytes @ 0x0
   834                           
   835  0070                     ?___awmod:	
   836                           ; 2 bytes @ 0x0
   837                           
   838  0070                     ?___lwmod:	
   839                           ; 2 bytes @ 0x0
   840                           
   841  0070                     ?__tdiv_to_l_:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0070                     ?__div_to_l_:	
   845                           ; 4 bytes @ 0x0
   846                           
   847  0070                     ?___lldiv:	
   848                           ; 4 bytes @ 0x0
   849                           
   850  0070                     ?___flneg:	
   851                           ; 4 bytes @ 0x0
   852                           
   853  0070                     ?___xxtofl:	
   854                           ; 4 bytes @ 0x0
   855                           
   856  0070                     Lcd_Port@a:	
   857                           ; 4 bytes @ 0x0
   858                           
   859  0070                     __Umul8_16@multiplicand:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     _isdigit$767:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     I2C_Master_Write@d:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     I2C_Master_Read@a:	
   869                           ; 2 bytes @ 0x0
   870                           
   871  0070                     ___wmul@multiplier:	
   872                           ; 2 bytes @ 0x0
   873                           
   874  0070                     ___awmod@divisor:	
   875                           ; 2 bytes @ 0x0
   876                           
   877  0070                     ___lwmod@divisor:	
   878                           ; 2 bytes @ 0x0
   879                           
   880  0070                     ___lldiv@divisor:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0070                     __div_to_l_@f1:	
   884                           ; 4 bytes @ 0x0
   885                           
   886  0070                     ___fleq@ff1:	
   887                           ; 4 bytes @ 0x0
   888                           
   889  0070                     ___flge@ff1:	
   890                           ; 4 bytes @ 0x0
   891                           
   892  0070                     ___flneg@f1:	
   893                           ; 4 bytes @ 0x0
   894                           
   895  0070                     __tdiv_to_l_@f1:	
   896                           ; 4 bytes @ 0x0
   897                           
   898  0070                     ___xxtofl@val:	
   899                           ; 4 bytes @ 0x0
   900                           
   901                           
   902                           ; 4 bytes @ 0x0
   903  0070                     	ds	1
   904  0071                     ??_Lcd_Cmd:
   905  0071                     ??_Lcd_Write_Char:	
   906                           ; 1 bytes @ 0x1
   907                           
   908  0071                     isdigit@c:	
   909                           ; 1 bytes @ 0x1
   910                           
   911                           
   912                           ; 1 bytes @ 0x1
   913  0071                     	ds	1
   914  0072                     ??_I2C_Master_Write:
   915  0072                     ??_I2C_Master_Read:	
   916                           ; 1 bytes @ 0x2
   917                           
   918  0072                     ??__Umul8_16:	
   919                           ; 1 bytes @ 0x2
   920                           
   921  0072                     Lcd_Write_Char@a:	
   922                           ; 1 bytes @ 0x2
   923                           
   924  0072                     ___wmul@multiplicand:	
   925                           ; 1 bytes @ 0x2
   926                           
   927  0072                     ___awmod@dividend:	
   928                           ; 2 bytes @ 0x2
   929                           
   930  0072                     ___lwmod@dividend:	
   931                           ; 2 bytes @ 0x2
   932                           
   933                           
   934                           ; 2 bytes @ 0x2
   935  0072                     	ds	1
   936  0073                     ?_Lcd_Write_String:
   937  0073                     Lcd_Cmd@a:	
   938                           ; 1 bytes @ 0x3
   939                           
   940  0073                     Lcd_Write_String@a:	
   941                           ; 1 bytes @ 0x3
   942                           
   943                           
   944                           ; 2 bytes @ 0x3
   945  0073                     	ds	1
   946  0074                     ?_Lcd_Set_Cursor:
   947  0074                     ??_Lcd_Init:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0074                     ??___wmul:	
   951                           ; 1 bytes @ 0x4
   952                           
   953  0074                     ??___awmod:	
   954                           ; 1 bytes @ 0x4
   955                           
   956  0074                     ??___flneg:	
   957                           ; 1 bytes @ 0x4
   958                           
   959  0074                     ??___lwmod:	
   960                           ; 1 bytes @ 0x4
   961                           
   962  0074                     ??___xxtofl:	
   963                           ; 1 bytes @ 0x4
   964                           
   965  0074                     Lcd_Set_Cursor@b:	
   966                           ; 1 bytes @ 0x4
   967                           
   968  0074                     I2C_Master_Read@temp:	
   969                           ; 1 bytes @ 0x4
   970                           
   971  0074                     ___wmul@product:	
   972                           ; 2 bytes @ 0x4
   973                           
   974  0074                     __Umul8_16@product:	
   975                           ; 2 bytes @ 0x4
   976                           
   977  0074                     ___lldiv@dividend:	
   978                           ; 2 bytes @ 0x4
   979                           
   980  0074                     __div_to_l_@f2:	
   981                           ; 4 bytes @ 0x4
   982                           
   983  0074                     ___fleq@ff2:	
   984                           ; 4 bytes @ 0x4
   985                           
   986  0074                     ___flge@ff2:	
   987                           ; 4 bytes @ 0x4
   988                           
   989  0074                     __tdiv_to_l_@f2:	
   990                           ; 4 bytes @ 0x4
   991                           
   992                           
   993                           ; 4 bytes @ 0x4
   994  0074                     	ds	1
   995  0075                     ??_Lcd_Set_Cursor:
   996  0075                     ??_Lcd_Write_String:	
   997                           ; 1 bytes @ 0x5
   998                           
   999  0075                     ___awmod@counter:	
  1000                           ; 1 bytes @ 0x5
  1001                           
  1002  0075                     ___lwmod@counter:	
  1003                           ; 1 bytes @ 0x5
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x5
  1007  0075                     	ds	1
  1008  0076                     ?___lwdiv:
  1009  0076                     Lcd_Set_Cursor@a:	
  1010                           ; 2 bytes @ 0x6
  1011                           
  1012  0076                     ___awmod@sign:	
  1013                           ; 1 bytes @ 0x6
  1014                           
  1015  0076                     ___lwdiv@divisor:	
  1016                           ; 1 bytes @ 0x6
  1017                           
  1018  0076                     __Umul8_16@word_mpld:	
  1019                           ; 2 bytes @ 0x6
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x6
  1023  0076                     	ds	1
  1024  0077                     ?___awdiv:
  1025  0077                     Lcd_Set_Cursor@temp:	
  1026                           ; 2 bytes @ 0x7
  1027                           
  1028  0077                     ___awdiv@divisor:	
  1029                           ; 1 bytes @ 0x7
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x7
  1033  0077                     	ds	1
  1034  0078                     ??__tdiv_to_l_:
  1035  0078                     ??__div_to_l_:	
  1036                           ; 1 bytes @ 0x8
  1037                           
  1038  0078                     ??___lldiv:	
  1039                           ; 1 bytes @ 0x8
  1040                           
  1041  0078                     ??___fleq:	
  1042                           ; 1 bytes @ 0x8
  1043                           
  1044  0078                     ??___flge:	
  1045                           ; 1 bytes @ 0x8
  1046                           
  1047  0078                     __Umul8_16@multiplier:	
  1048                           ; 1 bytes @ 0x8
  1049                           
  1050  0078                     ___xxtofl@sign:	
  1051                           ; 1 bytes @ 0x8
  1052                           
  1053  0078                     Lcd_Write_String@i:	
  1054                           ; 1 bytes @ 0x8
  1055                           
  1056  0078                     ___lwdiv@dividend:	
  1057                           ; 2 bytes @ 0x8
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x8
  1061  0078                     	ds	1
  1062  0079                     ___xxtofl@exp:
  1063  0079                     ___awdiv@dividend:	
  1064                           ; 1 bytes @ 0x9
  1065                           
  1066  0079                     ___lldiv@quotient:	
  1067                           ; 2 bytes @ 0x9
  1068                           
  1069                           
  1070                           ; 4 bytes @ 0x9
  1071  0079                     	ds	1
  1072  007A                     ??___lwdiv:
  1073  007A                     ___xxtofl@arg:	
  1074                           ; 1 bytes @ 0xA
  1075                           
  1076                           
  1077                           ; 4 bytes @ 0xA
  1078  007A                     	ds	1
  1079  007B                     ??___awdiv:
  1080  007B                     ___lwdiv@quotient:	
  1081                           ; 1 bytes @ 0xB
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0xB
  1085  007B                     	ds	2
  1086  007D                     ___lldiv@counter:
  1087  007D                     ___lwdiv@counter:	
  1088                           ; 1 bytes @ 0xD
  1089                           
  1090                           
  1091                           ; 1 bytes @ 0xD
  1092  007D                     	ds	1
  1093  007E                     ??_setup:
  1094  007E                     ??___flsub:	
  1095                           ; 1 bytes @ 0xE
  1096                           
  1097                           
  1098                           	psect	cstackBANK0
  1099  0020                     __pcstackBANK0:	
  1100                           ; 1 bytes @ 0xE
  1101                           
  1102  0020                     ?_I2C_Master_Init:
  1103  0020                     ?___llmod:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0020                     ___awdiv@counter:	
  1107                           ; 4 bytes @ 0x0
  1108                           
  1109  0020                     I2C_Master_Init@c:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0020                     __div_to_l_@quot:	
  1113                           ; 4 bytes @ 0x0
  1114                           
  1115  0020                     __tdiv_to_l_@quot:	
  1116                           ; 4 bytes @ 0x0
  1117                           
  1118  0020                     ___llmod@divisor:	
  1119                           ; 4 bytes @ 0x0
  1120                           
  1121                           
  1122                           ; 4 bytes @ 0x0
  1123  0020                     	ds	1
  1124  0021                     ___awdiv@sign:
  1125                           
  1126                           ; 1 bytes @ 0x1
  1127  0021                     	ds	1
  1128  0022                     ___awdiv@quotient:
  1129                           
  1130                           ; 2 bytes @ 0x2
  1131  0022                     	ds	2
  1132  0024                     ??_I2C_Master_Init:
  1133  0024                     ?___flmul:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136  0024                     __div_to_l_@cntr:	
  1137                           ; 4 bytes @ 0x4
  1138                           
  1139  0024                     __tdiv_to_l_@cntr:	
  1140                           ; 1 bytes @ 0x4
  1141                           
  1142  0024                     ___llmod@dividend:	
  1143                           ; 1 bytes @ 0x4
  1144                           
  1145  0024                     ___flmul@b:	
  1146                           ; 4 bytes @ 0x4
  1147                           
  1148                           
  1149                           ; 4 bytes @ 0x4
  1150  0024                     	ds	1
  1151  0025                     __div_to_l_@exp1:
  1152  0025                     __tdiv_to_l_@exp1:	
  1153                           ; 1 bytes @ 0x5
  1154                           
  1155                           
  1156                           ; 1 bytes @ 0x5
  1157  0025                     	ds	3
  1158  0028                     ??___llmod:
  1159  0028                     ___flmul@a:	
  1160                           ; 1 bytes @ 0x8
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x8
  1164  0028                     	ds	1
  1165  0029                     ___llmod@counter:
  1166                           
  1167                           ; 1 bytes @ 0x9
  1168  0029                     	ds	3
  1169  002C                     ??___flmul:
  1170                           
  1171                           ; 1 bytes @ 0xC
  1172  002C                     	ds	5
  1173  0031                     ___flmul@sign:
  1174                           
  1175                           ; 1 bytes @ 0x11
  1176  0031                     	ds	1
  1177  0032                     ___flmul@grs:
  1178                           
  1179                           ; 4 bytes @ 0x12
  1180  0032                     	ds	4
  1181  0036                     ___flmul@aexp:
  1182                           
  1183                           ; 1 bytes @ 0x16
  1184  0036                     	ds	1
  1185  0037                     ___flmul@bexp:
  1186                           
  1187                           ; 1 bytes @ 0x17
  1188  0037                     	ds	1
  1189  0038                     ___flmul@prod:
  1190                           
  1191                           ; 4 bytes @ 0x18
  1192  0038                     	ds	4
  1193  003C                     ___flmul@temp:
  1194                           
  1195                           ; 2 bytes @ 0x1C
  1196  003C                     	ds	2
  1197  003E                     ?_fround:
  1198  003E                     ?_scale:	
  1199                           ; 4 bytes @ 0x1E
  1200                           
  1201  003E                     ?___fldiv:	
  1202                           ; 4 bytes @ 0x1E
  1203                           
  1204  003E                     ___fldiv@a:	
  1205                           ; 4 bytes @ 0x1E
  1206                           
  1207                           
  1208                           ; 4 bytes @ 0x1E
  1209  003E                     	ds	4
  1210  0042                     ??_fround:
  1211  0042                     ??_scale:	
  1212                           ; 1 bytes @ 0x22
  1213                           
  1214  0042                     ___fldiv@b:	
  1215                           ; 1 bytes @ 0x22
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x22
  1219  0042                     	ds	4
  1220  0046                     ??___fldiv:
  1221                           
  1222                           ; 1 bytes @ 0x26
  1223  0046                     	ds	3
  1224  0049                     _fround$957:
  1225                           
  1226                           ; 4 bytes @ 0x29
  1227  0049                     	ds	2
  1228  004B                     ___fldiv@rem:
  1229                           
  1230                           ; 4 bytes @ 0x2B
  1231  004B                     	ds	1
  1232  004C                     _scale$958:
  1233                           
  1234                           ; 4 bytes @ 0x2C
  1235  004C                     	ds	1
  1236  004D                     _fround$956:
  1237                           
  1238                           ; 4 bytes @ 0x2D
  1239  004D                     	ds	2
  1240  004F                     ___fldiv@sign:
  1241                           
  1242                           ; 1 bytes @ 0x2F
  1243  004F                     	ds	1
  1244  0050                     scale@scl:
  1245  0050                     ___fldiv@new_exp:	
  1246                           ; 1 bytes @ 0x30
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x30
  1250  0050                     	ds	1
  1251  0051                     ?___fltol:
  1252  0051                     fround@prec:	
  1253                           ; 4 bytes @ 0x31
  1254                           
  1255  0051                     ___fltol@f1:	
  1256                           ; 1 bytes @ 0x31
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0x31
  1260  0051                     	ds	1
  1261  0052                     ___fldiv@grs:
  1262                           
  1263                           ; 4 bytes @ 0x32
  1264  0052                     	ds	3
  1265  0055                     ??___fltol:
  1266                           
  1267                           ; 1 bytes @ 0x35
  1268  0055                     	ds	1
  1269  0056                     ___fldiv@bexp:
  1270                           
  1271                           ; 1 bytes @ 0x36
  1272  0056                     	ds	1
  1273  0057                     ___fldiv@aexp:
  1274                           
  1275                           ; 1 bytes @ 0x37
  1276  0057                     	ds	1
  1277  0058                     ?___fladd:
  1278  0058                     ___fladd@b:	
  1279                           ; 4 bytes @ 0x38
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0x38
  1283  0058                     	ds	2
  1284  005A                     ___fltol@sign1:
  1285                           
  1286                           ; 1 bytes @ 0x3A
  1287  005A                     	ds	1
  1288  005B                     ___fltol@exp1:
  1289                           
  1290                           ; 1 bytes @ 0x3B
  1291  005B                     	ds	1
  1292  005C                     ___fladd@a:
  1293                           
  1294                           ; 4 bytes @ 0x3C
  1295  005C                     	ds	4
  1296  0060                     ??___fladd:
  1297                           
  1298                           ; 1 bytes @ 0x40
  1299  0060                     	ds	8
  1300  0068                     ___fladd@signs:
  1301                           
  1302                           ; 1 bytes @ 0x48
  1303  0068                     	ds	1
  1304  0069                     ___fladd@aexp:
  1305                           
  1306                           ; 1 bytes @ 0x49
  1307  0069                     	ds	1
  1308  006A                     ___fladd@bexp:
  1309                           
  1310                           ; 1 bytes @ 0x4A
  1311  006A                     	ds	1
  1312  006B                     ___fladd@grs:
  1313                           
  1314                           ; 1 bytes @ 0x4B
  1315  006B                     	ds	1
  1316                           
  1317                           	psect	maintext
  1318  101C                     __pmaintext:	
  1319 ;;
  1320 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1321 ;;
  1322 ;; *************** function _main *****************
  1323 ;; Defined at:
  1324 ;;		line 67 in file "lab4master.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : B00/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1338 ;;      Params:         0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0
  1340 ;;      Temps:          0       0       5       0       0
  1341 ;;      Totals:         0       0       5       0       0
  1342 ;;Total ram usage:        5 bytes
  1343 ;; Hardware stack levels required when called:    4
  1344 ;; This function calls:
  1345 ;;		_I2C_Master_Read
  1346 ;;		_I2C_Master_Start
  1347 ;;		_I2C_Master_Stop
  1348 ;;		_I2C_Master_Write
  1349 ;;		_Lcd_Set_Cursor
  1350 ;;		_Lcd_Write_String
  1351 ;;		___fladd
  1352 ;;		___fldiv
  1353 ;;		___flmul
  1354 ;;		___xxtofl
  1355 ;;		_setup
  1356 ;;		_sprintf
  1357 ;; This function is called by:
  1358 ;;		Startup code after reset
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _main
  1364  101C                     _main:
  1365  101C                     l3790:	
  1366                           ;incstack = 0
  1367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1368                           
  1369                           
  1370                           ;lab4master.c: 68:     setup();
  1371  101C  160A  158A  21ED  160A  118A  	fcall	_setup
  1372  1021                     l3792:
  1373                           
  1374                           ;lab4master.c: 71:         I2C_Master_Start();
  1375  1021  160A  158A  20BB  160A  118A  	fcall	_I2C_Master_Start
  1376  1026                     l3794:
  1377                           
  1378                           ;lab4master.c: 72:         I2C_Master_Write(0x51);
  1379  1026  3051               	movlw	81
  1380  1027  00F0               	movwf	I2C_Master_Write@d
  1381  1028  3000               	movlw	0
  1382  1029  00F1               	movwf	I2C_Master_Write@d+1
  1383  102A  160A  158A  20CD  160A  118A  	fcall	_I2C_Master_Write
  1384  102F                     l3796:
  1385                           
  1386                           ;lab4master.c: 73:         s1 = I2C_Master_Read(0);
  1387  102F  3000               	movlw	0
  1388  1030  00F0               	movwf	I2C_Master_Read@a
  1389  1031  00F1               	movwf	I2C_Master_Read@a+1
  1390  1032  160A  158A  2187  160A  118A  	fcall	_I2C_Master_Read
  1391  1037  0870               	movf	?_I2C_Master_Read,w
  1392  1038  1683               	bsf	3,5	;RP0=1, select bank1
  1393  1039  1303               	bcf	3,6	;RP1=0, select bank1
  1394  103A  00CF               	movwf	??_main^(0+128)
  1395  103B  084F               	movf	??_main^(0+128),w
  1396  103C  00DD               	movwf	_s1^(0+128)
  1397  103D                     l3798:
  1398                           
  1399                           ;lab4master.c: 74:         I2C_Master_Stop();
  1400  103D  160A  158A  20C4  160A  118A  	fcall	_I2C_Master_Stop
  1401  1042                     l3800:
  1402                           
  1403                           ;lab4master.c: 75:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1404  1042  3082               	movlw	130
  1405  1043  1683               	bsf	3,5	;RP0=1, select bank1
  1406  1044  1303               	bcf	3,6	;RP1=0, select bank1
  1407  1045  00D0               	movwf	(??_main^(0+128)+1)
  1408  1046  30DD               	movlw	221
  1409  1047  00CF               	movwf	??_main^(0+128)
  1410  1048                     u6217:
  1411  1048  0BCF               	decfsz	??_main^(0+128),f
  1412  1049  2848               	goto	u6217
  1413  104A  0BD0               	decfsz	(??_main^(0+128)+1),f
  1414  104B  2848               	goto	u6217
  1415  104C                     l3802:
  1416                           
  1417                           ;lab4master.c: 77:         I2C_Master_Start();
  1418  104C  160A  158A  20BB  160A  118A  	fcall	_I2C_Master_Start
  1419  1051                     l3804:
  1420                           
  1421                           ;lab4master.c: 78:         I2C_Master_Write(0x61);
  1422  1051  3061               	movlw	97
  1423  1052  00F0               	movwf	I2C_Master_Write@d
  1424  1053  3000               	movlw	0
  1425  1054  00F1               	movwf	I2C_Master_Write@d+1
  1426  1055  160A  158A  20CD  160A  118A  	fcall	_I2C_Master_Write
  1427  105A                     l3806:
  1428                           
  1429                           ;lab4master.c: 79:         s2 = I2C_Master_Read(0);
  1430  105A  3000               	movlw	0
  1431  105B  00F0               	movwf	I2C_Master_Read@a
  1432  105C  00F1               	movwf	I2C_Master_Read@a+1
  1433  105D  160A  158A  2187  160A  118A  	fcall	_I2C_Master_Read
  1434  1062  0870               	movf	?_I2C_Master_Read,w
  1435  1063  1683               	bsf	3,5	;RP0=1, select bank1
  1436  1064  1303               	bcf	3,6	;RP1=0, select bank1
  1437  1065  00CF               	movwf	??_main^(0+128)
  1438  1066  084F               	movf	??_main^(0+128),w
  1439  1067  00DC               	movwf	_s2^(0+128)
  1440  1068                     l3808:
  1441                           
  1442                           ;lab4master.c: 80:         I2C_Master_Stop();
  1443  1068  160A  158A  20C4  160A  118A  	fcall	_I2C_Master_Stop
  1444  106D                     l3810:
  1445                           
  1446                           ;lab4master.c: 81:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1447  106D  3082               	movlw	130
  1448  106E  1683               	bsf	3,5	;RP0=1, select bank1
  1449  106F  1303               	bcf	3,6	;RP1=0, select bank1
  1450  1070  00D0               	movwf	(??_main^(0+128)+1)
  1451  1071  30DD               	movlw	221
  1452  1072  00CF               	movwf	??_main^(0+128)
  1453  1073                     u6227:
  1454  1073  0BCF               	decfsz	??_main^(0+128),f
  1455  1074  2873               	goto	u6227
  1456  1075  0BD0               	decfsz	(??_main^(0+128)+1),f
  1457  1076  2873               	goto	u6227
  1458  1077                     l3812:
  1459                           
  1460                           ;lab4master.c: 84:         I2C_Master_Start();
  1461  1077  160A  158A  20BB  160A  118A  	fcall	_I2C_Master_Start
  1462  107C                     l3814:
  1463                           
  1464                           ;lab4master.c: 85:         I2C_Master_Write(0x80);
  1465  107C  3080               	movlw	128
  1466  107D  00F0               	movwf	I2C_Master_Write@d
  1467  107E  3000               	movlw	0
  1468  107F  00F1               	movwf	I2C_Master_Write@d+1
  1469  1080  160A  158A  20CD  160A  118A  	fcall	_I2C_Master_Write
  1470  1085                     l3816:
  1471                           
  1472                           ;lab4master.c: 86:         I2C_Master_Write(0xF3);
  1473  1085  30F3               	movlw	243
  1474  1086  00F0               	movwf	I2C_Master_Write@d
  1475  1087  3000               	movlw	0
  1476  1088  00F1               	movwf	I2C_Master_Write@d+1
  1477  1089  160A  158A  20CD  160A  118A  	fcall	_I2C_Master_Write
  1478  108E                     l3818:
  1479                           
  1480                           ;lab4master.c: 87:         I2C_Master_Stop();
  1481  108E  160A  158A  20C4  160A  118A  	fcall	_I2C_Master_Stop
  1482  1093                     l3820:
  1483                           
  1484                           ;lab4master.c: 88:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1485  1093  3002               	movlw	2
  1486  1094  1683               	bsf	3,5	;RP0=1, select bank1
  1487  1095  1303               	bcf	3,6	;RP1=0, select bank1
  1488  1096  00D1               	movwf	(??_main^(0+128)+2)
  1489  1097  3004               	movlw	4
  1490  1098  00D0               	movwf	(??_main^(0+128)+1)
  1491  1099  30B9               	movlw	185
  1492  109A  00CF               	movwf	??_main^(0+128)
  1493  109B                     u6237:
  1494  109B  0BCF               	decfsz	??_main^(0+128),f
  1495  109C  289B               	goto	u6237
  1496  109D  0BD0               	decfsz	(??_main^(0+128)+1),f
  1497  109E  289B               	goto	u6237
  1498  109F  0BD1               	decfsz	(??_main^(0+128)+2),f
  1499  10A0  289B               	goto	u6237
  1500  10A1  28A2               	nop2
  1501  10A2                     l3822:
  1502                           
  1503                           ;lab4master.c: 90:         I2C_Master_Start();
  1504  10A2  160A  158A  20BB  160A  118A  	fcall	_I2C_Master_Start
  1505  10A7                     l3824:
  1506                           
  1507                           ;lab4master.c: 91:         I2C_Master_Write(0x81);
  1508  10A7  3081               	movlw	129
  1509  10A8  00F0               	movwf	I2C_Master_Write@d
  1510  10A9  3000               	movlw	0
  1511  10AA  00F1               	movwf	I2C_Master_Write@d+1
  1512  10AB  160A  158A  20CD  160A  118A  	fcall	_I2C_Master_Write
  1513  10B0                     l3826:
  1514                           
  1515                           ;lab4master.c: 92:         senms = I2C_Master_Read(0);
  1516  10B0  3000               	movlw	0
  1517  10B1  00F0               	movwf	I2C_Master_Read@a
  1518  10B2  00F1               	movwf	I2C_Master_Read@a+1
  1519  10B3  160A  158A  2187  160A  118A  	fcall	_I2C_Master_Read
  1520  10B8  0871               	movf	?_I2C_Master_Read+1,w
  1521  10B9  1683               	bsf	3,5	;RP0=1, select bank1
  1522  10BA  1303               	bcf	3,6	;RP1=0, select bank1
  1523  10BB  00DB               	movwf	(_senms+1)^(0+128)
  1524  10BC  0870               	movf	?_I2C_Master_Read,w
  1525  10BD  00DA               	movwf	_senms^(0+128)
  1526  10BE                     l3828:
  1527                           
  1528                           ;lab4master.c: 93:         sensorval = I2C_Master_Read(0);
  1529  10BE  3000               	movlw	0
  1530  10BF  00F0               	movwf	I2C_Master_Read@a
  1531  10C0  00F1               	movwf	I2C_Master_Read@a+1
  1532  10C1  160A  158A  2187  160A  118A  	fcall	_I2C_Master_Read
  1533  10C6  0871               	movf	?_I2C_Master_Read+1,w
  1534  10C7  1683               	bsf	3,5	;RP0=1, select bank1
  1535  10C8  1303               	bcf	3,6	;RP1=0, select bank1
  1536  10C9  00D9               	movwf	(_sensorval+1)^(0+128)
  1537  10CA  0870               	movf	?_I2C_Master_Read,w
  1538  10CB  00D8               	movwf	_sensorval^(0+128)
  1539  10CC                     l3830:
  1540                           
  1541                           ;lab4master.c: 94:         I2C_Master_Stop();
  1542  10CC  160A  158A  20C4  160A  118A  	fcall	_I2C_Master_Stop
  1543  10D1                     l3832:
  1544                           
  1545                           ;lab4master.c: 95:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1546  10D1  3082               	movlw	130
  1547  10D2  1683               	bsf	3,5	;RP0=1, select bank1
  1548  10D3  1303               	bcf	3,6	;RP1=0, select bank1
  1549  10D4  00D0               	movwf	(??_main^(0+128)+1)
  1550  10D5  30DD               	movlw	221
  1551  10D6  00CF               	movwf	??_main^(0+128)
  1552  10D7                     u6247:
  1553  10D7  0BCF               	decfsz	??_main^(0+128),f
  1554  10D8  28D7               	goto	u6247
  1555  10D9  0BD0               	decfsz	(??_main^(0+128)+1),f
  1556  10DA  28D7               	goto	u6247
  1557  10DB                     l3834:
  1558                           
  1559                           ;lab4master.c: 98:         sensorval = senms<<8;
  1560  10DB  1683               	bsf	3,5	;RP0=1, select bank1
  1561  10DC  1303               	bcf	3,6	;RP1=0, select bank1
  1562  10DD  085A               	movf	_senms^(0+128),w
  1563  10DE  00D0               	movwf	(??_main^(0+128)+1)
  1564  10DF  01CF               	clrf	??_main^(0+128)
  1565  10E0  084F               	movf	??_main^(0+128),w
  1566  10E1  00D8               	movwf	_sensorval^(0+128)
  1567  10E2  0850               	movf	(??_main+1)^(0+128),w
  1568  10E3  00D9               	movwf	(_sensorval+1)^(0+128)
  1569  10E4                     l3836:
  1570                           
  1571                           ;lab4master.c: 99:         sensorval += senms;
  1572  10E4  085A               	movf	_senms^(0+128),w
  1573  10E5  07D8               	addwf	_sensorval^(0+128),f
  1574  10E6  1803               	skipnc
  1575  10E7  0AD9               	incf	(_sensorval+1)^(0+128),f
  1576  10E8  085B               	movf	(_senms+1)^(0+128),w
  1577  10E9  07D9               	addwf	(_sensorval+1)^(0+128),f
  1578  10EA                     l3838:
  1579                           
  1580                           ;lab4master.c: 100:         sensorval &= ~0b11;
  1581  10EA  30FC               	movlw	252
  1582  10EB  05D8               	andwf	_sensorval^(0+128),f
  1583  10EC  30FF               	movlw	255
  1584  10ED  05D9               	andwf	(_sensorval+1)^(0+128),f
  1585  10EE                     l3840:
  1586                           
  1587                           ;lab4master.c: 101:         t = -46.85 +(175.72*sensorval/65536);
  1588  10EE  30C2               	movlw	194
  1589  10EF  1283               	bcf	3,5	;RP0=0, select bank0
  1590  10F0  1303               	bcf	3,6	;RP1=0, select bank0
  1591  10F1  00DB               	movwf	___fladd@b+3
  1592  10F2  303B               	movlw	59
  1593  10F3  00DA               	movwf	___fladd@b+2
  1594  10F4  3066               	movlw	102
  1595  10F5  00D9               	movwf	___fladd@b+1
  1596  10F6  3066               	movlw	102
  1597  10F7  00D8               	movwf	___fladd@b
  1598  10F8  3047               	movlw	71
  1599  10F9  00C1               	movwf	___fldiv@a+3
  1600  10FA  3080               	movlw	128
  1601  10FB  00C0               	movwf	___fldiv@a+2
  1602  10FC  3000               	movlw	0
  1603  10FD  00BF               	movwf	___fldiv@a+1
  1604  10FE  3000               	movlw	0
  1605  10FF  00BE               	movwf	___fldiv@a
  1606  1100  3043               	movlw	67
  1607  1101  00A7               	movwf	___flmul@b+3
  1608  1102  302F               	movlw	47
  1609  1103  00A6               	movwf	___flmul@b+2
  1610  1104  30B8               	movlw	184
  1611  1105  00A5               	movwf	___flmul@b+1
  1612  1106  3052               	movlw	82
  1613  1107  00A4               	movwf	___flmul@b
  1614  1108  1683               	bsf	3,5	;RP0=1, select bank1
  1615  1109  1303               	bcf	3,6	;RP1=0, select bank1
  1616  110A  0858               	movf	_sensorval^(0+128),w
  1617  110B  00F0               	movwf	___xxtofl@val
  1618  110C  0859               	movf	(_sensorval+1)^(0+128),w
  1619  110D  00F1               	movwf	___xxtofl@val+1
  1620  110E  01F2               	clrf	___xxtofl@val+2
  1621  110F  01F3               	clrf	___xxtofl@val+3
  1622  1110  3000               	movlw	0
  1623  1111  160A  158A  25CB  160A  118A  	fcall	___xxtofl
  1624  1116  0873               	movf	?___xxtofl+3,w
  1625  1117  1283               	bcf	3,5	;RP0=0, select bank0
  1626  1118  1303               	bcf	3,6	;RP1=0, select bank0
  1627  1119  00AB               	movwf	___flmul@a+3
  1628  111A  0872               	movf	?___xxtofl+2,w
  1629  111B  00AA               	movwf	___flmul@a+2
  1630  111C  0871               	movf	?___xxtofl+1,w
  1631  111D  00A9               	movwf	___flmul@a+1
  1632  111E  0870               	movf	?___xxtofl,w
  1633  111F  00A8               	movwf	___flmul@a
  1634  1120  120A  158A  249F  160A  118A  	fcall	___flmul
  1635  1125  1283               	bcf	3,5	;RP0=0, select bank0
  1636  1126  1303               	bcf	3,6	;RP1=0, select bank0
  1637  1127  0827               	movf	?___flmul+3,w
  1638  1128  00C5               	movwf	___fldiv@b+3
  1639  1129  0826               	movf	?___flmul+2,w
  1640  112A  00C4               	movwf	___fldiv@b+2
  1641  112B  0825               	movf	?___flmul+1,w
  1642  112C  00C3               	movwf	___fldiv@b+1
  1643  112D  0824               	movf	?___flmul,w
  1644  112E  00C2               	movwf	___fldiv@b
  1645  112F  160A  118A  2190  160A  118A  	fcall	___fldiv
  1646  1134  1283               	bcf	3,5	;RP0=0, select bank0
  1647  1135  1303               	bcf	3,6	;RP1=0, select bank0
  1648  1136  0841               	movf	?___fldiv+3,w
  1649  1137  00DF               	movwf	___fladd@a+3
  1650  1138  0840               	movf	?___fldiv+2,w
  1651  1139  00DE               	movwf	___fladd@a+2
  1652  113A  083F               	movf	?___fldiv+1,w
  1653  113B  00DD               	movwf	___fladd@a+1
  1654  113C  083E               	movf	?___fldiv,w
  1655  113D  00DC               	movwf	___fladd@a
  1656  113E  160A  118A  2578  160A  118A  	fcall	___fladd
  1657  1143  1283               	bcf	3,5	;RP0=0, select bank0
  1658  1144  1303               	bcf	3,6	;RP1=0, select bank0
  1659  1145  085B               	movf	?___fladd+3,w
  1660  1146  1683               	bsf	3,5	;RP0=1, select bank1
  1661  1147  1303               	bcf	3,6	;RP1=0, select bank1
  1662  1148  00D7               	movwf	(_t+3)^(0+128)
  1663  1149  1283               	bcf	3,5	;RP0=0, select bank0
  1664  114A  1303               	bcf	3,6	;RP1=0, select bank0
  1665  114B  085A               	movf	?___fladd+2,w
  1666  114C  1683               	bsf	3,5	;RP0=1, select bank1
  1667  114D  1303               	bcf	3,6	;RP1=0, select bank1
  1668  114E  00D6               	movwf	(_t+2)^(0+128)
  1669  114F  1283               	bcf	3,5	;RP0=0, select bank0
  1670  1150  1303               	bcf	3,6	;RP1=0, select bank0
  1671  1151  0859               	movf	?___fladd+1,w
  1672  1152  1683               	bsf	3,5	;RP0=1, select bank1
  1673  1153  1303               	bcf	3,6	;RP1=0, select bank1
  1674  1154  00D5               	movwf	(_t+1)^(0+128)
  1675  1155  1283               	bcf	3,5	;RP0=0, select bank0
  1676  1156  1303               	bcf	3,6	;RP1=0, select bank0
  1677  1157  0858               	movf	?___fladd,w
  1678  1158  1683               	bsf	3,5	;RP0=1, select bank1
  1679  1159  1303               	bcf	3,6	;RP1=0, select bank1
  1680  115A  00D4               	movwf	_t^(0+128)
  1681  115B                     l3842:
  1682                           
  1683                           ;lab4master.c: 103:         sprintf(volt, "%d   %d    %.0f  ", s1, s2, t);
  1684  115B  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1685  115C  00CF               	movwf	??_main^(0+128)
  1686  115D  084F               	movf	??_main^(0+128),w
  1687  115E  00A8               	movwf	sprintf@f^(0+128)
  1688  115F  085D               	movf	_s1^(0+128),w
  1689  1160  00D0               	movwf	(??_main+1)^(0+128)
  1690  1161  01D1               	clrf	((??_main+1)^(0+128)+1)
  1691  1162  0850               	movf	(??_main+1)^(0+128),w
  1692  1163  00A9               	movwf	(?_sprintf^(0+128)+1)
  1693  1164  0851               	movf	(??_main+2)^(0+128),w
  1694  1165  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1695  1166  085C               	movf	_s2^(0+128),w
  1696  1167  00D2               	movwf	(??_main+3)^(0+128)
  1697  1168  01D3               	clrf	((??_main+3)^(0+128)+1)
  1698  1169  0852               	movf	(??_main+3)^(0+128),w
  1699  116A  00AB               	movwf	(?_sprintf^(0+128)+3)
  1700  116B  0853               	movf	(??_main+4)^(0+128),w
  1701  116C  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  1702  116D  0857               	movf	(_t+3)^(0+128),w
  1703  116E  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1704  116F  0856               	movf	(_t+2)^(0+128),w
  1705  1170  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1706  1171  0855               	movf	(_t+1)^(0+128),w
  1707  1172  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1708  1173  0854               	movf	_t^(0+128),w
  1709  1174  00AD               	movwf	(?_sprintf^(0+128)+5)
  1710  1175  30DE               	movlw	(low (_volt| 0))& (0+255)
  1711  1176  120A  118A  206D  160A  118A  	fcall	_sprintf
  1712  117B                     l3844:
  1713                           
  1714                           ;lab4master.c: 104:         Lcd_Set_Cursor(2,1);
  1715  117B  01F4               	clrf	Lcd_Set_Cursor@b
  1716  117C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1717  117D  3002               	movlw	2
  1718  117E  160A  158A  2117  160A  118A  	fcall	_Lcd_Set_Cursor
  1719  1183                     l3846:
  1720                           
  1721                           ;lab4master.c: 105:         Lcd_Write_String(volt);
  1722  1183  30DE               	movlw	(low (_volt| 0))& (0+255)
  1723  1184  00F3               	movwf	Lcd_Write_String@a
  1724  1185  3000               	movlw	0
  1725  1186  00F4               	movwf	Lcd_Write_String@a+1
  1726  1187  160A  158A  229F  160A  118A  	fcall	_Lcd_Write_String
  1727  118C  2821               	goto	l3792
  1728  118D  120A  118A  2800   	ljmp	start
  1729  1190                     __end_of_main:
  1730                           
  1731                           	psect	text1
  1732  006D                     __ptext1:	
  1733 ;; *************** function _sprintf *****************
  1734 ;; Defined at:
  1735 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  sp              1    wreg     PTR unsigned char 
  1738 ;;		 -> volt(16), 
  1739 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1740 ;;		 -> STR_1(18), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1743 ;;		 -> volt(16), 
  1744 ;;  fval            4   40[BANK1 ] PTR unsigned char 
  1745 ;;  val             4   35[BANK1 ] unsigned long 
  1746 ;;  tmpval          4   31[BANK1 ] struct .
  1747 ;;  prec            2   44[BANK1 ] int 
  1748 ;;  eexp            2   29[BANK1 ] int 
  1749 ;;  flag            2   27[BANK1 ] unsigned short 
  1750 ;;  cp              2    0        PTR const unsigned char 
  1751 ;;  len             2    0        unsigned int 
  1752 ;;  width           2    0        int 
  1753 ;;  c               1   46[BANK1 ] unsigned char 
  1754 ;;  ap              1   26[BANK1 ] PTR void [1]
  1755 ;;		 -> ?_sprintf(2), 
  1756 ;;  d               1    0        unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    8[BANK1 ] int 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       9       0       0
  1767 ;;      Locals:         0       0      25       0       0
  1768 ;;      Temps:          0       0       5       0       0
  1769 ;;      Totals:         0       0      39       0       0
  1770 ;;Total ram usage:       39 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    3
  1773 ;; This function calls:
  1774 ;;		___awdiv
  1775 ;;		___fladd
  1776 ;;		___fleq
  1777 ;;		___flge
  1778 ;;		___flmul
  1779 ;;		___flneg
  1780 ;;		___flsub
  1781 ;;		___fltol
  1782 ;;		___lldiv
  1783 ;;		___llmod
  1784 ;;		___wmul
  1785 ;;		___xxtofl
  1786 ;;		__div_to_l_
  1787 ;;		__tdiv_to_l_
  1788 ;;		_fround
  1789 ;;		_isdigit
  1790 ;;		_scale
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _sprintf
  1798  006D                     _sprintf:
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1802                           ;sprintf@sp stored from wreg
  1803  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1804  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1805  006F  00C7               	movwf	sprintf@sp^(0+128)
  1806  0070                     l3410:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1809  0070  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1810  0071  00B1               	movwf	??_sprintf^(0+128)
  1811  0072  0831               	movf	??_sprintf^(0+128),w
  1812  0073  00BA               	movwf	sprintf@ap^(0+128)
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1815  0074  2FD9               	goto	l3636
  1816  0075                     l3412:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1819  0075  3025               	movlw	37
  1820  0076  064E               	xorwf	sprintf@c^(0+128),w
  1821  0077  1903               	btfsc	3,2
  1822  0078  287A               	goto	u5511
  1823  0079  287B               	goto	u5510
  1824  007A                     u5511:
  1825  007A  2887               	goto	l3418
  1826  007B                     u5510:
  1827  007B                     l3414:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1830  007B  084E               	movf	sprintf@c^(0+128),w
  1831  007C  00B1               	movwf	??_sprintf^(0+128)
  1832  007D  0847               	movf	sprintf@sp^(0+128),w
  1833  007E  0084               	movwf	4
  1834  007F  0831               	movf	??_sprintf^(0+128),w
  1835  0080  1383               	bcf	3,7	;select IRP bank0
  1836  0081  0080               	movwf	0
  1837  0082                     l3416:
  1838  0082  3001               	movlw	1
  1839  0083  00B1               	movwf	??_sprintf^(0+128)
  1840  0084  0831               	movf	??_sprintf^(0+128),w
  1841  0085  07C7               	addwf	sprintf@sp^(0+128),f
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1844  0086  2FD9               	goto	l3636
  1845  0087                     l3418:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1848  0087  01BB               	clrf	sprintf@flag^(0+128)
  1849  0088  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1850  0089                     l3420:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1853  0089  0828               	movf	sprintf@f^(0+128),w
  1854  008A  0084               	movwf	4
  1855  008B  120A  158A  200A  120A  118A  	fcall	stringdir
  1856  0090  3A2E               	xorlw	46
  1857  0091  1D03               	skipz
  1858  0092  2894               	goto	u5521
  1859  0093  2895               	goto	u5520
  1860  0094                     u5521:
  1861  0094  28DA               	goto	l3436
  1862  0095                     u5520:
  1863  0095                     l3422:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1866  0095  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1867  0096                     l3424:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1870  0096  3001               	movlw	1
  1871  0097  00B1               	movwf	??_sprintf^(0+128)
  1872  0098  0831               	movf	??_sprintf^(0+128),w
  1873  0099  07A8               	addwf	sprintf@f^(0+128),f
  1874  009A                     l3426:
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1877  009A  01CC               	clrf	sprintf@prec^(0+128)
  1878  009B  01CD               	clrf	(sprintf@prec+1)^(0+128)
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1881  009C  28C9               	goto	l3434
  1882  009D                     l3428:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1885  009D  300A               	movlw	10
  1886  009E  00F0               	movwf	___wmul@multiplier
  1887  009F  3000               	movlw	0
  1888  00A0  00F1               	movwf	___wmul@multiplier+1
  1889  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1890  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1891  00A3  084D               	movf	(sprintf@prec+1)^(0+128),w
  1892  00A4  00F3               	movwf	___wmul@multiplicand+1
  1893  00A5  084C               	movf	sprintf@prec^(0+128),w
  1894  00A6  00F2               	movwf	___wmul@multiplicand
  1895  00A7  160A  158A  213B  120A  118A  	fcall	___wmul
  1896  00AC  0871               	movf	?___wmul+1,w
  1897  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  1898  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  1899  00AF  00CD               	movwf	(sprintf@prec+1)^(0+128)
  1900  00B0  0870               	movf	?___wmul,w
  1901  00B1  00CC               	movwf	sprintf@prec^(0+128)
  1902  00B2                     l3430:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1905  00B2  0828               	movf	sprintf@f^(0+128),w
  1906  00B3  0084               	movwf	4
  1907  00B4  120A  158A  200A  120A  118A  	fcall	stringdir
  1908  00B9  3ED0               	addlw	208
  1909  00BA  00B1               	movwf	??_sprintf^(0+128)
  1910  00BB  30FF               	movlw	255
  1911  00BC  1803               	skipnc
  1912  00BD  3000               	movlw	0
  1913  00BE  00B2               	movwf	(??_sprintf^(0+128)+1)
  1914  00BF  0831               	movf	??_sprintf^(0+128),w
  1915  00C0  07CC               	addwf	sprintf@prec^(0+128),f
  1916  00C1  1803               	skipnc
  1917  00C2  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  1918  00C3  0832               	movf	(??_sprintf+1)^(0+128),w
  1919  00C4  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  1920  00C5                     l3432:
  1921  00C5  3001               	movlw	1
  1922  00C6  00B1               	movwf	??_sprintf^(0+128)
  1923  00C7  0831               	movf	??_sprintf^(0+128),w
  1924  00C8  07A8               	addwf	sprintf@f^(0+128),f
  1925  00C9                     l3434:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1928  00C9  0828               	movf	sprintf@f^(0+128),w
  1929  00CA  0084               	movwf	4
  1930  00CB  120A  158A  200A  120A  118A  	fcall	stringdir
  1931  00D0  160A  158A  20EF  120A  118A  	fcall	_isdigit
  1932  00D5  1803               	btfsc	3,0
  1933  00D6  28D8               	goto	u5531
  1934  00D7  28D9               	goto	u5530
  1935  00D8                     u5531:
  1936  00D8  289D               	goto	l3428
  1937  00D9                     u5530:
  1938  00D9  28E0               	goto	l3442
  1939  00DA                     l3436:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1942  00DA  01CC               	clrf	sprintf@prec^(0+128)
  1943  00DB  01CD               	clrf	(sprintf@prec+1)^(0+128)
  1944  00DC                     l3438:
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1947  00DC  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1948  00DD  28E0               	goto	l3442
  1949  00DE                     l321:	
  1950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1951                           
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1954  00DE  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1957  00DF  2902               	goto	l3444
  1958  00E0                     l3442:
  1959  00E0  3001               	movlw	1
  1960  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1961  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1962  00E3  07A8               	addwf	sprintf@f^(0+128),f
  1963  00E4  30FF               	movlw	-1
  1964  00E5  0728               	addwf	sprintf@f^(0+128),w
  1965  00E6  0084               	movwf	4
  1966  00E7  120A  158A  200A  120A  118A  	fcall	stringdir
  1967  00EC  00CE               	movwf	sprintf@c^(0+128)
  1968  00ED  00B1               	movwf	??_sprintf^(0+128)
  1969  00EE  01B2               	clrf	(??_sprintf^(0+128)+1)
  1970                           
  1971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1972                           ; Switch size 1, requested type "simple"
  1973                           ; Number of cases is 1, Range of values is 0 to 0
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte            4     3 (average)
  1977                           ; direct_byte           11     8 (fixed)
  1978                           ; jumptable            260     6 (fixed)
  1979                           ;	Chosen strategy is simple_byte
  1980  00EF  0832               	movf	(??_sprintf+1)^(0+128),w
  1981  00F0  3A00               	xorlw	0	; case 0
  1982  00F1  1903               	skipnz
  1983  00F2  28F4               	goto	l3888
  1984  00F3  2FD9               	goto	l3636
  1985  00F4                     l3888:
  1986                           
  1987                           ; Switch size 1, requested type "simple"
  1988                           ; Number of cases is 4, Range of values is 0 to 105
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte           13     7 (average)
  1992                           ; jumptable            260     6 (fixed)
  1993                           ;	Chosen strategy is simple_byte
  1994  00F4  0831               	movf	??_sprintf^(0+128),w
  1995  00F5  3A00               	xorlw	0	; case 0
  1996  00F6  1903               	skipnz
  1997  00F7  2FEB               	goto	l3638
  1998  00F8  3A64               	xorlw	100	; case 100
  1999  00F9  1903               	skipnz
  2000  00FA  2902               	goto	l3444
  2001  00FB  3A02               	xorlw	2	; case 102
  2002  00FC  1903               	skipnz
  2003  00FD  28DE               	goto	l321
  2004  00FE  3A0F               	xorlw	15	; case 105
  2005  00FF  1903               	skipnz
  2006  0100  2902               	goto	l3444
  2007  0101  2FD9               	goto	l3636
  2008  0102                     l3444:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2011  0102  3000               	movlw	0
  2012  0103  053B               	andwf	sprintf@flag^(0+128),w
  2013  0104  00B1               	movwf	??_sprintf^(0+128)
  2014  0105  3007               	movlw	7
  2015  0106  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2016  0107  00B2               	movwf	(??_sprintf+1)^(0+128)
  2017  0108  0831               	movf	??_sprintf^(0+128),w
  2018  0109  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2019  010A  1903               	btfsc	3,2
  2020  010B  290D               	goto	u5541
  2021  010C  290E               	goto	u5540
  2022  010D                     u5541:
  2023  010D  2EB1               	goto	l3586
  2024  010E                     u5540:
  2025  010E                     l3446:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2028  010E  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2029  010F  2911               	goto	u5551
  2030  0110  2912               	goto	u5550
  2031  0111                     u5551:
  2032  0111  2916               	goto	l3450
  2033  0112                     u5550:
  2034  0112                     l3448:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2037  0112  3006               	movlw	6
  2038  0113  00CC               	movwf	sprintf@prec^(0+128)
  2039  0114  3000               	movlw	0
  2040  0115  00CD               	movwf	(sprintf@prec^(0+128)+1)
  2041  0116                     l3450:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2044  0116  083A               	movf	sprintf@ap^(0+128),w
  2045  0117  0084               	movwf	4
  2046  0118  1383               	bcf	3,7	;select IRP bank0
  2047  0119  0800               	movf	0,w
  2048  011A  00C8               	movwf	sprintf@fval^(0+128)
  2049  011B  0A84               	incf	4,f
  2050  011C  0800               	movf	0,w
  2051  011D  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2052  011E  0A84               	incf	4,f
  2053  011F  0800               	movf	0,w
  2054  0120  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2055  0121  0A84               	incf	4,f
  2056  0122  0800               	movf	0,w
  2057  0123  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2058  0124                     l3452:
  2059  0124  3004               	movlw	4
  2060  0125  00B1               	movwf	??_sprintf^(0+128)
  2061  0126  0831               	movf	??_sprintf^(0+128),w
  2062  0127  07BA               	addwf	sprintf@ap^(0+128),f
  2063  0128                     l3454:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2066  0128  084B               	movf	(sprintf@fval+3)^(0+128),w
  2067  0129  00F3               	movwf	___flge@ff1+3
  2068  012A  084A               	movf	(sprintf@fval+2)^(0+128),w
  2069  012B  00F2               	movwf	___flge@ff1+2
  2070  012C  0849               	movf	(sprintf@fval+1)^(0+128),w
  2071  012D  00F1               	movwf	___flge@ff1+1
  2072  012E  0848               	movf	sprintf@fval^(0+128),w
  2073  012F  00F0               	movwf	___flge@ff1
  2074  0130  3000               	movlw	0
  2075  0131  00F7               	movwf	___flge@ff2+3
  2076  0132  3000               	movlw	0
  2077  0133  00F6               	movwf	___flge@ff2+2
  2078  0134  3000               	movlw	0
  2079  0135  00F5               	movwf	___flge@ff2+1
  2080  0136  3000               	movlw	0
  2081  0137  00F4               	movwf	___flge@ff2
  2082  0138  160A  158A  2529  120A  118A  	fcall	___flge
  2083  013D  1803               	btfsc	3,0
  2084  013E  2940               	goto	u5561
  2085  013F  2941               	goto	u5560
  2086  0140                     u5561:
  2087  0140  295E               	goto	l3460
  2088  0141                     u5560:
  2089  0141                     l3456:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2092  0141  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0142  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0143  084B               	movf	(sprintf@fval+3)^(0+128),w
  2095  0144  00F3               	movwf	___flneg@f1+3
  2096  0145  084A               	movf	(sprintf@fval+2)^(0+128),w
  2097  0146  00F2               	movwf	___flneg@f1+2
  2098  0147  0849               	movf	(sprintf@fval+1)^(0+128),w
  2099  0148  00F1               	movwf	___flneg@f1+1
  2100  0149  0848               	movf	sprintf@fval^(0+128),w
  2101  014A  00F0               	movwf	___flneg@f1
  2102  014B  160A  158A  20D7  120A  118A  	fcall	___flneg
  2103  0150  0873               	movf	?___flneg+3,w
  2104  0151  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0152  1303               	bcf	3,6	;RP1=0, select bank1
  2106  0153  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2107  0154  0872               	movf	?___flneg+2,w
  2108  0155  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2109  0156  0871               	movf	?___flneg+1,w
  2110  0157  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2111  0158  0870               	movf	?___flneg,w
  2112  0159  00C8               	movwf	sprintf@fval^(0+128)
  2113  015A                     l3458:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2116  015A  3003               	movlw	3
  2117  015B  04BB               	iorwf	sprintf@flag^(0+128),f
  2118  015C  3000               	movlw	0
  2119  015D  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2120  015E                     l3460:
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2123  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2124  015F  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0160  01BD               	clrf	sprintf@eexp^(0+128)
  2126  0161  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2127  0162                     l3462:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2130  0162  084B               	movf	(sprintf@fval+3)^(0+128),w
  2131  0163  00F3               	movwf	___fleq@ff1+3
  2132  0164  084A               	movf	(sprintf@fval+2)^(0+128),w
  2133  0165  00F2               	movwf	___fleq@ff1+2
  2134  0166  0849               	movf	(sprintf@fval+1)^(0+128),w
  2135  0167  00F1               	movwf	___fleq@ff1+1
  2136  0168  0848               	movf	sprintf@fval^(0+128),w
  2137  0169  00F0               	movwf	___fleq@ff1
  2138  016A  3000               	movlw	0
  2139  016B  00F7               	movwf	___fleq@ff2+3
  2140  016C  3000               	movlw	0
  2141  016D  00F6               	movwf	___fleq@ff2+2
  2142  016E  3000               	movlw	0
  2143  016F  00F5               	movwf	___fleq@ff2+1
  2144  0170  3000               	movlw	0
  2145  0171  00F4               	movwf	___fleq@ff2
  2146  0172  160A  158A  2325  120A  118A  	fcall	___fleq
  2147  0177  1803               	btfsc	3,0
  2148  0178  297A               	goto	u5571
  2149  0179  297B               	goto	u5570
  2150  017A                     u5571:
  2151  017A  2A6B               	goto	l3488
  2152  017B                     u5570:
  2153  017B                     l3464:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2156  017B  1003               	clrc
  2157  017C  1683               	bsf	3,5	;RP0=1, select bank1
  2158  017D  1303               	bcf	3,6	;RP1=0, select bank1
  2159  017E  0D4A               	rlf	(sprintf@fval+2)^(0+128),w
  2160  017F  0D4B               	rlf	(sprintf@fval+3)^(0+128),w
  2161  0180  3E82               	addlw	130
  2162  0181  00BD               	movwf	sprintf@eexp^(0+128)
  2163  0182  30FF               	movlw	255
  2164  0183  1803               	skipnc
  2165  0184  3000               	movlw	0
  2166  0185  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2167  0186                     l3466:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2170  0186  30FF               	movlw	255
  2171  0187  07BD               	addwf	sprintf@eexp^(0+128),f
  2172  0188  1803               	skipnc
  2173  0189  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2174  018A  30FF               	movlw	255
  2175  018B  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2176  018C                     l3468:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2179  018C  3003               	movlw	3
  2180  018D  00F0               	movwf	___wmul@multiplier
  2181  018E  3000               	movlw	0
  2182  018F  00F1               	movwf	___wmul@multiplier+1
  2183  0190  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2184  0191  00F3               	movwf	___wmul@multiplicand+1
  2185  0192  083D               	movf	sprintf@eexp^(0+128),w
  2186  0193  00F2               	movwf	___wmul@multiplicand
  2187  0194  160A  158A  213B  120A  118A  	fcall	___wmul
  2188  0199  0871               	movf	?___wmul+1,w
  2189  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2190  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2191  019C  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2192  019D  0870               	movf	?___wmul,w
  2193  019E  00BD               	movwf	sprintf@eexp^(0+128)
  2194  019F                     l3470:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2197  019F  300A               	movlw	10
  2198  01A0  00F7               	movwf	___awdiv@divisor
  2199  01A1  3000               	movlw	0
  2200  01A2  00F8               	movwf	___awdiv@divisor+1
  2201  01A3  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2202  01A4  00FA               	movwf	___awdiv@dividend+1
  2203  01A5  083D               	movf	sprintf@eexp^(0+128),w
  2204  01A6  00F9               	movwf	___awdiv@dividend
  2205  01A7  120A  118A  2004  120A  118A  	fcall	___awdiv
  2206  01AC  0878               	movf	?___awdiv+1,w
  2207  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2208  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2209  01AF  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2210  01B0  0877               	movf	?___awdiv,w
  2211  01B1  00BD               	movwf	sprintf@eexp^(0+128)
  2212  01B2                     l3472:
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2215  01B2  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2216  01B3  29B5               	goto	u5581
  2217  01B4  29B6               	goto	u5580
  2218  01B5                     u5581:
  2219  01B5  29BC               	goto	l3476
  2220  01B6                     u5580:
  2221  01B6                     l3474:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2224  01B6  30FF               	movlw	255
  2225  01B7  07BD               	addwf	sprintf@eexp^(0+128),f
  2226  01B8  1803               	skipnc
  2227  01B9  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2228  01BA  30FF               	movlw	255
  2229  01BB  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2230  01BC                     l3476:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2233  01BC  033D               	decf	sprintf@eexp^(0+128),w
  2234  01BD  3AFF               	xorlw	255
  2235  01BE  120A  158A  2140  120A  118A  	fcall	_scale
  2236  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2237  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2238  01C5  0841               	movf	?_scale+3,w
  2239  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2240  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2241  01C8  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2242  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2243  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2244  01CB  0840               	movf	?_scale+2,w
  2245  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2246  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2247  01CE  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2248  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2249  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2250  01D1  083F               	movf	?_scale+1,w
  2251  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2252  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2253  01D4  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2254  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2255  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2256  01D7  083E               	movf	?_scale,w
  2257  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2258  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2259  01DA  00BF               	movwf	sprintf@tmpval^(0+128)
  2260  01DB                     l3478:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2263  01DB  084B               	movf	(sprintf@fval+3)^(0+128),w
  2264  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2265  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2266  01DE  00A7               	movwf	___flmul@b+3
  2267  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2268  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2269  01E1  084A               	movf	(sprintf@fval+2)^(0+128),w
  2270  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2271  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2272  01E4  00A6               	movwf	___flmul@b+2
  2273  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2274  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2275  01E7  0849               	movf	(sprintf@fval+1)^(0+128),w
  2276  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2277  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2278  01EA  00A5               	movwf	___flmul@b+1
  2279  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2280  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2281  01ED  0848               	movf	sprintf@fval^(0+128),w
  2282  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2283  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2284  01F0  00A4               	movwf	___flmul@b
  2285  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2286  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  2287  01F3  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2288  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2289  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2290  01F6  00AB               	movwf	___flmul@a+3
  2291  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  2292  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  2293  01F9  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2294  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2295  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2296  01FC  00AA               	movwf	___flmul@a+2
  2297  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2298  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2299  01FF  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2300  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0202  00A9               	movwf	___flmul@a+1
  2303  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2304  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0205  083F               	movf	sprintf@tmpval^(0+128),w
  2306  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0208  00A8               	movwf	___flmul@a
  2309  0209  120A  158A  249F  120A  118A  	fcall	___flmul
  2310  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2311  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0210  0827               	movf	?___flmul+3,w
  2313  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2315  0213  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2316  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0216  0826               	movf	?___flmul+2,w
  2319  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2321  0219  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2322  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2323  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2324  021C  0825               	movf	?___flmul+1,w
  2325  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2326  021E  1303               	bcf	3,6	;RP1=0, select bank1
  2327  021F  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2328  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0222  0824               	movf	?___flmul,w
  2331  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0224  1303               	bcf	3,6	;RP1=0, select bank1
  2333  0225  00BF               	movwf	sprintf@tmpval^(0+128)
  2334  0226                     l3480:
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2337  0226  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2338  0227  00F3               	movwf	___flge@ff1+3
  2339  0228  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2340  0229  00F2               	movwf	___flge@ff1+2
  2341  022A  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2342  022B  00F1               	movwf	___flge@ff1+1
  2343  022C  083F               	movf	sprintf@tmpval^(0+128),w
  2344  022D  00F0               	movwf	___flge@ff1
  2345  022E  303F               	movlw	63
  2346  022F  00F7               	movwf	___flge@ff2+3
  2347  0230  3080               	movlw	128
  2348  0231  00F6               	movwf	___flge@ff2+2
  2349  0232  3000               	movlw	0
  2350  0233  00F5               	movwf	___flge@ff2+1
  2351  0234  3000               	movlw	0
  2352  0235  00F4               	movwf	___flge@ff2
  2353  0236  160A  158A  2529  120A  118A  	fcall	___flge
  2354  023B  1803               	btfsc	3,0
  2355  023C  2A3E               	goto	u5591
  2356  023D  2A3F               	goto	u5590
  2357  023E                     u5591:
  2358  023E  2A48               	goto	l3484
  2359  023F                     u5590:
  2360  023F                     l3482:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2363  023F  30FF               	movlw	255
  2364  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0242  07BD               	addwf	sprintf@eexp^(0+128),f
  2367  0243  1803               	skipnc
  2368  0244  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2369  0245  30FF               	movlw	255
  2370  0246  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2371  0247  2A6B               	goto	l3488
  2372  0248                     l3484:
  2373  0248  1683               	bsf	3,5	;RP0=1, select bank1
  2374  0249  1303               	bcf	3,6	;RP1=0, select bank1
  2375  024A  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2376  024B  00F3               	movwf	___flge@ff1+3
  2377  024C  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2378  024D  00F2               	movwf	___flge@ff1+2
  2379  024E  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2380  024F  00F1               	movwf	___flge@ff1+1
  2381  0250  083F               	movf	sprintf@tmpval^(0+128),w
  2382  0251  00F0               	movwf	___flge@ff1
  2383  0252  3041               	movlw	65
  2384  0253  00F7               	movwf	___flge@ff2+3
  2385  0254  3020               	movlw	32
  2386  0255  00F6               	movwf	___flge@ff2+2
  2387  0256  3000               	movlw	0
  2388  0257  00F5               	movwf	___flge@ff2+1
  2389  0258  3000               	movlw	0
  2390  0259  00F4               	movwf	___flge@ff2
  2391  025A  160A  158A  2529  120A  118A  	fcall	___flge
  2392  025F  1C03               	btfss	3,0
  2393  0260  2A62               	goto	u5601
  2394  0261  2A63               	goto	u5600
  2395  0262                     u5601:
  2396  0262  2A6B               	goto	l3488
  2397  0263                     u5600:
  2398  0263                     l3486:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2401  0263  3001               	movlw	1
  2402  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0266  07BD               	addwf	sprintf@eexp^(0+128),f
  2405  0267  1803               	skipnc
  2406  0268  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2407  0269  3000               	movlw	0
  2408  026A  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2409  026B                     l3488:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2412  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2413  026C  1303               	bcf	3,6	;RP1=0, select bank1
  2414  026D  084D               	movf	(sprintf@prec+1)^(0+128),w
  2415  026E  3A80               	xorlw	128
  2416  026F  00FF               	movwf	btemp+1
  2417  0270  3080               	movlw	128
  2418  0271  027F               	subwf	btemp+1,w
  2419  0272  1D03               	skipz
  2420  0273  2A76               	goto	u5615
  2421  0274  300D               	movlw	13
  2422  0275  024C               	subwf	sprintf@prec^(0+128),w
  2423  0276                     u5615:
  2424  0276  1803               	skipnc
  2425  0277  2A79               	goto	u5611
  2426  0278  2A7A               	goto	u5610
  2427  0279                     u5611:
  2428  0279  2AC1               	goto	l3492
  2429  027A                     u5610:
  2430  027A                     l3490:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2433  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2434  027B  1303               	bcf	3,6	;RP1=0, select bank1
  2435  027C  084C               	movf	sprintf@prec^(0+128),w
  2436  027D  160A  118A  236D  120A  118A  	fcall	_fround
  2437  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0284  0841               	movf	?_fround+3,w
  2440  0285  00DB               	movwf	___fladd@b+3
  2441  0286  0840               	movf	?_fround+2,w
  2442  0287  00DA               	movwf	___fladd@b+2
  2443  0288  083F               	movf	?_fround+1,w
  2444  0289  00D9               	movwf	___fladd@b+1
  2445  028A  083E               	movf	?_fround,w
  2446  028B  00D8               	movwf	___fladd@b
  2447  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2448  028D  1303               	bcf	3,6	;RP1=0, select bank1
  2449  028E  084B               	movf	(sprintf@fval+3)^(0+128),w
  2450  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0291  00DF               	movwf	___fladd@a+3
  2453  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0293  1303               	bcf	3,6	;RP1=0, select bank1
  2455  0294  084A               	movf	(sprintf@fval+2)^(0+128),w
  2456  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0297  00DE               	movwf	___fladd@a+2
  2459  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2461  029A  0849               	movf	(sprintf@fval+1)^(0+128),w
  2462  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2463  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2464  029D  00DD               	movwf	___fladd@a+1
  2465  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2466  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2467  02A0  0848               	movf	sprintf@fval^(0+128),w
  2468  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2469  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2470  02A3  00DC               	movwf	___fladd@a
  2471  02A4  160A  118A  2578  120A  118A  	fcall	___fladd
  2472  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2473  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2474  02AB  085B               	movf	?___fladd+3,w
  2475  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2476  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2477  02AE  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2478  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2479  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2480  02B1  085A               	movf	?___fladd+2,w
  2481  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2482  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2483  02B4  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2484  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2485  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2486  02B7  0859               	movf	?___fladd+1,w
  2487  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2488  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2489  02BA  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2490  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2491  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2492  02BD  0858               	movf	?___fladd,w
  2493  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2494  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2495  02C0  00C8               	movwf	sprintf@fval^(0+128)
  2496  02C1                     l3492:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2499  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2500  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2501  02C3  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2502  02C4  3A80               	xorlw	128
  2503  02C5  00FF               	movwf	btemp+1
  2504  02C6  3080               	movlw	128
  2505  02C7  027F               	subwf	btemp+1,w
  2506  02C8  1D03               	skipz
  2507  02C9  2ACC               	goto	u5625
  2508  02CA  300A               	movlw	10
  2509  02CB  023D               	subwf	sprintf@eexp^(0+128),w
  2510  02CC                     u5625:
  2511  02CC  1803               	skipnc
  2512  02CD  2ACF               	goto	u5621
  2513  02CE  2AD0               	goto	u5620
  2514  02CF                     u5621:
  2515  02CF  2B21               	goto	l3500
  2516  02D0                     u5620:
  2517  02D0                     l3494:
  2518  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2519  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2520  02D2  084B               	movf	(sprintf@fval+3)^(0+128),w
  2521  02D3  00F3               	movwf	___fleq@ff1+3
  2522  02D4  084A               	movf	(sprintf@fval+2)^(0+128),w
  2523  02D5  00F2               	movwf	___fleq@ff1+2
  2524  02D6  0849               	movf	(sprintf@fval+1)^(0+128),w
  2525  02D7  00F1               	movwf	___fleq@ff1+1
  2526  02D8  0848               	movf	sprintf@fval^(0+128),w
  2527  02D9  00F0               	movwf	___fleq@ff1
  2528  02DA  3000               	movlw	0
  2529  02DB  00F7               	movwf	___fleq@ff2+3
  2530  02DC  3000               	movlw	0
  2531  02DD  00F6               	movwf	___fleq@ff2+2
  2532  02DE  3000               	movlw	0
  2533  02DF  00F5               	movwf	___fleq@ff2+1
  2534  02E0  3000               	movlw	0
  2535  02E1  00F4               	movwf	___fleq@ff2
  2536  02E2  160A  158A  2325  120A  118A  	fcall	___fleq
  2537  02E7  1803               	btfsc	3,0
  2538  02E8  2AEA               	goto	u5631
  2539  02E9  2AEB               	goto	u5630
  2540  02EA                     u5631:
  2541  02EA  2B93               	goto	l3514
  2542  02EB                     u5630:
  2543  02EB                     l3496:
  2544  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2545  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2546  02ED  084B               	movf	(sprintf@fval+3)^(0+128),w
  2547  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2548  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2549  02F0  00D4               	movwf	___fltol@f1+3
  2550  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2551  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2552  02F3  084A               	movf	(sprintf@fval+2)^(0+128),w
  2553  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2554  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2555  02F6  00D3               	movwf	___fltol@f1+2
  2556  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2557  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2558  02F9  0849               	movf	(sprintf@fval+1)^(0+128),w
  2559  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2560  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2561  02FC  00D2               	movwf	___fltol@f1+1
  2562  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2563  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2564  02FF  0848               	movf	sprintf@fval^(0+128),w
  2565  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0302  00D1               	movwf	___fltol@f1
  2568  0303  120A  158A  20C4  120A  118A  	fcall	___fltol
  2569  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2571  030A  0854               	movf	?___fltol+3,w
  2572  030B  0453               	iorwf	?___fltol+2,w
  2573  030C  0452               	iorwf	?___fltol+1,w
  2574  030D  0451               	iorwf	?___fltol,w
  2575  030E  1D03               	skipz
  2576  030F  2B11               	goto	u5641
  2577  0310  2B12               	goto	u5640
  2578  0311                     u5641:
  2579  0311  2B93               	goto	l3514
  2580  0312                     u5640:
  2581  0312                     l3498:
  2582  0312  1683               	bsf	3,5	;RP0=1, select bank1
  2583  0313  1303               	bcf	3,6	;RP1=0, select bank1
  2584  0314  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2585  0315  3A80               	xorlw	128
  2586  0316  00FF               	movwf	btemp+1
  2587  0317  3080               	movlw	128
  2588  0318  027F               	subwf	btemp+1,w
  2589  0319  1D03               	skipz
  2590  031A  2B1D               	goto	u5655
  2591  031B  3002               	movlw	2
  2592  031C  023D               	subwf	sprintf@eexp^(0+128),w
  2593  031D                     u5655:
  2594  031D  1C03               	skipc
  2595  031E  2B20               	goto	u5651
  2596  031F  2B21               	goto	u5650
  2597  0320                     u5651:
  2598  0320  2B93               	goto	l3514
  2599  0321                     u5650:
  2600  0321                     l3500:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2603  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2605  0323  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2606  0324  00F3               	movwf	___flge@ff1+3
  2607  0325  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2608  0326  00F2               	movwf	___flge@ff1+2
  2609  0327  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2610  0328  00F1               	movwf	___flge@ff1+1
  2611  0329  083F               	movf	sprintf@tmpval^(0+128),w
  2612  032A  00F0               	movwf	___flge@ff1
  2613  032B  3040               	movlw	64
  2614  032C  00F7               	movwf	___flge@ff2+3
  2615  032D  3089               	movlw	137
  2616  032E  00F6               	movwf	___flge@ff2+2
  2617  032F  3070               	movlw	112
  2618  0330  00F5               	movwf	___flge@ff2+1
  2619  0331  305F               	movlw	95
  2620  0332  00F4               	movwf	___flge@ff2
  2621  0333  160A  158A  2529  120A  118A  	fcall	___flge
  2622  0338  1803               	btfsc	3,0
  2623  0339  2B3B               	goto	u5661
  2624  033A  2B3C               	goto	u5660
  2625  033B                     u5661:
  2626  033B  2B45               	goto	l3504
  2627  033C                     u5660:
  2628  033C                     l3502:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2631  033C  30F7               	movlw	247
  2632  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2633  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2634  033F  07BD               	addwf	sprintf@eexp^(0+128),f
  2635  0340  1803               	skipnc
  2636  0341  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2637  0342  30FF               	movlw	255
  2638  0343  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2641  0344  2B4D               	goto	l3506
  2642  0345                     l3504:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2645  0345  30F8               	movlw	248
  2646  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2647  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2648  0348  07BD               	addwf	sprintf@eexp^(0+128),f
  2649  0349  1803               	skipnc
  2650  034A  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2651  034B  30FF               	movlw	255
  2652  034C  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2653  034D                     l3506:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2656  034D  083D               	movf	sprintf@eexp^(0+128),w
  2657  034E  120A  158A  2140  120A  118A  	fcall	_scale
  2658  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0355  0841               	movf	?_scale+3,w
  2661  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2662  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2663  0358  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2664  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2665  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2666  035B  0840               	movf	?_scale+2,w
  2667  035C  1683               	bsf	3,5	;RP0=1, select bank1
  2668  035D  1303               	bcf	3,6	;RP1=0, select bank1
  2669  035E  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2670  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0361  083F               	movf	?_scale+1,w
  2673  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2674  0363  1303               	bcf	3,6	;RP1=0, select bank1
  2675  0364  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2676  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0367  083E               	movf	?_scale,w
  2679  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2680  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2681  036A  00BF               	movwf	sprintf@tmpval^(0+128)
  2682  036B                     l3508:
  2683  036B  084B               	movf	(sprintf@fval+3)^(0+128),w
  2684  036C  00F3               	movwf	__div_to_l_@f1+3
  2685  036D  084A               	movf	(sprintf@fval+2)^(0+128),w
  2686  036E  00F2               	movwf	__div_to_l_@f1+2
  2687  036F  0849               	movf	(sprintf@fval+1)^(0+128),w
  2688  0370  00F1               	movwf	__div_to_l_@f1+1
  2689  0371  0848               	movf	sprintf@fval^(0+128),w
  2690  0372  00F0               	movwf	__div_to_l_@f1
  2691  0373  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2692  0374  00F7               	movwf	__div_to_l_@f2+3
  2693  0375  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2694  0376  00F6               	movwf	__div_to_l_@f2+2
  2695  0377  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2696  0378  00F5               	movwf	__div_to_l_@f2+1
  2697  0379  083F               	movf	sprintf@tmpval^(0+128),w
  2698  037A  00F4               	movwf	__div_to_l_@f2
  2699  037B  160A  158A  2742  120A  118A  	fcall	__div_to_l_
  2700  0380  0873               	movf	?__div_to_l_+3,w
  2701  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2702  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2703  0383  00C6               	movwf	(sprintf@val+3)^(0+128)
  2704  0384  0872               	movf	?__div_to_l_+2,w
  2705  0385  00C5               	movwf	(sprintf@val+2)^(0+128)
  2706  0386  0871               	movf	?__div_to_l_+1,w
  2707  0387  00C4               	movwf	(sprintf@val+1)^(0+128)
  2708  0388  0870               	movf	?__div_to_l_,w
  2709  0389  00C3               	movwf	sprintf@val^(0+128)
  2710  038A                     l3512:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2713  038A  3000               	movlw	0
  2714  038B  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2715  038C  3000               	movlw	0
  2716  038D  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2717  038E  3000               	movlw	0
  2718  038F  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2719  0390  3000               	movlw	0
  2720  0391  00C8               	movwf	sprintf@fval^(0+128)
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2723  0392  2BF9               	goto	l3520
  2724  0393                     l3514:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2727  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2729  0395  084B               	movf	(sprintf@fval+3)^(0+128),w
  2730  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0398  00D4               	movwf	___fltol@f1+3
  2733  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2734  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2735  039B  084A               	movf	(sprintf@fval+2)^(0+128),w
  2736  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2737  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2738  039E  00D3               	movwf	___fltol@f1+2
  2739  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2740  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2741  03A1  0849               	movf	(sprintf@fval+1)^(0+128),w
  2742  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2743  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2744  03A4  00D2               	movwf	___fltol@f1+1
  2745  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2746  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2747  03A7  0848               	movf	sprintf@fval^(0+128),w
  2748  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2749  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2750  03AA  00D1               	movwf	___fltol@f1
  2751  03AB  120A  158A  20C4  120A  118A  	fcall	___fltol
  2752  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2753  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2754  03B2  0854               	movf	?___fltol+3,w
  2755  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2756  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2757  03B5  00C6               	movwf	(sprintf@val+3)^(0+128)
  2758  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2759  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2760  03B8  0853               	movf	?___fltol+2,w
  2761  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2762  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2763  03BB  00C5               	movwf	(sprintf@val+2)^(0+128)
  2764  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2765  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2766  03BE  0852               	movf	?___fltol+1,w
  2767  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2768  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2769  03C1  00C4               	movwf	(sprintf@val+1)^(0+128)
  2770  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2771  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2772  03C4  0851               	movf	?___fltol,w
  2773  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2774  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2775  03C7  00C3               	movwf	sprintf@val^(0+128)
  2776  03C8                     l3516:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2779  03C8  0846               	movf	(sprintf@val+3)^(0+128),w
  2780  03C9  00F3               	movwf	___xxtofl@val+3
  2781  03CA  0845               	movf	(sprintf@val+2)^(0+128),w
  2782  03CB  00F2               	movwf	___xxtofl@val+2
  2783  03CC  0844               	movf	(sprintf@val+1)^(0+128),w
  2784  03CD  00F1               	movwf	___xxtofl@val+1
  2785  03CE  0843               	movf	sprintf@val^(0+128),w
  2786  03CF  00F0               	movwf	___xxtofl@val
  2787  03D0  3000               	movlw	0
  2788  03D1  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  2789  03D6  0873               	movf	?___xxtofl+3,w
  2790  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2791  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2792  03D9  00A3               	movwf	(___flsub@a+3)^(0+128)
  2793  03DA  0872               	movf	?___xxtofl+2,w
  2794  03DB  00A2               	movwf	(___flsub@a+2)^(0+128)
  2795  03DC  0871               	movf	?___xxtofl+1,w
  2796  03DD  00A1               	movwf	(___flsub@a+1)^(0+128)
  2797  03DE  0870               	movf	?___xxtofl,w
  2798  03DF  00A0               	movwf	___flsub@a^(0+128)
  2799  03E0  084B               	movf	(sprintf@fval+3)^(0+128),w
  2800  03E1  00A7               	movwf	(___flsub@b+3)^(0+128)
  2801  03E2  084A               	movf	(sprintf@fval+2)^(0+128),w
  2802  03E3  00A6               	movwf	(___flsub@b+2)^(0+128)
  2803  03E4  0849               	movf	(sprintf@fval+1)^(0+128),w
  2804  03E5  00A5               	movwf	(___flsub@b+1)^(0+128)
  2805  03E6  0848               	movf	sprintf@fval^(0+128),w
  2806  03E7  00A4               	movwf	___flsub@b^(0+128)
  2807  03E8  160A  158A  2373  120A  118A  	fcall	___flsub
  2808  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2809  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2810  03EF  0823               	movf	(?___flsub+3)^(0+128),w
  2811  03F0  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2812  03F1  0822               	movf	(?___flsub+2)^(0+128),w
  2813  03F2  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2814  03F3  0821               	movf	(?___flsub+1)^(0+128),w
  2815  03F4  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2816  03F5  0820               	movf	?___flsub^(0+128),w
  2817  03F6  00C8               	movwf	sprintf@fval^(0+128)
  2818  03F7                     l3518:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2821  03F7  01BD               	clrf	sprintf@eexp^(0+128)
  2822  03F8  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2823  03F9                     l3520:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2826  03F9  01CE               	clrf	sprintf@c^(0+128)
  2827  03FA  0ACE               	incf	sprintf@c^(0+128),f
  2828  03FB                     l3526:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2831  03FB  084E               	movf	sprintf@c^(0+128),w
  2832  03FC  00B1               	movwf	??_sprintf^(0+128)
  2833  03FD  3001               	movlw	1
  2834  03FE                     u5675:
  2835  03FE  1003               	clrc
  2836  03FF  0DB1               	rlf	??_sprintf^(0+128),f
  2837  0400  3EFF               	addlw	-1
  2838  0401  1D03               	skipz
  2839  0402  2BFE               	goto	u5675
  2840  0403  1003               	clrc
  2841  0404  0D31               	rlf	??_sprintf^(0+128),w
  2842  0405  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2843  0406  0084               	movwf	4
  2844  0407  120A  158A  200A  120A  118A  	fcall	stringdir
  2845  040C  00B2               	movwf	(??_sprintf+1)^(0+128)
  2846  040D  120A  158A  200A  120A  118A  	fcall	stringdir
  2847  0412  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  2848  0413  120A  158A  200A  120A  118A  	fcall	stringdir
  2849  0418  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  2850  0419  120A  158A  200A  120A  118A  	fcall	stringdir
  2851  041E  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  2852  041F  0835               	movf	(??_sprintf+4)^(0+128),w
  2853  0420  0246               	subwf	(sprintf@val+3)^(0+128),w
  2854  0421  1D03               	skipz
  2855  0422  2C2D               	goto	u5685
  2856  0423  0834               	movf	(??_sprintf+3)^(0+128),w
  2857  0424  0245               	subwf	(sprintf@val+2)^(0+128),w
  2858  0425  1D03               	skipz
  2859  0426  2C2D               	goto	u5685
  2860  0427  0833               	movf	(??_sprintf+2)^(0+128),w
  2861  0428  0244               	subwf	(sprintf@val+1)^(0+128),w
  2862  0429  1D03               	skipz
  2863  042A  2C2D               	goto	u5685
  2864  042B  0832               	movf	(??_sprintf+1)^(0+128),w
  2865  042C  0243               	subwf	sprintf@val^(0+128),w
  2866  042D                     u5685:
  2867  042D  1803               	skipnc
  2868  042E  2C30               	goto	u5681
  2869  042F  2C31               	goto	u5680
  2870  0430                     u5681:
  2871  0430  2C32               	goto	l3530
  2872  0431                     u5680:
  2873  0431  2C3C               	goto	l3532
  2874  0432                     l3530:
  2875  0432  3001               	movlw	1
  2876  0433  00B1               	movwf	??_sprintf^(0+128)
  2877  0434  0831               	movf	??_sprintf^(0+128),w
  2878  0435  07CE               	addwf	sprintf@c^(0+128),f
  2879  0436  300A               	movlw	10
  2880  0437  064E               	xorwf	sprintf@c^(0+128),w
  2881  0438  1D03               	btfss	3,2
  2882  0439  2C3B               	goto	u5691
  2883  043A  2C3C               	goto	u5690
  2884  043B                     u5691:
  2885  043B  2BFB               	goto	l3526
  2886  043C                     u5690:
  2887  043C                     l3532:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2890  043C  3003               	movlw	3
  2891  043D  053B               	andwf	sprintf@flag^(0+128),w
  2892  043E  00B1               	movwf	??_sprintf^(0+128)
  2893  043F  3000               	movlw	0
  2894  0440  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2895  0441  00B2               	movwf	(??_sprintf+1)^(0+128)
  2896  0442  0831               	movf	??_sprintf^(0+128),w
  2897  0443  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2898  0444  1903               	btfsc	3,2
  2899  0445  2C47               	goto	u5701
  2900  0446  2C48               	goto	u5700
  2901  0447                     u5701:
  2902  0447  2CDA               	goto	l349
  2903  0448                     u5700:
  2904  0448                     l3534:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2907  0448  302D               	movlw	45
  2908  0449  00B1               	movwf	??_sprintf^(0+128)
  2909  044A  0847               	movf	sprintf@sp^(0+128),w
  2910  044B  0084               	movwf	4
  2911  044C  0831               	movf	??_sprintf^(0+128),w
  2912  044D  1383               	bcf	3,7	;select IRP bank0
  2913  044E  0080               	movwf	0
  2914  044F                     l3536:
  2915  044F  3001               	movlw	1
  2916  0450  00B1               	movwf	??_sprintf^(0+128)
  2917  0451  0831               	movf	??_sprintf^(0+128),w
  2918  0452  07C7               	addwf	sprintf@sp^(0+128),f
  2919  0453  2CDA               	goto	l349
  2920  0454                     l3538:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2923  0454  084E               	movf	sprintf@c^(0+128),w
  2924  0455  00B1               	movwf	??_sprintf^(0+128)
  2925  0456  3001               	movlw	1
  2926  0457                     u5715:
  2927  0457  1003               	clrc
  2928  0458  0DB1               	rlf	??_sprintf^(0+128),f
  2929  0459  3EFF               	addlw	-1
  2930  045A  1D03               	skipz
  2931  045B  2C57               	goto	u5715
  2932  045C  1003               	clrc
  2933  045D  0D31               	rlf	??_sprintf^(0+128),w
  2934  045E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2935  045F  0084               	movwf	4
  2936  0460  120A  158A  200A  120A  118A  	fcall	stringdir
  2937  0465  00F0               	movwf	___lldiv@divisor
  2938  0466  120A  158A  200A  120A  118A  	fcall	stringdir
  2939  046B  00F1               	movwf	___lldiv@divisor+1
  2940  046C  120A  158A  200A  120A  118A  	fcall	stringdir
  2941  0471  00F2               	movwf	___lldiv@divisor+2
  2942  0472  120A  158A  200A  120A  118A  	fcall	stringdir
  2943  0477  00F3               	movwf	___lldiv@divisor+3
  2944  0478  0846               	movf	(sprintf@val+3)^(0+128),w
  2945  0479  00F7               	movwf	___lldiv@dividend+3
  2946  047A  0845               	movf	(sprintf@val+2)^(0+128),w
  2947  047B  00F6               	movwf	___lldiv@dividend+2
  2948  047C  0844               	movf	(sprintf@val+1)^(0+128),w
  2949  047D  00F5               	movwf	___lldiv@dividend+1
  2950  047E  0843               	movf	sprintf@val^(0+128),w
  2951  047F  00F4               	movwf	___lldiv@dividend
  2952  0480  160A  158A  24C3  120A  118A  	fcall	___lldiv
  2953  0485  0873               	movf	?___lldiv+3,w
  2954  0486  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0487  1303               	bcf	3,6	;RP1=0, select bank1
  2956  0488  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2957  0489  0872               	movf	?___lldiv+2,w
  2958  048A  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2959  048B  0871               	movf	?___lldiv+1,w
  2960  048C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2961  048D  0870               	movf	?___lldiv,w
  2962  048E  00BF               	movwf	sprintf@tmpval^(0+128)
  2963  048F                     l3540:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2966  048F  3000               	movlw	0
  2967  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0492  00A3               	movwf	___llmod@divisor+3
  2970  0493  3000               	movlw	0
  2971  0494  00A2               	movwf	___llmod@divisor+2
  2972  0495  3000               	movlw	0
  2973  0496  00A1               	movwf	___llmod@divisor+1
  2974  0497  300A               	movlw	10
  2975  0498  00A0               	movwf	___llmod@divisor
  2976  0499  1683               	bsf	3,5	;RP0=1, select bank1
  2977  049A  1303               	bcf	3,6	;RP1=0, select bank1
  2978  049B  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2979  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2980  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2981  049E  00A7               	movwf	___llmod@dividend+3
  2982  049F  1683               	bsf	3,5	;RP0=1, select bank1
  2983  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  2984  04A1  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2985  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2986  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2987  04A4  00A6               	movwf	___llmod@dividend+2
  2988  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  2989  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  2990  04A7  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2991  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2992  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2993  04AA  00A5               	movwf	___llmod@dividend+1
  2994  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2995  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2996  04AD  083F               	movf	sprintf@tmpval^(0+128),w
  2997  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2998  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2999  04B0  00A4               	movwf	___llmod@dividend
  3000  04B1  160A  158A  2414  120A  118A  	fcall	___llmod
  3001  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3002  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3003  04B8  0823               	movf	?___llmod+3,w
  3004  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3005  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3006  04BB  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3007  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3008  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3009  04BE  0822               	movf	?___llmod+2,w
  3010  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  3011  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  3012  04C1  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3013  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3014  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3015  04C4  0821               	movf	?___llmod+1,w
  3016  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  3017  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  3018  04C7  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3019  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3020  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3021  04CA  0820               	movf	?___llmod,w
  3022  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  3023  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  3024  04CD  00BF               	movwf	sprintf@tmpval^(0+128)
  3025  04CE                     l3542:
  3026                           
  3027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3028  04CE  083F               	movf	sprintf@tmpval^(0+128),w
  3029  04CF  3E30               	addlw	48
  3030  04D0  00B1               	movwf	??_sprintf^(0+128)
  3031  04D1  0847               	movf	sprintf@sp^(0+128),w
  3032  04D2  0084               	movwf	4
  3033  04D3  0831               	movf	??_sprintf^(0+128),w
  3034  04D4  1383               	bcf	3,7	;select IRP bank0
  3035  04D5  0080               	movwf	0
  3036  04D6  3001               	movlw	1
  3037  04D7  00B1               	movwf	??_sprintf^(0+128)
  3038  04D8  0831               	movf	??_sprintf^(0+128),w
  3039  04D9  07C7               	addwf	sprintf@sp^(0+128),f
  3040  04DA                     l349:	
  3041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3042                           
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3045  04DA  3001               	movlw	1
  3046  04DB  02CE               	subwf	sprintf@c^(0+128),f
  3047  04DC  0A4E               	incf	sprintf@c^(0+128),w
  3048  04DD  1D03               	btfss	3,2
  3049  04DE  2CE0               	goto	u5721
  3050  04DF  2CE1               	goto	u5720
  3051  04E0                     u5721:
  3052  04E0  2C54               	goto	l3538
  3053  04E1                     u5720:
  3054  04E1  2CF5               	goto	l3550
  3055  04E2                     l3544:
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3058  04E2  3030               	movlw	48
  3059  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  3060  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  3061  04E5  00B1               	movwf	??_sprintf^(0+128)
  3062  04E6  0847               	movf	sprintf@sp^(0+128),w
  3063  04E7  0084               	movwf	4
  3064  04E8  0831               	movf	??_sprintf^(0+128),w
  3065  04E9  1383               	bcf	3,7	;select IRP bank0
  3066  04EA  0080               	movwf	0
  3067  04EB                     l3546:
  3068  04EB  3001               	movlw	1
  3069  04EC  00B1               	movwf	??_sprintf^(0+128)
  3070  04ED  0831               	movf	??_sprintf^(0+128),w
  3071  04EE  07C7               	addwf	sprintf@sp^(0+128),f
  3072  04EF                     l3548:
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3075  04EF  30FF               	movlw	255
  3076  04F0  07BD               	addwf	sprintf@eexp^(0+128),f
  3077  04F1  1803               	skipnc
  3078  04F2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3079  04F3  30FF               	movlw	255
  3080  04F4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3081  04F5                     l3550:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3084  04F5  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3085  04F6  3A80               	xorlw	128
  3086  04F7  00FF               	movwf	btemp+1
  3087  04F8  3080               	movlw	128
  3088  04F9  027F               	subwf	btemp+1,w
  3089  04FA  1D03               	skipz
  3090  04FB  2CFE               	goto	u5735
  3091  04FC  3001               	movlw	1
  3092  04FD  023D               	subwf	sprintf@eexp^(0+128),w
  3093  04FE                     u5735:
  3094  04FE  1803               	skipnc
  3095  04FF  2D01               	goto	u5731
  3096  0500  2D02               	goto	u5730
  3097  0501                     u5731:
  3098  0501  2CE2               	goto	l3544
  3099  0502                     u5730:
  3100  0502                     l3552:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3103  0502  1683               	bsf	3,5	;RP0=1, select bank1
  3104  0503  1303               	bcf	3,6	;RP1=0, select bank1
  3105  0504  084D               	movf	(sprintf@prec+1)^(0+128),w
  3106  0505  3A80               	xorlw	128
  3107  0506  00FF               	movwf	btemp+1
  3108  0507  3080               	movlw	128
  3109  0508  027F               	subwf	btemp+1,w
  3110  0509  1D03               	skipz
  3111  050A  2D0D               	goto	u5745
  3112  050B  3009               	movlw	9
  3113  050C  024C               	subwf	sprintf@prec^(0+128),w
  3114  050D                     u5745:
  3115  050D  1C03               	skipc
  3116  050E  2D10               	goto	u5741
  3117  050F  2D11               	goto	u5740
  3118  0510                     u5741:
  3119  0510  2D18               	goto	l3556
  3120  0511                     u5740:
  3121  0511                     l3554:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3124  0511  3008               	movlw	8
  3125  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3126  0513  1303               	bcf	3,6	;RP1=0, select bank1
  3127  0514  00B1               	movwf	??_sprintf^(0+128)
  3128  0515  0831               	movf	??_sprintf^(0+128),w
  3129  0516  00CE               	movwf	sprintf@c^(0+128)
  3130  0517  2D1E               	goto	l356
  3131  0518                     l3556:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3134  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3136  051A  084C               	movf	sprintf@prec^(0+128),w
  3137  051B  00B1               	movwf	??_sprintf^(0+128)
  3138  051C  0831               	movf	??_sprintf^(0+128),w
  3139  051D  00CE               	movwf	sprintf@c^(0+128)
  3140  051E                     l356:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3143  051E  084E               	movf	sprintf@c^(0+128),w
  3144  051F  00B1               	movwf	??_sprintf^(0+128)
  3145  0520  01B2               	clrf	(??_sprintf^(0+128)+1)
  3146  0521  0831               	movf	??_sprintf^(0+128),w
  3147  0522  02CC               	subwf	sprintf@prec^(0+128),f
  3148  0523  0832               	movf	(??_sprintf+1)^(0+128),w
  3149  0524  1C03               	skipc
  3150  0525  03CD               	decf	(sprintf@prec+1)^(0+128),f
  3151  0526  02CD               	subwf	(sprintf@prec+1)^(0+128),f
  3152  0527                     l3558:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3155  0527  084E               	movf	sprintf@c^(0+128),w
  3156  0528  1903               	btfsc	3,2
  3157  0529  2D2B               	goto	u5751
  3158  052A  2D2C               	goto	u5750
  3159  052B                     u5751:
  3160  052B  2D37               	goto	l3564
  3161  052C                     u5750:
  3162  052C                     l3560:
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3165  052C  302E               	movlw	46
  3166  052D  00B1               	movwf	??_sprintf^(0+128)
  3167  052E  0847               	movf	sprintf@sp^(0+128),w
  3168  052F  0084               	movwf	4
  3169  0530  0831               	movf	??_sprintf^(0+128),w
  3170  0531  1383               	bcf	3,7	;select IRP bank0
  3171  0532  0080               	movwf	0
  3172  0533                     l3562:
  3173  0533  3001               	movlw	1
  3174  0534  00B1               	movwf	??_sprintf^(0+128)
  3175  0535  0831               	movf	??_sprintf^(0+128),w
  3176  0536  07C7               	addwf	sprintf@sp^(0+128),f
  3177  0537                     l3564:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3180  0537  084E               	movf	sprintf@c^(0+128),w
  3181  0538  120A  158A  2140  120A  118A  	fcall	_scale
  3182  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3183  053E  1303               	bcf	3,6	;RP1=0, select bank0
  3184  053F  0841               	movf	?_scale+3,w
  3185  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0542  00B9               	movwf	(_sprintf$959+3)^(0+128)
  3188  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0545  0840               	movf	?_scale+2,w
  3191  0546  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0547  1303               	bcf	3,6	;RP1=0, select bank1
  3193  0548  00B8               	movwf	(_sprintf$959+2)^(0+128)
  3194  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3195  054A  1303               	bcf	3,6	;RP1=0, select bank0
  3196  054B  083F               	movf	?_scale+1,w
  3197  054C  1683               	bsf	3,5	;RP0=1, select bank1
  3198  054D  1303               	bcf	3,6	;RP1=0, select bank1
  3199  054E  00B7               	movwf	(_sprintf$959+1)^(0+128)
  3200  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0551  083E               	movf	?_scale,w
  3203  0552  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0553  1303               	bcf	3,6	;RP1=0, select bank1
  3205  0554  00B6               	movwf	_sprintf$959^(0+128)
  3206  0555                     l3566:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3209  0555  0839               	movf	(_sprintf$959+3)^(0+128),w
  3210  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0558  00AB               	movwf	___flmul@a+3
  3213  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3214  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3215  055B  0838               	movf	(_sprintf$959+2)^(0+128),w
  3216  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3217  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3218  055E  00AA               	movwf	___flmul@a+2
  3219  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3221  0561  0837               	movf	(_sprintf$959+1)^(0+128),w
  3222  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3223  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3224  0564  00A9               	movwf	___flmul@a+1
  3225  0565  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0566  1303               	bcf	3,6	;RP1=0, select bank1
  3227  0567  0836               	movf	_sprintf$959^(0+128),w
  3228  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3230  056A  00A8               	movwf	___flmul@a
  3231  056B  1683               	bsf	3,5	;RP0=1, select bank1
  3232  056C  1303               	bcf	3,6	;RP1=0, select bank1
  3233  056D  084B               	movf	(sprintf@fval+3)^(0+128),w
  3234  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3235  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0570  00A7               	movwf	___flmul@b+3
  3237  0571  1683               	bsf	3,5	;RP0=1, select bank1
  3238  0572  1303               	bcf	3,6	;RP1=0, select bank1
  3239  0573  084A               	movf	(sprintf@fval+2)^(0+128),w
  3240  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0576  00A6               	movwf	___flmul@b+2
  3243  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0578  1303               	bcf	3,6	;RP1=0, select bank1
  3245  0579  0849               	movf	(sprintf@fval+1)^(0+128),w
  3246  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3247  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3248  057C  00A5               	movwf	___flmul@b+1
  3249  057D  1683               	bsf	3,5	;RP0=1, select bank1
  3250  057E  1303               	bcf	3,6	;RP1=0, select bank1
  3251  057F  0848               	movf	sprintf@fval^(0+128),w
  3252  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0582  00A4               	movwf	___flmul@b
  3255  0583  120A  158A  249F  120A  118A  	fcall	___flmul
  3256  0588  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0589  1303               	bcf	3,6	;RP1=0, select bank0
  3258  058A  0827               	movf	?___flmul+3,w
  3259  058B  00D4               	movwf	___fltol@f1+3
  3260  058C  0826               	movf	?___flmul+2,w
  3261  058D  00D3               	movwf	___fltol@f1+2
  3262  058E  0825               	movf	?___flmul+1,w
  3263  058F  00D2               	movwf	___fltol@f1+1
  3264  0590  0824               	movf	?___flmul,w
  3265  0591  00D1               	movwf	___fltol@f1
  3266  0592  120A  158A  20C4  120A  118A  	fcall	___fltol
  3267  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0599  0854               	movf	?___fltol+3,w
  3270  059A  1683               	bsf	3,5	;RP0=1, select bank1
  3271  059B  1303               	bcf	3,6	;RP1=0, select bank1
  3272  059C  00C6               	movwf	(sprintf@val+3)^(0+128)
  3273  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3274  059E  1303               	bcf	3,6	;RP1=0, select bank0
  3275  059F  0853               	movf	?___fltol+2,w
  3276  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3277  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  3278  05A2  00C5               	movwf	(sprintf@val+2)^(0+128)
  3279  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3280  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3281  05A5  0852               	movf	?___fltol+1,w
  3282  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  3283  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  3284  05A8  00C4               	movwf	(sprintf@val+1)^(0+128)
  3285  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3286  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3287  05AB  0851               	movf	?___fltol,w
  3288  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  3289  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  3290  05AE  00C3               	movwf	sprintf@val^(0+128)
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3293  05AF  2E91               	goto	l3576
  3294  05B0                     l3568:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3297  05B0  084E               	movf	sprintf@c^(0+128),w
  3298  05B1  00B1               	movwf	??_sprintf^(0+128)
  3299  05B2  3001               	movlw	1
  3300  05B3                     u5765:
  3301  05B3  1003               	clrc
  3302  05B4  0DB1               	rlf	??_sprintf^(0+128),f
  3303  05B5  3EFF               	addlw	-1
  3304  05B6  1D03               	skipz
  3305  05B7  2DB3               	goto	u5765
  3306  05B8  1003               	clrc
  3307  05B9  0D31               	rlf	??_sprintf^(0+128),w
  3308  05BA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3309  05BB  0084               	movwf	4
  3310  05BC  120A  158A  200A  120A  118A  	fcall	stringdir
  3311  05C1  00F0               	movwf	___lldiv@divisor
  3312  05C2  120A  158A  200A  120A  118A  	fcall	stringdir
  3313  05C7  00F1               	movwf	___lldiv@divisor+1
  3314  05C8  120A  158A  200A  120A  118A  	fcall	stringdir
  3315  05CD  00F2               	movwf	___lldiv@divisor+2
  3316  05CE  120A  158A  200A  120A  118A  	fcall	stringdir
  3317  05D3  00F3               	movwf	___lldiv@divisor+3
  3318  05D4  0846               	movf	(sprintf@val+3)^(0+128),w
  3319  05D5  00F7               	movwf	___lldiv@dividend+3
  3320  05D6  0845               	movf	(sprintf@val+2)^(0+128),w
  3321  05D7  00F6               	movwf	___lldiv@dividend+2
  3322  05D8  0844               	movf	(sprintf@val+1)^(0+128),w
  3323  05D9  00F5               	movwf	___lldiv@dividend+1
  3324  05DA  0843               	movf	sprintf@val^(0+128),w
  3325  05DB  00F4               	movwf	___lldiv@dividend
  3326  05DC  160A  158A  24C3  120A  118A  	fcall	___lldiv
  3327  05E1  0873               	movf	?___lldiv+3,w
  3328  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3329  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3330  05E4  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3331  05E5  0872               	movf	?___lldiv+2,w
  3332  05E6  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3333  05E7  0871               	movf	?___lldiv+1,w
  3334  05E8  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3335  05E9  0870               	movf	?___lldiv,w
  3336  05EA  00BF               	movwf	sprintf@tmpval^(0+128)
  3337  05EB                     l3570:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3340  05EB  3000               	movlw	0
  3341  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3342  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3343  05EE  00A3               	movwf	___llmod@divisor+3
  3344  05EF  3000               	movlw	0
  3345  05F0  00A2               	movwf	___llmod@divisor+2
  3346  05F1  3000               	movlw	0
  3347  05F2  00A1               	movwf	___llmod@divisor+1
  3348  05F3  300A               	movlw	10
  3349  05F4  00A0               	movwf	___llmod@divisor
  3350  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  3351  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  3352  05F7  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  3353  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3354  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3355  05FA  00A7               	movwf	___llmod@dividend+3
  3356  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3357  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3358  05FD  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  3359  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3360  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0600  00A6               	movwf	___llmod@dividend+2
  3362  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3363  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3364  0603  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  3365  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0606  00A5               	movwf	___llmod@dividend+1
  3368  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3369  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3370  0609  083F               	movf	sprintf@tmpval^(0+128),w
  3371  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3372  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3373  060C  00A4               	movwf	___llmod@dividend
  3374  060D  160A  158A  2414  120A  118A  	fcall	___llmod
  3375  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3377  0614  0823               	movf	?___llmod+3,w
  3378  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3380  0617  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  3381  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3383  061A  0822               	movf	?___llmod+2,w
  3384  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3385  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3386  061D  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  3387  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3388  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0620  0821               	movf	?___llmod+1,w
  3390  0621  1683               	bsf	3,5	;RP0=1, select bank1
  3391  0622  1303               	bcf	3,6	;RP1=0, select bank1
  3392  0623  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  3393  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0626  0820               	movf	?___llmod,w
  3396  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3398  0629  00BF               	movwf	sprintf@tmpval^(0+128)
  3399  062A                     l3572:
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3402  062A  083F               	movf	sprintf@tmpval^(0+128),w
  3403  062B  3E30               	addlw	48
  3404  062C  00B1               	movwf	??_sprintf^(0+128)
  3405  062D  0847               	movf	sprintf@sp^(0+128),w
  3406  062E  0084               	movwf	4
  3407  062F  0831               	movf	??_sprintf^(0+128),w
  3408  0630  1383               	bcf	3,7	;select IRP bank0
  3409  0631  0080               	movwf	0
  3410  0632  3001               	movlw	1
  3411  0633  00B1               	movwf	??_sprintf^(0+128)
  3412  0634  0831               	movf	??_sprintf^(0+128),w
  3413  0635  07C7               	addwf	sprintf@sp^(0+128),f
  3414  0636                     l3574:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3417  0636  084E               	movf	sprintf@c^(0+128),w
  3418  0637  00B1               	movwf	??_sprintf^(0+128)
  3419  0638  3001               	movlw	1
  3420  0639                     u5775:
  3421  0639  1003               	clrc
  3422  063A  0DB1               	rlf	??_sprintf^(0+128),f
  3423  063B  3EFF               	addlw	-1
  3424  063C  1D03               	skipz
  3425  063D  2E39               	goto	u5775
  3426  063E  1003               	clrc
  3427  063F  0D31               	rlf	??_sprintf^(0+128),w
  3428  0640  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3429  0641  0084               	movwf	4
  3430  0642  120A  158A  200A  120A  118A  	fcall	stringdir
  3431  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3433  0649  00A0               	movwf	___llmod@divisor
  3434  064A  120A  158A  200A  120A  118A  	fcall	stringdir
  3435  064F  00A1               	movwf	___llmod@divisor+1
  3436  0650  120A  158A  200A  120A  118A  	fcall	stringdir
  3437  0655  00A2               	movwf	___llmod@divisor+2
  3438  0656  120A  158A  200A  120A  118A  	fcall	stringdir
  3439  065B  00A3               	movwf	___llmod@divisor+3
  3440  065C  1683               	bsf	3,5	;RP0=1, select bank1
  3441  065D  1303               	bcf	3,6	;RP1=0, select bank1
  3442  065E  0846               	movf	(sprintf@val+3)^(0+128),w
  3443  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0661  00A7               	movwf	___llmod@dividend+3
  3446  0662  1683               	bsf	3,5	;RP0=1, select bank1
  3447  0663  1303               	bcf	3,6	;RP1=0, select bank1
  3448  0664  0845               	movf	(sprintf@val+2)^(0+128),w
  3449  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0667  00A6               	movwf	___llmod@dividend+2
  3452  0668  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0669  1303               	bcf	3,6	;RP1=0, select bank1
  3454  066A  0844               	movf	(sprintf@val+1)^(0+128),w
  3455  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3456  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3457  066D  00A5               	movwf	___llmod@dividend+1
  3458  066E  1683               	bsf	3,5	;RP0=1, select bank1
  3459  066F  1303               	bcf	3,6	;RP1=0, select bank1
  3460  0670  0843               	movf	sprintf@val^(0+128),w
  3461  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0672  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0673  00A4               	movwf	___llmod@dividend
  3464  0674  160A  158A  2414  120A  118A  	fcall	___llmod
  3465  0679  1283               	bcf	3,5	;RP0=0, select bank0
  3466  067A  1303               	bcf	3,6	;RP1=0, select bank0
  3467  067B  0823               	movf	?___llmod+3,w
  3468  067C  1683               	bsf	3,5	;RP0=1, select bank1
  3469  067D  1303               	bcf	3,6	;RP1=0, select bank1
  3470  067E  00C6               	movwf	(sprintf@val+3)^(0+128)
  3471  067F  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0680  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0681  0822               	movf	?___llmod+2,w
  3474  0682  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0683  1303               	bcf	3,6	;RP1=0, select bank1
  3476  0684  00C5               	movwf	(sprintf@val+2)^(0+128)
  3477  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0687  0821               	movf	?___llmod+1,w
  3480  0688  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0689  1303               	bcf	3,6	;RP1=0, select bank1
  3482  068A  00C4               	movwf	(sprintf@val+1)^(0+128)
  3483  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3484  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3485  068D  0820               	movf	?___llmod,w
  3486  068E  1683               	bsf	3,5	;RP0=1, select bank1
  3487  068F  1303               	bcf	3,6	;RP1=0, select bank1
  3488  0690  00C3               	movwf	sprintf@val^(0+128)
  3489  0691                     l3576:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3492  0691  3001               	movlw	1
  3493  0692  02CE               	subwf	sprintf@c^(0+128),f
  3494  0693  0A4E               	incf	sprintf@c^(0+128),w
  3495  0694  1D03               	btfss	3,2
  3496  0695  2E97               	goto	u5781
  3497  0696  2E98               	goto	u5780
  3498  0697                     u5781:
  3499  0697  2DB0               	goto	l3568
  3500  0698                     u5780:
  3501  0698  2EAA               	goto	l3584
  3502  0699                     l3578:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3505  0699  3030               	movlw	48
  3506  069A  00B1               	movwf	??_sprintf^(0+128)
  3507  069B  0847               	movf	sprintf@sp^(0+128),w
  3508  069C  0084               	movwf	4
  3509  069D  0831               	movf	??_sprintf^(0+128),w
  3510  069E  1383               	bcf	3,7	;select IRP bank0
  3511  069F  0080               	movwf	0
  3512  06A0                     l3580:
  3513  06A0  3001               	movlw	1
  3514  06A1  00B1               	movwf	??_sprintf^(0+128)
  3515  06A2  0831               	movf	??_sprintf^(0+128),w
  3516  06A3  07C7               	addwf	sprintf@sp^(0+128),f
  3517  06A4                     l3582:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3520  06A4  30FF               	movlw	255
  3521  06A5  07CC               	addwf	sprintf@prec^(0+128),f
  3522  06A6  1803               	skipnc
  3523  06A7  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  3524  06A8  30FF               	movlw	255
  3525  06A9  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  3526  06AA                     l3584:
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3529  06AA  084C               	movf	sprintf@prec^(0+128),w
  3530  06AB  044D               	iorwf	(sprintf@prec+1)^(0+128),w
  3531  06AC  1D03               	btfss	3,2
  3532  06AD  2EAF               	goto	u5791
  3533  06AE  2EB0               	goto	u5790
  3534  06AF                     u5791:
  3535  06AF  2E99               	goto	l3578
  3536  06B0                     u5790:
  3537  06B0  2FD9               	goto	l3636
  3538  06B1                     l3586:
  3539                           
  3540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3541  06B1  083A               	movf	sprintf@ap^(0+128),w
  3542  06B2  0084               	movwf	4
  3543  06B3  1383               	bcf	3,7	;select IRP bank0
  3544  06B4  0800               	movf	0,w
  3545  06B5  00B1               	movwf	??_sprintf^(0+128)
  3546  06B6  0A84               	incf	4,f
  3547  06B7  0800               	movf	0,w
  3548  06B8  00B2               	movwf	(??_sprintf^(0+128)+1)
  3549  06B9  0831               	movf	??_sprintf^(0+128),w
  3550  06BA  00C3               	movwf	sprintf@val^(0+128)
  3551  06BB  0832               	movf	(??_sprintf+1)^(0+128),w
  3552  06BC  00C4               	movwf	(sprintf@val+1)^(0+128)
  3553  06BD  3000               	movlw	0
  3554  06BE  1BC4               	btfsc	(sprintf@val+1)^(0+128),7
  3555  06BF  30FF               	movlw	255
  3556  06C0  00C5               	movwf	(sprintf@val+2)^(0+128)
  3557  06C1  00C6               	movwf	(sprintf@val+3)^(0+128)
  3558  06C2                     l3588:
  3559  06C2  3002               	movlw	2
  3560  06C3  00B1               	movwf	??_sprintf^(0+128)
  3561  06C4  0831               	movf	??_sprintf^(0+128),w
  3562  06C5  07BA               	addwf	sprintf@ap^(0+128),f
  3563  06C6                     l3590:
  3564                           
  3565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3566  06C6  1FC6               	btfss	(sprintf@val+3)^(0+128),7
  3567  06C7  2EC9               	goto	u5801
  3568  06C8  2ECA               	goto	u5800
  3569  06C9                     u5801:
  3570  06C9  2ED9               	goto	l3596
  3571  06CA                     u5800:
  3572  06CA                     l3592:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3575  06CA  3003               	movlw	3
  3576  06CB  04BB               	iorwf	sprintf@flag^(0+128),f
  3577  06CC  3000               	movlw	0
  3578  06CD  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  3579  06CE                     l3594:
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3582  06CE  09C3               	comf	sprintf@val^(0+128),f
  3583  06CF  09C4               	comf	(sprintf@val+1)^(0+128),f
  3584  06D0  09C5               	comf	(sprintf@val+2)^(0+128),f
  3585  06D1  09C6               	comf	(sprintf@val+3)^(0+128),f
  3586  06D2  0AC3               	incf	sprintf@val^(0+128),f
  3587  06D3  1903               	skipnz
  3588  06D4  0AC4               	incf	(sprintf@val+1)^(0+128),f
  3589  06D5  1903               	skipnz
  3590  06D6  0AC5               	incf	(sprintf@val+2)^(0+128),f
  3591  06D7  1903               	skipnz
  3592  06D8  0AC6               	incf	(sprintf@val+3)^(0+128),f
  3593  06D9                     l3596:
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3596  06D9  084C               	movf	sprintf@prec^(0+128),w
  3597  06DA  044D               	iorwf	(sprintf@prec+1)^(0+128),w
  3598  06DB  1D03               	btfss	3,2
  3599  06DC  2EDE               	goto	u5811
  3600  06DD  2EDF               	goto	u5810
  3601  06DE                     u5811:
  3602  06DE  2EED               	goto	l3602
  3603  06DF                     u5810:
  3604  06DF                     l3598:
  3605  06DF  0846               	movf	(sprintf@val+3)^(0+128),w
  3606  06E0  0445               	iorwf	(sprintf@val+2)^(0+128),w
  3607  06E1  0444               	iorwf	(sprintf@val+1)^(0+128),w
  3608  06E2  0443               	iorwf	sprintf@val^(0+128),w
  3609  06E3  1D03               	skipz
  3610  06E4  2EE6               	goto	u5821
  3611  06E5  2EE7               	goto	u5820
  3612  06E6                     u5821:
  3613  06E6  2EED               	goto	l3602
  3614  06E7                     u5820:
  3615  06E7                     l3600:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3618  06E7  3001               	movlw	1
  3619  06E8  07CC               	addwf	sprintf@prec^(0+128),f
  3620  06E9  1803               	skipnc
  3621  06EA  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  3622  06EB  3000               	movlw	0
  3623  06EC  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  3624  06ED                     l3602:
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3627  06ED  01CE               	clrf	sprintf@c^(0+128)
  3628  06EE  0ACE               	incf	sprintf@c^(0+128),f
  3629  06EF                     l3608:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3632  06EF  084E               	movf	sprintf@c^(0+128),w
  3633  06F0  00B1               	movwf	??_sprintf^(0+128)
  3634  06F1  3001               	movlw	1
  3635  06F2                     u5835:
  3636  06F2  1003               	clrc
  3637  06F3  0DB1               	rlf	??_sprintf^(0+128),f
  3638  06F4  3EFF               	addlw	-1
  3639  06F5  1D03               	skipz
  3640  06F6  2EF2               	goto	u5835
  3641  06F7  1003               	clrc
  3642  06F8  0D31               	rlf	??_sprintf^(0+128),w
  3643  06F9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3644  06FA  0084               	movwf	4
  3645  06FB  120A  158A  200A  120A  118A  	fcall	stringdir
  3646  0700  00B2               	movwf	(??_sprintf+1)^(0+128)
  3647  0701  120A  158A  200A  120A  118A  	fcall	stringdir
  3648  0706  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  3649  0707  120A  158A  200A  120A  118A  	fcall	stringdir
  3650  070C  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  3651  070D  120A  158A  200A  120A  118A  	fcall	stringdir
  3652  0712  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  3653  0713  0835               	movf	(??_sprintf+4)^(0+128),w
  3654  0714  0246               	subwf	(sprintf@val+3)^(0+128),w
  3655  0715  1D03               	skipz
  3656  0716  2F21               	goto	u5845
  3657  0717  0834               	movf	(??_sprintf+3)^(0+128),w
  3658  0718  0245               	subwf	(sprintf@val+2)^(0+128),w
  3659  0719  1D03               	skipz
  3660  071A  2F21               	goto	u5845
  3661  071B  0833               	movf	(??_sprintf+2)^(0+128),w
  3662  071C  0244               	subwf	(sprintf@val+1)^(0+128),w
  3663  071D  1D03               	skipz
  3664  071E  2F21               	goto	u5845
  3665  071F  0832               	movf	(??_sprintf+1)^(0+128),w
  3666  0720  0243               	subwf	sprintf@val^(0+128),w
  3667  0721                     u5845:
  3668  0721  1803               	skipnc
  3669  0722  2F24               	goto	u5841
  3670  0723  2F25               	goto	u5840
  3671  0724                     u5841:
  3672  0724  2F26               	goto	l3612
  3673  0725                     u5840:
  3674  0725  2F30               	goto	l3614
  3675  0726                     l3612:
  3676  0726  3001               	movlw	1
  3677  0727  00B1               	movwf	??_sprintf^(0+128)
  3678  0728  0831               	movf	??_sprintf^(0+128),w
  3679  0729  07CE               	addwf	sprintf@c^(0+128),f
  3680  072A  300A               	movlw	10
  3681  072B  064E               	xorwf	sprintf@c^(0+128),w
  3682  072C  1D03               	btfss	3,2
  3683  072D  2F2F               	goto	u5851
  3684  072E  2F30               	goto	u5850
  3685  072F                     u5851:
  3686  072F  2EEF               	goto	l3608
  3687  0730                     u5850:
  3688  0730                     l3614:
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3691  0730  084D               	movf	(sprintf@prec+1)^(0+128),w
  3692  0731  3A80               	xorlw	128
  3693  0732  3C80               	sublw	128
  3694  0733  1D03               	skipz
  3695  0734  2F37               	goto	u5865
  3696  0735  084C               	movf	sprintf@prec^(0+128),w
  3697  0736  024E               	subwf	sprintf@c^(0+128),w
  3698  0737                     u5865:
  3699  0737  1803               	skipnc
  3700  0738  2F3A               	goto	u5861
  3701  0739  2F3B               	goto	u5860
  3702  073A                     u5861:
  3703  073A  2F3C               	goto	l3618
  3704  073B                     u5860:
  3705  073B                     l3616:
  3706  073B  2F54               	goto	l3622
  3707  073C                     l3618:
  3708  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3709  073D  1303               	bcf	3,6	;RP1=0, select bank1
  3710  073E  084D               	movf	(sprintf@prec+1)^(0+128),w
  3711  073F  3A80               	xorlw	128
  3712  0740  00B1               	movwf	??_sprintf^(0+128)
  3713  0741  3080               	movlw	128
  3714  0742  0231               	subwf	??_sprintf^(0+128),w
  3715  0743  1D03               	skipz
  3716  0744  2F47               	goto	u5875
  3717  0745  084E               	movf	sprintf@c^(0+128),w
  3718  0746  024C               	subwf	sprintf@prec^(0+128),w
  3719  0747                     u5875:
  3720  0747  1803               	skipnc
  3721  0748  2F4A               	goto	u5871
  3722  0749  2F4B               	goto	u5870
  3723  074A                     u5871:
  3724  074A  2F54               	goto	l3622
  3725  074B                     u5870:
  3726  074B                     l3620:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3729  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3730  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3731  074D  084E               	movf	sprintf@c^(0+128),w
  3732  074E  00B1               	movwf	??_sprintf^(0+128)
  3733  074F  01B2               	clrf	(??_sprintf^(0+128)+1)
  3734  0750  0831               	movf	??_sprintf^(0+128),w
  3735  0751  00CC               	movwf	sprintf@prec^(0+128)
  3736  0752  0832               	movf	(??_sprintf+1)^(0+128),w
  3737  0753  00CD               	movwf	(sprintf@prec+1)^(0+128)
  3738  0754                     l3622:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3741  0754  3003               	movlw	3
  3742  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3743  0756  1303               	bcf	3,6	;RP1=0, select bank1
  3744  0757  053B               	andwf	sprintf@flag^(0+128),w
  3745  0758  00B1               	movwf	??_sprintf^(0+128)
  3746  0759  3000               	movlw	0
  3747  075A  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3748  075B  00B2               	movwf	(??_sprintf+1)^(0+128)
  3749  075C  0831               	movf	??_sprintf^(0+128),w
  3750  075D  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3751  075E  1903               	btfsc	3,2
  3752  075F  2F61               	goto	u5881
  3753  0760  2F62               	goto	u5880
  3754  0761                     u5881:
  3755  0761  2FCB               	goto	l3634
  3756  0762                     u5880:
  3757  0762                     l3624:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3760  0762  302D               	movlw	45
  3761  0763  00B1               	movwf	??_sprintf^(0+128)
  3762  0764  0847               	movf	sprintf@sp^(0+128),w
  3763  0765  0084               	movwf	4
  3764  0766  0831               	movf	??_sprintf^(0+128),w
  3765  0767  1383               	bcf	3,7	;select IRP bank0
  3766  0768  0080               	movwf	0
  3767  0769                     l3626:
  3768  0769  3001               	movlw	1
  3769  076A  00B1               	movwf	??_sprintf^(0+128)
  3770  076B  0831               	movf	??_sprintf^(0+128),w
  3771  076C  07C7               	addwf	sprintf@sp^(0+128),f
  3772  076D  2FCB               	goto	l3634
  3773  076E                     l3628:
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3776  076E  3000               	movlw	0
  3777  076F  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0770  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0771  00A3               	movwf	___llmod@divisor+3
  3780  0772  3000               	movlw	0
  3781  0773  00A2               	movwf	___llmod@divisor+2
  3782  0774  3000               	movlw	0
  3783  0775  00A1               	movwf	___llmod@divisor+1
  3784  0776  300A               	movlw	10
  3785  0777  00A0               	movwf	___llmod@divisor
  3786  0778  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0779  1303               	bcf	3,6	;RP1=0, select bank1
  3788  077A  084C               	movf	sprintf@prec^(0+128),w
  3789  077B  00B1               	movwf	??_sprintf^(0+128)
  3790  077C  3001               	movlw	1
  3791  077D                     u5895:
  3792  077D  1003               	clrc
  3793  077E  0DB1               	rlf	??_sprintf^(0+128),f
  3794  077F  3EFF               	addlw	-1
  3795  0780  1D03               	skipz
  3796  0781  2F7D               	goto	u5895
  3797  0782  1003               	clrc
  3798  0783  0D31               	rlf	??_sprintf^(0+128),w
  3799  0784  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3800  0785  0084               	movwf	4
  3801  0786  120A  158A  200A  120A  118A  	fcall	stringdir
  3802  078B  00F0               	movwf	___lldiv@divisor
  3803  078C  120A  158A  200A  120A  118A  	fcall	stringdir
  3804  0791  00F1               	movwf	___lldiv@divisor+1
  3805  0792  120A  158A  200A  120A  118A  	fcall	stringdir
  3806  0797  00F2               	movwf	___lldiv@divisor+2
  3807  0798  120A  158A  200A  120A  118A  	fcall	stringdir
  3808  079D  00F3               	movwf	___lldiv@divisor+3
  3809  079E  0846               	movf	(sprintf@val+3)^(0+128),w
  3810  079F  00F7               	movwf	___lldiv@dividend+3
  3811  07A0  0845               	movf	(sprintf@val+2)^(0+128),w
  3812  07A1  00F6               	movwf	___lldiv@dividend+2
  3813  07A2  0844               	movf	(sprintf@val+1)^(0+128),w
  3814  07A3  00F5               	movwf	___lldiv@dividend+1
  3815  07A4  0843               	movf	sprintf@val^(0+128),w
  3816  07A5  00F4               	movwf	___lldiv@dividend
  3817  07A6  160A  158A  24C3  120A  118A  	fcall	___lldiv
  3818  07AB  0873               	movf	?___lldiv+3,w
  3819  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3820  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3821  07AE  00A7               	movwf	___llmod@dividend+3
  3822  07AF  0872               	movf	?___lldiv+2,w
  3823  07B0  00A6               	movwf	___llmod@dividend+2
  3824  07B1  0871               	movf	?___lldiv+1,w
  3825  07B2  00A5               	movwf	___llmod@dividend+1
  3826  07B3  0870               	movf	?___lldiv,w
  3827  07B4  00A4               	movwf	___llmod@dividend
  3828  07B5  160A  158A  2414  120A  118A  	fcall	___llmod
  3829  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  3830  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  3831  07BC  0820               	movf	?___llmod,w
  3832  07BD  3E30               	addlw	48
  3833  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  3834  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  3835  07C0  00B2               	movwf	(??_sprintf+1)^(0+128)
  3836  07C1  0832               	movf	(??_sprintf+1)^(0+128),w
  3837  07C2  00CE               	movwf	sprintf@c^(0+128)
  3838  07C3                     l3630:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3841  07C3  084E               	movf	sprintf@c^(0+128),w
  3842  07C4  00B1               	movwf	??_sprintf^(0+128)
  3843  07C5  0847               	movf	sprintf@sp^(0+128),w
  3844  07C6  0084               	movwf	4
  3845  07C7  0831               	movf	??_sprintf^(0+128),w
  3846  07C8  1383               	bcf	3,7	;select IRP bank0
  3847  07C9  0080               	movwf	0
  3848  07CA  2F69               	goto	l3626
  3849  07CB                     l3634:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3852  07CB  30FF               	movlw	255
  3853  07CC  07CC               	addwf	sprintf@prec^(0+128),f
  3854  07CD  1803               	skipnc
  3855  07CE  0ACD               	incf	(sprintf@prec+1)^(0+128),f
  3856  07CF  30FF               	movlw	255
  3857  07D0  07CD               	addwf	(sprintf@prec+1)^(0+128),f
  3858  07D1  0A4C               	incf	sprintf@prec^(0+128),w
  3859  07D2  1D03               	skipz
  3860  07D3  2FD8               	goto	u5901
  3861  07D4  0A4D               	incf	(sprintf@prec+1)^(0+128),w
  3862  07D5  1D03               	btfss	3,2
  3863  07D6  2FD8               	goto	u5901
  3864  07D7  2FD9               	goto	u5900
  3865  07D8                     u5901:
  3866  07D8  2F6E               	goto	l3628
  3867  07D9                     u5900:
  3868  07D9                     l3636:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3871  07D9  3001               	movlw	1
  3872  07DA  07A8               	addwf	sprintf@f^(0+128),f
  3873  07DB  30FF               	movlw	-1
  3874  07DC  0728               	addwf	sprintf@f^(0+128),w
  3875  07DD  0084               	movwf	4
  3876  07DE  120A  158A  200A  120A  118A  	fcall	stringdir
  3877  07E3  00B1               	movwf	??_sprintf^(0+128)
  3878  07E4  0831               	movf	??_sprintf^(0+128),w
  3879  07E5  00CE               	movwf	sprintf@c^(0+128)
  3880  07E6  084E               	movf	sprintf@c^(0+128),w
  3881  07E7  1D03               	btfss	3,2
  3882  07E8  2FEA               	goto	u5911
  3883  07E9  2FEB               	goto	u5910
  3884  07EA                     u5911:
  3885  07EA  2875               	goto	l3412
  3886  07EB                     u5910:
  3887  07EB                     l3638:
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3890  07EB  0847               	movf	sprintf@sp^(0+128),w
  3891  07EC  0084               	movwf	4
  3892  07ED  1383               	bcf	3,7	;select IRP bank0
  3893  07EE  0180               	clrf	0
  3894  07EF                     l377:
  3895  07EF  0008               	return
  3896  07F0                     __end_of_sprintf:
  3897                           
  3898                           	psect	text2
  3899  0940                     __ptext2:	
  3900 ;; *************** function _scale *****************
  3901 ;; Defined at:
  3902 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  scl             1    wreg     char 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  scl             1   48[BANK0 ] char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  4   30[BANK0 ] char 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       4       0       0       0
  3917 ;;      Locals:         0       5       0       0       0
  3918 ;;      Temps:          0      10       0       0       0
  3919 ;;      Totals:         0      19       0       0       0
  3920 ;;Total ram usage:       19 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    2
  3923 ;; This function calls:
  3924 ;;		___awdiv
  3925 ;;		___awmod
  3926 ;;		___flmul
  3927 ;; This function is called by:
  3928 ;;		_sprintf
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           
  3933                           ;psect for function _scale
  3934  0940                     _scale:
  3935                           
  3936                           ;incstack = 0
  3937                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3938                           ;scale@scl stored from wreg
  3939  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0942  00D0               	movwf	scale@scl
  3942  0943                     l3036:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3945  0943  1FD0               	btfss	scale@scl,7
  3946  0944  2946               	goto	u4601
  3947  0945  2947               	goto	u4600
  3948  0946                     u4601:
  3949  0946  2AF4               	goto	l3058
  3950  0947                     u4600:
  3951  0947                     l3038:
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3954  0947  09D0               	comf	scale@scl,f
  3955  0948  0AD0               	incf	scale@scl,f
  3956  0949                     l3040:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3959  0949  0850               	movf	scale@scl,w
  3960  094A  3A80               	xorlw	128
  3961  094B  3E12               	addlw	-238
  3962  094C  1C03               	skipc
  3963  094D  294F               	goto	u4611
  3964  094E  2950               	goto	u4610
  3965  094F                     u4611:
  3966  094F  2A38               	goto	l3048
  3967  0950                     u4610:
  3968  0950                     l3042:
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3971  0950  300A               	movlw	10
  3972  0951  00F7               	movwf	___awdiv@divisor
  3973  0952  3000               	movlw	0
  3974  0953  00F8               	movwf	___awdiv@divisor+1
  3975  0954  0850               	movf	scale@scl,w
  3976  0955  00F2               	movwf	___awmod@dividend
  3977  0956  01F3               	clrf	___awmod@dividend+1
  3978  0957  1BF2               	btfsc	___awmod@dividend,7
  3979  0958  03F3               	decf	___awmod@dividend+1,f
  3980  0959  3064               	movlw	100
  3981  095A  00F0               	movwf	___awmod@divisor
  3982  095B  3000               	movlw	0
  3983  095C  00F1               	movwf	___awmod@divisor+1
  3984  095D  160A  158A  246A  120A  158A  	fcall	___awmod
  3985  0962  0871               	movf	?___awmod+1,w
  3986  0963  00FA               	movwf	___awdiv@dividend+1
  3987  0964  0870               	movf	?___awmod,w
  3988  0965  00F9               	movwf	___awdiv@dividend
  3989  0966  120A  118A  2004  120A  158A  	fcall	___awdiv
  3990  096B  0877               	movf	?___awdiv,w
  3991  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3992  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3993  096E  00C2               	movwf	??_scale
  3994  096F  3001               	movlw	1
  3995  0970                     u4625:
  3996  0970  1003               	clrc
  3997  0971  0DC2               	rlf	??_scale,f
  3998  0972  3EFF               	addlw	-1
  3999  0973  1D03               	skipz
  4000  0974  2970               	goto	u4625
  4001  0975  1003               	clrc
  4002  0976  0D42               	rlf	??_scale,w
  4003  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4004  0978  0084               	movwf	4
  4005  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  4006  097E  00C3               	movwf	??_scale+1
  4007  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  4008  0984  00C4               	movwf	??_scale+2
  4009  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  4010  098A  00C5               	movwf	??_scale+3
  4011  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  4012  0990  00C6               	movwf	??_scale+4
  4013  0991  0846               	movf	??_scale+4,w
  4014  0992  00A7               	movwf	___flmul@b+3
  4015  0993  0845               	movf	??_scale+3,w
  4016  0994  00A6               	movwf	___flmul@b+2
  4017  0995  0844               	movf	??_scale+2,w
  4018  0996  00A5               	movwf	___flmul@b+1
  4019  0997  0843               	movf	??_scale+1,w
  4020  0998  00A4               	movwf	___flmul@b
  4021  0999  3064               	movlw	100
  4022  099A  00F7               	movwf	___awdiv@divisor
  4023  099B  3000               	movlw	0
  4024  099C  00F8               	movwf	___awdiv@divisor+1
  4025  099D  0850               	movf	scale@scl,w
  4026  099E  00F9               	movwf	___awdiv@dividend
  4027  099F  01FA               	clrf	___awdiv@dividend+1
  4028  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4029  09A1  03FA               	decf	___awdiv@dividend+1,f
  4030  09A2  120A  118A  2004  120A  158A  	fcall	___awdiv
  4031  09A7  0877               	movf	?___awdiv,w
  4032  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4033  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4034  09AA  00C7               	movwf	??_scale+5
  4035  09AB  3001               	movlw	1
  4036  09AC                     u4635:
  4037  09AC  1003               	clrc
  4038  09AD  0DC7               	rlf	??_scale+5,f
  4039  09AE  3EFF               	addlw	-1
  4040  09AF  1D03               	skipz
  4041  09B0  29AC               	goto	u4635
  4042  09B1  1003               	clrc
  4043  09B2  0D47               	rlf	??_scale+5,w
  4044  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4045  09B4  0084               	movwf	4
  4046  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4047  09BA  00C8               	movwf	??_scale+6
  4048  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4049  09C0  00C9               	movwf	??_scale+7
  4050  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4051  09C6  00CA               	movwf	??_scale+8
  4052  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4053  09CC  00CB               	movwf	??_scale+9
  4054  09CD  084B               	movf	??_scale+9,w
  4055  09CE  00AB               	movwf	___flmul@a+3
  4056  09CF  084A               	movf	??_scale+8,w
  4057  09D0  00AA               	movwf	___flmul@a+2
  4058  09D1  0849               	movf	??_scale+7,w
  4059  09D2  00A9               	movwf	___flmul@a+1
  4060  09D3  0848               	movf	??_scale+6,w
  4061  09D4  00A8               	movwf	___flmul@a
  4062  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4063  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4064  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4065  09DC  0827               	movf	?___flmul+3,w
  4066  09DD  00CF               	movwf	_scale$958+3
  4067  09DE  0826               	movf	?___flmul+2,w
  4068  09DF  00CE               	movwf	_scale$958+2
  4069  09E0  0825               	movf	?___flmul+1,w
  4070  09E1  00CD               	movwf	_scale$958+1
  4071  09E2  0824               	movf	?___flmul,w
  4072  09E3  00CC               	movwf	_scale$958
  4073                           
  4074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4075  09E4  300A               	movlw	10
  4076  09E5  00F0               	movwf	___awmod@divisor
  4077  09E6  3000               	movlw	0
  4078  09E7  00F1               	movwf	___awmod@divisor+1
  4079  09E8  0850               	movf	scale@scl,w
  4080  09E9  00F2               	movwf	___awmod@dividend
  4081  09EA  01F3               	clrf	___awmod@dividend+1
  4082  09EB  1BF2               	btfsc	___awmod@dividend,7
  4083  09EC  03F3               	decf	___awmod@dividend+1,f
  4084  09ED  160A  158A  246A  120A  158A  	fcall	___awmod
  4085  09F2  0870               	movf	?___awmod,w
  4086  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4087  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4088  09F5  00C2               	movwf	??_scale
  4089  09F6  3001               	movlw	1
  4090  09F7                     u4645:
  4091  09F7  1003               	clrc
  4092  09F8  0DC2               	rlf	??_scale,f
  4093  09F9  3EFF               	addlw	-1
  4094  09FA  1D03               	skipz
  4095  09FB  29F7               	goto	u4645
  4096  09FC  1003               	clrc
  4097  09FD  0D42               	rlf	??_scale,w
  4098  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4099  09FF  0084               	movwf	4
  4100  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4101  0A05  00C3               	movwf	??_scale+1
  4102  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4103  0A0B  00C4               	movwf	??_scale+2
  4104  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4105  0A11  00C5               	movwf	??_scale+3
  4106  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4107  0A17  00C6               	movwf	??_scale+4
  4108  0A18  0846               	movf	??_scale+4,w
  4109  0A19  00A7               	movwf	___flmul@b+3
  4110  0A1A  0845               	movf	??_scale+3,w
  4111  0A1B  00A6               	movwf	___flmul@b+2
  4112  0A1C  0844               	movf	??_scale+2,w
  4113  0A1D  00A5               	movwf	___flmul@b+1
  4114  0A1E  0843               	movf	??_scale+1,w
  4115  0A1F  00A4               	movwf	___flmul@b
  4116  0A20  084F               	movf	_scale$958+3,w
  4117  0A21  00AB               	movwf	___flmul@a+3
  4118  0A22  084E               	movf	_scale$958+2,w
  4119  0A23  00AA               	movwf	___flmul@a+2
  4120  0A24  084D               	movf	_scale$958+1,w
  4121  0A25  00A9               	movwf	___flmul@a+1
  4122  0A26  084C               	movf	_scale$958,w
  4123  0A27  00A8               	movwf	___flmul@a
  4124  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4125  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0A2F  0827               	movf	?___flmul+3,w
  4128  0A30  00C1               	movwf	?_scale+3
  4129  0A31  0826               	movf	?___flmul+2,w
  4130  0A32  00C0               	movwf	?_scale+2
  4131  0A33  0825               	movf	?___flmul+1,w
  4132  0A34  00BF               	movwf	?_scale+1
  4133  0A35  0824               	movf	?___flmul,w
  4134  0A36  00BE               	movwf	?_scale
  4135  0A37  2C9E               	goto	l302
  4136  0A38                     l3048:
  4137  0A38  0850               	movf	scale@scl,w
  4138  0A39  3A80               	xorlw	128
  4139  0A3A  3E75               	addlw	-139
  4140  0A3B  1C03               	skipc
  4141  0A3C  2A3E               	goto	u4651
  4142  0A3D  2A3F               	goto	u4650
  4143  0A3E                     u4651:
  4144  0A3E  2AC7               	goto	l3054
  4145  0A3F                     u4650:
  4146  0A3F                     l3050:
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4149  0A3F  300A               	movlw	10
  4150  0A40  00F0               	movwf	___awmod@divisor
  4151  0A41  3000               	movlw	0
  4152  0A42  00F1               	movwf	___awmod@divisor+1
  4153  0A43  0850               	movf	scale@scl,w
  4154  0A44  00F2               	movwf	___awmod@dividend
  4155  0A45  01F3               	clrf	___awmod@dividend+1
  4156  0A46  1BF2               	btfsc	___awmod@dividend,7
  4157  0A47  03F3               	decf	___awmod@dividend+1,f
  4158  0A48  160A  158A  246A  120A  158A  	fcall	___awmod
  4159  0A4D  0870               	movf	?___awmod,w
  4160  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4162  0A50  00C2               	movwf	??_scale
  4163  0A51  3001               	movlw	1
  4164  0A52                     u4665:
  4165  0A52  1003               	clrc
  4166  0A53  0DC2               	rlf	??_scale,f
  4167  0A54  3EFF               	addlw	-1
  4168  0A55  1D03               	skipz
  4169  0A56  2A52               	goto	u4665
  4170  0A57  1003               	clrc
  4171  0A58  0D42               	rlf	??_scale,w
  4172  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4173  0A5A  0084               	movwf	4
  4174  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4175  0A60  00C3               	movwf	??_scale+1
  4176  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4177  0A66  00C4               	movwf	??_scale+2
  4178  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4179  0A6C  00C5               	movwf	??_scale+3
  4180  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4181  0A72  00C6               	movwf	??_scale+4
  4182  0A73  0846               	movf	??_scale+4,w
  4183  0A74  00A7               	movwf	___flmul@b+3
  4184  0A75  0845               	movf	??_scale+3,w
  4185  0A76  00A6               	movwf	___flmul@b+2
  4186  0A77  0844               	movf	??_scale+2,w
  4187  0A78  00A5               	movwf	___flmul@b+1
  4188  0A79  0843               	movf	??_scale+1,w
  4189  0A7A  00A4               	movwf	___flmul@b
  4190  0A7B  300A               	movlw	10
  4191  0A7C  00F7               	movwf	___awdiv@divisor
  4192  0A7D  3000               	movlw	0
  4193  0A7E  00F8               	movwf	___awdiv@divisor+1
  4194  0A7F  0850               	movf	scale@scl,w
  4195  0A80  00F9               	movwf	___awdiv@dividend
  4196  0A81  01FA               	clrf	___awdiv@dividend+1
  4197  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4198  0A83  03FA               	decf	___awdiv@dividend+1,f
  4199  0A84  120A  118A  2004  120A  158A  	fcall	___awdiv
  4200  0A89  0877               	movf	?___awdiv,w
  4201  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0A8C  00C7               	movwf	??_scale+5
  4204  0A8D  3001               	movlw	1
  4205  0A8E                     u4675:
  4206  0A8E  1003               	clrc
  4207  0A8F  0DC7               	rlf	??_scale+5,f
  4208  0A90  3EFF               	addlw	-1
  4209  0A91  1D03               	skipz
  4210  0A92  2A8E               	goto	u4675
  4211  0A93  1003               	clrc
  4212  0A94  0D47               	rlf	??_scale+5,w
  4213  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4214  0A96  0084               	movwf	4
  4215  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4216  0A9C  00C8               	movwf	??_scale+6
  4217  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4218  0AA2  00C9               	movwf	??_scale+7
  4219  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4220  0AA8  00CA               	movwf	??_scale+8
  4221  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4222  0AAE  00CB               	movwf	??_scale+9
  4223  0AAF  084B               	movf	??_scale+9,w
  4224  0AB0  00AB               	movwf	___flmul@a+3
  4225  0AB1  084A               	movf	??_scale+8,w
  4226  0AB2  00AA               	movwf	___flmul@a+2
  4227  0AB3  0849               	movf	??_scale+7,w
  4228  0AB4  00A9               	movwf	___flmul@a+1
  4229  0AB5  0848               	movf	??_scale+6,w
  4230  0AB6  00A8               	movwf	___flmul@a
  4231  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4232  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0ABE  0827               	movf	?___flmul+3,w
  4235  0ABF  00C1               	movwf	?_scale+3
  4236  0AC0  0826               	movf	?___flmul+2,w
  4237  0AC1  00C0               	movwf	?_scale+2
  4238  0AC2  0825               	movf	?___flmul+1,w
  4239  0AC3  00BF               	movwf	?_scale+1
  4240  0AC4  0824               	movf	?___flmul,w
  4241  0AC5  00BE               	movwf	?_scale
  4242  0AC6  2C9E               	goto	l302
  4243  0AC7                     l3054:
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4246  0AC7  0850               	movf	scale@scl,w
  4247  0AC8  00C2               	movwf	??_scale
  4248  0AC9  3001               	movlw	1
  4249  0ACA                     u4685:
  4250  0ACA  1003               	clrc
  4251  0ACB  0DC2               	rlf	??_scale,f
  4252  0ACC  3EFF               	addlw	-1
  4253  0ACD  1D03               	skipz
  4254  0ACE  2ACA               	goto	u4685
  4255  0ACF  1003               	clrc
  4256  0AD0  0D42               	rlf	??_scale,w
  4257  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4258  0AD2  0084               	movwf	4
  4259  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4260  0AD8  00C3               	movwf	??_scale+1
  4261  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4262  0ADE  00C4               	movwf	??_scale+2
  4263  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4264  0AE4  00C5               	movwf	??_scale+3
  4265  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4266  0AEA  00C6               	movwf	??_scale+4
  4267  0AEB  0846               	movf	??_scale+4,w
  4268  0AEC  00C1               	movwf	?_scale+3
  4269  0AED  0845               	movf	??_scale+3,w
  4270  0AEE  00C0               	movwf	?_scale+2
  4271  0AEF  0844               	movf	??_scale+2,w
  4272  0AF0  00BF               	movwf	?_scale+1
  4273  0AF1  0843               	movf	??_scale+1,w
  4274  0AF2  00BE               	movwf	?_scale
  4275  0AF3  2C9E               	goto	l302
  4276  0AF4                     l3058:
  4277                           
  4278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4279  0AF4  0850               	movf	scale@scl,w
  4280  0AF5  3A80               	xorlw	128
  4281  0AF6  3E12               	addlw	-238
  4282  0AF7  1C03               	skipc
  4283  0AF8  2AFA               	goto	u4691
  4284  0AF9  2AFB               	goto	u4690
  4285  0AFA                     u4691:
  4286  0AFA  2BE3               	goto	l3066
  4287  0AFB                     u4690:
  4288  0AFB                     l3060:
  4289                           
  4290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4291  0AFB  300A               	movlw	10
  4292  0AFC  00F7               	movwf	___awdiv@divisor
  4293  0AFD  3000               	movlw	0
  4294  0AFE  00F8               	movwf	___awdiv@divisor+1
  4295  0AFF  0850               	movf	scale@scl,w
  4296  0B00  00F2               	movwf	___awmod@dividend
  4297  0B01  01F3               	clrf	___awmod@dividend+1
  4298  0B02  1BF2               	btfsc	___awmod@dividend,7
  4299  0B03  03F3               	decf	___awmod@dividend+1,f
  4300  0B04  3064               	movlw	100
  4301  0B05  00F0               	movwf	___awmod@divisor
  4302  0B06  3000               	movlw	0
  4303  0B07  00F1               	movwf	___awmod@divisor+1
  4304  0B08  160A  158A  246A  120A  158A  	fcall	___awmod
  4305  0B0D  0871               	movf	?___awmod+1,w
  4306  0B0E  00FA               	movwf	___awdiv@dividend+1
  4307  0B0F  0870               	movf	?___awmod,w
  4308  0B10  00F9               	movwf	___awdiv@dividend
  4309  0B11  120A  118A  2004  120A  158A  	fcall	___awdiv
  4310  0B16  0877               	movf	?___awdiv,w
  4311  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4312  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4313  0B19  00C2               	movwf	??_scale
  4314  0B1A  3001               	movlw	1
  4315  0B1B                     u4705:
  4316  0B1B  1003               	clrc
  4317  0B1C  0DC2               	rlf	??_scale,f
  4318  0B1D  3EFF               	addlw	-1
  4319  0B1E  1D03               	skipz
  4320  0B1F  2B1B               	goto	u4705
  4321  0B20  1003               	clrc
  4322  0B21  0D42               	rlf	??_scale,w
  4323  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4324  0B23  0084               	movwf	4
  4325  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4326  0B29  00C3               	movwf	??_scale+1
  4327  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4328  0B2F  00C4               	movwf	??_scale+2
  4329  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4330  0B35  00C5               	movwf	??_scale+3
  4331  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4332  0B3B  00C6               	movwf	??_scale+4
  4333  0B3C  0846               	movf	??_scale+4,w
  4334  0B3D  00A7               	movwf	___flmul@b+3
  4335  0B3E  0845               	movf	??_scale+3,w
  4336  0B3F  00A6               	movwf	___flmul@b+2
  4337  0B40  0844               	movf	??_scale+2,w
  4338  0B41  00A5               	movwf	___flmul@b+1
  4339  0B42  0843               	movf	??_scale+1,w
  4340  0B43  00A4               	movwf	___flmul@b
  4341  0B44  3064               	movlw	100
  4342  0B45  00F7               	movwf	___awdiv@divisor
  4343  0B46  3000               	movlw	0
  4344  0B47  00F8               	movwf	___awdiv@divisor+1
  4345  0B48  0850               	movf	scale@scl,w
  4346  0B49  00F9               	movwf	___awdiv@dividend
  4347  0B4A  01FA               	clrf	___awdiv@dividend+1
  4348  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4349  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4350  0B4D  120A  118A  2004  120A  158A  	fcall	___awdiv
  4351  0B52  0877               	movf	?___awdiv,w
  4352  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0B55  00C7               	movwf	??_scale+5
  4355  0B56  3001               	movlw	1
  4356  0B57                     u4715:
  4357  0B57  1003               	clrc
  4358  0B58  0DC7               	rlf	??_scale+5,f
  4359  0B59  3EFF               	addlw	-1
  4360  0B5A  1D03               	skipz
  4361  0B5B  2B57               	goto	u4715
  4362  0B5C  1003               	clrc
  4363  0B5D  0D47               	rlf	??_scale+5,w
  4364  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4365  0B5F  0084               	movwf	4
  4366  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4367  0B65  00C8               	movwf	??_scale+6
  4368  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4369  0B6B  00C9               	movwf	??_scale+7
  4370  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4371  0B71  00CA               	movwf	??_scale+8
  4372  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4373  0B77  00CB               	movwf	??_scale+9
  4374  0B78  084B               	movf	??_scale+9,w
  4375  0B79  00AB               	movwf	___flmul@a+3
  4376  0B7A  084A               	movf	??_scale+8,w
  4377  0B7B  00AA               	movwf	___flmul@a+2
  4378  0B7C  0849               	movf	??_scale+7,w
  4379  0B7D  00A9               	movwf	___flmul@a+1
  4380  0B7E  0848               	movf	??_scale+6,w
  4381  0B7F  00A8               	movwf	___flmul@a
  4382  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4383  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0B87  0827               	movf	?___flmul+3,w
  4386  0B88  00CF               	movwf	_scale$958+3
  4387  0B89  0826               	movf	?___flmul+2,w
  4388  0B8A  00CE               	movwf	_scale$958+2
  4389  0B8B  0825               	movf	?___flmul+1,w
  4390  0B8C  00CD               	movwf	_scale$958+1
  4391  0B8D  0824               	movf	?___flmul,w
  4392  0B8E  00CC               	movwf	_scale$958
  4393                           
  4394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4395  0B8F  300A               	movlw	10
  4396  0B90  00F0               	movwf	___awmod@divisor
  4397  0B91  3000               	movlw	0
  4398  0B92  00F1               	movwf	___awmod@divisor+1
  4399  0B93  0850               	movf	scale@scl,w
  4400  0B94  00F2               	movwf	___awmod@dividend
  4401  0B95  01F3               	clrf	___awmod@dividend+1
  4402  0B96  1BF2               	btfsc	___awmod@dividend,7
  4403  0B97  03F3               	decf	___awmod@dividend+1,f
  4404  0B98  160A  158A  246A  120A  158A  	fcall	___awmod
  4405  0B9D  0870               	movf	?___awmod,w
  4406  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0BA0  00C2               	movwf	??_scale
  4409  0BA1  3001               	movlw	1
  4410  0BA2                     u4725:
  4411  0BA2  1003               	clrc
  4412  0BA3  0DC2               	rlf	??_scale,f
  4413  0BA4  3EFF               	addlw	-1
  4414  0BA5  1D03               	skipz
  4415  0BA6  2BA2               	goto	u4725
  4416  0BA7  1003               	clrc
  4417  0BA8  0D42               	rlf	??_scale,w
  4418  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4419  0BAA  0084               	movwf	4
  4420  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4421  0BB0  00C3               	movwf	??_scale+1
  4422  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4423  0BB6  00C4               	movwf	??_scale+2
  4424  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4425  0BBC  00C5               	movwf	??_scale+3
  4426  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4427  0BC2  00C6               	movwf	??_scale+4
  4428  0BC3  0846               	movf	??_scale+4,w
  4429  0BC4  00A7               	movwf	___flmul@b+3
  4430  0BC5  0845               	movf	??_scale+3,w
  4431  0BC6  00A6               	movwf	___flmul@b+2
  4432  0BC7  0844               	movf	??_scale+2,w
  4433  0BC8  00A5               	movwf	___flmul@b+1
  4434  0BC9  0843               	movf	??_scale+1,w
  4435  0BCA  00A4               	movwf	___flmul@b
  4436  0BCB  084F               	movf	_scale$958+3,w
  4437  0BCC  00AB               	movwf	___flmul@a+3
  4438  0BCD  084E               	movf	_scale$958+2,w
  4439  0BCE  00AA               	movwf	___flmul@a+2
  4440  0BCF  084D               	movf	_scale$958+1,w
  4441  0BD0  00A9               	movwf	___flmul@a+1
  4442  0BD1  084C               	movf	_scale$958,w
  4443  0BD2  00A8               	movwf	___flmul@a
  4444  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4445  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0BDA  0827               	movf	?___flmul+3,w
  4448  0BDB  00C1               	movwf	?_scale+3
  4449  0BDC  0826               	movf	?___flmul+2,w
  4450  0BDD  00C0               	movwf	?_scale+2
  4451  0BDE  0825               	movf	?___flmul+1,w
  4452  0BDF  00BF               	movwf	?_scale+1
  4453  0BE0  0824               	movf	?___flmul,w
  4454  0BE1  00BE               	movwf	?_scale
  4455  0BE2  2C9E               	goto	l302
  4456  0BE3                     l3066:
  4457  0BE3  0850               	movf	scale@scl,w
  4458  0BE4  3A80               	xorlw	128
  4459  0BE5  3E75               	addlw	-139
  4460  0BE6  1C03               	skipc
  4461  0BE7  2BE9               	goto	u4731
  4462  0BE8  2BEA               	goto	u4730
  4463  0BE9                     u4731:
  4464  0BE9  2C72               	goto	l3072
  4465  0BEA                     u4730:
  4466  0BEA                     l3068:
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4469  0BEA  300A               	movlw	10
  4470  0BEB  00F0               	movwf	___awmod@divisor
  4471  0BEC  3000               	movlw	0
  4472  0BED  00F1               	movwf	___awmod@divisor+1
  4473  0BEE  0850               	movf	scale@scl,w
  4474  0BEF  00F2               	movwf	___awmod@dividend
  4475  0BF0  01F3               	clrf	___awmod@dividend+1
  4476  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4477  0BF2  03F3               	decf	___awmod@dividend+1,f
  4478  0BF3  160A  158A  246A  120A  158A  	fcall	___awmod
  4479  0BF8  0870               	movf	?___awmod,w
  4480  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4481  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4482  0BFB  00C2               	movwf	??_scale
  4483  0BFC  3001               	movlw	1
  4484  0BFD                     u4745:
  4485  0BFD  1003               	clrc
  4486  0BFE  0DC2               	rlf	??_scale,f
  4487  0BFF  3EFF               	addlw	-1
  4488  0C00  1D03               	skipz
  4489  0C01  2BFD               	goto	u4745
  4490  0C02  1003               	clrc
  4491  0C03  0D42               	rlf	??_scale,w
  4492  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4493  0C05  0084               	movwf	4
  4494  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4495  0C0B  00C3               	movwf	??_scale+1
  4496  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4497  0C11  00C4               	movwf	??_scale+2
  4498  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4499  0C17  00C5               	movwf	??_scale+3
  4500  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4501  0C1D  00C6               	movwf	??_scale+4
  4502  0C1E  0846               	movf	??_scale+4,w
  4503  0C1F  00A7               	movwf	___flmul@b+3
  4504  0C20  0845               	movf	??_scale+3,w
  4505  0C21  00A6               	movwf	___flmul@b+2
  4506  0C22  0844               	movf	??_scale+2,w
  4507  0C23  00A5               	movwf	___flmul@b+1
  4508  0C24  0843               	movf	??_scale+1,w
  4509  0C25  00A4               	movwf	___flmul@b
  4510  0C26  300A               	movlw	10
  4511  0C27  00F7               	movwf	___awdiv@divisor
  4512  0C28  3000               	movlw	0
  4513  0C29  00F8               	movwf	___awdiv@divisor+1
  4514  0C2A  0850               	movf	scale@scl,w
  4515  0C2B  00F9               	movwf	___awdiv@dividend
  4516  0C2C  01FA               	clrf	___awdiv@dividend+1
  4517  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4518  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4519  0C2F  120A  118A  2004  120A  158A  	fcall	___awdiv
  4520  0C34  0877               	movf	?___awdiv,w
  4521  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4522  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4523  0C37  00C7               	movwf	??_scale+5
  4524  0C38  3001               	movlw	1
  4525  0C39                     u4755:
  4526  0C39  1003               	clrc
  4527  0C3A  0DC7               	rlf	??_scale+5,f
  4528  0C3B  3EFF               	addlw	-1
  4529  0C3C  1D03               	skipz
  4530  0C3D  2C39               	goto	u4755
  4531  0C3E  1003               	clrc
  4532  0C3F  0D47               	rlf	??_scale+5,w
  4533  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4534  0C41  0084               	movwf	4
  4535  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4536  0C47  00C8               	movwf	??_scale+6
  4537  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4538  0C4D  00C9               	movwf	??_scale+7
  4539  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4540  0C53  00CA               	movwf	??_scale+8
  4541  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4542  0C59  00CB               	movwf	??_scale+9
  4543  0C5A  084B               	movf	??_scale+9,w
  4544  0C5B  00AB               	movwf	___flmul@a+3
  4545  0C5C  084A               	movf	??_scale+8,w
  4546  0C5D  00AA               	movwf	___flmul@a+2
  4547  0C5E  0849               	movf	??_scale+7,w
  4548  0C5F  00A9               	movwf	___flmul@a+1
  4549  0C60  0848               	movf	??_scale+6,w
  4550  0C61  00A8               	movwf	___flmul@a
  4551  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4552  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0C69  0827               	movf	?___flmul+3,w
  4555  0C6A  00C1               	movwf	?_scale+3
  4556  0C6B  0826               	movf	?___flmul+2,w
  4557  0C6C  00C0               	movwf	?_scale+2
  4558  0C6D  0825               	movf	?___flmul+1,w
  4559  0C6E  00BF               	movwf	?_scale+1
  4560  0C6F  0824               	movf	?___flmul,w
  4561  0C70  00BE               	movwf	?_scale
  4562  0C71  2C9E               	goto	l302
  4563  0C72                     l3072:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4566  0C72  0850               	movf	scale@scl,w
  4567  0C73  00C2               	movwf	??_scale
  4568  0C74  3001               	movlw	1
  4569  0C75                     u4765:
  4570  0C75  1003               	clrc
  4571  0C76  0DC2               	rlf	??_scale,f
  4572  0C77  3EFF               	addlw	-1
  4573  0C78  1D03               	skipz
  4574  0C79  2C75               	goto	u4765
  4575  0C7A  1003               	clrc
  4576  0C7B  0D42               	rlf	??_scale,w
  4577  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4578  0C7D  0084               	movwf	4
  4579  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4580  0C83  00C3               	movwf	??_scale+1
  4581  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4582  0C89  00C4               	movwf	??_scale+2
  4583  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4584  0C8F  00C5               	movwf	??_scale+3
  4585  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4586  0C95  00C6               	movwf	??_scale+4
  4587  0C96  0846               	movf	??_scale+4,w
  4588  0C97  00C1               	movwf	?_scale+3
  4589  0C98  0845               	movf	??_scale+3,w
  4590  0C99  00C0               	movwf	?_scale+2
  4591  0C9A  0844               	movf	??_scale+2,w
  4592  0C9B  00BF               	movwf	?_scale+1
  4593  0C9C  0843               	movf	??_scale+1,w
  4594  0C9D  00BE               	movwf	?_scale
  4595  0C9E                     l302:
  4596  0C9E  0008               	return
  4597  0C9F                     __end_of_scale:
  4598                           
  4599                           	psect	text3
  4600  1C6A                     __ptext3:	
  4601 ;; *************** function ___awmod *****************
  4602 ;; Defined at:
  4603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  divisor         2    0[COMMON] int 
  4606 ;;  dividend        2    2[COMMON] int 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  sign            1    6[COMMON] unsigned char 
  4609 ;;  counter         1    5[COMMON] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  2    0[COMMON] int 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4619 ;;      Params:         4       0       0       0       0
  4620 ;;      Locals:         2       0       0       0       0
  4621 ;;      Temps:          1       0       0       0       0
  4622 ;;      Totals:         7       0       0       0       0
  4623 ;;Total ram usage:        7 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_scale
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function ___awmod
  4634  1C6A                     ___awmod:
  4635  1C6A                     l2552:	
  4636                           ;incstack = 0
  4637                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4638                           
  4639  1C6A  01F6               	clrf	___awmod@sign
  4640  1C6B                     l2554:
  4641  1C6B  1FF3               	btfss	___awmod@dividend+1,7
  4642  1C6C  2C6E               	goto	u3391
  4643  1C6D  2C6F               	goto	u3390
  4644  1C6E                     u3391:
  4645  1C6E  2C76               	goto	l2560
  4646  1C6F                     u3390:
  4647  1C6F                     l2556:
  4648  1C6F  09F2               	comf	___awmod@dividend,f
  4649  1C70  09F3               	comf	___awmod@dividend+1,f
  4650  1C71  0AF2               	incf	___awmod@dividend,f
  4651  1C72  1903               	skipnz
  4652  1C73  0AF3               	incf	___awmod@dividend+1,f
  4653  1C74                     l2558:
  4654  1C74  01F6               	clrf	___awmod@sign
  4655  1C75  0AF6               	incf	___awmod@sign,f
  4656  1C76                     l2560:
  4657  1C76  1FF1               	btfss	___awmod@divisor+1,7
  4658  1C77  2C79               	goto	u3401
  4659  1C78  2C7A               	goto	u3400
  4660  1C79                     u3401:
  4661  1C79  2C7F               	goto	l2564
  4662  1C7A                     u3400:
  4663  1C7A                     l2562:
  4664  1C7A  09F0               	comf	___awmod@divisor,f
  4665  1C7B  09F1               	comf	___awmod@divisor+1,f
  4666  1C7C  0AF0               	incf	___awmod@divisor,f
  4667  1C7D  1903               	skipnz
  4668  1C7E  0AF1               	incf	___awmod@divisor+1,f
  4669  1C7F                     l2564:
  4670  1C7F  0870               	movf	___awmod@divisor,w
  4671  1C80  0471               	iorwf	___awmod@divisor+1,w
  4672  1C81  1903               	btfsc	3,2
  4673  1C82  2C84               	goto	u3411
  4674  1C83  2C85               	goto	u3410
  4675  1C84                     u3411:
  4676  1C84  2CB4               	goto	l2582
  4677  1C85                     u3410:
  4678  1C85                     l2566:
  4679  1C85  01F5               	clrf	___awmod@counter
  4680  1C86  0AF5               	incf	___awmod@counter,f
  4681  1C87  2C93               	goto	l2572
  4682  1C88                     l2568:
  4683  1C88  3001               	movlw	1
  4684  1C89                     u3425:
  4685  1C89  1003               	clrc
  4686  1C8A  0DF0               	rlf	___awmod@divisor,f
  4687  1C8B  0DF1               	rlf	___awmod@divisor+1,f
  4688  1C8C  3EFF               	addlw	-1
  4689  1C8D  1D03               	skipz
  4690  1C8E  2C89               	goto	u3425
  4691  1C8F                     l2570:
  4692  1C8F  3001               	movlw	1
  4693  1C90  00F4               	movwf	??___awmod
  4694  1C91  0874               	movf	??___awmod,w
  4695  1C92  07F5               	addwf	___awmod@counter,f
  4696  1C93                     l2572:
  4697  1C93  1FF1               	btfss	___awmod@divisor+1,7
  4698  1C94  2C96               	goto	u3431
  4699  1C95  2C97               	goto	u3430
  4700  1C96                     u3431:
  4701  1C96  2C88               	goto	l2568
  4702  1C97                     u3430:
  4703  1C97                     l2574:
  4704  1C97  0871               	movf	___awmod@divisor+1,w
  4705  1C98  0273               	subwf	___awmod@dividend+1,w
  4706  1C99  1D03               	skipz
  4707  1C9A  2C9D               	goto	u3445
  4708  1C9B  0870               	movf	___awmod@divisor,w
  4709  1C9C  0272               	subwf	___awmod@dividend,w
  4710  1C9D                     u3445:
  4711  1C9D  1C03               	skipc
  4712  1C9E  2CA0               	goto	u3441
  4713  1C9F  2CA1               	goto	u3440
  4714  1CA0                     u3441:
  4715  1CA0  2CA7               	goto	l2578
  4716  1CA1                     u3440:
  4717  1CA1                     l2576:
  4718  1CA1  0870               	movf	___awmod@divisor,w
  4719  1CA2  02F2               	subwf	___awmod@dividend,f
  4720  1CA3  0871               	movf	___awmod@divisor+1,w
  4721  1CA4  1C03               	skipc
  4722  1CA5  03F3               	decf	___awmod@dividend+1,f
  4723  1CA6  02F3               	subwf	___awmod@dividend+1,f
  4724  1CA7                     l2578:
  4725  1CA7  3001               	movlw	1
  4726  1CA8                     u3455:
  4727  1CA8  1003               	clrc
  4728  1CA9  0CF1               	rrf	___awmod@divisor+1,f
  4729  1CAA  0CF0               	rrf	___awmod@divisor,f
  4730  1CAB  3EFF               	addlw	-1
  4731  1CAC  1D03               	skipz
  4732  1CAD  2CA8               	goto	u3455
  4733  1CAE                     l2580:
  4734  1CAE  3001               	movlw	1
  4735  1CAF  02F5               	subwf	___awmod@counter,f
  4736  1CB0  1D03               	btfss	3,2
  4737  1CB1  2CB3               	goto	u3461
  4738  1CB2  2CB4               	goto	u3460
  4739  1CB3                     u3461:
  4740  1CB3  2C97               	goto	l2574
  4741  1CB4                     u3460:
  4742  1CB4                     l2582:
  4743  1CB4  0876               	movf	___awmod@sign,w
  4744  1CB5  1903               	btfsc	3,2
  4745  1CB6  2CB8               	goto	u3471
  4746  1CB7  2CB9               	goto	u3470
  4747  1CB8                     u3471:
  4748  1CB8  2CBE               	goto	l2586
  4749  1CB9                     u3470:
  4750  1CB9                     l2584:
  4751  1CB9  09F2               	comf	___awmod@dividend,f
  4752  1CBA  09F3               	comf	___awmod@dividend+1,f
  4753  1CBB  0AF2               	incf	___awmod@dividend,f
  4754  1CBC  1903               	skipnz
  4755  1CBD  0AF3               	incf	___awmod@dividend+1,f
  4756  1CBE                     l2586:
  4757  1CBE  0873               	movf	___awmod@dividend+1,w
  4758  1CBF  00F1               	movwf	?___awmod+1
  4759  1CC0  0872               	movf	___awmod@dividend,w
  4760  1CC1  00F0               	movwf	?___awmod
  4761  1CC2                     l547:
  4762  1CC2  0008               	return
  4763  1CC3                     __end_of___awmod:
  4764                           
  4765                           	psect	text4
  4766  0004                     __ptext4:	
  4767 ;; *************** function ___awdiv *****************
  4768 ;; Defined at:
  4769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  divisor         2    7[COMMON] int 
  4772 ;;  dividend        2    9[COMMON] int 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  quotient        2    2[BANK0 ] int 
  4775 ;;  sign            1    1[BANK0 ] unsigned char 
  4776 ;;  counter         1    0[BANK0 ] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  2    7[COMMON] int 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         4       0       0       0       0
  4787 ;;      Locals:         0       4       0       0       0
  4788 ;;      Temps:          1       0       0       0       0
  4789 ;;      Totals:         5       4       0       0       0
  4790 ;;Total ram usage:        9 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_scale
  4796 ;;		_sprintf
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function ___awdiv
  4802  0004                     ___awdiv:
  4803  0004                     l2508:	
  4804                           ;incstack = 0
  4805                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4806                           
  4807  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0006  01A1               	clrf	___awdiv@sign
  4810  0007                     l2510:
  4811  0007  1FF8               	btfss	___awdiv@divisor+1,7
  4812  0008  280A               	goto	u3291
  4813  0009  280B               	goto	u3290
  4814  000A                     u3291:
  4815  000A  2812               	goto	l2516
  4816  000B                     u3290:
  4817  000B                     l2512:
  4818  000B  09F7               	comf	___awdiv@divisor,f
  4819  000C  09F8               	comf	___awdiv@divisor+1,f
  4820  000D  0AF7               	incf	___awdiv@divisor,f
  4821  000E  1903               	skipnz
  4822  000F  0AF8               	incf	___awdiv@divisor+1,f
  4823  0010                     l2514:
  4824  0010  01A1               	clrf	___awdiv@sign
  4825  0011  0AA1               	incf	___awdiv@sign,f
  4826  0012                     l2516:
  4827  0012  1FFA               	btfss	___awdiv@dividend+1,7
  4828  0013  2815               	goto	u3301
  4829  0014  2816               	goto	u3300
  4830  0015                     u3301:
  4831  0015  281F               	goto	l2522
  4832  0016                     u3300:
  4833  0016                     l2518:
  4834  0016  09F9               	comf	___awdiv@dividend,f
  4835  0017  09FA               	comf	___awdiv@dividend+1,f
  4836  0018  0AF9               	incf	___awdiv@dividend,f
  4837  0019  1903               	skipnz
  4838  001A  0AFA               	incf	___awdiv@dividend+1,f
  4839  001B                     l2520:
  4840  001B  3001               	movlw	1
  4841  001C  00FB               	movwf	??___awdiv
  4842  001D  087B               	movf	??___awdiv,w
  4843  001E  06A1               	xorwf	___awdiv@sign,f
  4844  001F                     l2522:
  4845  001F  01A2               	clrf	___awdiv@quotient
  4846  0020  01A3               	clrf	___awdiv@quotient+1
  4847  0021                     l2524:
  4848  0021  0877               	movf	___awdiv@divisor,w
  4849  0022  0478               	iorwf	___awdiv@divisor+1,w
  4850  0023  1903               	btfsc	3,2
  4851  0024  2826               	goto	u3311
  4852  0025  2827               	goto	u3310
  4853  0026                     u3311:
  4854  0026  285E               	goto	l2544
  4855  0027                     u3310:
  4856  0027                     l2526:
  4857  0027  01A0               	clrf	___awdiv@counter
  4858  0028  0AA0               	incf	___awdiv@counter,f
  4859  0029  2835               	goto	l2532
  4860  002A                     l2528:
  4861  002A  3001               	movlw	1
  4862  002B                     u3325:
  4863  002B  1003               	clrc
  4864  002C  0DF7               	rlf	___awdiv@divisor,f
  4865  002D  0DF8               	rlf	___awdiv@divisor+1,f
  4866  002E  3EFF               	addlw	-1
  4867  002F  1D03               	skipz
  4868  0030  282B               	goto	u3325
  4869  0031                     l2530:
  4870  0031  3001               	movlw	1
  4871  0032  00FB               	movwf	??___awdiv
  4872  0033  087B               	movf	??___awdiv,w
  4873  0034  07A0               	addwf	___awdiv@counter,f
  4874  0035                     l2532:
  4875  0035  1FF8               	btfss	___awdiv@divisor+1,7
  4876  0036  2838               	goto	u3331
  4877  0037  2839               	goto	u3330
  4878  0038                     u3331:
  4879  0038  282A               	goto	l2528
  4880  0039                     u3330:
  4881  0039                     l2534:
  4882  0039  3001               	movlw	1
  4883  003A                     u3345:
  4884  003A  1003               	clrc
  4885  003B  0DA2               	rlf	___awdiv@quotient,f
  4886  003C  0DA3               	rlf	___awdiv@quotient+1,f
  4887  003D  3EFF               	addlw	-1
  4888  003E  1D03               	skipz
  4889  003F  283A               	goto	u3345
  4890  0040  0878               	movf	___awdiv@divisor+1,w
  4891  0041  027A               	subwf	___awdiv@dividend+1,w
  4892  0042  1D03               	skipz
  4893  0043  2846               	goto	u3355
  4894  0044  0877               	movf	___awdiv@divisor,w
  4895  0045  0279               	subwf	___awdiv@dividend,w
  4896  0046                     u3355:
  4897  0046  1C03               	skipc
  4898  0047  2849               	goto	u3351
  4899  0048  284A               	goto	u3350
  4900  0049                     u3351:
  4901  0049  2851               	goto	l2540
  4902  004A                     u3350:
  4903  004A                     l2536:
  4904  004A  0877               	movf	___awdiv@divisor,w
  4905  004B  02F9               	subwf	___awdiv@dividend,f
  4906  004C  0878               	movf	___awdiv@divisor+1,w
  4907  004D  1C03               	skipc
  4908  004E  03FA               	decf	___awdiv@dividend+1,f
  4909  004F  02FA               	subwf	___awdiv@dividend+1,f
  4910  0050                     l2538:
  4911  0050  1422               	bsf	___awdiv@quotient,0
  4912  0051                     l2540:
  4913  0051  3001               	movlw	1
  4914  0052                     u3365:
  4915  0052  1003               	clrc
  4916  0053  0CF8               	rrf	___awdiv@divisor+1,f
  4917  0054  0CF7               	rrf	___awdiv@divisor,f
  4918  0055  3EFF               	addlw	-1
  4919  0056  1D03               	skipz
  4920  0057  2852               	goto	u3365
  4921  0058                     l2542:
  4922  0058  3001               	movlw	1
  4923  0059  02A0               	subwf	___awdiv@counter,f
  4924  005A  1D03               	btfss	3,2
  4925  005B  285D               	goto	u3371
  4926  005C  285E               	goto	u3370
  4927  005D                     u3371:
  4928  005D  2839               	goto	l2534
  4929  005E                     u3370:
  4930  005E                     l2544:
  4931  005E  0821               	movf	___awdiv@sign,w
  4932  005F  1903               	btfsc	3,2
  4933  0060  2862               	goto	u3381
  4934  0061  2863               	goto	u3380
  4935  0062                     u3381:
  4936  0062  2868               	goto	l2548
  4937  0063                     u3380:
  4938  0063                     l2546:
  4939  0063  09A2               	comf	___awdiv@quotient,f
  4940  0064  09A3               	comf	___awdiv@quotient+1,f
  4941  0065  0AA2               	incf	___awdiv@quotient,f
  4942  0066  1903               	skipnz
  4943  0067  0AA3               	incf	___awdiv@quotient+1,f
  4944  0068                     l2548:
  4945  0068  0823               	movf	___awdiv@quotient+1,w
  4946  0069  00F8               	movwf	?___awdiv+1
  4947  006A  0822               	movf	___awdiv@quotient,w
  4948  006B  00F7               	movwf	?___awdiv
  4949  006C                     l534:
  4950  006C  0008               	return
  4951  006D                     __end_of___awdiv:
  4952                           
  4953                           	psect	text5
  4954  18EF                     __ptext5:	
  4955 ;; *************** function _isdigit *****************
  4956 ;; Defined at:
  4957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  c               1    wreg     unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  c               1    1[COMMON] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;		None               void
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4971 ;;      Params:         0       0       0       0       0
  4972 ;;      Locals:         2       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0
  4974 ;;      Totals:         2       0       0       0       0
  4975 ;;Total ram usage:        2 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_sprintf
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           
  4985                           ;psect for function _isdigit
  4986  18EF                     _isdigit:
  4987                           
  4988                           ;incstack = 0
  4989                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4990                           ;isdigit@c stored from wreg
  4991  18EF  00F1               	movwf	isdigit@c
  4992  18F0                     l3076:
  4993  18F0  01F0               	clrf	_isdigit$767
  4994  18F1                     l3078:
  4995  18F1  303A               	movlw	58
  4996  18F2  0271               	subwf	isdigit@c,w
  4997  18F3  1803               	skipnc
  4998  18F4  28F6               	goto	u4771
  4999  18F5  28F7               	goto	u4770
  5000  18F6                     u4771:
  5001  18F6  28FF               	goto	l3084
  5002  18F7                     u4770:
  5003  18F7                     l3080:
  5004  18F7  3030               	movlw	48
  5005  18F8  0271               	subwf	isdigit@c,w
  5006  18F9  1C03               	skipc
  5007  18FA  28FC               	goto	u4781
  5008  18FB  28FD               	goto	u4780
  5009  18FC                     u4781:
  5010  18FC  28FF               	goto	l3084
  5011  18FD                     u4780:
  5012  18FD                     l3082:
  5013  18FD  01F0               	clrf	_isdigit$767
  5014  18FE  0AF0               	incf	_isdigit$767,f
  5015  18FF                     l3084:
  5016  18FF  0C70               	rrf	_isdigit$767,w
  5017  1900                     l868:
  5018  1900  0008               	return
  5019  1901                     __end_of_isdigit:
  5020                           
  5021                           	psect	text6
  5022  136D                     __ptext6:	
  5023 ;; *************** function _fround *****************
  5024 ;; Defined at:
  5025 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  prec            1    wreg     unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  prec            1   49[BANK0 ] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  4   30[BANK0 ] unsigned char 
  5032 ;; Registers used:
  5033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5039 ;;      Params:         0       4       0       0       0
  5040 ;;      Locals:         0       9       0       0       0
  5041 ;;      Temps:          0       7       0       0       0
  5042 ;;      Totals:         0      20       0       0       0
  5043 ;;Total ram usage:       20 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    2
  5046 ;; This function calls:
  5047 ;;		___flmul
  5048 ;;		___lwdiv
  5049 ;;		___lwmod
  5050 ;; This function is called by:
  5051 ;;		_sprintf
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _fround
  5057  136D                     _fround:
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5061                           ;fround@prec stored from wreg
  5062  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5063  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5064  136F  00D1               	movwf	fround@prec
  5065  1370                     l3018:
  5066                           
  5067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5068  1370  306E               	movlw	110
  5069  1371  0251               	subwf	fround@prec,w
  5070  1372  1C03               	skipc
  5071  1373  2B75               	goto	u4521
  5072  1374  2B76               	goto	u4520
  5073  1375                     u4521:
  5074  1375  2C83               	goto	l3026
  5075  1376                     u4520:
  5076  1376                     l3020:
  5077                           
  5078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5079  1376  303F               	movlw	63
  5080  1377  00A7               	movwf	___flmul@b+3
  5081  1378  3000               	movlw	0
  5082  1379  00A6               	movwf	___flmul@b+2
  5083  137A  3000               	movlw	0
  5084  137B  00A5               	movwf	___flmul@b+1
  5085  137C  3000               	movlw	0
  5086  137D  00A4               	movwf	___flmul@b
  5087  137E  3064               	movlw	100
  5088  137F  00F6               	movwf	___lwdiv@divisor
  5089  1380  3000               	movlw	0
  5090  1381  00F7               	movwf	___lwdiv@divisor+1
  5091  1382  0851               	movf	fround@prec,w
  5092  1383  00C2               	movwf	??_fround
  5093  1384  01C3               	clrf	??_fround+1
  5094  1385  0842               	movf	??_fround,w
  5095  1386  00F8               	movwf	___lwdiv@dividend
  5096  1387  0843               	movf	??_fround+1,w
  5097  1388  00F9               	movwf	___lwdiv@dividend+1
  5098  1389  160A  158A  22E1  160A  118A  	fcall	___lwdiv
  5099  138E  0876               	movf	?___lwdiv,w
  5100  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5101  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5102  1391  00C4               	movwf	??_fround+2
  5103  1392  3001               	movlw	1
  5104  1393                     u4535:
  5105  1393  1003               	clrc
  5106  1394  0DC4               	rlf	??_fround+2,f
  5107  1395  3EFF               	addlw	-1
  5108  1396  1D03               	skipz
  5109  1397  2B93               	goto	u4535
  5110  1398  1003               	clrc
  5111  1399  0D44               	rlf	??_fround+2,w
  5112  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5113  139B  0084               	movwf	4
  5114  139C  120A  158A  200A  160A  118A  	fcall	stringdir
  5115  13A1  00C5               	movwf	??_fround+3
  5116  13A2  120A  158A  200A  160A  118A  	fcall	stringdir
  5117  13A7  00C6               	movwf	??_fround+4
  5118  13A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5119  13AD  00C7               	movwf	??_fround+5
  5120  13AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5121  13B3  00C8               	movwf	??_fround+6
  5122  13B4  0848               	movf	??_fround+6,w
  5123  13B5  00AB               	movwf	___flmul@a+3
  5124  13B6  0847               	movf	??_fround+5,w
  5125  13B7  00AA               	movwf	___flmul@a+2
  5126  13B8  0846               	movf	??_fround+4,w
  5127  13B9  00A9               	movwf	___flmul@a+1
  5128  13BA  0845               	movf	??_fround+3,w
  5129  13BB  00A8               	movwf	___flmul@a
  5130  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5131  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5132  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5133  13C3  0827               	movf	?___flmul+3,w
  5134  13C4  00D0               	movwf	_fround$956+3
  5135  13C5  0826               	movf	?___flmul+2,w
  5136  13C6  00CF               	movwf	_fround$956+2
  5137  13C7  0825               	movf	?___flmul+1,w
  5138  13C8  00CE               	movwf	_fround$956+1
  5139  13C9  0824               	movf	?___flmul,w
  5140  13CA  00CD               	movwf	_fround$956
  5141                           
  5142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5143  13CB  300A               	movlw	10
  5144  13CC  00F6               	movwf	___lwdiv@divisor
  5145  13CD  3000               	movlw	0
  5146  13CE  00F7               	movwf	___lwdiv@divisor+1
  5147  13CF  0851               	movf	fround@prec,w
  5148  13D0  00C2               	movwf	??_fround
  5149  13D1  01C3               	clrf	??_fround+1
  5150  13D2  0842               	movf	??_fround,w
  5151  13D3  00F2               	movwf	___lwmod@dividend
  5152  13D4  0843               	movf	??_fround+1,w
  5153  13D5  00F3               	movwf	___lwmod@dividend+1
  5154  13D6  3064               	movlw	100
  5155  13D7  00F0               	movwf	___lwmod@divisor
  5156  13D8  3000               	movlw	0
  5157  13D9  00F1               	movwf	___lwmod@divisor+1
  5158  13DA  160A  158A  2227  160A  118A  	fcall	___lwmod
  5159  13DF  0871               	movf	?___lwmod+1,w
  5160  13E0  00F9               	movwf	___lwdiv@dividend+1
  5161  13E1  0870               	movf	?___lwmod,w
  5162  13E2  00F8               	movwf	___lwdiv@dividend
  5163  13E3  160A  158A  22E1  160A  118A  	fcall	___lwdiv
  5164  13E8  0876               	movf	?___lwdiv,w
  5165  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5166  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5167  13EB  00C4               	movwf	??_fround+2
  5168  13EC  3001               	movlw	1
  5169  13ED                     u4545:
  5170  13ED  1003               	clrc
  5171  13EE  0DC4               	rlf	??_fround+2,f
  5172  13EF  3EFF               	addlw	-1
  5173  13F0  1D03               	skipz
  5174  13F1  2BED               	goto	u4545
  5175  13F2  1003               	clrc
  5176  13F3  0D44               	rlf	??_fround+2,w
  5177  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5178  13F5  0084               	movwf	4
  5179  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  5180  13FB  00C5               	movwf	??_fround+3
  5181  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5182  1401  00C6               	movwf	??_fround+4
  5183  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  5184  1407  00C7               	movwf	??_fround+5
  5185  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  5186  140D  00C8               	movwf	??_fround+6
  5187  140E  0848               	movf	??_fround+6,w
  5188  140F  00A7               	movwf	___flmul@b+3
  5189  1410  0847               	movf	??_fround+5,w
  5190  1411  00A6               	movwf	___flmul@b+2
  5191  1412  0846               	movf	??_fround+4,w
  5192  1413  00A5               	movwf	___flmul@b+1
  5193  1414  0845               	movf	??_fround+3,w
  5194  1415  00A4               	movwf	___flmul@b
  5195  1416  0850               	movf	_fround$956+3,w
  5196  1417  00AB               	movwf	___flmul@a+3
  5197  1418  084F               	movf	_fround$956+2,w
  5198  1419  00AA               	movwf	___flmul@a+2
  5199  141A  084E               	movf	_fround$956+1,w
  5200  141B  00A9               	movwf	___flmul@a+1
  5201  141C  084D               	movf	_fround$956,w
  5202  141D  00A8               	movwf	___flmul@a
  5203  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5204  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5205  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5206  1425  0827               	movf	?___flmul+3,w
  5207  1426  00CC               	movwf	_fround$957+3
  5208  1427  0826               	movf	?___flmul+2,w
  5209  1428  00CB               	movwf	_fround$957+2
  5210  1429  0825               	movf	?___flmul+1,w
  5211  142A  00CA               	movwf	_fround$957+1
  5212  142B  0824               	movf	?___flmul,w
  5213  142C  00C9               	movwf	_fround$957
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5216  142D  300A               	movlw	10
  5217  142E  00F0               	movwf	___lwmod@divisor
  5218  142F  3000               	movlw	0
  5219  1430  00F1               	movwf	___lwmod@divisor+1
  5220  1431  0851               	movf	fround@prec,w
  5221  1432  00C2               	movwf	??_fround
  5222  1433  01C3               	clrf	??_fround+1
  5223  1434  0842               	movf	??_fround,w
  5224  1435  00F2               	movwf	___lwmod@dividend
  5225  1436  0843               	movf	??_fround+1,w
  5226  1437  00F3               	movwf	___lwmod@dividend+1
  5227  1438  160A  158A  2227  160A  118A  	fcall	___lwmod
  5228  143D  0870               	movf	?___lwmod,w
  5229  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5230  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5231  1440  00C4               	movwf	??_fround+2
  5232  1441  3001               	movlw	1
  5233  1442                     u4555:
  5234  1442  1003               	clrc
  5235  1443  0DC4               	rlf	??_fround+2,f
  5236  1444  3EFF               	addlw	-1
  5237  1445  1D03               	skipz
  5238  1446  2C42               	goto	u4555
  5239  1447  1003               	clrc
  5240  1448  0D44               	rlf	??_fround+2,w
  5241  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5242  144A  0084               	movwf	4
  5243  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  5244  1450  00C5               	movwf	??_fround+3
  5245  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  5246  1456  00C6               	movwf	??_fround+4
  5247  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  5248  145C  00C7               	movwf	??_fround+5
  5249  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  5250  1462  00C8               	movwf	??_fround+6
  5251  1463  0848               	movf	??_fround+6,w
  5252  1464  00A7               	movwf	___flmul@b+3
  5253  1465  0847               	movf	??_fround+5,w
  5254  1466  00A6               	movwf	___flmul@b+2
  5255  1467  0846               	movf	??_fround+4,w
  5256  1468  00A5               	movwf	___flmul@b+1
  5257  1469  0845               	movf	??_fround+3,w
  5258  146A  00A4               	movwf	___flmul@b
  5259  146B  084C               	movf	_fround$957+3,w
  5260  146C  00AB               	movwf	___flmul@a+3
  5261  146D  084B               	movf	_fround$957+2,w
  5262  146E  00AA               	movwf	___flmul@a+2
  5263  146F  084A               	movf	_fround$957+1,w
  5264  1470  00A9               	movwf	___flmul@a+1
  5265  1471  0849               	movf	_fround$957,w
  5266  1472  00A8               	movwf	___flmul@a
  5267  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5268  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5269  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5270  147A  0827               	movf	?___flmul+3,w
  5271  147B  00C1               	movwf	?_fround+3
  5272  147C  0826               	movf	?___flmul+2,w
  5273  147D  00C0               	movwf	?_fround+2
  5274  147E  0825               	movf	?___flmul+1,w
  5275  147F  00BF               	movwf	?_fround+1
  5276  1480  0824               	movf	?___flmul,w
  5277  1481  00BE               	movwf	?_fround
  5278  1482  2D77               	goto	l295
  5279  1483                     l3026:
  5280  1483  300B               	movlw	11
  5281  1484  0251               	subwf	fround@prec,w
  5282  1485  1C03               	skipc
  5283  1486  2C88               	goto	u4561
  5284  1487  2C89               	goto	u4560
  5285  1488                     u4561:
  5286  1488  2D34               	goto	l3032
  5287  1489                     u4560:
  5288  1489                     l3028:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5291  1489  303F               	movlw	63
  5292  148A  00A7               	movwf	___flmul@b+3
  5293  148B  3000               	movlw	0
  5294  148C  00A6               	movwf	___flmul@b+2
  5295  148D  3000               	movlw	0
  5296  148E  00A5               	movwf	___flmul@b+1
  5297  148F  3000               	movlw	0
  5298  1490  00A4               	movwf	___flmul@b
  5299  1491  300A               	movlw	10
  5300  1492  00F6               	movwf	___lwdiv@divisor
  5301  1493  3000               	movlw	0
  5302  1494  00F7               	movwf	___lwdiv@divisor+1
  5303  1495  0851               	movf	fround@prec,w
  5304  1496  00C2               	movwf	??_fround
  5305  1497  01C3               	clrf	??_fround+1
  5306  1498  0842               	movf	??_fround,w
  5307  1499  00F8               	movwf	___lwdiv@dividend
  5308  149A  0843               	movf	??_fround+1,w
  5309  149B  00F9               	movwf	___lwdiv@dividend+1
  5310  149C  160A  158A  22E1  160A  118A  	fcall	___lwdiv
  5311  14A1  0876               	movf	?___lwdiv,w
  5312  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5313  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5314  14A4  00C4               	movwf	??_fround+2
  5315  14A5  3001               	movlw	1
  5316  14A6                     u4575:
  5317  14A6  1003               	clrc
  5318  14A7  0DC4               	rlf	??_fround+2,f
  5319  14A8  3EFF               	addlw	-1
  5320  14A9  1D03               	skipz
  5321  14AA  2CA6               	goto	u4575
  5322  14AB  1003               	clrc
  5323  14AC  0D44               	rlf	??_fround+2,w
  5324  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5325  14AE  0084               	movwf	4
  5326  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5327  14B4  00C5               	movwf	??_fround+3
  5328  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5329  14BA  00C6               	movwf	??_fround+4
  5330  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5331  14C0  00C7               	movwf	??_fround+5
  5332  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5333  14C6  00C8               	movwf	??_fround+6
  5334  14C7  0848               	movf	??_fround+6,w
  5335  14C8  00AB               	movwf	___flmul@a+3
  5336  14C9  0847               	movf	??_fround+5,w
  5337  14CA  00AA               	movwf	___flmul@a+2
  5338  14CB  0846               	movf	??_fround+4,w
  5339  14CC  00A9               	movwf	___flmul@a+1
  5340  14CD  0845               	movf	??_fround+3,w
  5341  14CE  00A8               	movwf	___flmul@a
  5342  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5343  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5344  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5345  14D6  0827               	movf	?___flmul+3,w
  5346  14D7  00D0               	movwf	_fround$956+3
  5347  14D8  0826               	movf	?___flmul+2,w
  5348  14D9  00CF               	movwf	_fround$956+2
  5349  14DA  0825               	movf	?___flmul+1,w
  5350  14DB  00CE               	movwf	_fround$956+1
  5351  14DC  0824               	movf	?___flmul,w
  5352  14DD  00CD               	movwf	_fround$956
  5353                           
  5354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5355  14DE  300A               	movlw	10
  5356  14DF  00F0               	movwf	___lwmod@divisor
  5357  14E0  3000               	movlw	0
  5358  14E1  00F1               	movwf	___lwmod@divisor+1
  5359  14E2  0851               	movf	fround@prec,w
  5360  14E3  00C2               	movwf	??_fround
  5361  14E4  01C3               	clrf	??_fround+1
  5362  14E5  0842               	movf	??_fround,w
  5363  14E6  00F2               	movwf	___lwmod@dividend
  5364  14E7  0843               	movf	??_fround+1,w
  5365  14E8  00F3               	movwf	___lwmod@dividend+1
  5366  14E9  160A  158A  2227  160A  118A  	fcall	___lwmod
  5367  14EE  0870               	movf	?___lwmod,w
  5368  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5369  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5370  14F1  00C4               	movwf	??_fround+2
  5371  14F2  3001               	movlw	1
  5372  14F3                     u4585:
  5373  14F3  1003               	clrc
  5374  14F4  0DC4               	rlf	??_fround+2,f
  5375  14F5  3EFF               	addlw	-1
  5376  14F6  1D03               	skipz
  5377  14F7  2CF3               	goto	u4585
  5378  14F8  1003               	clrc
  5379  14F9  0D44               	rlf	??_fround+2,w
  5380  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5381  14FB  0084               	movwf	4
  5382  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5383  1501  00C5               	movwf	??_fround+3
  5384  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5385  1507  00C6               	movwf	??_fround+4
  5386  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5387  150D  00C7               	movwf	??_fround+5
  5388  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5389  1513  00C8               	movwf	??_fround+6
  5390  1514  0848               	movf	??_fround+6,w
  5391  1515  00A7               	movwf	___flmul@b+3
  5392  1516  0847               	movf	??_fround+5,w
  5393  1517  00A6               	movwf	___flmul@b+2
  5394  1518  0846               	movf	??_fround+4,w
  5395  1519  00A5               	movwf	___flmul@b+1
  5396  151A  0845               	movf	??_fround+3,w
  5397  151B  00A4               	movwf	___flmul@b
  5398  151C  0850               	movf	_fround$956+3,w
  5399  151D  00AB               	movwf	___flmul@a+3
  5400  151E  084F               	movf	_fround$956+2,w
  5401  151F  00AA               	movwf	___flmul@a+2
  5402  1520  084E               	movf	_fround$956+1,w
  5403  1521  00A9               	movwf	___flmul@a+1
  5404  1522  084D               	movf	_fround$956,w
  5405  1523  00A8               	movwf	___flmul@a
  5406  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5407  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5408  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5409  152B  0827               	movf	?___flmul+3,w
  5410  152C  00C1               	movwf	?_fround+3
  5411  152D  0826               	movf	?___flmul+2,w
  5412  152E  00C0               	movwf	?_fround+2
  5413  152F  0825               	movf	?___flmul+1,w
  5414  1530  00BF               	movwf	?_fround+1
  5415  1531  0824               	movf	?___flmul,w
  5416  1532  00BE               	movwf	?_fround
  5417  1533  2D77               	goto	l295
  5418  1534                     l3032:
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5421  1534  303F               	movlw	63
  5422  1535  00A7               	movwf	___flmul@b+3
  5423  1536  3000               	movlw	0
  5424  1537  00A6               	movwf	___flmul@b+2
  5425  1538  3000               	movlw	0
  5426  1539  00A5               	movwf	___flmul@b+1
  5427  153A  3000               	movlw	0
  5428  153B  00A4               	movwf	___flmul@b
  5429  153C  0851               	movf	fround@prec,w
  5430  153D  00C2               	movwf	??_fround
  5431  153E  3001               	movlw	1
  5432  153F                     u4595:
  5433  153F  1003               	clrc
  5434  1540  0DC2               	rlf	??_fround,f
  5435  1541  3EFF               	addlw	-1
  5436  1542  1D03               	skipz
  5437  1543  2D3F               	goto	u4595
  5438  1544  1003               	clrc
  5439  1545  0D42               	rlf	??_fround,w
  5440  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5441  1547  0084               	movwf	4
  5442  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5443  154D  00C3               	movwf	??_fround+1
  5444  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5445  1553  00C4               	movwf	??_fround+2
  5446  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5447  1559  00C5               	movwf	??_fround+3
  5448  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5449  155F  00C6               	movwf	??_fround+4
  5450  1560  0846               	movf	??_fround+4,w
  5451  1561  00AB               	movwf	___flmul@a+3
  5452  1562  0845               	movf	??_fround+3,w
  5453  1563  00AA               	movwf	___flmul@a+2
  5454  1564  0844               	movf	??_fround+2,w
  5455  1565  00A9               	movwf	___flmul@a+1
  5456  1566  0843               	movf	??_fround+1,w
  5457  1567  00A8               	movwf	___flmul@a
  5458  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5459  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5460  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5461  156F  0827               	movf	?___flmul+3,w
  5462  1570  00C1               	movwf	?_fround+3
  5463  1571  0826               	movf	?___flmul+2,w
  5464  1572  00C0               	movwf	?_fround+2
  5465  1573  0825               	movf	?___flmul+1,w
  5466  1574  00BF               	movwf	?_fround+1
  5467  1575  0824               	movf	?___flmul,w
  5468  1576  00BE               	movwf	?_fround
  5469  1577                     l295:
  5470  1577  0008               	return
  5471  1578                     __end_of_fround:
  5472                           
  5473                           	psect	text7
  5474  1A27                     __ptext7:	
  5475 ;; *************** function ___lwmod *****************
  5476 ;; Defined at:
  5477 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  divisor         2    0[COMMON] unsigned int 
  5480 ;;  dividend        2    2[COMMON] unsigned int 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  counter         1    5[COMMON] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  2    0[COMMON] unsigned int 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5492 ;;      Params:         4       0       0       0       0
  5493 ;;      Locals:         1       0       0       0       0
  5494 ;;      Temps:          1       0       0       0       0
  5495 ;;      Totals:         6       0       0       0       0
  5496 ;;Total ram usage:        6 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_fround
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           
  5506                           ;psect for function ___lwmod
  5507  1A27                     ___lwmod:
  5508  1A27                     l2616:	
  5509                           ;incstack = 0
  5510                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5511                           
  5512  1A27  0870               	movf	___lwmod@divisor,w
  5513  1A28  0471               	iorwf	___lwmod@divisor+1,w
  5514  1A29  1903               	btfsc	3,2
  5515  1A2A  2A2C               	goto	u3551
  5516  1A2B  2A2D               	goto	u3550
  5517  1A2C                     u3551:
  5518  1A2C  2A5C               	goto	l2634
  5519  1A2D                     u3550:
  5520  1A2D                     l2618:
  5521  1A2D  01F5               	clrf	___lwmod@counter
  5522  1A2E  0AF5               	incf	___lwmod@counter,f
  5523  1A2F  2A3B               	goto	l2624
  5524  1A30                     l2620:
  5525  1A30  3001               	movlw	1
  5526  1A31                     u3565:
  5527  1A31  1003               	clrc
  5528  1A32  0DF0               	rlf	___lwmod@divisor,f
  5529  1A33  0DF1               	rlf	___lwmod@divisor+1,f
  5530  1A34  3EFF               	addlw	-1
  5531  1A35  1D03               	skipz
  5532  1A36  2A31               	goto	u3565
  5533  1A37                     l2622:
  5534  1A37  3001               	movlw	1
  5535  1A38  00F4               	movwf	??___lwmod
  5536  1A39  0874               	movf	??___lwmod,w
  5537  1A3A  07F5               	addwf	___lwmod@counter,f
  5538  1A3B                     l2624:
  5539  1A3B  1FF1               	btfss	___lwmod@divisor+1,7
  5540  1A3C  2A3E               	goto	u3571
  5541  1A3D  2A3F               	goto	u3570
  5542  1A3E                     u3571:
  5543  1A3E  2A30               	goto	l2620
  5544  1A3F                     u3570:
  5545  1A3F                     l2626:
  5546  1A3F  0871               	movf	___lwmod@divisor+1,w
  5547  1A40  0273               	subwf	___lwmod@dividend+1,w
  5548  1A41  1D03               	skipz
  5549  1A42  2A45               	goto	u3585
  5550  1A43  0870               	movf	___lwmod@divisor,w
  5551  1A44  0272               	subwf	___lwmod@dividend,w
  5552  1A45                     u3585:
  5553  1A45  1C03               	skipc
  5554  1A46  2A48               	goto	u3581
  5555  1A47  2A49               	goto	u3580
  5556  1A48                     u3581:
  5557  1A48  2A4F               	goto	l2630
  5558  1A49                     u3580:
  5559  1A49                     l2628:
  5560  1A49  0870               	movf	___lwmod@divisor,w
  5561  1A4A  02F2               	subwf	___lwmod@dividend,f
  5562  1A4B  0871               	movf	___lwmod@divisor+1,w
  5563  1A4C  1C03               	skipc
  5564  1A4D  03F3               	decf	___lwmod@dividend+1,f
  5565  1A4E  02F3               	subwf	___lwmod@dividend+1,f
  5566  1A4F                     l2630:
  5567  1A4F  3001               	movlw	1
  5568  1A50                     u3595:
  5569  1A50  1003               	clrc
  5570  1A51  0CF1               	rrf	___lwmod@divisor+1,f
  5571  1A52  0CF0               	rrf	___lwmod@divisor,f
  5572  1A53  3EFF               	addlw	-1
  5573  1A54  1D03               	skipz
  5574  1A55  2A50               	goto	u3595
  5575  1A56                     l2632:
  5576  1A56  3001               	movlw	1
  5577  1A57  02F5               	subwf	___lwmod@counter,f
  5578  1A58  1D03               	btfss	3,2
  5579  1A59  2A5B               	goto	u3601
  5580  1A5A  2A5C               	goto	u3600
  5581  1A5B                     u3601:
  5582  1A5B  2A3F               	goto	l2626
  5583  1A5C                     u3600:
  5584  1A5C                     l2634:
  5585  1A5C  0873               	movf	___lwmod@dividend+1,w
  5586  1A5D  00F1               	movwf	?___lwmod+1
  5587  1A5E  0872               	movf	___lwmod@dividend,w
  5588  1A5F  00F0               	movwf	?___lwmod
  5589  1A60                     l697:
  5590  1A60  0008               	return
  5591  1A61                     __end_of___lwmod:
  5592                           
  5593                           	psect	text8
  5594  1AE1                     __ptext8:	
  5595 ;; *************** function ___lwdiv *****************
  5596 ;; Defined at:
  5597 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  divisor         2    6[COMMON] unsigned int 
  5600 ;;  dividend        2    8[COMMON] unsigned int 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  quotient        2   11[COMMON] unsigned int 
  5603 ;;  counter         1   13[COMMON] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  2    6[COMMON] unsigned int 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5613 ;;      Params:         4       0       0       0       0
  5614 ;;      Locals:         3       0       0       0       0
  5615 ;;      Temps:          1       0       0       0       0
  5616 ;;      Totals:         8       0       0       0       0
  5617 ;;Total ram usage:        8 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_fround
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           
  5627                           ;psect for function ___lwdiv
  5628  1AE1                     ___lwdiv:
  5629  1AE1                     l2590:	
  5630                           ;incstack = 0
  5631                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5632                           
  5633  1AE1  01FB               	clrf	___lwdiv@quotient
  5634  1AE2  01FC               	clrf	___lwdiv@quotient+1
  5635  1AE3                     l2592:
  5636  1AE3  0876               	movf	___lwdiv@divisor,w
  5637  1AE4  0477               	iorwf	___lwdiv@divisor+1,w
  5638  1AE5  1903               	btfsc	3,2
  5639  1AE6  2AE8               	goto	u3481
  5640  1AE7  2AE9               	goto	u3480
  5641  1AE8                     u3481:
  5642  1AE8  2B20               	goto	l2612
  5643  1AE9                     u3480:
  5644  1AE9                     l2594:
  5645  1AE9  01FD               	clrf	___lwdiv@counter
  5646  1AEA  0AFD               	incf	___lwdiv@counter,f
  5647  1AEB  2AF7               	goto	l2600
  5648  1AEC                     l2596:
  5649  1AEC  3001               	movlw	1
  5650  1AED                     u3495:
  5651  1AED  1003               	clrc
  5652  1AEE  0DF6               	rlf	___lwdiv@divisor,f
  5653  1AEF  0DF7               	rlf	___lwdiv@divisor+1,f
  5654  1AF0  3EFF               	addlw	-1
  5655  1AF1  1D03               	skipz
  5656  1AF2  2AED               	goto	u3495
  5657  1AF3                     l2598:
  5658  1AF3  3001               	movlw	1
  5659  1AF4  00FA               	movwf	??___lwdiv
  5660  1AF5  087A               	movf	??___lwdiv,w
  5661  1AF6  07FD               	addwf	___lwdiv@counter,f
  5662  1AF7                     l2600:
  5663  1AF7  1FF7               	btfss	___lwdiv@divisor+1,7
  5664  1AF8  2AFA               	goto	u3501
  5665  1AF9  2AFB               	goto	u3500
  5666  1AFA                     u3501:
  5667  1AFA  2AEC               	goto	l2596
  5668  1AFB                     u3500:
  5669  1AFB                     l2602:
  5670  1AFB  3001               	movlw	1
  5671  1AFC                     u3515:
  5672  1AFC  1003               	clrc
  5673  1AFD  0DFB               	rlf	___lwdiv@quotient,f
  5674  1AFE  0DFC               	rlf	___lwdiv@quotient+1,f
  5675  1AFF  3EFF               	addlw	-1
  5676  1B00  1D03               	skipz
  5677  1B01  2AFC               	goto	u3515
  5678  1B02  0877               	movf	___lwdiv@divisor+1,w
  5679  1B03  0279               	subwf	___lwdiv@dividend+1,w
  5680  1B04  1D03               	skipz
  5681  1B05  2B08               	goto	u3525
  5682  1B06  0876               	movf	___lwdiv@divisor,w
  5683  1B07  0278               	subwf	___lwdiv@dividend,w
  5684  1B08                     u3525:
  5685  1B08  1C03               	skipc
  5686  1B09  2B0B               	goto	u3521
  5687  1B0A  2B0C               	goto	u3520
  5688  1B0B                     u3521:
  5689  1B0B  2B13               	goto	l2608
  5690  1B0C                     u3520:
  5691  1B0C                     l2604:
  5692  1B0C  0876               	movf	___lwdiv@divisor,w
  5693  1B0D  02F8               	subwf	___lwdiv@dividend,f
  5694  1B0E  0877               	movf	___lwdiv@divisor+1,w
  5695  1B0F  1C03               	skipc
  5696  1B10  03F9               	decf	___lwdiv@dividend+1,f
  5697  1B11  02F9               	subwf	___lwdiv@dividend+1,f
  5698  1B12                     l2606:
  5699  1B12  147B               	bsf	___lwdiv@quotient,0
  5700  1B13                     l2608:
  5701  1B13  3001               	movlw	1
  5702  1B14                     u3535:
  5703  1B14  1003               	clrc
  5704  1B15  0CF7               	rrf	___lwdiv@divisor+1,f
  5705  1B16  0CF6               	rrf	___lwdiv@divisor,f
  5706  1B17  3EFF               	addlw	-1
  5707  1B18  1D03               	skipz
  5708  1B19  2B14               	goto	u3535
  5709  1B1A                     l2610:
  5710  1B1A  3001               	movlw	1
  5711  1B1B  02FD               	subwf	___lwdiv@counter,f
  5712  1B1C  1D03               	btfss	3,2
  5713  1B1D  2B1F               	goto	u3541
  5714  1B1E  2B20               	goto	u3540
  5715  1B1F                     u3541:
  5716  1B1F  2AFB               	goto	l2602
  5717  1B20                     u3540:
  5718  1B20                     l2612:
  5719  1B20  087C               	movf	___lwdiv@quotient+1,w
  5720  1B21  00F7               	movwf	?___lwdiv+1
  5721  1B22  087B               	movf	___lwdiv@quotient,w
  5722  1B23  00F6               	movwf	?___lwdiv
  5723  1B24                     l687:
  5724  1B24  0008               	return
  5725  1B25                     __end_of___lwdiv:
  5726                           
  5727                           	psect	text9
  5728  0C9F                     __ptext9:	
  5729 ;; *************** function ___flmul *****************
  5730 ;; Defined at:
  5731 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  b               4    4[BANK0 ] unsigned int 
  5734 ;;  a               4    8[BANK0 ] unsigned int 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  prod            4   24[BANK0 ] struct .
  5737 ;;  grs             4   18[BANK0 ] unsigned long 
  5738 ;;  temp            2   28[BANK0 ] struct .
  5739 ;;  bexp            1   23[BANK0 ] unsigned char 
  5740 ;;  aexp            1   22[BANK0 ] unsigned char 
  5741 ;;  sign            1   17[BANK0 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  4    4[BANK0 ] unsigned char 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5751 ;;      Params:         0       8       0       0       0
  5752 ;;      Locals:         0      13       0       0       0
  5753 ;;      Temps:          0       5       0       0       0
  5754 ;;      Totals:         0      26       0       0       0
  5755 ;;Total ram usage:       26 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    1
  5758 ;; This function calls:
  5759 ;;		__Umul8_16
  5760 ;; This function is called by:
  5761 ;;		_main
  5762 ;;		_fround
  5763 ;;		_scale
  5764 ;;		_sprintf
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function ___flmul
  5770  0C9F                     ___flmul:
  5771  0C9F                     l2832:	
  5772                           ;incstack = 0
  5773                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5774                           
  5775  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0CA1  0827               	movf	___flmul@b+3,w
  5778  0CA2  3980               	andlw	128
  5779  0CA3  00AC               	movwf	??___flmul
  5780  0CA4  082C               	movf	??___flmul,w
  5781  0CA5  00B1               	movwf	___flmul@sign
  5782  0CA6                     l2834:
  5783  0CA6  0827               	movf	___flmul@b+3,w
  5784  0CA7  00AC               	movwf	??___flmul
  5785  0CA8  072C               	addwf	??___flmul,w
  5786  0CA9  00AD               	movwf	??___flmul+1
  5787  0CAA  082D               	movf	??___flmul+1,w
  5788  0CAB  00B7               	movwf	___flmul@bexp
  5789  0CAC                     l2836:
  5790  0CAC  1FA6               	btfss	___flmul@b+2,7
  5791  0CAD  2CAF               	goto	u4071
  5792  0CAE  2CB0               	goto	u4070
  5793  0CAF                     u4071:
  5794  0CAF  2CB1               	goto	l2840
  5795  0CB0                     u4070:
  5796  0CB0                     l2838:
  5797  0CB0  1437               	bsf	___flmul@bexp,0
  5798  0CB1                     l2840:
  5799  0CB1  0837               	movf	___flmul@bexp,w
  5800  0CB2  1903               	btfsc	3,2
  5801  0CB3  2CB5               	goto	u4081
  5802  0CB4  2CB6               	goto	u4080
  5803  0CB5                     u4081:
  5804  0CB5  2CC5               	goto	l2848
  5805  0CB6                     u4080:
  5806  0CB6                     l2842:
  5807  0CB6  0A37               	incf	___flmul@bexp,w
  5808  0CB7  1D03               	btfss	3,2
  5809  0CB8  2CBA               	goto	u4091
  5810  0CB9  2CBB               	goto	u4090
  5811  0CBA                     u4091:
  5812  0CBA  2CC3               	goto	l2846
  5813  0CBB                     u4090:
  5814  0CBB                     l2844:
  5815  0CBB  3000               	movlw	0
  5816  0CBC  00A7               	movwf	___flmul@b+3
  5817  0CBD  3000               	movlw	0
  5818  0CBE  00A6               	movwf	___flmul@b+2
  5819  0CBF  3000               	movlw	0
  5820  0CC0  00A5               	movwf	___flmul@b+1
  5821  0CC1  3000               	movlw	0
  5822  0CC2  00A4               	movwf	___flmul@b
  5823  0CC3                     l2846:
  5824  0CC3  17A6               	bsf	___flmul@b+2,7
  5825  0CC4  2CCD               	goto	l2850
  5826  0CC5                     l2848:
  5827  0CC5  3000               	movlw	0
  5828  0CC6  00A7               	movwf	___flmul@b+3
  5829  0CC7  3000               	movlw	0
  5830  0CC8  00A6               	movwf	___flmul@b+2
  5831  0CC9  3000               	movlw	0
  5832  0CCA  00A5               	movwf	___flmul@b+1
  5833  0CCB  3000               	movlw	0
  5834  0CCC  00A4               	movwf	___flmul@b
  5835  0CCD                     l2850:
  5836  0CCD  082B               	movf	___flmul@a+3,w
  5837  0CCE  3980               	andlw	128
  5838  0CCF  00AC               	movwf	??___flmul
  5839  0CD0  082C               	movf	??___flmul,w
  5840  0CD1  06B1               	xorwf	___flmul@sign,f
  5841  0CD2                     l2852:
  5842  0CD2  082B               	movf	___flmul@a+3,w
  5843  0CD3  00AC               	movwf	??___flmul
  5844  0CD4  072C               	addwf	??___flmul,w
  5845  0CD5  00AD               	movwf	??___flmul+1
  5846  0CD6  082D               	movf	??___flmul+1,w
  5847  0CD7  00B6               	movwf	___flmul@aexp
  5848  0CD8                     l2854:
  5849  0CD8  1FAA               	btfss	___flmul@a+2,7
  5850  0CD9  2CDB               	goto	u4101
  5851  0CDA  2CDC               	goto	u4100
  5852  0CDB                     u4101:
  5853  0CDB  2CDD               	goto	l2858
  5854  0CDC                     u4100:
  5855  0CDC                     l2856:
  5856  0CDC  1436               	bsf	___flmul@aexp,0
  5857  0CDD                     l2858:
  5858  0CDD  0836               	movf	___flmul@aexp,w
  5859  0CDE  1903               	btfsc	3,2
  5860  0CDF  2CE1               	goto	u4111
  5861  0CE0  2CE2               	goto	u4110
  5862  0CE1                     u4111:
  5863  0CE1  2CF1               	goto	l2866
  5864  0CE2                     u4110:
  5865  0CE2                     l2860:
  5866  0CE2  0A36               	incf	___flmul@aexp,w
  5867  0CE3  1D03               	btfss	3,2
  5868  0CE4  2CE6               	goto	u4121
  5869  0CE5  2CE7               	goto	u4120
  5870  0CE6                     u4121:
  5871  0CE6  2CEF               	goto	l2864
  5872  0CE7                     u4120:
  5873  0CE7                     l2862:
  5874  0CE7  3000               	movlw	0
  5875  0CE8  00AB               	movwf	___flmul@a+3
  5876  0CE9  3000               	movlw	0
  5877  0CEA  00AA               	movwf	___flmul@a+2
  5878  0CEB  3000               	movlw	0
  5879  0CEC  00A9               	movwf	___flmul@a+1
  5880  0CED  3000               	movlw	0
  5881  0CEE  00A8               	movwf	___flmul@a
  5882  0CEF                     l2864:
  5883  0CEF  17AA               	bsf	___flmul@a+2,7
  5884  0CF0  2CF9               	goto	l2868
  5885  0CF1                     l2866:
  5886  0CF1  3000               	movlw	0
  5887  0CF2  00AB               	movwf	___flmul@a+3
  5888  0CF3  3000               	movlw	0
  5889  0CF4  00AA               	movwf	___flmul@a+2
  5890  0CF5  3000               	movlw	0
  5891  0CF6  00A9               	movwf	___flmul@a+1
  5892  0CF7  3000               	movlw	0
  5893  0CF8  00A8               	movwf	___flmul@a
  5894  0CF9                     l2868:
  5895  0CF9  0836               	movf	___flmul@aexp,w
  5896  0CFA  1903               	btfsc	3,2
  5897  0CFB  2CFD               	goto	u4131
  5898  0CFC  2CFE               	goto	u4130
  5899  0CFD                     u4131:
  5900  0CFD  2D03               	goto	l2872
  5901  0CFE                     u4130:
  5902  0CFE                     l2870:
  5903  0CFE  0837               	movf	___flmul@bexp,w
  5904  0CFF  1D03               	btfss	3,2
  5905  0D00  2D02               	goto	u4141
  5906  0D01  2D03               	goto	u4140
  5907  0D02                     u4141:
  5908  0D02  2D0C               	goto	l2876
  5909  0D03                     u4140:
  5910  0D03                     l2872:
  5911  0D03  3000               	movlw	0
  5912  0D04  00A7               	movwf	?___flmul+3
  5913  0D05  3000               	movlw	0
  5914  0D06  00A6               	movwf	?___flmul+2
  5915  0D07  3000               	movlw	0
  5916  0D08  00A5               	movwf	?___flmul+1
  5917  0D09  3000               	movlw	0
  5918  0D0A  00A4               	movwf	?___flmul
  5919  0D0B  2FFF               	goto	l804
  5920  0D0C                     l2876:
  5921  0D0C  0824               	movf	___flmul@b,w
  5922  0D0D  00AC               	movwf	??___flmul
  5923  0D0E  082C               	movf	??___flmul,w
  5924  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5925  0D10  082A               	movf	___flmul@a+2,w
  5926  0D11  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  5927  0D16  0871               	movf	?__Umul8_16+1,w
  5928  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5929  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5930  0D19  00BD               	movwf	___flmul@temp+1
  5931  0D1A  0870               	movf	?__Umul8_16,w
  5932  0D1B  00BC               	movwf	___flmul@temp
  5933  0D1C                     l2878:
  5934  0D1C  083C               	movf	___flmul@temp,w
  5935  0D1D  00AC               	movwf	??___flmul
  5936  0D1E  01AD               	clrf	??___flmul+1
  5937  0D1F  01AE               	clrf	??___flmul+2
  5938  0D20  01AF               	clrf	??___flmul+3
  5939  0D21  082F               	movf	??___flmul+3,w
  5940  0D22  00B5               	movwf	___flmul@grs+3
  5941  0D23  082E               	movf	??___flmul+2,w
  5942  0D24  00B4               	movwf	___flmul@grs+2
  5943  0D25  082D               	movf	??___flmul+1,w
  5944  0D26  00B3               	movwf	___flmul@grs+1
  5945  0D27  082C               	movf	??___flmul,w
  5946  0D28  00B2               	movwf	___flmul@grs
  5947  0D29                     l2880:
  5948  0D29  083D               	movf	___flmul@temp+1,w
  5949  0D2A  00AC               	movwf	??___flmul
  5950  0D2B  01AD               	clrf	??___flmul+1
  5951  0D2C  01AE               	clrf	??___flmul+2
  5952  0D2D  01AF               	clrf	??___flmul+3
  5953  0D2E  082F               	movf	??___flmul+3,w
  5954  0D2F  00BB               	movwf	___flmul@prod+3
  5955  0D30  082E               	movf	??___flmul+2,w
  5956  0D31  00BA               	movwf	___flmul@prod+2
  5957  0D32  082D               	movf	??___flmul+1,w
  5958  0D33  00B9               	movwf	___flmul@prod+1
  5959  0D34  082C               	movf	??___flmul,w
  5960  0D35  00B8               	movwf	___flmul@prod
  5961  0D36  0825               	movf	___flmul@b+1,w
  5962  0D37  00AC               	movwf	??___flmul
  5963  0D38  082C               	movf	??___flmul,w
  5964  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5965  0D3A  0829               	movf	___flmul@a+1,w
  5966  0D3B  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  5967  0D40  0871               	movf	?__Umul8_16+1,w
  5968  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5969  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5970  0D43  00BD               	movwf	___flmul@temp+1
  5971  0D44  0870               	movf	?__Umul8_16,w
  5972  0D45  00BC               	movwf	___flmul@temp
  5973  0D46                     l2882:
  5974  0D46  083C               	movf	___flmul@temp,w
  5975  0D47  00AC               	movwf	??___flmul
  5976  0D48  01AD               	clrf	??___flmul+1
  5977  0D49  01AE               	clrf	??___flmul+2
  5978  0D4A  01AF               	clrf	??___flmul+3
  5979  0D4B  082C               	movf	??___flmul,w
  5980  0D4C  07B2               	addwf	___flmul@grs,f
  5981  0D4D  082D               	movf	??___flmul+1,w
  5982  0D4E  1103               	clrz
  5983  0D4F  1803               	skipnc
  5984  0D50  3E01               	addlw	1
  5985  0D51  1903               	skipnz
  5986  0D52  2D54               	goto	u4151
  5987  0D53  07B3               	addwf	___flmul@grs+1,f
  5988  0D54                     u4151:
  5989  0D54  082E               	movf	??___flmul+2,w
  5990  0D55  1103               	clrz
  5991  0D56  1803               	skipnc
  5992  0D57  3E01               	addlw	1
  5993  0D58  1903               	skipnz
  5994  0D59  2D5B               	goto	u4152
  5995  0D5A  07B4               	addwf	___flmul@grs+2,f
  5996  0D5B                     u4152:
  5997  0D5B  082F               	movf	??___flmul+3,w
  5998  0D5C  1103               	clrz
  5999  0D5D  1803               	skipnc
  6000  0D5E  3E01               	addlw	1
  6001  0D5F  1903               	skipnz
  6002  0D60  2D62               	goto	u4153
  6003  0D61  07B5               	addwf	___flmul@grs+3,f
  6004  0D62                     u4153:
  6005  0D62                     l2884:
  6006  0D62  083D               	movf	___flmul@temp+1,w
  6007  0D63  00AC               	movwf	??___flmul
  6008  0D64  01AD               	clrf	??___flmul+1
  6009  0D65  01AE               	clrf	??___flmul+2
  6010  0D66  01AF               	clrf	??___flmul+3
  6011  0D67  082C               	movf	??___flmul,w
  6012  0D68  07B8               	addwf	___flmul@prod,f
  6013  0D69  082D               	movf	??___flmul+1,w
  6014  0D6A  1103               	clrz
  6015  0D6B  1803               	skipnc
  6016  0D6C  3E01               	addlw	1
  6017  0D6D  1903               	skipnz
  6018  0D6E  2D70               	goto	u4161
  6019  0D6F  07B9               	addwf	___flmul@prod+1,f
  6020  0D70                     u4161:
  6021  0D70  082E               	movf	??___flmul+2,w
  6022  0D71  1103               	clrz
  6023  0D72  1803               	skipnc
  6024  0D73  3E01               	addlw	1
  6025  0D74  1903               	skipnz
  6026  0D75  2D77               	goto	u4162
  6027  0D76  07BA               	addwf	___flmul@prod+2,f
  6028  0D77                     u4162:
  6029  0D77  082F               	movf	??___flmul+3,w
  6030  0D78  1103               	clrz
  6031  0D79  1803               	skipnc
  6032  0D7A  3E01               	addlw	1
  6033  0D7B  1903               	skipnz
  6034  0D7C  2D7E               	goto	u4163
  6035  0D7D  07BB               	addwf	___flmul@prod+3,f
  6036  0D7E                     u4163:
  6037  0D7E  0826               	movf	___flmul@b+2,w
  6038  0D7F  00AC               	movwf	??___flmul
  6039  0D80  082C               	movf	??___flmul,w
  6040  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6041  0D82  0828               	movf	___flmul@a,w
  6042  0D83  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  6043  0D88  0871               	movf	?__Umul8_16+1,w
  6044  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6045  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6046  0D8B  00BD               	movwf	___flmul@temp+1
  6047  0D8C  0870               	movf	?__Umul8_16,w
  6048  0D8D  00BC               	movwf	___flmul@temp
  6049  0D8E                     l2886:
  6050  0D8E  083C               	movf	___flmul@temp,w
  6051  0D8F  00AC               	movwf	??___flmul
  6052  0D90  01AD               	clrf	??___flmul+1
  6053  0D91  01AE               	clrf	??___flmul+2
  6054  0D92  01AF               	clrf	??___flmul+3
  6055  0D93  082C               	movf	??___flmul,w
  6056  0D94  07B2               	addwf	___flmul@grs,f
  6057  0D95  082D               	movf	??___flmul+1,w
  6058  0D96  1103               	clrz
  6059  0D97  1803               	skipnc
  6060  0D98  3E01               	addlw	1
  6061  0D99  1903               	skipnz
  6062  0D9A  2D9C               	goto	u4171
  6063  0D9B  07B3               	addwf	___flmul@grs+1,f
  6064  0D9C                     u4171:
  6065  0D9C  082E               	movf	??___flmul+2,w
  6066  0D9D  1103               	clrz
  6067  0D9E  1803               	skipnc
  6068  0D9F  3E01               	addlw	1
  6069  0DA0  1903               	skipnz
  6070  0DA1  2DA3               	goto	u4172
  6071  0DA2  07B4               	addwf	___flmul@grs+2,f
  6072  0DA3                     u4172:
  6073  0DA3  082F               	movf	??___flmul+3,w
  6074  0DA4  1103               	clrz
  6075  0DA5  1803               	skipnc
  6076  0DA6  3E01               	addlw	1
  6077  0DA7  1903               	skipnz
  6078  0DA8  2DAA               	goto	u4173
  6079  0DA9  07B5               	addwf	___flmul@grs+3,f
  6080  0DAA                     u4173:
  6081  0DAA                     l2888:
  6082  0DAA  083D               	movf	___flmul@temp+1,w
  6083  0DAB  00AC               	movwf	??___flmul
  6084  0DAC  01AD               	clrf	??___flmul+1
  6085  0DAD  01AE               	clrf	??___flmul+2
  6086  0DAE  01AF               	clrf	??___flmul+3
  6087  0DAF  082C               	movf	??___flmul,w
  6088  0DB0  07B8               	addwf	___flmul@prod,f
  6089  0DB1  082D               	movf	??___flmul+1,w
  6090  0DB2  1103               	clrz
  6091  0DB3  1803               	skipnc
  6092  0DB4  3E01               	addlw	1
  6093  0DB5  1903               	skipnz
  6094  0DB6  2DB8               	goto	u4181
  6095  0DB7  07B9               	addwf	___flmul@prod+1,f
  6096  0DB8                     u4181:
  6097  0DB8  082E               	movf	??___flmul+2,w
  6098  0DB9  1103               	clrz
  6099  0DBA  1803               	skipnc
  6100  0DBB  3E01               	addlw	1
  6101  0DBC  1903               	skipnz
  6102  0DBD  2DBF               	goto	u4182
  6103  0DBE  07BA               	addwf	___flmul@prod+2,f
  6104  0DBF                     u4182:
  6105  0DBF  082F               	movf	??___flmul+3,w
  6106  0DC0  1103               	clrz
  6107  0DC1  1803               	skipnc
  6108  0DC2  3E01               	addlw	1
  6109  0DC3  1903               	skipnz
  6110  0DC4  2DC6               	goto	u4183
  6111  0DC5  07BB               	addwf	___flmul@prod+3,f
  6112  0DC6                     u4183:
  6113  0DC6                     l2890:
  6114  0DC6  3008               	movlw	8
  6115  0DC7  00AC               	movwf	??___flmul
  6116  0DC8                     u4195:
  6117  0DC8  1003               	clrc
  6118  0DC9  0DB2               	rlf	___flmul@grs,f
  6119  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6120  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6121  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6122  0DCD  0BAC               	decfsz	??___flmul,f
  6123  0DCE  2DC8               	goto	u4195
  6124  0DCF                     l2892:
  6125  0DCF  0825               	movf	___flmul@b+1,w
  6126  0DD0  00AC               	movwf	??___flmul
  6127  0DD1  082C               	movf	??___flmul,w
  6128  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6129  0DD3  0828               	movf	___flmul@a,w
  6130  0DD4  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  6131  0DD9  0871               	movf	?__Umul8_16+1,w
  6132  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6133  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6134  0DDC  00BD               	movwf	___flmul@temp+1
  6135  0DDD  0870               	movf	?__Umul8_16,w
  6136  0DDE  00BC               	movwf	___flmul@temp
  6137  0DDF                     l2894:
  6138  0DDF  083C               	movf	___flmul@temp,w
  6139  0DE0  00AC               	movwf	??___flmul
  6140  0DE1  083D               	movf	___flmul@temp+1,w
  6141  0DE2  00AD               	movwf	??___flmul+1
  6142  0DE3  01AE               	clrf	??___flmul+2
  6143  0DE4  01AF               	clrf	??___flmul+3
  6144  0DE5  082C               	movf	??___flmul,w
  6145  0DE6  07B2               	addwf	___flmul@grs,f
  6146  0DE7  082D               	movf	??___flmul+1,w
  6147  0DE8  1103               	clrz
  6148  0DE9  1803               	skipnc
  6149  0DEA  3E01               	addlw	1
  6150  0DEB  1903               	skipnz
  6151  0DEC  2DEE               	goto	u4201
  6152  0DED  07B3               	addwf	___flmul@grs+1,f
  6153  0DEE                     u4201:
  6154  0DEE  082E               	movf	??___flmul+2,w
  6155  0DEF  1103               	clrz
  6156  0DF0  1803               	skipnc
  6157  0DF1  3E01               	addlw	1
  6158  0DF2  1903               	skipnz
  6159  0DF3  2DF5               	goto	u4202
  6160  0DF4  07B4               	addwf	___flmul@grs+2,f
  6161  0DF5                     u4202:
  6162  0DF5  082F               	movf	??___flmul+3,w
  6163  0DF6  1103               	clrz
  6164  0DF7  1803               	skipnc
  6165  0DF8  3E01               	addlw	1
  6166  0DF9  1903               	skipnz
  6167  0DFA  2DFC               	goto	u4203
  6168  0DFB  07B5               	addwf	___flmul@grs+3,f
  6169  0DFC                     u4203:
  6170  0DFC                     l2896:
  6171  0DFC  0824               	movf	___flmul@b,w
  6172  0DFD  00AC               	movwf	??___flmul
  6173  0DFE  082C               	movf	??___flmul,w
  6174  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6175  0E00  0829               	movf	___flmul@a+1,w
  6176  0E01  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  6177  0E06  0871               	movf	?__Umul8_16+1,w
  6178  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6179  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6180  0E09  00BD               	movwf	___flmul@temp+1
  6181  0E0A  0870               	movf	?__Umul8_16,w
  6182  0E0B  00BC               	movwf	___flmul@temp
  6183  0E0C                     l2898:
  6184  0E0C  083C               	movf	___flmul@temp,w
  6185  0E0D  00AC               	movwf	??___flmul
  6186  0E0E  083D               	movf	___flmul@temp+1,w
  6187  0E0F  00AD               	movwf	??___flmul+1
  6188  0E10  01AE               	clrf	??___flmul+2
  6189  0E11  01AF               	clrf	??___flmul+3
  6190  0E12  082C               	movf	??___flmul,w
  6191  0E13  07B2               	addwf	___flmul@grs,f
  6192  0E14  082D               	movf	??___flmul+1,w
  6193  0E15  1103               	clrz
  6194  0E16  1803               	skipnc
  6195  0E17  3E01               	addlw	1
  6196  0E18  1903               	skipnz
  6197  0E19  2E1B               	goto	u4211
  6198  0E1A  07B3               	addwf	___flmul@grs+1,f
  6199  0E1B                     u4211:
  6200  0E1B  082E               	movf	??___flmul+2,w
  6201  0E1C  1103               	clrz
  6202  0E1D  1803               	skipnc
  6203  0E1E  3E01               	addlw	1
  6204  0E1F  1903               	skipnz
  6205  0E20  2E22               	goto	u4212
  6206  0E21  07B4               	addwf	___flmul@grs+2,f
  6207  0E22                     u4212:
  6208  0E22  082F               	movf	??___flmul+3,w
  6209  0E23  1103               	clrz
  6210  0E24  1803               	skipnc
  6211  0E25  3E01               	addlw	1
  6212  0E26  1903               	skipnz
  6213  0E27  2E29               	goto	u4213
  6214  0E28  07B5               	addwf	___flmul@grs+3,f
  6215  0E29                     u4213:
  6216  0E29                     l2900:
  6217  0E29  3008               	movlw	8
  6218  0E2A  00AC               	movwf	??___flmul
  6219  0E2B                     u4225:
  6220  0E2B  1003               	clrc
  6221  0E2C  0DB2               	rlf	___flmul@grs,f
  6222  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6223  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6224  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6225  0E30  0BAC               	decfsz	??___flmul,f
  6226  0E31  2E2B               	goto	u4225
  6227  0E32  0824               	movf	___flmul@b,w
  6228  0E33  00AC               	movwf	??___flmul
  6229  0E34  082C               	movf	??___flmul,w
  6230  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6231  0E36  0828               	movf	___flmul@a,w
  6232  0E37  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  6233  0E3C  0871               	movf	?__Umul8_16+1,w
  6234  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6235  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6236  0E3F  00BD               	movwf	___flmul@temp+1
  6237  0E40  0870               	movf	?__Umul8_16,w
  6238  0E41  00BC               	movwf	___flmul@temp
  6239  0E42                     l2902:
  6240  0E42  083C               	movf	___flmul@temp,w
  6241  0E43  00AC               	movwf	??___flmul
  6242  0E44  083D               	movf	___flmul@temp+1,w
  6243  0E45  00AD               	movwf	??___flmul+1
  6244  0E46  01AE               	clrf	??___flmul+2
  6245  0E47  01AF               	clrf	??___flmul+3
  6246  0E48  082C               	movf	??___flmul,w
  6247  0E49  07B2               	addwf	___flmul@grs,f
  6248  0E4A  082D               	movf	??___flmul+1,w
  6249  0E4B  1103               	clrz
  6250  0E4C  1803               	skipnc
  6251  0E4D  3E01               	addlw	1
  6252  0E4E  1903               	skipnz
  6253  0E4F  2E51               	goto	u4231
  6254  0E50  07B3               	addwf	___flmul@grs+1,f
  6255  0E51                     u4231:
  6256  0E51  082E               	movf	??___flmul+2,w
  6257  0E52  1103               	clrz
  6258  0E53  1803               	skipnc
  6259  0E54  3E01               	addlw	1
  6260  0E55  1903               	skipnz
  6261  0E56  2E58               	goto	u4232
  6262  0E57  07B4               	addwf	___flmul@grs+2,f
  6263  0E58                     u4232:
  6264  0E58  082F               	movf	??___flmul+3,w
  6265  0E59  1103               	clrz
  6266  0E5A  1803               	skipnc
  6267  0E5B  3E01               	addlw	1
  6268  0E5C  1903               	skipnz
  6269  0E5D  2E5F               	goto	u4233
  6270  0E5E  07B5               	addwf	___flmul@grs+3,f
  6271  0E5F                     u4233:
  6272  0E5F                     l2904:
  6273  0E5F  0825               	movf	___flmul@b+1,w
  6274  0E60  00AC               	movwf	??___flmul
  6275  0E61  082C               	movf	??___flmul,w
  6276  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6277  0E63  082A               	movf	___flmul@a+2,w
  6278  0E64  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  6279  0E69  0871               	movf	?__Umul8_16+1,w
  6280  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6281  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6282  0E6C  00BD               	movwf	___flmul@temp+1
  6283  0E6D  0870               	movf	?__Umul8_16,w
  6284  0E6E  00BC               	movwf	___flmul@temp
  6285  0E6F  083C               	movf	___flmul@temp,w
  6286  0E70  00AC               	movwf	??___flmul
  6287  0E71  083D               	movf	___flmul@temp+1,w
  6288  0E72  00AD               	movwf	??___flmul+1
  6289  0E73  01AE               	clrf	??___flmul+2
  6290  0E74  01AF               	clrf	??___flmul+3
  6291  0E75  082C               	movf	??___flmul,w
  6292  0E76  07B8               	addwf	___flmul@prod,f
  6293  0E77  082D               	movf	??___flmul+1,w
  6294  0E78  1103               	clrz
  6295  0E79  1803               	skipnc
  6296  0E7A  3E01               	addlw	1
  6297  0E7B  1903               	skipnz
  6298  0E7C  2E7E               	goto	u4241
  6299  0E7D  07B9               	addwf	___flmul@prod+1,f
  6300  0E7E                     u4241:
  6301  0E7E  082E               	movf	??___flmul+2,w
  6302  0E7F  1103               	clrz
  6303  0E80  1803               	skipnc
  6304  0E81  3E01               	addlw	1
  6305  0E82  1903               	skipnz
  6306  0E83  2E85               	goto	u4242
  6307  0E84  07BA               	addwf	___flmul@prod+2,f
  6308  0E85                     u4242:
  6309  0E85  082F               	movf	??___flmul+3,w
  6310  0E86  1103               	clrz
  6311  0E87  1803               	skipnc
  6312  0E88  3E01               	addlw	1
  6313  0E89  1903               	skipnz
  6314  0E8A  2E8C               	goto	u4243
  6315  0E8B  07BB               	addwf	___flmul@prod+3,f
  6316  0E8C                     u4243:
  6317  0E8C                     l2906:
  6318  0E8C  0826               	movf	___flmul@b+2,w
  6319  0E8D  00AC               	movwf	??___flmul
  6320  0E8E  082C               	movf	??___flmul,w
  6321  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6322  0E90  0829               	movf	___flmul@a+1,w
  6323  0E91  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  6324  0E96  0871               	movf	?__Umul8_16+1,w
  6325  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6326  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6327  0E99  00BD               	movwf	___flmul@temp+1
  6328  0E9A  0870               	movf	?__Umul8_16,w
  6329  0E9B  00BC               	movwf	___flmul@temp
  6330  0E9C                     l2908:
  6331  0E9C  083C               	movf	___flmul@temp,w
  6332  0E9D  00AC               	movwf	??___flmul
  6333  0E9E  083D               	movf	___flmul@temp+1,w
  6334  0E9F  00AD               	movwf	??___flmul+1
  6335  0EA0  01AE               	clrf	??___flmul+2
  6336  0EA1  01AF               	clrf	??___flmul+3
  6337  0EA2  082C               	movf	??___flmul,w
  6338  0EA3  07B8               	addwf	___flmul@prod,f
  6339  0EA4  082D               	movf	??___flmul+1,w
  6340  0EA5  1103               	clrz
  6341  0EA6  1803               	skipnc
  6342  0EA7  3E01               	addlw	1
  6343  0EA8  1903               	skipnz
  6344  0EA9  2EAB               	goto	u4251
  6345  0EAA  07B9               	addwf	___flmul@prod+1,f
  6346  0EAB                     u4251:
  6347  0EAB  082E               	movf	??___flmul+2,w
  6348  0EAC  1103               	clrz
  6349  0EAD  1803               	skipnc
  6350  0EAE  3E01               	addlw	1
  6351  0EAF  1903               	skipnz
  6352  0EB0  2EB2               	goto	u4252
  6353  0EB1  07BA               	addwf	___flmul@prod+2,f
  6354  0EB2                     u4252:
  6355  0EB2  082F               	movf	??___flmul+3,w
  6356  0EB3  1103               	clrz
  6357  0EB4  1803               	skipnc
  6358  0EB5  3E01               	addlw	1
  6359  0EB6  1903               	skipnz
  6360  0EB7  2EB9               	goto	u4253
  6361  0EB8  07BB               	addwf	___flmul@prod+3,f
  6362  0EB9                     u4253:
  6363  0EB9  0826               	movf	___flmul@b+2,w
  6364  0EBA  00AC               	movwf	??___flmul
  6365  0EBB  082C               	movf	??___flmul,w
  6366  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6367  0EBD  082A               	movf	___flmul@a+2,w
  6368  0EBE  160A  158A  2160  120A  158A  	fcall	__Umul8_16
  6369  0EC3  0871               	movf	?__Umul8_16+1,w
  6370  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0EC6  00BD               	movwf	___flmul@temp+1
  6373  0EC7  0870               	movf	?__Umul8_16,w
  6374  0EC8  00BC               	movwf	___flmul@temp
  6375  0EC9                     l2910:
  6376  0EC9  083C               	movf	___flmul@temp,w
  6377  0ECA  00AC               	movwf	??___flmul
  6378  0ECB  083D               	movf	___flmul@temp+1,w
  6379  0ECC  00AD               	movwf	??___flmul+1
  6380  0ECD  01AE               	clrf	??___flmul+2
  6381  0ECE  01AF               	clrf	??___flmul+3
  6382  0ECF  3008               	movlw	8
  6383  0ED0                     u4265:
  6384  0ED0  1003               	clrc
  6385  0ED1  0DAC               	rlf	??___flmul,f
  6386  0ED2  0DAD               	rlf	??___flmul+1,f
  6387  0ED3  0DAE               	rlf	??___flmul+2,f
  6388  0ED4  0DAF               	rlf	??___flmul+3,f
  6389  0ED5                     u4260:
  6390  0ED5  3EFF               	addlw	-1
  6391  0ED6  1D03               	skipz
  6392  0ED7  2ED0               	goto	u4265
  6393  0ED8  082C               	movf	??___flmul,w
  6394  0ED9  07B8               	addwf	___flmul@prod,f
  6395  0EDA  082D               	movf	??___flmul+1,w
  6396  0EDB  1103               	clrz
  6397  0EDC  1803               	skipnc
  6398  0EDD  3E01               	addlw	1
  6399  0EDE  1903               	skipnz
  6400  0EDF  2EE1               	goto	u4271
  6401  0EE0  07B9               	addwf	___flmul@prod+1,f
  6402  0EE1                     u4271:
  6403  0EE1  082E               	movf	??___flmul+2,w
  6404  0EE2  1103               	clrz
  6405  0EE3  1803               	skipnc
  6406  0EE4  3E01               	addlw	1
  6407  0EE5  1903               	skipnz
  6408  0EE6  2EE8               	goto	u4272
  6409  0EE7  07BA               	addwf	___flmul@prod+2,f
  6410  0EE8                     u4272:
  6411  0EE8  082F               	movf	??___flmul+3,w
  6412  0EE9  1103               	clrz
  6413  0EEA  1803               	skipnc
  6414  0EEB  3E01               	addlw	1
  6415  0EEC  1903               	skipnz
  6416  0EED  2EEF               	goto	u4273
  6417  0EEE  07BB               	addwf	___flmul@prod+3,f
  6418  0EEF                     u4273:
  6419  0EEF                     l2912:
  6420  0EEF  0832               	movf	___flmul@grs,w
  6421  0EF0  00AC               	movwf	??___flmul
  6422  0EF1  0833               	movf	___flmul@grs+1,w
  6423  0EF2  00AD               	movwf	??___flmul+1
  6424  0EF3  0834               	movf	___flmul@grs+2,w
  6425  0EF4  00AE               	movwf	??___flmul+2
  6426  0EF5  0835               	movf	___flmul@grs+3,w
  6427  0EF6  00AF               	movwf	??___flmul+3
  6428  0EF7  3018               	movlw	24
  6429  0EF8                     u4285:
  6430  0EF8  1003               	clrc
  6431  0EF9  0CAF               	rrf	??___flmul+3,f
  6432  0EFA  0CAE               	rrf	??___flmul+2,f
  6433  0EFB  0CAD               	rrf	??___flmul+1,f
  6434  0EFC  0CAC               	rrf	??___flmul,f
  6435  0EFD                     u4280:
  6436  0EFD  3EFF               	addlw	-1
  6437  0EFE  1D03               	skipz
  6438  0EFF  2EF8               	goto	u4285
  6439  0F00  082C               	movf	??___flmul,w
  6440  0F01  07B8               	addwf	___flmul@prod,f
  6441  0F02  082D               	movf	??___flmul+1,w
  6442  0F03  1103               	clrz
  6443  0F04  1803               	skipnc
  6444  0F05  3E01               	addlw	1
  6445  0F06  1903               	skipnz
  6446  0F07  2F09               	goto	u4291
  6447  0F08  07B9               	addwf	___flmul@prod+1,f
  6448  0F09                     u4291:
  6449  0F09  082E               	movf	??___flmul+2,w
  6450  0F0A  1103               	clrz
  6451  0F0B  1803               	skipnc
  6452  0F0C  3E01               	addlw	1
  6453  0F0D  1903               	skipnz
  6454  0F0E  2F10               	goto	u4292
  6455  0F0F  07BA               	addwf	___flmul@prod+2,f
  6456  0F10                     u4292:
  6457  0F10  082F               	movf	??___flmul+3,w
  6458  0F11  1103               	clrz
  6459  0F12  1803               	skipnc
  6460  0F13  3E01               	addlw	1
  6461  0F14  1903               	skipnz
  6462  0F15  2F17               	goto	u4293
  6463  0F16  07BB               	addwf	___flmul@prod+3,f
  6464  0F17                     u4293:
  6465  0F17                     l2914:
  6466  0F17  3008               	movlw	8
  6467  0F18  00AC               	movwf	??___flmul
  6468  0F19                     u4305:
  6469  0F19  1003               	clrc
  6470  0F1A  0DB2               	rlf	___flmul@grs,f
  6471  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6472  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6473  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6474  0F1E  0BAC               	decfsz	??___flmul,f
  6475  0F1F  2F19               	goto	u4305
  6476  0F20                     l2916:
  6477  0F20  0837               	movf	___flmul@bexp,w
  6478  0F21  0736               	addwf	___flmul@aexp,w
  6479  0F22  00AC               	movwf	??___flmul
  6480  0F23  01AD               	clrf	??___flmul+1
  6481  0F24  0DAD               	rlf	??___flmul+1,f
  6482  0F25  082C               	movf	??___flmul,w
  6483  0F26  3E82               	addlw	130
  6484  0F27  00BC               	movwf	___flmul@temp
  6485  0F28  082D               	movf	??___flmul+1,w
  6486  0F29  1803               	skipnc
  6487  0F2A  3E01               	addlw	1
  6488  0F2B  3EFF               	addlw	255
  6489  0F2C  00BD               	movwf	___flmul@temp+1
  6490  0F2D  2F4B               	goto	l2928
  6491  0F2E                     l2918:
  6492  0F2E  3001               	movlw	1
  6493  0F2F  00AC               	movwf	??___flmul
  6494  0F30                     u4315:
  6495  0F30  1003               	clrc
  6496  0F31  0DB8               	rlf	___flmul@prod,f
  6497  0F32  0DB9               	rlf	___flmul@prod+1,f
  6498  0F33  0DBA               	rlf	___flmul@prod+2,f
  6499  0F34  0DBB               	rlf	___flmul@prod+3,f
  6500  0F35  0BAC               	decfsz	??___flmul,f
  6501  0F36  2F30               	goto	u4315
  6502  0F37                     l2920:
  6503  0F37  1FB5               	btfss	___flmul@grs+3,7
  6504  0F38  2F3A               	goto	u4321
  6505  0F39  2F3B               	goto	u4320
  6506  0F3A                     u4321:
  6507  0F3A  2F3C               	goto	l2924
  6508  0F3B                     u4320:
  6509  0F3B                     l2922:
  6510  0F3B  1438               	bsf	___flmul@prod,0
  6511  0F3C                     l2924:
  6512  0F3C  3001               	movlw	1
  6513  0F3D  00AC               	movwf	??___flmul
  6514  0F3E                     u4335:
  6515  0F3E  1003               	clrc
  6516  0F3F  0DB2               	rlf	___flmul@grs,f
  6517  0F40  0DB3               	rlf	___flmul@grs+1,f
  6518  0F41  0DB4               	rlf	___flmul@grs+2,f
  6519  0F42  0DB5               	rlf	___flmul@grs+3,f
  6520  0F43  0BAC               	decfsz	??___flmul,f
  6521  0F44  2F3E               	goto	u4335
  6522  0F45                     l2926:
  6523  0F45  30FF               	movlw	255
  6524  0F46  07BC               	addwf	___flmul@temp,f
  6525  0F47  1803               	skipnc
  6526  0F48  0ABD               	incf	___flmul@temp+1,f
  6527  0F49  30FF               	movlw	255
  6528  0F4A  07BD               	addwf	___flmul@temp+1,f
  6529  0F4B                     l2928:
  6530  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6531  0F4C  2F4E               	goto	u4341
  6532  0F4D  2F4F               	goto	u4340
  6533  0F4E                     u4341:
  6534  0F4E  2F2E               	goto	l2918
  6535  0F4F                     u4340:
  6536  0F4F                     l2930:
  6537  0F4F  01B6               	clrf	___flmul@aexp
  6538  0F50                     l2932:
  6539  0F50  1FB5               	btfss	___flmul@grs+3,7
  6540  0F51  2F53               	goto	u4351
  6541  0F52  2F54               	goto	u4350
  6542  0F53                     u4351:
  6543  0F53  2F70               	goto	l2940
  6544  0F54                     u4350:
  6545  0F54                     l2934:
  6546  0F54  30FF               	movlw	255
  6547  0F55  0532               	andwf	___flmul@grs,w
  6548  0F56  00AC               	movwf	??___flmul
  6549  0F57  30FF               	movlw	255
  6550  0F58  0533               	andwf	___flmul@grs+1,w
  6551  0F59  00AD               	movwf	??___flmul+1
  6552  0F5A  30FF               	movlw	255
  6553  0F5B  0534               	andwf	___flmul@grs+2,w
  6554  0F5C  00AE               	movwf	??___flmul+2
  6555  0F5D  307F               	movlw	127
  6556  0F5E  0535               	andwf	___flmul@grs+3,w
  6557  0F5F  00AF               	movwf	??___flmul+3
  6558  0F60  082F               	movf	??___flmul+3,w
  6559  0F61  042E               	iorwf	??___flmul+2,w
  6560  0F62  042D               	iorwf	??___flmul+1,w
  6561  0F63  042C               	iorwf	??___flmul,w
  6562  0F64  1903               	skipnz
  6563  0F65  2F67               	goto	u4361
  6564  0F66  2F68               	goto	u4360
  6565  0F67                     u4361:
  6566  0F67  2F6B               	goto	l810
  6567  0F68                     u4360:
  6568  0F68                     l2936:
  6569  0F68  01B6               	clrf	___flmul@aexp
  6570  0F69  0AB6               	incf	___flmul@aexp,f
  6571  0F6A  2F70               	goto	l2940
  6572  0F6B                     l810:
  6573  0F6B  1C38               	btfss	___flmul@prod,0
  6574  0F6C  2F6E               	goto	u4371
  6575  0F6D  2F6F               	goto	u4370
  6576  0F6E                     u4371:
  6577  0F6E  2F70               	goto	l2940
  6578  0F6F                     u4370:
  6579  0F6F  2F68               	goto	l2936
  6580  0F70                     l2940:
  6581  0F70  0836               	movf	___flmul@aexp,w
  6582  0F71  1903               	btfsc	3,2
  6583  0F72  2F74               	goto	u4381
  6584  0F73  2F75               	goto	u4380
  6585  0F74                     u4381:
  6586  0F74  2FA6               	goto	l2950
  6587  0F75                     u4380:
  6588  0F75                     l2942:
  6589  0F75  3001               	movlw	1
  6590  0F76  07B8               	addwf	___flmul@prod,f
  6591  0F77  3000               	movlw	0
  6592  0F78  1803               	skipnc
  6593  0F79  3001               	movlw	1
  6594  0F7A  07B9               	addwf	___flmul@prod+1,f
  6595  0F7B  3000               	movlw	0
  6596  0F7C  1803               	skipnc
  6597  0F7D  3001               	movlw	1
  6598  0F7E  07BA               	addwf	___flmul@prod+2,f
  6599  0F7F  3000               	movlw	0
  6600  0F80  1803               	skipnc
  6601  0F81  3001               	movlw	1
  6602  0F82  07BB               	addwf	___flmul@prod+3,f
  6603  0F83                     l2944:
  6604  0F83  1C3B               	btfss	___flmul@prod+3,0
  6605  0F84  2F86               	goto	u4391
  6606  0F85  2F87               	goto	u4390
  6607  0F86                     u4391:
  6608  0F86  2FA6               	goto	l2950
  6609  0F87                     u4390:
  6610  0F87                     l2946:
  6611  0F87  0838               	movf	___flmul@prod,w
  6612  0F88  00AC               	movwf	??___flmul
  6613  0F89  0839               	movf	___flmul@prod+1,w
  6614  0F8A  00AD               	movwf	??___flmul+1
  6615  0F8B  083A               	movf	___flmul@prod+2,w
  6616  0F8C  00AE               	movwf	??___flmul+2
  6617  0F8D  083B               	movf	___flmul@prod+3,w
  6618  0F8E  00AF               	movwf	??___flmul+3
  6619  0F8F  3001               	movlw	1
  6620  0F90  00B0               	movwf	??___flmul+4
  6621  0F91                     u4405:
  6622  0F91  0D2F               	rlf	??___flmul+3,w
  6623  0F92  0CAF               	rrf	??___flmul+3,f
  6624  0F93  0CAE               	rrf	??___flmul+2,f
  6625  0F94  0CAD               	rrf	??___flmul+1,f
  6626  0F95  0CAC               	rrf	??___flmul,f
  6627  0F96                     u4400:
  6628  0F96  0BB0               	decfsz	??___flmul+4,f
  6629  0F97  2F91               	goto	u4405
  6630  0F98  082F               	movf	??___flmul+3,w
  6631  0F99  00BB               	movwf	___flmul@prod+3
  6632  0F9A  082E               	movf	??___flmul+2,w
  6633  0F9B  00BA               	movwf	___flmul@prod+2
  6634  0F9C  082D               	movf	??___flmul+1,w
  6635  0F9D  00B9               	movwf	___flmul@prod+1
  6636  0F9E  082C               	movf	??___flmul,w
  6637  0F9F  00B8               	movwf	___flmul@prod
  6638  0FA0                     l2948:
  6639  0FA0  3001               	movlw	1
  6640  0FA1  07BC               	addwf	___flmul@temp,f
  6641  0FA2  1803               	skipnc
  6642  0FA3  0ABD               	incf	___flmul@temp+1,f
  6643  0FA4  3000               	movlw	0
  6644  0FA5  07BD               	addwf	___flmul@temp+1,f
  6645  0FA6                     l2950:
  6646  0FA6  083D               	movf	___flmul@temp+1,w
  6647  0FA7  3A80               	xorlw	128
  6648  0FA8  00FF               	movwf	btemp+1
  6649  0FA9  3080               	movlw	128
  6650  0FAA  027F               	subwf	btemp+1,w
  6651  0FAB  1D03               	skipz
  6652  0FAC  2FAF               	goto	u4415
  6653  0FAD  30FF               	movlw	255
  6654  0FAE  023C               	subwf	___flmul@temp,w
  6655  0FAF                     u4415:
  6656  0FAF  1C03               	skipc
  6657  0FB0  2FB2               	goto	u4411
  6658  0FB1  2FB3               	goto	u4410
  6659  0FB2                     u4411:
  6660  0FB2  2FBE               	goto	l2954
  6661  0FB3                     u4410:
  6662  0FB3                     l2952:
  6663  0FB3  307F               	movlw	127
  6664  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6665  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6666  0FB6  00BB               	movwf	___flmul@prod+3
  6667  0FB7  3080               	movlw	128
  6668  0FB8  00BA               	movwf	___flmul@prod+2
  6669  0FB9  3000               	movlw	0
  6670  0FBA  00B9               	movwf	___flmul@prod+1
  6671  0FBB  3000               	movlw	0
  6672  0FBC  00B8               	movwf	___flmul@prod
  6673  0FBD  2FF3               	goto	l816
  6674  0FBE                     l2954:
  6675  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6676  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6677  0FC0  083D               	movf	___flmul@temp+1,w
  6678  0FC1  3A80               	xorlw	128
  6679  0FC2  00FF               	movwf	btemp+1
  6680  0FC3  3080               	movlw	128
  6681  0FC4  027F               	subwf	btemp+1,w
  6682  0FC5  1D03               	skipz
  6683  0FC6  2FC9               	goto	u4425
  6684  0FC7  3001               	movlw	1
  6685  0FC8  023C               	subwf	___flmul@temp,w
  6686  0FC9                     u4425:
  6687  0FC9  1803               	skipnc
  6688  0FCA  2FCC               	goto	u4421
  6689  0FCB  2FCD               	goto	u4420
  6690  0FCC                     u4421:
  6691  0FCC  2FD9               	goto	l2960
  6692  0FCD                     u4420:
  6693  0FCD                     l2956:
  6694  0FCD  3000               	movlw	0
  6695  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6696  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6697  0FD0  00BB               	movwf	___flmul@prod+3
  6698  0FD1  3000               	movlw	0
  6699  0FD2  00BA               	movwf	___flmul@prod+2
  6700  0FD3  3000               	movlw	0
  6701  0FD4  00B9               	movwf	___flmul@prod+1
  6702  0FD5  3000               	movlw	0
  6703  0FD6  00B8               	movwf	___flmul@prod
  6704  0FD7                     l2958:
  6705  0FD7  01B1               	clrf	___flmul@sign
  6706  0FD8  2FF3               	goto	l816
  6707  0FD9                     l2960:
  6708  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6709  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6710  0FDB  083C               	movf	___flmul@temp,w
  6711  0FDC  00AC               	movwf	??___flmul
  6712  0FDD  082C               	movf	??___flmul,w
  6713  0FDE  00B7               	movwf	___flmul@bexp
  6714  0FDF  30FF               	movlw	255
  6715  0FE0  05B8               	andwf	___flmul@prod,f
  6716  0FE1  30FF               	movlw	255
  6717  0FE2  05B9               	andwf	___flmul@prod+1,f
  6718  0FE3  307F               	movlw	127
  6719  0FE4  05BA               	andwf	___flmul@prod+2,f
  6720  0FE5  3000               	movlw	0
  6721  0FE6  05BB               	andwf	___flmul@prod+3,f
  6722  0FE7                     l2962:
  6723  0FE7  1C37               	btfss	___flmul@bexp,0
  6724  0FE8  2FEA               	goto	u4431
  6725  0FE9  2FEB               	goto	u4430
  6726  0FEA                     u4431:
  6727  0FEA  2FEC               	goto	l2966
  6728  0FEB                     u4430:
  6729  0FEB                     l2964:
  6730  0FEB  17BA               	bsf	___flmul@prod+2,7
  6731  0FEC                     l2966:
  6732  0FEC  0837               	movf	___flmul@bexp,w
  6733  0FED  00AC               	movwf	??___flmul
  6734  0FEE  1003               	clrc
  6735  0FEF  0C2C               	rrf	??___flmul,w
  6736  0FF0  00AD               	movwf	??___flmul+1
  6737  0FF1  082D               	movf	??___flmul+1,w
  6738  0FF2  00BB               	movwf	___flmul@prod+3
  6739  0FF3                     l816:
  6740  0FF3  0831               	movf	___flmul@sign,w
  6741  0FF4  00AC               	movwf	??___flmul
  6742  0FF5  082C               	movf	??___flmul,w
  6743  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6744  0FF7                     l2968:
  6745  0FF7  083B               	movf	___flmul@prod+3,w
  6746  0FF8  00A7               	movwf	?___flmul+3
  6747  0FF9  083A               	movf	___flmul@prod+2,w
  6748  0FFA  00A6               	movwf	?___flmul+2
  6749  0FFB  0839               	movf	___flmul@prod+1,w
  6750  0FFC  00A5               	movwf	?___flmul+1
  6751  0FFD  0838               	movf	___flmul@prod,w
  6752  0FFE  00A4               	movwf	?___flmul
  6753  0FFF                     l804:
  6754  0FFF  0008               	return
  6755  1000                     __end_of___flmul:
  6756                           
  6757                           	psect	text10
  6758  1960                     __ptext10:	
  6759 ;; *************** function __Umul8_16 *****************
  6760 ;; Defined at:
  6761 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  multiplier      1    wreg     unsigned char 
  6764 ;;  multiplicand    1    0[COMMON] unsigned char 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  multiplier      1    8[COMMON] unsigned char 
  6767 ;;  word_mpld       2    6[COMMON] unsigned int 
  6768 ;;  product         2    4[COMMON] unsigned int 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  2    0[COMMON] unsigned int 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6778 ;;      Params:         2       0       0       0       0
  6779 ;;      Locals:         5       0       0       0       0
  6780 ;;      Temps:          2       0       0       0       0
  6781 ;;      Totals:         9       0       0       0       0
  6782 ;;Total ram usage:        9 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		___flmul
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           
  6792                           ;psect for function __Umul8_16
  6793  1960                     __Umul8_16:
  6794                           
  6795                           ;incstack = 0
  6796                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6797                           ;__Umul8_16@multiplier stored from wreg
  6798  1960  00F8               	movwf	__Umul8_16@multiplier
  6799  1961                     l2450:
  6800  1961  01F4               	clrf	__Umul8_16@product
  6801  1962  01F5               	clrf	__Umul8_16@product+1
  6802  1963                     l2452:
  6803  1963  0870               	movf	__Umul8_16@multiplicand,w
  6804  1964  00F2               	movwf	??__Umul8_16
  6805  1965  01F3               	clrf	??__Umul8_16+1
  6806  1966  0872               	movf	??__Umul8_16,w
  6807  1967  00F6               	movwf	__Umul8_16@word_mpld
  6808  1968  0873               	movf	??__Umul8_16+1,w
  6809  1969  00F7               	movwf	__Umul8_16@word_mpld+1
  6810  196A                     l2454:
  6811  196A  1C78               	btfss	__Umul8_16@multiplier,0
  6812  196B  296D               	goto	u3191
  6813  196C  296E               	goto	u3190
  6814  196D                     u3191:
  6815  196D  2974               	goto	l823
  6816  196E                     u3190:
  6817  196E                     l2456:
  6818  196E  0876               	movf	__Umul8_16@word_mpld,w
  6819  196F  07F4               	addwf	__Umul8_16@product,f
  6820  1970  1803               	skipnc
  6821  1971  0AF5               	incf	__Umul8_16@product+1,f
  6822  1972  0877               	movf	__Umul8_16@word_mpld+1,w
  6823  1973  07F5               	addwf	__Umul8_16@product+1,f
  6824  1974                     l823:
  6825  1974  3001               	movlw	1
  6826  1975                     u3205:
  6827  1975  1003               	clrc
  6828  1976  0DF6               	rlf	__Umul8_16@word_mpld,f
  6829  1977  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6830  1978  3EFF               	addlw	-1
  6831  1979  1D03               	skipz
  6832  197A  2975               	goto	u3205
  6833  197B  1003               	clrc
  6834  197C  0CF8               	rrf	__Umul8_16@multiplier,f
  6835  197D                     l2458:
  6836  197D  0878               	movf	__Umul8_16@multiplier,w
  6837  197E  1D03               	btfss	3,2
  6838  197F  2981               	goto	u3211
  6839  1980  2982               	goto	u3210
  6840  1981                     u3211:
  6841  1981  296A               	goto	l2454
  6842  1982                     u3210:
  6843  1982                     l2460:
  6844  1982  0875               	movf	__Umul8_16@product+1,w
  6845  1983  00F1               	movwf	?__Umul8_16+1
  6846  1984  0874               	movf	__Umul8_16@product,w
  6847  1985  00F0               	movwf	?__Umul8_16
  6848  1986                     l825:
  6849  1986  0008               	return
  6850  1987                     __end_of__Umul8_16:
  6851                           
  6852                           	psect	text11
  6853  1E85                     __ptext11:	
  6854 ;; *************** function __tdiv_to_l_ *****************
  6855 ;; Defined at:
  6856 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  f1              4    0[COMMON] float 
  6859 ;;  f2              4    4[COMMON] float 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  quot            4    0[BANK0 ] unsigned long 
  6862 ;;  exp1            1    5[BANK0 ] unsigned char 
  6863 ;;  cntr            1    4[BANK0 ] unsigned char 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  4    0[COMMON] unsigned long 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6873 ;;      Params:         8       0       0       0       0
  6874 ;;      Locals:         0       6       0       0       0
  6875 ;;      Temps:          4       0       0       0       0
  6876 ;;      Totals:        12       6       0       0       0
  6877 ;;Total ram usage:       18 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_sprintf
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           
  6887                           ;psect for function __tdiv_to_l_
  6888  1E85                     __tdiv_to_l_:
  6889  1E85                     l3088:	
  6890                           ;incstack = 0
  6891                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6892                           
  6893  1E85  0870               	movf	__tdiv_to_l_@f1,w
  6894  1E86  00F8               	movwf	??__tdiv_to_l_
  6895  1E87  0871               	movf	__tdiv_to_l_@f1+1,w
  6896  1E88  00F9               	movwf	??__tdiv_to_l_+1
  6897  1E89  0872               	movf	__tdiv_to_l_@f1+2,w
  6898  1E8A  00FA               	movwf	??__tdiv_to_l_+2
  6899  1E8B  1003               	clrc
  6900  1E8C  0D79               	rlf	??__tdiv_to_l_+1,w
  6901  1E8D  0D7A               	rlf	??__tdiv_to_l_+2,w
  6902  1E8E  00FB               	movwf	??__tdiv_to_l_+3
  6903  1E8F  087B               	movf	??__tdiv_to_l_+3,w
  6904  1E90  1283               	bcf	3,5	;RP0=0, select bank0
  6905  1E91  1303               	bcf	3,6	;RP1=0, select bank0
  6906  1E92  00A5               	movwf	__tdiv_to_l_@exp1
  6907  1E93  0825               	movf	__tdiv_to_l_@exp1,w
  6908  1E94  1D03               	btfss	3,2
  6909  1E95  2E97               	goto	u4791
  6910  1E96  2E98               	goto	u4790
  6911  1E97                     u4791:
  6912  1E97  2EA1               	goto	l3094
  6913  1E98                     u4790:
  6914  1E98                     l3090:
  6915  1E98  3000               	movlw	0
  6916  1E99  00F3               	movwf	?__tdiv_to_l_+3
  6917  1E9A  3000               	movlw	0
  6918  1E9B  00F2               	movwf	?__tdiv_to_l_+2
  6919  1E9C  3000               	movlw	0
  6920  1E9D  00F1               	movwf	?__tdiv_to_l_+1
  6921  1E9E  3000               	movlw	0
  6922  1E9F  00F0               	movwf	?__tdiv_to_l_
  6923  1EA0  2F41               	goto	l598
  6924  1EA1                     l3094:
  6925  1EA1  0874               	movf	__tdiv_to_l_@f2,w
  6926  1EA2  00F8               	movwf	??__tdiv_to_l_
  6927  1EA3  0875               	movf	__tdiv_to_l_@f2+1,w
  6928  1EA4  00F9               	movwf	??__tdiv_to_l_+1
  6929  1EA5  0876               	movf	__tdiv_to_l_@f2+2,w
  6930  1EA6  00FA               	movwf	??__tdiv_to_l_+2
  6931  1EA7  1003               	clrc
  6932  1EA8  0D79               	rlf	??__tdiv_to_l_+1,w
  6933  1EA9  0D7A               	rlf	??__tdiv_to_l_+2,w
  6934  1EAA  00FB               	movwf	??__tdiv_to_l_+3
  6935  1EAB  087B               	movf	??__tdiv_to_l_+3,w
  6936  1EAC  00A4               	movwf	__tdiv_to_l_@cntr
  6937  1EAD  0824               	movf	__tdiv_to_l_@cntr,w
  6938  1EAE  1D03               	btfss	3,2
  6939  1EAF  2EB1               	goto	u4801
  6940  1EB0  2EB2               	goto	u4800
  6941  1EB1                     u4801:
  6942  1EB1  2EB3               	goto	l599
  6943  1EB2                     u4800:
  6944  1EB2  2E98               	goto	l3090
  6945  1EB3                     l599:
  6946  1EB3  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6947  1EB4                     l3100:
  6948  1EB4  30FF               	movlw	255
  6949  1EB5  05F0               	andwf	__tdiv_to_l_@f1,f
  6950  1EB6  30FF               	movlw	255
  6951  1EB7  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6952  1EB8  3000               	movlw	0
  6953  1EB9  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6954  1EBA                     l3102:
  6955  1EBA  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6956  1EBB  30FF               	movlw	255
  6957  1EBC  05F4               	andwf	__tdiv_to_l_@f2,f
  6958  1EBD  30FF               	movlw	255
  6959  1EBE  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6960  1EBF  3000               	movlw	0
  6961  1EC0  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6962  1EC1  3000               	movlw	0
  6963  1EC2  00A3               	movwf	__tdiv_to_l_@quot+3
  6964  1EC3  3000               	movlw	0
  6965  1EC4  00A2               	movwf	__tdiv_to_l_@quot+2
  6966  1EC5  3000               	movlw	0
  6967  1EC6  00A1               	movwf	__tdiv_to_l_@quot+1
  6968  1EC7  3000               	movlw	0
  6969  1EC8  00A0               	movwf	__tdiv_to_l_@quot
  6970  1EC9                     l3104:
  6971  1EC9  307F               	movlw	127
  6972  1ECA  02A5               	subwf	__tdiv_to_l_@exp1,f
  6973  1ECB                     l3106:
  6974  1ECB  3098               	movlw	152
  6975  1ECC  0724               	addwf	__tdiv_to_l_@cntr,w
  6976  1ECD  00F8               	movwf	??__tdiv_to_l_
  6977  1ECE  0878               	movf	??__tdiv_to_l_,w
  6978  1ECF  02A5               	subwf	__tdiv_to_l_@exp1,f
  6979  1ED0  3018               	movlw	24
  6980  1ED1  00F8               	movwf	??__tdiv_to_l_
  6981  1ED2  0878               	movf	??__tdiv_to_l_,w
  6982  1ED3  00A4               	movwf	__tdiv_to_l_@cntr
  6983  1ED4                     l3108:
  6984  1ED4  3001               	movlw	1
  6985  1ED5  00F8               	movwf	??__tdiv_to_l_
  6986  1ED6                     u4815:
  6987  1ED6  1003               	clrc
  6988  1ED7  0DA0               	rlf	__tdiv_to_l_@quot,f
  6989  1ED8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6990  1ED9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6991  1EDA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6992  1EDB  0BF8               	decfsz	??__tdiv_to_l_,f
  6993  1EDC  2ED6               	goto	u4815
  6994  1EDD                     l3110:
  6995  1EDD  0876               	movf	__tdiv_to_l_@f2+2,w
  6996  1EDE  0272               	subwf	__tdiv_to_l_@f1+2,w
  6997  1EDF  1D03               	skipz
  6998  1EE0  2EE7               	goto	u4825
  6999  1EE1  0875               	movf	__tdiv_to_l_@f2+1,w
  7000  1EE2  0271               	subwf	__tdiv_to_l_@f1+1,w
  7001  1EE3  1D03               	skipz
  7002  1EE4  2EE7               	goto	u4825
  7003  1EE5  0874               	movf	__tdiv_to_l_@f2,w
  7004  1EE6  0270               	subwf	__tdiv_to_l_@f1,w
  7005  1EE7                     u4825:
  7006  1EE7  1C03               	skipc
  7007  1EE8  2EEA               	goto	u4821
  7008  1EE9  2EEB               	goto	u4820
  7009  1EEA                     u4821:
  7010  1EEA  2EF6               	goto	l3116
  7011  1EEB                     u4820:
  7012  1EEB                     l3112:
  7013  1EEB  0874               	movf	__tdiv_to_l_@f2,w
  7014  1EEC  02F0               	subwf	__tdiv_to_l_@f1,f
  7015  1EED  0875               	movf	__tdiv_to_l_@f2+1,w
  7016  1EEE  1C03               	skipc
  7017  1EEF  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7018  1EF0  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7019  1EF1  0876               	movf	__tdiv_to_l_@f2+2,w
  7020  1EF2  1C03               	skipc
  7021  1EF3  0A76               	incf	__tdiv_to_l_@f2+2,w
  7022  1EF4  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7023  1EF5                     l3114:
  7024  1EF5  1420               	bsf	__tdiv_to_l_@quot,0
  7025  1EF6                     l3116:
  7026  1EF6  3001               	movlw	1
  7027  1EF7                     u4835:
  7028  1EF7  1003               	clrc
  7029  1EF8  0DF0               	rlf	__tdiv_to_l_@f1,f
  7030  1EF9  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7031  1EFA  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7032  1EFB  3EFF               	addlw	-1
  7033  1EFC  1D03               	skipz
  7034  1EFD  2EF7               	goto	u4835
  7035  1EFE                     l3118:
  7036  1EFE  3001               	movlw	1
  7037  1EFF  02A4               	subwf	__tdiv_to_l_@cntr,f
  7038  1F00  1D03               	btfss	3,2
  7039  1F01  2F03               	goto	u4841
  7040  1F02  2F04               	goto	u4840
  7041  1F03                     u4841:
  7042  1F03  2ED4               	goto	l3108
  7043  1F04                     u4840:
  7044  1F04                     l602:
  7045  1F04  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7046  1F05  2F07               	goto	u4851
  7047  1F06  2F08               	goto	u4850
  7048  1F07                     u4851:
  7049  1F07  2F22               	goto	l3128
  7050  1F08                     u4850:
  7051  1F08                     l3120:
  7052  1F08  0825               	movf	__tdiv_to_l_@exp1,w
  7053  1F09  3A80               	xorlw	128
  7054  1F0A  3E97               	addlw	151
  7055  1F0B  1803               	skipnc
  7056  1F0C  2F0E               	goto	u4861
  7057  1F0D  2F0F               	goto	u4860
  7058  1F0E                     u4861:
  7059  1F0E  2F10               	goto	l3126
  7060  1F0F                     u4860:
  7061  1F0F  2E98               	goto	l3090
  7062  1F10                     l3126:
  7063  1F10  3001               	movlw	1
  7064  1F11                     u4875:
  7065  1F11  1003               	clrc
  7066  1F12  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7067  1F13  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7068  1F14  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7069  1F15  0CA0               	rrf	__tdiv_to_l_@quot,f
  7070  1F16  3EFF               	addlw	-1
  7071  1F17  1D03               	skipz
  7072  1F18  2F11               	goto	u4875
  7073  1F19  3001               	movlw	1
  7074  1F1A  00F8               	movwf	??__tdiv_to_l_
  7075  1F1B  0878               	movf	??__tdiv_to_l_,w
  7076  1F1C  07A5               	addwf	__tdiv_to_l_@exp1,f
  7077  1F1D  1D03               	btfss	3,2
  7078  1F1E  2F20               	goto	u4881
  7079  1F1F  2F21               	goto	u4880
  7080  1F20                     u4881:
  7081  1F20  2F10               	goto	l3126
  7082  1F21                     u4880:
  7083  1F21  2F39               	goto	l3136
  7084  1F22                     l3128:
  7085  1F22  3018               	movlw	24
  7086  1F23  0225               	subwf	__tdiv_to_l_@exp1,w
  7087  1F24  1C03               	skipc
  7088  1F25  2F27               	goto	u4891
  7089  1F26  2F28               	goto	u4890
  7090  1F27                     u4891:
  7091  1F27  2F34               	goto	l609
  7092  1F28                     u4890:
  7093  1F28  2E98               	goto	l3090
  7094  1F29                     l3134:
  7095  1F29  3001               	movlw	1
  7096  1F2A  00F8               	movwf	??__tdiv_to_l_
  7097  1F2B                     u4905:
  7098  1F2B  1003               	clrc
  7099  1F2C  0DA0               	rlf	__tdiv_to_l_@quot,f
  7100  1F2D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7101  1F2E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7102  1F2F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7103  1F30  0BF8               	decfsz	??__tdiv_to_l_,f
  7104  1F31  2F2B               	goto	u4905
  7105  1F32  3001               	movlw	1
  7106  1F33  02A5               	subwf	__tdiv_to_l_@exp1,f
  7107  1F34                     l609:
  7108  1F34  0825               	movf	__tdiv_to_l_@exp1,w
  7109  1F35  1D03               	btfss	3,2
  7110  1F36  2F38               	goto	u4911
  7111  1F37  2F39               	goto	u4910
  7112  1F38                     u4911:
  7113  1F38  2F29               	goto	l3134
  7114  1F39                     u4910:
  7115  1F39                     l3136:
  7116  1F39  0823               	movf	__tdiv_to_l_@quot+3,w
  7117  1F3A  00F3               	movwf	?__tdiv_to_l_+3
  7118  1F3B  0822               	movf	__tdiv_to_l_@quot+2,w
  7119  1F3C  00F2               	movwf	?__tdiv_to_l_+2
  7120  1F3D  0821               	movf	__tdiv_to_l_@quot+1,w
  7121  1F3E  00F1               	movwf	?__tdiv_to_l_+1
  7122  1F3F  0820               	movf	__tdiv_to_l_@quot,w
  7123  1F40  00F0               	movwf	?__tdiv_to_l_
  7124  1F41                     l598:
  7125  1F41  0008               	return
  7126  1F42                     __end_of__tdiv_to_l_:
  7127                           
  7128                           	psect	text12
  7129  1F42                     __ptext12:	
  7130 ;; *************** function __div_to_l_ *****************
  7131 ;; Defined at:
  7132 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  f1              4    0[COMMON] unsigned long 
  7135 ;;  f2              4    4[COMMON] unsigned long 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  quot            4    0[BANK0 ] unsigned long 
  7138 ;;  exp1            1    5[BANK0 ] unsigned char 
  7139 ;;  cntr            1    4[BANK0 ] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  4    0[COMMON] unsigned long 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7149 ;;      Params:         8       0       0       0       0
  7150 ;;      Locals:         0       6       0       0       0
  7151 ;;      Temps:          1       0       0       0       0
  7152 ;;      Totals:         9       6       0       0       0
  7153 ;;Total ram usage:       15 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_sprintf
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function __div_to_l_
  7164  1F42                     __div_to_l_:
  7165  1F42                     l3140:	
  7166                           ;incstack = 0
  7167                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7168                           
  7169  1F42  1003               	clrc
  7170  1F43  0D72               	rlf	__div_to_l_@f1+2,w
  7171  1F44  0D73               	rlf	__div_to_l_@f1+3,w
  7172  1F45  00F8               	movwf	??__div_to_l_
  7173  1F46  0878               	movf	??__div_to_l_,w
  7174  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  7175  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  7176  1F49  00A5               	movwf	__div_to_l_@exp1
  7177  1F4A  0825               	movf	__div_to_l_@exp1,w
  7178  1F4B  1D03               	btfss	3,2
  7179  1F4C  2F4E               	goto	u4921
  7180  1F4D  2F4F               	goto	u4920
  7181  1F4E                     u4921:
  7182  1F4E  2F58               	goto	l3146
  7183  1F4F                     u4920:
  7184  1F4F                     l3142:
  7185  1F4F  3000               	movlw	0
  7186  1F50  00F3               	movwf	?__div_to_l_+3
  7187  1F51  3000               	movlw	0
  7188  1F52  00F2               	movwf	?__div_to_l_+2
  7189  1F53  3000               	movlw	0
  7190  1F54  00F1               	movwf	?__div_to_l_+1
  7191  1F55  3000               	movlw	0
  7192  1F56  00F0               	movwf	?__div_to_l_
  7193  1F57  2FFF               	goto	l551
  7194  1F58                     l3146:
  7195  1F58  1003               	clrc
  7196  1F59  0D76               	rlf	__div_to_l_@f2+2,w
  7197  1F5A  0D77               	rlf	__div_to_l_@f2+3,w
  7198  1F5B  00F8               	movwf	??__div_to_l_
  7199  1F5C  0878               	movf	??__div_to_l_,w
  7200  1F5D  00A4               	movwf	__div_to_l_@cntr
  7201  1F5E  0824               	movf	__div_to_l_@cntr,w
  7202  1F5F  1D03               	btfss	3,2
  7203  1F60  2F62               	goto	u4931
  7204  1F61  2F63               	goto	u4930
  7205  1F62                     u4931:
  7206  1F62  2F64               	goto	l552
  7207  1F63                     u4930:
  7208  1F63  2F4F               	goto	l3142
  7209  1F64                     l552:
  7210  1F64  17F2               	bsf	__div_to_l_@f1+2,7
  7211  1F65                     l3152:
  7212  1F65  30FF               	movlw	255
  7213  1F66  05F0               	andwf	__div_to_l_@f1,f
  7214  1F67  30FF               	movlw	255
  7215  1F68  05F1               	andwf	__div_to_l_@f1+1,f
  7216  1F69  30FF               	movlw	255
  7217  1F6A  05F2               	andwf	__div_to_l_@f1+2,f
  7218  1F6B  3000               	movlw	0
  7219  1F6C  05F3               	andwf	__div_to_l_@f1+3,f
  7220  1F6D                     l3154:
  7221  1F6D  17F6               	bsf	__div_to_l_@f2+2,7
  7222  1F6E  30FF               	movlw	255
  7223  1F6F  05F4               	andwf	__div_to_l_@f2,f
  7224  1F70  30FF               	movlw	255
  7225  1F71  05F5               	andwf	__div_to_l_@f2+1,f
  7226  1F72  30FF               	movlw	255
  7227  1F73  05F6               	andwf	__div_to_l_@f2+2,f
  7228  1F74  3000               	movlw	0
  7229  1F75  05F7               	andwf	__div_to_l_@f2+3,f
  7230  1F76  3000               	movlw	0
  7231  1F77  00A3               	movwf	__div_to_l_@quot+3
  7232  1F78  3000               	movlw	0
  7233  1F79  00A2               	movwf	__div_to_l_@quot+2
  7234  1F7A  3000               	movlw	0
  7235  1F7B  00A1               	movwf	__div_to_l_@quot+1
  7236  1F7C  3000               	movlw	0
  7237  1F7D  00A0               	movwf	__div_to_l_@quot
  7238  1F7E                     l3156:
  7239  1F7E  307F               	movlw	127
  7240  1F7F  02A5               	subwf	__div_to_l_@exp1,f
  7241  1F80                     l3158:
  7242  1F80  30A0               	movlw	160
  7243  1F81  0724               	addwf	__div_to_l_@cntr,w
  7244  1F82  00F8               	movwf	??__div_to_l_
  7245  1F83  0878               	movf	??__div_to_l_,w
  7246  1F84  02A5               	subwf	__div_to_l_@exp1,f
  7247  1F85  3020               	movlw	32
  7248  1F86  00F8               	movwf	??__div_to_l_
  7249  1F87  0878               	movf	??__div_to_l_,w
  7250  1F88  00A4               	movwf	__div_to_l_@cntr
  7251  1F89                     l3160:
  7252  1F89  3001               	movlw	1
  7253  1F8A  00F8               	movwf	??__div_to_l_
  7254  1F8B                     u4945:
  7255  1F8B  1003               	clrc
  7256  1F8C  0DA0               	rlf	__div_to_l_@quot,f
  7257  1F8D  0DA1               	rlf	__div_to_l_@quot+1,f
  7258  1F8E  0DA2               	rlf	__div_to_l_@quot+2,f
  7259  1F8F  0DA3               	rlf	__div_to_l_@quot+3,f
  7260  1F90  0BF8               	decfsz	??__div_to_l_,f
  7261  1F91  2F8B               	goto	u4945
  7262  1F92                     l3162:
  7263  1F92  0877               	movf	__div_to_l_@f2+3,w
  7264  1F93  0273               	subwf	__div_to_l_@f1+3,w
  7265  1F94  1D03               	skipz
  7266  1F95  2FA0               	goto	u4955
  7267  1F96  0876               	movf	__div_to_l_@f2+2,w
  7268  1F97  0272               	subwf	__div_to_l_@f1+2,w
  7269  1F98  1D03               	skipz
  7270  1F99  2FA0               	goto	u4955
  7271  1F9A  0875               	movf	__div_to_l_@f2+1,w
  7272  1F9B  0271               	subwf	__div_to_l_@f1+1,w
  7273  1F9C  1D03               	skipz
  7274  1F9D  2FA0               	goto	u4955
  7275  1F9E  0874               	movf	__div_to_l_@f2,w
  7276  1F9F  0270               	subwf	__div_to_l_@f1,w
  7277  1FA0                     u4955:
  7278  1FA0  1C03               	skipc
  7279  1FA1  2FA3               	goto	u4951
  7280  1FA2  2FA4               	goto	u4950
  7281  1FA3                     u4951:
  7282  1FA3  2FB3               	goto	l3168
  7283  1FA4                     u4950:
  7284  1FA4                     l3164:
  7285  1FA4  0874               	movf	__div_to_l_@f2,w
  7286  1FA5  02F0               	subwf	__div_to_l_@f1,f
  7287  1FA6  0875               	movf	__div_to_l_@f2+1,w
  7288  1FA7  1C03               	skipc
  7289  1FA8  0F75               	incfsz	__div_to_l_@f2+1,w
  7290  1FA9  02F1               	subwf	__div_to_l_@f1+1,f
  7291  1FAA  0876               	movf	__div_to_l_@f2+2,w
  7292  1FAB  1C03               	skipc
  7293  1FAC  0F76               	incfsz	__div_to_l_@f2+2,w
  7294  1FAD  02F2               	subwf	__div_to_l_@f1+2,f
  7295  1FAE  0877               	movf	__div_to_l_@f2+3,w
  7296  1FAF  1C03               	skipc
  7297  1FB0  0F77               	incfsz	__div_to_l_@f2+3,w
  7298  1FB1  02F3               	subwf	__div_to_l_@f1+3,f
  7299  1FB2                     l3166:
  7300  1FB2  1420               	bsf	__div_to_l_@quot,0
  7301  1FB3                     l3168:
  7302  1FB3  3001               	movlw	1
  7303  1FB4  00F8               	movwf	??__div_to_l_
  7304  1FB5                     u4965:
  7305  1FB5  1003               	clrc
  7306  1FB6  0DF0               	rlf	__div_to_l_@f1,f
  7307  1FB7  0DF1               	rlf	__div_to_l_@f1+1,f
  7308  1FB8  0DF2               	rlf	__div_to_l_@f1+2,f
  7309  1FB9  0DF3               	rlf	__div_to_l_@f1+3,f
  7310  1FBA  0BF8               	decfsz	??__div_to_l_,f
  7311  1FBB  2FB5               	goto	u4965
  7312  1FBC                     l3170:
  7313  1FBC  3001               	movlw	1
  7314  1FBD  02A4               	subwf	__div_to_l_@cntr,f
  7315  1FBE  1D03               	btfss	3,2
  7316  1FBF  2FC1               	goto	u4971
  7317  1FC0  2FC2               	goto	u4970
  7318  1FC1                     u4971:
  7319  1FC1  2F89               	goto	l3160
  7320  1FC2                     u4970:
  7321  1FC2                     l555:
  7322  1FC2  1FA5               	btfss	__div_to_l_@exp1,7
  7323  1FC3  2FC5               	goto	u4981
  7324  1FC4  2FC6               	goto	u4980
  7325  1FC5                     u4981:
  7326  1FC5  2FE0               	goto	l3180
  7327  1FC6                     u4980:
  7328  1FC6                     l3172:
  7329  1FC6  0825               	movf	__div_to_l_@exp1,w
  7330  1FC7  3A80               	xorlw	128
  7331  1FC8  3E9F               	addlw	159
  7332  1FC9  1803               	skipnc
  7333  1FCA  2FCC               	goto	u4991
  7334  1FCB  2FCD               	goto	u4990
  7335  1FCC                     u4991:
  7336  1FCC  2FCE               	goto	l3178
  7337  1FCD                     u4990:
  7338  1FCD  2F4F               	goto	l3142
  7339  1FCE                     l3178:
  7340  1FCE  3001               	movlw	1
  7341  1FCF                     u5005:
  7342  1FCF  1003               	clrc
  7343  1FD0  0CA3               	rrf	__div_to_l_@quot+3,f
  7344  1FD1  0CA2               	rrf	__div_to_l_@quot+2,f
  7345  1FD2  0CA1               	rrf	__div_to_l_@quot+1,f
  7346  1FD3  0CA0               	rrf	__div_to_l_@quot,f
  7347  1FD4  3EFF               	addlw	-1
  7348  1FD5  1D03               	skipz
  7349  1FD6  2FCF               	goto	u5005
  7350  1FD7  3001               	movlw	1
  7351  1FD8  00F8               	movwf	??__div_to_l_
  7352  1FD9  0878               	movf	??__div_to_l_,w
  7353  1FDA  07A5               	addwf	__div_to_l_@exp1,f
  7354  1FDB  1D03               	btfss	3,2
  7355  1FDC  2FDE               	goto	u5011
  7356  1FDD  2FDF               	goto	u5010
  7357  1FDE                     u5011:
  7358  1FDE  2FCE               	goto	l3178
  7359  1FDF                     u5010:
  7360  1FDF  2FF7               	goto	l3188
  7361  1FE0                     l3180:
  7362  1FE0  3020               	movlw	32
  7363  1FE1  0225               	subwf	__div_to_l_@exp1,w
  7364  1FE2  1C03               	skipc
  7365  1FE3  2FE5               	goto	u5021
  7366  1FE4  2FE6               	goto	u5020
  7367  1FE5                     u5021:
  7368  1FE5  2FF2               	goto	l562
  7369  1FE6                     u5020:
  7370  1FE6  2F4F               	goto	l3142
  7371  1FE7                     l3186:
  7372  1FE7  3001               	movlw	1
  7373  1FE8  00F8               	movwf	??__div_to_l_
  7374  1FE9                     u5035:
  7375  1FE9  1003               	clrc
  7376  1FEA  0DA0               	rlf	__div_to_l_@quot,f
  7377  1FEB  0DA1               	rlf	__div_to_l_@quot+1,f
  7378  1FEC  0DA2               	rlf	__div_to_l_@quot+2,f
  7379  1FED  0DA3               	rlf	__div_to_l_@quot+3,f
  7380  1FEE  0BF8               	decfsz	??__div_to_l_,f
  7381  1FEF  2FE9               	goto	u5035
  7382  1FF0  3001               	movlw	1
  7383  1FF1  02A5               	subwf	__div_to_l_@exp1,f
  7384  1FF2                     l562:
  7385  1FF2  0825               	movf	__div_to_l_@exp1,w
  7386  1FF3  1D03               	btfss	3,2
  7387  1FF4  2FF6               	goto	u5041
  7388  1FF5  2FF7               	goto	u5040
  7389  1FF6                     u5041:
  7390  1FF6  2FE7               	goto	l3186
  7391  1FF7                     u5040:
  7392  1FF7                     l3188:
  7393  1FF7  0823               	movf	__div_to_l_@quot+3,w
  7394  1FF8  00F3               	movwf	?__div_to_l_+3
  7395  1FF9  0822               	movf	__div_to_l_@quot+2,w
  7396  1FFA  00F2               	movwf	?__div_to_l_+2
  7397  1FFB  0821               	movf	__div_to_l_@quot+1,w
  7398  1FFC  00F1               	movwf	?__div_to_l_+1
  7399  1FFD  0820               	movf	__div_to_l_@quot,w
  7400  1FFE  00F0               	movwf	?__div_to_l_
  7401  1FFF                     l551:
  7402  1FFF  0008               	return
  7403  2000                     __end_of__div_to_l_:
  7404                           
  7405                           	psect	text13
  7406  1DCB                     __ptext13:	
  7407 ;; *************** function ___xxtofl *****************
  7408 ;; Defined at:
  7409 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  sign            1    wreg     unsigned char 
  7412 ;;  val             4    0[COMMON] long 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  sign            1    8[COMMON] unsigned char 
  7415 ;;  arg             4   10[COMMON] unsigned long 
  7416 ;;  exp             1    9[COMMON] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  4    0[COMMON] unsigned char 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7426 ;;      Params:         4       0       0       0       0
  7427 ;;      Locals:         6       0       0       0       0
  7428 ;;      Temps:          4       0       0       0       0
  7429 ;;      Totals:        14       0       0       0       0
  7430 ;;Total ram usage:       14 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_main
  7436 ;;		_sprintf
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           
  7441                           ;psect for function ___xxtofl
  7442  1DCB                     ___xxtofl:
  7443                           
  7444                           ;incstack = 0
  7445                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7446                           ;___xxtofl@sign stored from wreg
  7447  1DCB  00F8               	movwf	___xxtofl@sign
  7448  1DCC                     l3308:
  7449  1DCC  0878               	movf	___xxtofl@sign,w
  7450  1DCD  1903               	btfsc	3,2
  7451  1DCE  2DD0               	goto	u5361
  7452  1DCF  2DD1               	goto	u5360
  7453  1DD0                     u5361:
  7454  1DD0  2DE5               	goto	l3314
  7455  1DD1                     u5360:
  7456  1DD1                     l3310:
  7457  1DD1  1FF3               	btfss	___xxtofl@val+3,7
  7458  1DD2  2DD4               	goto	u5371
  7459  1DD3  2DD5               	goto	u5370
  7460  1DD4                     u5371:
  7461  1DD4  2DE5               	goto	l3314
  7462  1DD5                     u5370:
  7463  1DD5                     l3312:
  7464  1DD5  0970               	comf	___xxtofl@val,w
  7465  1DD6  00FA               	movwf	___xxtofl@arg
  7466  1DD7  0971               	comf	___xxtofl@val+1,w
  7467  1DD8  00FB               	movwf	___xxtofl@arg+1
  7468  1DD9  0972               	comf	___xxtofl@val+2,w
  7469  1DDA  00FC               	movwf	___xxtofl@arg+2
  7470  1DDB  0973               	comf	___xxtofl@val+3,w
  7471  1DDC  00FD               	movwf	___xxtofl@arg+3
  7472  1DDD  0AFA               	incf	___xxtofl@arg,f
  7473  1DDE  1903               	skipnz
  7474  1DDF  0AFB               	incf	___xxtofl@arg+1,f
  7475  1DE0  1903               	skipnz
  7476  1DE1  0AFC               	incf	___xxtofl@arg+2,f
  7477  1DE2  1903               	skipnz
  7478  1DE3  0AFD               	incf	___xxtofl@arg+3,f
  7479  1DE4  2DED               	goto	l848
  7480  1DE5                     l3314:
  7481  1DE5  0873               	movf	___xxtofl@val+3,w
  7482  1DE6  00FD               	movwf	___xxtofl@arg+3
  7483  1DE7  0872               	movf	___xxtofl@val+2,w
  7484  1DE8  00FC               	movwf	___xxtofl@arg+2
  7485  1DE9  0871               	movf	___xxtofl@val+1,w
  7486  1DEA  00FB               	movwf	___xxtofl@arg+1
  7487  1DEB  0870               	movf	___xxtofl@val,w
  7488  1DEC  00FA               	movwf	___xxtofl@arg
  7489  1DED                     l848:
  7490  1DED  0873               	movf	___xxtofl@val+3,w
  7491  1DEE  0472               	iorwf	___xxtofl@val+2,w
  7492  1DEF  0471               	iorwf	___xxtofl@val+1,w
  7493  1DF0  0470               	iorwf	___xxtofl@val,w
  7494  1DF1  1D03               	skipz
  7495  1DF2  2DF4               	goto	u5381
  7496  1DF3  2DF5               	goto	u5380
  7497  1DF4                     u5381:
  7498  1DF4  2DFE               	goto	l3320
  7499  1DF5                     u5380:
  7500  1DF5                     l3316:
  7501  1DF5  3000               	movlw	0
  7502  1DF6  00F3               	movwf	?___xxtofl+3
  7503  1DF7  3000               	movlw	0
  7504  1DF8  00F2               	movwf	?___xxtofl+2
  7505  1DF9  3000               	movlw	0
  7506  1DFA  00F1               	movwf	?___xxtofl+1
  7507  1DFB  3000               	movlw	0
  7508  1DFC  00F0               	movwf	?___xxtofl
  7509  1DFD  2E84               	goto	l850
  7510  1DFE                     l3320:
  7511  1DFE  3096               	movlw	150
  7512  1DFF  00F4               	movwf	??___xxtofl
  7513  1E00  0874               	movf	??___xxtofl,w
  7514  1E01  00F9               	movwf	___xxtofl@exp
  7515  1E02  2E10               	goto	l3324
  7516  1E03                     l3322:
  7517  1E03  3001               	movlw	1
  7518  1E04  00F4               	movwf	??___xxtofl
  7519  1E05  0874               	movf	??___xxtofl,w
  7520  1E06  07F9               	addwf	___xxtofl@exp,f
  7521  1E07  3001               	movlw	1
  7522  1E08                     u5395:
  7523  1E08  1003               	clrc
  7524  1E09  0CFD               	rrf	___xxtofl@arg+3,f
  7525  1E0A  0CFC               	rrf	___xxtofl@arg+2,f
  7526  1E0B  0CFB               	rrf	___xxtofl@arg+1,f
  7527  1E0C  0CFA               	rrf	___xxtofl@arg,f
  7528  1E0D  3EFF               	addlw	-1
  7529  1E0E  1D03               	skipz
  7530  1E0F  2E08               	goto	u5395
  7531  1E10                     l3324:
  7532  1E10  30FE               	movlw	254
  7533  1E11  057D               	andwf	___xxtofl@arg+3,w
  7534  1E12  1D03               	btfss	3,2
  7535  1E13  2E15               	goto	u5401
  7536  1E14  2E16               	goto	u5400
  7537  1E15                     u5401:
  7538  1E15  2E03               	goto	l3322
  7539  1E16                     u5400:
  7540  1E16  2E32               	goto	l854
  7541  1E17                     l3326:
  7542  1E17  3001               	movlw	1
  7543  1E18  00F4               	movwf	??___xxtofl
  7544  1E19  0874               	movf	??___xxtofl,w
  7545  1E1A  07F9               	addwf	___xxtofl@exp,f
  7546  1E1B                     l3328:
  7547  1E1B  3001               	movlw	1
  7548  1E1C  07FA               	addwf	___xxtofl@arg,f
  7549  1E1D  3000               	movlw	0
  7550  1E1E  1803               	skipnc
  7551  1E1F  3001               	movlw	1
  7552  1E20  07FB               	addwf	___xxtofl@arg+1,f
  7553  1E21  3000               	movlw	0
  7554  1E22  1803               	skipnc
  7555  1E23  3001               	movlw	1
  7556  1E24  07FC               	addwf	___xxtofl@arg+2,f
  7557  1E25  3000               	movlw	0
  7558  1E26  1803               	skipnc
  7559  1E27  3001               	movlw	1
  7560  1E28  07FD               	addwf	___xxtofl@arg+3,f
  7561  1E29                     l3330:
  7562  1E29  3001               	movlw	1
  7563  1E2A                     u5415:
  7564  1E2A  1003               	clrc
  7565  1E2B  0CFD               	rrf	___xxtofl@arg+3,f
  7566  1E2C  0CFC               	rrf	___xxtofl@arg+2,f
  7567  1E2D  0CFB               	rrf	___xxtofl@arg+1,f
  7568  1E2E  0CFA               	rrf	___xxtofl@arg,f
  7569  1E2F  3EFF               	addlw	-1
  7570  1E30  1D03               	skipz
  7571  1E31  2E2A               	goto	u5415
  7572  1E32                     l854:
  7573  1E32  30FF               	movlw	255
  7574  1E33  057D               	andwf	___xxtofl@arg+3,w
  7575  1E34  1D03               	btfss	3,2
  7576  1E35  2E37               	goto	u5421
  7577  1E36  2E38               	goto	u5420
  7578  1E37                     u5421:
  7579  1E37  2E17               	goto	l3326
  7580  1E38                     u5420:
  7581  1E38  2E44               	goto	l3334
  7582  1E39                     l3332:
  7583  1E39  3001               	movlw	1
  7584  1E3A  02F9               	subwf	___xxtofl@exp,f
  7585  1E3B  3001               	movlw	1
  7586  1E3C  00F4               	movwf	??___xxtofl
  7587  1E3D                     u5435:
  7588  1E3D  1003               	clrc
  7589  1E3E  0DFA               	rlf	___xxtofl@arg,f
  7590  1E3F  0DFB               	rlf	___xxtofl@arg+1,f
  7591  1E40  0DFC               	rlf	___xxtofl@arg+2,f
  7592  1E41  0DFD               	rlf	___xxtofl@arg+3,f
  7593  1E42  0BF4               	decfsz	??___xxtofl,f
  7594  1E43  2E3D               	goto	u5435
  7595  1E44                     l3334:
  7596  1E44  1BFC               	btfsc	___xxtofl@arg+2,7
  7597  1E45  2E47               	goto	u5441
  7598  1E46  2E48               	goto	u5440
  7599  1E47                     u5441:
  7600  1E47  2E4E               	goto	l861
  7601  1E48                     u5440:
  7602  1E48                     l3336:
  7603  1E48  3002               	movlw	2
  7604  1E49  0279               	subwf	___xxtofl@exp,w
  7605  1E4A  1803               	skipnc
  7606  1E4B  2E4D               	goto	u5451
  7607  1E4C  2E4E               	goto	u5450
  7608  1E4D                     u5451:
  7609  1E4D  2E39               	goto	l3332
  7610  1E4E                     u5450:
  7611  1E4E                     l861:
  7612  1E4E  1879               	btfsc	___xxtofl@exp,0
  7613  1E4F  2E51               	goto	u5461
  7614  1E50  2E52               	goto	u5460
  7615  1E51                     u5461:
  7616  1E51  2E5A               	goto	l862
  7617  1E52                     u5460:
  7618  1E52                     l3338:
  7619  1E52  30FF               	movlw	255
  7620  1E53  05FA               	andwf	___xxtofl@arg,f
  7621  1E54  30FF               	movlw	255
  7622  1E55  05FB               	andwf	___xxtofl@arg+1,f
  7623  1E56  307F               	movlw	127
  7624  1E57  05FC               	andwf	___xxtofl@arg+2,f
  7625  1E58  30FF               	movlw	255
  7626  1E59  05FD               	andwf	___xxtofl@arg+3,f
  7627  1E5A                     l862:
  7628  1E5A  1003               	clrc
  7629  1E5B  0CF9               	rrf	___xxtofl@exp,f
  7630  1E5C                     l3340:
  7631  1E5C  0879               	movf	___xxtofl@exp,w
  7632  1E5D  00F4               	movwf	??___xxtofl
  7633  1E5E  01F5               	clrf	??___xxtofl+1
  7634  1E5F  01F6               	clrf	??___xxtofl+2
  7635  1E60  01F7               	clrf	??___xxtofl+3
  7636  1E61  3018               	movlw	24
  7637  1E62                     u5475:
  7638  1E62  1003               	clrc
  7639  1E63  0DF4               	rlf	??___xxtofl,f
  7640  1E64  0DF5               	rlf	??___xxtofl+1,f
  7641  1E65  0DF6               	rlf	??___xxtofl+2,f
  7642  1E66  0DF7               	rlf	??___xxtofl+3,f
  7643  1E67                     u5470:
  7644  1E67  3EFF               	addlw	-1
  7645  1E68  1D03               	skipz
  7646  1E69  2E62               	goto	u5475
  7647  1E6A  0874               	movf	??___xxtofl,w
  7648  1E6B  04FA               	iorwf	___xxtofl@arg,f
  7649  1E6C  0875               	movf	??___xxtofl+1,w
  7650  1E6D  04FB               	iorwf	___xxtofl@arg+1,f
  7651  1E6E  0876               	movf	??___xxtofl+2,w
  7652  1E6F  04FC               	iorwf	___xxtofl@arg+2,f
  7653  1E70  0877               	movf	??___xxtofl+3,w
  7654  1E71  04FD               	iorwf	___xxtofl@arg+3,f
  7655  1E72                     l3342:
  7656  1E72  0878               	movf	___xxtofl@sign,w
  7657  1E73  1903               	btfsc	3,2
  7658  1E74  2E76               	goto	u5481
  7659  1E75  2E77               	goto	u5480
  7660  1E76                     u5481:
  7661  1E76  2E7C               	goto	l3348
  7662  1E77                     u5480:
  7663  1E77                     l3344:
  7664  1E77  1FF3               	btfss	___xxtofl@val+3,7
  7665  1E78  2E7A               	goto	u5491
  7666  1E79  2E7B               	goto	u5490
  7667  1E7A                     u5491:
  7668  1E7A  2E7C               	goto	l3348
  7669  1E7B                     u5490:
  7670  1E7B                     l3346:
  7671  1E7B  17FD               	bsf	___xxtofl@arg+3,7
  7672  1E7C                     l3348:
  7673  1E7C  087D               	movf	___xxtofl@arg+3,w
  7674  1E7D  00F3               	movwf	?___xxtofl+3
  7675  1E7E  087C               	movf	___xxtofl@arg+2,w
  7676  1E7F  00F2               	movwf	?___xxtofl+2
  7677  1E80  087B               	movf	___xxtofl@arg+1,w
  7678  1E81  00F1               	movwf	?___xxtofl+1
  7679  1E82  087A               	movf	___xxtofl@arg,w
  7680  1E83  00F0               	movwf	?___xxtofl
  7681  1E84                     l850:
  7682  1E84  0008               	return
  7683  1E85                     __end_of___xxtofl:
  7684                           
  7685                           	psect	text14
  7686  193B                     __ptext14:	
  7687 ;; *************** function ___wmul *****************
  7688 ;; Defined at:
  7689 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  multiplier      2    0[COMMON] unsigned int 
  7692 ;;  multiplicand    2    2[COMMON] unsigned int 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  product         2    4[COMMON] unsigned int 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  2    0[COMMON] unsigned int 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7704 ;;      Params:         4       0       0       0       0
  7705 ;;      Locals:         2       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0
  7707 ;;      Totals:         6       0       0       0       0
  7708 ;;Total ram usage:        6 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		_sprintf
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           
  7718                           ;psect for function ___wmul
  7719  193B                     ___wmul:
  7720  193B                     l3192:	
  7721                           ;incstack = 0
  7722                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7723                           
  7724  193B  01F4               	clrf	___wmul@product
  7725  193C  01F5               	clrf	___wmul@product+1
  7726  193D                     l3194:
  7727  193D  1C70               	btfss	___wmul@multiplier,0
  7728  193E  2940               	goto	u5051
  7729  193F  2941               	goto	u5050
  7730  1940                     u5051:
  7731  1940  2947               	goto	l381
  7732  1941                     u5050:
  7733  1941                     l3196:
  7734  1941  0872               	movf	___wmul@multiplicand,w
  7735  1942  07F4               	addwf	___wmul@product,f
  7736  1943  1803               	skipnc
  7737  1944  0AF5               	incf	___wmul@product+1,f
  7738  1945  0873               	movf	___wmul@multiplicand+1,w
  7739  1946  07F5               	addwf	___wmul@product+1,f
  7740  1947                     l381:
  7741  1947  3001               	movlw	1
  7742  1948                     u5065:
  7743  1948  1003               	clrc
  7744  1949  0DF2               	rlf	___wmul@multiplicand,f
  7745  194A  0DF3               	rlf	___wmul@multiplicand+1,f
  7746  194B  3EFF               	addlw	-1
  7747  194C  1D03               	skipz
  7748  194D  2948               	goto	u5065
  7749  194E                     l3198:
  7750  194E  3001               	movlw	1
  7751  194F                     u5075:
  7752  194F  1003               	clrc
  7753  1950  0CF1               	rrf	___wmul@multiplier+1,f
  7754  1951  0CF0               	rrf	___wmul@multiplier,f
  7755  1952  3EFF               	addlw	-1
  7756  1953  1D03               	skipz
  7757  1954  294F               	goto	u5075
  7758  1955                     l3200:
  7759  1955  0870               	movf	___wmul@multiplier,w
  7760  1956  0471               	iorwf	___wmul@multiplier+1,w
  7761  1957  1D03               	btfss	3,2
  7762  1958  295A               	goto	u5081
  7763  1959  295B               	goto	u5080
  7764  195A                     u5081:
  7765  195A  293D               	goto	l3194
  7766  195B                     u5080:
  7767  195B                     l3202:
  7768  195B  0875               	movf	___wmul@product+1,w
  7769  195C  00F1               	movwf	?___wmul+1
  7770  195D  0874               	movf	___wmul@product,w
  7771  195E  00F0               	movwf	?___wmul
  7772  195F                     l383:
  7773  195F  0008               	return
  7774  1960                     __end_of___wmul:
  7775                           
  7776                           	psect	text15
  7777  1C14                     __ptext15:	
  7778 ;; *************** function ___llmod *****************
  7779 ;; Defined at:
  7780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  divisor         4    0[BANK0 ] unsigned long 
  7783 ;;  dividend        4    4[BANK0 ] unsigned long 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  counter         1    9[BANK0 ] unsigned char 
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  4    0[BANK0 ] unsigned long 
  7788 ;; Registers used:
  7789 ;;		wreg, status,2, status,0
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7795 ;;      Params:         0       8       0       0       0
  7796 ;;      Locals:         0       1       0       0       0
  7797 ;;      Temps:          0       1       0       0       0
  7798 ;;      Totals:         0      10       0       0       0
  7799 ;;Total ram usage:       10 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_sprintf
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           
  7809                           ;psect for function ___llmod
  7810  1C14                     ___llmod:
  7811  1C14                     l3282:	
  7812                           ;incstack = 0
  7813                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7814                           
  7815  1C14  1283               	bcf	3,5	;RP0=0, select bank0
  7816  1C15  1303               	bcf	3,6	;RP1=0, select bank0
  7817  1C16  0823               	movf	___llmod@divisor+3,w
  7818  1C17  0422               	iorwf	___llmod@divisor+2,w
  7819  1C18  0421               	iorwf	___llmod@divisor+1,w
  7820  1C19  0420               	iorwf	___llmod@divisor,w
  7821  1C1A  1903               	skipnz
  7822  1C1B  2C1D               	goto	u5301
  7823  1C1C  2C1E               	goto	u5300
  7824  1C1D                     u5301:
  7825  1C1D  2C61               	goto	l3298
  7826  1C1E                     u5300:
  7827  1C1E                     l3284:
  7828  1C1E  01A9               	clrf	___llmod@counter
  7829  1C1F  0AA9               	incf	___llmod@counter,f
  7830  1C20  2C2E               	goto	l3288
  7831  1C21                     l3286:
  7832  1C21  3001               	movlw	1
  7833  1C22  00A8               	movwf	??___llmod
  7834  1C23                     u5315:
  7835  1C23  1003               	clrc
  7836  1C24  0DA0               	rlf	___llmod@divisor,f
  7837  1C25  0DA1               	rlf	___llmod@divisor+1,f
  7838  1C26  0DA2               	rlf	___llmod@divisor+2,f
  7839  1C27  0DA3               	rlf	___llmod@divisor+3,f
  7840  1C28  0BA8               	decfsz	??___llmod,f
  7841  1C29  2C23               	goto	u5315
  7842  1C2A  3001               	movlw	1
  7843  1C2B  00A8               	movwf	??___llmod
  7844  1C2C  0828               	movf	??___llmod,w
  7845  1C2D  07A9               	addwf	___llmod@counter,f
  7846  1C2E                     l3288:
  7847  1C2E  1FA3               	btfss	___llmod@divisor+3,7
  7848  1C2F  2C31               	goto	u5321
  7849  1C30  2C32               	goto	u5320
  7850  1C31                     u5321:
  7851  1C31  2C21               	goto	l3286
  7852  1C32                     u5320:
  7853  1C32                     l3290:
  7854  1C32  0823               	movf	___llmod@divisor+3,w
  7855  1C33  0227               	subwf	___llmod@dividend+3,w
  7856  1C34  1D03               	skipz
  7857  1C35  2C40               	goto	u5335
  7858  1C36  0822               	movf	___llmod@divisor+2,w
  7859  1C37  0226               	subwf	___llmod@dividend+2,w
  7860  1C38  1D03               	skipz
  7861  1C39  2C40               	goto	u5335
  7862  1C3A  0821               	movf	___llmod@divisor+1,w
  7863  1C3B  0225               	subwf	___llmod@dividend+1,w
  7864  1C3C  1D03               	skipz
  7865  1C3D  2C40               	goto	u5335
  7866  1C3E  0820               	movf	___llmod@divisor,w
  7867  1C3F  0224               	subwf	___llmod@dividend,w
  7868  1C40                     u5335:
  7869  1C40  1C03               	skipc
  7870  1C41  2C43               	goto	u5331
  7871  1C42  2C44               	goto	u5330
  7872  1C43                     u5331:
  7873  1C43  2C52               	goto	l3294
  7874  1C44                     u5330:
  7875  1C44                     l3292:
  7876  1C44  0820               	movf	___llmod@divisor,w
  7877  1C45  02A4               	subwf	___llmod@dividend,f
  7878  1C46  0821               	movf	___llmod@divisor+1,w
  7879  1C47  1C03               	skipc
  7880  1C48  0F21               	incfsz	___llmod@divisor+1,w
  7881  1C49  02A5               	subwf	___llmod@dividend+1,f
  7882  1C4A  0822               	movf	___llmod@divisor+2,w
  7883  1C4B  1C03               	skipc
  7884  1C4C  0F22               	incfsz	___llmod@divisor+2,w
  7885  1C4D  02A6               	subwf	___llmod@dividend+2,f
  7886  1C4E  0823               	movf	___llmod@divisor+3,w
  7887  1C4F  1C03               	skipc
  7888  1C50  0F23               	incfsz	___llmod@divisor+3,w
  7889  1C51  02A7               	subwf	___llmod@dividend+3,f
  7890  1C52                     l3294:
  7891  1C52  3001               	movlw	1
  7892  1C53                     u5345:
  7893  1C53  1003               	clrc
  7894  1C54  0CA3               	rrf	___llmod@divisor+3,f
  7895  1C55  0CA2               	rrf	___llmod@divisor+2,f
  7896  1C56  0CA1               	rrf	___llmod@divisor+1,f
  7897  1C57  0CA0               	rrf	___llmod@divisor,f
  7898  1C58  3EFF               	addlw	-1
  7899  1C59  1D03               	skipz
  7900  1C5A  2C53               	goto	u5345
  7901  1C5B                     l3296:
  7902  1C5B  3001               	movlw	1
  7903  1C5C  02A9               	subwf	___llmod@counter,f
  7904  1C5D  1D03               	btfss	3,2
  7905  1C5E  2C60               	goto	u5351
  7906  1C5F  2C61               	goto	u5350
  7907  1C60                     u5351:
  7908  1C60  2C32               	goto	l3290
  7909  1C61                     u5350:
  7910  1C61                     l3298:
  7911  1C61  0827               	movf	___llmod@dividend+3,w
  7912  1C62  00A3               	movwf	?___llmod+3
  7913  1C63  0826               	movf	___llmod@dividend+2,w
  7914  1C64  00A2               	movwf	?___llmod+2
  7915  1C65  0825               	movf	___llmod@dividend+1,w
  7916  1C66  00A1               	movwf	?___llmod+1
  7917  1C67  0824               	movf	___llmod@dividend,w
  7918  1C68  00A0               	movwf	?___llmod
  7919  1C69                     l637:
  7920  1C69  0008               	return
  7921  1C6A                     __end_of___llmod:
  7922                           
  7923                           	psect	text16
  7924  08C4                     __ptext16:	
  7925 ;; *************** function ___fltol *****************
  7926 ;; Defined at:
  7927 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  f1              4   49[BANK0 ] unsigned long 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  exp1            1   59[BANK0 ] unsigned char 
  7932 ;;  sign1           1   58[BANK0 ] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  4   49[BANK0 ] long 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7942 ;;      Params:         0       4       0       0       0
  7943 ;;      Locals:         0       2       0       0       0
  7944 ;;      Temps:          0       5       0       0       0
  7945 ;;      Totals:         0      11       0       0       0
  7946 ;;Total ram usage:       11 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_sprintf
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           
  7956                           ;psect for function ___fltol
  7957  08C4                     ___fltol:
  7958  08C4                     l3246:	
  7959                           ;incstack = 0
  7960                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7961                           
  7962  08C4  1003               	clrc
  7963  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  7964  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  7965  08C7  0D53               	rlf	___fltol@f1+2,w
  7966  08C8  0D54               	rlf	___fltol@f1+3,w
  7967  08C9  00D5               	movwf	??___fltol
  7968  08CA  0855               	movf	??___fltol,w
  7969  08CB  00DB               	movwf	___fltol@exp1
  7970  08CC  085B               	movf	___fltol@exp1,w
  7971  08CD  1D03               	btfss	3,2
  7972  08CE  28D0               	goto	u5201
  7973  08CF  28D1               	goto	u5200
  7974  08D0                     u5201:
  7975  08D0  28DA               	goto	l3252
  7976  08D1                     u5200:
  7977  08D1                     l3248:
  7978  08D1  3000               	movlw	0
  7979  08D2  00D4               	movwf	?___fltol+3
  7980  08D3  3000               	movlw	0
  7981  08D4  00D3               	movwf	?___fltol+2
  7982  08D5  3000               	movlw	0
  7983  08D6  00D2               	movwf	?___fltol+1
  7984  08D7  3000               	movlw	0
  7985  08D8  00D1               	movwf	?___fltol
  7986  08D9  293F               	goto	l584
  7987  08DA                     l3252:
  7988  08DA  0851               	movf	___fltol@f1,w
  7989  08DB  00D5               	movwf	??___fltol
  7990  08DC  0852               	movf	___fltol@f1+1,w
  7991  08DD  00D6               	movwf	??___fltol+1
  7992  08DE  0853               	movf	___fltol@f1+2,w
  7993  08DF  00D7               	movwf	??___fltol+2
  7994  08E0  0854               	movf	___fltol@f1+3,w
  7995  08E1  00D8               	movwf	??___fltol+3
  7996  08E2  301F               	movlw	31
  7997  08E3                     u5215:
  7998  08E3  1003               	clrc
  7999  08E4  0CD8               	rrf	??___fltol+3,f
  8000  08E5  0CD7               	rrf	??___fltol+2,f
  8001  08E6  0CD6               	rrf	??___fltol+1,f
  8002  08E7  0CD5               	rrf	??___fltol,f
  8003  08E8                     u5210:
  8004  08E8  3EFF               	addlw	-1
  8005  08E9  1D03               	skipz
  8006  08EA  28E3               	goto	u5215
  8007  08EB  0855               	movf	??___fltol,w
  8008  08EC  00D9               	movwf	??___fltol+4
  8009  08ED  0859               	movf	??___fltol+4,w
  8010  08EE  00DA               	movwf	___fltol@sign1
  8011  08EF                     l3254:
  8012  08EF  17D3               	bsf	___fltol@f1+2,7
  8013  08F0                     l3256:
  8014  08F0  30FF               	movlw	255
  8015  08F1  05D1               	andwf	___fltol@f1,f
  8016  08F2  30FF               	movlw	255
  8017  08F3  05D2               	andwf	___fltol@f1+1,f
  8018  08F4  30FF               	movlw	255
  8019  08F5  05D3               	andwf	___fltol@f1+2,f
  8020  08F6  3000               	movlw	0
  8021  08F7  05D4               	andwf	___fltol@f1+3,f
  8022  08F8                     l3258:
  8023  08F8  3096               	movlw	150
  8024  08F9  02DB               	subwf	___fltol@exp1,f
  8025  08FA                     l3260:
  8026  08FA  1FDB               	btfss	___fltol@exp1,7
  8027  08FB  28FD               	goto	u5221
  8028  08FC  28FE               	goto	u5220
  8029  08FD                     u5221:
  8030  08FD  2918               	goto	l3270
  8031  08FE                     u5220:
  8032  08FE                     l3262:
  8033  08FE  085B               	movf	___fltol@exp1,w
  8034  08FF  3A80               	xorlw	128
  8035  0900  3E97               	addlw	151
  8036  0901  1803               	skipnc
  8037  0902  2904               	goto	u5231
  8038  0903  2905               	goto	u5230
  8039  0904                     u5231:
  8040  0904  2906               	goto	l3268
  8041  0905                     u5230:
  8042  0905  28D1               	goto	l3248
  8043  0906                     l3268:
  8044  0906  3001               	movlw	1
  8045  0907                     u5245:
  8046  0907  1003               	clrc
  8047  0908  0CD4               	rrf	___fltol@f1+3,f
  8048  0909  0CD3               	rrf	___fltol@f1+2,f
  8049  090A  0CD2               	rrf	___fltol@f1+1,f
  8050  090B  0CD1               	rrf	___fltol@f1,f
  8051  090C  3EFF               	addlw	-1
  8052  090D  1D03               	skipz
  8053  090E  2907               	goto	u5245
  8054  090F  3001               	movlw	1
  8055  0910  00D5               	movwf	??___fltol
  8056  0911  0855               	movf	??___fltol,w
  8057  0912  07DB               	addwf	___fltol@exp1,f
  8058  0913  1D03               	btfss	3,2
  8059  0914  2916               	goto	u5251
  8060  0915  2917               	goto	u5250
  8061  0916                     u5251:
  8062  0916  2906               	goto	l3268
  8063  0917                     u5250:
  8064  0917  292F               	goto	l3278
  8065  0918                     l3270:
  8066  0918  3020               	movlw	32
  8067  0919  025B               	subwf	___fltol@exp1,w
  8068  091A  1C03               	skipc
  8069  091B  291D               	goto	u5261
  8070  091C  291E               	goto	u5260
  8071  091D                     u5261:
  8072  091D  292A               	goto	l591
  8073  091E                     u5260:
  8074  091E  28D1               	goto	l3248
  8075  091F                     l3276:
  8076  091F  3001               	movlw	1
  8077  0920  00D5               	movwf	??___fltol
  8078  0921                     u5275:
  8079  0921  1003               	clrc
  8080  0922  0DD1               	rlf	___fltol@f1,f
  8081  0923  0DD2               	rlf	___fltol@f1+1,f
  8082  0924  0DD3               	rlf	___fltol@f1+2,f
  8083  0925  0DD4               	rlf	___fltol@f1+3,f
  8084  0926  0BD5               	decfsz	??___fltol,f
  8085  0927  2921               	goto	u5275
  8086  0928  3001               	movlw	1
  8087  0929  02DB               	subwf	___fltol@exp1,f
  8088  092A                     l591:
  8089  092A  085B               	movf	___fltol@exp1,w
  8090  092B  1D03               	btfss	3,2
  8091  092C  292E               	goto	u5281
  8092  092D  292F               	goto	u5280
  8093  092E                     u5281:
  8094  092E  291F               	goto	l3276
  8095  092F                     u5280:
  8096  092F                     l3278:
  8097  092F  085A               	movf	___fltol@sign1,w
  8098  0930  1903               	btfsc	3,2
  8099  0931  2933               	goto	u5291
  8100  0932  2934               	goto	u5290
  8101  0933                     u5291:
  8102  0933  293F               	goto	l594
  8103  0934                     u5290:
  8104  0934                     l3280:
  8105  0934  09D1               	comf	___fltol@f1,f
  8106  0935  09D2               	comf	___fltol@f1+1,f
  8107  0936  09D3               	comf	___fltol@f1+2,f
  8108  0937  09D4               	comf	___fltol@f1+3,f
  8109  0938  0AD1               	incf	___fltol@f1,f
  8110  0939  1903               	skipnz
  8111  093A  0AD2               	incf	___fltol@f1+1,f
  8112  093B  1903               	skipnz
  8113  093C  0AD3               	incf	___fltol@f1+2,f
  8114  093D  1903               	skipnz
  8115  093E  0AD4               	incf	___fltol@f1+3,f
  8116  093F                     l594:
  8117  093F                     l584:
  8118  093F  0008               	return
  8119  0940                     __end_of___fltol:
  8120                           
  8121                           	psect	text17
  8122  1B73                     __ptext17:	
  8123 ;; *************** function ___flsub *****************
  8124 ;; Defined at:
  8125 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;  a               4    0[BANK1 ] long 
  8128 ;;  b               4    4[BANK1 ] long 
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;		None
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  4    0[BANK1 ] long 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8140 ;;      Params:         0       0       8       0       0
  8141 ;;      Locals:         0       0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0
  8143 ;;      Totals:         0       0       8       0       0
  8144 ;;Total ram usage:        8 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:    1
  8147 ;; This function calls:
  8148 ;;		___fladd
  8149 ;; This function is called by:
  8150 ;;		_sprintf
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           
  8155                           ;psect for function ___flsub
  8156  1B73                     ___flsub:
  8157  1B73                     l3302:	
  8158                           ;incstack = 0
  8159                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8160                           
  8161  1B73  3080               	movlw	128
  8162  1B74  1683               	bsf	3,5	;RP0=1, select bank1
  8163  1B75  1303               	bcf	3,6	;RP1=0, select bank1
  8164  1B76  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8165  1B77                     l3304:
  8166  1B77  0827               	movf	(___flsub@b+3)^(0+128),w
  8167  1B78  1283               	bcf	3,5	;RP0=0, select bank0
  8168  1B79  1303               	bcf	3,6	;RP1=0, select bank0
  8169  1B7A  00DB               	movwf	___fladd@b+3
  8170  1B7B  1683               	bsf	3,5	;RP0=1, select bank1
  8171  1B7C  1303               	bcf	3,6	;RP1=0, select bank1
  8172  1B7D  0826               	movf	(___flsub@b+2)^(0+128),w
  8173  1B7E  1283               	bcf	3,5	;RP0=0, select bank0
  8174  1B7F  1303               	bcf	3,6	;RP1=0, select bank0
  8175  1B80  00DA               	movwf	___fladd@b+2
  8176  1B81  1683               	bsf	3,5	;RP0=1, select bank1
  8177  1B82  1303               	bcf	3,6	;RP1=0, select bank1
  8178  1B83  0825               	movf	(___flsub@b+1)^(0+128),w
  8179  1B84  1283               	bcf	3,5	;RP0=0, select bank0
  8180  1B85  1303               	bcf	3,6	;RP1=0, select bank0
  8181  1B86  00D9               	movwf	___fladd@b+1
  8182  1B87  1683               	bsf	3,5	;RP0=1, select bank1
  8183  1B88  1303               	bcf	3,6	;RP1=0, select bank1
  8184  1B89  0824               	movf	___flsub@b^(0+128),w
  8185  1B8A  1283               	bcf	3,5	;RP0=0, select bank0
  8186  1B8B  1303               	bcf	3,6	;RP1=0, select bank0
  8187  1B8C  00D8               	movwf	___fladd@b
  8188  1B8D  1683               	bsf	3,5	;RP0=1, select bank1
  8189  1B8E  1303               	bcf	3,6	;RP1=0, select bank1
  8190  1B8F  0823               	movf	(___flsub@a+3)^(0+128),w
  8191  1B90  1283               	bcf	3,5	;RP0=0, select bank0
  8192  1B91  1303               	bcf	3,6	;RP1=0, select bank0
  8193  1B92  00DF               	movwf	___fladd@a+3
  8194  1B93  1683               	bsf	3,5	;RP0=1, select bank1
  8195  1B94  1303               	bcf	3,6	;RP1=0, select bank1
  8196  1B95  0822               	movf	(___flsub@a+2)^(0+128),w
  8197  1B96  1283               	bcf	3,5	;RP0=0, select bank0
  8198  1B97  1303               	bcf	3,6	;RP1=0, select bank0
  8199  1B98  00DE               	movwf	___fladd@a+2
  8200  1B99  1683               	bsf	3,5	;RP0=1, select bank1
  8201  1B9A  1303               	bcf	3,6	;RP1=0, select bank1
  8202  1B9B  0821               	movf	(___flsub@a+1)^(0+128),w
  8203  1B9C  1283               	bcf	3,5	;RP0=0, select bank0
  8204  1B9D  1303               	bcf	3,6	;RP1=0, select bank0
  8205  1B9E  00DD               	movwf	___fladd@a+1
  8206  1B9F  1683               	bsf	3,5	;RP0=1, select bank1
  8207  1BA0  1303               	bcf	3,6	;RP1=0, select bank1
  8208  1BA1  0820               	movf	___flsub@a^(0+128),w
  8209  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  8210  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  8211  1BA4  00DC               	movwf	___fladd@a
  8212  1BA5  160A  118A  2578  160A  158A  	fcall	___fladd
  8213  1BAA  1283               	bcf	3,5	;RP0=0, select bank0
  8214  1BAB  1303               	bcf	3,6	;RP1=0, select bank0
  8215  1BAC  085B               	movf	?___fladd+3,w
  8216  1BAD  1683               	bsf	3,5	;RP0=1, select bank1
  8217  1BAE  1303               	bcf	3,6	;RP1=0, select bank1
  8218  1BAF  00A3               	movwf	(?___flsub+3)^(0+128)
  8219  1BB0  1283               	bcf	3,5	;RP0=0, select bank0
  8220  1BB1  1303               	bcf	3,6	;RP1=0, select bank0
  8221  1BB2  085A               	movf	?___fladd+2,w
  8222  1BB3  1683               	bsf	3,5	;RP0=1, select bank1
  8223  1BB4  1303               	bcf	3,6	;RP1=0, select bank1
  8224  1BB5  00A2               	movwf	(?___flsub+2)^(0+128)
  8225  1BB6  1283               	bcf	3,5	;RP0=0, select bank0
  8226  1BB7  1303               	bcf	3,6	;RP1=0, select bank0
  8227  1BB8  0859               	movf	?___fladd+1,w
  8228  1BB9  1683               	bsf	3,5	;RP0=1, select bank1
  8229  1BBA  1303               	bcf	3,6	;RP1=0, select bank1
  8230  1BBB  00A1               	movwf	(?___flsub+1)^(0+128)
  8231  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
  8232  1BBD  1303               	bcf	3,6	;RP1=0, select bank0
  8233  1BBE  0858               	movf	?___fladd,w
  8234  1BBF  1683               	bsf	3,5	;RP0=1, select bank1
  8235  1BC0  1303               	bcf	3,6	;RP1=0, select bank1
  8236  1BC1  00A0               	movwf	?___flsub^(0+128)
  8237  1BC2                     l754:
  8238  1BC2  0008               	return
  8239  1BC3                     __end_of___flsub:
  8240                           
  8241                           	psect	text18
  8242  1578                     __ptext18:	
  8243 ;; *************** function ___fladd *****************
  8244 ;; Defined at:
  8245 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  b               4   56[BANK0 ] long 
  8248 ;;  a               4   60[BANK0 ] long 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;  grs             1   75[BANK0 ] unsigned char 
  8251 ;;  bexp            1   74[BANK0 ] unsigned char 
  8252 ;;  aexp            1   73[BANK0 ] unsigned char 
  8253 ;;  signs           1   72[BANK0 ] unsigned char 
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  4   56[BANK0 ] unsigned char 
  8256 ;; Registers used:
  8257 ;;		wreg, status,2, status,0, btemp+1
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8263 ;;      Params:         0       8       0       0       0
  8264 ;;      Locals:         0       4       0       0       0
  8265 ;;      Temps:          0       8       0       0       0
  8266 ;;      Totals:         0      20       0       0       0
  8267 ;;Total ram usage:       20 bytes
  8268 ;; Hardware stack levels used:    1
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_main
  8273 ;;		_sprintf
  8274 ;;		___flsub
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           
  8279                           ;psect for function ___fladd
  8280  1578                     ___fladd:
  8281  1578                     l2638:	
  8282                           ;incstack = 0
  8283                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8284                           
  8285  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8286  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8287  157A  085B               	movf	___fladd@b+3,w
  8288  157B  3980               	andlw	128
  8289  157C  00E0               	movwf	??___fladd
  8290  157D  0860               	movf	??___fladd,w
  8291  157E  00E8               	movwf	___fladd@signs
  8292  157F                     l2640:
  8293  157F  085B               	movf	___fladd@b+3,w
  8294  1580  00E0               	movwf	??___fladd
  8295  1581  0760               	addwf	??___fladd,w
  8296  1582  00E1               	movwf	??___fladd+1
  8297  1583  0861               	movf	??___fladd+1,w
  8298  1584  00EA               	movwf	___fladd@bexp
  8299  1585                     l2642:
  8300  1585  1FDA               	btfss	___fladd@b+2,7
  8301  1586  2D88               	goto	u3611
  8302  1587  2D89               	goto	u3610
  8303  1588                     u3611:
  8304  1588  2D8A               	goto	l2646
  8305  1589                     u3610:
  8306  1589                     l2644:
  8307  1589  146A               	bsf	___fladd@bexp,0
  8308  158A                     l2646:
  8309  158A  086A               	movf	___fladd@bexp,w
  8310  158B  1903               	btfsc	3,2
  8311  158C  2D8E               	goto	u3621
  8312  158D  2D8F               	goto	u3620
  8313  158E                     u3621:
  8314  158E  2D9F               	goto	l2656
  8315  158F                     u3620:
  8316  158F                     l2648:
  8317  158F  0A6A               	incf	___fladd@bexp,w
  8318  1590  1D03               	btfss	3,2
  8319  1591  2D93               	goto	u3631
  8320  1592  2D94               	goto	u3630
  8321  1593                     u3631:
  8322  1593  2D9C               	goto	l2652
  8323  1594                     u3630:
  8324  1594                     l2650:
  8325  1594  3000               	movlw	0
  8326  1595  00DB               	movwf	___fladd@b+3
  8327  1596  3000               	movlw	0
  8328  1597  00DA               	movwf	___fladd@b+2
  8329  1598  3000               	movlw	0
  8330  1599  00D9               	movwf	___fladd@b+1
  8331  159A  3000               	movlw	0
  8332  159B  00D8               	movwf	___fladd@b
  8333  159C                     l2652:
  8334  159C  17DA               	bsf	___fladd@b+2,7
  8335  159D                     l2654:
  8336  159D  01DB               	clrf	___fladd@b+3
  8337  159E  2DA7               	goto	l2658
  8338  159F                     l2656:
  8339  159F  3000               	movlw	0
  8340  15A0  00DB               	movwf	___fladd@b+3
  8341  15A1  3000               	movlw	0
  8342  15A2  00DA               	movwf	___fladd@b+2
  8343  15A3  3000               	movlw	0
  8344  15A4  00D9               	movwf	___fladd@b+1
  8345  15A5  3000               	movlw	0
  8346  15A6  00D8               	movwf	___fladd@b
  8347  15A7                     l2658:
  8348  15A7  085F               	movf	___fladd@a+3,w
  8349  15A8  3980               	andlw	128
  8350  15A9  00E0               	movwf	??___fladd
  8351  15AA  0860               	movf	??___fladd,w
  8352  15AB  00E9               	movwf	___fladd@aexp
  8353  15AC                     l2660:
  8354  15AC  0869               	movf	___fladd@aexp,w
  8355  15AD  0668               	xorwf	___fladd@signs,w
  8356  15AE  1903               	skipnz
  8357  15AF  2DB1               	goto	u3641
  8358  15B0  2DB2               	goto	u3640
  8359  15B1                     u3641:
  8360  15B1  2DB3               	goto	l2664
  8361  15B2                     u3640:
  8362  15B2                     l2662:
  8363  15B2  1768               	bsf	___fladd@signs,6
  8364  15B3                     l2664:
  8365  15B3  085F               	movf	___fladd@a+3,w
  8366  15B4  00E0               	movwf	??___fladd
  8367  15B5  0760               	addwf	??___fladd,w
  8368  15B6  00E1               	movwf	??___fladd+1
  8369  15B7  0861               	movf	??___fladd+1,w
  8370  15B8  00E9               	movwf	___fladd@aexp
  8371  15B9                     l2666:
  8372  15B9  1FDE               	btfss	___fladd@a+2,7
  8373  15BA  2DBC               	goto	u3651
  8374  15BB  2DBD               	goto	u3650
  8375  15BC                     u3651:
  8376  15BC  2DBE               	goto	l2670
  8377  15BD                     u3650:
  8378  15BD                     l2668:
  8379  15BD  1469               	bsf	___fladd@aexp,0
  8380  15BE                     l2670:
  8381  15BE  0869               	movf	___fladd@aexp,w
  8382  15BF  1903               	btfsc	3,2
  8383  15C0  2DC2               	goto	u3661
  8384  15C1  2DC3               	goto	u3660
  8385  15C2                     u3661:
  8386  15C2  2DD3               	goto	l2680
  8387  15C3                     u3660:
  8388  15C3                     l2672:
  8389  15C3  0A69               	incf	___fladd@aexp,w
  8390  15C4  1D03               	btfss	3,2
  8391  15C5  2DC7               	goto	u3671
  8392  15C6  2DC8               	goto	u3670
  8393  15C7                     u3671:
  8394  15C7  2DD0               	goto	l2676
  8395  15C8                     u3670:
  8396  15C8                     l2674:
  8397  15C8  3000               	movlw	0
  8398  15C9  00DF               	movwf	___fladd@a+3
  8399  15CA  3000               	movlw	0
  8400  15CB  00DE               	movwf	___fladd@a+2
  8401  15CC  3000               	movlw	0
  8402  15CD  00DD               	movwf	___fladd@a+1
  8403  15CE  3000               	movlw	0
  8404  15CF  00DC               	movwf	___fladd@a
  8405  15D0                     l2676:
  8406  15D0  17DE               	bsf	___fladd@a+2,7
  8407  15D1                     l2678:
  8408  15D1  01DF               	clrf	___fladd@a+3
  8409  15D2  2DDB               	goto	l708
  8410  15D3                     l2680:
  8411  15D3  3000               	movlw	0
  8412  15D4  00DF               	movwf	___fladd@a+3
  8413  15D5  3000               	movlw	0
  8414  15D6  00DE               	movwf	___fladd@a+2
  8415  15D7  3000               	movlw	0
  8416  15D8  00DD               	movwf	___fladd@a+1
  8417  15D9  3000               	movlw	0
  8418  15DA  00DC               	movwf	___fladd@a
  8419  15DB                     l708:
  8420  15DB  086A               	movf	___fladd@bexp,w
  8421  15DC  0269               	subwf	___fladd@aexp,w
  8422  15DD  1803               	skipnc
  8423  15DE  2DE0               	goto	u3681
  8424  15DF  2DE1               	goto	u3680
  8425  15E0                     u3681:
  8426  15E0  2E25               	goto	l2716
  8427  15E1                     u3680:
  8428  15E1                     l2682:
  8429  15E1  1F68               	btfss	___fladd@signs,6
  8430  15E2  2DE4               	goto	u3691
  8431  15E3  2DE5               	goto	u3690
  8432  15E4                     u3691:
  8433  15E4  2DE9               	goto	l2686
  8434  15E5                     u3690:
  8435  15E5                     l2684:
  8436  15E5  3080               	movlw	128
  8437  15E6  00E0               	movwf	??___fladd
  8438  15E7  0860               	movf	??___fladd,w
  8439  15E8  06E8               	xorwf	___fladd@signs,f
  8440  15E9                     l2686:
  8441  15E9  086A               	movf	___fladd@bexp,w
  8442  15EA  00E0               	movwf	??___fladd
  8443  15EB  0860               	movf	??___fladd,w
  8444  15EC  00EB               	movwf	___fladd@grs
  8445  15ED                     l2688:
  8446  15ED  0869               	movf	___fladd@aexp,w
  8447  15EE  00E0               	movwf	??___fladd
  8448  15EF  0860               	movf	??___fladd,w
  8449  15F0  00EA               	movwf	___fladd@bexp
  8450  15F1                     l2690:
  8451  15F1  086B               	movf	___fladd@grs,w
  8452  15F2  00E0               	movwf	??___fladd
  8453  15F3  0860               	movf	??___fladd,w
  8454  15F4  00E9               	movwf	___fladd@aexp
  8455  15F5                     l2692:
  8456  15F5  0858               	movf	___fladd@b,w
  8457  15F6  00E0               	movwf	??___fladd
  8458  15F7  0860               	movf	??___fladd,w
  8459  15F8  00EB               	movwf	___fladd@grs
  8460  15F9                     l2694:
  8461  15F9  085C               	movf	___fladd@a,w
  8462  15FA  00E0               	movwf	??___fladd
  8463  15FB  0860               	movf	??___fladd,w
  8464  15FC  00D8               	movwf	___fladd@b
  8465  15FD                     l2696:
  8466  15FD  086B               	movf	___fladd@grs,w
  8467  15FE  00E0               	movwf	??___fladd
  8468  15FF  0860               	movf	??___fladd,w
  8469  1600  00DC               	movwf	___fladd@a
  8470  1601                     l2698:
  8471  1601  0859               	movf	___fladd@b+1,w
  8472  1602  00E0               	movwf	??___fladd
  8473  1603  0860               	movf	??___fladd,w
  8474  1604  00EB               	movwf	___fladd@grs
  8475  1605                     l2700:
  8476  1605  085D               	movf	___fladd@a+1,w
  8477  1606  00E0               	movwf	??___fladd
  8478  1607  0860               	movf	??___fladd,w
  8479  1608  00D9               	movwf	___fladd@b+1
  8480  1609                     l2702:
  8481  1609  086B               	movf	___fladd@grs,w
  8482  160A  00E0               	movwf	??___fladd
  8483  160B  0860               	movf	??___fladd,w
  8484  160C  00DD               	movwf	___fladd@a+1
  8485  160D                     l2704:
  8486  160D  085A               	movf	___fladd@b+2,w
  8487  160E  00E0               	movwf	??___fladd
  8488  160F  0860               	movf	??___fladd,w
  8489  1610  00EB               	movwf	___fladd@grs
  8490  1611                     l2706:
  8491  1611  085E               	movf	___fladd@a+2,w
  8492  1612  00E0               	movwf	??___fladd
  8493  1613  0860               	movf	??___fladd,w
  8494  1614  00DA               	movwf	___fladd@b+2
  8495  1615                     l2708:
  8496  1615  086B               	movf	___fladd@grs,w
  8497  1616  00E0               	movwf	??___fladd
  8498  1617  0860               	movf	??___fladd,w
  8499  1618  00DE               	movwf	___fladd@a+2
  8500  1619                     l2710:
  8501  1619  085B               	movf	___fladd@b+3,w
  8502  161A  00E0               	movwf	??___fladd
  8503  161B  0860               	movf	??___fladd,w
  8504  161C  00EB               	movwf	___fladd@grs
  8505  161D                     l2712:
  8506  161D  085F               	movf	___fladd@a+3,w
  8507  161E  00E0               	movwf	??___fladd
  8508  161F  0860               	movf	??___fladd,w
  8509  1620  00DB               	movwf	___fladd@b+3
  8510  1621                     l2714:
  8511  1621  086B               	movf	___fladd@grs,w
  8512  1622  00E0               	movwf	??___fladd
  8513  1623  0860               	movf	??___fladd,w
  8514  1624  00DF               	movwf	___fladd@a+3
  8515  1625                     l2716:
  8516  1625  01EB               	clrf	___fladd@grs
  8517  1626                     l2718:
  8518  1626  0869               	movf	___fladd@aexp,w
  8519  1627  00E0               	movwf	??___fladd
  8520  1628  01E1               	clrf	??___fladd+1
  8521  1629  0861               	movf	??___fladd+1,w
  8522  162A  00E3               	movwf	??___fladd+3
  8523  162B  086A               	movf	___fladd@bexp,w
  8524  162C  0260               	subwf	??___fladd,w
  8525  162D  00E2               	movwf	??___fladd+2
  8526  162E  1C03               	skipc
  8527  162F  03E3               	decf	??___fladd+3,f
  8528  1630  0863               	movf	??___fladd+3,w
  8529  1631  3A80               	xorlw	128
  8530  1632  00FF               	movwf	btemp+1
  8531  1633  3080               	movlw	128
  8532  1634  027F               	subwf	btemp+1,w
  8533  1635  1D03               	skipz
  8534  1636  2E39               	goto	u3705
  8535  1637  301A               	movlw	26
  8536  1638  0262               	subwf	??___fladd+2,w
  8537  1639                     u3705:
  8538  1639  1C03               	skipc
  8539  163A  2E3C               	goto	u3701
  8540  163B  2E3D               	goto	u3700
  8541  163C                     u3701:
  8542  163C  2E7A               	goto	l2734
  8543  163D                     u3700:
  8544  163D                     l2720:
  8545  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8546  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8547  163F  085B               	movf	___fladd@b+3,w
  8548  1640  045A               	iorwf	___fladd@b+2,w
  8549  1641  0459               	iorwf	___fladd@b+1,w
  8550  1642  0458               	iorwf	___fladd@b,w
  8551  1643  1D03               	skipz
  8552  1644  2E46               	goto	u3711
  8553  1645  2E48               	goto	u3710
  8554  1646                     u3711:
  8555  1646  3001               	movlw	1
  8556  1647  2E49               	goto	u3720
  8557  1648                     u3710:
  8558  1648  3000               	movlw	0
  8559  1649                     u3720:
  8560  1649  00E0               	movwf	??___fladd
  8561  164A  0860               	movf	??___fladd,w
  8562  164B  00EB               	movwf	___fladd@grs
  8563  164C  3000               	movlw	0
  8564  164D  00DB               	movwf	___fladd@b+3
  8565  164E  3000               	movlw	0
  8566  164F  00DA               	movwf	___fladd@b+2
  8567  1650  3000               	movlw	0
  8568  1651  00D9               	movwf	___fladd@b+1
  8569  1652  3000               	movlw	0
  8570  1653  00D8               	movwf	___fladd@b
  8571  1654  0869               	movf	___fladd@aexp,w
  8572  1655  00E0               	movwf	??___fladd
  8573  1656  0860               	movf	??___fladd,w
  8574  1657  00EA               	movwf	___fladd@bexp
  8575  1658  2E82               	goto	l712
  8576  1659                     l714:
  8577  1659  1C6B               	btfss	___fladd@grs,0
  8578  165A  2E5C               	goto	u3731
  8579  165B  2E5D               	goto	u3730
  8580  165C                     u3731:
  8581  165C  2E66               	goto	l2724
  8582  165D                     u3730:
  8583  165D                     l2722:
  8584  165D  086B               	movf	___fladd@grs,w
  8585  165E  00E0               	movwf	??___fladd
  8586  165F  1003               	clrc
  8587  1660  0C60               	rrf	??___fladd,w
  8588  1661  3801               	iorlw	1
  8589  1662  00E1               	movwf	??___fladd+1
  8590  1663  0861               	movf	??___fladd+1,w
  8591  1664  00EB               	movwf	___fladd@grs
  8592  1665  2E68               	goto	l2726
  8593  1666                     l2724:
  8594  1666  1003               	clrc
  8595  1667  0CEB               	rrf	___fladd@grs,f
  8596  1668                     l2726:
  8597  1668  1C58               	btfss	___fladd@b,0
  8598  1669  2E6B               	goto	u3741
  8599  166A  2E6C               	goto	u3740
  8600  166B                     u3741:
  8601  166B  2E6D               	goto	l2730
  8602  166C                     u3740:
  8603  166C                     l2728:
  8604  166C  17EB               	bsf	___fladd@grs,7
  8605  166D                     l2730:
  8606  166D  3001               	movlw	1
  8607  166E  00E0               	movwf	??___fladd
  8608  166F                     u3755:
  8609  166F  0D5B               	rlf	___fladd@b+3,w
  8610  1670  0CDB               	rrf	___fladd@b+3,f
  8611  1671  0CDA               	rrf	___fladd@b+2,f
  8612  1672  0CD9               	rrf	___fladd@b+1,f
  8613  1673  0CD8               	rrf	___fladd@b,f
  8614  1674  0BE0               	decfsz	??___fladd& (0+127),f
  8615  1675  2E6F               	goto	u3755
  8616  1676                     l2732:
  8617  1676  3001               	movlw	1
  8618  1677  00E0               	movwf	??___fladd
  8619  1678  0860               	movf	??___fladd,w
  8620  1679  07EA               	addwf	___fladd@bexp,f
  8621  167A                     l2734:
  8622  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8623  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8624  167C  0869               	movf	___fladd@aexp,w
  8625  167D  026A               	subwf	___fladd@bexp,w
  8626  167E  1C03               	skipc
  8627  167F  2E81               	goto	u3761
  8628  1680  2E82               	goto	u3760
  8629  1681                     u3761:
  8630  1681  2E59               	goto	l714
  8631  1682                     u3760:
  8632  1682                     l712:
  8633  1682  1B68               	btfsc	___fladd@signs,6
  8634  1683  2E85               	goto	u3771
  8635  1684  2E86               	goto	u3770
  8636  1685                     u3771:
  8637  1685  2ED1               	goto	l2760
  8638  1686                     u3770:
  8639  1686                     l2736:
  8640  1686  086A               	movf	___fladd@bexp,w
  8641  1687  1D03               	btfss	3,2
  8642  1688  2E8A               	goto	u3781
  8643  1689  2E8B               	goto	u3780
  8644  168A                     u3781:
  8645  168A  2E94               	goto	l2742
  8646  168B                     u3780:
  8647  168B                     l2738:
  8648  168B  3000               	movlw	0
  8649  168C  00DB               	movwf	?___fladd+3
  8650  168D  3000               	movlw	0
  8651  168E  00DA               	movwf	?___fladd+2
  8652  168F  3000               	movlw	0
  8653  1690  00D9               	movwf	?___fladd+1
  8654  1691  3000               	movlw	0
  8655  1692  00D8               	movwf	?___fladd
  8656  1693  2FFF               	goto	l721
  8657  1694                     l2742:
  8658  1694  085C               	movf	___fladd@a,w
  8659  1695  07D8               	addwf	___fladd@b,f
  8660  1696  085D               	movf	___fladd@a+1,w
  8661  1697  1103               	clrz
  8662  1698  1803               	skipnc
  8663  1699  3E01               	addlw	1
  8664  169A  1903               	skipnz
  8665  169B  2E9D               	goto	u3791
  8666  169C  07D9               	addwf	___fladd@b+1,f
  8667  169D                     u3791:
  8668  169D  085E               	movf	___fladd@a+2,w
  8669  169E  1103               	clrz
  8670  169F  1803               	skipnc
  8671  16A0  3E01               	addlw	1
  8672  16A1  1903               	skipnz
  8673  16A2  2EA4               	goto	u3792
  8674  16A3  07DA               	addwf	___fladd@b+2,f
  8675  16A4                     u3792:
  8676  16A4  085F               	movf	___fladd@a+3,w
  8677  16A5  1103               	clrz
  8678  16A6  1803               	skipnc
  8679  16A7  3E01               	addlw	1
  8680  16A8  1903               	skipnz
  8681  16A9  2EAB               	goto	u3793
  8682  16AA  07DB               	addwf	___fladd@b+3,f
  8683  16AB                     u3793:
  8684  16AB                     l2744:
  8685  16AB  1C5B               	btfss	___fladd@b+3,0
  8686  16AC  2EAE               	goto	u3801
  8687  16AD  2EAF               	goto	u3800
  8688  16AE                     u3801:
  8689  16AE  2F85               	goto	l2794
  8690  16AF                     u3800:
  8691  16AF                     l2746:
  8692  16AF  1C6B               	btfss	___fladd@grs,0
  8693  16B0  2EB2               	goto	u3811
  8694  16B1  2EB3               	goto	u3810
  8695  16B2                     u3811:
  8696  16B2  2EBC               	goto	l2750
  8697  16B3                     u3810:
  8698  16B3                     l2748:
  8699  16B3  086B               	movf	___fladd@grs,w
  8700  16B4  00E0               	movwf	??___fladd
  8701  16B5  1003               	clrc
  8702  16B6  0C60               	rrf	??___fladd,w
  8703  16B7  3801               	iorlw	1
  8704  16B8  00E1               	movwf	??___fladd+1
  8705  16B9  0861               	movf	??___fladd+1,w
  8706  16BA  00EB               	movwf	___fladd@grs
  8707  16BB  2EBE               	goto	l2752
  8708  16BC                     l2750:
  8709  16BC  1003               	clrc
  8710  16BD  0CEB               	rrf	___fladd@grs,f
  8711  16BE                     l2752:
  8712  16BE  1C58               	btfss	___fladd@b,0
  8713  16BF  2EC1               	goto	u3821
  8714  16C0  2EC2               	goto	u3820
  8715  16C1                     u3821:
  8716  16C1  2EC3               	goto	l2756
  8717  16C2                     u3820:
  8718  16C2                     l2754:
  8719  16C2  17EB               	bsf	___fladd@grs,7
  8720  16C3                     l2756:
  8721  16C3  3001               	movlw	1
  8722  16C4  00E0               	movwf	??___fladd
  8723  16C5                     u3835:
  8724  16C5  0D5B               	rlf	___fladd@b+3,w
  8725  16C6  0CDB               	rrf	___fladd@b+3,f
  8726  16C7  0CDA               	rrf	___fladd@b+2,f
  8727  16C8  0CD9               	rrf	___fladd@b+1,f
  8728  16C9  0CD8               	rrf	___fladd@b,f
  8729  16CA  0BE0               	decfsz	??___fladd& (0+127),f
  8730  16CB  2EC5               	goto	u3835
  8731  16CC                     l2758:
  8732  16CC  3001               	movlw	1
  8733  16CD  00E0               	movwf	??___fladd
  8734  16CE  0860               	movf	??___fladd,w
  8735  16CF  07EA               	addwf	___fladd@bexp,f
  8736  16D0  2F85               	goto	l2794
  8737  16D1                     l2760:
  8738  16D1  085B               	movf	___fladd@b+3,w
  8739  16D2  3A80               	xorlw	128
  8740  16D3  00FF               	movwf	btemp+1
  8741  16D4  085F               	movf	___fladd@a+3,w
  8742  16D5  3A80               	xorlw	128
  8743  16D6  027F               	subwf	btemp+1,w
  8744  16D7  1D03               	skipz
  8745  16D8  2EE3               	goto	u3843
  8746  16D9  085E               	movf	___fladd@a+2,w
  8747  16DA  025A               	subwf	___fladd@b+2,w
  8748  16DB  1D03               	skipz
  8749  16DC  2EE3               	goto	u3843
  8750  16DD  085D               	movf	___fladd@a+1,w
  8751  16DE  0259               	subwf	___fladd@b+1,w
  8752  16DF  1D03               	skipz
  8753  16E0  2EE3               	goto	u3843
  8754  16E1  085C               	movf	___fladd@a,w
  8755  16E2  0258               	subwf	___fladd@b,w
  8756  16E3                     u3843:
  8757  16E3  1803               	skipnc
  8758  16E4  2EE6               	goto	u3841
  8759  16E5  2EE7               	goto	u3840
  8760  16E6                     u3841:
  8761  16E6  2F3F               	goto	l2770
  8762  16E7                     u3840:
  8763  16E7                     l2762:
  8764  16E7  30FF               	movlw	255
  8765  16E8  00E0               	movwf	??___fladd
  8766  16E9  30FF               	movlw	255
  8767  16EA  00E1               	movwf	??___fladd+1
  8768  16EB  30FF               	movlw	255
  8769  16EC  00E2               	movwf	??___fladd+2
  8770  16ED  30FF               	movlw	255
  8771  16EE  00E3               	movwf	??___fladd+3
  8772  16EF  085C               	movf	___fladd@a,w
  8773  16F0  00E4               	movwf	??___fladd+4
  8774  16F1  085D               	movf	___fladd@a+1,w
  8775  16F2  00E5               	movwf	??___fladd+5
  8776  16F3  085E               	movf	___fladd@a+2,w
  8777  16F4  00E6               	movwf	??___fladd+6
  8778  16F5  085F               	movf	___fladd@a+3,w
  8779  16F6  00E7               	movwf	??___fladd+7
  8780  16F7  0858               	movf	___fladd@b,w
  8781  16F8  02E4               	subwf	??___fladd+4,f
  8782  16F9  0859               	movf	___fladd@b+1,w
  8783  16FA  1C03               	skipc
  8784  16FB  0F59               	incfsz	___fladd@b+1,w
  8785  16FC  2EFE               	goto	u3851
  8786  16FD  2EFF               	goto	u3852
  8787  16FE                     u3851:
  8788  16FE  02E5               	subwf	??___fladd+5,f
  8789  16FF                     u3852:
  8790  16FF  085A               	movf	___fladd@b+2,w
  8791  1700  1C03               	skipc
  8792  1701  0F5A               	incfsz	___fladd@b+2,w
  8793  1702  2F04               	goto	u3853
  8794  1703  2F05               	goto	u3854
  8795  1704                     u3853:
  8796  1704  02E6               	subwf	??___fladd+6,f
  8797  1705                     u3854:
  8798  1705  085B               	movf	___fladd@b+3,w
  8799  1706  1C03               	skipc
  8800  1707  0F5B               	incfsz	___fladd@b+3,w
  8801  1708  2F0A               	goto	u3855
  8802  1709  2F0B               	goto	u3856
  8803  170A                     u3855:
  8804  170A  02E7               	subwf	??___fladd+7,f
  8805  170B                     u3856:
  8806  170B  0864               	movf	??___fladd+4,w
  8807  170C  07E0               	addwf	??___fladd,f
  8808  170D  0865               	movf	??___fladd+5,w
  8809  170E  1803               	skipnc
  8810  170F  0F65               	incfsz	??___fladd+5,w
  8811  1710  2F12               	goto	u3860
  8812  1711  2F13               	goto	u3861
  8813  1712                     u3860:
  8814  1712  07E1               	addwf	??___fladd+1,f
  8815  1713                     u3861:
  8816  1713  0866               	movf	??___fladd+6,w
  8817  1714  1803               	skipnc
  8818  1715  0F66               	incfsz	??___fladd+6,w
  8819  1716  2F18               	goto	u3862
  8820  1717  2F19               	goto	u3863
  8821  1718                     u3862:
  8822  1718  07E2               	addwf	??___fladd+2,f
  8823  1719                     u3863:
  8824  1719  0867               	movf	??___fladd+7,w
  8825  171A  1803               	skipnc
  8826  171B  0A67               	incf	??___fladd+7,w
  8827  171C  07E3               	addwf	??___fladd+3,f
  8828  171D  0863               	movf	??___fladd+3,w
  8829  171E  00DB               	movwf	___fladd@b+3
  8830  171F  0862               	movf	??___fladd+2,w
  8831  1720  00DA               	movwf	___fladd@b+2
  8832  1721  0861               	movf	??___fladd+1,w
  8833  1722  00D9               	movwf	___fladd@b+1
  8834  1723  0860               	movf	??___fladd,w
  8835  1724  00D8               	movwf	___fladd@b
  8836  1725                     l2764:
  8837  1725  3080               	movlw	128
  8838  1726  00E0               	movwf	??___fladd
  8839  1727  0860               	movf	??___fladd,w
  8840  1728  06E8               	xorwf	___fladd@signs,f
  8841  1729  09EB               	comf	___fladd@grs,f
  8842  172A  0AEB               	incf	___fladd@grs,f
  8843  172B                     l2766:
  8844  172B  086B               	movf	___fladd@grs,w
  8845  172C  1D03               	btfss	3,2
  8846  172D  2F2F               	goto	u3871
  8847  172E  2F30               	goto	u3870
  8848  172F                     u3871:
  8849  172F  2F4D               	goto	l729
  8850  1730                     u3870:
  8851  1730                     l2768:
  8852  1730  3001               	movlw	1
  8853  1731  07D8               	addwf	___fladd@b,f
  8854  1732  3000               	movlw	0
  8855  1733  1803               	skipnc
  8856  1734  3001               	movlw	1
  8857  1735  07D9               	addwf	___fladd@b+1,f
  8858  1736  3000               	movlw	0
  8859  1737  1803               	skipnc
  8860  1738  3001               	movlw	1
  8861  1739  07DA               	addwf	___fladd@b+2,f
  8862  173A  3000               	movlw	0
  8863  173B  1803               	skipnc
  8864  173C  3001               	movlw	1
  8865  173D  07DB               	addwf	___fladd@b+3,f
  8866  173E  2F4D               	goto	l729
  8867  173F                     l2770:
  8868  173F  085C               	movf	___fladd@a,w
  8869  1740  02D8               	subwf	___fladd@b,f
  8870  1741  085D               	movf	___fladd@a+1,w
  8871  1742  1C03               	skipc
  8872  1743  0F5D               	incfsz	___fladd@a+1,w
  8873  1744  02D9               	subwf	___fladd@b+1,f
  8874  1745  085E               	movf	___fladd@a+2,w
  8875  1746  1C03               	skipc
  8876  1747  0F5E               	incfsz	___fladd@a+2,w
  8877  1748  02DA               	subwf	___fladd@b+2,f
  8878  1749  085F               	movf	___fladd@a+3,w
  8879  174A  1C03               	skipc
  8880  174B  0F5F               	incfsz	___fladd@a+3,w
  8881  174C  02DB               	subwf	___fladd@b+3,f
  8882  174D                     l729:
  8883  174D  085B               	movf	___fladd@b+3,w
  8884  174E  045A               	iorwf	___fladd@b+2,w
  8885  174F  0459               	iorwf	___fladd@b+1,w
  8886  1750  0458               	iorwf	___fladd@b,w
  8887  1751  1D03               	skipz
  8888  1752  2F54               	goto	u3881
  8889  1753  2F55               	goto	u3880
  8890  1754                     u3881:
  8891  1754  2F81               	goto	l2792
  8892  1755                     u3880:
  8893  1755                     l2772:
  8894  1755  086B               	movf	___fladd@grs,w
  8895  1756  1D03               	btfss	3,2
  8896  1757  2F59               	goto	u3891
  8897  1758  2F5A               	goto	u3890
  8898  1759                     u3891:
  8899  1759  2F81               	goto	l2792
  8900  175A                     u3890:
  8901  175A                     l2774:
  8902  175A  3000               	movlw	0
  8903  175B  00DB               	movwf	?___fladd+3
  8904  175C  3000               	movlw	0
  8905  175D  00DA               	movwf	?___fladd+2
  8906  175E  3000               	movlw	0
  8907  175F  00D9               	movwf	?___fladd+1
  8908  1760  3000               	movlw	0
  8909  1761  00D8               	movwf	?___fladd
  8910  1762  2FFF               	goto	l721
  8911  1763                     l2778:
  8912  1763  3001               	movlw	1
  8913  1764  00E0               	movwf	??___fladd
  8914  1765                     u3905:
  8915  1765  1003               	clrc
  8916  1766  0DD8               	rlf	___fladd@b,f
  8917  1767  0DD9               	rlf	___fladd@b+1,f
  8918  1768  0DDA               	rlf	___fladd@b+2,f
  8919  1769  0DDB               	rlf	___fladd@b+3,f
  8920  176A  0BE0               	decfsz	??___fladd,f
  8921  176B  2F65               	goto	u3905
  8922  176C                     l2780:
  8923  176C  1FEB               	btfss	___fladd@grs,7
  8924  176D  2F6F               	goto	u3911
  8925  176E  2F70               	goto	u3910
  8926  176F                     u3911:
  8927  176F  2F71               	goto	l733
  8928  1770                     u3910:
  8929  1770                     l2782:
  8930  1770  1458               	bsf	___fladd@b,0
  8931  1771                     l733:
  8932  1771  1C6B               	btfss	___fladd@grs,0
  8933  1772  2F74               	goto	u3921
  8934  1773  2F75               	goto	u3920
  8935  1774                     u3921:
  8936  1774  2F78               	goto	l2786
  8937  1775                     u3920:
  8938  1775                     l2784:
  8939  1775  1403               	setc
  8940  1776  0DEB               	rlf	___fladd@grs,f
  8941  1777  2F7A               	goto	l2788
  8942  1778                     l2786:
  8943  1778  1003               	clrc
  8944  1779  0DEB               	rlf	___fladd@grs,f
  8945  177A                     l2788:
  8946  177A  086A               	movf	___fladd@bexp,w
  8947  177B  1903               	btfsc	3,2
  8948  177C  2F7E               	goto	u3931
  8949  177D  2F7F               	goto	u3930
  8950  177E                     u3931:
  8951  177E  2F81               	goto	l2792
  8952  177F                     u3930:
  8953  177F                     l2790:
  8954  177F  3001               	movlw	1
  8955  1780  02EA               	subwf	___fladd@bexp,f
  8956  1781                     l2792:
  8957  1781  1FDA               	btfss	___fladd@b+2,7
  8958  1782  2F84               	goto	u3941
  8959  1783  2F85               	goto	u3940
  8960  1784                     u3941:
  8961  1784  2F63               	goto	l2778
  8962  1785                     u3940:
  8963  1785                     l2794:
  8964  1785  01E9               	clrf	___fladd@aexp
  8965  1786                     l2796:
  8966  1786  1FEB               	btfss	___fladd@grs,7
  8967  1787  2F89               	goto	u3951
  8968  1788  2F8A               	goto	u3950
  8969  1789                     u3951:
  8970  1789  2F98               	goto	l2804
  8971  178A                     u3950:
  8972  178A                     l2798:
  8973  178A  086B               	movf	___fladd@grs,w
  8974  178B  397F               	andlw	127
  8975  178C  1903               	btfsc	3,2
  8976  178D  2F8F               	goto	u3961
  8977  178E  2F90               	goto	u3960
  8978  178F                     u3961:
  8979  178F  2F93               	goto	l739
  8980  1790                     u3960:
  8981  1790                     l2800:
  8982  1790  01E9               	clrf	___fladd@aexp
  8983  1791  0AE9               	incf	___fladd@aexp,f
  8984  1792  2F98               	goto	l2804
  8985  1793                     l739:
  8986  1793  1C58               	btfss	___fladd@b,0
  8987  1794  2F96               	goto	u3971
  8988  1795  2F97               	goto	u3970
  8989  1796                     u3971:
  8990  1796  2F98               	goto	l2804
  8991  1797                     u3970:
  8992  1797  2F90               	goto	l2800
  8993  1798                     l2804:
  8994  1798  0869               	movf	___fladd@aexp,w
  8995  1799  1903               	btfsc	3,2
  8996  179A  2F9C               	goto	u3981
  8997  179B  2F9D               	goto	u3980
  8998  179C                     u3981:
  8999  179C  2FD1               	goto	l742
  9000  179D                     u3980:
  9001  179D                     l2806:
  9002  179D  3001               	movlw	1
  9003  179E  07D8               	addwf	___fladd@b,f
  9004  179F  3000               	movlw	0
  9005  17A0  1803               	skipnc
  9006  17A1  3001               	movlw	1
  9007  17A2  07D9               	addwf	___fladd@b+1,f
  9008  17A3  3000               	movlw	0
  9009  17A4  1803               	skipnc
  9010  17A5  3001               	movlw	1
  9011  17A6  07DA               	addwf	___fladd@b+2,f
  9012  17A7  3000               	movlw	0
  9013  17A8  1803               	skipnc
  9014  17A9  3001               	movlw	1
  9015  17AA  07DB               	addwf	___fladd@b+3,f
  9016  17AB                     l2808:
  9017  17AB  1C5B               	btfss	___fladd@b+3,0
  9018  17AC  2FAE               	goto	u3991
  9019  17AD  2FAF               	goto	u3990
  9020  17AE                     u3991:
  9021  17AE  2FD1               	goto	l742
  9022  17AF                     u3990:
  9023  17AF                     l2810:
  9024  17AF  0858               	movf	___fladd@b,w
  9025  17B0  00E0               	movwf	??___fladd
  9026  17B1  0859               	movf	___fladd@b+1,w
  9027  17B2  00E1               	movwf	??___fladd+1
  9028  17B3  085A               	movf	___fladd@b+2,w
  9029  17B4  00E2               	movwf	??___fladd+2
  9030  17B5  085B               	movf	___fladd@b+3,w
  9031  17B6  00E3               	movwf	??___fladd+3
  9032  17B7  3001               	movlw	1
  9033  17B8  00E4               	movwf	??___fladd+4
  9034  17B9                     u4005:
  9035  17B9  0D63               	rlf	??___fladd+3,w
  9036  17BA  0CE3               	rrf	??___fladd+3,f
  9037  17BB  0CE2               	rrf	??___fladd+2,f
  9038  17BC  0CE1               	rrf	??___fladd+1,f
  9039  17BD  0CE0               	rrf	??___fladd,f
  9040  17BE                     u4000:
  9041  17BE  0BE4               	decfsz	??___fladd+4,f
  9042  17BF  2FB9               	goto	u4005
  9043  17C0  0863               	movf	??___fladd+3,w
  9044  17C1  00DB               	movwf	___fladd@b+3
  9045  17C2  0862               	movf	??___fladd+2,w
  9046  17C3  00DA               	movwf	___fladd@b+2
  9047  17C4  0861               	movf	??___fladd+1,w
  9048  17C5  00D9               	movwf	___fladd@b+1
  9049  17C6  0860               	movf	??___fladd,w
  9050  17C7  00D8               	movwf	___fladd@b
  9051  17C8  0A6A               	incf	___fladd@bexp,w
  9052  17C9  1903               	btfsc	3,2
  9053  17CA  2FCC               	goto	u4011
  9054  17CB  2FCD               	goto	u4010
  9055  17CC                     u4011:
  9056  17CC  2FD1               	goto	l742
  9057  17CD                     u4010:
  9058  17CD                     l2812:
  9059  17CD  3001               	movlw	1
  9060  17CE  00E0               	movwf	??___fladd
  9061  17CF  0860               	movf	??___fladd,w
  9062  17D0  07EA               	addwf	___fladd@bexp,f
  9063  17D1                     l742:
  9064  17D1  0A6A               	incf	___fladd@bexp,w
  9065  17D2  1903               	btfsc	3,2
  9066  17D3  2FD5               	goto	u4021
  9067  17D4  2FD6               	goto	u4020
  9068  17D5                     u4021:
  9069  17D5  2FDB               	goto	l2816
  9070  17D6                     u4020:
  9071  17D6                     l2814:
  9072  17D6  086A               	movf	___fladd@bexp,w
  9073  17D7  1D03               	btfss	3,2
  9074  17D8  2FDA               	goto	u4031
  9075  17D9  2FDB               	goto	u4030
  9076  17DA                     u4031:
  9077  17DA  2FE9               	goto	l2822
  9078  17DB                     u4030:
  9079  17DB                     l2816:
  9080  17DB  3000               	movlw	0
  9081  17DC  00DB               	movwf	___fladd@b+3
  9082  17DD  3000               	movlw	0
  9083  17DE  00DA               	movwf	___fladd@b+2
  9084  17DF  3000               	movlw	0
  9085  17E0  00D9               	movwf	___fladd@b+1
  9086  17E1  3000               	movlw	0
  9087  17E2  00D8               	movwf	___fladd@b
  9088  17E3                     l2818:
  9089  17E3  086A               	movf	___fladd@bexp,w
  9090  17E4  1D03               	btfss	3,2
  9091  17E5  2FE7               	goto	u4041
  9092  17E6  2FE8               	goto	u4040
  9093  17E7                     u4041:
  9094  17E7  2FE9               	goto	l2822
  9095  17E8                     u4040:
  9096  17E8                     l2820:
  9097  17E8  01E8               	clrf	___fladd@signs
  9098  17E9                     l2822:
  9099  17E9  1C6A               	btfss	___fladd@bexp,0
  9100  17EA  2FEC               	goto	u4051
  9101  17EB  2FED               	goto	u4050
  9102  17EC                     u4051:
  9103  17EC  2FEF               	goto	l2826
  9104  17ED                     u4050:
  9105  17ED                     l2824:
  9106  17ED  17DA               	bsf	___fladd@b+2,7
  9107  17EE  2FF3               	goto	l750
  9108  17EF                     l2826:
  9109  17EF  307F               	movlw	127
  9110  17F0  00E0               	movwf	??___fladd
  9111  17F1  0860               	movf	??___fladd,w
  9112  17F2  05DA               	andwf	___fladd@b+2,f
  9113  17F3                     l750:
  9114  17F3  086A               	movf	___fladd@bexp,w
  9115  17F4  00E0               	movwf	??___fladd
  9116  17F5  1003               	clrc
  9117  17F6  0C60               	rrf	??___fladd,w
  9118  17F7  00E1               	movwf	??___fladd+1
  9119  17F8  0861               	movf	??___fladd+1,w
  9120  17F9  00DB               	movwf	___fladd@b+3
  9121  17FA                     l2828:
  9122  17FA  1FE8               	btfss	___fladd@signs,7
  9123  17FB  2FFD               	goto	u4061
  9124  17FC  2FFE               	goto	u4060
  9125  17FD                     u4061:
  9126  17FD  2FFF               	goto	l751
  9127  17FE                     u4060:
  9128  17FE                     l2830:
  9129  17FE  17DB               	bsf	___fladd@b+3,7
  9130  17FF                     l751:
  9131  17FF                     l721:
  9132  17FF  0008               	return
  9133  1800                     __end_of___fladd:
  9134                           
  9135                           	psect	text19
  9136  18D7                     __ptext19:	
  9137 ;; *************** function ___flneg *****************
  9138 ;; Defined at:
  9139 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  f1              4    0[COMMON] unsigned char 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;		None
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  4    0[COMMON] unsigned char 
  9146 ;; Registers used:
  9147 ;;		wreg
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9153 ;;      Params:         4       0       0       0       0
  9154 ;;      Locals:         0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0
  9156 ;;      Totals:         4       0       0       0       0
  9157 ;;Total ram usage:        4 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_sprintf
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           
  9167                           ;psect for function ___flneg
  9168  18D7                     ___flneg:
  9169  18D7                     l3238:	
  9170                           ;incstack = 0
  9171                           ; Regs used in ___flneg: [wreg]
  9172                           
  9173  18D7  0873               	movf	___flneg@f1+3,w
  9174  18D8  0472               	iorwf	___flneg@f1+2,w
  9175  18D9  0471               	iorwf	___flneg@f1+1,w
  9176  18DA  0470               	iorwf	___flneg@f1,w
  9177  18DB  1903               	skipnz
  9178  18DC  28DE               	goto	u5191
  9179  18DD  28DF               	goto	u5190
  9180  18DE                     u5191:
  9181  18DE  28E1               	goto	l3242
  9182  18DF                     u5190:
  9183  18DF                     l3240:
  9184  18DF  3080               	movlw	128
  9185  18E0  06F3               	xorwf	___flneg@f1+3,f
  9186  18E1                     l3242:
  9187  18E1                     l580:
  9188  18E1  0008               	return
  9189  18E2                     __end_of___flneg:
  9190                           
  9191                           	psect	text20
  9192  1D29                     __ptext20:	
  9193 ;; *************** function ___flge *****************
  9194 ;; Defined at:
  9195 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  ff1             4    0[COMMON] unsigned char 
  9198 ;;  ff2             4    4[COMMON] unsigned char 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;		None               void
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9210 ;;      Params:         8       0       0       0       0
  9211 ;;      Locals:         0       0       0       0       0
  9212 ;;      Temps:          4       0       0       0       0
  9213 ;;      Totals:        12       0       0       0       0
  9214 ;;Total ram usage:       12 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_sprintf
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           
  9224                           ;psect for function ___flge
  9225  1D29                     ___flge:
  9226  1D29                     l3218:	
  9227                           ;incstack = 0
  9228                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9229                           
  9230  1D29  3000               	movlw	0
  9231  1D2A  0570               	andwf	___flge@ff1,w
  9232  1D2B  00F8               	movwf	??___flge
  9233  1D2C  3000               	movlw	0
  9234  1D2D  0571               	andwf	___flge@ff1+1,w
  9235  1D2E  00F9               	movwf	??___flge+1
  9236  1D2F  3080               	movlw	128
  9237  1D30  0572               	andwf	___flge@ff1+2,w
  9238  1D31  00FA               	movwf	??___flge+2
  9239  1D32  307F               	movlw	127
  9240  1D33  0573               	andwf	___flge@ff1+3,w
  9241  1D34  00FB               	movwf	??___flge+3
  9242  1D35  087B               	movf	??___flge+3,w
  9243  1D36  047A               	iorwf	??___flge+2,w
  9244  1D37  0479               	iorwf	??___flge+1,w
  9245  1D38  0478               	iorwf	??___flge,w
  9246  1D39  1D03               	skipz
  9247  1D3A  2D3C               	goto	u5121
  9248  1D3B  2D3D               	goto	u5120
  9249  1D3C                     u5121:
  9250  1D3C  2D45               	goto	l572
  9251  1D3D                     u5120:
  9252  1D3D                     l3220:
  9253  1D3D  3000               	movlw	0
  9254  1D3E  00F3               	movwf	___flge@ff1+3
  9255  1D3F  3000               	movlw	0
  9256  1D40  00F2               	movwf	___flge@ff1+2
  9257  1D41  3000               	movlw	0
  9258  1D42  00F1               	movwf	___flge@ff1+1
  9259  1D43  3000               	movlw	0
  9260  1D44  00F0               	movwf	___flge@ff1
  9261  1D45                     l572:
  9262  1D45  3000               	movlw	0
  9263  1D46  0574               	andwf	___flge@ff2,w
  9264  1D47  00F8               	movwf	??___flge
  9265  1D48  3000               	movlw	0
  9266  1D49  0575               	andwf	___flge@ff2+1,w
  9267  1D4A  00F9               	movwf	??___flge+1
  9268  1D4B  3080               	movlw	128
  9269  1D4C  0576               	andwf	___flge@ff2+2,w
  9270  1D4D  00FA               	movwf	??___flge+2
  9271  1D4E  307F               	movlw	127
  9272  1D4F  0577               	andwf	___flge@ff2+3,w
  9273  1D50  00FB               	movwf	??___flge+3
  9274  1D51  087B               	movf	??___flge+3,w
  9275  1D52  047A               	iorwf	??___flge+2,w
  9276  1D53  0479               	iorwf	??___flge+1,w
  9277  1D54  0478               	iorwf	??___flge,w
  9278  1D55  1D03               	skipz
  9279  1D56  2D58               	goto	u5131
  9280  1D57  2D59               	goto	u5130
  9281  1D58                     u5131:
  9282  1D58  2D61               	goto	l3224
  9283  1D59                     u5130:
  9284  1D59                     l3222:
  9285  1D59  3000               	movlw	0
  9286  1D5A  00F7               	movwf	___flge@ff2+3
  9287  1D5B  3000               	movlw	0
  9288  1D5C  00F6               	movwf	___flge@ff2+2
  9289  1D5D  3000               	movlw	0
  9290  1D5E  00F5               	movwf	___flge@ff2+1
  9291  1D5F  3000               	movlw	0
  9292  1D60  00F4               	movwf	___flge@ff2
  9293  1D61                     l3224:
  9294  1D61  1FF3               	btfss	___flge@ff1+3,7
  9295  1D62  2D64               	goto	u5141
  9296  1D63  2D65               	goto	u5140
  9297  1D64                     u5141:
  9298  1D64  2D89               	goto	l3228
  9299  1D65                     u5140:
  9300  1D65                     l3226:
  9301  1D65  3000               	movlw	0
  9302  1D66  00F8               	movwf	??___flge
  9303  1D67  3000               	movlw	0
  9304  1D68  00F9               	movwf	??___flge+1
  9305  1D69  3000               	movlw	0
  9306  1D6A  00FA               	movwf	??___flge+2
  9307  1D6B  3080               	movlw	128
  9308  1D6C  00FB               	movwf	??___flge+3
  9309  1D6D  0870               	movf	___flge@ff1,w
  9310  1D6E  02F8               	subwf	??___flge,f
  9311  1D6F  0871               	movf	___flge@ff1+1,w
  9312  1D70  1C03               	skipc
  9313  1D71  0F71               	incfsz	___flge@ff1+1,w
  9314  1D72  2D74               	goto	u5151
  9315  1D73  2D75               	goto	u5152
  9316  1D74                     u5151:
  9317  1D74  02F9               	subwf	??___flge+1,f
  9318  1D75                     u5152:
  9319  1D75  0872               	movf	___flge@ff1+2,w
  9320  1D76  1C03               	skipc
  9321  1D77  0F72               	incfsz	___flge@ff1+2,w
  9322  1D78  2D7A               	goto	u5153
  9323  1D79  2D7B               	goto	u5154
  9324  1D7A                     u5153:
  9325  1D7A  02FA               	subwf	??___flge+2,f
  9326  1D7B                     u5154:
  9327  1D7B  0873               	movf	___flge@ff1+3,w
  9328  1D7C  1C03               	skipc
  9329  1D7D  0F73               	incfsz	___flge@ff1+3,w
  9330  1D7E  2D80               	goto	u5155
  9331  1D7F  2D81               	goto	u5156
  9332  1D80                     u5155:
  9333  1D80  02FB               	subwf	??___flge+3,f
  9334  1D81                     u5156:
  9335  1D81  087B               	movf	??___flge+3,w
  9336  1D82  00F3               	movwf	___flge@ff1+3
  9337  1D83  087A               	movf	??___flge+2,w
  9338  1D84  00F2               	movwf	___flge@ff1+2
  9339  1D85  0879               	movf	??___flge+1,w
  9340  1D86  00F1               	movwf	___flge@ff1+1
  9341  1D87  0878               	movf	??___flge,w
  9342  1D88  00F0               	movwf	___flge@ff1
  9343  1D89                     l3228:
  9344  1D89  1FF7               	btfss	___flge@ff2+3,7
  9345  1D8A  2D8C               	goto	u5161
  9346  1D8B  2D8D               	goto	u5160
  9347  1D8C                     u5161:
  9348  1D8C  2DB1               	goto	l575
  9349  1D8D                     u5160:
  9350  1D8D                     l3230:
  9351  1D8D  3000               	movlw	0
  9352  1D8E  00F8               	movwf	??___flge
  9353  1D8F  3000               	movlw	0
  9354  1D90  00F9               	movwf	??___flge+1
  9355  1D91  3000               	movlw	0
  9356  1D92  00FA               	movwf	??___flge+2
  9357  1D93  3080               	movlw	128
  9358  1D94  00FB               	movwf	??___flge+3
  9359  1D95  0874               	movf	___flge@ff2,w
  9360  1D96  02F8               	subwf	??___flge,f
  9361  1D97  0875               	movf	___flge@ff2+1,w
  9362  1D98  1C03               	skipc
  9363  1D99  0F75               	incfsz	___flge@ff2+1,w
  9364  1D9A  2D9C               	goto	u5171
  9365  1D9B  2D9D               	goto	u5172
  9366  1D9C                     u5171:
  9367  1D9C  02F9               	subwf	??___flge+1,f
  9368  1D9D                     u5172:
  9369  1D9D  0876               	movf	___flge@ff2+2,w
  9370  1D9E  1C03               	skipc
  9371  1D9F  0F76               	incfsz	___flge@ff2+2,w
  9372  1DA0  2DA2               	goto	u5173
  9373  1DA1  2DA3               	goto	u5174
  9374  1DA2                     u5173:
  9375  1DA2  02FA               	subwf	??___flge+2,f
  9376  1DA3                     u5174:
  9377  1DA3  0877               	movf	___flge@ff2+3,w
  9378  1DA4  1C03               	skipc
  9379  1DA5  0F77               	incfsz	___flge@ff2+3,w
  9380  1DA6  2DA8               	goto	u5175
  9381  1DA7  2DA9               	goto	u5176
  9382  1DA8                     u5175:
  9383  1DA8  02FB               	subwf	??___flge+3,f
  9384  1DA9                     u5176:
  9385  1DA9  087B               	movf	??___flge+3,w
  9386  1DAA  00F7               	movwf	___flge@ff2+3
  9387  1DAB  087A               	movf	??___flge+2,w
  9388  1DAC  00F6               	movwf	___flge@ff2+2
  9389  1DAD  0879               	movf	??___flge+1,w
  9390  1DAE  00F5               	movwf	___flge@ff2+1
  9391  1DAF  0878               	movf	??___flge,w
  9392  1DB0  00F4               	movwf	___flge@ff2
  9393  1DB1                     l575:
  9394  1DB1  3080               	movlw	128
  9395  1DB2  06F3               	xorwf	___flge@ff1+3,f
  9396  1DB3  3080               	movlw	128
  9397  1DB4  06F7               	xorwf	___flge@ff2+3,f
  9398  1DB5  0877               	movf	___flge@ff2+3,w
  9399  1DB6  0273               	subwf	___flge@ff1+3,w
  9400  1DB7  1D03               	skipz
  9401  1DB8  2DC3               	goto	u5185
  9402  1DB9  0876               	movf	___flge@ff2+2,w
  9403  1DBA  0272               	subwf	___flge@ff1+2,w
  9404  1DBB  1D03               	skipz
  9405  1DBC  2DC3               	goto	u5185
  9406  1DBD  0875               	movf	___flge@ff2+1,w
  9407  1DBE  0271               	subwf	___flge@ff1+1,w
  9408  1DBF  1D03               	skipz
  9409  1DC0  2DC3               	goto	u5185
  9410  1DC1  0874               	movf	___flge@ff2,w
  9411  1DC2  0270               	subwf	___flge@ff1,w
  9412  1DC3                     u5185:
  9413  1DC3  1803               	skipnc
  9414  1DC4  2DC6               	goto	u5181
  9415  1DC5  2DC7               	goto	u5180
  9416  1DC6                     u5181:
  9417  1DC6  2DC9               	goto	l3234
  9418  1DC7                     u5180:
  9419  1DC7                     l3232:
  9420  1DC7  1003               	clrc
  9421  1DC8  2DCA               	goto	l576
  9422  1DC9                     l3234:
  9423  1DC9  1403               	setc
  9424  1DCA                     l576:
  9425  1DCA  0008               	return
  9426  1DCB                     __end_of___flge:
  9427                           
  9428                           	psect	text21
  9429  1B25                     __ptext21:	
  9430 ;; *************** function ___fleq *****************
  9431 ;; Defined at:
  9432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  ff1             4    0[COMMON] unsigned char 
  9435 ;;  ff2             4    4[COMMON] unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;		None
  9438 ;; Return value:  Size  Location     Type
  9439 ;;		None               void
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9447 ;;      Params:         8       0       0       0       0
  9448 ;;      Locals:         0       0       0       0       0
  9449 ;;      Temps:          4       0       0       0       0
  9450 ;;      Totals:        12       0       0       0       0
  9451 ;;Total ram usage:       12 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		_sprintf
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           
  9461                           ;psect for function ___fleq
  9462  1B25                     ___fleq:
  9463  1B25                     l3206:	
  9464                           ;incstack = 0
  9465                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9466                           
  9467  1B25  3000               	movlw	0
  9468  1B26  0570               	andwf	___fleq@ff1,w
  9469  1B27  00F8               	movwf	??___fleq
  9470  1B28  3000               	movlw	0
  9471  1B29  0571               	andwf	___fleq@ff1+1,w
  9472  1B2A  00F9               	movwf	??___fleq+1
  9473  1B2B  3080               	movlw	128
  9474  1B2C  0572               	andwf	___fleq@ff1+2,w
  9475  1B2D  00FA               	movwf	??___fleq+2
  9476  1B2E  307F               	movlw	127
  9477  1B2F  0573               	andwf	___fleq@ff1+3,w
  9478  1B30  00FB               	movwf	??___fleq+3
  9479  1B31  087B               	movf	??___fleq+3,w
  9480  1B32  047A               	iorwf	??___fleq+2,w
  9481  1B33  0479               	iorwf	??___fleq+1,w
  9482  1B34  0478               	iorwf	??___fleq,w
  9483  1B35  1D03               	skipz
  9484  1B36  2B38               	goto	u5091
  9485  1B37  2B39               	goto	u5090
  9486  1B38                     u5091:
  9487  1B38  2B41               	goto	l567
  9488  1B39                     u5090:
  9489  1B39                     l3208:
  9490  1B39  3000               	movlw	0
  9491  1B3A  00F3               	movwf	___fleq@ff1+3
  9492  1B3B  3000               	movlw	0
  9493  1B3C  00F2               	movwf	___fleq@ff1+2
  9494  1B3D  3000               	movlw	0
  9495  1B3E  00F1               	movwf	___fleq@ff1+1
  9496  1B3F  3000               	movlw	0
  9497  1B40  00F0               	movwf	___fleq@ff1
  9498  1B41                     l567:
  9499  1B41  3000               	movlw	0
  9500  1B42  0574               	andwf	___fleq@ff2,w
  9501  1B43  00F8               	movwf	??___fleq
  9502  1B44  3000               	movlw	0
  9503  1B45  0575               	andwf	___fleq@ff2+1,w
  9504  1B46  00F9               	movwf	??___fleq+1
  9505  1B47  3080               	movlw	128
  9506  1B48  0576               	andwf	___fleq@ff2+2,w
  9507  1B49  00FA               	movwf	??___fleq+2
  9508  1B4A  307F               	movlw	127
  9509  1B4B  0577               	andwf	___fleq@ff2+3,w
  9510  1B4C  00FB               	movwf	??___fleq+3
  9511  1B4D  087B               	movf	??___fleq+3,w
  9512  1B4E  047A               	iorwf	??___fleq+2,w
  9513  1B4F  0479               	iorwf	??___fleq+1,w
  9514  1B50  0478               	iorwf	??___fleq,w
  9515  1B51  1D03               	skipz
  9516  1B52  2B54               	goto	u5101
  9517  1B53  2B55               	goto	u5100
  9518  1B54                     u5101:
  9519  1B54  2B5D               	goto	l568
  9520  1B55                     u5100:
  9521  1B55                     l3210:
  9522  1B55  3000               	movlw	0
  9523  1B56  00F7               	movwf	___fleq@ff2+3
  9524  1B57  3000               	movlw	0
  9525  1B58  00F6               	movwf	___fleq@ff2+2
  9526  1B59  3000               	movlw	0
  9527  1B5A  00F5               	movwf	___fleq@ff2+1
  9528  1B5B  3000               	movlw	0
  9529  1B5C  00F4               	movwf	___fleq@ff2
  9530  1B5D                     l568:
  9531  1B5D  0877               	movf	___fleq@ff2+3,w
  9532  1B5E  0673               	xorwf	___fleq@ff1+3,w
  9533  1B5F  1D03               	skipz
  9534  1B60  2B6B               	goto	u5115
  9535  1B61  0876               	movf	___fleq@ff2+2,w
  9536  1B62  0672               	xorwf	___fleq@ff1+2,w
  9537  1B63  1D03               	skipz
  9538  1B64  2B6B               	goto	u5115
  9539  1B65  0875               	movf	___fleq@ff2+1,w
  9540  1B66  0671               	xorwf	___fleq@ff1+1,w
  9541  1B67  1D03               	skipz
  9542  1B68  2B6B               	goto	u5115
  9543  1B69  0874               	movf	___fleq@ff2,w
  9544  1B6A  0670               	xorwf	___fleq@ff1,w
  9545  1B6B                     u5115:
  9546  1B6B  1903               	skipnz
  9547  1B6C  2B6E               	goto	u5111
  9548  1B6D  2B6F               	goto	u5110
  9549  1B6E                     u5111:
  9550  1B6E  2B71               	goto	l3214
  9551  1B6F                     u5110:
  9552  1B6F                     l3212:
  9553  1B6F  1003               	clrc
  9554  1B70  2B72               	goto	l569
  9555  1B71                     l3214:
  9556  1B71  1403               	setc
  9557  1B72                     l569:
  9558  1B72  0008               	return
  9559  1B73                     __end_of___fleq:
  9560                           
  9561                           	psect	text22
  9562  19ED                     __ptext22:	
  9563 ;; *************** function _setup *****************
  9564 ;; Defined at:
  9565 ;;		line 111 in file "lab4master.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;		None
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9579 ;;      Params:         0       0       0       0       0
  9580 ;;      Locals:         0       0       0       0       0
  9581 ;;      Temps:          0       0       0       0       0
  9582 ;;      Totals:         0       0       0       0       0
  9583 ;;Total ram usage:        0 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:    3
  9586 ;; This function calls:
  9587 ;;		_I2C_Master_Init
  9588 ;;		_Lcd_Init
  9589 ;;		_Lcd_Set_Cursor
  9590 ;;		_Lcd_Write_String
  9591 ;; This function is called by:
  9592 ;;		_main
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           
  9597                           ;psect for function _setup
  9598  19ED                     _setup:
  9599  19ED                     l3352:	
  9600                           ;incstack = 0
  9601                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9602                           
  9603                           
  9604                           ;lab4master.c: 114:     OSCCONbits.IRCF = 7;
  9605  19ED  3070               	movlw	112
  9606  19EE  1683               	bsf	3,5	;RP0=1, select bank1
  9607  19EF  1303               	bcf	3,6	;RP1=0, select bank1
  9608  19F0  048F               	iorwf	15,f	;volatile
  9609  19F1                     l3354:
  9610                           
  9611                           ;lab4master.c: 115:     OSCCONbits.SCS = 1;
  9612  19F1  140F               	bsf	15,0	;volatile
  9613  19F2                     l3356:
  9614                           
  9615                           ;lab4master.c: 117:     ANSELH = 0;
  9616  19F2  1683               	bsf	3,5	;RP0=1, select bank3
  9617  19F3  1703               	bsf	3,6	;RP1=1, select bank3
  9618  19F4  0189               	clrf	9	;volatile
  9619  19F5                     l3358:
  9620                           
  9621                           ;lab4master.c: 118:     ANSEL = 0;
  9622  19F5  0188               	clrf	8	;volatile
  9623  19F6                     l3360:
  9624                           
  9625                           ;lab4master.c: 119:     TRISA = 0;
  9626  19F6  1683               	bsf	3,5	;RP0=1, select bank1
  9627  19F7  1303               	bcf	3,6	;RP1=0, select bank1
  9628  19F8  0185               	clrf	5	;volatile
  9629  19F9                     l3362:
  9630                           
  9631                           ;lab4master.c: 120:     TRISCbits.TRISC0 = 0;
  9632  19F9  1007               	bcf	7,0	;volatile
  9633  19FA                     l3364:
  9634                           
  9635                           ;lab4master.c: 121:     TRISCbits.TRISC1 = 0;
  9636  19FA  1087               	bcf	7,1	;volatile
  9637  19FB                     l3366:
  9638                           
  9639                           ;lab4master.c: 122:     TRISB = 0;
  9640  19FB  0186               	clrf	6	;volatile
  9641  19FC                     l3368:
  9642                           
  9643                           ;lab4master.c: 123:     TRISD = 0;
  9644  19FC  0188               	clrf	8	;volatile
  9645  19FD                     l3370:
  9646                           
  9647                           ;lab4master.c: 124:     TRISE = 0;
  9648  19FD  0189               	clrf	9	;volatile
  9649  19FE                     l3372:
  9650                           
  9651                           ;lab4master.c: 125:     PORTD = 0;
  9652  19FE  1283               	bcf	3,5	;RP0=0, select bank0
  9653  19FF  1303               	bcf	3,6	;RP1=0, select bank0
  9654  1A00  0188               	clrf	8	;volatile
  9655  1A01                     l3374:
  9656                           
  9657                           ;lab4master.c: 127:     Lcd_Init();
  9658  1A01  160A  158A  23C3  160A  158A  	fcall	_Lcd_Init
  9659  1A06                     l3376:
  9660                           
  9661                           ;lab4master.c: 128:     Lcd_Set_Cursor(1,1);
  9662  1A06  01F4               	clrf	Lcd_Set_Cursor@b
  9663  1A07  0AF4               	incf	Lcd_Set_Cursor@b,f
  9664  1A08  3001               	movlw	1
  9665  1A09  160A  158A  2117  160A  158A  	fcall	_Lcd_Set_Cursor
  9666  1A0E                     l3378:
  9667                           
  9668                           ;lab4master.c: 129:     Lcd_Write_String("ADC: CONT: TEMP:");
  9669  1A0E  30A3               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  9670  1A0F  00F3               	movwf	Lcd_Write_String@a
  9671  1A10  3080               	movlw	128
  9672  1A11  00F4               	movwf	Lcd_Write_String@a+1
  9673  1A12  160A  158A  229F  160A  158A  	fcall	_Lcd_Write_String
  9674  1A17                     l3380:
  9675                           
  9676                           ;lab4master.c: 130:     I2C_Master_Init(100000);
  9677  1A17  3000               	movlw	0
  9678  1A18  1283               	bcf	3,5	;RP0=0, select bank0
  9679  1A19  1303               	bcf	3,6	;RP1=0, select bank0
  9680  1A1A  00A3               	movwf	I2C_Master_Init@c+3
  9681  1A1B  3001               	movlw	1
  9682  1A1C  00A2               	movwf	I2C_Master_Init@c+2
  9683  1A1D  3086               	movlw	134
  9684  1A1E  00A1               	movwf	I2C_Master_Init@c+1
  9685  1A1F  30A0               	movlw	160
  9686  1A20  00A0               	movwf	I2C_Master_Init@c
  9687  1A21  160A  158A  21B5  160A  158A  	fcall	_I2C_Master_Init
  9688  1A26                     l65:
  9689  1A26  0008               	return
  9690  1A27                     __end_of_setup:
  9691                           
  9692                           	psect	text23
  9693  1A9F                     __ptext23:	
  9694 ;; *************** function _Lcd_Write_String *****************
  9695 ;; Defined at:
  9696 ;;		line 104 in file "LCD8bits.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  a               2    3[COMMON] PTR unsigned char 
  9699 ;;		 -> STR_2(17), volt(16), 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  i               2    8[COMMON] int 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      void 
  9704 ;; Registers used:
  9705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9711 ;;      Params:         2       0       0       0       0
  9712 ;;      Locals:         2       0       0       0       0
  9713 ;;      Temps:          3       0       0       0       0
  9714 ;;      Totals:         7       0       0       0       0
  9715 ;;Total ram usage:        7 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    2
  9718 ;; This function calls:
  9719 ;;		_Lcd_Write_Char
  9720 ;; This function is called by:
  9721 ;;		_main
  9722 ;;		_setup
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           
  9727                           ;psect for function _Lcd_Write_String
  9728  1A9F                     _Lcd_Write_String:
  9729  1A9F                     l2984:	
  9730                           ;incstack = 0
  9731                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9732                           
  9733                           
  9734                           ;LCD8bits.c: 105:     int i;;LCD8bits.c: 106:     for (i = 0; a[i] != '\0'; i++)
  9735  1A9F  01F8               	clrf	Lcd_Write_String@i
  9736  1AA0  01F9               	clrf	Lcd_Write_String@i+1
  9737  1AA1  2AC4               	goto	l2990
  9738  1AA2                     l2986:
  9739                           
  9740                           ;LCD8bits.c: 107:         Lcd_Write_Char(a[i]);
  9741  1AA2  0878               	movf	Lcd_Write_String@i,w
  9742  1AA3  0773               	addwf	Lcd_Write_String@a,w
  9743  1AA4  00F6               	movwf	??_Lcd_Write_String+1
  9744  1AA5  0874               	movf	Lcd_Write_String@a+1,w
  9745  1AA6  00F5               	movwf	??_Lcd_Write_String
  9746  1AA7  1803               	skipnc
  9747  1AA8  0AF5               	incf	??_Lcd_Write_String,f
  9748  1AA9  1FF8               	btfss	Lcd_Write_String@i,7
  9749  1AAA  2AAC               	goto	u4460
  9750  1AAB  03F5               	decf	??_Lcd_Write_String,f
  9751  1AAC                     u4460:
  9752  1AAC  0875               	movf	??_Lcd_Write_String,w
  9753  1AAD  00F7               	movwf	??_Lcd_Write_String+2
  9754  1AAE  0877               	movf	??_Lcd_Write_String+2,w
  9755  1AAF  1283               	bcf	3,5	;RP0=0, select bank0
  9756  1AB0  1303               	bcf	3,6	;RP1=0, select bank0
  9757  1AB1  00FF               	movwf	btemp+1
  9758  1AB2  0876               	movf	??_Lcd_Write_String+1,w
  9759  1AB3  0084               	movwf	4
  9760  1AB4  120A  158A  2000  160A  158A  	fcall	stringtab
  9761  1AB9  160A  158A  2101  160A  158A  	fcall	_Lcd_Write_Char
  9762  1ABE                     l2988:
  9763  1ABE  3001               	movlw	1
  9764  1ABF  07F8               	addwf	Lcd_Write_String@i,f
  9765  1AC0  1803               	skipnc
  9766  1AC1  0AF9               	incf	Lcd_Write_String@i+1,f
  9767  1AC2  3000               	movlw	0
  9768  1AC3  07F9               	addwf	Lcd_Write_String@i+1,f
  9769  1AC4                     l2990:
  9770  1AC4  0878               	movf	Lcd_Write_String@i,w
  9771  1AC5  0773               	addwf	Lcd_Write_String@a,w
  9772  1AC6  00F6               	movwf	??_Lcd_Write_String+1
  9773  1AC7  0874               	movf	Lcd_Write_String@a+1,w
  9774  1AC8  00F5               	movwf	??_Lcd_Write_String
  9775  1AC9  1803               	skipnc
  9776  1ACA  0AF5               	incf	??_Lcd_Write_String,f
  9777  1ACB  1FF8               	btfss	Lcd_Write_String@i,7
  9778  1ACC  2ACE               	goto	u4470
  9779  1ACD  03F5               	decf	??_Lcd_Write_String,f
  9780  1ACE                     u4470:
  9781  1ACE  0875               	movf	??_Lcd_Write_String,w
  9782  1ACF  00F7               	movwf	??_Lcd_Write_String+2
  9783  1AD0  0877               	movf	??_Lcd_Write_String+2,w
  9784  1AD1  1283               	bcf	3,5	;RP0=0, select bank0
  9785  1AD2  1303               	bcf	3,6	;RP1=0, select bank0
  9786  1AD3  00FF               	movwf	btemp+1
  9787  1AD4  0876               	movf	??_Lcd_Write_String+1,w
  9788  1AD5  0084               	movwf	4
  9789  1AD6  120A  158A  2000  160A  158A  	fcall	stringtab
  9790  1ADB  3A00               	xorlw	0
  9791  1ADC  1D03               	skipz
  9792  1ADD  2ADF               	goto	u4481
  9793  1ADE  2AE0               	goto	u4480
  9794  1ADF                     u4481:
  9795  1ADF  2AA2               	goto	l2986
  9796  1AE0                     u4480:
  9797  1AE0                     l187:
  9798  1AE0  0008               	return
  9799  1AE1                     __end_of_Lcd_Write_String:
  9800                           
  9801                           	psect	text24
  9802  1901                     __ptext24:	
  9803 ;; *************** function _Lcd_Write_Char *****************
  9804 ;; Defined at:
  9805 ;;		line 96 in file "LCD8bits.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  a               1    wreg     unsigned char 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  a               1    2[COMMON] unsigned char 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2, status,0, pclath, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9819 ;;      Params:         0       0       0       0       0
  9820 ;;      Locals:         1       0       0       0       0
  9821 ;;      Temps:          1       0       0       0       0
  9822 ;;      Totals:         2       0       0       0       0
  9823 ;;Total ram usage:        2 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    1
  9826 ;; This function calls:
  9827 ;;		_Lcd_Port
  9828 ;; This function is called by:
  9829 ;;		_Lcd_Write_String
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           
  9834                           ;psect for function _Lcd_Write_Char
  9835  1901                     _Lcd_Write_Char:
  9836                           
  9837                           ;incstack = 0
  9838                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9839                           ;Lcd_Write_Char@a stored from wreg
  9840  1901  00F2               	movwf	Lcd_Write_Char@a
  9841  1902                     l2474:
  9842                           
  9843                           ;LCD8bits.c: 97:     RC0 = 1;
  9844  1902  1283               	bcf	3,5	;RP0=0, select bank0
  9845  1903  1303               	bcf	3,6	;RP1=0, select bank0
  9846  1904  1407               	bsf	7,0	;volatile
  9847  1905                     l2476:
  9848                           
  9849                           ;LCD8bits.c: 98:     Lcd_Port(a);
  9850  1905  0872               	movf	Lcd_Write_Char@a,w
  9851  1906  160A  158A  2261  160A  158A  	fcall	_Lcd_Port
  9852  190B                     l2478:
  9853                           
  9854                           ;LCD8bits.c: 99:     RC1 = 1;
  9855  190B  1283               	bcf	3,5	;RP0=0, select bank0
  9856  190C  1303               	bcf	3,6	;RP1=0, select bank0
  9857  190D  1487               	bsf	7,1	;volatile
  9858  190E                     l2480:
  9859                           
  9860                           ;LCD8bits.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9861  190E  301A               	movlw	26
  9862  190F  00F1               	movwf	??_Lcd_Write_Char
  9863  1910                     u6257:
  9864  1910  0BF1               	decfsz	??_Lcd_Write_Char,f
  9865  1911  2910               	goto	u6257
  9866  1912  0000               	nop
  9867  1913                     l2482:
  9868                           
  9869                           ;LCD8bits.c: 101:     RC1 = 0;
  9870  1913  1283               	bcf	3,5	;RP0=0, select bank0
  9871  1914  1303               	bcf	3,6	;RP1=0, select bank0
  9872  1915  1087               	bcf	7,1	;volatile
  9873  1916                     l181:
  9874  1916  0008               	return
  9875  1917                     __end_of_Lcd_Write_Char:
  9876                           
  9877                           	psect	text25
  9878  1917                     __ptext25:	
  9879 ;; *************** function _Lcd_Set_Cursor *****************
  9880 ;; Defined at:
  9881 ;;		line 68 in file "LCD8bits.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  a               1    wreg     unsigned char 
  9884 ;;  b               1    4[COMMON] unsigned char 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  a               1    6[COMMON] unsigned char 
  9887 ;;  temp            1    7[COMMON] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      void 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0, pclath, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9897 ;;      Params:         1       0       0       0       0
  9898 ;;      Locals:         2       0       0       0       0
  9899 ;;      Temps:          1       0       0       0       0
  9900 ;;      Totals:         4       0       0       0       0
  9901 ;;Total ram usage:        4 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    2
  9904 ;; This function calls:
  9905 ;;		_Lcd_Cmd
  9906 ;; This function is called by:
  9907 ;;		_main
  9908 ;;		_setup
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           
  9913                           ;psect for function _Lcd_Set_Cursor
  9914  1917                     _Lcd_Set_Cursor:
  9915                           
  9916                           ;incstack = 0
  9917                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9918                           ;Lcd_Set_Cursor@a stored from wreg
  9919  1917  00F6               	movwf	Lcd_Set_Cursor@a
  9920  1918                     l2972:
  9921                           
  9922                           ;LCD8bits.c: 69:     unsigned char temp;;LCD8bits.c: 70:     if (a == 1) {
  9923  1918  0376               	decf	Lcd_Set_Cursor@a,w
  9924  1919  1D03               	btfss	3,2
  9925  191A  291C               	goto	u4441
  9926  191B  291D               	goto	u4440
  9927  191C                     u4441:
  9928  191C  2929               	goto	l2978
  9929  191D                     u4440:
  9930  191D                     l2974:
  9931                           
  9932                           ;LCD8bits.c: 71:         temp = 0x80 + b - 1;
  9933  191D  0874               	movf	Lcd_Set_Cursor@b,w
  9934  191E  3E7F               	addlw	127
  9935  191F  00F5               	movwf	??_Lcd_Set_Cursor
  9936  1920  0875               	movf	??_Lcd_Set_Cursor,w
  9937  1921  00F7               	movwf	Lcd_Set_Cursor@temp
  9938  1922                     l2976:
  9939                           
  9940                           ;LCD8bits.c: 72:         Lcd_Cmd(temp);
  9941  1922  0877               	movf	Lcd_Set_Cursor@temp,w
  9942  1923  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
  9943                           
  9944                           ;LCD8bits.c: 74:     } else if (a == 2) {
  9945  1928  293A               	goto	l175
  9946  1929                     l2978:
  9947  1929  3002               	movlw	2
  9948  192A  0676               	xorwf	Lcd_Set_Cursor@a,w
  9949  192B  1D03               	btfss	3,2
  9950  192C  292E               	goto	u4451
  9951  192D  292F               	goto	u4450
  9952  192E                     u4451:
  9953  192E  293A               	goto	l175
  9954  192F                     u4450:
  9955  192F                     l2980:
  9956                           
  9957                           ;LCD8bits.c: 75:         temp = 0xC0 + b - 1;
  9958  192F  0874               	movf	Lcd_Set_Cursor@b,w
  9959  1930  3EBF               	addlw	191
  9960  1931  00F5               	movwf	??_Lcd_Set_Cursor
  9961  1932  0875               	movf	??_Lcd_Set_Cursor,w
  9962  1933  00F7               	movwf	Lcd_Set_Cursor@temp
  9963  1934                     l2982:
  9964                           
  9965                           ;LCD8bits.c: 76:         Lcd_Cmd(temp);
  9966  1934  0877               	movf	Lcd_Set_Cursor@temp,w
  9967  1935  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
  9968  193A                     l175:
  9969  193A  0008               	return
  9970  193B                     __end_of_Lcd_Set_Cursor:
  9971                           
  9972                           	psect	text26
  9973  1BC3                     __ptext26:	
  9974 ;; *************** function _Lcd_Init *****************
  9975 ;; Defined at:
  9976 ;;		line 80 in file "LCD8bits.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;		None
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;		None
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  1    wreg      void 
  9983 ;; Registers used:
  9984 ;;		wreg, status,2, status,0, pclath, cstack
  9985 ;; Tracked objects:
  9986 ;;		On entry : 0/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9990 ;;      Params:         0       0       0       0       0
  9991 ;;      Locals:         0       0       0       0       0
  9992 ;;      Temps:          2       0       0       0       0
  9993 ;;      Totals:         2       0       0       0       0
  9994 ;;Total ram usage:        2 bytes
  9995 ;; Hardware stack levels used:    1
  9996 ;; Hardware stack levels required when called:    2
  9997 ;; This function calls:
  9998 ;;		_Lcd_Cmd
  9999 ;;		_Lcd_Port
 10000 ;; This function is called by:
 10001 ;;		_setup
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           
 10006                           ;psect for function _Lcd_Init
 10007  1BC3                     _Lcd_Init:
 10008  1BC3                     l2992:	
 10009                           ;incstack = 0
 10010                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10011                           
 10012                           
 10013                           ;LCD8bits.c: 81:     Lcd_Port(0);
 10014  1BC3  3000               	movlw	0
 10015  1BC4  160A  158A  2261  160A  158A  	fcall	_Lcd_Port
 10016  1BC9                     l2994:
 10017                           
 10018                           ;LCD8bits.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10019  1BC9  3034               	movlw	52
 10020  1BCA  00F5               	movwf	??_Lcd_Init+1
 10021  1BCB  30F1               	movlw	241
 10022  1BCC  00F4               	movwf	??_Lcd_Init
 10023  1BCD                     u6267:
 10024  1BCD  0BF4               	decfsz	??_Lcd_Init,f
 10025  1BCE  2BCD               	goto	u6267
 10026  1BCF  0BF5               	decfsz	??_Lcd_Init+1,f
 10027  1BD0  2BCD               	goto	u6267
 10028  1BD1  2BD2               	nop2
 10029  1BD2                     l2996:
 10030                           
 10031                           ;LCD8bits.c: 83:     Lcd_Cmd(48);
 10032  1BD2  3030               	movlw	48
 10033  1BD3  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10034                           
 10035                           ;LCD8bits.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
 10036  1BD8  300D               	movlw	13
 10037  1BD9  00F5               	movwf	??_Lcd_Init+1
 10038  1BDA  30FB               	movlw	251
 10039  1BDB  00F4               	movwf	??_Lcd_Init
 10040  1BDC                     u6277:
 10041  1BDC  0BF4               	decfsz	??_Lcd_Init,f
 10042  1BDD  2BDC               	goto	u6277
 10043  1BDE  0BF5               	decfsz	??_Lcd_Init+1,f
 10044  1BDF  2BDC               	goto	u6277
 10045  1BE0  2BE1               	nop2
 10046  1BE1                     l2998:
 10047                           
 10048                           ;LCD8bits.c: 85:     Lcd_Cmd(48);
 10049  1BE1  3030               	movlw	48
 10050  1BE2  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10051  1BE7                     l3000:
 10052                           
 10053                           ;LCD8bits.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
 10054  1BE7  301D               	movlw	29
 10055  1BE8  00F5               	movwf	??_Lcd_Init+1
 10056  1BE9  3091               	movlw	145
 10057  1BEA  00F4               	movwf	??_Lcd_Init
 10058  1BEB                     u6287:
 10059  1BEB  0BF4               	decfsz	??_Lcd_Init,f
 10060  1BEC  2BEB               	goto	u6287
 10061  1BED  0BF5               	decfsz	??_Lcd_Init+1,f
 10062  1BEE  2BEB               	goto	u6287
 10063                           
 10064                           ;LCD8bits.c: 87:     Lcd_Cmd(48);
 10065  1BEF  3030               	movlw	48
 10066  1BF0  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10067                           
 10068                           ;LCD8bits.c: 89:     Lcd_Cmd(56);
 10069  1BF5  3038               	movlw	56
 10070  1BF6  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10071                           
 10072                           ;LCD8bits.c: 90:     Lcd_Cmd(8);
 10073  1BFB  3008               	movlw	8
 10074  1BFC  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10075                           
 10076                           ;LCD8bits.c: 91:     Lcd_Cmd(1);
 10077  1C01  3001               	movlw	1
 10078  1C02  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10079                           
 10080                           ;LCD8bits.c: 92:     Lcd_Cmd(6);
 10081  1C07  3006               	movlw	6
 10082  1C08  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10083                           
 10084                           ;LCD8bits.c: 93:     Lcd_Cmd(12);
 10085  1C0D  300C               	movlw	12
 10086  1C0E  160A  118A  2002  160A  158A  	fcall	_Lcd_Cmd
 10087  1C13                     l178:
 10088  1C13  0008               	return
 10089  1C14                     __end_of_Lcd_Init:
 10090                           
 10091                           	psect	text27
 10092  1002                     __ptext27:	
 10093 ;; *************** function _Lcd_Cmd *****************
 10094 ;; Defined at:
 10095 ;;		line 55 in file "LCD8bits.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;  a               1    wreg     unsigned char 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  a               1    3[COMMON] unsigned char 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, status,2, status,0, pclath, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10109 ;;      Params:         0       0       0       0       0
 10110 ;;      Locals:         1       0       0       0       0
 10111 ;;      Temps:          2       0       0       0       0
 10112 ;;      Totals:         3       0       0       0       0
 10113 ;;Total ram usage:        3 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    1
 10116 ;; This function calls:
 10117 ;;		_Lcd_Port
 10118 ;; This function is called by:
 10119 ;;		_Lcd_Set_Cursor
 10120 ;;		_Lcd_Init
 10121 ;;		_Lcd_Clear
 10122 ;;		_Lcd_Shift_Right
 10123 ;;		_Lcd_Shift_Left
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           
 10128                           ;psect for function _Lcd_Cmd
 10129  1002                     _Lcd_Cmd:
 10130                           
 10131                           ;incstack = 0
 10132                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10133                           ;Lcd_Cmd@a stored from wreg
 10134  1002  00F3               	movwf	Lcd_Cmd@a
 10135  1003                     l2464:
 10136                           
 10137                           ;LCD8bits.c: 56:     RC0 = 0;
 10138  1003  1283               	bcf	3,5	;RP0=0, select bank0
 10139  1004  1303               	bcf	3,6	;RP1=0, select bank0
 10140  1005  1007               	bcf	7,0	;volatile
 10141  1006                     l2466:
 10142                           
 10143                           ;LCD8bits.c: 57:     Lcd_Port(a);
 10144  1006  0873               	movf	Lcd_Cmd@a,w
 10145  1007  160A  158A  2261  160A  118A  	fcall	_Lcd_Port
 10146  100C                     l2468:
 10147                           
 10148                           ;LCD8bits.c: 58:     RC1 = 1;
 10149  100C  1283               	bcf	3,5	;RP0=0, select bank0
 10150  100D  1303               	bcf	3,6	;RP1=0, select bank0
 10151  100E  1487               	bsf	7,1	;volatile
 10152  100F                     l2470:
 10153                           
 10154                           ;LCD8bits.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10155  100F  300B               	movlw	11
 10156  1010  00F2               	movwf	??_Lcd_Cmd+1
 10157  1011  3062               	movlw	98
 10158  1012  00F1               	movwf	??_Lcd_Cmd
 10159  1013                     u6297:
 10160  1013  0BF1               	decfsz	??_Lcd_Cmd,f
 10161  1014  2813               	goto	u6297
 10162  1015  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10163  1016  2813               	goto	u6297
 10164  1017  0000               	nop
 10165  1018                     l2472:
 10166                           
 10167                           ;LCD8bits.c: 60:     RC1 = 0;
 10168  1018  1283               	bcf	3,5	;RP0=0, select bank0
 10169  1019  1303               	bcf	3,6	;RP1=0, select bank0
 10170  101A  1087               	bcf	7,1	;volatile
 10171  101B                     l166:
 10172  101B  0008               	return
 10173  101C                     __end_of_Lcd_Cmd:
 10174                           
 10175                           	psect	text28
 10176  1A61                     __ptext28:	
 10177 ;; *************** function _Lcd_Port *****************
 10178 ;; Defined at:
 10179 ;;		line 13 in file "LCD8bits.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;  a               1    wreg     unsigned char 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;  a               1    0[COMMON] unsigned char 
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  1    wreg      void 
 10186 ;; Registers used:
 10187 ;;		wreg
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10193 ;;      Params:         0       0       0       0       0
 10194 ;;      Locals:         1       0       0       0       0
 10195 ;;      Temps:          0       0       0       0       0
 10196 ;;      Totals:         1       0       0       0       0
 10197 ;;Total ram usage:        1 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; This function calls:
 10200 ;;		Nothing
 10201 ;; This function is called by:
 10202 ;;		_Lcd_Cmd
 10203 ;;		_Lcd_Init
 10204 ;;		_Lcd_Write_Char
 10205 ;; This function uses a non-reentrant model
 10206 ;;
 10207                           
 10208                           
 10209                           ;psect for function _Lcd_Port
 10210  1A61                     _Lcd_Port:
 10211                           
 10212                           ;incstack = 0
 10213                           ; Regs used in _Lcd_Port: [wreg]
 10214                           ;Lcd_Port@a stored from wreg
 10215  1A61  00F0               	movwf	Lcd_Port@a
 10216  1A62                     l2432:
 10217                           
 10218                           ;LCD8bits.c: 14:     if (a & 1)
 10219  1A62  1C70               	btfss	Lcd_Port@a,0
 10220  1A63  2A65               	goto	u3111
 10221  1A64  2A66               	goto	u3110
 10222  1A65                     u3111:
 10223  1A65  2A6A               	goto	l147
 10224  1A66                     u3110:
 10225  1A66                     l2434:
 10226                           
 10227                           ;LCD8bits.c: 15:         RD0 = 1;
 10228  1A66  1283               	bcf	3,5	;RP0=0, select bank0
 10229  1A67  1303               	bcf	3,6	;RP1=0, select bank0
 10230  1A68  1408               	bsf	8,0	;volatile
 10231  1A69  2A6D               	goto	l148
 10232  1A6A                     l147:	
 10233                           ;LCD8bits.c: 16:     else
 10234                           
 10235                           
 10236                           ;LCD8bits.c: 17:         RD0 = 0;
 10237  1A6A  1283               	bcf	3,5	;RP0=0, select bank0
 10238  1A6B  1303               	bcf	3,6	;RP1=0, select bank0
 10239  1A6C  1008               	bcf	8,0	;volatile
 10240  1A6D                     l148:
 10241                           
 10242                           ;LCD8bits.c: 19:     if (a & 2)
 10243  1A6D  1CF0               	btfss	Lcd_Port@a,1
 10244  1A6E  2A70               	goto	u3121
 10245  1A6F  2A71               	goto	u3120
 10246  1A70                     u3121:
 10247  1A70  2A73               	goto	l149
 10248  1A71                     u3120:
 10249  1A71                     l2436:
 10250                           
 10251                           ;LCD8bits.c: 20:         RD1 = 1;
 10252  1A71  1488               	bsf	8,1	;volatile
 10253  1A72  2A74               	goto	l150
 10254  1A73                     l149:	
 10255                           ;LCD8bits.c: 21:     else
 10256                           
 10257                           
 10258                           ;LCD8bits.c: 22:         RD1 = 0;
 10259  1A73  1088               	bcf	8,1	;volatile
 10260  1A74                     l150:
 10261                           
 10262                           ;LCD8bits.c: 24:     if (a & 4)
 10263  1A74  1D70               	btfss	Lcd_Port@a,2
 10264  1A75  2A77               	goto	u3131
 10265  1A76  2A78               	goto	u3130
 10266  1A77                     u3131:
 10267  1A77  2A7A               	goto	l151
 10268  1A78                     u3130:
 10269  1A78                     l2438:
 10270                           
 10271                           ;LCD8bits.c: 25:         RD2 = 1;
 10272  1A78  1508               	bsf	8,2	;volatile
 10273  1A79  2A7B               	goto	l152
 10274  1A7A                     l151:	
 10275                           ;LCD8bits.c: 26:     else
 10276                           
 10277                           
 10278                           ;LCD8bits.c: 27:         RD2 = 0;
 10279  1A7A  1108               	bcf	8,2	;volatile
 10280  1A7B                     l152:
 10281                           
 10282                           ;LCD8bits.c: 29:     if (a & 8)
 10283  1A7B  1DF0               	btfss	Lcd_Port@a,3
 10284  1A7C  2A7E               	goto	u3141
 10285  1A7D  2A7F               	goto	u3140
 10286  1A7E                     u3141:
 10287  1A7E  2A81               	goto	l153
 10288  1A7F                     u3140:
 10289  1A7F                     l2440:
 10290                           
 10291                           ;LCD8bits.c: 30:         RD3 = 1;
 10292  1A7F  1588               	bsf	8,3	;volatile
 10293  1A80  2A82               	goto	l154
 10294  1A81                     l153:	
 10295                           ;LCD8bits.c: 31:     else
 10296                           
 10297                           
 10298                           ;LCD8bits.c: 32:         RD3 = 0;
 10299  1A81  1188               	bcf	8,3	;volatile
 10300  1A82                     l154:
 10301                           
 10302                           ;LCD8bits.c: 34:     if (a & 16)
 10303  1A82  1E70               	btfss	Lcd_Port@a,4
 10304  1A83  2A85               	goto	u3151
 10305  1A84  2A86               	goto	u3150
 10306  1A85                     u3151:
 10307  1A85  2A88               	goto	l155
 10308  1A86                     u3150:
 10309  1A86                     l2442:
 10310                           
 10311                           ;LCD8bits.c: 35:         RD4 = 1;
 10312  1A86  1608               	bsf	8,4	;volatile
 10313  1A87  2A89               	goto	l156
 10314  1A88                     l155:	
 10315                           ;LCD8bits.c: 36:     else
 10316                           
 10317                           
 10318                           ;LCD8bits.c: 37:         RD4 = 0;
 10319  1A88  1208               	bcf	8,4	;volatile
 10320  1A89                     l156:
 10321                           
 10322                           ;LCD8bits.c: 39:     if (a & 32)
 10323  1A89  1EF0               	btfss	Lcd_Port@a,5
 10324  1A8A  2A8C               	goto	u3161
 10325  1A8B  2A8D               	goto	u3160
 10326  1A8C                     u3161:
 10327  1A8C  2A8F               	goto	l157
 10328  1A8D                     u3160:
 10329  1A8D                     l2444:
 10330                           
 10331                           ;LCD8bits.c: 40:         RD5 = 1;
 10332  1A8D  1688               	bsf	8,5	;volatile
 10333  1A8E  2A90               	goto	l158
 10334  1A8F                     l157:	
 10335                           ;LCD8bits.c: 41:     else
 10336                           
 10337                           
 10338                           ;LCD8bits.c: 42:         RD5 = 0;
 10339  1A8F  1288               	bcf	8,5	;volatile
 10340  1A90                     l158:
 10341                           
 10342                           ;LCD8bits.c: 44:     if (a & 64)
 10343  1A90  1F70               	btfss	Lcd_Port@a,6
 10344  1A91  2A93               	goto	u3171
 10345  1A92  2A94               	goto	u3170
 10346  1A93                     u3171:
 10347  1A93  2A96               	goto	l159
 10348  1A94                     u3170:
 10349  1A94                     l2446:
 10350                           
 10351                           ;LCD8bits.c: 45:         RD6 = 1;
 10352  1A94  1708               	bsf	8,6	;volatile
 10353  1A95  2A97               	goto	l160
 10354  1A96                     l159:	
 10355                           ;LCD8bits.c: 46:     else
 10356                           
 10357                           
 10358                           ;LCD8bits.c: 47:         RD6 = 0;
 10359  1A96  1308               	bcf	8,6	;volatile
 10360  1A97                     l160:
 10361                           
 10362                           ;LCD8bits.c: 49:     if (a & 128)
 10363  1A97  1FF0               	btfss	Lcd_Port@a,7
 10364  1A98  2A9A               	goto	u3181
 10365  1A99  2A9B               	goto	u3180
 10366  1A9A                     u3181:
 10367  1A9A  2A9D               	goto	l161
 10368  1A9B                     u3180:
 10369  1A9B                     l2448:
 10370                           
 10371                           ;LCD8bits.c: 50:         RD7 = 1;
 10372  1A9B  1788               	bsf	8,7	;volatile
 10373  1A9C  2A9E               	goto	l163
 10374  1A9D                     l161:	
 10375                           ;LCD8bits.c: 51:     else
 10376                           
 10377                           
 10378                           ;LCD8bits.c: 52:         RD7 = 0;
 10379  1A9D  1388               	bcf	8,7	;volatile
 10380  1A9E                     l163:
 10381  1A9E  0008               	return
 10382  1A9F                     __end_of_Lcd_Port:
 10383                           
 10384                           	psect	text29
 10385  19B5                     __ptext29:	
 10386 ;; *************** function _I2C_Master_Init *****************
 10387 ;; Defined at:
 10388 ;;		line 16 in file "I2C.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;  c               4    0[BANK0 ] const unsigned long 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0, pclath, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10402 ;;      Params:         0       4       0       0       0
 10403 ;;      Locals:         0       0       0       0       0
 10404 ;;      Temps:          0       4       0       0       0
 10405 ;;      Totals:         0       8       0       0       0
 10406 ;;Total ram usage:        8 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:    1
 10409 ;; This function calls:
 10410 ;;		___lldiv
 10411 ;; This function is called by:
 10412 ;;		_setup
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           
 10417                           ;psect for function _I2C_Master_Init
 10418  19B5                     _I2C_Master_Init:
 10419  19B5                     l3002:	
 10420                           ;incstack = 0
 10421                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10422                           
 10423                           
 10424                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
 10425  19B5  3028               	movlw	40
 10426  19B6  1283               	bcf	3,5	;RP0=0, select bank0
 10427  19B7  1303               	bcf	3,6	;RP1=0, select bank0
 10428  19B8  0094               	movwf	20	;volatile
 10429  19B9                     l3004:
 10430                           
 10431                           ;I2C.c: 19:     SSPCON2 = 0;
 10432  19B9  1683               	bsf	3,5	;RP0=1, select bank1
 10433  19BA  1303               	bcf	3,6	;RP1=0, select bank1
 10434  19BB  0191               	clrf	17	;volatile
 10435  19BC                     l3006:
 10436                           
 10437                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
 10438  19BC  1283               	bcf	3,5	;RP0=0, select bank0
 10439  19BD  1303               	bcf	3,6	;RP1=0, select bank0
 10440  19BE  0820               	movf	I2C_Master_Init@c,w
 10441  19BF  00A4               	movwf	??_I2C_Master_Init
 10442  19C0  0821               	movf	I2C_Master_Init@c+1,w
 10443  19C1  00A5               	movwf	??_I2C_Master_Init+1
 10444  19C2  0822               	movf	I2C_Master_Init@c+2,w
 10445  19C3  00A6               	movwf	??_I2C_Master_Init+2
 10446  19C4  0823               	movf	I2C_Master_Init@c+3,w
 10447  19C5  00A7               	movwf	??_I2C_Master_Init+3
 10448  19C6  3002               	movlw	2
 10449  19C7                     u4495:
 10450  19C7  1003               	clrc
 10451  19C8  0DA4               	rlf	??_I2C_Master_Init,f
 10452  19C9  0DA5               	rlf	??_I2C_Master_Init+1,f
 10453  19CA  0DA6               	rlf	??_I2C_Master_Init+2,f
 10454  19CB  0DA7               	rlf	??_I2C_Master_Init+3,f
 10455  19CC                     u4490:
 10456  19CC  3EFF               	addlw	-1
 10457  19CD  1D03               	skipz
 10458  19CE  29C7               	goto	u4495
 10459  19CF  0827               	movf	??_I2C_Master_Init+3,w
 10460  19D0  00F3               	movwf	___lldiv@divisor+3
 10461  19D1  0826               	movf	??_I2C_Master_Init+2,w
 10462  19D2  00F2               	movwf	___lldiv@divisor+2
 10463  19D3  0825               	movf	??_I2C_Master_Init+1,w
 10464  19D4  00F1               	movwf	___lldiv@divisor+1
 10465  19D5  0824               	movf	??_I2C_Master_Init,w
 10466  19D6  00F0               	movwf	___lldiv@divisor
 10467  19D7  3000               	movlw	0
 10468  19D8  00F7               	movwf	___lldiv@dividend+3
 10469  19D9  307A               	movlw	122
 10470  19DA  00F6               	movwf	___lldiv@dividend+2
 10471  19DB  3012               	movlw	18
 10472  19DC  00F5               	movwf	___lldiv@dividend+1
 10473  19DD  3000               	movlw	0
 10474  19DE  00F4               	movwf	___lldiv@dividend
 10475  19DF  160A  158A  24C3  160A  158A  	fcall	___lldiv
 10476  19E4  0870               	movf	?___lldiv,w
 10477  19E5  3EFF               	addlw	255
 10478  19E6  1683               	bsf	3,5	;RP0=1, select bank1
 10479  19E7  1303               	bcf	3,6	;RP1=0, select bank1
 10480  19E8  0093               	movwf	19	;volatile
 10481  19E9                     l3008:
 10482                           
 10483                           ;I2C.c: 21:     SSPSTAT = 0;
 10484  19E9  0194               	clrf	20	;volatile
 10485  19EA                     l3010:
 10486                           
 10487                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
 10488  19EA  1587               	bsf	7,3	;volatile
 10489  19EB                     l3012:
 10490                           
 10491                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
 10492  19EB  1607               	bsf	7,4	;volatile
 10493  19EC                     l94:
 10494  19EC  0008               	return
 10495  19ED                     __end_of_I2C_Master_Init:
 10496                           
 10497                           	psect	text30
 10498  1CC3                     __ptext30:	
 10499 ;; *************** function ___lldiv *****************
 10500 ;; Defined at:
 10501 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  divisor         4    0[COMMON] unsigned long 
 10504 ;;  dividend        4    4[COMMON] unsigned long 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  quotient        4    9[COMMON] unsigned long 
 10507 ;;  counter         1   13[COMMON] unsigned char 
 10508 ;; Return value:  Size  Location     Type
 10509 ;;                  4    0[COMMON] unsigned long 
 10510 ;; Registers used:
 10511 ;;		wreg, status,2, status,0
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10517 ;;      Params:         8       0       0       0       0
 10518 ;;      Locals:         5       0       0       0       0
 10519 ;;      Temps:          1       0       0       0       0
 10520 ;;      Totals:        14       0       0       0       0
 10521 ;;Total ram usage:       14 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_I2C_Master_Init
 10527 ;;		_sprintf
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           
 10532                           ;psect for function ___lldiv
 10533  1CC3                     ___lldiv:
 10534  1CC3                     l2484:	
 10535                           ;incstack = 0
 10536                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10537                           
 10538  1CC3  3000               	movlw	0
 10539  1CC4  00FC               	movwf	___lldiv@quotient+3
 10540  1CC5  3000               	movlw	0
 10541  1CC6  00FB               	movwf	___lldiv@quotient+2
 10542  1CC7  3000               	movlw	0
 10543  1CC8  00FA               	movwf	___lldiv@quotient+1
 10544  1CC9  3000               	movlw	0
 10545  1CCA  00F9               	movwf	___lldiv@quotient
 10546  1CCB  0873               	movf	___lldiv@divisor+3,w
 10547  1CCC  0472               	iorwf	___lldiv@divisor+2,w
 10548  1CCD  0471               	iorwf	___lldiv@divisor+1,w
 10549  1CCE  0470               	iorwf	___lldiv@divisor,w
 10550  1CCF  1903               	skipnz
 10551  1CD0  2CD2               	goto	u3221
 10552  1CD1  2CD3               	goto	u3220
 10553  1CD2                     u3221:
 10554  1CD2  2D20               	goto	l2504
 10555  1CD3                     u3220:
 10556  1CD3                     l2486:
 10557  1CD3  01FD               	clrf	___lldiv@counter
 10558  1CD4  0AFD               	incf	___lldiv@counter,f
 10559  1CD5  2CE3               	goto	l2490
 10560  1CD6                     l2488:
 10561  1CD6  3001               	movlw	1
 10562  1CD7  00F8               	movwf	??___lldiv
 10563  1CD8                     u3235:
 10564  1CD8  1003               	clrc
 10565  1CD9  0DF0               	rlf	___lldiv@divisor,f
 10566  1CDA  0DF1               	rlf	___lldiv@divisor+1,f
 10567  1CDB  0DF2               	rlf	___lldiv@divisor+2,f
 10568  1CDC  0DF3               	rlf	___lldiv@divisor+3,f
 10569  1CDD  0BF8               	decfsz	??___lldiv,f
 10570  1CDE  2CD8               	goto	u3235
 10571  1CDF  3001               	movlw	1
 10572  1CE0  00F8               	movwf	??___lldiv
 10573  1CE1  0878               	movf	??___lldiv,w
 10574  1CE2  07FD               	addwf	___lldiv@counter,f
 10575  1CE3                     l2490:
 10576  1CE3  1FF3               	btfss	___lldiv@divisor+3,7
 10577  1CE4  2CE6               	goto	u3241
 10578  1CE5  2CE7               	goto	u3240
 10579  1CE6                     u3241:
 10580  1CE6  2CD6               	goto	l2488
 10581  1CE7                     u3240:
 10582  1CE7                     l2492:
 10583  1CE7  3001               	movlw	1
 10584  1CE8  00F8               	movwf	??___lldiv
 10585  1CE9                     u3255:
 10586  1CE9  1003               	clrc
 10587  1CEA  0DF9               	rlf	___lldiv@quotient,f
 10588  1CEB  0DFA               	rlf	___lldiv@quotient+1,f
 10589  1CEC  0DFB               	rlf	___lldiv@quotient+2,f
 10590  1CED  0DFC               	rlf	___lldiv@quotient+3,f
 10591  1CEE  0BF8               	decfsz	??___lldiv,f
 10592  1CEF  2CE9               	goto	u3255
 10593  1CF0                     l2494:
 10594  1CF0  0873               	movf	___lldiv@divisor+3,w
 10595  1CF1  0277               	subwf	___lldiv@dividend+3,w
 10596  1CF2  1D03               	skipz
 10597  1CF3  2CFE               	goto	u3265
 10598  1CF4  0872               	movf	___lldiv@divisor+2,w
 10599  1CF5  0276               	subwf	___lldiv@dividend+2,w
 10600  1CF6  1D03               	skipz
 10601  1CF7  2CFE               	goto	u3265
 10602  1CF8  0871               	movf	___lldiv@divisor+1,w
 10603  1CF9  0275               	subwf	___lldiv@dividend+1,w
 10604  1CFA  1D03               	skipz
 10605  1CFB  2CFE               	goto	u3265
 10606  1CFC  0870               	movf	___lldiv@divisor,w
 10607  1CFD  0274               	subwf	___lldiv@dividend,w
 10608  1CFE                     u3265:
 10609  1CFE  1C03               	skipc
 10610  1CFF  2D01               	goto	u3261
 10611  1D00  2D02               	goto	u3260
 10612  1D01                     u3261:
 10613  1D01  2D11               	goto	l2500
 10614  1D02                     u3260:
 10615  1D02                     l2496:
 10616  1D02  0870               	movf	___lldiv@divisor,w
 10617  1D03  02F4               	subwf	___lldiv@dividend,f
 10618  1D04  0871               	movf	___lldiv@divisor+1,w
 10619  1D05  1C03               	skipc
 10620  1D06  0F71               	incfsz	___lldiv@divisor+1,w
 10621  1D07  02F5               	subwf	___lldiv@dividend+1,f
 10622  1D08  0872               	movf	___lldiv@divisor+2,w
 10623  1D09  1C03               	skipc
 10624  1D0A  0F72               	incfsz	___lldiv@divisor+2,w
 10625  1D0B  02F6               	subwf	___lldiv@dividend+2,f
 10626  1D0C  0873               	movf	___lldiv@divisor+3,w
 10627  1D0D  1C03               	skipc
 10628  1D0E  0F73               	incfsz	___lldiv@divisor+3,w
 10629  1D0F  02F7               	subwf	___lldiv@dividend+3,f
 10630  1D10                     l2498:
 10631  1D10  1479               	bsf	___lldiv@quotient,0
 10632  1D11                     l2500:
 10633  1D11  3001               	movlw	1
 10634  1D12                     u3275:
 10635  1D12  1003               	clrc
 10636  1D13  0CF3               	rrf	___lldiv@divisor+3,f
 10637  1D14  0CF2               	rrf	___lldiv@divisor+2,f
 10638  1D15  0CF1               	rrf	___lldiv@divisor+1,f
 10639  1D16  0CF0               	rrf	___lldiv@divisor,f
 10640  1D17  3EFF               	addlw	-1
 10641  1D18  1D03               	skipz
 10642  1D19  2D12               	goto	u3275
 10643  1D1A                     l2502:
 10644  1D1A  3001               	movlw	1
 10645  1D1B  02FD               	subwf	___lldiv@counter,f
 10646  1D1C  1D03               	btfss	3,2
 10647  1D1D  2D1F               	goto	u3281
 10648  1D1E  2D20               	goto	u3280
 10649  1D1F                     u3281:
 10650  1D1F  2CE7               	goto	l2492
 10651  1D20                     u3280:
 10652  1D20                     l2504:
 10653  1D20  087C               	movf	___lldiv@quotient+3,w
 10654  1D21  00F3               	movwf	?___lldiv+3
 10655  1D22  087B               	movf	___lldiv@quotient+2,w
 10656  1D23  00F2               	movwf	?___lldiv+2
 10657  1D24  087A               	movf	___lldiv@quotient+1,w
 10658  1D25  00F1               	movwf	?___lldiv+1
 10659  1D26  0879               	movf	___lldiv@quotient,w
 10660  1D27  00F0               	movwf	?___lldiv
 10661  1D28                     l417:
 10662  1D28  0008               	return
 10663  1D29                     __end_of___lldiv:
 10664                           
 10665                           	psect	text31
 10666  1190                     __ptext31:	
 10667 ;; *************** function ___fldiv *****************
 10668 ;; Defined at:
 10669 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;  a               4   30[BANK0 ] unsigned long 
 10672 ;;  b               4   34[BANK0 ] unsigned long 
 10673 ;; Auto vars:     Size  Location     Type
 10674 ;;  grs             4   50[BANK0 ] unsigned long 
 10675 ;;  rem             4   43[BANK0 ] unsigned long 
 10676 ;;  new_exp         2   48[BANK0 ] int 
 10677 ;;  aexp            1   55[BANK0 ] unsigned char 
 10678 ;;  bexp            1   54[BANK0 ] unsigned char 
 10679 ;;  sign            1   47[BANK0 ] unsigned char 
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  4   30[BANK0 ] unsigned char 
 10682 ;; Registers used:
 10683 ;;		wreg, status,2, status,0, btemp+1
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10689 ;;      Params:         0       8       0       0       0
 10690 ;;      Locals:         0      13       0       0       0
 10691 ;;      Temps:          0       5       0       0       0
 10692 ;;      Totals:         0      26       0       0       0
 10693 ;;Total ram usage:       26 bytes
 10694 ;; Hardware stack levels used:    1
 10695 ;; This function calls:
 10696 ;;		Nothing
 10697 ;; This function is called by:
 10698 ;;		_main
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           
 10703                           ;psect for function ___fldiv
 10704  1190                     ___fldiv:
 10705  1190                     l3648:	
 10706                           ;incstack = 0
 10707                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10708                           
 10709  1190  1283               	bcf	3,5	;RP0=0, select bank0
 10710  1191  1303               	bcf	3,6	;RP1=0, select bank0
 10711  1192  0845               	movf	___fldiv@b+3,w
 10712  1193  3980               	andlw	128
 10713  1194  00C6               	movwf	??___fldiv
 10714  1195  0846               	movf	??___fldiv,w
 10715  1196  00CF               	movwf	___fldiv@sign
 10716  1197                     l3650:
 10717  1197  0845               	movf	___fldiv@b+3,w
 10718  1198  00C6               	movwf	??___fldiv
 10719  1199  0746               	addwf	??___fldiv,w
 10720  119A  00C7               	movwf	??___fldiv+1
 10721  119B  0847               	movf	??___fldiv+1,w
 10722  119C  00D6               	movwf	___fldiv@bexp
 10723  119D                     l3652:
 10724  119D  1FC4               	btfss	___fldiv@b+2,7
 10725  119E  29A0               	goto	u5921
 10726  119F  29A1               	goto	u5920
 10727  11A0                     u5921:
 10728  11A0  29A2               	goto	l3656
 10729  11A1                     u5920:
 10730  11A1                     l3654:
 10731  11A1  1456               	bsf	___fldiv@bexp,0
 10732  11A2                     l3656:
 10733  11A2  0856               	movf	___fldiv@bexp,w
 10734  11A3  1903               	btfsc	3,2
 10735  11A4  29A6               	goto	u5931
 10736  11A5  29A7               	goto	u5930
 10737  11A6                     u5931:
 10738  11A6  29B7               	goto	l3666
 10739  11A7                     u5930:
 10740  11A7                     l3658:
 10741  11A7  0A56               	incf	___fldiv@bexp,w
 10742  11A8  1D03               	btfss	3,2
 10743  11A9  29AB               	goto	u5941
 10744  11AA  29AC               	goto	u5940
 10745  11AB                     u5941:
 10746  11AB  29B4               	goto	l3662
 10747  11AC                     u5940:
 10748  11AC                     l3660:
 10749  11AC  3000               	movlw	0
 10750  11AD  00C5               	movwf	___fldiv@b+3
 10751  11AE  3000               	movlw	0
 10752  11AF  00C4               	movwf	___fldiv@b+2
 10753  11B0  3000               	movlw	0
 10754  11B1  00C3               	movwf	___fldiv@b+1
 10755  11B2  3000               	movlw	0
 10756  11B3  00C2               	movwf	___fldiv@b
 10757  11B4                     l3662:
 10758  11B4  17C4               	bsf	___fldiv@b+2,7
 10759  11B5                     l3664:
 10760  11B5  01C5               	clrf	___fldiv@b+3
 10761  11B6  29BF               	goto	l3668
 10762  11B7                     l3666:
 10763  11B7  3000               	movlw	0
 10764  11B8  00C5               	movwf	___fldiv@b+3
 10765  11B9  3000               	movlw	0
 10766  11BA  00C4               	movwf	___fldiv@b+2
 10767  11BB  3000               	movlw	0
 10768  11BC  00C3               	movwf	___fldiv@b+1
 10769  11BD  3000               	movlw	0
 10770  11BE  00C2               	movwf	___fldiv@b
 10771  11BF                     l3668:
 10772  11BF  0841               	movf	___fldiv@a+3,w
 10773  11C0  3980               	andlw	128
 10774  11C1  00C6               	movwf	??___fldiv
 10775  11C2  0846               	movf	??___fldiv,w
 10776  11C3  06CF               	xorwf	___fldiv@sign,f
 10777  11C4                     l3670:
 10778  11C4  0841               	movf	___fldiv@a+3,w
 10779  11C5  00C6               	movwf	??___fldiv
 10780  11C6  0746               	addwf	??___fldiv,w
 10781  11C7  00C7               	movwf	??___fldiv+1
 10782  11C8  0847               	movf	??___fldiv+1,w
 10783  11C9  00D7               	movwf	___fldiv@aexp
 10784  11CA                     l3672:
 10785  11CA  1FC0               	btfss	___fldiv@a+2,7
 10786  11CB  29CD               	goto	u5951
 10787  11CC  29CE               	goto	u5950
 10788  11CD                     u5951:
 10789  11CD  29CF               	goto	l3676
 10790  11CE                     u5950:
 10791  11CE                     l3674:
 10792  11CE  1457               	bsf	___fldiv@aexp,0
 10793  11CF                     l3676:
 10794  11CF  0857               	movf	___fldiv@aexp,w
 10795  11D0  1903               	btfsc	3,2
 10796  11D1  29D3               	goto	u5961
 10797  11D2  29D4               	goto	u5960
 10798  11D3                     u5961:
 10799  11D3  29E4               	goto	l3686
 10800  11D4                     u5960:
 10801  11D4                     l3678:
 10802  11D4  0A57               	incf	___fldiv@aexp,w
 10803  11D5  1D03               	btfss	3,2
 10804  11D6  29D8               	goto	u5971
 10805  11D7  29D9               	goto	u5970
 10806  11D8                     u5971:
 10807  11D8  29E1               	goto	l3682
 10808  11D9                     u5970:
 10809  11D9                     l3680:
 10810  11D9  3000               	movlw	0
 10811  11DA  00C1               	movwf	___fldiv@a+3
 10812  11DB  3000               	movlw	0
 10813  11DC  00C0               	movwf	___fldiv@a+2
 10814  11DD  3000               	movlw	0
 10815  11DE  00BF               	movwf	___fldiv@a+1
 10816  11DF  3000               	movlw	0
 10817  11E0  00BE               	movwf	___fldiv@a
 10818  11E1                     l3682:
 10819  11E1  17C0               	bsf	___fldiv@a+2,7
 10820  11E2                     l3684:
 10821  11E2  01C1               	clrf	___fldiv@a+3
 10822  11E3  29EC               	goto	l764
 10823  11E4                     l3686:
 10824  11E4  3000               	movlw	0
 10825  11E5  00C1               	movwf	___fldiv@a+3
 10826  11E6  3000               	movlw	0
 10827  11E7  00C0               	movwf	___fldiv@a+2
 10828  11E8  3000               	movlw	0
 10829  11E9  00BF               	movwf	___fldiv@a+1
 10830  11EA  3000               	movlw	0
 10831  11EB  00BE               	movwf	___fldiv@a
 10832  11EC                     l764:
 10833  11EC  0841               	movf	___fldiv@a+3,w
 10834  11ED  0440               	iorwf	___fldiv@a+2,w
 10835  11EE  043F               	iorwf	___fldiv@a+1,w
 10836  11EF  043E               	iorwf	___fldiv@a,w
 10837  11F0  1D03               	skipz
 10838  11F1  29F3               	goto	u5981
 10839  11F2  29F4               	goto	u5980
 10840  11F3                     u5981:
 10841  11F3  2A0D               	goto	l3696
 10842  11F4                     u5980:
 10843  11F4                     l3688:
 10844  11F4  3000               	movlw	0
 10845  11F5  00C5               	movwf	___fldiv@b+3
 10846  11F6  3000               	movlw	0
 10847  11F7  00C4               	movwf	___fldiv@b+2
 10848  11F8  3000               	movlw	0
 10849  11F9  00C3               	movwf	___fldiv@b+1
 10850  11FA  3000               	movlw	0
 10851  11FB  00C2               	movwf	___fldiv@b
 10852  11FC  3080               	movlw	128
 10853  11FD  04C4               	iorwf	___fldiv@b+2,f
 10854  11FE  307F               	movlw	127
 10855  11FF  04C5               	iorwf	___fldiv@b+3,f
 10856  1200                     l3690:
 10857  1200  084F               	movf	___fldiv@sign,w
 10858  1201  00C6               	movwf	??___fldiv
 10859  1202  0846               	movf	??___fldiv,w
 10860  1203  04C5               	iorwf	___fldiv@b+3,f
 10861  1204                     l3692:
 10862  1204  0845               	movf	___fldiv@b+3,w
 10863  1205  00C1               	movwf	?___fldiv+3
 10864  1206  0844               	movf	___fldiv@b+2,w
 10865  1207  00C0               	movwf	?___fldiv+2
 10866  1208  0843               	movf	___fldiv@b+1,w
 10867  1209  00BF               	movwf	?___fldiv+1
 10868  120A  0842               	movf	___fldiv@b,w
 10869  120B  00BE               	movwf	?___fldiv
 10870  120C  2B6C               	goto	l766
 10871  120D                     l3696:
 10872  120D  0856               	movf	___fldiv@bexp,w
 10873  120E  1D03               	btfss	3,2
 10874  120F  2A11               	goto	u5991
 10875  1210  2A12               	goto	u5990
 10876  1211                     u5991:
 10877  1211  2A1B               	goto	l3702
 10878  1212                     u5990:
 10879  1212                     l3698:
 10880  1212  3000               	movlw	0
 10881  1213  00C1               	movwf	?___fldiv+3
 10882  1214  3000               	movlw	0
 10883  1215  00C0               	movwf	?___fldiv+2
 10884  1216  3000               	movlw	0
 10885  1217  00BF               	movwf	?___fldiv+1
 10886  1218  3000               	movlw	0
 10887  1219  00BE               	movwf	?___fldiv
 10888  121A  2B6C               	goto	l766
 10889  121B                     l3702:
 10890  121B  0856               	movf	___fldiv@bexp,w
 10891  121C  00C6               	movwf	??___fldiv
 10892  121D  01C7               	clrf	??___fldiv+1
 10893  121E  0847               	movf	??___fldiv+1,w
 10894  121F  00C9               	movwf	??___fldiv+3
 10895  1220  0857               	movf	___fldiv@aexp,w
 10896  1221  0246               	subwf	??___fldiv,w
 10897  1222  00C8               	movwf	??___fldiv+2
 10898  1223  1C03               	skipc
 10899  1224  03C9               	decf	??___fldiv+3,f
 10900  1225  0848               	movf	??___fldiv+2,w
 10901  1226  3E7F               	addlw	127
 10902  1227  00D0               	movwf	___fldiv@new_exp
 10903  1228  0849               	movf	??___fldiv+3,w
 10904  1229  1803               	skipnc
 10905  122A  3E01               	addlw	1
 10906  122B  3E00               	addlw	0
 10907  122C  00D1               	movwf	___fldiv@new_exp+1
 10908  122D                     l3704:
 10909  122D  0845               	movf	___fldiv@b+3,w
 10910  122E  00CE               	movwf	___fldiv@rem+3
 10911  122F  0844               	movf	___fldiv@b+2,w
 10912  1230  00CD               	movwf	___fldiv@rem+2
 10913  1231  0843               	movf	___fldiv@b+1,w
 10914  1232  00CC               	movwf	___fldiv@rem+1
 10915  1233  0842               	movf	___fldiv@b,w
 10916  1234  00CB               	movwf	___fldiv@rem
 10917  1235                     l3706:
 10918  1235  3000               	movlw	0
 10919  1236  00C5               	movwf	___fldiv@b+3
 10920  1237  3000               	movlw	0
 10921  1238  00C4               	movwf	___fldiv@b+2
 10922  1239  3000               	movlw	0
 10923  123A  00C3               	movwf	___fldiv@b+1
 10924  123B  3000               	movlw	0
 10925  123C  00C2               	movwf	___fldiv@b
 10926  123D                     l3708:
 10927  123D  3000               	movlw	0
 10928  123E  00D5               	movwf	___fldiv@grs+3
 10929  123F  3000               	movlw	0
 10930  1240  00D4               	movwf	___fldiv@grs+2
 10931  1241  3000               	movlw	0
 10932  1242  00D3               	movwf	___fldiv@grs+1
 10933  1243  3000               	movlw	0
 10934  1244  00D2               	movwf	___fldiv@grs
 10935  1245                     l3710:
 10936  1245  01D7               	clrf	___fldiv@aexp
 10937  1246  2A91               	goto	l3730
 10938  1247                     l3712:
 10939  1247  0857               	movf	___fldiv@aexp,w
 10940  1248  1903               	btfsc	3,2
 10941  1249  2A4B               	goto	u6001
 10942  124A  2A4C               	goto	u6000
 10943  124B                     u6001:
 10944  124B  2A6C               	goto	l3722
 10945  124C                     u6000:
 10946  124C                     l3714:
 10947  124C  3001               	movlw	1
 10948  124D  00C6               	movwf	??___fldiv
 10949  124E                     u6015:
 10950  124E  1003               	clrc
 10951  124F  0DCB               	rlf	___fldiv@rem,f
 10952  1250  0DCC               	rlf	___fldiv@rem+1,f
 10953  1251  0DCD               	rlf	___fldiv@rem+2,f
 10954  1252  0DCE               	rlf	___fldiv@rem+3,f
 10955  1253  0BC6               	decfsz	??___fldiv,f
 10956  1254  2A4E               	goto	u6015
 10957  1255  3001               	movlw	1
 10958  1256  00C6               	movwf	??___fldiv
 10959  1257                     u6025:
 10960  1257  1003               	clrc
 10961  1258  0DC2               	rlf	___fldiv@b,f
 10962  1259  0DC3               	rlf	___fldiv@b+1,f
 10963  125A  0DC4               	rlf	___fldiv@b+2,f
 10964  125B  0DC5               	rlf	___fldiv@b+3,f
 10965  125C  0BC6               	decfsz	??___fldiv,f
 10966  125D  2A57               	goto	u6025
 10967  125E                     l3716:
 10968  125E  1FD5               	btfss	___fldiv@grs+3,7
 10969  125F  2A61               	goto	u6031
 10970  1260  2A62               	goto	u6030
 10971  1261                     u6031:
 10972  1261  2A63               	goto	l3720
 10973  1262                     u6030:
 10974  1262                     l3718:
 10975  1262  1442               	bsf	___fldiv@b,0
 10976  1263                     l3720:
 10977  1263  3001               	movlw	1
 10978  1264  00C6               	movwf	??___fldiv
 10979  1265                     u6045:
 10980  1265  1003               	clrc
 10981  1266  0DD2               	rlf	___fldiv@grs,f
 10982  1267  0DD3               	rlf	___fldiv@grs+1,f
 10983  1268  0DD4               	rlf	___fldiv@grs+2,f
 10984  1269  0DD5               	rlf	___fldiv@grs+3,f
 10985  126A  0BC6               	decfsz	??___fldiv,f
 10986  126B  2A65               	goto	u6045
 10987  126C                     l3722:
 10988  126C  0841               	movf	___fldiv@a+3,w
 10989  126D  024E               	subwf	___fldiv@rem+3,w
 10990  126E  1D03               	skipz
 10991  126F  2A7A               	goto	u6055
 10992  1270  0840               	movf	___fldiv@a+2,w
 10993  1271  024D               	subwf	___fldiv@rem+2,w
 10994  1272  1D03               	skipz
 10995  1273  2A7A               	goto	u6055
 10996  1274  083F               	movf	___fldiv@a+1,w
 10997  1275  024C               	subwf	___fldiv@rem+1,w
 10998  1276  1D03               	skipz
 10999  1277  2A7A               	goto	u6055
 11000  1278  083E               	movf	___fldiv@a,w
 11001  1279  024B               	subwf	___fldiv@rem,w
 11002  127A                     u6055:
 11003  127A  1C03               	skipc
 11004  127B  2A7D               	goto	u6051
 11005  127C  2A7E               	goto	u6050
 11006  127D                     u6051:
 11007  127D  2A8D               	goto	l3728
 11008  127E                     u6050:
 11009  127E                     l3724:
 11010  127E  1755               	bsf	___fldiv@grs+3,6
 11011  127F                     l3726:
 11012  127F  083E               	movf	___fldiv@a,w
 11013  1280  02CB               	subwf	___fldiv@rem,f
 11014  1281  083F               	movf	___fldiv@a+1,w
 11015  1282  1C03               	skipc
 11016  1283  0F3F               	incfsz	___fldiv@a+1,w
 11017  1284  02CC               	subwf	___fldiv@rem+1,f
 11018  1285  0840               	movf	___fldiv@a+2,w
 11019  1286  1C03               	skipc
 11020  1287  0F40               	incfsz	___fldiv@a+2,w
 11021  1288  02CD               	subwf	___fldiv@rem+2,f
 11022  1289  0841               	movf	___fldiv@a+3,w
 11023  128A  1C03               	skipc
 11024  128B  0F41               	incfsz	___fldiv@a+3,w
 11025  128C  02CE               	subwf	___fldiv@rem+3,f
 11026  128D                     l3728:
 11027  128D  3001               	movlw	1
 11028  128E  00C6               	movwf	??___fldiv
 11029  128F  0846               	movf	??___fldiv,w
 11030  1290  07D7               	addwf	___fldiv@aexp,f
 11031  1291                     l3730:
 11032  1291  301A               	movlw	26
 11033  1292  0257               	subwf	___fldiv@aexp,w
 11034  1293  1C03               	skipc
 11035  1294  2A96               	goto	u6061
 11036  1295  2A97               	goto	u6060
 11037  1296                     u6061:
 11038  1296  2A47               	goto	l3712
 11039  1297                     u6060:
 11040  1297                     l3732:
 11041  1297  084E               	movf	___fldiv@rem+3,w
 11042  1298  044D               	iorwf	___fldiv@rem+2,w
 11043  1299  044C               	iorwf	___fldiv@rem+1,w
 11044  129A  044B               	iorwf	___fldiv@rem,w
 11045  129B  1903               	skipnz
 11046  129C  2A9E               	goto	u6071
 11047  129D  2A9F               	goto	u6070
 11048  129E                     u6071:
 11049  129E  2ABE               	goto	l3746
 11050  129F                     u6070:
 11051  129F                     l3734:
 11052  129F  1452               	bsf	___fldiv@grs,0
 11053  12A0  2ABE               	goto	l3746
 11054  12A1                     l3736:
 11055  12A1  3001               	movlw	1
 11056  12A2  00C6               	movwf	??___fldiv
 11057  12A3                     u6085:
 11058  12A3  1003               	clrc
 11059  12A4  0DC2               	rlf	___fldiv@b,f
 11060  12A5  0DC3               	rlf	___fldiv@b+1,f
 11061  12A6  0DC4               	rlf	___fldiv@b+2,f
 11062  12A7  0DC5               	rlf	___fldiv@b+3,f
 11063  12A8  0BC6               	decfsz	??___fldiv,f
 11064  12A9  2AA3               	goto	u6085
 11065  12AA                     l3738:
 11066  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11067  12AB  2AAD               	goto	u6091
 11068  12AC  2AAE               	goto	u6090
 11069  12AD                     u6091:
 11070  12AD  2AAF               	goto	l3742
 11071  12AE                     u6090:
 11072  12AE                     l3740:
 11073  12AE  1442               	bsf	___fldiv@b,0
 11074  12AF                     l3742:
 11075  12AF  3001               	movlw	1
 11076  12B0  00C6               	movwf	??___fldiv
 11077  12B1                     u6105:
 11078  12B1  1003               	clrc
 11079  12B2  0DD2               	rlf	___fldiv@grs,f
 11080  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11081  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11082  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11083  12B6  0BC6               	decfsz	??___fldiv,f
 11084  12B7  2AB1               	goto	u6105
 11085  12B8                     l3744:
 11086  12B8  30FF               	movlw	255
 11087  12B9  07D0               	addwf	___fldiv@new_exp,f
 11088  12BA  1803               	skipnc
 11089  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11090  12BC  30FF               	movlw	255
 11091  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11092  12BE                     l3746:
 11093  12BE  1FC4               	btfss	___fldiv@b+2,7
 11094  12BF  2AC1               	goto	u6111
 11095  12C0  2AC2               	goto	u6110
 11096  12C1                     u6111:
 11097  12C1  2AA1               	goto	l3736
 11098  12C2                     u6110:
 11099  12C2                     l3748:
 11100  12C2  01D7               	clrf	___fldiv@aexp
 11101  12C3                     l3750:
 11102  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11103  12C4  2AC6               	goto	u6121
 11104  12C5  2AC7               	goto	u6120
 11105  12C6                     u6121:
 11106  12C6  2AE3               	goto	l3758
 11107  12C7                     u6120:
 11108  12C7                     l3752:
 11109  12C7  30FF               	movlw	255
 11110  12C8  0552               	andwf	___fldiv@grs,w
 11111  12C9  00C6               	movwf	??___fldiv
 11112  12CA  30FF               	movlw	255
 11113  12CB  0553               	andwf	___fldiv@grs+1,w
 11114  12CC  00C7               	movwf	??___fldiv+1
 11115  12CD  30FF               	movlw	255
 11116  12CE  0554               	andwf	___fldiv@grs+2,w
 11117  12CF  00C8               	movwf	??___fldiv+2
 11118  12D0  307F               	movlw	127
 11119  12D1  0555               	andwf	___fldiv@grs+3,w
 11120  12D2  00C9               	movwf	??___fldiv+3
 11121  12D3  0849               	movf	??___fldiv+3,w
 11122  12D4  0448               	iorwf	??___fldiv+2,w
 11123  12D5  0447               	iorwf	??___fldiv+1,w
 11124  12D6  0446               	iorwf	??___fldiv,w
 11125  12D7  1903               	skipnz
 11126  12D8  2ADA               	goto	u6131
 11127  12D9  2ADB               	goto	u6130
 11128  12DA                     u6131:
 11129  12DA  2ADE               	goto	l780
 11130  12DB                     u6130:
 11131  12DB                     l3754:
 11132  12DB  01D7               	clrf	___fldiv@aexp
 11133  12DC  0AD7               	incf	___fldiv@aexp,f
 11134  12DD  2AE3               	goto	l3758
 11135  12DE                     l780:
 11136  12DE  1C42               	btfss	___fldiv@b,0
 11137  12DF  2AE1               	goto	u6141
 11138  12E0  2AE2               	goto	u6140
 11139  12E1                     u6141:
 11140  12E1  2AE3               	goto	l3758
 11141  12E2                     u6140:
 11142  12E2  2ADB               	goto	l3754
 11143  12E3                     l3758:
 11144  12E3  0857               	movf	___fldiv@aexp,w
 11145  12E4  1903               	btfsc	3,2
 11146  12E5  2AE7               	goto	u6151
 11147  12E6  2AE8               	goto	u6150
 11148  12E7                     u6151:
 11149  12E7  2B19               	goto	l3768
 11150  12E8                     u6150:
 11151  12E8                     l3760:
 11152  12E8  3001               	movlw	1
 11153  12E9  07C2               	addwf	___fldiv@b,f
 11154  12EA  3000               	movlw	0
 11155  12EB  1803               	skipnc
 11156  12EC  3001               	movlw	1
 11157  12ED  07C3               	addwf	___fldiv@b+1,f
 11158  12EE  3000               	movlw	0
 11159  12EF  1803               	skipnc
 11160  12F0  3001               	movlw	1
 11161  12F1  07C4               	addwf	___fldiv@b+2,f
 11162  12F2  3000               	movlw	0
 11163  12F3  1803               	skipnc
 11164  12F4  3001               	movlw	1
 11165  12F5  07C5               	addwf	___fldiv@b+3,f
 11166  12F6                     l3762:
 11167  12F6  1C45               	btfss	___fldiv@b+3,0
 11168  12F7  2AF9               	goto	u6161
 11169  12F8  2AFA               	goto	u6160
 11170  12F9                     u6161:
 11171  12F9  2B19               	goto	l3768
 11172  12FA                     u6160:
 11173  12FA                     l3764:
 11174  12FA  0842               	movf	___fldiv@b,w
 11175  12FB  00C6               	movwf	??___fldiv
 11176  12FC  0843               	movf	___fldiv@b+1,w
 11177  12FD  00C7               	movwf	??___fldiv+1
 11178  12FE  0844               	movf	___fldiv@b+2,w
 11179  12FF  00C8               	movwf	??___fldiv+2
 11180  1300  0845               	movf	___fldiv@b+3,w
 11181  1301  00C9               	movwf	??___fldiv+3
 11182  1302  3001               	movlw	1
 11183  1303  00CA               	movwf	??___fldiv+4
 11184  1304                     u6175:
 11185  1304  0D49               	rlf	??___fldiv+3,w
 11186  1305  0CC9               	rrf	??___fldiv+3,f
 11187  1306  0CC8               	rrf	??___fldiv+2,f
 11188  1307  0CC7               	rrf	??___fldiv+1,f
 11189  1308  0CC6               	rrf	??___fldiv,f
 11190  1309                     u6170:
 11191  1309  0BCA               	decfsz	??___fldiv+4,f
 11192  130A  2B04               	goto	u6175
 11193  130B  0849               	movf	??___fldiv+3,w
 11194  130C  00C5               	movwf	___fldiv@b+3
 11195  130D  0848               	movf	??___fldiv+2,w
 11196  130E  00C4               	movwf	___fldiv@b+2
 11197  130F  0847               	movf	??___fldiv+1,w
 11198  1310  00C3               	movwf	___fldiv@b+1
 11199  1311  0846               	movf	??___fldiv,w
 11200  1312  00C2               	movwf	___fldiv@b
 11201  1313                     l3766:
 11202  1313  3001               	movlw	1
 11203  1314  07D0               	addwf	___fldiv@new_exp,f
 11204  1315  1803               	skipnc
 11205  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11206  1317  3000               	movlw	0
 11207  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11208  1319                     l3768:
 11209  1319  0851               	movf	___fldiv@new_exp+1,w
 11210  131A  3A80               	xorlw	128
 11211  131B  00FF               	movwf	btemp+1
 11212  131C  3080               	movlw	128
 11213  131D  027F               	subwf	btemp+1,w
 11214  131E  1D03               	skipz
 11215  131F  2B22               	goto	u6185
 11216  1320  30FF               	movlw	255
 11217  1321  0250               	subwf	___fldiv@new_exp,w
 11218  1322                     u6185:
 11219  1322  1C03               	skipc
 11220  1323  2B25               	goto	u6181
 11221  1324  2B26               	goto	u6180
 11222  1325                     u6181:
 11223  1325  2B34               	goto	l3772
 11224  1326                     u6180:
 11225  1326                     l3770:
 11226  1326  30FF               	movlw	255
 11227  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11228  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11229  1329  00D0               	movwf	___fldiv@new_exp
 11230  132A  3000               	movlw	0
 11231  132B  00D1               	movwf	___fldiv@new_exp+1
 11232  132C  3000               	movlw	0
 11233  132D  00C5               	movwf	___fldiv@b+3
 11234  132E  3000               	movlw	0
 11235  132F  00C4               	movwf	___fldiv@b+2
 11236  1330  3000               	movlw	0
 11237  1331  00C3               	movwf	___fldiv@b+1
 11238  1332  3000               	movlw	0
 11239  1333  00C2               	movwf	___fldiv@b
 11240  1334                     l3772:
 11241  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11242  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11243  1336  0851               	movf	___fldiv@new_exp+1,w
 11244  1337  3A80               	xorlw	128
 11245  1338  00FF               	movwf	btemp+1
 11246  1339  3080               	movlw	128
 11247  133A  027F               	subwf	btemp+1,w
 11248  133B  1D03               	skipz
 11249  133C  2B3F               	goto	u6195
 11250  133D  3001               	movlw	1
 11251  133E  0250               	subwf	___fldiv@new_exp,w
 11252  133F                     u6195:
 11253  133F  1803               	skipnc
 11254  1340  2B42               	goto	u6191
 11255  1341  2B43               	goto	u6190
 11256  1342                     u6191:
 11257  1342  2B50               	goto	l786
 11258  1343                     u6190:
 11259  1343                     l3774:
 11260  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11261  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11262  1345  01D0               	clrf	___fldiv@new_exp
 11263  1346  01D1               	clrf	___fldiv@new_exp+1
 11264  1347                     l3776:
 11265  1347  3000               	movlw	0
 11266  1348  00C5               	movwf	___fldiv@b+3
 11267  1349  3000               	movlw	0
 11268  134A  00C4               	movwf	___fldiv@b+2
 11269  134B  3000               	movlw	0
 11270  134C  00C3               	movwf	___fldiv@b+1
 11271  134D  3000               	movlw	0
 11272  134E  00C2               	movwf	___fldiv@b
 11273  134F                     l3778:
 11274  134F  01CF               	clrf	___fldiv@sign
 11275  1350                     l786:
 11276  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11277  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11278  1352  0850               	movf	___fldiv@new_exp,w
 11279  1353  00C6               	movwf	??___fldiv
 11280  1354  0846               	movf	??___fldiv,w
 11281  1355  00D6               	movwf	___fldiv@bexp
 11282  1356                     l3780:
 11283  1356  1C56               	btfss	___fldiv@bexp,0
 11284  1357  2B59               	goto	u6201
 11285  1358  2B5A               	goto	u6200
 11286  1359                     u6201:
 11287  1359  2B5C               	goto	l3784
 11288  135A                     u6200:
 11289  135A                     l3782:
 11290  135A  17C4               	bsf	___fldiv@b+2,7
 11291  135B  2B60               	goto	l788
 11292  135C                     l3784:
 11293  135C  307F               	movlw	127
 11294  135D  00C6               	movwf	??___fldiv
 11295  135E  0846               	movf	??___fldiv,w
 11296  135F  05C4               	andwf	___fldiv@b+2,f
 11297  1360                     l788:
 11298  1360  0856               	movf	___fldiv@bexp,w
 11299  1361  00C6               	movwf	??___fldiv
 11300  1362  1003               	clrc
 11301  1363  0C46               	rrf	??___fldiv,w
 11302  1364  00C7               	movwf	??___fldiv+1
 11303  1365  0847               	movf	??___fldiv+1,w
 11304  1366  00C5               	movwf	___fldiv@b+3
 11305  1367  084F               	movf	___fldiv@sign,w
 11306  1368  00C6               	movwf	??___fldiv
 11307  1369  0846               	movf	??___fldiv,w
 11308  136A  04C5               	iorwf	___fldiv@b+3,f
 11309  136B  2A04               	goto	l3692
 11310  136C                     l766:
 11311  136C  0008               	return
 11312  136D                     __end_of___fldiv:
 11313                           
 11314                           	psect	text32
 11315  18CD                     __ptext32:	
 11316 ;; *************** function _I2C_Master_Write *****************
 11317 ;; Defined at:
 11318 ;;		line 65 in file "I2C.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  d               2    0[COMMON] unsigned int 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      void 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2, status,0, pclath, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11332 ;;      Params:         2       0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0
 11334 ;;      Temps:          0       0       0       0       0
 11335 ;;      Totals:         2       0       0       0       0
 11336 ;;Total ram usage:        2 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:    1
 11339 ;; This function calls:
 11340 ;;		_I2C_Master_Wait
 11341 ;; This function is called by:
 11342 ;;		_main
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           
 11347                           ;psect for function _I2C_Master_Write
 11348  18CD                     _I2C_Master_Write:
 11349  18CD                     l3386:	
 11350                           ;incstack = 0
 11351                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11352                           
 11353                           
 11354                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
 11355  18CD  160A  158A  20E2  160A  158A  	fcall	_I2C_Master_Wait
 11356  18D2                     l3388:
 11357                           
 11358                           ;I2C.c: 68:     SSPBUF = d;
 11359  18D2  0870               	movf	I2C_Master_Write@d,w
 11360  18D3  1283               	bcf	3,5	;RP0=0, select bank0
 11361  18D4  1303               	bcf	3,6	;RP1=0, select bank0
 11362  18D5  0093               	movwf	19	;volatile
 11363  18D6                     l112:
 11364  18D6  0008               	return
 11365  18D7                     __end_of_I2C_Master_Write:
 11366                           
 11367                           	psect	text33
 11368  18C4                     __ptext33:	
 11369 ;; *************** function _I2C_Master_Stop *****************
 11370 ;; Defined at:
 11371 ;;		line 55 in file "I2C.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0, pclath, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11385 ;;      Params:         0       0       0       0       0
 11386 ;;      Locals:         0       0       0       0       0
 11387 ;;      Temps:          0       0       0       0       0
 11388 ;;      Totals:         0       0       0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    1
 11392 ;; This function calls:
 11393 ;;		_I2C_Master_Wait
 11394 ;; This function is called by:
 11395 ;;		_main
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           
 11400                           ;psect for function _I2C_Master_Stop
 11401  18C4                     _I2C_Master_Stop:
 11402  18C4                     l3406:	
 11403                           ;incstack = 0
 11404                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11405                           
 11406                           
 11407                           ;I2C.c: 57:     I2C_Master_Wait();
 11408  18C4  160A  158A  20E2  160A  158A  	fcall	_I2C_Master_Wait
 11409  18C9                     l3408:
 11410                           
 11411                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 11412  18C9  1683               	bsf	3,5	;RP0=1, select bank1
 11413  18CA  1303               	bcf	3,6	;RP1=0, select bank1
 11414  18CB  1511               	bsf	17,2	;volatile
 11415  18CC                     l109:
 11416  18CC  0008               	return
 11417  18CD                     __end_of_I2C_Master_Stop:
 11418                           
 11419                           	psect	text34
 11420  18BB                     __ptext34:	
 11421 ;; *************** function _I2C_Master_Start *****************
 11422 ;; Defined at:
 11423 ;;		line 39 in file "I2C.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0, pclath, cstack
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11437 ;;      Params:         0       0       0       0       0
 11438 ;;      Locals:         0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0
 11440 ;;      Totals:         0       0       0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    1
 11444 ;; This function calls:
 11445 ;;		_I2C_Master_Wait
 11446 ;; This function is called by:
 11447 ;;		_main
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           
 11452                           ;psect for function _I2C_Master_Start
 11453  18BB                     _I2C_Master_Start:
 11454  18BB                     l3382:	
 11455                           ;incstack = 0
 11456                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11457                           
 11458                           
 11459                           ;I2C.c: 41:     I2C_Master_Wait();
 11460  18BB  160A  158A  20E2  160A  158A  	fcall	_I2C_Master_Wait
 11461  18C0                     l3384:
 11462                           
 11463                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 11464  18C0  1683               	bsf	3,5	;RP0=1, select bank1
 11465  18C1  1303               	bcf	3,6	;RP1=0, select bank1
 11466  18C2  1411               	bsf	17,0	;volatile
 11467  18C3                     l103:
 11468  18C3  0008               	return
 11469  18C4                     __end_of_I2C_Master_Start:
 11470                           
 11471                           	psect	text35
 11472  1987                     __ptext35:	
 11473 ;; *************** function _I2C_Master_Read *****************
 11474 ;; Defined at:
 11475 ;;		line 74 in file "I2C.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  a               2    0[COMMON] unsigned short 
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;  temp            2    4[COMMON] unsigned short 
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  2    0[COMMON] unsigned short 
 11482 ;; Registers used:
 11483 ;;		wreg, status,2, status,0, pclath, cstack
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/0
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11489 ;;      Params:         2       0       0       0       0
 11490 ;;      Locals:         2       0       0       0       0
 11491 ;;      Temps:          2       0       0       0       0
 11492 ;;      Totals:         6       0       0       0       0
 11493 ;;Total ram usage:        6 bytes
 11494 ;; Hardware stack levels used:    1
 11495 ;; Hardware stack levels required when called:    1
 11496 ;; This function calls:
 11497 ;;		_I2C_Master_Wait
 11498 ;; This function is called by:
 11499 ;;		_main
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           
 11504                           ;psect for function _I2C_Master_Read
 11505  1987                     _I2C_Master_Read:
 11506  1987                     l3390:	
 11507                           ;incstack = 0
 11508                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11509                           
 11510                           
 11511                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 11512  1987  160A  158A  20E2  160A  158A  	fcall	_I2C_Master_Wait
 11513  198C                     l3392:
 11514                           
 11515                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 11516  198C  1683               	bsf	3,5	;RP0=1, select bank1
 11517  198D  1303               	bcf	3,6	;RP1=0, select bank1
 11518  198E  1591               	bsf	17,3	;volatile
 11519                           
 11520                           ;I2C.c: 79:     I2C_Master_Wait();
 11521  198F  160A  158A  20E2  160A  158A  	fcall	_I2C_Master_Wait
 11522  1994                     l3394:
 11523                           
 11524                           ;I2C.c: 80:     temp = SSPBUF;
 11525  1994  1283               	bcf	3,5	;RP0=0, select bank0
 11526  1995  1303               	bcf	3,6	;RP1=0, select bank0
 11527  1996  0813               	movf	19,w	;volatile
 11528  1997  00F2               	movwf	??_I2C_Master_Read
 11529  1998  01F3               	clrf	??_I2C_Master_Read+1
 11530  1999  0872               	movf	??_I2C_Master_Read,w
 11531  199A  00F4               	movwf	I2C_Master_Read@temp
 11532  199B  0873               	movf	??_I2C_Master_Read+1,w
 11533  199C  00F5               	movwf	I2C_Master_Read@temp+1
 11534  199D                     l3396:
 11535                           
 11536                           ;I2C.c: 81:     I2C_Master_Wait();
 11537  199D  160A  158A  20E2  160A  158A  	fcall	_I2C_Master_Wait
 11538  19A2                     l3398:
 11539                           
 11540                           ;I2C.c: 82:     if(a == 1){
 11541  19A2  0370               	decf	I2C_Master_Read@a,w
 11542  19A3  0471               	iorwf	I2C_Master_Read@a+1,w
 11543  19A4  1D03               	btfss	3,2
 11544  19A5  29A7               	goto	u5501
 11545  19A6  29A8               	goto	u5500
 11546  19A7                     u5501:
 11547  19A7  29AC               	goto	l115
 11548  19A8                     u5500:
 11549  19A8                     l3400:
 11550                           
 11551                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 11552  19A8  1683               	bsf	3,5	;RP0=1, select bank1
 11553  19A9  1303               	bcf	3,6	;RP1=0, select bank1
 11554  19AA  1291               	bcf	17,5	;volatile
 11555                           
 11556                           ;I2C.c: 84:     }else{
 11557  19AB  29AF               	goto	l116
 11558  19AC                     l115:
 11559                           
 11560                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 11561  19AC  1683               	bsf	3,5	;RP0=1, select bank1
 11562  19AD  1303               	bcf	3,6	;RP1=0, select bank1
 11563  19AE  1691               	bsf	17,5	;volatile
 11564  19AF                     l116:	
 11565                           ;I2C.c: 86:     }
 11566                           
 11567                           
 11568                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 11569  19AF  1611               	bsf	17,4	;volatile
 11570  19B0                     l3402:
 11571                           
 11572                           ;I2C.c: 88:     return temp;
 11573  19B0  0875               	movf	I2C_Master_Read@temp+1,w
 11574  19B1  00F1               	movwf	?_I2C_Master_Read+1
 11575  19B2  0874               	movf	I2C_Master_Read@temp,w
 11576  19B3  00F0               	movwf	?_I2C_Master_Read
 11577  19B4                     l117:
 11578  19B4  0008               	return
 11579  19B5                     __end_of_I2C_Master_Read:
 11580                           
 11581                           	psect	text36
 11582  18E2                     __ptext36:	
 11583 ;; *************** function _I2C_Master_Wait *****************
 11584 ;; Defined at:
 11585 ;;		line 32 in file "I2C.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;		None
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      void 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11599 ;;      Params:         0       0       0       0       0
 11600 ;;      Locals:         0       0       0       0       0
 11601 ;;      Temps:          0       0       0       0       0
 11602 ;;      Totals:         0       0       0       0       0
 11603 ;;Total ram usage:        0 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; This function calls:
 11606 ;;		Nothing
 11607 ;; This function is called by:
 11608 ;;		_I2C_Master_Start
 11609 ;;		_I2C_Master_Stop
 11610 ;;		_I2C_Master_Write
 11611 ;;		_I2C_Master_Read
 11612 ;;		_I2C_Master_RepeatedStart
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           
 11617                           ;psect for function _I2C_Master_Wait
 11618  18E2                     _I2C_Master_Wait:
 11619  18E2                     l3014:	
 11620                           ;incstack = 0
 11621                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11622                           
 11623  18E2                     l97:	
 11624                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11625                           
 11626  18E2  1683               	bsf	3,5	;RP0=1, select bank1
 11627  18E3  1303               	bcf	3,6	;RP1=0, select bank1
 11628  18E4  1914               	btfsc	20,2	;volatile
 11629  18E5  28E7               	goto	u4501
 11630  18E6  28E8               	goto	u4500
 11631  18E7                     u4501:
 11632  18E7  28E2               	goto	l97
 11633  18E8                     u4500:
 11634  18E8                     l3016:
 11635  18E8  0811               	movf	17,w	;volatile
 11636  18E9  391F               	andlw	31
 11637  18EA  1D03               	btfss	3,2
 11638  18EB  28ED               	goto	u4511
 11639  18EC  28EE               	goto	u4510
 11640  18ED                     u4511:
 11641  18ED  28E2               	goto	l97
 11642  18EE                     u4510:
 11643  18EE                     l100:
 11644  18EE  0008               	return
 11645  18EF                     __end_of_I2C_Master_Wait:
 11646  007E                     btemp	set	126	;btemp
 11647  007E                     wtemp0	set	126
 11648                           
 11649                           	psect	config
 11650                           
 11651                           ;Config register CONFIG1 @ 0x2007
 11652                           ;	Oscillator Selection bits
 11653                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11654                           ;	Watchdog Timer Enable bit
 11655                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11656                           ;	Power-up Timer Enable bit
 11657                           ;	PWRTE = OFF, PWRT disabled
 11658                           ;	RE3/MCLR pin function select bit
 11659                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11660                           ;	Code Protection bit
 11661                           ;	CP = OFF, Program memory code protection is disabled
 11662                           ;	Data Code Protection bit
 11663                           ;	CPD = OFF, Data memory code protection is disabled
 11664                           ;	Brown Out Reset Selection bits
 11665                           ;	BOREN = OFF, BOR disabled
 11666                           ;	Internal External Switchover bit
 11667                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11668                           ;	Fail-Safe Clock Monitor Enabled bit
 11669                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11670                           ;	Low Voltage Programming Enable bit
 11671                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11672                           ;	In-Circuit Debugger Mode bit
 11673                           ;	DEBUG = 0x1, unprogrammed default
 11674  2007                     	org	8199
 11675  2007  20D4               	dw	8404
 11676                           
 11677                           ;Config register CONFIG2 @ 0x2008
 11678                           ;	Brown-out Reset Selection bit
 11679                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11680                           ;	Flash Program Memory Self Write Enable bits
 11681                           ;	WRT = OFF, Write protection off
 11682  2008                     	org	8200
 11683  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    144
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      77
    BANK1            80     52      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), volt(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->___fladd
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _setup->_I2C_Master_Init
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   44559
                                             47 BANK1      5     5      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   31986
                                              8 BANK1     39    30      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             56 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2166
                    _I2C_Master_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     34      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Aug 12 13:14:03 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          _a 006C  
                        _t 00D4                          pc 0002               ___fldiv@sign 004F  
                       l65 1A26                         l94 19EC                         l97 18E2  
             ___awdiv@sign 0021                         _s1 00DD                         _s2 00DC  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l100 18EE                        l103 18C3                        l112 18D6  
                      l115 19AC                        l116 19AF                        l117 19B4  
                      l109 18CC                        l150 1A74                        l302 0C9E  
                      l151 1A7A                        l160 1A97                        l152 1A7B  
                      l161 1A9D                        l153 1A81                        l321 00DE  
                      l154 1A82                        l163 1A9E                        l155 1A88  
                      l147 1A6A                        l156 1A89                        l148 1A6D  
                      l157 1A8F                        l149 1A73                        l181 1916  
                      l158 1A90                        l166 101B                        l159 1A96  
                      l175 193A                        l417 1D28                        l178 1C13  
                      l602 1F04                        l187 1AE0                        l356 051E  
                      l381 1947                        l349 04DA                        l534 006C  
                      l383 195F                        l551 1FFF                        l295 1577  
                      l712 1682                        l552 1F64                        l721 17FF  
                      l609 1F34                        l377 07EF                        l714 1659  
                      l562 1FF2                        l810 0F6B                        l555 1FC2  
                      l547 1CC2                        l572 1D45                        l580 18E1  
                      l708 15DB                        l804 0FFF                        l733 1771  
                      l637 1C69                        l750 17F3                        l742 17D1  
                      l567 1B41                        l575 1DB1                        l751 17FF  
                      l591 092A                        l823 1974                        l568 1B5D  
                      l576 1DCA                        l584 093F                        l816 0FF3  
                      l569 1B72                        l729 174D                        l825 1986  
                      l754 1BC2                        l594 093F                        l850 1E84  
                      l739 1793                        l780 12DE                        l764 11EC  
                      l861 1E4E                        l766 136C                        l862 1E5A  
                      l854 1E32                        l598 1F41                        l599 1EB3  
                      l687 1B24                        l848 1DED                        l697 1A60  
                      l786 1350                        l788 1360                        l868 1900  
                      _GIE 005F                        _RC0 0038                        _RC1 0039  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037                _sprintf$959 00B6               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3000 1BE7                       l3010 19EA                       l3002 19B5  
                     l3012 19EB                       l3004 19B9                       l3100 1EB4  
                     l3020 1376                       l3014 18E2                       l3006 19BC  
                     l3110 1EDD                       l3102 1EBA                       l3016 18E8  
                     l3008 19E9                       l3200 1955                       l3120 1F08  
                     l3112 1EEB                       l3104 1EC9                       l3032 1534  
                     l3040 0949                       l3210 1B55                       l3202 195B  
                     l3114 1EF5                       l3106 1ECB                       l3026 1483  
                     l3018 1370                       l3050 0A3F                       l3042 0950  
                     l2500 1D11                       l3212 1B6F                       l3220 1D3D  
                     l3140 1F42                       l3116 1EF6                       l3108 1ED4  
                     l3028 1489                       l3060 0AFB                       l3036 0943  
                     l2502 1D1A                       l3214 1B71                       l3206 1B25  
                     l3230 1D8D                       l3222 1D59                       l3302 1B73  
                     l3310 1DD1                       l3142 1F4F                       l3134 1F29  
                     l3126 1F10                       l3118 1EFE                       l2510 0007  
                     l3054 0AC7                       l3038 0947                       l3400 19A8  
                     l2504 1D20                       l2440 1A7F                       l2432 1A62  
                     l3208 1B39                       l3232 1DC7                       l3224 1D61  
                     l3240 18DF                       l3304 1B77                       l3320 1DFE  
                     l3312 1DD5                       l3160 1F89                       l3152 1F65  
                     l3136 1F39                       l3128 1F22                       l2600 1AF7  
                     l3080 18F7                       l2520 001B                       l2512 000B  
                     l3072 0C72                       l3048 0A38                       l3402 19B0  
                     l2442 1A86                       l2434 1A66                       l3234 1DC9  
                     l3226 1D65                       l3218 1D29                       l3242 18E1  
                     l3330 1E29                       l3322 1E03                       l3314 1DE5  
                     l3170 1FBC                       l3162 1F92                       l3154 1F6D  
                     l3146 1F58                       l3090 1E98                       l2450 1961  
                     l2610 1B1A                       l2602 1AFB                       l3082 18FD  
                     l2530 0031                       l2522 001F                       l2514 0010  
                     l3066 0BE3                       l3058 0AF4                       l3410 0070  
                     l2444 1A8D                       l2436 1A71                       l3228 1D89  
                     l2700 1605                       l3260 08FA                       l3252 08DA  
                     l3340 1E5C                       l3332 1E39                       l3324 1E10  
                     l3316 1DF5                       l3308 1DCC                       l3172 1FC6  
                     l3180 1FE0                       l3164 1FA4                       l3156 1F7E  
                     l2460 1982                       l2452 1963                       l2604 1B0C  
                     l2612 1B20                       l2620 1A30                       l3084 18FF  
                     l3076 18F0                       l2540 0051                       l2532 0035  
                     l2524 0021                       l2516 0012                       l2508 0004  
                     l3068 0BEA                       l3500 0321                       l3420 0089  
                     l3412 0075                       l3406 18C4                       l2446 1A94  
                     l2438 1A78                       l2470 100F                       l3238 18D7  
                     l2710 1619                       l2702 1609                       l3262 08FE  
                     l3270 0918                       l3254 08EF                       l3246 08C4  
                     l3342 1E72                       l3334 1E44                       l3326 1E17  
                     l3166 1FB2                       l3158 1F80                       l3094 1EA1  
                     l2454 196A                       l2606 1B12                       l2630 1A4F  
                     l2622 1A37                       l3078 18F1                       l2542 0058  
                     l2534 0039                       l2526 0027                       l2518 0016  
                     l3502 033C                       l3430 00B2                       l3422 0095  
                     l3414 007B                       l3408 18C9                       l2448 1A9B  
                     l2472 1018                       l2464 1003                       l2480 190E  
                     l3360 19F6                       l3352 19ED                       l2800 1790  
                     l2720 163D                       l2712 161D                       l2704 160D  
                     l2640 157F                       l3280 0934                       l3256 08F0  
                     l3248 08D1                       l3192 193B                       l3344 1E77  
                     l3336 1E48                       l3328 1E1B                       l3168 1FB3  
                     l3088 1E85                       l2456 196E                       l2608 1B13  
                     l2632 1A56                       l2624 1A3B                       l2616 1A27  
                     l2536 004A                       l2528 002A                       l2544 005E  
                     l2560 1C76                       l2552 1C6A                       l3600 06E7  
                     l3520 03F9                       l3512 038A                       l3504 0345  
                     l3432 00C5                       l3424 0096                       l3416 0082  
                     l2490 1CE3                       l2466 1006                       l2482 1913  
                     l2474 1902                       l3370 19FD                       l3362 19F9  
                     l3354 19F1                       l2810 17AF                       l2730 166D  
                     l2722 165D                       l2714 1621                       l2706 1611  
                     l2650 1594                       l2642 1585                       l3258 08F8  
                     l3290 1C32                       l3282 1C14                       l3194 193D  
                     l3346 1E7B                       l3338 1E52                       l3186 1FE7  
                     l3178 1FCE                       l2458 197D                       l2626 1A3F  
                     l2618 1A2D                       l2634 1A5C                       l2546 0063  
                     l2538 0050                       l2570 1C8F                       l2562 1C7A  
                     l2554 1C6B                       l3602 06ED                       l3530 0432  
                     l3506 034D                       l3514 0393                       l3450 0116  
                     l3442 00E0                       l3434 00C9                       l3426 009A  
                     l3418 0087                       l2492 1CE7                       l2484 1CC3  
                     l2468 100C                       l2476 1905                       l3380 1A17  
                     l3372 19FE                       l3364 19FA                       l3356 19F2  
                     l2820 17E8                       l2812 17CD                       l2804 1798  
                     l2732 1676                       l2724 1666                       l2708 1615  
                     l2716 1625                       l2660 15AC                       l2652 159C  
                     l2644 1589                       l3276 091F                       l3268 0906  
                     l3292 1C44                       l3284 1C1E                       l3196 1941  
                     l3348 1E7C                       l3188 1FF7                       l2900 0E29  
                     l2628 1A49                       l2548 0068                       l2580 1CAE  
                     l2572 1C93                       l2564 1C7F                       l2556 1C6F  
                     l3620 074B                       l3612 0726                       l3540 048F  
                     l3532 043C                       l3516 03C8                       l3508 036B  
                     l3460 015E                       l3452 0124                       l3444 0102  
                     l3428 009D                       l3436 00DA                       l3390 1987  
                     l3382 18BB                       l3710 1245                       l3702 121B  
                     l2494 1CF0                       l2486 1CD3                       l2478 190B  
                     l3374 1A01                       l3366 19FB                       l3358 19F5  
                     l2830 17FE                       l2822 17E9                       l2814 17D6  
                     l2806 179D                       l2750 16BC                       l2742 1694  
                     l2726 1668                       l2734 167A                       l2718 1626  
                     l2670 15BE                       l2662 15B2                       l2654 159D  
                     l2646 158A                       l2638 1578                       l3278 092F  
                     l3294 1C52                       l3286 1C21                       l3198 194E  
                     l2910 0EC9                       l2902 0E42                       l2590 1AE1  
                     l2574 1C97                       l2566 1C85                       l2582 1CB4  
                     l2558 1C74                       l3630 07C3                       l3622 0754  
                     l3614 0730                       l3550 04F5                       l3542 04CE  
                     l3534 0448                       l3526 03FB                       l3518 03F7  
                     l3470 019F                       l3462 0162                       l3454 0128  
                     l3446 010E                       l3438 00DC                       l3392 198C  
                     l3384 18C0                       l3720 1263                       l3712 1247  
                     l3704 122D                       l2496 1D02                       l2488 1CD6  
                     l3376 1A06                       l3368 19FC                       l2824 17ED  
                     l2816 17DB                       l2808 17AB                       l2752 16BE  
                     l2744 16AB                       l2736 1686                       l2760 16D1  
                     l2728 166C                       l2672 15C3                       l2680 15D3  
                     l2664 15B3                       l2648 158F                       l2656 159F  
                     l3296 1C5B                       l3288 1C2E                       l2920 0F37  
                     l2912 0EEF                       l2904 0E5F                       l2840 0CB1  
                     l2832 0C9F                       l2592 1AE3                       l2584 1CB9  
                     l2576 1CA1                       l2568 1C88                       l3624 0762  
                     l3616 073B                       l3608 06EF                       l3560 052C  
                     l3552 0502                       l3544 04E2                       l3536 044F  
                     l3480 0226                       l3472 01B2                       l3464 017B  
                     l3456 0141                       l3448 0112                       l3800 1042  
                     l3394 1994                       l3386 18CD                       l3714 124C  
                     l3722 126C                       l3730 1291                       l3706 1235  
                     l3650 1197                       l2498 1D10                       l3378 1A0E  
                     l2826 17EF                       l2818 17E3                       l2762 16E7  
                     l2770 173F                       l2754 16C2                       l2746 16AF  
                     l2738 168B                       l2690 15F1                       l2682 15E1  
                     l2674 15C8                       l2666 15B9                       l2658 15A7  
                     l3298 1C61                       l2930 0F4F                       l2922 0F3B  
                     l2914 0F17                       l2906 0E8C                       l2850 0CCD  
                     l2842 0CB6                       l2834 0CA6                       l2594 1AE9  
                     l2586 1CBE                       l2578 1CA7                       l3626 0769  
                     l3634 07CB                       l3618 073C                       l3570 05EB  
                     l3562 0533                       l3554 0511                       l3546 04EB  
                     l3538 0454                       l3490 027A                       l3482 023F  
                     l3474 01B6                       l3466 0186                       l3458 015A  
                     l3810 106D                       l3802 104C                       l3396 199D  
                     l3388 18D2                       l3740 12AE                       l3732 1297  
                     l3724 127E                       l3716 125E                       l3708 123D  
                     l3660 11AC                       l3652 119D                       l2828 17FA  
                     l2780 176C                       l2772 1755                       l2764 1725  
                     l2756 16C3                       l2748 16B3                       l2692 15F5  
                     l2684 15E5                       l2676 15D0                       l2668 15BD  
                     l2940 0F70                       l2932 0F50                       l2924 0F3C  
                     l2916 0F20                       l2908 0E9C                       l2860 0CE2  
                     l2852 0CD2                       l2844 0CBB                       l2836 0CAC  
                     l2596 1AEC                       l3628 076E                       l3580 06A0  
                     l3572 062A                       l3564 0537                       l3556 0518  
                     l3548 04EF                       l3492 02C1                       l3484 0248  
                     l3476 01BC                       l3468 018C                       l3636 07D9  
                     l3820 1093                       l3812 1077                       l3804 1051  
                     l3398 19A2                       l3750 12C3                       l3742 12AF  
                     l3734 129F                       l3726 127F                       l3718 1262  
                     l3670 11C4                       l3662 11B4                       l3654 11A1  
                     l2790 177F                       l2782 1770                       l2774 175A  
                     l2766 172B                       l2758 16CC                       l2694 15F9  
                     l2686 15E9                       l2678 15D1                       l2942 0F75  
                     l2950 0FA6                       l2934 0F54                       l2926 0F45  
                     l2918 0F2E                       l2870 0CFE                       l2862 0CE7  
                     l2854 0CD8                       l2846 0CC3                       l2838 0CB0  
                     l2598 1AF3                       l3590 06C6                       l3582 06A4  
                     l3574 0636                       l3566 0555                       l3558 0527  
                     l3494 02D0                       l3486 0263                       l3478 01DB  
                     l3638 07EB                       l3830 10CC                       l3822 10A2  
                     l3814 107C                       l3806 105A                       l3760 12E8  
                     l3752 12C7                       l3744 12B8                       l3736 12A1  
                     l3728 128D                       l3680 11D9                       l3672 11CA  
                     l3664 11B5                       l3656 11A2                       l3648 1190  
                     l2784 1775                       l2792 1781                       l2768 1730  
                     l2696 15FD                       l2688 15ED                       l2960 0FD9  
                     l2952 0FB3                       l2944 0F83                       l2936 0F68  
                     l2928 0F4B                       l2880 0D29                       l2872 0D03  
                     l2864 0CEF                       l2856 0CDC                       l2848 0CC5  
                     l3592 06CA                       l3584 06AA                       l3568 05B0  
                     l3576 0691                       l3496 02EB                       l3488 026B  
                     l3840 10EE                       l3832 10D1                       l3824 10A7  
                     l3816 1085                       l3808 1068                       l3770 1326  
                     l3762 12F6                       l3754 12DB                       l3738 12AA  
                     l3746 12BE                       l3690 1200                       l3682 11E1  
                     l3674 11CE                       l3658 11A7                       l3666 11B7  
                     l2786 1778                       l2778 1763                       l2794 1785  
                     l2698 1601                       l2962 0FE7                       l2954 0FBE  
                     l2946 0F87                       l2890 0DC6                       l2882 0D46  
                     l2866 0CF1                       l2858 0CDD                       l3594 06CE  
                     l3578 0699                       l3498 0312                       l3586 06B1  
                     l3842 115B                       l3834 10DB                       l3826 10B0  
                     l3818 108E                       l3780 1356                       l3772 1334  
                     l3764 12FA                       l3748 12C2                       l3692 1204  
                     l3684 11E2                       l3676 11CF                       l3668 11BF  
                     l2980 192F                       l2972 1918                       l2796 1786  
                     l2788 177A                       l2964 0FEB                       l2956 0FCD  
                     l2948 0FA0                       l2892 0DCF                       l2884 0D62  
                     l2876 0D0C                       l2868 0CF9                       l3596 06D9  
                     l3588 06C2                       l3844 117B                       l3836 10E4  
                     l3828 10BE                       l3782 135A                       l3774 1343  
                     l3766 1313                       l3758 12E3                       l3678 11D4  
                     l3686 11E4                       l2982 1934                       l2974 191D  
                     l2990 1AC4                       l2798 178A                       l2966 0FEC  
                     l2958 0FD7                       l2894 0DDF                       l2886 0D8E  
                     l2878 0D1C                       l3598 06DF                       l3846 1183  
                     l3838 10EA                       l3790 101C                       l3784 135C  
                     l3776 1347                       l3768 1319                       l3688 11F4  
                     l3696 120D                       l2992 1BC3                       l2976 1922  
                     l2984 1A9F                       l2968 0FF7                       l2896 0DFC  
                     l2888 0DAA                       l3792 1021                       l3778 134F  
                     l3698 1212                       l2994 1BC9                       l2978 1929  
                     l2986 1AA2                       l2898 0E0C                       l3794 1026  
                     l2996 1BD2                       l2988 1ABE                       l3796 102F  
                     l2998 1BE1                       l3798 103D                       l3888 00F4  
                     STR_1 08A0                       STR_2 08B2                       u3110 1A66  
                     u3111 1A65                       u3120 1A71                       u4000 17BE  
                     u3121 1A70                       u3130 1A78                       u4010 17CD  
                     u3210 1982                       u3131 1A77                       u4011 17CC  
                     u3211 1981                       u3220 1CD3                       u3140 1A7F  
                     u4020 17D6                       u4100 0CDC                       u3300 0016  
                     u3221 1CD2                       u3141 1A7E                       u4021 17D5  
                     u4005 17B9                       u3205 1975                       u4101 0CDB  
                     u3301 0015                       u3150 1A86                       u4030 17DB  
                     u4110 0CE2                       u3310 0027                       u3151 1A85  
                     u4031 17DA                       u4111 0CE1                       u3311 0026  
                     u3240 1CE7                       u3160 1A8D                       u4040 17E8  
                     u4120 0CE7                       u3400 1C7A                       u3241 1CE6  
                     u3161 1A8C                       u4041 17E7                       u4201 0DEE  
                     u4121 0CE6                       u3401 1C79                       u3170 1A94  
                     u4050 17ED                       u5010 1FDF                       u4202 0DF5  
                     u4130 0CFE                       u3330 0039                       u3410 1C85  
                     u3235 1CD8                       u3171 1A93                       u4051 17EC  
                     u5011 1FDE                       u4211 0E1B                       u4203 0DFC  
                     u4131 0CFD                       u3331 0038                       u3411 1C84  
                     u3260 1D02                       u3180 1A9B                       u5100 1B55  
                     u4060 17FE                       u5020 1FE6                       u4212 0E22  
                     u4140 0D03                       u3500 1AFB                       u3261 1D01  
                     u3181 1A9A                       u5101 1B54                       u4061 17FD  
                     u5021 1FE5                       u5005 1FCF                       u4213 0E29  
                     u4141 0D02                       u3501 1AFA                       u3325 002B  
                     u5110 1B6F                       u3190 196E                       u4070 0CB0  
                     u3350 004A                       u3430 1C97                       u3255 1CE9  
                     u5111 1B6E                       u3191 196D                       u4231 0E51  
                     u4151 0D54                       u4071 0CAF                       u3351 0049  
                     u3431 1C96                       u6000 124C                       u3280 1D20  
                     u5120 1D3D                       u5200 08D1                       u5040 1FF7  
                     u4400 0F96                       u4320 0F3B                       u4232 0E58  
                     u4152 0D5B                       u4080 0CB6                       u3520 1B0C  
                     u3600 1A5C                       u3440 1CA1                       u6001 124B  
                     u3281 1D1F                       u3265 1CFE                       u5121 1D3C  
                     u5201 08D0                       u5041 1FF6                       u4321 0F3A  
                     u4305 0F19                       u4241 0E7E                       u4233 0E5F  
                     u4225 0E2B                       u4161 0D70                       u4153 0D62  
                     u4081 0CB5                       u3521 1B0B                       u3601 1A5B  
                     u3345 003A                       u3441 1CA0                       u3425 1C89  
                     u5130 1D59                       u3610 1589                       u5210 08E8  
                     u5050 1941                       u4410 0FB3                       u4242 0E85  
                     u4162 0D77                       u4090 0CBB                       u3370 005E  
                     u3290 000B                       u3275 1D12                       u5115 1B6B  
                     u5131 1D58                       u3611 1588                       u5051 1940  
                     u5035 1FE9                       u4411 0FB2                       u4315 0F30  
                     u4251 0EAB                       u4243 0E8C                       u4171 0D9C  
                     u4163 0D7E                       u4091 0CBA                       u3515 1AFC  
                     u3371 005D                       u3355 0046                       u3291 000A  
                     u4500 18E8                       u5140 1D65                       u3700 163D  
                     u3620 158F                       u5220 08FE                       u5300 1C1E  
                     u4420 0FCD                       u4340 0F4F                       u4260 0ED5  
                     u4252 0EB2                       u4172 0DA3                       u3540 1B20  
                     u3380 0063                       u3460 1CB4                       u4501 18E7  
                     u5141 1D64                       u3701 163C                       u3621 158E  
                     u5221 08FD                       u5301 1C1D                       u4421 0FCC  
                     u4405 0F91                       u4341 0F4E                       u4253 0EB9  
                     u4181 0DB8                       u4173 0DAA                       u3541 1B1F  
                     u3525 1B08                       u3381 0062                       u3365 0052  
                     u3461 1CB3                       u3445 1C9D                       u4510 18EE  
                     u6110 12C2                       u6030 1262                       u3710 1648  
                     u3630 1594                       u5230 0905                       u4430 0FEB  
                     u4350 0F54                       u4182 0DBF                       u3550 1A2D  
                     u3470 1CB9                       u3390 1C6F                       u4511 18ED  
                     u6111 12C1                       u6031 1261                       u6015 124E  
                     u5151 1D74                       u3711 1646                       u3631 1593  
                     u5231 0904                       u5215 08E3                       u4431 0FEA  
                     u4415 0FAF                       u4351 0F53                       u4335 0F3E  
                     u4271 0EE1                       u4183 0DC6                       u3535 1B14  
                     u3551 1A2C                       u3471 1CB8                       u3455 1CA8  
                     u3391 1C6E                       u6200 135A                       u6120 12C7  
                     u4440 191D                       u5160 1D8D                       u5152 1D75  
                     u3800 16AF                       u3720 1649                       u3640 15B2  
                     u5320 1C32                       u5080 195B                       u5400 1E16  
                     u4360 0F68                       u4280 0EFD                       u4272 0EE8  
                     u3480 1AE9                       u4520 1376                       u4600 0947  
                     u6201 1359                       u6121 12C6                       u6105 12B1  
                     u6025 1257                       u4441 191C                       u5161 1D8C  
                     u5153 1D7A                       u3801 16AE                       u3705 1639  
                     u3641 15B1                       u5321 1C31                       u5081 195A  
                     u5065 1948                       u5401 1E15                       u4425 0FC9  
                     u4361 0F67                       u4273 0EEF                       u4265 0ED0  
                     u3481 1AE8                       u4521 1375                       u4601 0946  
                     u6130 12DB                       u6050 127E                       u4450 192F  
                     u5090 1B39                       u5154 1D7B                       u3810 16B3  
                     u3730 165D                       u3650 15BD                       u5250 0917  
                     u5330 1C44                       u4370 0F6F                       u3570 1A3F  
                     u4610 0950                       u6131 12DA                       u6051 127D  
                     u4451 192E                       u5091 1B38                       u5171 1D9C  
                     u5155 1D80                       u3811 16B2                       u3731 165C  
                     u3651 15BC                       u5251 0916                       u5331 1C43  
                     u5315 1C23                       u5075 194F                       u4371 0F6E  
                     u4291 0F09                       u4195 0DC8                       u3571 1A3E  
                     u4611 094F                       _PEIE 005E                       u5500 19A8  
                     u6140 12E2                       u6060 1297                       u4460 1AAC  
                     u5180 1DC7                       u5172 1D9D                       u5156 1D81  
                     u3820 16C2                       u3740 166C                       u3660 15C3  
                     u5260 091E                       u5420 1E38                       u4380 0F75  
                     u4292 0F10                       u3580 1A49                       u5501 19A7  
                     u6141 12E1                       u6061 1296                       u6045 1265  
                     u5181 1DC6                       u5173 1DA2                       u3821 16C1  
                     u3741 166B                       u3661 15C2                       u5261 091D  
                     u5245 0907                       u5421 1E37                       u4381 0F74  
                     u4293 0F17                       u4285 0EF8                       u3581 1A48  
                     u3565 1A31                       u6150 12E8                       u6070 129F  
                     u4470 1ACE                       u5174 1DA3                       u5190 18DF  
                     u3910 1770                       u3670 15C8                       u5350 1C61  
                     u4390 0F87                       u5510 007B                       u6151 12E7  
                     u6071 129E                       u6055 127A                       u5175 1DA8  
                     u5191 18DE                       u3911 176F                       u3671 15C7  
                     u5351 1C60                       u5335 1C40                       u5415 1E2A  
                     u4391 0F86                       u3495 1AED                       u4535 1393  
                     u5511 007A                       u6160 12FA                       u4480 1AE0  
                     u5176 1DA9                       u3920 1775                       u3840 16E7  
                     u3760 1682                       u3680 15E1                       u5280 092F  
                     u5440 1E48                       u5360 1DD1                       u4800 1EB2  
                     u4560 1489                       u5600 0263                       u5520 0095  
                     u6161 12F9                       u4481 1ADF                       u5185 1DC3  
                     u3921 1774                       u3905 1765                       u3841 16E6  
                     u3761 1681                       u3681 15E0                       u5281 092E  
                     u5345 1C53                       u5441 1E47                       u5361 1DD0  
                     u4801 1EB1                       u3585 1A45                       u4561 1488  
                     u4545 13ED                       u4705 0B1B                       u4625 0970  
                     u5601 0262                       u5521 0094                       u6217 1048  
                     u6170 1309                       u6090 12AE                       u4490 19CC  
                     u3930 177F                       u3770 1686                       u3690 15E5  
                     u5290 0934                       u5450 1E4E                       u5370 1DD5  
                     u4730 0BEA                       u4650 0A3F                       u5610 027A  
                     u5530 00D9                       u6091 12AD                       u3931 177E  
                     u3851 16FE                       u3843 16E3                       u3835 16C5  
                     u3771 1685                       u3755 166F                       u3691 15E4  
                     u5291 0933                       u5275 0921                       u5451 1E4D  
                     u5435 1E3D                       u5371 1DD4                       u3595 1A50  
                     u4555 1442                       u4731 0BE9                       u4715 0B57  
                     u4651 0A3E                       u4635 09AC                       u5611 0279  
                     u5531 00D8                       u6227 1073                       u6180 1326  
                     u3940 1785                       u3860 1712                       u3852 16FF  
                     u3780 168B                       u5460 1E52                       u5380 1DF5  
                     u4820 1EEB                       u5700 0448                       u5620 02D0  
                     u5540 010E                       u6181 1325                       u6085 12A3  
                     u3941 1784                       u3861 1713                       u3853 1704  
                     u3781 168A                       u5461 1E51                       u5381 1DF4  
                     u4821 1EEA                       u4725 0BA2                       u4645 09F7  
                     u5701 0447                       u5621 02CF                       u5541 010D  
                     u6237 109B                       u6190 1343                       u3950 178A  
                     u3870 1730                       u3862 1718                       u3854 1705  
                     u5470 1E67                       u4910 1F39                       u5630 02EB  
                     u5550 0112                       u6191 1342                       u6175 1304  
                     u4495 19C7                       u3951 1789                       u3871 172F  
                     u3863 1719                       u3855 170A                       u3791 169D  
                     u4911 1F38                       u4815 1ED6                       u4575 14A6  
                     u5631 02EA                       u5615 0276                       u5551 0111  
                     u6247 10D7                       u3960 1790                       u3880 1755  
                     u3856 170B                       u3792 16A4                       u5480 1E77  
                     u4920 1F4F                       u4840 1F04                       u5800 06CA  
                     u5720 04E1                       u5640 0312                       u5560 0141  
                     u6185 1322                       u6257 1910                       u3961 178F  
                     u3881 1754                       u3793 16AB                       u5481 1E76  
                     u4921 1F4E                       u4905 1F2B                       u4841 1F03  
                     u4825 1EE7                       u4585 14F3                       u4745 0BFD  
                     u4665 0A52                       u5801 06C9                       u5721 04E0  
                     u5641 0311                       u5625 02CC                       u5561 0140  
                     u3970 1797                       u3890 175A                       u5490 1E7B  
                     u4930 1F63                       u4850 1F08                       u4770 18F7  
                     u4690 0AFB                       u5810 06DF                       u5730 0502  
                     u5650 0321                       u5570 017B                       u6195 133F  
                     u6267 1BCD                       u3971 1796                       u3891 1759  
                     u5491 1E7A                       u5475 1E62                       u5395 1E08  
                     u4931 1F62                       u4851 1F07                       u4835 1EF7  
                     u4595 153F                       u4771 18F6                       u4755 0C39  
                     u4691 0AFA                       u4675 0A8E                       u5811 06DE  
                     u5731 0501                       u5715 0457                       u5651 0320  
                     u5571 017A                       u3980 179D                       u4860 1F0F  
                     u4780 18FD                       u5900 07D9                       u5820 06E7  
                     u5740 0511                       u5660 033C                       u5580 01B6  
                     u6277 1BDC                       u3981 179C                       u4861 1F0E  
                     u4781 18FC                       u4765 0C75                       u4685 0ACA  
                     u5901 07D8                       u5821 06E6                       u5741 0510  
                     u5661 033B                       u5581 01B5                       u3990 17AF  
                     u4950 1FA4                       u4790 1E98                       u5910 07EB  
                     u5750 052C                       u5590 023F                       u6287 1BEB  
                     u3991 17AE                       u4951 1FA3                       u4791 1E97  
                     u5911 07EA                       u5751 052B                       u5735 04FE  
                     u5655 031D                       u5591 023E                       u5920 11A1  
                     u4880 1F21                       u5840 0725                       u5680 0431  
                     u5921 11A0                       u6297 1013                       u4945 1F8B  
                     u4881 1F20                       u5841 0724                       u5745 050D  
                     u5681 0430                       u5930 11A7                       u4970 1FC2  
                     u4890 1F28                       u5850 0730                       u5690 043C  
                     u5931 11A6                       u4971 1FC1                       u4955 1FA0  
                     u4891 1F27                       u4875 1F11                       u5851 072F  
                     u5835 06F2                       u5691 043B                       u5675 03FE  
                     u5940 11AC                       u4980 1FC6                       u5860 073B  
                     u5780 0698                       u5941 11AB                       u4981 1FC5  
                     u4965 1FB5                       u5861 073A                       u5845 0721  
                     u5781 0697                       u5765 05B3                       u5685 042D  
                     u5950 11CE                       u4990 1FCD                       u5870 074B  
                     u5790 06B0                       u5951 11CD                       u4991 1FCC  
                     u5871 074A                       u5791 06AF                       u5775 0639  
                     u5960 11D4                       u5880 0762                       u5961 11D3  
                     u5881 0761                       u5865 0737                       u5970 11D9  
                     u5971 11D8                       u5875 0747                       u5980 11F4  
                     u5981 11F3                       u5990 1212                       u5991 1211  
                     u5895 077D          ?_Lcd_Write_String 0073                       _main 101C  
                     btemp 007E                       _volt 00DE                       start 0000  
       ??_Lcd_Write_String 0075            ___fldiv@new_exp 0050            __end_of_Lcd_Cmd 101C  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070              ___fltol@sign1 005A            __end_of___fladd 1800  
                    ?_main 0070            __end_of___fldiv 136D            __end_of___awdiv 006D  
          __end_of___flneg 18E2            __end_of___awmod 1CC3            __end_of___flmul 1000  
          __end_of___flsub 1BC3            __end_of___fltol 0940                      _ANSEL 0188  
          __end_of___lldiv 1D29            ___awdiv@divisor 0077            __end_of___llmod 1C6A  
          __end_of___lwdiv 1B25            __end_of___lwmod 1A61            ___awdiv@counter 0020  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063            __end_of_dpowers 08A0  
                    _scale 0940            __end_of_isdigit 1901                      _senms 00DA  
                    _setup 19ED                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F0           __end_of_Lcd_Init 1C14  
         __end_of_Lcd_Port 1A9F            __initialization 07F0               __end_of_main 1190  
                   ??_main 00CF       __size_of__tdiv_to_l_ 00BD          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
         ___llmod@dividend 0024                     ?_scale 003E           ___awdiv@dividend 0079  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0016                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 1E85           __end_of__powers_ 0844                     ___flge 1D29  
                   ___fleq 1B25                  ??___fladd 0060                     ___wmul 193B  
                ??___fldiv 0046                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0028  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 136D  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_sprintf 00B1  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070                 ___fltol@f1 0051  
           __pcstackCOMMON 0070              __end_of_scale 0C9F              __end_of_setup 1A27  
           _Lcd_Set_Cursor 1917                 __div_to_l_ 1F42                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020                    ??_setup 007E  
               __pbssBANK0 006C                 __pbssBANK1 00D4              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1987                 __pmaintext 101C  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_fround 003E  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 193B  
                ?___xxtofl 0070                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0800  
           _Lcd_Write_Char 1901                    _Lcd_Cmd 1002          __end_of__npowers_ 0878  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 1578  
                  ___fldiv 1190                    ___awdiv 0004                    ___flneg 18D7  
                  ___awmod 1C6A                    ___flmul 0C9F                    ___flsub 1B73  
                  ___fltol 08C4                    ___lldiv 1CC3            __size_of___wmul 0025  
                  ___llmod 1C14                    ___lwdiv 1AE1                 _fround$956 004D  
               _fround$957 0049                    ___lwmod 1A27            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 006D                    __ptext2 0940  
                  __ptext3 1C6A                    __ptext4 0004                    __ptext5 18EF  
                  __ptext6 136D                    __ptext7 1A27                    __ptext8 1AE1  
                  __ptext9 0C9F                ?__div_to_l_ 0070                    _dpowers 0878  
                  _isdigit 18EF                 ??___xxtofl 0074           ___awmod@dividend 0072  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _sprintf 006D                    clrloop0 18B4  
   __end_of_Lcd_Write_Char 1917       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
              ___fladd@grs 006B              ___xxtofl@sign 0078                  _TRISCbits 0087  
              ___fldiv@grs 0052                ___fldiv@rem 004B            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                ___flmul@grs 0032  
      __size_of__div_to_l_ 00BE             __end_of___flge 1DCB             __end_of___fleq 1B73  
           __end_of___wmul 1960           _Lcd_Write_String 1A9F             __end_of_fround 1578  
      start_initialization 07F0        __end_of__tdiv_to_l_ 1F42          __size_of_Lcd_Init 0051  
        __size_of_Lcd_Port 003E          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070            ___llmod@divisor 0020  
          ___llmod@counter 0029                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1960            Lcd_Write_Char@a 0072  
                 ??_fround 0042              sprintf@tmpval 00BF                  ___fladd@a 005C  
                ___fladd@b 0058                 fround@prec 0051                  ___fldiv@a 003E  
                ___fldiv@b 0042                  ___flmul@a 0028                  ___flmul@b 0024  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BA  
                 ?_Lcd_Cmd 0070                sprintf@flag 00BB                sprintf@eexp 00BD  
              sprintf@fval 00C8                sprintf@prec 00CC           _I2C_Master_Start 18BB  
         _I2C_Master_Write 18CD           ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075  
                 ?___fladd 0058                   ?___fldiv 003E                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 00A0                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0020                  __npowers_ 0844                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 0800  
              __tdiv_to_l_ 1E85               ??__div_to_l_ 0078                   ?_isdigit 0070  
                _scale$958 004C           ___lwdiv@quotient 007B                   ?_sprintf 00A8  
           __size_of_scale 035F             __size_of_setup 003A             ___wmul@product 0074  
                clear_ram0 18B3                   Lcd_Cmd@a 0073         __end_of__div_to_l_ 2000  
                _sensorval 00D8                __stringbase 080F          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 1BC3                   _Lcd_Port 1A61  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 1AE1           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___fladd 0288           __size_of___fldiv 01DD  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0056           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0810                _isdigit$767 0070  
               sprintf@val 00C3            _I2C_Master_Init 19B5            _I2C_Master_Read 1987  
                 ___xxtofl 1DCB            _I2C_Master_Wait 18E2            _I2C_Master_Stop 18C4  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1960                   __ptext11 1E85                   __ptext20 1D29  
                 __ptext12 1F42                   __ptext21 1B25                   __ptext13 1DCB  
                 __ptext30 1CC3                   __ptext22 19ED                   __ptext14 193B  
                 __ptext31 1190                   __ptext23 1A9F                   __ptext15 1C14  
                 __ptext32 18CD                   __ptext24 1901                   __ptext16 08C4  
                 __ptext33 18C4                   __ptext25 1917                   __ptext17 1B73  
                 __ptext34 18BB                   __ptext26 1BC3                   __ptext18 1578  
                 __ptext35 1987                   __ptext27 1002                   __ptext19 18D7  
                 __ptext36 18E2                   __ptext28 1A61                   __ptext29 19B5  
                 __powers_ 0810           __size_of_sprintf 0783              __size_of_main 0174  
 __end_of_I2C_Master_Start 18C4   __end_of_I2C_Master_Write 18D7                   isdigit@c 0071  
                 scale@scl 0050                  sprintf@ap 00BA           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00C7           __tdiv_to_l_@quot 0020  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 080A  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 19ED    __end_of_I2C_Master_Read 19B5  
  __end_of_I2C_Master_Wait 18EF    __end_of_I2C_Master_Stop 18CD         Lcd_Set_Cursor@temp 0077  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00CE  
                 sprintf@f 00A8           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 080A  
                 stringtab 0800                _SSPCON2bits 0091              ___fladd@signs 0068  
             ___fladd@aexp 0069               ___fladd@bexp 006A       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
